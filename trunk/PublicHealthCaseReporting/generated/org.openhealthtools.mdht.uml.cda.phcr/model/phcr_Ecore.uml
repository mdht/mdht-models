<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_6MwukMgnEeCI5ZpfyBisiQ" name="phcr">
    <packageImport xmi:id="_6Qoh8MgnEeCI5ZpfyBisiQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_qQyD8jxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_6Qoh8cgnEeCI5ZpfyBisiQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_6Qoh8sgnEeCI5ZpfyBisiQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_6Qoh88gnEeCI5ZpfyBisiQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.vocab/model/vocab.uml#__yVbeUDcEd6xYZuu1VKCVw"/>
    </packageImport>
    <packageImport xmi:id="_6Qoh9MgnEeCI5ZpfyBisiQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_KnCD4CFjEd-3s7f6mWX-3A"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_6PmAIcgnEeCI5ZpfyBisiQ" name="PublicHealthCaseReport">
      <ownedRule xmi:id="_8pwZMDGVEeGTgcZY2IhX4g" name="PublicHealthCaseReportPHCRRecordTarget" constrainedElement="_6PmAIcgnEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Bz90QDGWEeGTgcZY2IhX4g">
          <language>OCL</language>
          <body>self.recordTarget->one(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VgwH8DGWEeGTgcZY2IhX4g" name="PublicHealthCaseReportPHCRRecordTargetPatientRole" constrainedElement="_6PmAIcgnEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YtM10DGWEeGTgcZY2IhX4g">
          <language>OCL</language>
          <body>self.recordTarget.patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_rKHdEDGWEeGTgcZY2IhX4g" name="PublicHealthCaseReportPHCRRecordTargetPatientRoleId" constrainedElement="_6PmAIcgnEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6xEMDGWEeGTgcZY2IhX4g">
          <language>OCL</language>
          <body>self.recordTarget.patientRole.id->exists(id : datatypes::II | not id.root.oclIsUndefined() or not id.extension.oclIsUndefined() or not id.nullFlavor.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_By9f8DGcEeGTgcZY2IhX4g" name="PublicHealthCaseReportPHCRAuthor" constrainedElement="_6PmAIcgnEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_DdWlMDGcEeGTgcZY2IhX4g">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_PaiI4DGcEeGTgcZY2IhX4g" name="PublicHealthCaseReportPHCRAuthorTiime" constrainedElement="_By9f8DGcEeGTgcZY2IhX4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_TDvEMDGcEeGTgcZY2IhX4g">
          <language>OCL</language>
          <body>self.author.time->one(time : datatypes::TS | not time.value.oclIsUndefined() or not time.nullFlavor.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrcZkDGeEeGTgcZY2IhX4g" name="PublicHealthCaseReportPHCRAuthorAssignedAuthor" constrainedElement="_PaiI4DGcEeGTgcZY2IhX4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_yrXuYDGeEeGTgcZY2IhX4g">
          <language>OCL</language>
          <body>self.author.assignedAuthor->one(assignedAuthor : cda::AssignedAuthor | not assignedAuthor.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-1zq8DGeEeGTgcZY2IhX4g" name="PublicHealthCaseReportPHCRAuthorAssignedAuthorId" constrainedElement="_vrcZkDGeEeGTgcZY2IhX4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_BwONoDGfEeGTgcZY2IhX4g">
          <language>OCL</language>
          <body>self.author.assignedAuthor.id->exists(id : datatypes::II | not id.root.oclIsUndefined() or not id.extension.oclIsUndefined() or not id.nullFlavor.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_MpdBADGfEeGTgcZY2IhX4g" name="PublicHealthCaseReportPHCRAuthorAssignedAuthorAddr" constrainedElement="_-1zq8DGeEeGTgcZY2IhX4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_P-PLgDGfEeGTgcZY2IhX4g">
          <language>OCL</language>
          <body>self.author.assignedAuthor.addr->one(addr : datatypes::AD | not addr.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Zn5NYDGfEeGTgcZY2IhX4g" name="PublicHealthCaseReportPHCRAuthorAssignedAuthorTelecom" constrainedElement="_MpdBADGfEeGTgcZY2IhX4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cvt58DGfEeGTgcZY2IhX4g">
          <language>OCL</language>
          <body>self.author.assignedAuthor.telecom->one(tel : datatypes::TEL | not tel.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Qb7IDGfEeGTgcZY2IhX4g" name="PublicHealthCaseReportPHCRAuthorAssignedAuthorAssignedPersonName" constrainedElement="_vrcZkDGeEeGTgcZY2IhX4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_9s-lMDGfEeGTgcZY2IhX4g">
          <language>OCL</language>
          <body>self.author.assignedAuthor.assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined()) and self.author.assignedAuthor.assignedPerson.name->one(name : datatypes::PN | not name.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_5ENYYDGhEeGTgcZY2IhX4g" name="PublicHealthCaseReportPHCRLegalAuthenticator">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_7eu6EDGhEeGTgcZY2IhX4g">
          <language>OCL</language>
          <body>self.legalAuthenticator->one(legalAuthenticator : cda::LegalAuthenticator | not legalAuthenticator.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_9foa0DGhEeGTgcZY2IhX4g" name="PublicHealthCaseReportPHCRLegalAuthenticatorTime" constrainedElement="_5ENYYDGhEeGTgcZY2IhX4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_BZN7gDGiEeGTgcZY2IhX4g">
          <language>OCL</language>
          <body>self.legalAuthenticator.time->one(time : datatypes::TS | not time.value.oclIsUndefined() or not time.nullFlavor.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_KHRQwDGiEeGTgcZY2IhX4g" name="PublicHealthCaseReportPHCRLegalAuthenticatorAssignedEntity" constrainedElement="_5ENYYDGhEeGTgcZY2IhX4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OoDUUDGiEeGTgcZY2IhX4g">
          <language>OCL</language>
          <body>self.legalAuthenticator.assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_L1J7MDIsEeGfRanst07TlA" name="PublicHealthCaseReportPHCRLegalAuthenticatorAssignedEntityId" constrainedElement="_KHRQwDGiEeGTgcZY2IhX4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_PdBZwDIsEeGfRanst07TlA">
          <language>OCL</language>
          <body>self.legalAuthenticator.assignedEntity.id->exists(id : datatypes::II | not id.root.oclIsUndefined() or not id.extension.oclIsUndefined() or not id.nullFlavor.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b5fhgDIsEeGfRanst07TlA" name="PublicHealthCaseReportPHCRLegalAuthenticatorAssignedEntityAddr" constrainedElement="_L1J7MDIsEeGfRanst07TlA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ell7YDIsEeGfRanst07TlA">
          <language>OCL</language>
          <body>self.legalAuthenticator.assignedEntity.addr->one(addr : datatypes::AD | not addr.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uG6UMDIsEeGfRanst07TlA" name="PublicHealthCaseReportPHCRLegalAuthenticatorAssignedEntityAssignedPersonName">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_yGw08DIsEeGfRanst07TlA">
          <language>OCL</language>
          <body>self.legalAuthenticator.assignedEntity.assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined()) and self.legalAuthenticator.assignedEntity.assignedPerson.name->one(name : datatypes::PN | not name.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aAdxIO1qEeGeHKjzItayOg" name="PublicHealthCaseReportTemplateId" constrainedElement="_6PmAIcgnEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aAdxIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aAqlcO1qEeGeHKjzItayOg" name="PublicHealthCaseReportCodeP" constrainedElement="_6PmAIcgnEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aAqlce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aAowQO1qEeGeHKjzItayOg" name="PublicHealthCaseReportCode" constrainedElement="_6PmAIcgnEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aAowQe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '55751-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBFcMO1qEeGeHKjzItayOg" name="PublicHealthCaseReportPhcrSocialHistorySection" constrainedElement="_6PmAIcgnEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBFcMe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(phcr::PhcrSocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCXOkO1qEeGeHKjzItayOg" name="PublicHealthCaseReportPhcrClinicalInformationSection" constrainedElement="_6PmAIcgnEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCXOke1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(phcr::PhcrClinicalInformationSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCfxcO1qEeGeHKjzItayOg" name="PublicHealthCaseReportPhcrTreatmentInformationSection" constrainedElement="_6PmAIcgnEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCfxce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(phcr::PhcrTreatmentInformationSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCoUUO1qEeGeHKjzItayOg" name="PublicHealthCaseReportPhcrEncountersSection" constrainedElement="_6PmAIcgnEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCoUUe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(phcr::PhcrEncountersSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFW4MO1qEeGeHKjzItayOg" name="PublicHealthCaseReportPhcrRelevantDxTestsSection" constrainedElement="_6PmAIcgnEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFXfQO1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(phcr::PhcrRelevantDxTestsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFYGVe1qEeGeHKjzItayOg" name="PublicHealthCaseReportImmunizationsSection" constrainedElement="_6PmAIcgnEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFYGVu1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_8Ty3EMgoEeCI5ZpfyBisiQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_S9OzADxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_aBGDQO1qEeGeHKjzItayOg" name="getPhcrSocialHistorySection" isQuery="true" bodyCondition="_aBGDQ-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aBGDQ-1qEeGeHKjzItayOg" name="body" constrainedElement="_aBGDQO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBGDRO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(phcr::PhcrSocialHistorySection))->asSequence()->any(true).oclAsType(phcr::PhcrSocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aBGDQe1qEeGeHKjzItayOg" type="_Fw7f4MgpEeCI5ZpfyBisiQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aBGDQu1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aCX1oO1qEeGeHKjzItayOg" name="getPhcrClinicalInformationSection" isQuery="true" bodyCondition="_aCX1o-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aCX1o-1qEeGeHKjzItayOg" name="body" constrainedElement="_aCX1oO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCX1pO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(phcr::PhcrClinicalInformationSection))->asSequence()->any(true).oclAsType(phcr::PhcrClinicalInformationSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aCX1oe1qEeGeHKjzItayOg" type="_84uJEMqZEeCRBIG_Gkv9FQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aCX1ou1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aCgYgO1qEeGeHKjzItayOg" name="getPhcrTreatmentInformationSection" isQuery="true" bodyCondition="_aCgYg-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aCgYg-1qEeGeHKjzItayOg" name="body" constrainedElement="_aCgYgO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCgYhO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(phcr::PhcrTreatmentInformationSection))->asSequence()->any(true).oclAsType(phcr::PhcrTreatmentInformationSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aCgYge1qEeGeHKjzItayOg" type="_XTjpIMqaEeCRBIG_Gkv9FQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aCgYgu1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aCo7YO1qEeGeHKjzItayOg" name="getPhcrEncountersSection" isQuery="true" bodyCondition="_aCo7Y-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aCo7Y-1qEeGeHKjzItayOg" name="body" constrainedElement="_aCo7YO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCo7ZO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(phcr::PhcrEncountersSection))->asSequence()->any(true).oclAsType(phcr::PhcrEncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aCo7Ye1qEeGeHKjzItayOg" type="_2SAeUMqaEeCRBIG_Gkv9FQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aCo7Yu1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aFYGUO1qEeGeHKjzItayOg" name="getPhcrRelevantDxTestsSection" isQuery="true" bodyCondition="_aFYGU-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aFYGU-1qEeGeHKjzItayOg" name="body" constrainedElement="_aFYGUO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFYGVO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(phcr::PhcrRelevantDxTestsSection))->asSequence()->any(true).oclAsType(phcr::PhcrRelevantDxTestsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aFYGUe1qEeGeHKjzItayOg" type="_2dxgkNM5EeCbJdgmSYxI0g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aFYGUu1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aFZUcO1qEeGeHKjzItayOg" name="getImmunizationsSection" isQuery="true" bodyCondition="_aFZUc-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aFZUc-1qEeGeHKjzItayOg" name="body" constrainedElement="_aFZUcO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFZUdO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::ImmunizationsSection))->asSequence()->any(true).oclAsType(ccd::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aFZUce1qEeGeHKjzItayOg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_CinbMHDPEd6eItyqb1FoWg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aFZUcu1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Fw7f4MgpEeCI5ZpfyBisiQ" name="PhcrSocialHistorySection">
      <ownedRule xmi:id="_aAsaoe1qEeGeHKjzItayOg" name="SocialHistorySectionTemplateId" constrainedElement="_Fw7f4MgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aAsaou1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.2.22')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aAvd8O1qEeGeHKjzItayOg" name="PhcrSocialHistorySectionCodeP" constrainedElement="_Fw7f4MgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aAwFAO1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aAuP0O1qEeGeHKjzItayOg" name="PhcrSocialHistorySectionCode" constrainedElement="_Fw7f4MgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aAuP0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '29762-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aAx6MO1qEeGeHKjzItayOg" name="PhcrSocialHistorySectionTitle" constrainedElement="_Fw7f4MgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aAx6Me1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'Social History')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aAzIUO1qEeGeHKjzItayOg" name="PhcrSocialHistorySectionText" constrainedElement="_Fw7f4MgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aAzIUe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBS3kO1qEeGeHKjzItayOg" name="PhcrSocialHistorySectionGeotemporalHistoryObservation" constrainedElement="_Fw7f4MgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBS3ke1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(phcr::GeotemporalHistoryObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCOEoO1qEeGeHKjzItayOg" name="PhcrSocialHistorySectionMostRecentTimeArrivedInUSAObservation" constrainedElement="_Fw7f4MgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCOEoe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(phcr::MostRecentTimeArrivedInUSAObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCkp8O1qEeGeHKjzItayOg" name="PhcrSocialHistorySectionRaceObservation" constrainedElement="_Fw7f4MgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCkp8e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(phcr::RaceObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCl4Ee1qEeGeHKjzItayOg" name="PhcrSocialHistorySectionOccupationObservation" constrainedElement="_Fw7f4MgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCl4Eu1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(phcr::OccupationObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCnGMO1qEeGeHKjzItayOg" name="PhcrSocialHistorySectionPregnancyObservation" constrainedElement="_Fw7f4MgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCnGMe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(phcr::PregnancyObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NczUoNorEeCNdpppbqULhw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_UOVM0HDAEd6eItyqb1FoWg"/>
      </generalization>
      <ownedOperation xmi:id="_aBTeoO1qEeGeHKjzItayOg" name="getGeotemporalHistoryObservations" isQuery="true" bodyCondition="_aBUFse1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aBUFse1qEeGeHKjzItayOg" name="body" constrainedElement="_aBTeoO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBUFsu1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::GeotemporalHistoryObservation)).oclAsType(phcr::GeotemporalHistoryObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aBTeoe1qEeGeHKjzItayOg" type="_na5gIMgpEeCI5ZpfyBisiQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aBUFsO1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aCOrsO1qEeGeHKjzItayOg" name="getMostRecentTimeArrivedInUSAObservation" isQuery="true" bodyCondition="_aCOrs-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aCOrs-1qEeGeHKjzItayOg" name="body" constrainedElement="_aCOrsO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCOrtO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::MostRecentTimeArrivedInUSAObservation))->asSequence()->any(true).oclAsType(phcr::MostRecentTimeArrivedInUSAObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aCOrse1qEeGeHKjzItayOg" type="_DH3mQMnGEeCRBIG_Gkv9FQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aCOrsu1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aClRAO1qEeGeHKjzItayOg" name="getRaceObservations" isQuery="true" bodyCondition="_aClRA-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aClRA-1qEeGeHKjzItayOg" name="body" constrainedElement="_aClRAO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCl4EO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::RaceObservation)).oclAsType(phcr::RaceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aClRAe1qEeGeHKjzItayOg" type="_3LQf4Mg8EeCkXZRmGSVUHA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aClRAu1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aCmfIO1qEeGeHKjzItayOg" name="getOccupationObservations" isQuery="true" bodyCondition="_aCmfI-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aCmfI-1qEeGeHKjzItayOg" name="body" constrainedElement="_aCmfIO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCmfJO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::OccupationObservation)).oclAsType(phcr::OccupationObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aCmfIe1qEeGeHKjzItayOg" type="_bcgx0MhFEeCkXZRmGSVUHA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aCmfIu1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aCntQO1qEeGeHKjzItayOg" name="getPregnancyObservations" isQuery="true" bodyCondition="_aCntQ-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aCntQ-1qEeGeHKjzItayOg" name="body" constrainedElement="_aCntQO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCntRO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::PregnancyObservation)).oclAsType(phcr::PregnancyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aCntQe1qEeGeHKjzItayOg" type="_bkm3gMg9EeCkXZRmGSVUHA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aCntQu1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_na5gIMgpEeCI5ZpfyBisiQ" name="GeotemporalHistoryObservation">
      <ownedRule xmi:id="_aA0WcO1qEeGeHKjzItayOg" name="GeotemporalHistoryObservationTemplateId" constrainedElement="_na5gIMgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aA0Wce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aA1kkO1qEeGeHKjzItayOg" name="GeotemporalHistoryObservationClassCode" constrainedElement="_na5gIMgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aA1kke1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aA2ysO1qEeGeHKjzItayOg" name="GeotemporalHistoryObservationMoodCode" constrainedElement="_na5gIMgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aA2yse1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aA52AO1qEeGeHKjzItayOg" name="GeotemporalHistoryObservationCodeP" constrainedElement="_na5gIMgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aA52Ae1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aA4n4O1qEeGeHKjzItayOg" name="GeotemporalHistoryObservationCode" constrainedElement="_na5gIMgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aA4n4e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '55210-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aA8SQO1qEeGeHKjzItayOg" name="GeotemporalHistoryObservationText" constrainedElement="_na5gIMgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aA8SQe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aA-HcO1qEeGeHKjzItayOg" name="GeotemporalHistoryObservationStatusCode" constrainedElement="_na5gIMgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aA-Hce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aA_8oO1qEeGeHKjzItayOg" name="GeotemporalHistoryObservationStatusCodeP" constrainedElement="_na5gIMgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aA_8oe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBBx0O1qEeGeHKjzItayOg" name="GeotemporalHistoryObservationEffectiveTime" constrainedElement="_na5gIMgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBBx0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBDnAO1qEeGeHKjzItayOg" name="GeotemporalHistoryObservationValue" constrainedElement="_na5gIMgpEeCI5ZpfyBisiQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBDnAe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_na5gIcgpEeCI5ZpfyBisiQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3LQf4Mg8EeCkXZRmGSVUHA" name="RaceObservation">
      <ownedRule xmi:id="_aBGDRe1qEeGeHKjzItayOg" name="RaceObservationTemplateId" constrainedElement="_3LQf4Mg8EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBGDRu1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBHRYO1qEeGeHKjzItayOg" name="RaceObservationClassCode" constrainedElement="_3LQf4Mg8EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBHRYe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBIfgO1qEeGeHKjzItayOg" name="RaceObservationMoodCode" constrainedElement="_3LQf4Mg8EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBIfge1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBLi0O1qEeGeHKjzItayOg" name="RaceObservationCodeP" constrainedElement="_3LQf4Mg8EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBLi0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBKUsO1qEeGeHKjzItayOg" name="RaceObservationCode" constrainedElement="_3LQf4Mg8EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBKUse1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '32624-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBNYAO1qEeGeHKjzItayOg" name="RaceObservationStatusCode" constrainedElement="_3LQf4Mg8EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBN_EO1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBPNMO1qEeGeHKjzItayOg" name="RaceObservationStatusCodeP" constrainedElement="_3LQf4Mg8EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBPNMe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBRpcO1qEeGeHKjzItayOg" name="RaceObservationValue" constrainedElement="_3LQf4Mg8EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBRpce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_3LQf4cg8EeCkXZRmGSVUHA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bkm3gMg9EeCkXZRmGSVUHA" name="PregnancyObservation">
      <ownedRule xmi:id="_aBUFs-1qEeGeHKjzItayOg" name="PregnancyObservationTemplateId" constrainedElement="_bkm3gMg9EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBUFtO1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBVT0O1qEeGeHKjzItayOg" name="PregnancyObservationClassCode" constrainedElement="_bkm3gMg9EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBVT0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBWh8O1qEeGeHKjzItayOg" name="PregnancyObservationMoodCode" constrainedElement="_bkm3gMg9EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBWh8e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBZlQO1qEeGeHKjzItayOg" name="PregnancyObservationCodeP" constrainedElement="_bkm3gMg9EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBZlQe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBXwEO1qEeGeHKjzItayOg" name="PregnancyObservationCode" constrainedElement="_bkm3gMg9EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBXwEe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBcBgO1qEeGeHKjzItayOg" name="PregnancyObservationStatusCode" constrainedElement="_bkm3gMg9EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBcBge1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBdPoO1qEeGeHKjzItayOg" name="PregnancyObservationStatusCodeP" constrainedElement="_bkm3gMg9EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBdPoe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBfE0O1qEeGeHKjzItayOg" name="PregnancyObservationEffectiveTime" constrainedElement="_bkm3gMg9EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBfE0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBgS8O1qEeGeHKjzItayOg" name="PregnancyObservationValue" constrainedElement="_bkm3gMg9EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBgS8e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.code = '77386006' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBiIIO1qEeGeHKjzItayOg" name="PregnancyObservationValueP" constrainedElement="_bkm3gMg9EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBiIIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBu8cO1qEeGeHKjzItayOg" name="PregnancyObservationEstimatedDateOfDeliveryObservation" constrainedElement="_bkm3gMg9EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBu8ce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(phcr::EstimatedDateOfDeliveryObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_bkm3gcg9EeCkXZRmGSVUHA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_aBvjgO1qEeGeHKjzItayOg" name="getEstimatedDateOfDeliveryObservation" isQuery="true" bodyCondition="_aBvjg-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aBvjg-1qEeGeHKjzItayOg" name="body" constrainedElement="_aBvjgO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBwKkO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::EstimatedDateOfDeliveryObservation))->asSequence()->any(true).oclAsType(phcr::EstimatedDateOfDeliveryObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aBvjge1qEeGeHKjzItayOg" type="_sQmeQMg-EeCkXZRmGSVUHA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aBvjgu1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sQmeQMg-EeCkXZRmGSVUHA" name="EstimatedDateOfDeliveryObservation">
      <ownedRule xmi:id="_aBjWQO1qEeGeHKjzItayOg" name="EstimatedDateOfDeliveryObservationTemplateId" constrainedElement="_sQmeQMg-EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBjWQe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBkkYO1qEeGeHKjzItayOg" name="EstimatedDateOfDeliveryObservationClassCode" constrainedElement="_sQmeQMg-EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBkkYe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBlygO1qEeGeHKjzItayOg" name="EstimatedDateOfDeliveryObservationMoodCode" constrainedElement="_sQmeQMg-EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBlyge1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBo10O1qEeGeHKjzItayOg" name="EstimatedDateOfDeliveryObservationCodeP" constrainedElement="_sQmeQMg-EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBo10e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBnAoO1qEeGeHKjzItayOg" name="EstimatedDateOfDeliveryObservationCode" constrainedElement="_sQmeQMg-EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBnAoe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '11778-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBqrAO1qEeGeHKjzItayOg" name="EstimatedDateOfDeliveryObservationStatusCode" constrainedElement="_sQmeQMg-EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBqrAe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBsgMO1qEeGeHKjzItayOg" name="EstimatedDateOfDeliveryObservationStatusCodeP" constrainedElement="_sQmeQMg-EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBsgMe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBuVYO1qEeGeHKjzItayOg" name="EstimatedDateOfDeliveryObservationValue" constrainedElement="_sQmeQMg-EeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBuVYe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sQmeQcg-EeCkXZRmGSVUHA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bcgx0MhFEeCkXZRmGSVUHA" name="OccupationObservation">
      <ownedRule xmi:id="_aBwKke1qEeGeHKjzItayOg" name="OccupationObservationTemplateId" constrainedElement="_bcgx0MhFEeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBwKku1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBx_wO1qEeGeHKjzItayOg" name="OccupationObservationClassCode" constrainedElement="_bcgx0MhFEeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBx_we1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBzN4O1qEeGeHKjzItayOg" name="OccupationObservationMoodCode" constrainedElement="_bcgx0MhFEeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBzN4e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aBz08O1qEeGeHKjzItayOg" name="OccupationObservationNegationInd" constrainedElement="_bcgx0MhFEeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aB0cAO1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aB24QO1qEeGeHKjzItayOg" name="OccupationObservationCodeP" constrainedElement="_bcgx0MhFEeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aB24Qe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aB1qIO1qEeGeHKjzItayOg" name="OccupationObservationCode" constrainedElement="_bcgx0MhFEeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aB1qIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '11341-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aB5UgO1qEeGeHKjzItayOg" name="OccupationObservationText" constrainedElement="_bcgx0MhFEeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aB5Uge1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aB7JsO1qEeGeHKjzItayOg" name="OccupationObservationStatusCode" constrainedElement="_bcgx0MhFEeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aB7Jse1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aB8-4O1qEeGeHKjzItayOg" name="OccupationObservationStatusCodeP" constrainedElement="_bcgx0MhFEeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aB8-4e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aB-0EO1qEeGeHKjzItayOg" name="OccupationObservationEffectiveTime" constrainedElement="_bcgx0MhFEeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aB-0Ee1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCApQO1qEeGeHKjzItayOg" name="OccupationObservationValue" constrainedElement="_bcgx0MhFEeCkXZRmGSVUHA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCApQe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_bcgx0chFEeCkXZRmGSVUHA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DH3mQMnGEeCRBIG_Gkv9FQ" name="MostRecentTimeArrivedInUSAObservation">
      <ownedRule xmi:id="_aCCecO1qEeGeHKjzItayOg" name="MostRecentTimeArrivedInUSAObservationTemplateId" constrainedElement="_DH3mQMnGEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCCece1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCDskO1qEeGeHKjzItayOg" name="MostRecentTimeArrivedInUSAObservationClassCode" constrainedElement="_DH3mQMnGEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCDske1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCE6sO1qEeGeHKjzItayOg" name="MostRecentTimeArrivedInUSAObservationMoodCode" constrainedElement="_DH3mQMnGEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCE6se1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCH-AO1qEeGeHKjzItayOg" name="MostRecentTimeArrivedInUSAObservationCodeP" constrainedElement="_DH3mQMnGEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCH-Ae1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCGI0O1qEeGeHKjzItayOg" name="MostRecentTimeArrivedInUSAObservationCode" constrainedElement="_DH3mQMnGEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCGI0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '55209-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCJzMO1qEeGeHKjzItayOg" name="MostRecentTimeArrivedInUSAObservationStatusCode" constrainedElement="_DH3mQMnGEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCJzMe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCLoYO1qEeGeHKjzItayOg" name="MostRecentTimeArrivedInUSAObservationStatusCodeP" constrainedElement="_DH3mQMnGEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCLoYe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCM2gO1qEeGeHKjzItayOg" name="MostRecentTimeArrivedInUSAObservationValue" constrainedElement="_DH3mQMnGEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCM2ge1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DH3mQcnGEeCRBIG_Gkv9FQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_84uJEMqZEeCRBIG_Gkv9FQ" name="PhcrClinicalInformationSection">
      <ownedRule xmi:id="_l-P04DI1EeGfRanst07TlA" name="PhcrClinicalInformationSectionPatientConditionConstraint" constrainedElement="_84uJEMqZEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qv3w0DI1EeGfRanst07TlA">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs3 : cda::Observation | obs3.oclIsKindOf(phcr::PatientConditionAliveObservation) and not self.getObservations()->exists(obs4 : cda::Observation | obs4.oclIsKindOf(phcr::PatientConditionDeceasedObservation))) or self.getObservations()->exists(obs1 : cda::Observation | obs1.oclIsKindOf(phcr::PatientConditionDeceasedObservation) and not self.getObservations()->exists(obs2 : cda::Observation | obs2.oclIsKindOf(phcr::PatientConditionAliveObservation))) or self.getObservations()->forAll(obs : cda::Observation | not obs.oclIsKindOf(phcr::PatientConditionAliveObservation) and not obs.oclIsKindOf(phcr::PatientConditionDeceasedObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCPSwO1qEeGeHKjzItayOg" name="PhcrClinicalInformationSectionTemplateId" constrainedElement="_84uJEMqZEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCPSwe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.2.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCRH8O1qEeGeHKjzItayOg" name="PhcrClinicalInformationSectionCode" constrainedElement="_84uJEMqZEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCRH8e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '55752-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCSWEO1qEeGeHKjzItayOg" name="PhcrClinicalInformationSectionCodeP" constrainedElement="_84uJEMqZEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCSWEe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCUyUO1qEeGeHKjzItayOg" name="PhcrClinicalInformationSectionTitle" constrainedElement="_84uJEMqZEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCUyUe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'Clinical Information')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCWAcO1qEeGeHKjzItayOg" name="PhcrClinicalInformationSectionText" constrainedElement="_84uJEMqZEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCWAce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEUWYu1qEeGeHKjzItayOg" name="PhcrClinicalInformationSectionCaseObservation" constrainedElement="_84uJEMqZEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEUWY-1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(phcr::CaseObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEVkgO1qEeGeHKjzItayOg" name="PhcrClinicalInformationSectionPatientConditionAliveObservation" constrainedElement="_84uJEMqZEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEVkge1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(phcr::PatientConditionAliveObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEWLle1qEeGeHKjzItayOg" name="PhcrClinicalInformationSectionPatientConditionDeceasedObservation" constrainedElement="_84uJEMqZEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEWLlu1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(phcr::PatientConditionDeceasedObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFpzIO1qEeGeHKjzItayOg" name="PhcrClinicalInformationSectionPhcrRelevantMedicalConditionHistoryObservation" constrainedElement="_84uJEMqZEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFpzIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(phcr::PhcrRelevantMedicalConditionHistoryObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_84uJEcqZEeCRBIG_Gkv9FQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_aEU9cO1qEeGeHKjzItayOg" name="getCaseObservation" isQuery="true" bodyCondition="_aEU9c-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aEU9c-1qEeGeHKjzItayOg" name="body" constrainedElement="_aEU9cO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEU9dO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::CaseObservation))->asSequence()->any(true).oclAsType(phcr::CaseObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aEU9ce1qEeGeHKjzItayOg" type="_p8bDQNTCEeC18pmrrt-Mbg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aEU9cu1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aEWLkO1qEeGeHKjzItayOg" name="getPatientConditionAliveObservation" isQuery="true" bodyCondition="_aEWLk-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aEWLk-1qEeGeHKjzItayOg" name="body" constrainedElement="_aEWLkO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEWLlO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::PatientConditionAliveObservation))->asSequence()->any(true).oclAsType(phcr::PatientConditionAliveObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aEWLke1qEeGeHKjzItayOg" type="_h_hhcNM-EeCbJdgmSYxI0g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aEWLku1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aEWyoO1qEeGeHKjzItayOg" name="getPatientConditionDeceasedObservation" isQuery="true" bodyCondition="_aEXZsu1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aEXZsu1qEeGeHKjzItayOg" name="body" constrainedElement="_aEWyoO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEXZs-1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::PatientConditionDeceasedObservation))->asSequence()->any(true).oclAsType(phcr::PatientConditionDeceasedObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aEXZsO1qEeGeHKjzItayOg" type="_n3xuQNM-EeCbJdgmSYxI0g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aEXZse1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aFqaMO1qEeGeHKjzItayOg" name="getPhcrRelevantMedicalConditionHistoryObservations" isQuery="true" bodyCondition="_aFqaM-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aFqaM-1qEeGeHKjzItayOg" name="body" constrainedElement="_aFqaMO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFqaNO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::PhcrRelevantMedicalConditionHistoryObservation)).oclAsType(phcr::PhcrRelevantMedicalConditionHistoryObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aFqaMe1qEeGeHKjzItayOg" type="__6FcQKBIEeGDSOGpMxCO3w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aFqaMu1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_XTjpIMqaEeCRBIG_Gkv9FQ" name="PhcrTreatmentInformationSection">
      <ownedRule xmi:id="_aCYcsO1qEeGeHKjzItayOg" name="PhcrTreatmentInformationSectionTemplateId" constrainedElement="_XTjpIMqaEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCYcse1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.2.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCZq0O1qEeGeHKjzItayOg" name="PhcrTreatmentInformationSectionCode" constrainedElement="_XTjpIMqaEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCZq0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '55753-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCa48O1qEeGeHKjzItayOg" name="PhcrTreatmentInformationSectionCodeP" constrainedElement="_XTjpIMqaEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCbgAO1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCdVMO1qEeGeHKjzItayOg" name="PhcrTreatmentInformationSectionTitle" constrainedElement="_XTjpIMqaEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCdVMe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'Treatment Information')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCejUO1qEeGeHKjzItayOg" name="PhcrTreatmentInformationSectionText" constrainedElement="_XTjpIMqaEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCejUe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDq2IO1qEeGeHKjzItayOg" name="PhcrTreatmentInformationSectionTherapeuticRegimenAct" constrainedElement="_XTjpIMqaEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDq2Ie1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(phcr::TherapeuticRegimenAct) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XTjpIcqaEeCRBIG_Gkv9FQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_aDrdMO1qEeGeHKjzItayOg" name="getTherapeuticRegimenAct" isQuery="true" bodyCondition="_aDrdM-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aDrdM-1qEeGeHKjzItayOg" name="body" constrainedElement="_aDrdMO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDrdNO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(phcr::TherapeuticRegimenAct))->asSequence()->any(true).oclAsType(phcr::TherapeuticRegimenAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aDrdMe1qEeGeHKjzItayOg" type="_2p558NSrEeC18pmrrt-Mbg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aDrdMu1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2SAeUMqaEeCRBIG_Gkv9FQ" name="PhcrEncountersSection">
      <ownedRule xmi:id="_aCg_kO1qEeGeHKjzItayOg" name="EncountersSectionTemplateId" constrainedElement="_2SAeUMqaEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCg_ke1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.2.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCiNsO1qEeGeHKjzItayOg" name="PhcrEncountersSectionTitle" constrainedElement="_2SAeUMqaEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCiNse1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'Encounters')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCjb0O1qEeGeHKjzItayOg" name="PhcrEncountersSectionText" constrainedElement="_2SAeUMqaEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCjb0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aETIQO1qEeGeHKjzItayOg" name="PhcrEncountersSectionEncountersActivity" constrainedElement="_2SAeUMqaEeCRBIG_Gkv9FQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aETIQe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(ccd::EncountersActivity) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jedN8NorEeCNdpppbqULhw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_rJDcIHDAEd6eItyqb1FoWg"/>
      </generalization>
      <ownedOperation xmi:id="_aETvUO1qEeGeHKjzItayOg" name="getPHCREncountersActivities" isQuery="true" bodyCondition="_aEUWYO1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aEUWYO1qEeGeHKjzItayOg" name="body" constrainedElement="_aETvUO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEUWYe1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(ccd::EncountersActivity)).oclAsType(ccd::EncountersActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aETvUe1qEeGeHKjzItayOg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_mO8KEHJWEd6cacuAk5qrhg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aETvUu1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2dxgkNM5EeCbJdgmSYxI0g" name="PhcrRelevantDxTestsSection">
      <ownedRule xmi:id="_aCpicO1qEeGeHKjzItayOg" name="ResultsSectionTemplateId" constrainedElement="_2dxgkNM5EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCpice1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.2.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCslwO1qEeGeHKjzItayOg" name="PhcrRelevantDxTestsSectionCodeP" constrainedElement="_2dxgkNM5EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCslwe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCqwkO1qEeGeHKjzItayOg" name="PhcrRelevantDxTestsSectionCode" constrainedElement="_2dxgkNM5EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCqwke1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '30954-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCua8O1qEeGeHKjzItayOg" name="PhcrRelevantDxTestsSectionTitle" constrainedElement="_2dxgkNM5EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCua8e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'Relevant diagnostic tests and/or laboratory data')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCwQIO1qEeGeHKjzItayOg" name="PhcrRelevantDxTestsSectionText" constrainedElement="_2dxgkNM5EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCwQIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEriwO1qEeGeHKjzItayOg" name="PhcrRelevantDxTestsSectionResultOrganizer" constrainedElement="_2dxgkNM5EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEriwe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(phcr::ResultOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEsw4O1qEeGeHKjzItayOg" name="PhcrRelevantDxTestsSectionResultObservation" constrainedElement="_2dxgkNM5EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEsw4e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(phcr::ResultObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aE9PkO1qEeGeHKjzItayOg" name="PhcrRelevantDxTestsSectionImagingObservation" constrainedElement="_2dxgkNM5EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aE9Pke1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(phcr::ImagingObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_IwNZ4PNqEeCOm7Y48UO5Tg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_7TVToIiAEd66cKocspyVOg"/>
      </generalization>
      <ownedOperation xmi:id="_aEsJ0O1qEeGeHKjzItayOg" name="getPHCRResultOrganizers" isQuery="true" bodyCondition="_aEsJ0-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aEsJ0-1qEeGeHKjzItayOg" name="body" constrainedElement="_aEsJ0O1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEsJ1O1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(phcr::ResultOrganizer)).oclAsType(phcr::ResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aEsJ0e1qEeGeHKjzItayOg" type="_0r8IYPNrEeCOm7Y48UO5Tg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aEsJ0u1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aEtX8O1qEeGeHKjzItayOg" name="getResultObservations" isQuery="true" bodyCondition="_aEtX8-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aEtX8-1qEeGeHKjzItayOg" name="body" constrainedElement="_aEtX8O1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEtX9O1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::ResultObservation)).oclAsType(phcr::ResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aEtX8e1qEeGeHKjzItayOg" type="__3pL0PNrEeCOm7Y48UO5Tg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aEtX8u1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aE92oO1qEeGeHKjzItayOg" name="getImagingObservations" isQuery="true" bodyCondition="_aE92o-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aE92o-1qEeGeHKjzItayOg" name="body" constrainedElement="_aE92oO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aE92pO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::ImagingObservation)).oclAsType(phcr::ImagingObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aE92oe1qEeGeHKjzItayOg" type="_C5IPgPQfEeCOm7Y48UO5Tg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aE92ou1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_h_hhcNM-EeCbJdgmSYxI0g" name="PatientConditionAliveObservation">
      <ownedRule xmi:id="_aCw3MO1qEeGeHKjzItayOg" name="PatientConditionAliveObservationTemplateId" constrainedElement="_h_hhcNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCw3Me1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.42')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCyFUO1qEeGeHKjzItayOg" name="PatientConditionAliveObservationClassCode" constrainedElement="_h_hhcNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCyFUe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aCzTcO1qEeGeHKjzItayOg" name="PatientConditionAliveObservationMoodCode" constrainedElement="_h_hhcNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aCzTce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aC2WwO1qEeGeHKjzItayOg" name="PatientConditionAliveObservationCodeP" constrainedElement="_h_hhcNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aC2Wwe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aC0hkO1qEeGeHKjzItayOg" name="PatientConditionAliveObservationCode" constrainedElement="_h_hhcNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aC0hke1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aC4L8O1qEeGeHKjzItayOg" name="PatientConditionAliveObservationStatusCode" constrainedElement="_h_hhcNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aC4L8e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aC6BIO1qEeGeHKjzItayOg" name="PatientConditionAliveObservationStatusCodeP" constrainedElement="_h_hhcNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aC6oMO1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aC72UO1qEeGeHKjzItayOg" name="PatientConditionAliveObservationEffectiveTime" constrainedElement="_h_hhcNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aC8dYO1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aC9rgO1qEeGeHKjzItayOg" name="PatientConditionAliveObservationValue" constrainedElement="_h_hhcNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aC9rge1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.code = '438949009' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aC_gsO1qEeGeHKjzItayOg" name="PatientConditionAliveObservationValueP" constrainedElement="_h_hhcNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aC_gse1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_h_hhcdM-EeCbJdgmSYxI0g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_n3xuQNM-EeCbJdgmSYxI0g" name="PatientConditionDeceasedObservation">
      <ownedRule xmi:id="_aDAu0O1qEeGeHKjzItayOg" name="PatientConditionDeceasedObservationTemplateId" constrainedElement="_n3xuQNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDAu0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDCkAO1qEeGeHKjzItayOg" name="PatientConditionDeceasedObservationClassCode" constrainedElement="_n3xuQNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDCkAe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDDyIO1qEeGeHKjzItayOg" name="PatientConditionDeceasedObservationMoodCode" constrainedElement="_n3xuQNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDDyIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDG1cO1qEeGeHKjzItayOg" name="PatientConditionDeceasedObservationCodeP" constrainedElement="_n3xuQNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDG1ce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDFAQO1qEeGeHKjzItayOg" name="PatientConditionDeceasedObservationCode" constrainedElement="_n3xuQNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDFAQe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDIqoO1qEeGeHKjzItayOg" name="PatientConditionDeceasedObservationStatusCode" constrainedElement="_n3xuQNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDIqoe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDKf0O1qEeGeHKjzItayOg" name="PatientConditionDeceasedObservationStatusCodeP" constrainedElement="_n3xuQNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDKf0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDMVAO1qEeGeHKjzItayOg" name="PatientConditionDeceasedObservationEffectiveTime" constrainedElement="_n3xuQNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDMVAe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDNjIO1qEeGeHKjzItayOg" name="PatientConditionDeceasedObservationValue" constrainedElement="_n3xuQNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDNjIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.code = '419099009' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDPYUO1qEeGeHKjzItayOg" name="PatientConditionDeceasedObservationValueP" constrainedElement="_n3xuQNM-EeCbJdgmSYxI0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDPYUe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_n3xuQdM-EeCbJdgmSYxI0g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__cLgwNQPEeC4C5jYVS2kfQ" name="SignsAndSymptomsObservation">
      <ownedRule xmi:id="_aDQmcO1qEeGeHKjzItayOg" name="SignsAndSymptomsObservationTemplateId" constrainedElement="__cLgwNQPEeC4C5jYVS2kfQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDQmce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.53')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDSboO1qEeGeHKjzItayOg" name="SignsAndSymptomsObservationClassCode" constrainedElement="__cLgwNQPEeC4C5jYVS2kfQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDSboe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDTpwO1qEeGeHKjzItayOg" name="SignsAndSymptomsObservationMoodCode" constrainedElement="__cLgwNQPEeC4C5jYVS2kfQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDTpwe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDUQ0O1qEeGeHKjzItayOg" name="SignsAndSymptomsObservationNegationInd" constrainedElement="__cLgwNQPEeC4C5jYVS2kfQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDUQ0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDXUIO1qEeGeHKjzItayOg" name="SignsAndSymptomsObservationCodeP" constrainedElement="__cLgwNQPEeC4C5jYVS2kfQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDXUIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDWGAO1qEeGeHKjzItayOg" name="SignsAndSymptomsObservationCode" constrainedElement="__cLgwNQPEeC4C5jYVS2kfQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDWGAe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDZJUO1qEeGeHKjzItayOg" name="SignsAndSymptomsObservationStatusCode" constrainedElement="__cLgwNQPEeC4C5jYVS2kfQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDZJUe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDa-gO1qEeGeHKjzItayOg" name="SignsAndSymptomsObservationStatusCodeP" constrainedElement="__cLgwNQPEeC4C5jYVS2kfQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDa-ge1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDczsO1qEeGeHKjzItayOg" name="SignsAndSymptomsObservationEffectiveTime" constrainedElement="__cLgwNQPEeC4C5jYVS2kfQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDczse1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDdawO1qEeGeHKjzItayOg" name="SignsAndSymptomsObservationValue" constrainedElement="__cLgwNQPEeC4C5jYVS2kfQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDdawe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__cLgwdQPEeC4C5jYVS2kfQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2p558NSrEeC18pmrrt-Mbg" name="TherapeuticRegimenAct">
      <ownedRule xmi:id="_aDeo4O1qEeGeHKjzItayOg" name="TherapeuticRegimenActTemplateId" constrainedElement="_2p558NSrEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDeo4e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.57')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDf3AO1qEeGeHKjzItayOg" name="TherapeuticRegimenActClassCode" constrainedElement="_2p558NSrEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDf3Ae1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDhFIO1qEeGeHKjzItayOg" name="TherapeuticRegimenActMoodCode" constrainedElement="_2p558NSrEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDhFIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDiTQO1qEeGeHKjzItayOg" name="TherapeuticRegimenActNegationInd" constrainedElement="_2p558NSrEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDiTQe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDlWkO1qEeGeHKjzItayOg" name="TherapeuticRegimenActCodeP" constrainedElement="_2p558NSrEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDl9oO1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDkIcO1qEeGeHKjzItayOg" name="TherapeuticRegimenActCode" constrainedElement="_2p558NSrEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDkIce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '133877004' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDny0O1qEeGeHKjzItayOg" name="TherapeuticRegimenActStatusCode" constrainedElement="_2p558NSrEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDny0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDpoAO1qEeGeHKjzItayOg" name="TherapeuticRegimenActStatusCodeP" constrainedElement="_2p558NSrEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDpoAe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aE-dsO1qEeGeHKjzItayOg" name="TherapeuticRegimenActTreatmentGivenSubstanceAdministration" constrainedElement="_2p558NSrEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aE-dse1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(phcr::TreatmentGivenSubstanceAdministration) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aE_r0O1qEeGeHKjzItayOg" name="TherapeuticRegimenActTreatmentNotGivenSubstanceAdministration" constrainedElement="_2p558NSrEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aE_r0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(phcr::TreatmentNotGivenSubstanceAdministration) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2p558dSrEeC18pmrrt-Mbg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_aE_EwO1qEeGeHKjzItayOg" name="getTreatmentGivenSubstanceAdministrations" isQuery="true" bodyCondition="_aE_Ew-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aE_Ew-1qEeGeHKjzItayOg" name="body" constrainedElement="_aE_EwO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aE_ExO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(phcr::TreatmentGivenSubstanceAdministration)).oclAsType(phcr::TreatmentGivenSubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aE_Ewe1qEeGeHKjzItayOg" type="_XOKZ4NStEeC18pmrrt-Mbg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aE_Ewu1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aFAS4O1qEeGeHKjzItayOg" name="getTreatmentNotGivenSubstanceAdministrations" isQuery="true" bodyCondition="_aFAS4-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aFAS4-1qEeGeHKjzItayOg" name="body" constrainedElement="_aFAS4O1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFAS5O1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(phcr::TreatmentNotGivenSubstanceAdministration)).oclAsType(phcr::TreatmentNotGivenSubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aFAS4e1qEeGeHKjzItayOg" type="_NbgssNSwEeC18pmrrt-Mbg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aFAS4u1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_XOKZ4NStEeC18pmrrt-Mbg" name="TreatmentGivenSubstanceAdministration">
      <ownedRule xmi:id="_FEco0DryEeGN27-qWOHvLQ" name="TreatmentGivenSubstanceAdministrationTreatmentGivenNegationInd" constrainedElement="_XOKZ4NStEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_RJXzQDryEeGN27-qWOHvLQ">
          <language>OCL</language>
          <body>self.negationInd=false</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDsEQO1qEeGeHKjzItayOg" name="TreatmentGivenSubstanceAdministrationTemplateId" constrainedElement="_XOKZ4NStEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDsEQe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.55')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDt5cO1qEeGeHKjzItayOg" name="TreatmentGivenSubstanceAdministrationClassCode" constrainedElement="_XOKZ4NStEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDt5ce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::SBADM</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDvHkO1qEeGeHKjzItayOg" name="TreatmentGivenSubstanceAdministrationMoodCode" constrainedElement="_XOKZ4NStEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDvHke1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDwVsO1qEeGeHKjzItayOg" name="TreatmentGivenSubstanceAdministrationNegationInd" constrainedElement="_XOKZ4NStEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDwVse1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aDyK4O1qEeGeHKjzItayOg" name="TreatmentGivenSubstanceAdministrationStatusCode" constrainedElement="_XOKZ4NStEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aDyK4e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aD0AEO1qEeGeHKjzItayOg" name="TreatmentGivenSubstanceAdministrationEffectiveTime" constrainedElement="_XOKZ4NStEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aD0AEe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aD3DYO1qEeGeHKjzItayOg" name="TreatmentGivenSubstanceAdministrationRouteCodeP" constrainedElement="_XOKZ4NStEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aD3DYe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aD1OMO1qEeGeHKjzItayOg" name="TreatmentGivenSubstanceAdministrationRouteCode" constrainedElement="_XOKZ4NStEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aD1OMe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XOKZ4dStEeC18pmrrt-Mbg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NbgssNSwEeC18pmrrt-Mbg" name="TreatmentNotGivenSubstanceAdministration">
      <ownedRule xmi:id="_c4r6EDryEeGN27-qWOHvLQ" name="TreatmentNotGivenSubstanceAdministrationTreatmentNotGivenNegationInd" constrainedElement="_NbgssNSwEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_f-a78DryEeGN27-qWOHvLQ">
          <language>OCL</language>
          <body>self.negationInd=true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aD44kO1qEeGeHKjzItayOg" name="TreatmentNotGivenSubstanceAdministrationTemplateId" constrainedElement="_NbgssNSwEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aD44ke1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.56')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aD6twO1qEeGeHKjzItayOg" name="TreatmentNotGivenSubstanceAdministrationClassCode" constrainedElement="_NbgssNSwEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aD6twe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::SBADM</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aD774O1qEeGeHKjzItayOg" name="TreatmentNotGivenSubstanceAdministrationMoodCode" constrainedElement="_NbgssNSwEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aD774e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aD9KAO1qEeGeHKjzItayOg" name="TreatmentNotGivenSubstanceAdministrationNegationInd" constrainedElement="_NbgssNSwEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aD9KAe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aD-YIO1qEeGeHKjzItayOg" name="TreatmentNotGivenSubstanceAdministrationStatusCode" constrainedElement="_NbgssNSwEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aD-YIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEANUO1qEeGeHKjzItayOg" name="TreatmentNotGivenSubstanceAdministrationStatusCodeP" constrainedElement="_NbgssNSwEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEANUe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NbgssdSwEeC18pmrrt-Mbg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_p8bDQNTCEeC18pmrrt-Mbg" name="CaseObservation">
      <ownedRule xmi:id="_Nd3PgDJaEeGp0PdMXlGo5Q" name="CaseObservationEffectiveTimeLow" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_TgijoDJaEeGp0PdMXlGo5Q">
          <language>OCL</language>
          <body>self.effectiveTime->exists(time : datatypes::IVL_TS | not time.low.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_99LTYDJaEeGp0PdMXlGo5Q" name="CaseObservationAuthor" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ao-yUDJbEeGp0PdMXlGo5Q">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KrgEDJdEeGp0PdMXlGo5Q" name="CaseObservationAuthorAssignedAuthor">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6dAQ4DJdEeGp0PdMXlGo5Q">
          <language>OCL</language>
          <body>self.author.assignedAuthor->exists(assignedAuthor : cda::AssignedAuthor | not assignedAuthor.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEBbce1qEeGeHKjzItayOg" name="ProblemObservationTemplateId" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aECCgO1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.54')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEFs4O1qEeGeHKjzItayOg" name="CaseObservationClassCode" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEGT8O1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEHiEO1qEeGeHKjzItayOg" name="CaseObservationMoodCode" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEHiEe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEIJIO1qEeGeHKjzItayOg" name="CaseObservationId" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEIJIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aELzgO1qEeGeHKjzItayOg" name="CaseObservationCodeP" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aELzge1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEJ-UO1qEeGeHKjzItayOg" name="CaseObservationCode" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEJ-Ue1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEPd4O1qEeGeHKjzItayOg" name="CaseObservationStatusCodeP" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEPd4e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aENosO1qEeGeHKjzItayOg" name="CaseObservationStatusCode" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aENose1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aERTEO1qEeGeHKjzItayOg" name="CaseObservationEffectiveTime" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aERTEe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aER6IO1qEeGeHKjzItayOg" name="CaseObservationValue" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aER6Ie1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEXZtO1qEeGeHKjzItayOg" name="CaseObservationProblemStatusObservation" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEXZte1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::ProblemStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFA58O1qEeGeHKjzItayOg" name="CaseObservationSignsAndSymptomsObservation" constrainedElement="_p8bDQNTCEeC18pmrrt-Mbg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFA58e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(phcr::SignsAndSymptomsObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::MFST)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_tz2ZAO32EeC3U4HbCHnHkw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_IjIO0DxbEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_aEYAwO1qEeGeHKjzItayOg" name="getProblemStatusObservation" isQuery="true" bodyCondition="_aEYn0u1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aEYn0u1qEeGeHKjzItayOg" name="body" constrainedElement="_aEYAwO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEYn0-1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::ProblemStatusObservation))->asSequence()->any(true).oclAsType(ccd::ProblemStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aEYn0O1qEeGeHKjzItayOg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_TrwngGaJEd6Hk_bPOfEjYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aEYn0e1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aFBhAO1qEeGeHKjzItayOg" name="getSignsAndSymptomsObservations" isQuery="true" bodyCondition="_aFBhA-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aFBhA-1qEeGeHKjzItayOg" name="body" constrainedElement="_aFBhAO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFBhBO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::SignsAndSymptomsObservation)).oclAsType(phcr::SignsAndSymptomsObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aFBhAe1qEeGeHKjzItayOg" type="__cLgwNQPEeC4C5jYVS2kfQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aFBhAu1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0r8IYPNrEeCOm7Y48UO5Tg" name="ResultOrganizer">
      <ownedRule xmi:id="_aEZO4O1qEeGeHKjzItayOg" name="ResultOrganizerTemplateId" constrainedElement="_0r8IYPNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEZO4e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.59')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEadAO1qEeGeHKjzItayOg" name="PHCRResultOrganizerClassCode" constrainedElement="_0r8IYPNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEadAe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryOrganizer::BATTERY</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEbrIO1qEeGeHKjzItayOg" name="PHCRResultOrganizerMoodCode" constrainedElement="_0r8IYPNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEbrIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEc5QO1qEeGeHKjzItayOg" name="PHCRResultOrganizerId" constrainedElement="_0r8IYPNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEc5Qe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEdgUO1qEeGeHKjzItayOg" name="PHCRResultOrganizerCode" constrainedElement="_0r8IYPNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEdgUe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEhKsO1qEeGeHKjzItayOg" name="PHCRResultOrganizerStatusCodeP" constrainedElement="_0r8IYPNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEhKse1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEfVgO1qEeGeHKjzItayOg" name="PHCRResultOrganizerStatusCode" constrainedElement="_0r8IYPNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEfVge1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEiY0O1qEeGeHKjzItayOg" name="PHCRResultOrganizerEffectiveTime" constrainedElement="_0r8IYPNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEiY0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEqUoO1qEeGeHKjzItayOg" name="PHCRResultOrganizerResultObservation" constrainedElement="_0r8IYPNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEqUoe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(phcr::ResultObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFLSAO1qEeGeHKjzItayOg" name="PHCRResultOrganizerSpecimenCollectionProcedure" constrainedElement="_0r8IYPNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFLSAe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.procedure.oclIsUndefined() and component.procedure.oclIsKindOf(phcr::SpecimenCollectionProcedure))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0r8IYfNrEeCOm7Y48UO5Tg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_Ht_RsHDAEd6eItyqb1FoWg"/>
      </generalization>
      <ownedOperation xmi:id="_aEq7sO1qEeGeHKjzItayOg" name="getPHCRResultObservations" isQuery="true" bodyCondition="_aEq7s-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aEq7s-1qEeGeHKjzItayOg" name="body" constrainedElement="_aEq7sO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEq7tO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::ResultObservation)).oclAsType(phcr::ResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aEq7se1qEeGeHKjzItayOg" type="__3pL0PNrEeCOm7Y48UO5Tg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aEq7su1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aFL5EO1qEeGeHKjzItayOg" name="getSpecimenCollectionProcedure" isQuery="true" bodyCondition="_aFL5E-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aFL5E-1qEeGeHKjzItayOg" name="body" constrainedElement="_aFL5EO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFL5FO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(phcr::SpecimenCollectionProcedure))->asSequence()->any(true).oclAsType(phcr::SpecimenCollectionProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aFL5Ee1qEeGeHKjzItayOg" type="_n3QLkDL-EeGXS8s8x7j2Fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aFL5Eu1qEeGeHKjzItayOg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__3pL0PNrEeCOm7Y48UO5Tg" name="ResultObservation">
      <ownedRule xmi:id="_aEkOAO1qEeGeHKjzItayOg" name="ResultObservationTemplateId" constrainedElement="__3pL0PNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEkOAe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.58')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aElcIO1qEeGeHKjzItayOg" name="PHCRResultObservationClassCode" constrainedElement="__3pL0PNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aElcIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEofcO1qEeGeHKjzItayOg" name="PHCRResultObservationStatusCodeP" constrainedElement="__3pL0PNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEofce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEmqQO1qEeGeHKjzItayOg" name="PHCRResultObservationStatusCode" constrainedElement="__3pL0PNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEmqQe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFZUde1qEeGeHKjzItayOg" name="PHCRResultObservationSpecimenCollectionProcedure" constrainedElement="__3pL0PNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFZUdu1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(phcr::SpecimenCollectionProcedure) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFbJoO1qEeGeHKjzItayOg" name="PHCRResultObservationSusceptibilityResult" constrainedElement="__3pL0PNrEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFbJoe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(phcr::SusceptibilityResult) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__3pL0fNrEeCOm7Y48UO5Tg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_MQHZEHDAEd6eItyqb1FoWg"/>
      </generalization>
      <ownedOperation xmi:id="_aFZ7gO1qEeGeHKjzItayOg" name="getSpecimenCollectionProcedures" isQuery="true" bodyCondition="_aFaiku1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aFaiku1qEeGeHKjzItayOg" name="body" constrainedElement="_aFZ7gO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFaik-1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(phcr::SpecimenCollectionProcedure)).oclAsType(phcr::SpecimenCollectionProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aFaikO1qEeGeHKjzItayOg" type="_n3QLkDL-EeGXS8s8x7j2Fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aFaike1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aFbwsO1qEeGeHKjzItayOg" name="getSusceptibilityResults" isQuery="true" bodyCondition="_aFbws-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aFbws-1qEeGeHKjzItayOg" name="body" constrainedElement="_aFbwsO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFbwtO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(phcr::SusceptibilityResult)).oclAsType(phcr::SusceptibilityResult)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aFbwse1qEeGeHKjzItayOg" type="_Sv_0QDMaEeGXS8s8x7j2Fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aFbwsu1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_C5IPgPQfEeCOm7Y48UO5Tg" name="ImagingObservation">
      <ownedRule xmi:id="_aEt_AO1qEeGeHKjzItayOg" name="ProblemObservationTemplateId" constrainedElement="_C5IPgPQfEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEt_Ae1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEv0MO1qEeGeHKjzItayOg" name="ImagingObservationClassCode" constrainedElement="_C5IPgPQfEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEv0Me1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aExCUO1qEeGeHKjzItayOg" name="ImagingObservationMoodCode" constrainedElement="_C5IPgPQfEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aExCUe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aEyQcO1qEeGeHKjzItayOg" name="ImagingObservationId" constrainedElement="_C5IPgPQfEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aEyQce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aE0FoO1qEeGeHKjzItayOg" name="ImagingObservationCode" constrainedElement="_C5IPgPQfEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aE0ssO1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aE4XEO1qEeGeHKjzItayOg" name="ImagingObservationStatusCodeP" constrainedElement="_C5IPgPQfEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aE4XEe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aE2h4O1qEeGeHKjzItayOg" name="ImagingObservationStatusCode" constrainedElement="_C5IPgPQfEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aE2h4e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aE6MQO1qEeGeHKjzItayOg" name="ImagingObservationEffectiveTime" constrainedElement="_C5IPgPQfEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aE6MQe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aE6zUO1qEeGeHKjzItayOg" name="ImagingObservationValue" constrainedElement="_C5IPgPQfEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aE6zUe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aE8BcO1qEeGeHKjzItayOg" name="ImagingObservationMethodCode" constrainedElement="_C5IPgPQfEeCOm7Y48UO5Tg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aE8Bce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_C5IPgfQfEeCOm7Y48UO5Tg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_IjIO0DxbEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_n3QLkDL-EeGXS8s8x7j2Fg" name="SpecimenCollectionProcedure">
      <ownedRule xmi:id="_aFBhBe1qEeGeHKjzItayOg" name="SpecimenCollectionProcedureTemplateId" constrainedElement="_n3QLkDL-EeGXS8s8x7j2Fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFBhBu1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFCvIO1qEeGeHKjzItayOg" name="SpecimenCollectionProcedureClassCode" constrainedElement="_n3QLkDL-EeGXS8s8x7j2Fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFCvIe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::PROC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFD9QO1qEeGeHKjzItayOg" name="SpecimenCollectionProcedureMoodCode" constrainedElement="_n3QLkDL-EeGXS8s8x7j2Fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFD9Qe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentProcedureMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFFycO1qEeGeHKjzItayOg" name="SpecimenCollectionProcedureCode" constrainedElement="_n3QLkDL-EeGXS8s8x7j2Fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFFyce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFHnoO1qEeGeHKjzItayOg" name="SpecimenCollectionProcedureEffectiveTime" constrainedElement="_n3QLkDL-EeGXS8s8x7j2Fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFHnoe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFJc0O1qEeGeHKjzItayOg" name="SpecimenCollectionProcedureTargetSiteCode" constrainedElement="_n3QLkDL-EeGXS8s8x7j2Fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFJc0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_n3QLkTL-EeGXS8s8x7j2Fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Sv_0QDMaEeGXS8s8x7j2Fg" name="SusceptibilityResult">
      <ownedRule xmi:id="_aFL5Fe1qEeGeHKjzItayOg" name="SusceptibilityResultTemplateId" constrainedElement="_Sv_0QDMaEeGXS8s8x7j2Fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFL5Fu1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFNuQO1qEeGeHKjzItayOg" name="SusceptibilityResultClassCode" constrainedElement="_Sv_0QDMaEeGXS8s8x7j2Fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFNuQe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFO8YO1qEeGeHKjzItayOg" name="SusceptibilityResultMoodCode" constrainedElement="_Sv_0QDMaEeGXS8s8x7j2Fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFO8Ye1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFR_sO1qEeGeHKjzItayOg" name="SusceptibilityResultCodeP" constrainedElement="_Sv_0QDMaEeGXS8s8x7j2Fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFR_se1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFQxkO1qEeGeHKjzItayOg" name="SusceptibilityResultCode" constrainedElement="_Sv_0QDMaEeGXS8s8x7j2Fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFQxke1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '18769-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFT04O1qEeGeHKjzItayOg" name="SusceptibilityResultStatusCode" constrainedElement="_Sv_0QDMaEeGXS8s8x7j2Fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFT04e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFVqEO1qEeGeHKjzItayOg" name="SusceptibilityResultStatusCodeP" constrainedElement="_Sv_0QDMaEeGXS8s8x7j2Fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFVqEe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_SwI-MDMaEeGXS8s8x7j2Fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__6FcQKBIEeGDSOGpMxCO3w" name="PhcrRelevantMedicalConditionHistoryObservation">
      <ownedRule xmi:id="_aFbwte1qEeGeHKjzItayOg" name="PhcrRelevantMedicalConditionHistoryObservationTemplateId" constrainedElement="__6FcQKBIEeGDSOGpMxCO3w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFbwtu1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.62')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFc-0O1qEeGeHKjzItayOg" name="PhcrRelevantMedicalConditionHistoryObservationClassCode" constrainedElement="__6FcQKBIEeGDSOGpMxCO3w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFc-0e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFgpMO1qEeGeHKjzItayOg" name="PhcrRelevantMedicalConditionHistoryObservationCodeP" constrainedElement="__6FcQKBIEeGDSOGpMxCO3w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFgpMe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFe0AO1qEeGeHKjzItayOg" name="PhcrRelevantMedicalConditionHistoryObservationCode" constrainedElement="__6FcQKBIEeGDSOGpMxCO3w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFe0Ae1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFh3UO1qEeGeHKjzItayOg" name="PhcrRelevantMedicalConditionHistoryObservationEffectiveTime" constrainedElement="__6FcQKBIEeGDSOGpMxCO3w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFh3Ue1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFjFcO1qEeGeHKjzItayOg" name="PhcrRelevantMedicalConditionHistoryObservationMoodCode" constrainedElement="__6FcQKBIEeGDSOGpMxCO3w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFjFce1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFkTkO1qEeGeHKjzItayOg" name="PhcrRelevantMedicalConditionHistoryObservationNegationInd" constrainedElement="__6FcQKBIEeGDSOGpMxCO3w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFkTke1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFlhsO1qEeGeHKjzItayOg" name="PhcrRelevantMedicalConditionHistoryObservationStatusCode" constrainedElement="__6FcQKBIEeGDSOGpMxCO3w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFlhse1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFnW4O1qEeGeHKjzItayOg" name="PhcrRelevantMedicalConditionHistoryObservationStatusCodeP" constrainedElement="__6FcQKBIEeGDSOGpMxCO3w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFnW4e1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aFrBQO1qEeGeHKjzItayOg" name="PhcrRelevantMedicalConditionHistoryObservationProblemObservation" constrainedElement="__6FcQKBIEeGDSOGpMxCO3w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFrBQe1qEeGeHKjzItayOg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__6FcQaBIEeGDSOGpMxCO3w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_aFroUO1qEeGeHKjzItayOg" name="getProblemObservations" isQuery="true" bodyCondition="_aFroU-1qEeGeHKjzItayOg">
        <ownedRule xmi:id="_aFroU-1qEeGeHKjzItayOg" name="body" constrainedElement="_aFroUO1qEeGeHKjzItayOg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aFroVO1qEeGeHKjzItayOg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::ProblemObservation)).oclAsType(ccd::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aFroUe1qEeGeHKjzItayOg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_IjIO0DxbEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aFroUu1qEeGeHKjzItayOg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <profileApplication xmi:id="_6MwumcgnEeCI5ZpfyBisiQ">
      <eAnnotations xmi:id="_6MwumsgnEeCI5ZpfyBisiQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_6Mwum8gnEeCI5ZpfyBisiQ">
      <eAnnotations xmi:id="_6MwunMgnEeCI5ZpfyBisiQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_aASyAO1qEeGeHKjzItayOg">
      <eAnnotations xmi:id="_aASyAe1qEeGeHKjzItayOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_6PmAIMgnEeCI5ZpfyBisiQ" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="phcr" nsURI="http://www.openhealthtools.org/mdht/uml/cda/phcr" packageName="phcr" prefix="PHCR" base_Namespace="_6MwukMgnEeCI5ZpfyBisiQ"/>
  <CDA:CDATemplate xmi:id="_6PmAIsgnEeCI5ZpfyBisiQ" base_Class="_6PmAIcgnEeCI5ZpfyBisiQ" templateId="2.16.840.1.113883.10.20.15" assigningAuthorityName=""/>
  <CDA:CodeSystemConstraint xmi:id="_vR7jQcgoEeCI5ZpfyBisiQ" code="55751-2" displayName="Public Health Case Report">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF-1</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:CDATemplate xmi:id="_M17MoMgpEeCI5ZpfyBisiQ" base_Class="_Fw7f4MgpEeCI5ZpfyBisiQ" templateId="2.16.840.1.113883.10.20.15.2.22"/>
  <CDA:ConstraintValidation xmi:id="_gvj0EMgqEeCI5ZpfyBisiQ" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_h1ceEMgqEeCI5ZpfyBisiQ"/>
  <CDA:ConstraintValidation xmi:id="_nzXOAMgqEeCI5ZpfyBisiQ" severity="INFO"/>
  <CDA:TextValue xmi:id="_1S67sMgwEeCkXZRmGSVUHA" value="Public Health Case Report"/>
  <CDA:ConstraintValidation xmi:id="_SasFoMg9EeCkXZRmGSVUHA"/>
  <CDA:CDATemplate xmi:id="_mOoKMMg9EeCkXZRmGSVUHA" base_Class="_bkm3gMg9EeCkXZRmGSVUHA" templateId="2.16.840.1.113883.10.20.15.3.8"/>
  <CDA:CDATemplate xmi:id="_oLDaoMg9EeCkXZRmGSVUHA" severity="INFO" base_Class="_na5gIMgpEeCI5ZpfyBisiQ" templateId="2.16.840.1.113883.10.20.15.3.3"/>
  <CDA:CDATemplate xmi:id="_wHEZgMg-EeCkXZRmGSVUHA" base_Class="_sQmeQMg-EeCkXZRmGSVUHA" templateId="2.16.840.1.113883.10.20.15.3.1"/>
  <CDA:ConstraintValidation xmi:id="_hqe-sMg_EeCkXZRmGSVUHA"/>
  <CDA:CDATemplate xmi:id="_ipjAQMhFEeCkXZRmGSVUHA" base_Class="_bcgx0MhFEeCkXZRmGSVUHA" templateId="2.16.840.1.113883.10.20.15.3.7"/>
  <CDA:CDATemplate xmi:id="_H7Ig8MnGEeCRBIG_Gkv9FQ" base_Class="_DH3mQMnGEeCRBIG_Gkv9FQ" templateId="2.16.840.1.113883.10.20.15.3.6"/>
  <CDA:CDATemplate xmi:id="_-8v2UMqZEeCRBIG_Gkv9FQ" base_Class="_84uJEMqZEeCRBIG_Gkv9FQ" templateId="2.16.840.1.113883.10.20.15.2.1"/>
  <CDA:CDATemplate xmi:id="_cxSdIMqaEeCRBIG_Gkv9FQ" base_Class="_XTjpIMqaEeCRBIG_Gkv9FQ" templateId="2.16.840.1.113883.10.20.15.2.4"/>
  <CDA:CDATemplate xmi:id="_CQciEMqiEeCRBIG_Gkv9FQ" base_Class="_2SAeUMqaEeCRBIG_Gkv9FQ" templateId="2.16.840.1.113883.10.20.15.2.2">
    <ruleId>CONF:597</ruleId>
  </CDA:CDATemplate>
  <CDA:CodeSystemConstraint xmi:id="_QJTIQMqiEeCRBIG_Gkv9FQ" code="46240-8" displayName="History of encounters">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_DwqdgNM7EeCbJdgmSYxI0g"/>
  <CDA:CodeSystemConstraint xmi:id="_KSfLwNM7EeCbJdgmSYxI0g" code="ASSERTION" displayName="">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_4AnRQCYWEd-iTYfpNb4PkQ"/>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_jZIgENM7EeCbJdgmSYxI0g"/>
  <CDA:CodeSystemConstraint xmi:id="_pK0x4NM7EeCbJdgmSYxI0g" code="completed">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_e8ZEoCWvEd-iTYfpNb4PkQ"/>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_WAo_gNM8EeCbJdgmSYxI0g"/>
  <CDA:CDATemplate xmi:id="_t37S0NM-EeCbJdgmSYxI0g" base_Class="_h_hhcNM-EeCbJdgmSYxI0g" templateId="2.16.840.1.113883.10.20.15.3.42"/>
  <CDA:CDATemplate xmi:id="_gB-Z8NPeEeCk9KYa4UJpxQ" base_Class="_n3xuQNM-EeCbJdgmSYxI0g" templateId="2.16.840.1.113883.10.20.15.3.17"/>
  <CDA:PropertyValidation xmi:id="_MMKo8NPlEeCk9KYa4UJpxQ">
    <ruleId>CONF:1585</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_XPDx0NPpEeCW_pM5mN0HGA">
    <ruleId>CONF:1586</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_YymBINPpEeCW_pM5mN0HGA" code="completed">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_e8ZEoCWvEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:1589</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_eX0VgNPvEeCsfqeLqSMfVA">
    <ruleId>CONF:1590</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_EC7CYNQQEeC4C5jYVS2kfQ" base_Class="__cLgwNQPEeC4C5jYVS2kfQ" templateId="2.16.840.1.113883.10.20.15.3.53"/>
  <CDA:AssociationValidation xmi:id="_ZWSacNShEeC4C5jYVS2kfQ"/>
  <CDA:CDATemplate xmi:id="_5wOWMNShEeC4C5jYVS2kfQ" templateId="2.16.840.1.113883.10.20.15.3.54"/>
  <CDA:CDATemplate xmi:id="_Es4RANSiEeC4C5jYVS2kfQ" base_Class="_3LQf4Mg8EeCkXZRmGSVUHA" templateId="2.16.840.1.113883.10.20.15.3.9"/>
  <CDA:CDATemplate xmi:id="_ZK2KANSiEeC4C5jYVS2kfQ" base_Class="_2dxgkNM5EeCbJdgmSYxI0g" templateId="2.16.840.1.113883.10.20.15.2.3"/>
  <CDA:CDATemplate xmi:id="_54GwwNSqEeC18pmrrt-Mbg" templateId="2.16.840.1.113883.10.20.15.3.57"/>
  <CDA:AssociationValidation xmi:id="_7xG5wNSqEeC18pmrrt-Mbg"/>
  <CDA:PropertyValidation xmi:id="_-fJ0YNSqEeC18pmrrt-Mbg"/>
  <CDA:CDATemplate xmi:id="_9XgaYNSrEeC18pmrrt-Mbg" base_Class="_2p558NSrEeC18pmrrt-Mbg" templateId="2.16.840.1.113883.10.20.15.3.57"/>
  <CDA:PropertyValidation xmi:id="_2FIjgNSsEeC18pmrrt-Mbg">
    <ruleId>CONF:1948</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_4-NCYNSsEeC18pmrrt-Mbg">
    <ruleId>CONF:1949</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_8BkFsNSsEeC18pmrrt-Mbg" code="ASSERTION">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_4AnRQCYWEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:1951</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_AbMYYNStEeC18pmrrt-Mbg">
    <ruleId>CONF:1952</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_CG7hcNStEeC18pmrrt-Mbg">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_ya6aMCWsEd-iTYfpNb4PkQ"/>
  </CDA:CodeSystemConstraint>
  <CDA:CDATemplate xmi:id="_j4pIcNStEeC18pmrrt-Mbg" base_Class="_XOKZ4NStEeC18pmrrt-Mbg" templateId="2.16.840.1.113883.10.20.15.3.55"/>
  <CDA:PropertyValidation xmi:id="_2U0I0NStEeC18pmrrt-Mbg">
    <ruleId>CONF:1921</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_kZN-kNSwEeC18pmrrt-Mbg">
    <ruleId>CONF:1933</ruleId>
  </CDA:PropertyValidation>
  <CDA:AssociationValidation xmi:id="_wFUHYNSyEeC18pmrrt-Mbg" severity="WARNING"/>
  <CDA:AssociationValidation xmi:id="_wsgqQNSyEeC18pmrrt-Mbg" severity="INFO"/>
  <CDA:CDATemplate xmi:id="_3REwMNTCEeC18pmrrt-Mbg" base_Class="_p8bDQNTCEeC18pmrrt-Mbg" templateId="2.16.840.1.113883.10.20.15.3.54"/>
  <CDA:AssociationValidation xmi:id="_oILhkNWKEeClfZ1QFvr8fw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_r9wE8NWKEeClfZ1QFvr8fw" severity="WARNING">
    <ruleId>CONF:608</ruleId>
    <ruleId>CONF:743</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_WAS_ENWeEeCFBrheYXatQw" severity="INFO">
    <ruleId>CONF:1285</ruleId>
    <ruleId>CONF:1286</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_etBJIPAtEeC3U4HbCHnHkw" base_Class="_NbgssNSwEeC18pmrrt-Mbg" templateId="2.16.840.1.113883.10.20.15.3.56"/>
  <CDA:CDATemplate xmi:id="_KdphMPNsEeCOm7Y48UO5Tg" base_Class="__3pL0PNrEeCOm7Y48UO5Tg" templateId="2.16.840.1.113883.10.20.15.3.58"/>
  <CDA:CDATemplate xmi:id="_Wia6oPNsEeCOm7Y48UO5Tg" base_Class="_0r8IYPNrEeCOm7Y48UO5Tg" templateId="2.16.840.1.113883.10.20.15.3.59"/>
  <CDA:CDATemplate xmi:id="_OfzXsPQfEeCOm7Y48UO5Tg" base_Class="_C5IPgPQfEeCOm7Y48UO5Tg" templateId="2.16.840.1.113883.10.20.15.3.5"/>
  <CDA:EntryRelationship xmi:id="_X0_fcDFqEeGasLgHAEd_xQ" typeCode="REFR">
    <ruleId>CONF:1945</ruleId>
    <ruleId>CONF:1946</ruleId>
    <ruleId>CONF:1947</ruleId>
  </CDA:EntryRelationship>
  <CDA:PropertyValidation xmi:id="_FcbXQDFrEeGasLgHAEd_xQ">
    <ruleId>CONF:1950</ruleId>
  </CDA:PropertyValidation>
  <CDA:ConstraintValidation xmi:id="_UqgrADFrEeGasLgHAEd_xQ">
    <ruleId>CONF:1950</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ClassValidation xmi:id="_LY9UMDF4EeGasLgHAEd_xQ">
    <ruleId>CONF:1947</ruleId>
  </CDA:ClassValidation>
  <CDA:CDATemplate xmi:id="_VK9ZwDF4EeGasLgHAEd_xQ"/>
  <CDA:EntryRelationship xmi:id="_uC-64DGGEeGTgcZY2IhX4g" severity="WARNING" typeCode="REFR">
    <ruleId>CONF:2180</ruleId>
  </CDA:EntryRelationship>
  <CDA:PropertyValidation xmi:id="_3xxCcDGIEeGTgcZY2IhX4g">
    <ruleId>CONF:2182</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_B3Sg8DGJEeGTgcZY2IhX4g">
    <ruleId>CONF:2183</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_F8D98DGJEeGTgcZY2IhX4g" code="21844-6" displayName="Industry Hx">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:2185</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:CodeSystemConstraint xmi:id="_POd9cDGJEeGTgcZY2IhX4g" code="completed">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_e8ZEoCWvEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:2187</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_UNWSQDGJEeGTgcZY2IhX4g" severity="WARNING">
    <ruleId>CONF:2188</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_YGWkIDGJEeGTgcZY2IhX4g">
    <ruleId>CONF:2189</ruleId>
  </CDA:PropertyValidation>
  <CDA:ValueSetConstraint xmi:id="_dSDM8DGJEeGTgcZY2IhX4g" identifier="2.16.840.1.114222.4.11.1100" name="Industry"/>
  <CDA:ConstraintValidation xmi:id="_QC4KADGWEeGTgcZY2IhX4g" base_Constraint="_8pwZMDGVEeGTgcZY2IhX4g">
    <ruleId>CONF:547</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_acg3UDGWEeGTgcZY2IhX4g" base_Constraint="_VgwH8DGWEeGTgcZY2IhX4g">
    <ruleId>CONF:548</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_vkfWoDGWEeGTgcZY2IhX4g" base_Constraint="_rKHdEDGWEeGTgcZY2IhX4g">
    <ruleId>CONF:549</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_MLZ6cDGcEeGTgcZY2IhX4g" base_Constraint="_By9f8DGcEeGTgcZY2IhX4g">
    <ruleId>CONF:1853</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_TXQdIDGcEeGTgcZY2IhX4g" base_Constraint="_PaiI4DGcEeGTgcZY2IhX4g">
    <ruleId>CONF:560</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_y63i8DGeEeGTgcZY2IhX4g" base_Constraint="_vrcZkDGeEeGTgcZY2IhX4g">
    <ruleId>CONF:561</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_CT_CADGfEeGTgcZY2IhX4g" base_Constraint="_-1zq8DGeEeGTgcZY2IhX4g">
    <ruleId>CONF:562</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_QP0qwDGfEeGTgcZY2IhX4g" base_Constraint="_MpdBADGfEeGTgcZY2IhX4g">
    <ruleId>CONF:562</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_dQWh0DGfEeGTgcZY2IhX4g" base_Constraint="_Zn5NYDGfEeGTgcZY2IhX4g">
    <ruleId>CONF:564</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_BEvyQDGgEeGTgcZY2IhX4g" base_Constraint="_2Qb7IDGfEeGTgcZY2IhX4g">
    <ruleId>CONF:565</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_7vRQcDGhEeGTgcZY2IhX4g" base_Constraint="_5ENYYDGhEeGTgcZY2IhX4g">
    <ruleId>CONF:1854</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_G_ckMDGiEeGTgcZY2IhX4g" base_Constraint="_9foa0DGhEeGTgcZY2IhX4g">
    <ruleId>CONF:1855</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_KkexMDGiEeGTgcZY2IhX4g" base_Constraint="_KHRQwDGiEeGTgcZY2IhX4g">
    <ruleId>CONF:1856</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_RYQXYDIsEeGfRanst07TlA" base_Constraint="_L1J7MDIsEeGfRanst07TlA">
    <ruleId>CONF:1857</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_gz5mADIsEeGfRanst07TlA" base_Constraint="_b5fhgDIsEeGfRanst07TlA">
    <ruleId>CONF:1857</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_yYWUMDIsEeGfRanst07TlA" base_Constraint="_uG6UMDIsEeGfRanst07TlA">
    <ruleId>CONF:1860</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_PWtcwDI0EeGfRanst07TlA"/>
  <CDA:ConstraintValidation xmi:id="_mZg0kDI1EeGfRanst07TlA" base_Constraint="_l-P04DI1EeGfRanst07TlA">
    <ruleId>CONF:1918</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_UvXuQDJaEeGp0PdMXlGo5Q" severity="WARNING" base_Constraint="_Nd3PgDJaEeGp0PdMXlGo5Q">
    <ruleId>CONF:1873</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_CnyoYDJbEeGp0PdMXlGo5Q" severity="WARNING" base_Constraint="_99LTYDJaEeGp0PdMXlGo5Q">
    <ruleId>CONF:1875</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_6-iQoDJdEeGp0PdMXlGo5Q" severity="WARNING" base_Constraint="_2KrgEDJdEeGp0PdMXlGo5Q">
    <ruleId>CONF:1877</ruleId>
  </CDA:ConstraintValidation>
  <CDA:EntryRelationship xmi:id="_zDL8sDL3EeGXS8s8x7j2Fg">
    <ruleId>CONF:1581</ruleId>
    <ruleId>CONF:1582</ruleId>
    <ruleId>CONF:1584</ruleId>
  </CDA:EntryRelationship>
  <CDA:ActRelationship xmi:id="_7kt44DL3EeGXS8s8x7j2Fg"/>
  <CDA:ConstraintValidation xmi:id="_T_SU4DL5EeGXS8s8x7j2Fg">
    <ruleId>CONF:1581</ruleId>
    <ruleId>CONF:1582</ruleId>
    <ruleId>CONF:1584</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="_miyP0DL6EeGXS8s8x7j2Fg">
    <ruleId>CONF:1588</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_nYuZUDL6EeGXS8s8x7j2Fg" code="ASSERTION">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_4AnRQCYWEd-iTYfpNb4PkQ"/>
  </CDA:CodeSystemConstraint>
  <CDA:AssociationValidation xmi:id="_wFFlITL9EeGXS8s8x7j2Fg" severity="INFO">
    <ruleId>CONF-399</ruleId>
    <ruleId>CONF:2002</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_w79GQDL-EeGXS8s8x7j2Fg" base_Class="_n3QLkDL-EeGXS8s8x7j2Fg" templateId="2.16.840.1.113883.10.20.15.3.2"/>
  <CDA:CDATemplate xmi:id="_Vfh8oDMaEeGXS8s8x7j2Fg" base_Class="_Sv_0QDMaEeGXS8s8x7j2Fg" templateId="2.16.840.1.113883.10.20.15.3.10"/>
  <CDA:PropertyValidation xmi:id="_qcy1MDMkEeGXS8s8x7j2Fg">
    <ruleId>CONF:784</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_uxEGwDMkEeGXS8s8x7j2Fg">
    <ruleId>CONF:785</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_yfx0MDMkEeGXS8s8x7j2Fg">
    <ruleId>CONF:927</ruleId>
  </CDA:PropertyValidation>
  <CDA:ValueSetConstraint xmi:id="_1BwowDMkEeGXS8s8x7j2Fg">
    <reference href="../../org.openhealthtools.mdht.uml.cda.phcr.model/model/phcr-vocab.uml#_swk2sTMZEeGXS8s8x7j2Fg"/>
    <ruleId>CONF:786</ruleId>
  </CDA:ValueSetConstraint>
  <CDA:CodeSystemConstraint xmi:id="_9AkSYDMkEeGXS8s8x7j2Fg" code="completed">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_e8ZEoCWvEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:787</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_BqS2kDMlEeGXS8s8x7j2Fg">
    <ruleId>CONF:788</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_G-8AADMlEeGXS8s8x7j2Fg">
    <ruleId>CONF:789</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:ValueSetConstraint xmi:id="_NPn68DMlEeGXS8s8x7j2Fg">
    <reference href="../../org.openhealthtools.mdht.uml.cda.phcr.model/model/phcr-vocab.uml#_4uCuQTMZEeGXS8s8x7j2Fg"/>
  </CDA:ValueSetConstraint>
  <CDA:AssociationValidation xmi:id="_sd4GsDMlEeGXS8s8x7j2Fg">
    <ruleId>CONF:775</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_y6Vz0DMlEeGXS8s8x7j2Fg" typeCode="COMP">
    <ruleId>CONF:782</ruleId>
    <ruleId>CONF:926</ruleId>
    <ruleId>CONF:783</ruleId>
  </CDA:EntryRelationship>
  <CDA:PropertyValidation xmi:id="_AFltIDMmEeGXS8s8x7j2Fg">
    <ruleId>CONF:776</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_a8BuoDMnEeGXS8s8x7j2Fg"/>
  <CDA:CDATemplate xmi:id="_9lrYUDMpEeGXS8s8x7j2Fg"/>
  <CDA:CodeSystemConstraint xmi:id="_dxrT0DMsEeGXS8s8x7j2Fg" code="completed">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_e8ZEoCWvEd-iTYfpNb4PkQ"/>
  </CDA:CodeSystemConstraint>
  <CDA:ConstraintValidation xmi:id="_F7u2IDryEeGN27-qWOHvLQ" base_Constraint="_FEco0DryEeGN27-qWOHvLQ">
    <ruleId>CONF:1921</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_kHqpQDryEeGN27-qWOHvLQ" base_Constraint="_c4r6EDryEeGN27-qWOHvLQ">
    <ruleId>CONF:1933</ruleId>
  </CDA:ConstraintValidation>
  <CDA:AssociationValidation xmi:id="_BEHbMIQVEeGRypoUd5okyA" severity="WARNING"/>
  <Ecore:EAttribute xmi:id="_ObPeIHrXEd648OeXdSIbLg" isUnsettable="true">
    <base_Property href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_FcjT0EbtEd6besF9iFIJkQ"/>
  </Ecore:EAttribute>
  <CDA:CDATemplate xmi:id="_Jo9VUKBJEeGDSOGpMxCO3w" base_Class="__6FcQKBIEeGDSOGpMxCO3w" templateId="2.16.840.1.113883.10.20.15.3.62"/>
  <Ecore:EPackage xmi:id="_aAdKEO1qEeGeHKjzItayOg" base_Package="_6MwukMgnEeCI5ZpfyBisiQ" packageName="phcr" nsPrefix="phcr" nsURI="http://www.openhealthtools.org/mdht/uml/cda/phcr" basePackage="org.openhealthtools.mdht.uml.cda" prefix="PHCR">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.phcr'</annotation>
  </Ecore:EPackage>
  <Ecore:EClass xmi:id="_aAeYMO1qEeGeHKjzItayOg" base_Class="_6PmAIcgnEeCI5ZpfyBisiQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PublicHealthCaseReportTemplateId PublicHealthCaseReportPHCRRecordTarget PublicHealthCaseReportPHCRRecordTargetPatientRole PublicHealthCaseReportPHCRRecordTargetPatientRoleId PublicHealthCaseReportPHCRAuthor PublicHealthCaseReportPHCRAuthorTiime PublicHealthCaseReportPHCRAuthorAssignedAuthor PublicHealthCaseReportPHCRAuthorAssignedAuthorId PublicHealthCaseReportPHCRAuthorAssignedAuthorAddr PublicHealthCaseReportPHCRAuthorAssignedAuthorTelecom PublicHealthCaseReportPHCRAuthorAssignedAuthorAssignedPersonName PublicHealthCaseReportPHCRLegalAuthenticator PublicHealthCaseReportPHCRLegalAuthenticatorTime PublicHealthCaseReportPHCRLegalAuthenticatorAssignedEntity PublicHealthCaseReportPHCRLegalAuthenticatorAssignedEntityId PublicHealthCaseReportPHCRLegalAuthenticatorAssignedEntityAddr PublicHealthCaseReportPHCRLegalAuthenticatorAssignedEntityAssignedPersonName PublicHealthCaseReportCode PublicHealthCaseReportCodeP PublicHealthCaseReportPhcrClinicalInformationSection' templateId.root='2.16.840.1.113883.10.20.15' code.code='55751-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Public Health Case Report' constraints.validation.dependOn.PublicHealthCaseReportCode='PublicHealthCaseReportCodeP' constraints.validation.warning='PublicHealthCaseReportPhcrSocialHistorySection PublicHealthCaseReportPhcrTreatmentInformationSection PublicHealthCaseReportPhcrEncountersSection PublicHealthCaseReportPhcrRelevantDxTestsSection' constraints.validation.info='PublicHealthCaseReportImmunizationsSection'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_aAsaoO1qEeGeHKjzItayOg" base_Generalization="_NczUoNorEeCNdpppbqULhw"/>
  <Ecore:EClass xmi:id="_aAtBsO1qEeGeHKjzItayOg" base_Class="_Fw7f4MgpEeCI5ZpfyBisiQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhcrSocialHistorySectionTemplateId PhcrSocialHistorySectionCode PhcrSocialHistorySectionCodeP PhcrSocialHistorySectionTitle PhcrSocialHistorySectionText' templateId.root='2.16.840.1.113883.10.20.15.2.22' code.code='29762-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Social History' constraints.validation.dependOn.PhcrSocialHistorySectionCode='PhcrSocialHistorySectionCodeP' title.mixed='Social History' constraints.validation.warning='PhcrSocialHistorySectionGeotemporalHistoryObservation PhcrSocialHistorySectionMostRecentTimeArrivedInUSAObservation PhcrSocialHistorySectionRaceObservation PhcrSocialHistorySectionOccupationObservation' constraints.validation.info='PhcrSocialHistorySectionPregnancyObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aA09gO1qEeGeHKjzItayOg" base_Class="_na5gIMgpEeCI5ZpfyBisiQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeotemporalHistoryObservationTemplateId GeotemporalHistoryObservationClassCode GeotemporalHistoryObservationMoodCode GeotemporalHistoryObservationCode GeotemporalHistoryObservationCodeP GeotemporalHistoryObservationStatusCode GeotemporalHistoryObservationStatusCodeP GeotemporalHistoryObservationValue' templateId.root='2.16.840.1.113883.10.20.15.3.3' classCode='OBS' moodCode='EVN' code.code='55210-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Geotemporal History' constraints.validation.dependOn.GeotemporalHistoryObservationCode='GeotemporalHistoryObservationCodeP' constraints.validation.info='GeotemporalHistoryObservationText' statusCode.code='completed' constraints.validation.warning='GeotemporalHistoryObservationEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aBGqUO1qEeGeHKjzItayOg" base_Class="_3LQf4Mg8EeCkXZRmGSVUHA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='RaceObservationTemplateId RaceObservationClassCode RaceObservationMoodCode RaceObservationCode RaceObservationCodeP RaceObservationStatusCode RaceObservationStatusCodeP RaceObservationValue' templateId.root='2.16.840.1.113883.10.20.15.3.9' classCode='OBS' moodCode='EVN' code.code='32624-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Race' constraints.validation.dependOn.RaceObservationCode='RaceObservationCodeP' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aBUswO1qEeGeHKjzItayOg" base_Class="_bkm3gMg9EeCkXZRmGSVUHA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PregnancyObservationTemplateId PregnancyObservationClassCode PregnancyObservationMoodCode PregnancyObservationCode PregnancyObservationCodeP PregnancyObservationStatusCode PregnancyObservationStatusCodeP PregnancyObservationValue PregnancyObservationValueP' templateId.root='2.16.840.1.113883.10.20.15.3.8' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' constraints.validation.dependOn.PregnancyObservationCode='PregnancyObservationCodeP' statusCode.code='completed' constraints.validation.warning='PregnancyObservationEffectiveTime' value.code='77386006' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' value.displayName='Pregnant' constraints.validation.info='PregnancyObservationEstimatedDateOfDeliveryObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aBj9UO1qEeGeHKjzItayOg" base_Class="_sQmeQMg-EeCkXZRmGSVUHA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EstimatedDateOfDeliveryObservationTemplateId EstimatedDateOfDeliveryObservationClassCode EstimatedDateOfDeliveryObservationMoodCode EstimatedDateOfDeliveryObservationCode EstimatedDateOfDeliveryObservationCodeP EstimatedDateOfDeliveryObservationStatusCode EstimatedDateOfDeliveryObservationStatusCodeP EstimatedDateOfDeliveryObservationValue' templateId.root='2.16.840.1.113883.10.20.15.3.1' classCode='OBS' moodCode='EVN' code.code='11778-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Estimated Date of Delivery' constraints.validation.dependOn.EstimatedDateOfDeliveryObservationCode='EstimatedDateOfDeliveryObservationCodeP' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aBwxoO1qEeGeHKjzItayOg" base_Class="_bcgx0MhFEeCkXZRmGSVUHA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='OccupationObservationTemplateId OccupationObservationClassCode OccupationObservationMoodCode OccupationObservationCode OccupationObservationCodeP OccupationObservationStatusCode OccupationObservationStatusCodeP OccupationObservationValue' templateId.root='2.16.840.1.113883.10.20.15.3.7' classCode='OBS' moodCode='EVN' constraints.validation.info='OccupationObservationNegationInd OccupationObservationText' code.code='11341-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of Occupation' constraints.validation.dependOn.OccupationObservationCode='OccupationObservationCodeP' statusCode.code='completed' constraints.validation.warning='OccupationObservationEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aCDFgO1qEeGeHKjzItayOg" base_Class="_DH3mQMnGEeCRBIG_Gkv9FQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MostRecentTimeArrivedInUSAObservationTemplateId MostRecentTimeArrivedInUSAObservationClassCode MostRecentTimeArrivedInUSAObservationMoodCode MostRecentTimeArrivedInUSAObservationCode MostRecentTimeArrivedInUSAObservationCodeP MostRecentTimeArrivedInUSAObservationStatusCode MostRecentTimeArrivedInUSAObservationStatusCodeP MostRecentTimeArrivedInUSAObservationValue' templateId.root='2.16.840.1.113883.10.20.15.3.6' classCode='OBS' moodCode='EVN' code.code='55209-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Most Recent Time Arrived in USA' constraints.validation.dependOn.MostRecentTimeArrivedInUSAObservationCode='MostRecentTimeArrivedInUSAObservationCodeP' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aCPSwu1qEeGeHKjzItayOg" base_Class="_84uJEMqZEeCRBIG_Gkv9FQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhcrClinicalInformationSectionTemplateId PhcrClinicalInformationSectionPatientConditionConstraint PhcrClinicalInformationSectionCode PhcrClinicalInformationSectionCodeP PhcrClinicalInformationSectionTitle PhcrClinicalInformationSectionText PhcrClinicalInformationSectionCaseObservation' templateId.root='2.16.840.1.113883.10.20.15.2.1' code.code='55752-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Clinical Information' title.mixed='Clinical Information' constraints.validation.info='PhcrClinicalInformationSectionPatientConditionAliveObservation PhcrClinicalInformationSectionPatientConditionDeceasedObservation' constraints.validation.warning='PhcrClinicalInformationSectionPhcrRelevantMedicalConditionHistoryObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aCYcsu1qEeGeHKjzItayOg" base_Class="_XTjpIMqaEeCRBIG_Gkv9FQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhcrTreatmentInformationSectionTemplateId PhcrTreatmentInformationSectionCode PhcrTreatmentInformationSectionCodeP PhcrTreatmentInformationSectionTitle PhcrTreatmentInformationSectionText PhcrTreatmentInformationSectionTherapeuticRegimenAct' templateId.root='2.16.840.1.113883.10.20.15.2.4' code.code='55753-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Treatment Information' title.mixed='Treatment Information'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_aCgYhe1qEeGeHKjzItayOg" base_Generalization="_jedN8NorEeCNdpppbqULhw"/>
  <Ecore:EClass xmi:id="_aCg_ku1qEeGeHKjzItayOg" base_Class="_2SAeUMqaEeCRBIG_Gkv9FQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhcrEncountersSectionTemplateId PhcrEncountersSectionTitle PhcrEncountersSectionText PhcrEncountersSectionEncountersActivity' templateId.root='2.16.840.1.113883.10.20.15.2.2' title.mixed='Encounters'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_aCo7Ze1qEeGeHKjzItayOg" base_Generalization="_IwNZ4PNqEeCOm7Y48UO5Tg"/>
  <Ecore:EClass xmi:id="_aCpicu1qEeGeHKjzItayOg" base_Class="_2dxgkNM5EeCbJdgmSYxI0g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhcrRelevantDxTestsSectionTemplateId PhcrRelevantDxTestsSectionCode PhcrRelevantDxTestsSectionCodeP PhcrRelevantDxTestsSectionTitle PhcrRelevantDxTestsSectionText' templateId.root='2.16.840.1.113883.10.20.15.2.3' code.code='30954-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Relevant diagnostic tests and/or laboratory data' constraints.validation.dependOn.PhcrRelevantDxTestsSectionCode='PhcrRelevantDxTestsSectionCodeP' title.mixed='Relevant diagnostic tests and/or laboratory data' constraints.validation.info='PhcrRelevantDxTestsSectionResultOrganizer PhcrRelevantDxTestsSectionResultObservation PhcrRelevantDxTestsSectionImagingObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aCxeQO1qEeGeHKjzItayOg" base_Class="_h_hhcNM-EeCbJdgmSYxI0g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientConditionAliveObservationTemplateId PatientConditionAliveObservationClassCode PatientConditionAliveObservationMoodCode PatientConditionAliveObservationCode PatientConditionAliveObservationCodeP PatientConditionAliveObservationStatusCode PatientConditionAliveObservationStatusCodeP PatientConditionAliveObservationValue PatientConditionAliveObservationValueP' templateId.root='2.16.840.1.113883.10.20.15.3.42' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' constraints.validation.dependOn.PatientConditionAliveObservationCode='PatientConditionAliveObservationCodeP' statusCode.code='completed' constraints.validation.warning='PatientConditionAliveObservationEffectiveTime' value.code='438949009' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' value.displayName='Alive'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aDBV4O1qEeGeHKjzItayOg" base_Class="_n3xuQNM-EeCbJdgmSYxI0g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientConditionDeceasedObservationTemplateId PatientConditionDeceasedObservationClassCode PatientConditionDeceasedObservationMoodCode PatientConditionDeceasedObservationCode PatientConditionDeceasedObservationCodeP PatientConditionDeceasedObservationStatusCode PatientConditionDeceasedObservationStatusCodeP PatientConditionDeceasedObservationValue PatientConditionDeceasedObservationValueP' templateId.root='2.16.840.1.113883.10.20.15.3.17' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' constraints.validation.dependOn.PatientConditionDeceasedObservationCode='PatientConditionDeceasedObservationCodeP' statusCode.code='completed' constraints.validation.warning='PatientConditionDeceasedObservationEffectiveTime' value.code='419099009' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' value.displayName='Dead'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aDRNgO1qEeGeHKjzItayOg" base_Class="__cLgwNQPEeC4C5jYVS2kfQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SignsAndSymptomsObservationTemplateId SignsAndSymptomsObservationClassCode SignsAndSymptomsObservationMoodCode SignsAndSymptomsObservationNegationInd SignsAndSymptomsObservationCode SignsAndSymptomsObservationCodeP SignsAndSymptomsObservationStatusCode SignsAndSymptomsObservationStatusCodeP SignsAndSymptomsObservationValue' templateId.root='2.16.840.1.113883.10.20.15.3.53' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' constraints.validation.dependOn.SignsAndSymptomsObservationCode='SignsAndSymptomsObservationCodeP' statusCode.code='completed' constraints.validation.warning='SignsAndSymptomsObservationEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aDfP8O1qEeGeHKjzItayOg" base_Class="_2p558NSrEeC18pmrrt-Mbg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TherapeuticRegimenActTemplateId TherapeuticRegimenActClassCode TherapeuticRegimenActMoodCode TherapeuticRegimenActNegationInd TherapeuticRegimenActCode TherapeuticRegimenActCodeP TherapeuticRegimenActStatusCode TherapeuticRegimenActStatusCodeP' templateId.root='2.16.840.1.113883.10.20.15.3.57' classCode='ACT' moodCode='EVN' code.code='133877004' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Therapeutic regimen' constraints.validation.dependOn.TherapeuticRegimenActCode='TherapeuticRegimenActCodeP' statusCode.code='completed' constraints.validation.warning='TherapeuticRegimenActTreatmentGivenSubstanceAdministration' constraints.validation.info='TherapeuticRegimenActTreatmentNotGivenSubstanceAdministration'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aDsrUO1qEeGeHKjzItayOg" base_Class="_XOKZ4NStEeC18pmrrt-Mbg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TreatmentGivenSubstanceAdministrationTemplateId TreatmentGivenSubstanceAdministrationTreatmentGivenNegationInd TreatmentGivenSubstanceAdministrationClassCode TreatmentGivenSubstanceAdministrationMoodCode TreatmentGivenSubstanceAdministrationNegationInd TreatmentGivenSubstanceAdministrationStatusCode TreatmentGivenSubstanceAdministrationRouteCode' templateId.root='2.16.840.1.113883.10.20.15.3.55' classCode='SBADM' moodCode='EVN' constraints.validation.warning='TreatmentGivenSubstanceAdministrationEffectiveTime TreatmentGivenSubstanceAdministrationRouteCodeP' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1' routeCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.TreatmentGivenSubstanceAdministrationRouteCode='TreatmentGivenSubstanceAdministrationRouteCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aD5foO1qEeGeHKjzItayOg" base_Class="_NbgssNSwEeC18pmrrt-Mbg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TreatmentNotGivenSubstanceAdministrationTemplateId TreatmentNotGivenSubstanceAdministrationTreatmentNotGivenNegationInd TreatmentNotGivenSubstanceAdministrationClassCode TreatmentNotGivenSubstanceAdministrationMoodCode TreatmentNotGivenSubstanceAdministrationNegationInd TreatmentNotGivenSubstanceAdministrationStatusCode TreatmentNotGivenSubstanceAdministrationStatusCodeP' templateId.root='2.16.840.1.113883.10.20.15.3.56' classCode='SBADM' moodCode='EVN' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_aEBbcO1qEeGeHKjzItayOg" base_Generalization="_tz2ZAO32EeC3U4HbCHnHkw"/>
  <Ecore:EClass xmi:id="_aECCge1qEeGeHKjzItayOg" base_Class="_p8bDQNTCEeC18pmrrt-Mbg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CaseObservationTemplateId CaseObservationClassCode CaseObservationMoodCode CaseObservationCode CaseObservationCodeP CaseObservationStatusCode CaseObservationStatusCodeP CaseObservationValue' templateId.root='2.16.840.1.113883.10.20.15.3.54' constraints.validation.warning='CaseObservationEffectiveTimeLow CaseObservationAuthor CaseObservationAuthorAssignedAuthor CaseObservationEffectiveTime CaseObservationProblemStatusObservation CaseObservationSignsAndSymptomsObservation' classCode='OBS' moodCode='EVN' constraints.validation.info='CaseObservationId' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' constraints.validation.dependOn.CaseObservationCode='CaseObservationCodeP' statusCode.code='completed' constraints.validation.dependOn.CaseObservationStatusCode='CaseObservationStatusCodeP'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_aEYn1O1qEeGeHKjzItayOg" base_Generalization="_0r8IYfNrEeCOm7Y48UO5Tg"/>
  <Ecore:EClass xmi:id="_aEZO4u1qEeGeHKjzItayOg" base_Class="_0r8IYPNrEeCOm7Y48UO5Tg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PHCRResultOrganizerTemplateId PHCRResultOrganizerClassCode PHCRResultOrganizerMoodCode PHCRResultOrganizerId PHCRResultOrganizerCode PHCRResultOrganizerStatusCode PHCRResultOrganizerStatusCodeP PHCRResultOrganizerEffectiveTime PHCRResultOrganizerResultObservation' templateId.root='2.16.840.1.113883.10.20.15.3.59' classCode='BATTERY' moodCode='EVN' statusCode.code='completed' constraints.validation.dependOn.PHCRResultOrganizerStatusCode='PHCRResultOrganizerStatusCodeP' constraints.validation.info='PHCRResultOrganizerSpecimenCollectionProcedure'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_aEjm8O1qEeGeHKjzItayOg" base_Generalization="__3pL0fNrEeCOm7Y48UO5Tg"/>
  <Ecore:EClass xmi:id="_aEkOAu1qEeGeHKjzItayOg" base_Class="__3pL0PNrEeCOm7Y48UO5Tg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PHCRResultObservationTemplateId PHCRResultObservationClassCode PHCRResultObservationStatusCode PHCRResultObservationStatusCodeP' templateId.root='2.16.840.1.113883.10.20.15.3.58' classCode='OBS' statusCode.code='completed' constraints.validation.dependOn.PHCRResultObservationStatusCode='PHCRResultObservationStatusCodeP' constraints.validation.info='PHCRResultObservationSpecimenCollectionProcedure PHCRResultObservationSusceptibilityResult'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_aEtX9e1qEeGeHKjzItayOg" base_Generalization="_C5IPgfQfEeCOm7Y48UO5Tg"/>
  <Ecore:EClass xmi:id="_aEumEO1qEeGeHKjzItayOg" base_Class="_C5IPgPQfEeCOm7Y48UO5Tg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ImagingObservationTemplateId ImagingObservationClassCode ImagingObservationMoodCode ImagingObservationId ImagingObservationCode ImagingObservationStatusCode ImagingObservationStatusCodeP ImagingObservationValue' templateId.root='2.16.840.1.113883.10.20.15.3.5' classCode='OBS' moodCode='EVN' statusCode.code='completed' constraints.validation.dependOn.ImagingObservationStatusCode='ImagingObservationStatusCodeP' constraints.validation.warning='ImagingObservationEffectiveTime' constraints.validation.info='ImagingObservationMethodCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aFCIEO1qEeGeHKjzItayOg" base_Class="_n3QLkDL-EeGXS8s8x7j2Fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SpecimenCollectionProcedureTemplateId SpecimenCollectionProcedureClassCode SpecimenCollectionProcedureMoodCode SpecimenCollectionProcedureCode' templateId.root='2.16.840.1.113883.10.20.15.3.2' classCode='PROC' moodCode='EVN' constraints.validation.warning='SpecimenCollectionProcedureEffectiveTime SpecimenCollectionProcedureTargetSiteCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aFMgIO1qEeGeHKjzItayOg" base_Class="_Sv_0QDMaEeGXS8s8x7j2Fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SusceptibilityResultTemplateId SusceptibilityResultClassCode SusceptibilityResultMoodCode SusceptibilityResultCode SusceptibilityResultCodeP SusceptibilityResultStatusCode SusceptibilityResultStatusCodeP' templateId.root='2.16.840.1.113883.10.20.15.3.10' classCode='OBS' moodCode='EVN' code.code='18769-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Microbial susceptibility tests' constraints.validation.dependOn.SusceptibilityResultCode='SusceptibilityResultCodeP' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_aFcXwO1qEeGeHKjzItayOg" base_Class="__6FcQKBIEeGDSOGpMxCO3w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhcrRelevantMedicalConditionHistoryObservationTemplateId PhcrRelevantMedicalConditionHistoryObservationClassCode PhcrRelevantMedicalConditionHistoryObservationCode PhcrRelevantMedicalConditionHistoryObservationCodeP PhcrRelevantMedicalConditionHistoryObservationMoodCode PhcrRelevantMedicalConditionHistoryObservationStatusCode PhcrRelevantMedicalConditionHistoryObservationStatusCodeP' templateId.root='2.16.840.1.113883.10.20.15.3.62' classCode='OBS' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' constraints.validation.dependOn.PhcrRelevantMedicalConditionHistoryObservationCode='PhcrRelevantMedicalConditionHistoryObservationCodeP' constraints.validation.warning='PhcrRelevantMedicalConditionHistoryObservationEffectiveTime PhcrRelevantMedicalConditionHistoryObservationProblemObservation' moodCode='EVN' constraints.validation.info='PhcrRelevantMedicalConditionHistoryObservationNegationInd' statusCode.code='completed'</annotation>
  </Ecore:EClass>
</xmi:XMI>
