<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_cUvo4D-7EeGyQNOMdKXkfQ" name="consoltoc">
    <packageImport xmi:id="_ORJqID_uEeGoSomzgLSYkg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_CigOwD9LEeGo68n7X9Wymg" name="DischargeSummary">
      <ownedRule xmi:id="_tkZqpD_uEeGoSomzgLSYkg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_CigOwD9LEeGo68n7X9Wymg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkZqpT_uEeGoSomzgLSYkg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.1275.1.1.1.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_CigOwT9LEeGo68n7X9Wymg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_tki0kD_uEeGoSomzgLSYkg" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_tki0kz_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0kz_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0kD_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki0lD_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0kT_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0kj_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki0lT_uEeGoSomzgLSYkg" name="getHospitalCourseSection" isQuery="true" bodyCondition="_tki0mD_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0mD_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0lT_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki0mT_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalCourseSection))->asSequence()->first().oclAsType(consol::HospitalCourseSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0lj_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2RqkOxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0lz_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki0mj_uEeGoSomzgLSYkg" name="getHospitalDischargeDiagnosisSection" isQuery="true" bodyCondition="_tki0nT_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0nT_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0mj_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki0nj_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeDiagnosisSection))->asSequence()->first().oclAsType(consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0mz_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidURSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0nD_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki0nz_uEeGoSomzgLSYkg" name="getHospitalDischargeMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_tki0oj_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0oj_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0nz_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki0oz_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::HospitalDischargeMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0oD_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj7RSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0oT_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki0pD_uEeGoSomzgLSYkg" name="getPlanOfCareSection" isQuery="true" bodyCondition="_tki0pz_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0pz_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0pD_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki0qD_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0pT_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0pj_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki0qT_uEeGoSomzgLSYkg" name="getProblemSectionEntriesOptional" isQuery="true" bodyCondition="_tki0rD_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0rD_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0qT_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki0rT_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0qj_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_naxrkBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0qz_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki0rj_uEeGoSomzgLSYkg" name="getChiefComplaintSection" isQuery="true" bodyCondition="_tki0sT_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0sT_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0rj_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki0sj_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->first().oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0rz_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0sD_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki0sz_uEeGoSomzgLSYkg" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_tki0tj_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0tj_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0sz_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki0tz_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->first().oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0tD_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0tT_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki0uD_uEeGoSomzgLSYkg" name="getDischargeDietSection" isQuery="true" bodyCondition="_tki0uz_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0uz_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0uD_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki0vD_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DischargeDietSection))->asSequence()->first().oclAsType(consol::DischargeDietSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0uT_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Uz-4xSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0uj_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki0vT_uEeGoSomzgLSYkg" name="getFamilyHistorySection" isQuery="true" bodyCondition="_tki0wD_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0wD_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0vT_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki0wT_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->first().oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0vj_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2IWQIxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0vz_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki0wj_uEeGoSomzgLSYkg" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_tki0xT_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0xT_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0wj_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki0xj_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->first().oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0wz_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KKOBhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0xD_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki0xz_uEeGoSomzgLSYkg" name="getHistoryOfPresentIllnessSection" isQuery="true" bodyCondition="_tki0yj_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0yj_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0xz_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki0yz_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0yD_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PcWsRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0yT_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki0zD_uEeGoSomzgLSYkg" name="getHospitalDischargePhysicalSection" isQuery="true" bodyCondition="_tki0zz_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0zz_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0zD_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki00D_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargePhysicalSection))->asSequence()->first().oclAsType(consol::HospitalDischargePhysicalSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0zT_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_WikGsCUTEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0zj_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki00T_uEeGoSomzgLSYkg" name="getHospitalDischargeStudiesSummarySection" isQuery="true" bodyCondition="_tki01D_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki01D_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki00T_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki01T_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeStudiesSummarySection))->asSequence()->first().oclAsType(consol::HospitalDischargeStudiesSummarySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki00j_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_38AXoCUTEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki00z_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki01j_uEeGoSomzgLSYkg" name="getProceduresSectionEntriesOptional" isQuery="true" bodyCondition="_tki02T_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki02T_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki01j_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki02j_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki01z_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_s9Ig4BVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki02D_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki02z_uEeGoSomzgLSYkg" name="getReasonForVisitSection" isQuery="true" bodyCondition="_tki03j_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki03j_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki02z_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki03z_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->first().oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki03D_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki03T_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki04D_uEeGoSomzgLSYkg" name="getReviewOfSystemsSection" isQuery="true" bodyCondition="_tki04z_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki04z_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki04D_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki05D_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->first().oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki04T_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2RqkMBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki04j_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki05T_uEeGoSomzgLSYkg" name="getSocialHistorySection" isQuery="true" bodyCondition="_tki06D_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki06D_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki05T_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki06T_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->first().oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki05j_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki05z_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki06j_uEeGoSomzgLSYkg" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_tki07T_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki07T_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki06j_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki07j_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki06z_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki07D_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tki07z_uEeGoSomzgLSYkg" name="getImmunizationsSectionEntriesOptional" isQuery="true" bodyCondition="_tki08j_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki08j_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki07z_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki08z_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki08D_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_EuPloBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki08T_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UjVycD9VEeGyQNOMdKXkfQ" name="ConsultationRequest">
      <ownedRule xmi:id="_tki09T_uEeGoSomzgLSYkg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_UjVycD9VEeGyQNOMdKXkfQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki09j_uEeGoSomzgLSYkg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.1275.1.1.4.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UjVycT9VEeGyQNOMdKXkfQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_tki0-D_uEeGoSomzgLSYkg" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_tki0-z_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tki0-z_uEeGoSomzgLSYkg" name="body" constrainedElement="_tki0-D_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tki0_D_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tki0-T_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tki0-j_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tkslkD_uEeGoSomzgLSYkg" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_tkslkz_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tkslkz_uEeGoSomzgLSYkg" name="body" constrainedElement="_tkslkD_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksllD_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))->asSequence()->first().oclAsType(consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tkslkT_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tkslkj_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tksllT_uEeGoSomzgLSYkg" name="getHistoryOfPresentIllnessSection" isQuery="true" bodyCondition="_tkslmD_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tkslmD_uEeGoSomzgLSYkg" name="body" constrainedElement="_tksllT_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkslmT_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksllj_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PcWsRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksllz_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tkslmj_uEeGoSomzgLSYkg" name="getPhysicalExamSection" isQuery="true" bodyCondition="_tkslnT_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tkslnT_uEeGoSomzgLSYkg" name="body" constrainedElement="_tkslmj_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkslnj_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))->asSequence()->first().oclAsType(consol::PhysicalExamSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tkslmz_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Pxt0hSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tkslnD_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tkslnz_uEeGoSomzgLSYkg" name="getReasonForReferralSection" isQuery="true" bodyCondition="_tksloj_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tksloj_uEeGoSomzgLSYkg" name="body" constrainedElement="_tkslnz_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksloz_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))->asSequence()->first().oclAsType(consol::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksloD_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQFxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksloT_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tkslpD_uEeGoSomzgLSYkg" name="getMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_tkslpz_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tkslpz_uEeGoSomzgLSYkg" name="body" constrainedElement="_tkslpD_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkslqD_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::MedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tkslpT_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_iAoXEBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tkslpj_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tkslqT_uEeGoSomzgLSYkg" name="getProblemSectionEntriesOptional" isQuery="true" bodyCondition="_tkslrD_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tkslrD_uEeGoSomzgLSYkg" name="body" constrainedElement="_tkslqT_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkslrT_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tkslqj_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_naxrkBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tkslqz_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tkslrj_uEeGoSomzgLSYkg" name="getProceduresSectionEntriesOptional" isQuery="true" bodyCondition="_tkslsT_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tkslsT_uEeGoSomzgLSYkg" name="body" constrainedElement="_tkslrj_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkslsj_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tkslrz_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_s9Ig4BVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tkslsD_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tkslsz_uEeGoSomzgLSYkg" name="getResultsSectionEntriesOptional" isQuery="true" bodyCondition="_tksltj_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tksltj_uEeGoSomzgLSYkg" name="body" constrainedElement="_tkslsz_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksltz_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ResultsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksltD_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_xGqiEBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksltT_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tksluD_uEeGoSomzgLSYkg" name="getAdvanceDirectivesSectionEntriesOptional" isQuery="true" bodyCondition="_tksluz_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tksluz_uEeGoSomzgLSYkg" name="body" constrainedElement="_tksluD_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkslvD_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AdvanceDirectivesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksluT_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_1RZdIBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksluj_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tkslvT_uEeGoSomzgLSYkg" name="getEncountersSectionEntriesOptional" isQuery="true" bodyCondition="_tkslwD_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tkslwD_uEeGoSomzgLSYkg" name="body" constrainedElement="_tkslvT_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkslwT_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSectionEntriesOptional))->asSequence()->first().oclAsType(consol::EncountersSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tkslvj_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4yj2wBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tkslvz_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tkslwj_uEeGoSomzgLSYkg" name="getFamilyHistorySection" isQuery="true" bodyCondition="_tkslxT_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tkslxT_uEeGoSomzgLSYkg" name="body" constrainedElement="_tkslwj_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkslxj_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->first().oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tkslwz_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2IWQIxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tkslxD_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tkslxz_uEeGoSomzgLSYkg" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_tkslyj_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tkslyj_uEeGoSomzgLSYkg" name="body" constrainedElement="_tkslxz_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkslyz_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->first().oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tkslyD_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KKOBhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tkslyT_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tkslzD_uEeGoSomzgLSYkg" name="getImmunizationsSectionEntriesOptional" isQuery="true" bodyCondition="_tkslzz_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tkslzz_uEeGoSomzgLSYkg" name="body" constrainedElement="_tkslzD_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksl0D_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tkslzT_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_EuPloBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tkslzj_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tksl0T_uEeGoSomzgLSYkg" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="_tksl1D_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tksl1D_uEeGoSomzgLSYkg" name="body" constrainedElement="_tksl0T_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksl1T_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))->asSequence()->first().oclAsType(consol::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksl0j_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KEucBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksl0z_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tksl1j_uEeGoSomzgLSYkg" name="getPlanOfCareSection" isQuery="true" bodyCondition="_tksl2T_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tksl2T_uEeGoSomzgLSYkg" name="body" constrainedElement="_tksl1j_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksl2j_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksl1z_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksl2D_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tksl2z_uEeGoSomzgLSYkg" name="getSocialHistorySection" isQuery="true" bodyCondition="_tksl3j_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tksl3j_uEeGoSomzgLSYkg" name="body" constrainedElement="_tksl2z_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksl3z_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->first().oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksl3D_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksl3T_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tksl4D_uEeGoSomzgLSYkg" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_tksl4z_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tksl4z_uEeGoSomzgLSYkg" name="body" constrainedElement="_tksl4D_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksl5D_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksl4T_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksl4j_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tksl5T_uEeGoSomzgLSYkg" name="getChiefComplaintSection" isQuery="true" bodyCondition="_tksl6D_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tksl6D_uEeGoSomzgLSYkg" name="body" constrainedElement="_tksl5T_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksl6T_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->first().oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksl5j_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksl5z_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tksl6j_uEeGoSomzgLSYkg" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_tksl7T_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tksl7T_uEeGoSomzgLSYkg" name="body" constrainedElement="_tksl6j_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksl7j_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->first().oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksl6z_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksl7D_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tksl7z_uEeGoSomzgLSYkg" name="getGeneralStatusSection" isQuery="true" bodyCondition="_tksl8j_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tksl8j_uEeGoSomzgLSYkg" name="body" constrainedElement="_tksl7z_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksl8z_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))->asSequence()->first().oclAsType(consol::GeneralStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksl8D_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Pxt6xSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksl8T_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tksl9D_uEeGoSomzgLSYkg" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_tksl9z_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tksl9z_uEeGoSomzgLSYkg" name="body" constrainedElement="_tksl9D_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksl-D_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksl9T_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PQJcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksl9j_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tksl-T_uEeGoSomzgLSYkg" name="getPayersSection" isQuery="true" bodyCondition="_tksl_D_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tksl_D_uEeGoSomzgLSYkg" name="body" constrainedElement="_tksl-T_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksl_T_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection))->asSequence()->first().oclAsType(consol::PayersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksl-j_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2MV_UBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksl-z_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_z3FJcD_JEeGIl9z9SjyqRw" name="ConsultationSummary">
      <ownedRule xmi:id="_tksl_z_uEeGoSomzgLSYkg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_z3FJcD_JEeGIl9z9SjyqRw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksmAD_uEeGoSomzgLSYkg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.1275.1.1.3.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_z3FJcT_JEeGIl9z9SjyqRw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_tksmAj_uEeGoSomzgLSYkg" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_tksmBT_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tksmBT_uEeGoSomzgLSYkg" name="body" constrainedElement="_tksmAj_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tksmBj_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksmAz_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksmBD_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tksmBz_uEeGoSomzgLSYkg" name="getMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_tk2WkD_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2WkD_uEeGoSomzgLSYkg" name="body" constrainedElement="_tksmBz_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2WkT_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::MedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tksmCD_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_iAoXEBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tksmCT_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2Wkj_uEeGoSomzgLSYkg" name="getProblemSectionEntriesOptional" isQuery="true" bodyCondition="_tk2WlT_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2WlT_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2Wkj_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2Wlj_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2Wkz_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_naxrkBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2WlD_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2Wlz_uEeGoSomzgLSYkg" name="getResultsSectionEntriesOptional" isQuery="true" bodyCondition="_tk2Wmj_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2Wmj_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2Wlz_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2Wmz_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ResultsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2WmD_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_xGqiEBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2WmT_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2WnD_uEeGoSomzgLSYkg" name="getAdvanceDirectivesSectionEntriesOptional" isQuery="true" bodyCondition="_tk2Wnz_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2Wnz_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2WnD_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2WoD_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AdvanceDirectivesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2WnT_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_1RZdIBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2Wnj_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2WoT_uEeGoSomzgLSYkg" name="getEncountersSectionEntriesOptional" isQuery="true" bodyCondition="_tk2WpD_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2WpD_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2WoT_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2WpT_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSectionEntriesOptional))->asSequence()->first().oclAsType(consol::EncountersSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2Woj_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4yj2wBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2Woz_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2Wpj_uEeGoSomzgLSYkg" name="getFamilyHistorySection" isQuery="true" bodyCondition="_tk2WqT_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2WqT_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2Wpj_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2Wqj_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->first().oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2Wpz_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2IWQIxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2WqD_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2Wqz_uEeGoSomzgLSYkg" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_tk2Wrj_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2Wrj_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2Wqz_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2Wrz_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->first().oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2WrD_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KKOBhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2WrT_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2WsD_uEeGoSomzgLSYkg" name="getImmunizationsSectionEntriesOptional" isQuery="true" bodyCondition="_tk2Wsz_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2Wsz_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2WsD_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2WtD_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2WsT_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_EuPloBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2Wsj_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2WtT_uEeGoSomzgLSYkg" name="getProceduresSectionEntriesOptional" isQuery="true" bodyCondition="_tk2WuD_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2WuD_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2WtT_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2WuT_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2Wtj_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_s9Ig4BVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2Wtz_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2Wuj_uEeGoSomzgLSYkg" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="_tk2WvT_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2WvT_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2Wuj_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2Wvj_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))->asSequence()->first().oclAsType(consol::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2Wuz_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KEucBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2WvD_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2Wvz_uEeGoSomzgLSYkg" name="getPayersSection" isQuery="true" bodyCondition="_tk2Wwj_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2Wwj_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2Wvz_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2Wwz_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection))->asSequence()->first().oclAsType(consol::PayersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2WwD_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2MV_UBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2WwT_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2WxD_uEeGoSomzgLSYkg" name="getPlanOfCareSection" isQuery="true" bodyCondition="_tk2Wxz_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2Wxz_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2WxD_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2WyD_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2WxT_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2Wxj_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2WyT_uEeGoSomzgLSYkg" name="getSocialHistorySection" isQuery="true" bodyCondition="_tk2WzD_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2WzD_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2WyT_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2WzT_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->first().oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2Wyj_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2Wyz_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2Wzj_uEeGoSomzgLSYkg" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_tk2W0T_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2W0T_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2Wzj_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2W0j_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2Wzz_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2W0D_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g6MWwD_LEeGIl9z9SjyqRw" name="DischargeInstructions">
      <ownedRule xmi:id="_tk2W1D_uEeGoSomzgLSYkg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_g6MWwD_LEeGIl9z9SjyqRw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2W1T_uEeGoSomzgLSYkg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.1275.1.1.2.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_g6MWwT_LEeGIl9z9SjyqRw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_tk2W1z_uEeGoSomzgLSYkg" name="getPlanOfCareSection" isQuery="true" bodyCondition="_tk2W2j_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2W2j_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2W1z_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2W2z_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2W2D_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2W2T_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2W3D_uEeGoSomzgLSYkg" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_tk2W3z_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2W3z_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2W3D_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2W4D_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2W3T_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2W3j_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2W4T_uEeGoSomzgLSYkg" name="getProblemSectionEntriesOptional" isQuery="true" bodyCondition="_tk2W5D_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2W5D_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2W4T_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2W5T_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2W4j_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_naxrkBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2W4z_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2W5j_uEeGoSomzgLSYkg" name="getHospitalDischargeMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_tk2W6T_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2W6T_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2W5j_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2W6j_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::HospitalDischargeMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2W5z_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj7RSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2W6D_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2W6z_uEeGoSomzgLSYkg" name="getAdvanceDirectivesSectionEntriesOptional" isQuery="true" bodyCondition="_tk2W7j_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2W7j_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2W6z_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2W7z_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AdvanceDirectivesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2W7D_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_1RZdIBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2W7T_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2W8D_uEeGoSomzgLSYkg" name="getImmunizationsSectionEntriesOptional" isQuery="true" bodyCondition="_tk2W8z_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2W8z_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2W8D_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2W9D_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2W8T_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_EuPloBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2W8j_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2W9T_uEeGoSomzgLSYkg" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="_tk2W-D_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2W-D_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2W9T_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2W-T_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))->asSequence()->first().oclAsType(consol::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2W9j_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KEucBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2W9z_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tk2W-j_uEeGoSomzgLSYkg" name="getAdvanceDirectivesSectionEntriesOptional2" isQuery="true" bodyCondition="_tk2W_T_uEeGoSomzgLSYkg">
        <ownedRule xmi:id="_tk2W_T_uEeGoSomzgLSYkg" name="body" constrainedElement="_tk2W-j_uEeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk2W_j_uEeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AdvanceDirectivesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tk2W-z_uEeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_1RZdIBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tk2W_D_uEeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <profileApplication xmi:id="_NtY7DsqHEeC8XvPcqnB3eA">
      <eAnnotations xmi:id="_NtY7D8qHEeC8XvPcqnB3eA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_NtY7EMqHEeC8XvPcqnB3eA">
      <eAnnotations xmi:id="_NtY7EcqHEeC8XvPcqnB3eA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_tkZqoD_uEeGoSomzgLSYkg">
      <eAnnotations xmi:id="_tkZqoT_uEeGoSomzgLSYkg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_cWq7gD-7EeGyQNOMdKXkfQ" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="consoltoc" nsURI="http://www.openhealthtools.org/mdht/uml/cda/consoltoc" packageName="consoltoc" prefix="consoltoc" base_Namespace="_cUvo4D-7EeGyQNOMdKXkfQ"/>
  <CDA:CDATemplate xmi:id="_E2Ok4D9LEeGo68n7X9Wymg" base_Class="_CigOwD9LEeGo68n7X9Wymg" templateId="2.16.840.1.113883.3.1275.1.1.1.1"/>
  <CDA:CDATemplate xmi:id="_XV29YD9VEeGyQNOMdKXkfQ" base_Class="_UjVycD9VEeGyQNOMdKXkfQ" templateId="2.16.840.1.113883.3.1275.1.1.4.1"/>
  <CDA:CDATemplate xmi:id="_22ZaQD_JEeGIl9z9SjyqRw" base_Class="_z3FJcD_JEeGIl9z9SjyqRw" templateId="2.16.840.1.113883.3.1275.1.1.3.1"/>
  <CDA:CDATemplate xmi:id="_VrplQD_MEeGIl9z9SjyqRw" base_Class="_g6MWwD_LEeGIl9z9SjyqRw" templateId="2.16.840.1.113883.3.1275.1.1.2.1"/>
  <Ecore:EPackage xmi:id="_tkZqoj_uEeGoSomzgLSYkg" base_Package="_cUvo4D-7EeGyQNOMdKXkfQ" packageName="consoltoc" nsPrefix="consoltoc" nsURI="http://www.openhealthtools.org/mdht/uml/cda/consoltoc" basePackage="org.openhealthtools.mdht.uml.cda" prefix="consoltoc"/>
  <CDA:ConformsTo xmi:id="_tkZqoz_uEeGoSomzgLSYkg" base_Generalization="_CigOwT9LEeGo68n7X9Wymg"/>
  <Ecore:EClass xmi:id="_tkZqpj_uEeGoSomzgLSYkg" base_Class="_CigOwD9LEeGo68n7X9Wymg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.1275.1.1.1.1' constraints.validation.error='DischargeSummaryTemplateId'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_tki09D_uEeGoSomzgLSYkg" base_Generalization="_UjVycT9VEeGyQNOMdKXkfQ"/>
  <Ecore:EClass xmi:id="_tki09z_uEeGoSomzgLSYkg" base_Class="_UjVycD9VEeGyQNOMdKXkfQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.1275.1.1.4.1' constraints.validation.error='ConsultationRequestTemplateId'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_tksl_j_uEeGoSomzgLSYkg" base_Generalization="_z3FJcT_JEeGIl9z9SjyqRw"/>
  <Ecore:EClass xmi:id="_tksmAT_uEeGoSomzgLSYkg" base_Class="_z3FJcD_JEeGIl9z9SjyqRw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.1275.1.1.3.1' constraints.validation.error='ConsultationSummaryTemplateId'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_tk2W0z_uEeGoSomzgLSYkg" base_Generalization="_g6MWwT_LEeGIl9z9SjyqRw"/>
  <Ecore:EClass xmi:id="_tk2W1j_uEeGoSomzgLSYkg" base_Class="_g6MWwD_LEeGIl9z9SjyqRw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.1275.1.1.2.1' constraints.validation.error='DischargeInstructionsTemplateId'</annotation>
  </Ecore:EClass>
</xmi:XMI>
