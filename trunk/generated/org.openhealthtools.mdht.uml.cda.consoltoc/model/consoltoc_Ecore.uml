<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_cUvo4D-7EeGyQNOMdKXkfQ" name="consoltoc">
    <packageImport xmi:id="_ORJqID_uEeGoSomzgLSYkg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_CigOwD9LEeGo68n7X9Wymg" name="DischargeSummary">
      <ownedRule xmi:id="_yyKPREC6EeGoSomzgLSYkg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_CigOwD9LEeGo68n7X9Wymg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyKPRUC6EeGoSomzgLSYkg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.1275.1.1.1.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_CigOwT9LEeGo68n7X9Wymg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_yyQV4UC6EeGoSomzgLSYkg" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_yyQV5EC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyQV5EC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyQV4UC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyQV5UC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyQV4kC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyQV40C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyQV5kC6EeGoSomzgLSYkg" name="getHospitalCourseSection" isQuery="true" bodyCondition="_yyQV6UC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyQV6UC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyQV5kC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyQV6kC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalCourseSection))->asSequence()->first().oclAsType(consol::HospitalCourseSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyQV50C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2RqkOxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyQV6EC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyQV60C6EeGoSomzgLSYkg" name="getHospitalDischargeDiagnosisSection" isQuery="true" bodyCondition="_yyQV7kC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyQV7kC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyQV60C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyQV70C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeDiagnosisSection))->asSequence()->first().oclAsType(consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyQV7EC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidURSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyQV7UC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyQV8EC6EeGoSomzgLSYkg" name="getHospitalDischargeMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_yyQV80C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyQV80C6EeGoSomzgLSYkg" name="body" constrainedElement="_yyQV8EC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyQV9EC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::HospitalDischargeMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyQV8UC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj7RSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyQV8kC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyQV9UC6EeGoSomzgLSYkg" name="getPlanOfCareSection" isQuery="true" bodyCondition="_yyQV-EC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyQV-EC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyQV9UC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyQV-UC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyQV9kC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyQV90C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyQV-kC6EeGoSomzgLSYkg" name="getProblemSectionEntriesOptional" isQuery="true" bodyCondition="_yyQV_UC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyQV_UC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyQV-kC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyQV_kC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyQV-0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_naxrkBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyQV_EC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyQV_0C6EeGoSomzgLSYkg" name="getChiefComplaintSection" isQuery="true" bodyCondition="_yyQWAkC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyQWAkC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyQV_0C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyQWA0C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->first().oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyQWAEC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyQWAUC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyQWBEC6EeGoSomzgLSYkg" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_yyQWB0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyQWB0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yyQWBEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyQWCEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->first().oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyQWBUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyQWBkC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyQWCUC6EeGoSomzgLSYkg" name="getDischargeDietSection" isQuery="true" bodyCondition="_yyQWDEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyQWDEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyQWCUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyQWDUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DischargeDietSection))->asSequence()->first().oclAsType(consol::DischargeDietSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyQWCkC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Uz-4xSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyQWC0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyQWDkC6EeGoSomzgLSYkg" name="getFamilyHistorySection" isQuery="true" bodyCondition="_yyQWEUC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyQWEUC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyQWDkC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyWcgEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->first().oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyQWD0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2IWQIxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyQWEEC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyWcgUC6EeGoSomzgLSYkg" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_yyWchEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyWchEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyWcgUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyWchUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->first().oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyWcgkC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KKOBhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyWcg0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyWchkC6EeGoSomzgLSYkg" name="getHistoryOfPresentIllnessSection" isQuery="true" bodyCondition="_yyWciUC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyWciUC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyWchkC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyWcikC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyWch0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PcWsRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyWciEC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyWci0C6EeGoSomzgLSYkg" name="getHospitalDischargePhysicalSection" isQuery="true" bodyCondition="_yyWcjkC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyWcjkC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyWci0C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyWcj0C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargePhysicalSection))->asSequence()->first().oclAsType(consol::HospitalDischargePhysicalSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyWcjEC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_WikGsCUTEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyWcjUC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyWckEC6EeGoSomzgLSYkg" name="getHospitalDischargeStudiesSummarySection" isQuery="true" bodyCondition="_yyWck0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyWck0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yyWckEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyWclEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeStudiesSummarySection))->asSequence()->first().oclAsType(consol::HospitalDischargeStudiesSummarySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyWckUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_38AXoCUTEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyWckkC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyWclUC6EeGoSomzgLSYkg" name="getProceduresSectionEntriesOptional" isQuery="true" bodyCondition="_yyWcmEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyWcmEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyWclUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyWcmUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyWclkC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_s9Ig4BVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyWcl0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyWcmkC6EeGoSomzgLSYkg" name="getReasonForVisitSection" isQuery="true" bodyCondition="_yyWcnUC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyWcnUC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyWcmkC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyWcnkC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->first().oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyWcm0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyWcnEC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyWcn0C6EeGoSomzgLSYkg" name="getReviewOfSystemsSection" isQuery="true" bodyCondition="_yyWcokC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyWcokC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyWcn0C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyWco0C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->first().oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyWcoEC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2RqkMBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyWcoUC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyWcpEC6EeGoSomzgLSYkg" name="getSocialHistorySection" isQuery="true" bodyCondition="_yyWcp0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyWcp0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yyWcpEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyWcqEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->first().oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyWcpUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyWcpkC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyWcqUC6EeGoSomzgLSYkg" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_yyWcrEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyWcrEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyWcqUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyWcrUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyWcqkC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyWcq0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyWcrkC6EeGoSomzgLSYkg" name="getImmunizationsSectionEntriesOptional" isQuery="true" bodyCondition="_yyWcsUC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyWcsUC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyWcrkC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyWcskC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyWcr0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_EuPloBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyWcsEC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UjVycD9VEeGyQNOMdKXkfQ" name="ConsultationRequest">
      <ownedRule xmi:id="_yycjIUC6EeGoSomzgLSYkg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_UjVycD9VEeGyQNOMdKXkfQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_yycjIkC6EeGoSomzgLSYkg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.1275.1.1.4.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UjVycT9VEeGyQNOMdKXkfQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_yycjJEC6EeGoSomzgLSYkg" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_yycjJ0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yycjJ0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yycjJEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yycjKEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yycjJUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yycjJkC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yycjKUC6EeGoSomzgLSYkg" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_yycjLEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yycjLEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yycjKUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yycjLUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))->asSequence()->first().oclAsType(consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yycjKkC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yycjK0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yycjLkC6EeGoSomzgLSYkg" name="getHistoryOfPresentIllnessSection" isQuery="true" bodyCondition="_yycjMUC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yycjMUC6EeGoSomzgLSYkg" name="body" constrainedElement="_yycjLkC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yycjMkC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yycjL0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PcWsRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yycjMEC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yycjM0C6EeGoSomzgLSYkg" name="getPhysicalExamSection" isQuery="true" bodyCondition="_yyipwkC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyipwkC6EeGoSomzgLSYkg" name="body" constrainedElement="_yycjM0C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyipw0C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))->asSequence()->first().oclAsType(consol::PhysicalExamSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyipwEC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Pxt0hSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyipwUC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyipxEC6EeGoSomzgLSYkg" name="getReasonForReferralSection" isQuery="true" bodyCondition="_yyipx0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyipx0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yyipxEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyipyEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))->asSequence()->first().oclAsType(consol::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyipxUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQFxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyipxkC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyipyUC6EeGoSomzgLSYkg" name="getMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_yyipzEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyipzEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyipyUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyipzUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::MedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyipykC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_iAoXEBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyipy0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyipzkC6EeGoSomzgLSYkg" name="getProblemSectionEntriesOptional" isQuery="true" bodyCondition="_yyip0UC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyip0UC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyipzkC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyip0kC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyipz0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_naxrkBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyip0EC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyip00C6EeGoSomzgLSYkg" name="getProceduresSectionEntriesOptional" isQuery="true" bodyCondition="_yyip1kC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyip1kC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyip00C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyip10C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyip1EC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_s9Ig4BVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyip1UC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyip2EC6EeGoSomzgLSYkg" name="getResultsSectionEntriesOptional" isQuery="true" bodyCondition="_yyip20C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyip20C6EeGoSomzgLSYkg" name="body" constrainedElement="_yyip2EC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyip3EC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ResultsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyip2UC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_xGqiEBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyip2kC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyip3UC6EeGoSomzgLSYkg" name="getAdvanceDirectivesSectionEntriesOptional" isQuery="true" bodyCondition="_yyip4EC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyip4EC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyip3UC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyip4UC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AdvanceDirectivesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyip3kC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_1RZdIBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyip30C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyip4kC6EeGoSomzgLSYkg" name="getEncountersSectionEntriesOptional" isQuery="true" bodyCondition="_yyip5UC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyip5UC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyip4kC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyip5kC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSectionEntriesOptional))->asSequence()->first().oclAsType(consol::EncountersSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyip40C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4yj2wBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyip5EC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyip50C6EeGoSomzgLSYkg" name="getFamilyHistorySection" isQuery="true" bodyCondition="_yyip6kC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyip6kC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyip50C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyip60C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->first().oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyip6EC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2IWQIxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyip6UC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyip7EC6EeGoSomzgLSYkg" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_yyip70C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyip70C6EeGoSomzgLSYkg" name="body" constrainedElement="_yyip7EC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyip8EC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->first().oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyip7UC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KKOBhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyip7kC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyip8UC6EeGoSomzgLSYkg" name="getImmunizationsSectionEntriesOptional" isQuery="true" bodyCondition="_yyip9EC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyip9EC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyip8UC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyip9UC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyip8kC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_EuPloBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyip80C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyowYEC6EeGoSomzgLSYkg" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="_yyowY0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyowY0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yyowYEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyowZEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))->asSequence()->first().oclAsType(consol::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyowYUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KEucBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyowYkC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyowZUC6EeGoSomzgLSYkg" name="getPlanOfCareSection" isQuery="true" bodyCondition="_yyowaEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyowaEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyowZUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyowaUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyowZkC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyowZ0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyowakC6EeGoSomzgLSYkg" name="getSocialHistorySection" isQuery="true" bodyCondition="_yyowbUC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyowbUC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyowakC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyowbkC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->first().oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyowa0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyowbEC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyowb0C6EeGoSomzgLSYkg" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_yyowckC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyowckC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyowb0C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyowc0C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyowcEC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyowcUC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyowdEC6EeGoSomzgLSYkg" name="getChiefComplaintSection" isQuery="true" bodyCondition="_yyowd0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyowd0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yyowdEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyoweEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->first().oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyowdUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyowdkC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyoweUC6EeGoSomzgLSYkg" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_yyowfEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyowfEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyoweUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyowfUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->first().oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyowekC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyowe0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyowfkC6EeGoSomzgLSYkg" name="getGeneralStatusSection" isQuery="true" bodyCondition="_yyowgUC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyowgUC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyowfkC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyowgkC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))->asSequence()->first().oclAsType(consol::GeneralStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyowf0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Pxt6xSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyowgEC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyowg0C6EeGoSomzgLSYkg" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_yyowhkC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyowhkC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyowg0C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyowh0C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyowhEC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PQJcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyowhUC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyowiEC6EeGoSomzgLSYkg" name="getPayersSection" isQuery="true" bodyCondition="_yyowi0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyowi0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yyowiEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyowjEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection))->asSequence()->first().oclAsType(consol::PayersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyowiUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2MV_UBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyowikC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_z3FJcD_JEeGIl9z9SjyqRw" name="ConsultationSummary">
      <ownedRule xmi:id="_yyowjkC6EeGoSomzgLSYkg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_z3FJcD_JEeGIl9z9SjyqRw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyowj0C6EeGoSomzgLSYkg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.1275.1.1.3.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_z3FJcT_JEeGIl9z9SjyqRw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_yyu3AUC6EeGoSomzgLSYkg" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_yyu3BEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyu3BEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyu3AUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyu3BUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyu3AkC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyu3A0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyu3BkC6EeGoSomzgLSYkg" name="getMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_yyu3CUC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyu3CUC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyu3BkC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyu3CkC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::MedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyu3B0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_iAoXEBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyu3CEC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyu3C0C6EeGoSomzgLSYkg" name="getProblemSectionEntriesOptional" isQuery="true" bodyCondition="_yyu3DkC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyu3DkC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyu3C0C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyu3D0C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyu3DEC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_naxrkBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyu3DUC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyu3EEC6EeGoSomzgLSYkg" name="getResultsSectionEntriesOptional" isQuery="true" bodyCondition="_yyu3E0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyu3E0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yyu3EEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyu3FEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ResultsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyu3EUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_xGqiEBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyu3EkC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yyu3FUC6EeGoSomzgLSYkg" name="getAdvanceDirectivesSectionEntriesOptional" isQuery="true" bodyCondition="_yyu3GEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yyu3GEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yyu3FUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yyu3GUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AdvanceDirectivesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yyu3FkC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_1RZdIBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyu3F0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy09oEC6EeGoSomzgLSYkg" name="getEncountersSectionEntriesOptional" isQuery="true" bodyCondition="_yy09o0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy09o0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yy09oEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy09pEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSectionEntriesOptional))->asSequence()->first().oclAsType(consol::EncountersSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy09oUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4yj2wBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy09okC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy09pUC6EeGoSomzgLSYkg" name="getFamilyHistorySection" isQuery="true" bodyCondition="_yy09qEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy09qEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yy09pUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy09qUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->first().oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy09pkC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2IWQIxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy09p0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy09qkC6EeGoSomzgLSYkg" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_yy09rUC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy09rUC6EeGoSomzgLSYkg" name="body" constrainedElement="_yy09qkC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy09rkC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->first().oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy09q0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KKOBhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy09rEC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy09r0C6EeGoSomzgLSYkg" name="getImmunizationsSectionEntriesOptional" isQuery="true" bodyCondition="_yy09skC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy09skC6EeGoSomzgLSYkg" name="body" constrainedElement="_yy09r0C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy09s0C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy09sEC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_EuPloBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy09sUC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy09tEC6EeGoSomzgLSYkg" name="getProceduresSectionEntriesOptional" isQuery="true" bodyCondition="_yy09t0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy09t0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yy09tEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy09uEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy09tUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_s9Ig4BVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy09tkC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy09uUC6EeGoSomzgLSYkg" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="_yy09vEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy09vEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yy09uUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy09vUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))->asSequence()->first().oclAsType(consol::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy09ukC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KEucBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy09u0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy09vkC6EeGoSomzgLSYkg" name="getPayersSection" isQuery="true" bodyCondition="_yy09wUC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy09wUC6EeGoSomzgLSYkg" name="body" constrainedElement="_yy09vkC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy09wkC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection))->asSequence()->first().oclAsType(consol::PayersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy09v0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2MV_UBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy09wEC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy09w0C6EeGoSomzgLSYkg" name="getPlanOfCareSection" isQuery="true" bodyCondition="_yy09xkC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy09xkC6EeGoSomzgLSYkg" name="body" constrainedElement="_yy09w0C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy09x0C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy09xEC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy09xUC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy09yEC6EeGoSomzgLSYkg" name="getSocialHistorySection" isQuery="true" bodyCondition="_yy09y0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy09y0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yy09yEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy09zEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->first().oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy09yUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy09ykC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy09zUC6EeGoSomzgLSYkg" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_yy090EC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy090EC6EeGoSomzgLSYkg" name="body" constrainedElement="_yy09zUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy090UC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy09zkC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy09z0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g6MWwD_LEeGIl9z9SjyqRw" name="DischargeInstructions">
      <ownedRule xmi:id="_yy0900C6EeGoSomzgLSYkg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_g6MWwD_LEeGIl9z9SjyqRw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy091EC6EeGoSomzgLSYkg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.1275.1.1.2.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_g6MWwT_LEeGIl9z9SjyqRw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_yy7EQEC6EeGoSomzgLSYkg" name="getPlanOfCareSection" isQuery="true" bodyCondition="_yy7EQ0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy7EQ0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yy7EQEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy7EREC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy7EQUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy7EQkC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy7ERUC6EeGoSomzgLSYkg" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_yy7ESEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy7ESEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yy7ERUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy7ESUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy7ERkC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy7ER0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy7ESkC6EeGoSomzgLSYkg" name="getProblemSectionEntriesOptional" isQuery="true" bodyCondition="_yy7ETUC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy7ETUC6EeGoSomzgLSYkg" name="body" constrainedElement="_yy7ESkC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy7ETkC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy7ES0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_naxrkBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy7ETEC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy7ET0C6EeGoSomzgLSYkg" name="getHospitalDischargeMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_yy7EUkC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy7EUkC6EeGoSomzgLSYkg" name="body" constrainedElement="_yy7ET0C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy7EU0C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::HospitalDischargeMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy7EUEC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj7RSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy7EUUC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy7EVEC6EeGoSomzgLSYkg" name="getAdvanceDirectivesSectionEntriesOptional" isQuery="true" bodyCondition="_yy7EV0C6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy7EV0C6EeGoSomzgLSYkg" name="body" constrainedElement="_yy7EVEC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy7EWEC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AdvanceDirectivesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy7EVUC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_1RZdIBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy7EVkC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy7EWUC6EeGoSomzgLSYkg" name="getImmunizationsSectionEntriesOptional" isQuery="true" bodyCondition="_yy7EXEC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy7EXEC6EeGoSomzgLSYkg" name="body" constrainedElement="_yy7EWUC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy7EXUC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy7EWkC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_EuPloBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy7EW0C6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy7EXkC6EeGoSomzgLSYkg" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="_yy7EYUC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy7EYUC6EeGoSomzgLSYkg" name="body" constrainedElement="_yy7EXkC6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy7EYkC6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))->asSequence()->first().oclAsType(consol::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy7EX0C6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KEucBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy7EYEC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yy7EY0C6EeGoSomzgLSYkg" name="getAdvanceDirectivesSectionEntriesOptional2" isQuery="true" bodyCondition="_yy7EZkC6EeGoSomzgLSYkg">
        <ownedRule xmi:id="_yy7EZkC6EeGoSomzgLSYkg" name="body" constrainedElement="_yy7EY0C6EeGoSomzgLSYkg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_yy7EZ0C6EeGoSomzgLSYkg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AdvanceDirectivesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_yy7EZEC6EeGoSomzgLSYkg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_1RZdIBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy7EZUC6EeGoSomzgLSYkg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <profileApplication xmi:id="_NtY7DsqHEeC8XvPcqnB3eA">
      <eAnnotations xmi:id="_NtY7D8qHEeC8XvPcqnB3eA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_NtY7EMqHEeC8XvPcqnB3eA">
      <eAnnotations xmi:id="_NtY7EcqHEeC8XvPcqnB3eA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_yyKPQEC6EeGoSomzgLSYkg">
      <eAnnotations xmi:id="_yyKPQUC6EeGoSomzgLSYkg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_cWq7gD-7EeGyQNOMdKXkfQ" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="consoltoc" nsURI="http://www.openhealthtools.org/mdht/uml/cda/consoltoc" packageName="consoltoc" prefix="consoltoc" base_Namespace="_cUvo4D-7EeGyQNOMdKXkfQ"/>
  <CDA:CDATemplate xmi:id="_E2Ok4D9LEeGo68n7X9Wymg" base_Class="_CigOwD9LEeGo68n7X9Wymg" templateId="2.16.840.1.113883.3.1275.1.1.1.1"/>
  <CDA:CDATemplate xmi:id="_XV29YD9VEeGyQNOMdKXkfQ" base_Class="_UjVycD9VEeGyQNOMdKXkfQ" templateId="2.16.840.1.113883.3.1275.1.1.4.1"/>
  <CDA:CDATemplate xmi:id="_22ZaQD_JEeGIl9z9SjyqRw" base_Class="_z3FJcD_JEeGIl9z9SjyqRw" templateId="2.16.840.1.113883.3.1275.1.1.3.1"/>
  <CDA:CDATemplate xmi:id="_VrplQD_MEeGIl9z9SjyqRw" base_Class="_g6MWwD_LEeGIl9z9SjyqRw" templateId="2.16.840.1.113883.3.1275.1.1.2.1"/>
  <Ecore:EPackage xmi:id="_yyKPQkC6EeGoSomzgLSYkg" base_Package="_cUvo4D-7EeGyQNOMdKXkfQ" packageName="consoltoc" nsPrefix="consoltoc" nsURI="http://www.openhealthtools.org/mdht/uml/cda/consoltoc" basePackage="org.openhealthtools.mdht.uml.cda" prefix="consoltoc"/>
  <CDA:ConformsTo xmi:id="_yyKPQ0C6EeGoSomzgLSYkg" base_Generalization="_CigOwT9LEeGo68n7X9Wymg"/>
  <Ecore:EClass xmi:id="_yyQV4EC6EeGoSomzgLSYkg" base_Class="_CigOwD9LEeGo68n7X9Wymg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.1275.1.1.1.1' constraints.validation.error='DischargeSummaryTemplateId'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_yycjIEC6EeGoSomzgLSYkg" base_Generalization="_UjVycT9VEeGyQNOMdKXkfQ"/>
  <Ecore:EClass xmi:id="_yycjI0C6EeGoSomzgLSYkg" base_Class="_UjVycD9VEeGyQNOMdKXkfQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.1275.1.1.4.1' constraints.validation.error='ConsultationRequestTemplateId'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_yyowjUC6EeGoSomzgLSYkg" base_Generalization="_z3FJcT_JEeGIl9z9SjyqRw"/>
  <Ecore:EClass xmi:id="_yyu3AEC6EeGoSomzgLSYkg" base_Class="_z3FJcD_JEeGIl9z9SjyqRw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.1275.1.1.3.1' constraints.validation.error='ConsultationSummaryTemplateId'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_yy090kC6EeGoSomzgLSYkg" base_Generalization="_g6MWwT_LEeGIl9z9SjyqRw"/>
  <Ecore:EClass xmi:id="_yy091UC6EeGoSomzgLSYkg" base_Class="_g6MWwD_LEeGIl9z9SjyqRw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.1275.1.1.2.1' constraints.validation.error='DischargeInstructionsTemplateId'</annotation>
  </Ecore:EClass>
</xmi:XMI>
