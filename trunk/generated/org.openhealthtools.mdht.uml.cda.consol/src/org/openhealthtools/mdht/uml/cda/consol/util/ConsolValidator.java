/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.openhealthtools.mdht.uml.cda.consol.util;

import java.util.Map;

import org.eclipse.emf.common.util.DiagnosticChain;
import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.EObjectValidator;

import org.openhealthtools.mdht.uml.cda.consol.*;

import org.openhealthtools.mdht.uml.cda.util.CDAValidator;

/**
 * <!-- begin-user-doc -->
 * The <b>Validator</b> for the model.
 * <!-- end-user-doc -->
 * @see org.openhealthtools.mdht.uml.cda.consol.ConsolPackage
 * @generated
 */
public class ConsolValidator extends EObjectValidator {
	/**
	 * The cached model package
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final ConsolValidator INSTANCE = new ConsolValidator();

	/**
	 * A constant for the {@link org.eclipse.emf.common.util.Diagnostic#getSource() source} of diagnostic {@link org.eclipse.emf.common.util.Diagnostic#getCode() codes} from this package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.emf.common.util.Diagnostic#getSource()
	 * @see org.eclipse.emf.common.util.Diagnostic#getCode()
	 * @generated
	 */
	public static final String DIAGNOSTIC_SOURCE = "org.openhealthtools.mdht.uml.cda.consol";

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Template Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_TEMPLATE_ID = 1;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Realm Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_REALM_CODE = 2;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Type Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_TYPE_ID = 3;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_ID = 4;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_CODE = 5;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Title' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_TITLE = 6;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Effective Time' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_EFFECTIVE_TIME = 7;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Confidentiality Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_CONFIDENTIALITY_CODE = 8;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Set Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_SET_ID = 9;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Version Number' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_VERSION_NUMBER = 10;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Author' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHOR = 11;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Data Enterer' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_DATA_ENTERER = 12;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Custodian' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_CUSTODIAN = 13;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Information Recipient' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMATION_RECIPIENT = 14;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Legal Authenticator' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_LEGAL_AUTHENTICATOR = 15;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Authenticator' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHENTICATOR = 16;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET = 17;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Component Of' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_COMPONENT_OF = 18;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Informant' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMANT = 19;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Support Participant' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_SUPPORT_PARTICIPANT = 20;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints In Fulfillment Of' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_IN_FULFILLMENT_OF = 21;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Author Assigned Author Authoring Device Manufacturer Model Name' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHOR_ASSIGNED_AUTHOR_AUTHORING_DEVICE_MANUFACTURER_MODEL_NAME = 22;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Author Assigned Author Authoring Device Software Name' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHOR_ASSIGNED_AUTHOR_AUTHORING_DEVICE_SOFTWARE_NAME = 23;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Author Assigned Author Has Assigned Person Or Assigned Authoring Device' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHOR_ASSIGNED_AUTHOR_HAS_ASSIGNED_PERSON_OR_ASSIGNED_AUTHORING_DEVICE = 24;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Author Assigned Author Has National Provider Identifier' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHOR_ASSIGNED_AUTHOR_HAS_NATIONAL_PROVIDER_IDENTIFIER = 25;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Author Assigned Author Addr' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHOR_ASSIGNED_AUTHOR_ADDR = 26;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Author Assigned Author Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHOR_ASSIGNED_AUTHOR_CODE = 27;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Author Assigned Author Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHOR_ASSIGNED_AUTHOR_ID = 28;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Author Assigned Author Telecom' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHOR_ASSIGNED_AUTHOR_TELECOM = 29;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Author Assigned Author' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHOR_ASSIGNED_AUTHOR = 30;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Data Enterer Assigned Entity Has National Provider Identifier' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_DATA_ENTERER_ASSIGNED_ENTITY_HAS_NATIONAL_PROVIDER_IDENTIFIER = 31;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Data Enterer Assigned Entity Addr' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_DATA_ENTERER_ASSIGNED_ENTITY_ADDR = 32;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Data Enterer Assigned Entity Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_DATA_ENTERER_ASSIGNED_ENTITY_CODE = 33;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Data Enterer Assigned Entity Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_DATA_ENTERER_ASSIGNED_ENTITY_ID = 34;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Data Enterer Assigned Entity Telecom' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_DATA_ENTERER_ASSIGNED_ENTITY_TELECOM = 35;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Data Enterer Assigned Entity Assigned Person' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_DATA_ENTERER_ASSIGNED_ENTITY_ASSIGNED_PERSON = 36;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Custodian Assigned Custodian Custodian Organization Has National Provider Identifier' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_CUSTODIAN_ASSIGNED_CUSTODIAN_CUSTODIAN_ORGANIZATION_HAS_NATIONAL_PROVIDER_IDENTIFIER = 37;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Custodian Assigned Custodian Custodian Organization Addr' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_CUSTODIAN_ASSIGNED_CUSTODIAN_CUSTODIAN_ORGANIZATION_ADDR = 38;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Custodian Assigned Custodian Custodian Organization Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_CUSTODIAN_ASSIGNED_CUSTODIAN_CUSTODIAN_ORGANIZATION_ID = 39;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Custodian Assigned Custodian Custodian Organization Name' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_CUSTODIAN_ASSIGNED_CUSTODIAN_CUSTODIAN_ORGANIZATION_NAME = 40;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Custodian Assigned Custodian Custodian Organization Telecom' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_CUSTODIAN_ASSIGNED_CUSTODIAN_CUSTODIAN_ORGANIZATION_TELECOM = 41;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Custodian Assigned Custodian Represented Custodian Organization' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_CUSTODIAN_ASSIGNED_CUSTODIAN_REPRESENTED_CUSTODIAN_ORGANIZATION = 42;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Custodian Assigned Custodian' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_CUSTODIAN_ASSIGNED_CUSTODIAN = 43;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Information Recipient Intended Recipient Organization Name' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMATION_RECIPIENT_INTENDED_RECIPIENT_ORGANIZATION_NAME = 44;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Information Recipient Intended Recipient Information Recipient' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMATION_RECIPIENT_INTENDED_RECIPIENT_INFORMATION_RECIPIENT = 45;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Information Recipient Intended Recipient Recieved Organization' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMATION_RECIPIENT_INTENDED_RECIPIENT_RECIEVED_ORGANIZATION = 46;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Information Recipient Intended Recipient' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMATION_RECIPIENT_INTENDED_RECIPIENT = 47;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Legal Authenticator Assigned Entity Has National Provider Identifier' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY_HAS_NATIONAL_PROVIDER_IDENTIFIER = 48;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Legal Authenticator Assigned Entity Addr' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY_ADDR = 49;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Legal Authenticator Assigned Entity Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY_CODE = 50;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Legal Authenticator Assigned Entity Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY_ID = 51;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Legal Authenticator Assigned Entity Telecom' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY_TELECOM = 52;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Legal Authenticator Assigned Entity Assigned Person' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY_ASSIGNED_PERSON = 53;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Legal Authenticator Time' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_LEGAL_AUTHENTICATOR_TIME = 54;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Legal Authenticator Signature Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_LEGAL_AUTHENTICATOR_SIGNATURE_CODE = 55;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Authenticator Assigned Entity Has National Provider Identifier' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHENTICATOR_ASSIGNED_ENTITY_HAS_NATIONAL_PROVIDER_IDENTIFIER = 56;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Authenticator Assigned Entity Addr' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHENTICATOR_ASSIGNED_ENTITY_ADDR = 57;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Authenticator Assigned Entity Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHENTICATOR_ASSIGNED_ENTITY_CODE = 58;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Authenticator Assigned Entity Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHENTICATOR_ASSIGNED_ENTITY_ID = 59;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Authenticator Assigned Entity Telecom' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHENTICATOR_ASSIGNED_ENTITY_TELECOM = 60;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Authenticator Time' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHENTICATOR_TIME = 61;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Authenticator Signature Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHENTICATOR_SIGNATURE_CODE = 62;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Authenticator Assigned Entity' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_AUTHENTICATOR_ASSIGNED_ENTITY = 63;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Provider Organization Has National Provider Identifier' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PROVIDER_ORGANIZATION_HAS_NATIONAL_PROVIDER_IDENTIFIER = 64;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Guardian Addr' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_GUARDIAN_ADDR = 73;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Guardian Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_GUARDIAN_CODE = 74;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Guardian Telecom' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_GUARDIAN_TELECOM = 75;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Guardian Guardian Person' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_GUARDIAN_GUARDIAN_PERSON = 76;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Birth Time Precise To Year' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_BIRTH_TIME_PRECISE_TO_YEAR = 77;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Birth Time Precise To Day' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_BIRTH_TIME_PRECISE_TO_DAY = 78;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Birthplace Place Addr' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_BIRTHPLACE_PLACE_ADDR = 71;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Birthplace Place' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_BIRTHPLACE_PLACE = 72;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Language Communication Preference Ind' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_LANGUAGE_COMMUNICATION_PREFERENCE_IND = 69;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Language Communication Mode Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_LANGUAGE_COMMUNICATION_MODE_CODE = 70;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Birth Time' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_BIRTH_TIME = 79;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Ethnic Group Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_ETHNIC_GROUP_CODE = 80;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Marital Status Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_MARITAL_STATUS_CODE = 81;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Name' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_NAME = 82;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Race Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_RACE_CODE = 83;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Religious Affiliation Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_RELIGIOUS_AFFILIATION_CODE = 84;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Guardian' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_GUARDIAN = 85;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Birthplace' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_BIRTHPLACE = 86;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient Language Communication' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT_LANGUAGE_COMMUNICATION = 87;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Provider Organization Addr' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PROVIDER_ORGANIZATION_ADDR = 65;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Provider Organization Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PROVIDER_ORGANIZATION_ID = 66;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Provider Organization Name' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PROVIDER_ORGANIZATION_NAME = 67;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Provider Organization Telecom' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PROVIDER_ORGANIZATION_TELECOM = 68;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Addr' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_ADDR = 88;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_ID = 89;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Telecom' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_TELECOM = 90;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role Patient' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE_PATIENT = 91;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Record Target Patient Role' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET_PATIENT_ROLE = 92;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Component Of Encompassing Encounter Effective Time' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_COMPONENT_OF_ENCOMPASSING_ENCOUNTER_EFFECTIVE_TIME = 93;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Component Of Encompassing Encounter Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_COMPONENT_OF_ENCOMPASSING_ENCOUNTER_ID = 94;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Component Of Encompassing Encounter' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_COMPONENT_OF_ENCOMPASSING_ENCOUNTER = 95;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Informant Assigned Entity Addr' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMANT_ASSIGNED_ENTITY_ADDR = 99;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Informant Assigned Entity Code' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMANT_ASSIGNED_ENTITY_CODE = 100;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Informant Assigned Entity Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMANT_ASSIGNED_ENTITY_ID = 101;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Informant Assigned Entity Person' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMANT_ASSIGNED_ENTITY_PERSON = 102;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Informant Has Assigned Entity Or Related Entity' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMANT_HAS_ASSIGNED_ENTITY_OR_RELATED_ENTITY = 103;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Participant Support Associated Entity Has Associated Person Or Scoping Organization' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_PARTICIPANT_SUPPORT_ASSOCIATED_ENTITY_HAS_ASSOCIATED_PERSON_OR_SCOPING_ORGANIZATION = 104;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Informant Related Entity Addr' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMANT_RELATED_ENTITY_ADDR = 96;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Informant Related Entity Person' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMANT_RELATED_ENTITY_PERSON = 97;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Informant Assigned Entity Has National Provider Identifier' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_INFORMANT_ASSIGNED_ENTITY_HAS_NATIONAL_PROVIDER_IDENTIFIER = 98;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Participant Support Time' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_PARTICIPANT_SUPPORT_TIME = 105;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints In Fulfillment Of Order Id' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_IN_FULFILLMENT_OF_ORDER_ID = 106;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints In Fulfillment Of Order' of 'General Header Constraints'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS__GENERAL_HEADER_CONSTRAINTS_IN_FULFILLMENT_OF_ORDER = 107;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Record Target Patient Role' of 'General Header Constraints Record Target'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET__RECORD_TARGET_PATIENT_ROLE = 108;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Role Addr' of 'Record Target Patient Role'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RECORD_TARGET_PATIENT_ROLE__PATIENT_ROLE_ADDR = 109;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Role Id' of 'Record Target Patient Role'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RECORD_TARGET_PATIENT_ROLE__PATIENT_ROLE_ID = 110;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Role Telecom' of 'Record Target Patient Role'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RECORD_TARGET_PATIENT_ROLE__PATIENT_ROLE_TELECOM = 111;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Role Patient' of 'Record Target Patient Role'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RECORD_TARGET_PATIENT_ROLE__PATIENT_ROLE_PATIENT = 112;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Birth Time Precise To Year' of 'Patient Role Patient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PATIENT__PATIENT_BIRTH_TIME_PRECISE_TO_YEAR = 113;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Birth Time Precise To Day' of 'Patient Role Patient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PATIENT__PATIENT_BIRTH_TIME_PRECISE_TO_DAY = 114;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Birth Time' of 'Patient Role Patient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PATIENT__PATIENT_BIRTH_TIME = 115;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Ethnic Group Code' of 'Patient Role Patient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PATIENT__PATIENT_ETHNIC_GROUP_CODE = 116;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Marital Status Code' of 'Patient Role Patient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PATIENT__PATIENT_MARITAL_STATUS_CODE = 117;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Name' of 'Patient Role Patient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PATIENT__PATIENT_NAME = 118;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Race Code' of 'Patient Role Patient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PATIENT__PATIENT_RACE_CODE = 119;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Religious Affiliation Code' of 'Patient Role Patient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PATIENT__PATIENT_RELIGIOUS_AFFILIATION_CODE = 120;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Guardian' of 'Patient Role Patient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PATIENT__PATIENT_GUARDIAN = 121;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Birthplace' of 'Patient Role Patient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PATIENT__PATIENT_BIRTHPLACE = 122;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Language Communication' of 'Patient Role Patient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PATIENT__PATIENT_LANGUAGE_COMMUNICATION = 123;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Guardian Addr' of 'Patient Guardian'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_GUARDIAN__GUARDIAN_ADDR = 124;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Guardian Code' of 'Patient Guardian'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_GUARDIAN__GUARDIAN_CODE = 125;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Guardian Telecom' of 'Patient Guardian'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_GUARDIAN__GUARDIAN_TELECOM = 126;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Guardian Guardian Person' of 'Patient Guardian'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_GUARDIAN__GUARDIAN_GUARDIAN_PERSON = 127;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Language Communication Preference Ind' of 'Patient Language Communication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_LANGUAGE_COMMUNICATION__LANGUAGE_COMMUNICATION_PREFERENCE_IND = 128;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Language Communication Mode Code' of 'Patient Language Communication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_LANGUAGE_COMMUNICATION__LANGUAGE_COMMUNICATION_MODE_CODE = 129;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Birthplace Place' of 'Patient Birthplace'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_BIRTHPLACE__BIRTHPLACE_PLACE = 130;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Place Addr' of 'Birthplace Place'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BIRTHPLACE_PLACE__PLACE_ADDR = 131;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Provider Organization Has National Provider Identifier' of 'Patient Role Provider Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PROVIDER_ORGANIZATION__PROVIDER_ORGANIZATION_HAS_NATIONAL_PROVIDER_IDENTIFIER = 132;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Provider Organization Addr' of 'Patient Role Provider Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PROVIDER_ORGANIZATION__PROVIDER_ORGANIZATION_ADDR = 133;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Provider Organization Id' of 'Patient Role Provider Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PROVIDER_ORGANIZATION__PROVIDER_ORGANIZATION_ID = 134;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Provider Organization Name' of 'Patient Role Provider Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PROVIDER_ORGANIZATION__PROVIDER_ORGANIZATION_NAME = 135;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Provider Organization Telecom' of 'Patient Role Provider Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_ROLE_PROVIDER_ORGANIZATION__PROVIDER_ORGANIZATION_TELECOM = 136;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Component Of Encompassing Encounter' of 'General Header Constraints Component Of'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_COMPONENT_OF__COMPONENT_OF_ENCOMPASSING_ENCOUNTER = 137;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encompassing Encounter Effective Time' of 'Component Of Encompassing Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMPONENT_OF_ENCOMPASSING_ENCOUNTER__ENCOMPASSING_ENCOUNTER_EFFECTIVE_TIME = 138;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encompassing Encounter Id' of 'Component Of Encompassing Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMPONENT_OF_ENCOMPASSING_ENCOUNTER__ENCOMPASSING_ENCOUNTER_ID = 139;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Author Assigned Author' of 'General Header Constraints Author'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_AUTHOR__AUTHOR_ASSIGNED_AUTHOR = 140;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Author Has Assigned Person Or Assigned Authoring Device' of 'Author Assigned Author'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AUTHOR_ASSIGNED_AUTHOR__ASSIGNED_AUTHOR_HAS_ASSIGNED_PERSON_OR_ASSIGNED_AUTHORING_DEVICE = 141;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Author Has National Provider Identifier' of 'Author Assigned Author'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AUTHOR_ASSIGNED_AUTHOR__ASSIGNED_AUTHOR_HAS_NATIONAL_PROVIDER_IDENTIFIER = 142;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Author Addr' of 'Author Assigned Author'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AUTHOR_ASSIGNED_AUTHOR__ASSIGNED_AUTHOR_ADDR = 143;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Author Code' of 'Author Assigned Author'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AUTHOR_ASSIGNED_AUTHOR__ASSIGNED_AUTHOR_CODE = 144;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Author Id' of 'Author Assigned Author'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AUTHOR_ASSIGNED_AUTHOR__ASSIGNED_AUTHOR_ID = 145;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Author Telecom' of 'Author Assigned Author'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AUTHOR_ASSIGNED_AUTHOR__ASSIGNED_AUTHOR_TELECOM = 146;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Authoring Device Manufacturer Model Name' of 'Assigned Author Authoring Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSIGNED_AUTHOR_AUTHORING_DEVICE__AUTHORING_DEVICE_MANUFACTURER_MODEL_NAME = 147;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Authoring Device Software Name' of 'Assigned Author Authoring Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSIGNED_AUTHOR_AUTHORING_DEVICE__AUTHORING_DEVICE_SOFTWARE_NAME = 148;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Has National Provider Identifier' of 'Data Enterer Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_ENTERER_ASSIGNED_ENTITY__ASSIGNED_ENTITY_HAS_NATIONAL_PROVIDER_IDENTIFIER = 149;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Addr' of 'Data Enterer Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_ENTERER_ASSIGNED_ENTITY__ASSIGNED_ENTITY_ADDR = 150;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Code' of 'Data Enterer Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_ENTERER_ASSIGNED_ENTITY__ASSIGNED_ENTITY_CODE = 151;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Id' of 'Data Enterer Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_ENTERER_ASSIGNED_ENTITY__ASSIGNED_ENTITY_ID = 152;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Telecom' of 'Data Enterer Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_ENTERER_ASSIGNED_ENTITY__ASSIGNED_ENTITY_TELECOM = 153;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Assigned Person' of 'Data Enterer Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_ENTERER_ASSIGNED_ENTITY__ASSIGNED_ENTITY_ASSIGNED_PERSON = 154;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Custodian Assigned Custodian' of 'General Header Constraints Custodian'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_CUSTODIAN__CUSTODIAN_ASSIGNED_CUSTODIAN = 155;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Custodian Represented Custodian Organization' of 'Custodian Assigned Custodian'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CUSTODIAN_ASSIGNED_CUSTODIAN__ASSIGNED_CUSTODIAN_REPRESENTED_CUSTODIAN_ORGANIZATION = 156;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Custodian Organization Has National Provider Identifier' of 'Assigned Custodian Custodian Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSIGNED_CUSTODIAN_CUSTODIAN_ORGANIZATION__CUSTODIAN_ORGANIZATION_HAS_NATIONAL_PROVIDER_IDENTIFIER = 157;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Custodian Organization Addr' of 'Assigned Custodian Custodian Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSIGNED_CUSTODIAN_CUSTODIAN_ORGANIZATION__CUSTODIAN_ORGANIZATION_ADDR = 158;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Custodian Organization Id' of 'Assigned Custodian Custodian Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSIGNED_CUSTODIAN_CUSTODIAN_ORGANIZATION__CUSTODIAN_ORGANIZATION_ID = 159;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Custodian Organization Name' of 'Assigned Custodian Custodian Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSIGNED_CUSTODIAN_CUSTODIAN_ORGANIZATION__CUSTODIAN_ORGANIZATION_NAME = 160;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Custodian Organization Telecom' of 'Assigned Custodian Custodian Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSIGNED_CUSTODIAN_CUSTODIAN_ORGANIZATION__CUSTODIAN_ORGANIZATION_TELECOM = 161;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Information Recipient Intended Recipient' of 'General Header Constraints Information Recipient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_INFORMATION_RECIPIENT__INFORMATION_RECIPIENT_INTENDED_RECIPIENT = 162;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Intended Recipient Information Recipient' of 'Information Recipient Intended Recipient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INFORMATION_RECIPIENT_INTENDED_RECIPIENT__INTENDED_RECIPIENT_INFORMATION_RECIPIENT = 163;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Intended Recipient Recieved Organization' of 'Information Recipient Intended Recipient'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INFORMATION_RECIPIENT_INTENDED_RECIPIENT__INTENDED_RECIPIENT_RECIEVED_ORGANIZATION = 164;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organization Name' of 'Intended Recipient Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTENDED_RECIPIENT_ORGANIZATION__ORGANIZATION_NAME = 165;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Legal Authenticator Time' of 'General Header Constraints Legal Authenticator'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_LEGAL_AUTHENTICATOR__LEGAL_AUTHENTICATOR_TIME = 166;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Legal Authenticator Signature Code' of 'General Header Constraints Legal Authenticator'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_LEGAL_AUTHENTICATOR__LEGAL_AUTHENTICATOR_SIGNATURE_CODE = 167;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Has National Provider Identifier' of 'Legal Authenticator Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY__ASSIGNED_ENTITY_HAS_NATIONAL_PROVIDER_IDENTIFIER = 168;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Addr' of 'Legal Authenticator Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY__ASSIGNED_ENTITY_ADDR = 169;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Code' of 'Legal Authenticator Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY__ASSIGNED_ENTITY_CODE = 170;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Id' of 'Legal Authenticator Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY__ASSIGNED_ENTITY_ID = 171;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Telecom' of 'Legal Authenticator Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY__ASSIGNED_ENTITY_TELECOM = 172;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Assigned Person' of 'Legal Authenticator Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY__ASSIGNED_ENTITY_ASSIGNED_PERSON = 173;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Authenticator Time' of 'General Header Constraints Authenticator'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_AUTHENTICATOR__AUTHENTICATOR_TIME = 174;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Authenticator Signature Code' of 'General Header Constraints Authenticator'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_AUTHENTICATOR__AUTHENTICATOR_SIGNATURE_CODE = 175;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Authenticator Assigned Entity' of 'General Header Constraints Authenticator'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_AUTHENTICATOR__AUTHENTICATOR_ASSIGNED_ENTITY = 176;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Has National Provider Identifier' of 'Authenticator Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AUTHENTICATOR_ASSIGNED_ENTITY__ASSIGNED_ENTITY_HAS_NATIONAL_PROVIDER_IDENTIFIER = 177;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Addr' of 'Authenticator Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AUTHENTICATOR_ASSIGNED_ENTITY__ASSIGNED_ENTITY_ADDR = 178;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Code' of 'Authenticator Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AUTHENTICATOR_ASSIGNED_ENTITY__ASSIGNED_ENTITY_CODE = 179;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Id' of 'Authenticator Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AUTHENTICATOR_ASSIGNED_ENTITY__ASSIGNED_ENTITY_ID = 180;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Telecom' of 'Authenticator Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AUTHENTICATOR_ASSIGNED_ENTITY__ASSIGNED_ENTITY_TELECOM = 181;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Informant Has Assigned Entity Or Related Entity' of 'General Header Constraints Informant'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_INFORMANT__INFORMANT_HAS_ASSIGNED_ENTITY_OR_RELATED_ENTITY = 182;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Has National Provider Identifier' of 'Informant Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INFORMANT_ASSIGNED_ENTITY__ASSIGNED_ENTITY_HAS_NATIONAL_PROVIDER_IDENTIFIER = 183;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Addr' of 'Informant Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INFORMANT_ASSIGNED_ENTITY__ASSIGNED_ENTITY_ADDR = 184;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Code' of 'Informant Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INFORMANT_ASSIGNED_ENTITY__ASSIGNED_ENTITY_CODE = 185;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Id' of 'Informant Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INFORMANT_ASSIGNED_ENTITY__ASSIGNED_ENTITY_ID = 186;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assigned Entity Person' of 'Informant Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INFORMANT_ASSIGNED_ENTITY__ASSIGNED_ENTITY_PERSON = 187;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Related Entity Addr' of 'Informant Related Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INFORMANT_RELATED_ENTITY__RELATED_ENTITY_ADDR = 188;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Related Entity Person' of 'Informant Related Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INFORMANT_RELATED_ENTITY__RELATED_ENTITY_PERSON = 189;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Participant Support Associated Entity Has Associated Person Or Scoping Organization' of 'General Header Constraints Participant Support'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_PARTICIPANT_SUPPORT__PARTICIPANT_SUPPORT_ASSOCIATED_ENTITY_HAS_ASSOCIATED_PERSON_OR_SCOPING_ORGANIZATION = 190;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Participant Support Time' of 'General Header Constraints Participant Support'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_PARTICIPANT_SUPPORT__PARTICIPANT_SUPPORT_TIME = 191;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate In Fulfillment Of Order' of 'General Header Constraints In Fulfillment Of'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_HEADER_CONSTRAINTS_IN_FULFILLMENT_OF__IN_FULFILLMENT_OF_ORDER = 192;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Order Id' of 'In Fulfillment Of Order'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IN_FULFILLMENT_OF_ORDER__ORDER_ID = 193;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Problem Act Effective Time Low' of 'Allergy Problem Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_PROBLEM_ACT__ALLERGY_PROBLEM_ACT_EFFECTIVE_TIME_LOW = 194;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Problem Act Effective Time High' of 'Allergy Problem Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_PROBLEM_ACT__ALLERGY_PROBLEM_ACT_EFFECTIVE_TIME_HIGH = 195;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Problem Act Template Id' of 'Allergy Problem Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_PROBLEM_ACT__ALLERGY_PROBLEM_ACT_TEMPLATE_ID = 196;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Problem Act Class Code' of 'Allergy Problem Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_PROBLEM_ACT__ALLERGY_PROBLEM_ACT_CLASS_CODE = 197;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Problem Act Mood Code' of 'Allergy Problem Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_PROBLEM_ACT__ALLERGY_PROBLEM_ACT_MOOD_CODE = 198;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Problem Act Id' of 'Allergy Problem Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_PROBLEM_ACT__ALLERGY_PROBLEM_ACT_ID = 199;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Problem Act Code' of 'Allergy Problem Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_PROBLEM_ACT__ALLERGY_PROBLEM_ACT_CODE = 200;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Problem Act Status Code' of 'Allergy Problem Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_PROBLEM_ACT__ALLERGY_PROBLEM_ACT_STATUS_CODE = 201;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Problem Act Effective Time' of 'Allergy Problem Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_PROBLEM_ACT__ALLERGY_PROBLEM_ACT_EFFECTIVE_TIME = 202;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Problem Act Allergy Observation' of 'Allergy Problem Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_PROBLEM_ACT__ALLERGY_PROBLEM_ACT_ALLERGY_OBSERVATION = 203;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Allergy Status Inversion Indicator' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_ALLERGY_STATUS_INVERSION_INDICATOR = 204;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Reaction Inversion Indicator' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_REACTION_INVERSION_INDICATOR = 205;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Severity Inversion Indicator' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_SEVERITY_INVERSION_INDICATOR = 206;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Template Id' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_TEMPLATE_ID = 207;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Class Code' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_CLASS_CODE = 208;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Mood Code' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_MOOD_CODE = 209;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Id' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_ID = 210;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Code' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_CODE = 211;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Status Code' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_STATUS_CODE = 212;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Effective Time' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_EFFECTIVE_TIME = 213;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Value' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_VALUE = 214;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Problem Entry Reaction Observation Container' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER = 215;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Severity' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_SEVERITY = 216;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Allergy Status Observation' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_ALLERGY_STATUS_OBSERVATION = 217;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Participant' of 'Allergy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION__ALLERGY_OBSERVATION_PARTICIPANT = 218;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Text Reference' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_TEXT_REFERENCE = 219;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Reference Value' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_REFERENCE_VALUE = 220;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Effective Time Low' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_EFFECTIVE_TIME_LOW = 221;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Effective Time High' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_EFFECTIVE_TIME_HIGH = 222;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Severity Observation Inversion Ind' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_SEVERITY_OBSERVATION_INVERSION_IND = 223;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Procedure Activity Procedure Inversion Ind' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_PROCEDURE_ACTIVITY_PROCEDURE_INVERSION_IND = 224;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Medication Activity Inversion Ind' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_MEDICATION_ACTIVITY_INVERSION_IND = 225;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Template Id' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_TEMPLATE_ID = 226;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Class Code' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_CLASS_CODE = 227;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Mood Code' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_MOOD_CODE = 228;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Id' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_ID = 229;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Code' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_CODE = 230;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Text' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_TEXT = 231;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Status Code' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_STATUS_CODE = 232;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Effective Time' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_EFFECTIVE_TIME = 233;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Value' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_VALUE = 234;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Severity Observation' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_SEVERITY_OBSERVATION = 235;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Procedure Activity Procedure' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_PROCEDURE_ACTIVITY_PROCEDURE = 236;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reaction Observation Medication Activity' of 'Reaction Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REACTION_OBSERVATION__REACTION_OBSERVATION_MEDICATION_ACTIVITY = 237;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Observation Text Reference' of 'Severity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY_OBSERVATION__SEVERITY_OBSERVATION_TEXT_REFERENCE = 238;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Observation Reference Value' of 'Severity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY_OBSERVATION__SEVERITY_OBSERVATION_REFERENCE_VALUE = 239;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Observation Template Id' of 'Severity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY_OBSERVATION__SEVERITY_OBSERVATION_TEMPLATE_ID = 240;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Observation Class Code' of 'Severity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY_OBSERVATION__SEVERITY_OBSERVATION_CLASS_CODE = 241;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Observation Mood Code' of 'Severity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY_OBSERVATION__SEVERITY_OBSERVATION_MOOD_CODE = 242;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Observation Code' of 'Severity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY_OBSERVATION__SEVERITY_OBSERVATION_CODE = 243;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Observation Text' of 'Severity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY_OBSERVATION__SEVERITY_OBSERVATION_TEXT = 244;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Observation Status Code' of 'Severity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY_OBSERVATION__SEVERITY_OBSERVATION_STATUS_CODE = 245;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Observation Value' of 'Severity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY_OBSERVATION__SEVERITY_OBSERVATION_VALUE = 246;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Code Code Systems' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_CODE_CODE_SYSTEMS = 247;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Code Original Text' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_CODE_ORIGINAL_TEXT = 248;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Original Text Reference Value' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_ORIGINAL_TEXT_REFERENCE_VALUE = 249;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Reference Value' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_REFERENCE_VALUE = 250;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Encounter Inversion' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_ENCOUNTER_INVERSION = 251;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Product Instance Type Code' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_PRODUCT_INSTANCE_TYPE_CODE = 252;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Service Delivery Location Type Code' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_SERVICE_DELIVERY_LOCATION_TYPE_CODE = 253;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Instructions Inversion' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_INSTRUCTIONS_INVERSION = 254;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Status Observation Template Id' of 'Allergy Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_STATUS_OBSERVATION__ALLERGY_STATUS_OBSERVATION_TEMPLATE_ID = 344;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Status Observation Class Code' of 'Allergy Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_STATUS_OBSERVATION__ALLERGY_STATUS_OBSERVATION_CLASS_CODE = 345;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Status Observation Mood Code' of 'Allergy Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_STATUS_OBSERVATION__ALLERGY_STATUS_OBSERVATION_MOOD_CODE = 346;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Status Observation Code' of 'Allergy Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_STATUS_OBSERVATION__ALLERGY_STATUS_OBSERVATION_CODE = 347;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Status Observation Status Code' of 'Allergy Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_STATUS_OBSERVATION__ALLERGY_STATUS_OBSERVATION_STATUS_CODE = 348;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Status Observation Value' of 'Allergy Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_STATUS_OBSERVATION__ALLERGY_STATUS_OBSERVATION_VALUE = 349;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Age Observation Template Id' of 'Age Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AGE_OBSERVATION__AGE_OBSERVATION_TEMPLATE_ID = 350;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Age Observation Class Code' of 'Age Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AGE_OBSERVATION__AGE_OBSERVATION_CLASS_CODE = 351;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Age Observation Mood Code' of 'Age Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AGE_OBSERVATION__AGE_OBSERVATION_MOOD_CODE = 352;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Age Observation Code' of 'Age Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AGE_OBSERVATION__AGE_OBSERVATION_CODE = 353;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Age Observation Status Code' of 'Age Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AGE_OBSERVATION__AGE_OBSERVATION_STATUS_CODE = 354;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Age Observation Value' of 'Age Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AGE_OBSERVATION__AGE_OBSERVATION_VALUE = 355;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Has Text Reference' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_HAS_TEXT_REFERENCE = 356;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Has Text Reference Value' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_HAS_TEXT_REFERENCE_VALUE = 357;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Template Id' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_TEMPLATE_ID = 358;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Class Code' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_CLASS_CODE = 359;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Mood Code' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_MOOD_CODE = 360;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Code' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_CODE = 361;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Text' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_TEXT = 362;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Status Code' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_STATUS_CODE = 363;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Value' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_VALUE = 364;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Has Text Reference' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_HAS_TEXT_REFERENCE = 365;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Effective Time When Author Present' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_EFFECTIVE_TIME_WHEN_AUTHOR_PRESENT = 366;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Has Author Id' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_HAS_AUTHOR_ID = 367;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Has Author Organization' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_HAS_AUTHOR_ORGANIZATION = 368;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Template Id' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_TEMPLATE_ID = 369;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Class Code' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_CLASS_CODE = 370;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Mood Code' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_MOOD_CODE = 371;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Code' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_CODE = 372;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Text' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_TEXT = 373;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Status Code' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_STATUS_CODE = 374;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Author' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_AUTHOR = 375;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Template Id' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_TEMPLATE_ID = 286;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Class Code' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_CLASS_CODE = 287;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Id' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_ID = 288;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Code' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_CODE = 289;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Status Code' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_STATUS_CODE = 290;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Effective Time' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_EFFECTIVE_TIME = 291;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Route Code' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_ROUTE_CODE = 292;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Approach Site Code' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_APPROACH_SITE_CODE = 293;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Dose Quantity' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_DOSE_QUANTITY = 294;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Rate Quantity' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_RATE_QUANTITY = 295;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Max Dose Quantity' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_MAX_DOSE_QUANTITY = 296;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Administration Unit Code' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_ADMINISTRATION_UNIT_CODE = 297;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Text' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_TEXT = 298;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Repeat Number' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_REPEAT_NUMBER = 299;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Medication Supply Order' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_MEDICATION_SUPPLY_ORDER = 300;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Reaction Observation' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_REACTION_OBSERVATION = 301;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Consumable' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_CONSUMABLE = 302;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Performer' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_PERFORMER = 303;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Instructions' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_INSTRUCTIONS = 304;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Indication' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_INDICATION = 305;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Medication Dispense' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_MEDICATION_DISPENSE = 306;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Precondition' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_PRECONDITION = 307;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Activity Drug Vehicle' of 'Medication Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ACTIVITY__MEDICATION_ACTIVITY_DRUG_VEHICLE = 308;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Mood Code' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_MOOD_CODE = 392;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Author' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_AUTHOR = 393;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Performer' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_PERFORMER = 394;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Participant Location' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_PARTICIPANT_LOCATION = 395;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Information Source' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_INFORMATION_SOURCE = 396;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Product' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_PRODUCT = 397;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Intent Author' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_INTENT_AUTHOR = 398;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Author Time' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_AUTHOR_TIME = 399;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Assigned Author' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_ASSIGNED_AUTHOR = 400;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Assigned Author ID' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_ASSIGNED_AUTHOR_ID = 401;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Assigned Author Person Or Org' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_ASSIGNED_AUTHOR_PERSON_OR_ORG = 402;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Performer Time Event' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_PERFORMER_TIME_EVENT = 403;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Performer Time Intent' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_PERFORMER_TIME_INTENT = 404;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Performer Assigned Entity' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_PERFORMER_ASSIGNED_ENTITY = 405;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Performer Assigned Entity ID' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_PERFORMER_ASSIGNED_ENTITY_ID = 406;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Performer Entity Person Or Org' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_PERFORMER_ENTITY_PERSON_OR_ORG = 407;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Quantity Has Value' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_QUANTITY_HAS_VALUE = 408;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Order Number' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_ORDER_NUMBER = 409;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Order Expiration' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_ORDER_EXPIRATION = 410;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Quantity Ordered' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_QUANTITY_ORDERED = 411;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Quantity Unit' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_QUANTITY_UNIT = 412;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Prescription Number' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_PRESCRIPTION_NUMBER = 413;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Assigning Authority' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_ASSIGNING_AUTHORITY = 414;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Dispense Date' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_DISPENSE_DATE = 415;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Dispensing Pharmacy Location' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_DISPENSING_PHARMACY_LOCATION = 416;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Quantity Dispensed' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_QUANTITY_DISPENSED = 417;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Has Fill Number' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_HAS_FILL_NUMBER = 418;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Template Id' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_TEMPLATE_ID = 419;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Id' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_ID = 420;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Status Code' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_STATUS_CODE = 421;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Effective Time' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_EFFECTIVE_TIME = 422;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Repeat Number' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_REPEAT_NUMBER = 423;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Quantity' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_QUANTITY = 424;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Medicinal Supply Activity Product Instance' of 'Non Medicinal Supply Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_MEDICINAL_SUPPLY_ACTIVITY__NON_MEDICINAL_SUPPLY_ACTIVITY_PRODUCT_INSTANCE = 425;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Product Instance Has Scoping Entity' of 'Product Instance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRODUCT_INSTANCE__PRODUCT_INSTANCE_HAS_SCOPING_ENTITY = 341;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Product Instance Template Id' of 'Product Instance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRODUCT_INSTANCE__PRODUCT_INSTANCE_TEMPLATE_ID = 342;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Product Instance Class Code' of 'Product Instance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRODUCT_INSTANCE__PRODUCT_INSTANCE_CLASS_CODE = 343;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Instructions Template Id' of 'Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSTRUCTIONS__INSTRUCTIONS_TEMPLATE_ID = 321;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Instructions Class Code' of 'Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSTRUCTIONS__INSTRUCTIONS_CLASS_CODE = 322;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Instructions Mood Code' of 'Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSTRUCTIONS__INSTRUCTIONS_MOOD_CODE = 323;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Instructions Text' of 'Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSTRUCTIONS__INSTRUCTIONS_TEXT = 324;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Instructions Status Code' of 'Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSTRUCTIONS__INSTRUCTIONS_STATUS_CODE = 325;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Template Id' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_TEMPLATE_ID = 273;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Class Code' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_CLASS_CODE = 274;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Code' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_CODE = 277;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Effective Time' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_EFFECTIVE_TIME = 279;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Id' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_ID = 276;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Mood Code' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_MOOD_CODE = 275;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Status Code' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_STATUS_CODE = 278;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Value' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_VALUE = 280;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Dispense Template Id' of 'Medication Dispense'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_DISPENSE__MEDICATION_DISPENSE_TEMPLATE_ID = 326;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Dispense Class Code' of 'Medication Dispense'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_DISPENSE__MEDICATION_DISPENSE_CLASS_CODE = 327;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Dispense Effective Time' of 'Medication Dispense'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_DISPENSE__MEDICATION_DISPENSE_EFFECTIVE_TIME = 328;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Dispense Id' of 'Medication Dispense'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_DISPENSE__MEDICATION_DISPENSE_ID = 329;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Dispense Mood Code' of 'Medication Dispense'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_DISPENSE__MEDICATION_DISPENSE_MOOD_CODE = 330;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Dispense Repeat Number' of 'Medication Dispense'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_DISPENSE__MEDICATION_DISPENSE_REPEAT_NUMBER = 331;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Dispense Status Code' of 'Medication Dispense'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_DISPENSE__MEDICATION_DISPENSE_STATUS_CODE = 332;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Dispense Performer2' of 'Medication Dispense'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_DISPENSE__MEDICATION_DISPENSE_PERFORMER2 = 333;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Dispense Assigned Entity' of 'Medication Dispense'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_DISPENSE__MEDICATION_DISPENSE_ASSIGNED_ENTITY = 334;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Dispense Medication Supply Order' of 'Medication Dispense'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_DISPENSE__MEDICATION_DISPENSE_MEDICATION_SUPPLY_ORDER = 335;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Supply Order Template Id' of 'Medication Supply Order'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SUPPLY_ORDER__MEDICATION_SUPPLY_ORDER_TEMPLATE_ID = 309;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Supply Order Class Code' of 'Medication Supply Order'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SUPPLY_ORDER__MEDICATION_SUPPLY_ORDER_CLASS_CODE = 310;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Supply Order Effective Time' of 'Medication Supply Order'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SUPPLY_ORDER__MEDICATION_SUPPLY_ORDER_EFFECTIVE_TIME = 311;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Supply Order Mood Code' of 'Medication Supply Order'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SUPPLY_ORDER__MEDICATION_SUPPLY_ORDER_MOOD_CODE = 312;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Supply Order Quantity' of 'Medication Supply Order'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SUPPLY_ORDER__MEDICATION_SUPPLY_ORDER_QUANTITY = 313;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Supply Order Repeat Number' of 'Medication Supply Order'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SUPPLY_ORDER__MEDICATION_SUPPLY_ORDER_REPEAT_NUMBER = 314;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Supply Order Status Code' of 'Medication Supply Order'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SUPPLY_ORDER__MEDICATION_SUPPLY_ORDER_STATUS_CODE = 315;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Supply Order Id' of 'Medication Supply Order'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SUPPLY_ORDER__MEDICATION_SUPPLY_ORDER_ID = 316;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Supply Order Author' of 'Medication Supply Order'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SUPPLY_ORDER__MEDICATION_SUPPLY_ORDER_AUTHOR = 317;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Supply Order Instructions' of 'Medication Supply Order'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SUPPLY_ORDER__MEDICATION_SUPPLY_ORDER_INSTRUCTIONS = 318;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Instructions Text Reference' of 'Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSTRUCTIONS__INSTRUCTIONS_TEXT_REFERENCE = 319;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Instructions Text Reference Value' of 'Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSTRUCTIONS__INSTRUCTIONS_TEXT_REFERENCE_VALUE = 320;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Vehicle Playing Entity Code' of 'Drug Vehicle'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_VEHICLE__DRUG_VEHICLE_PLAYING_ENTITY_CODE = 336;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Vehicle Template Id' of 'Drug Vehicle'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_VEHICLE__DRUG_VEHICLE_TEMPLATE_ID = 337;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Vehicle Class Code' of 'Drug Vehicle'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_VEHICLE__DRUG_VEHICLE_CLASS_CODE = 338;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Vehicle Code' of 'Drug Vehicle'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_VEHICLE__DRUG_VEHICLE_CODE = 339;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Vehicle Playing Entity' of 'Drug Vehicle'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_VEHICLE__DRUG_VEHICLE_PLAYING_ENTITY = 340;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Series Number Observation Template Id' of 'Medication Series Number Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SERIES_NUMBER_OBSERVATION__MEDICATION_SERIES_NUMBER_OBSERVATION_TEMPLATE_ID = 376;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Series Number Observation Class Code' of 'Medication Series Number Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SERIES_NUMBER_OBSERVATION__MEDICATION_SERIES_NUMBER_OBSERVATION_CLASS_CODE = 377;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Series Number Observation Mood Code' of 'Medication Series Number Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SERIES_NUMBER_OBSERVATION__MEDICATION_SERIES_NUMBER_OBSERVATION_MOOD_CODE = 378;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Series Number Observation Code' of 'Medication Series Number Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SERIES_NUMBER_OBSERVATION__MEDICATION_SERIES_NUMBER_OBSERVATION_CODE = 379;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Series Number Observation Status Code' of 'Medication Series Number Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SERIES_NUMBER_OBSERVATION__MEDICATION_SERIES_NUMBER_OBSERVATION_STATUS_CODE = 380;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Series Number Observation Value' of 'Medication Series Number Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SERIES_NUMBER_OBSERVATION__MEDICATION_SERIES_NUMBER_OBSERVATION_VALUE = 381;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation No Additional Participants' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_NO_ADDITIONAL_PARTICIPANTS = 382;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation No Additional Relationships' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_NO_ADDITIONAL_RELATIONSHIPS = 383;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation Template Id' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_TEMPLATE_ID = 384;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation Class Code' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_CLASS_CODE = 385;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation Mood Code' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_MOOD_CODE = 386;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation Code' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_CODE = 387;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation Status Code' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_STATUS_CODE = 388;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Internal Reference Id' of 'Internal Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTERNAL_REFERENCE__INTERNAL_REFERENCE_ID = 389;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Internal Reference Code' of 'Internal Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTERNAL_REFERENCE__INTERNAL_REFERENCE_CODE = 390;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Type Code' of 'Medication Type'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TYPE__MEDICATION_TYPE_CODE = 391;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Fullfillment Instructions Mood Code' of 'Medication Fullfillment Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_FULLFILLMENT_INSTRUCTIONS__MEDICATION_FULLFILLMENT_INSTRUCTIONS_MOOD_CODE = 426;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Fullfillment Instructions Code' of 'Medication Fullfillment Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_FULLFILLMENT_INSTRUCTIONS__MEDICATION_FULLFILLMENT_INSTRUCTIONS_CODE = 427;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Fullfillment Instructions Text' of 'Medication Fullfillment Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_FULLFILLMENT_INSTRUCTIONS__MEDICATION_FULLFILLMENT_INSTRUCTIONS_TEXT = 428;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Fullfillment Instructions Status Code' of 'Medication Fullfillment Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_FULLFILLMENT_INSTRUCTIONS__MEDICATION_FULLFILLMENT_INSTRUCTIONS_STATUS_CODE = 429;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Concern Act Effective Time Low' of 'Problem Concern Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_CONCERN_ACT__PROBLEM_CONCERN_ACT_EFFECTIVE_TIME_LOW = 430;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Concern Act Effective Time High' of 'Problem Concern Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_CONCERN_ACT__PROBLEM_CONCERN_ACT_EFFECTIVE_TIME_HIGH = 431;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Concern Act Template Id' of 'Problem Concern Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_CONCERN_ACT__PROBLEM_CONCERN_ACT_TEMPLATE_ID = 432;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Concern Act Class Code' of 'Problem Concern Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_CONCERN_ACT__PROBLEM_CONCERN_ACT_CLASS_CODE = 433;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Concern Act Mood Code' of 'Problem Concern Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_CONCERN_ACT__PROBLEM_CONCERN_ACT_MOOD_CODE = 434;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Concern Act Id' of 'Problem Concern Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_CONCERN_ACT__PROBLEM_CONCERN_ACT_ID = 435;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Concern Act Code' of 'Problem Concern Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_CONCERN_ACT__PROBLEM_CONCERN_ACT_CODE = 436;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Concern Act Effective Time' of 'Problem Concern Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_CONCERN_ACT__PROBLEM_CONCERN_ACT_EFFECTIVE_TIME = 437;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Concern Act Problem Observation' of 'Problem Concern Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_CONCERN_ACT__PROBLEM_CONCERN_ACT_PROBLEM_OBSERVATION = 438;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Has Text Reference' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_HAS_TEXT_REFERENCE = 439;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Has Text Reference Value' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_HAS_TEXT_REFERENCE_VALUE = 440;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Age Observation Inversion' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_AGE_OBSERVATION_INVERSION = 441;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Template Id' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_TEMPLATE_ID = 442;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Class Code' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_CLASS_CODE = 443;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Mood Code' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_MOOD_CODE = 444;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Negation Ind' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_NEGATION_IND = 445;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Id' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_ID = 446;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Code' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_CODE = 447;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Text' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_TEXT = 448;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Status Code' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_STATUS_CODE = 449;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Effective Time' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_EFFECTIVE_TIME = 450;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Value' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_VALUE = 451;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Age Observation' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_AGE_OBSERVATION = 452;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Health Status Observation' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_HEALTH_STATUS_OBSERVATION = 453;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Observation Problem Status' of 'Problem Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_OBSERVATION__PROBLEM_OBSERVATION_PROBLEM_STATUS = 454;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Text Reference' of 'Problem Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS__PROBLEM_STATUS_TEXT_REFERENCE = 455;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Text Reference Value' of 'Problem Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS__PROBLEM_STATUS_TEXT_REFERENCE_VALUE = 456;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Template Id' of 'Problem Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS__PROBLEM_STATUS_TEMPLATE_ID = 457;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Class Code' of 'Problem Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS__PROBLEM_STATUS_CLASS_CODE = 458;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Mood Code' of 'Problem Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS__PROBLEM_STATUS_MOOD_CODE = 459;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Code' of 'Problem Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS__PROBLEM_STATUS_CODE = 460;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Status Code' of 'Problem Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS__PROBLEM_STATUS_STATUS_CODE = 462;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Text' of 'Problem Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS__PROBLEM_STATUS_TEXT = 461;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Value' of 'Problem Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS__PROBLEM_STATUS_VALUE = 463;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Service Event Required' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_SERVICE_EVENT_REQUIRED = 464;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Service Event Class Code' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_SERVICE_EVENT_CLASS_CODE = 465;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Service Event Effective Time' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_SERVICE_EVENT_EFFECTIVE_TIME = 466;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Language Code Format' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_LANGUAGE_CODE_FORMAT = 467;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document No Template Id Extension' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_NO_TEMPLATE_ID_EXTENSION = 468;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Has Effective Time Seconds' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_HAS_EFFECTIVE_TIME_SECONDS = 469;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Has Effective Time Zone' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_HAS_EFFECTIVE_TIME_ZONE = 470;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document One Or Two Record Target' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_ONE_OR_TWO_RECORD_TARGET = 471;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Has Assigned Author' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_HAS_ASSIGNED_AUTHOR = 472;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Has Assigned Author Null Flavor' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_HAS_ASSIGNED_AUTHOR_NULL_FLAVOR = 473;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Has Information Recipient' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_HAS_INFORMATION_RECIPIENT = 474;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Healthcare Provider' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_HEALTHCARE_PROVIDER = 475;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Language Code' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_LANGUAGE_CODE = 476;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Advance Directives Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_ADVANCE_DIRECTIVES_SECTION = 477;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Allergies Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_ALLERGIES_SECTION = 478;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Encounters Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_ENCOUNTERS_SECTION = 479;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Immunizations Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_IMMUNIZATIONS_SECTION = 480;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Payers Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_PAYERS_SECTION = 481;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Medications Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_MEDICATIONS_SECTION = 482;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Plan Of Care Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_PLAN_OF_CARE_SECTION = 483;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Procedures Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_PROCEDURES_SECTION = 484;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Vital Signs Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_VITAL_SIGNS_SECTION = 485;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Family History Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_FAMILY_HISTORY_SECTION = 486;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Social History Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_SOCIAL_HISTORY_SECTION = 487;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Results Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_RESULTS_SECTION = 488;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Medical Equipment Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_MEDICAL_EQUIPMENT_SECTION = 489;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Functional Status Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_FUNCTIONAL_STATUS_SECTION = 490;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Continuity Of Care Document Problem Section' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__CONTINUITY_OF_CARE_DOCUMENT_PROBLEM_SECTION = 491;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Template Id' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__GENERAL_HEADER_CONSTRAINTS_TEMPLATE_ID = 492;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Code' of 'Continuity Of Care Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONTINUITY_OF_CARE_DOCUMENT__GENERAL_HEADER_CONSTRAINTS_CODE = 493;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Entries Optional Template Id' of 'Advance Directives Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION_ENTRIES_OPTIONAL__ADVANCE_DIRECTIVES_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 494;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Entries Optional Code' of 'Advance Directives Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION_ENTRIES_OPTIONAL__ADVANCE_DIRECTIVES_SECTION_ENTRIES_OPTIONAL_CODE = 495;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Entries Optional Title' of 'Advance Directives Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION_ENTRIES_OPTIONAL__ADVANCE_DIRECTIVES_SECTION_ENTRIES_OPTIONAL_TITLE = 496;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Entries Optional Text' of 'Advance Directives Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION_ENTRIES_OPTIONAL__ADVANCE_DIRECTIVES_SECTION_ENTRIES_OPTIONAL_TEXT = 497;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Entries Optional Advance Directive Observation' of 'Advance Directives Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION_ENTRIES_OPTIONAL__ADVANCE_DIRECTIVES_SECTION_ENTRIES_OPTIONAL_ADVANCE_DIRECTIVE_OBSERVATION = 498;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Section Entries Optional Code' of 'Allergies Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_SECTION__ALLERGIES_SECTION_ENTRIES_OPTIONAL_CODE = 541;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Section Title' of 'Allergies Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_SECTION__ALLERGIES_SECTION_TITLE = 537;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Section Text' of 'Allergies Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_SECTION__ALLERGIES_SECTION_TEXT = 538;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Section Allergy Drug Sensitivity' of 'Allergies Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_SECTION__ALLERGIES_SECTION_ALLERGY_DRUG_SENSITIVITY = 539;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Section Entries Optional Template Id' of 'Allergies Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_SECTION__ALLERGIES_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 540;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Section Entries Optional Template Id' of 'Allergies Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_SECTION_ENTRIES_OPTIONAL__ALLERGIES_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 542;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Section Entries Optional Code' of 'Allergies Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_SECTION_ENTRIES_OPTIONAL__ALLERGIES_SECTION_ENTRIES_OPTIONAL_CODE = 543;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Section Entries Optional Title' of 'Allergies Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_SECTION_ENTRIES_OPTIONAL__ALLERGIES_SECTION_ENTRIES_OPTIONAL_TITLE = 544;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Section Entries Optional Text' of 'Allergies Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_SECTION_ENTRIES_OPTIONAL__ALLERGIES_SECTION_ENTRIES_OPTIONAL_TEXT = 545;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Section Entries Optional Allergy Problem Act' of 'Allergies Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_SECTION_ENTRIES_OPTIONAL__ALLERGIES_SECTION_ENTRIES_OPTIONAL_ALLERGY_PROBLEM_ACT = 546;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Section Entries Optional Template Id' of 'Encounters Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_SECTION_ENTRIES_OPTIONAL__ENCOUNTERS_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 547;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Section Entries Optional Code' of 'Encounters Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_SECTION_ENTRIES_OPTIONAL__ENCOUNTERS_SECTION_ENTRIES_OPTIONAL_CODE = 548;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Section Entries Optional Title' of 'Encounters Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_SECTION_ENTRIES_OPTIONAL__ENCOUNTERS_SECTION_ENTRIES_OPTIONAL_TITLE = 549;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Section Entries Optional Text' of 'Encounters Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_SECTION_ENTRIES_OPTIONAL__ENCOUNTERS_SECTION_ENTRIES_OPTIONAL_TEXT = 550;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Section Entries Optional Encounter Activities' of 'Encounters Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_SECTION_ENTRIES_OPTIONAL__ENCOUNTERS_SECTION_ENTRIES_OPTIONAL_ENCOUNTER_ACTIVITIES = 551;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Entries Optional Template Id' of 'Immunizations Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION_ENTRIES_OPTIONAL__IMMUNIZATIONS_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 564;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Entries Optional Code' of 'Immunizations Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION_ENTRIES_OPTIONAL__IMMUNIZATIONS_SECTION_ENTRIES_OPTIONAL_CODE = 565;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Entries Optional Title' of 'Immunizations Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION_ENTRIES_OPTIONAL__IMMUNIZATIONS_SECTION_ENTRIES_OPTIONAL_TITLE = 566;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Entries Optional Text' of 'Immunizations Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION_ENTRIES_OPTIONAL__IMMUNIZATIONS_SECTION_ENTRIES_OPTIONAL_TEXT = 567;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Entries Optional Immunization Activity' of 'Immunizations Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION_ENTRIES_OPTIONAL__IMMUNIZATIONS_SECTION_ENTRIES_OPTIONAL_IMMUNIZATION_ACTIVITY = 568;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payers Section Template Id' of 'Payers Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYERS_SECTION__PAYERS_SECTION_TEMPLATE_ID = 598;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payers Section Code' of 'Payers Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYERS_SECTION__PAYERS_SECTION_CODE = 599;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payers Section Title' of 'Payers Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYERS_SECTION__PAYERS_SECTION_TITLE = 600;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payers Section Text' of 'Payers Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYERS_SECTION__PAYERS_SECTION_TEXT = 601;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Coverage Activity Template Id' of 'Coverage Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COVERAGE_ACTIVITY__COVERAGE_ACTIVITY_TEMPLATE_ID = 602;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Coverage Activity Policy Activity' of 'Coverage Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COVERAGE_ACTIVITY__COVERAGE_ACTIVITY_POLICY_ACTIVITY = 603;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Policy Activity Template Id' of 'Policy Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int POLICY_ACTIVITY__POLICY_ACTIVITY_TEMPLATE_ID = 604;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Policy Activity Authorization Activity' of 'Policy Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int POLICY_ACTIVITY__POLICY_ACTIVITY_AUTHORIZATION_ACTIVITY = 605;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Authorization Activity Template Id' of 'Authorization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AUTHORIZATION_ACTIVITY__AUTHORIZATION_ACTIVITY_TEMPLATE_ID = 606;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Entries Optional Code' of 'Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION__MEDICATIONS_SECTION_ENTRIES_OPTIONAL_CODE = 611;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Title' of 'Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION__MEDICATIONS_SECTION_TITLE = 607;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Text' of 'Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION__MEDICATIONS_SECTION_TEXT = 608;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Medication' of 'Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION__MEDICATIONS_SECTION_MEDICATION = 609;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Entries Optional Template Id' of 'Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION__MEDICATIONS_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 610;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Entries Optional Template Id' of 'Medications Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION_ENTRIES_OPTIONAL__MEDICATIONS_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 612;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Entries Optional Code' of 'Medications Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION_ENTRIES_OPTIONAL__MEDICATIONS_SECTION_ENTRIES_OPTIONAL_CODE = 613;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Entries Optional Title' of 'Medications Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION_ENTRIES_OPTIONAL__MEDICATIONS_SECTION_ENTRIES_OPTIONAL_TITLE = 614;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Entries Optional Text' of 'Medications Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION_ENTRIES_OPTIONAL__MEDICATIONS_SECTION_ENTRIES_OPTIONAL_TEXT = 615;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Entries Optional Medication Activity' of 'Medications Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION_ENTRIES_OPTIONAL__MEDICATIONS_SECTION_ENTRIES_OPTIONAL_MEDICATION_ACTIVITY = 616;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Template Id' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_TEMPLATE_ID = 617;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Code' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_CODE = 618;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Text' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_TEXT = 619;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Plan Of Care Activity Act' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_PLAN_OF_CARE_ACTIVITY_ACT = 620;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Plan Of Care Activity Encounter' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_PLAN_OF_CARE_ACTIVITY_ENCOUNTER = 621;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Plan Of Care Activity Observation' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_PLAN_OF_CARE_ACTIVITY_OBSERVATION = 622;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Plan Of Care Activity Procedure' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_PLAN_OF_CARE_ACTIVITY_PROCEDURE = 623;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Plan Of Care Activity Substance Administration' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION = 624;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Plan Of Care Activity Supply' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_PLAN_OF_CARE_ACTIVITY_SUPPLY = 625;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Act Template Id' of 'Plan Of Care Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_ACT__PLAN_OF_CARE_ACTIVITY_ACT_TEMPLATE_ID = 626;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Act Id' of 'Plan Of Care Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_ACT__PLAN_OF_CARE_ACTIVITY_ACT_ID = 627;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Encounter Template Id' of 'Plan Of Care Activity Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_ENCOUNTER__PLAN_OF_CARE_ACTIVITY_ENCOUNTER_TEMPLATE_ID = 628;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Encounter Id' of 'Plan Of Care Activity Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_ENCOUNTER__PLAN_OF_CARE_ACTIVITY_ENCOUNTER_ID = 629;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Observation Template Id' of 'Plan Of Care Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_OBSERVATION__PLAN_OF_CARE_ACTIVITY_OBSERVATION_TEMPLATE_ID = 630;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Observation Id' of 'Plan Of Care Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_OBSERVATION__PLAN_OF_CARE_ACTIVITY_OBSERVATION_ID = 631;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Procedure Template Id' of 'Plan Of Care Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_PROCEDURE__PLAN_OF_CARE_ACTIVITY_PROCEDURE_TEMPLATE_ID = 632;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Procedure Id' of 'Plan Of Care Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_PROCEDURE__PLAN_OF_CARE_ACTIVITY_PROCEDURE_ID = 633;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Substance Administration Template Id' of 'Plan Of Care Activity Substance Administration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION__PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION_TEMPLATE_ID = 634;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Substance Administration Id' of 'Plan Of Care Activity Substance Administration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION__PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION_ID = 635;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Supply Template Id' of 'Plan Of Care Activity Supply'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_SUPPLY__PLAN_OF_CARE_ACTIVITY_SUPPLY_TEMPLATE_ID = 636;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Supply Id' of 'Plan Of Care Activity Supply'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_SUPPLY__PLAN_OF_CARE_ACTIVITY_SUPPLY_ID = 637;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedures Section Has Procedure Activity' of 'Procedures Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURES_SECTION__PROCEDURES_SECTION_HAS_PROCEDURE_ACTIVITY = 638;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedures Section Title' of 'Procedures Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURES_SECTION__PROCEDURES_SECTION_TITLE = 639;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedures Section Entries Optional Template Id' of 'Procedures Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURES_SECTION__PROCEDURES_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 640;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedures Section Entries Optional Template Id' of 'Procedures Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURES_SECTION_ENTRIES_OPTIONAL__PROCEDURES_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 641;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedures Section Entries Optional Code' of 'Procedures Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURES_SECTION_ENTRIES_OPTIONAL__PROCEDURES_SECTION_ENTRIES_OPTIONAL_CODE = 642;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedures Section Entries Optional Text' of 'Procedures Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURES_SECTION_ENTRIES_OPTIONAL__PROCEDURES_SECTION_ENTRIES_OPTIONAL_TEXT = 643;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedures Section Entries Optional Procedure Activity Procedure' of 'Procedures Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURES_SECTION_ENTRIES_OPTIONAL__PROCEDURES_SECTION_ENTRIES_OPTIONAL_PROCEDURE_ACTIVITY_PROCEDURE = 644;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedures Section Entries Optional Procedure Acivity Observation' of 'Procedures Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURES_SECTION_ENTRIES_OPTIONAL__PROCEDURES_SECTION_ENTRIES_OPTIONAL_PROCEDURE_ACIVITY_OBSERVATION = 645;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedures Section Entries Optional Procedure Activity Act' of 'Procedures Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURES_SECTION_ENTRIES_OPTIONAL__PROCEDURES_SECTION_ENTRIES_OPTIONAL_PROCEDURE_ACTIVITY_ACT = 646;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Code Code Systems' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_CODE_CODE_SYSTEMS = 647;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Code Original Text' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_CODE_ORIGINAL_TEXT = 648;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Original Text Reference Value' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_ORIGINAL_TEXT_REFERENCE_VALUE = 649;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Reference Value' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_REFERENCE_VALUE = 650;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Encounter Inversion' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_ENCOUNTER_INVERSION = 651;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Service Delivery Location Type Code' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_SERVICE_DELIVERY_LOCATION_TYPE_CODE = 652;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Instructions Inversion' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_INSTRUCTIONS_INVERSION = 653;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Template Id' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_TEMPLATE_ID = 654;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Class Code' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_CLASS_CODE = 655;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Id' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_ID = 656;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Code' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_CODE = 657;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Status Code' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_STATUS_CODE = 658;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Value' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_VALUE = 659;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Effective Time' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_EFFECTIVE_TIME = 660;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Priority Code' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_PRIORITY_CODE = 661;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Method Code' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_METHOD_CODE = 662;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Target Site Code' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_TARGET_SITE_CODE = 663;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Performer' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_PERFORMER = 664;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Service Delivery Location' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_SERVICE_DELIVERY_LOCATION = 665;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Procedure Encounter' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_PROCEDURE_ENCOUNTER = 666;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Instructions' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_INSTRUCTIONS = 667;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Indication' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_INDICATION = 668;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Observation Medication Activity' of 'Procedure Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_OBSERVATION__PROCEDURE_ACTIVITY_OBSERVATION_MEDICATION_ACTIVITY = 669;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Template Id' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_TEMPLATE_ID = 677;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Class Code' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_CLASS_CODE = 678;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Id' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_ID = 679;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Code' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_CODE = 680;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Status Code' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_STATUS_CODE = 681;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Effective Time' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_EFFECTIVE_TIME = 682;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Priority Code' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_PRIORITY_CODE = 683;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Performer' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_PERFORMER = 684;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Service Delivery Location' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_SERVICE_DELIVERY_LOCATION = 685;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Procedure Encounter' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_PROCEDURE_ENCOUNTER = 686;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Instructions' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_INSTRUCTIONS = 687;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Indication' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_INDICATION = 688;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Medication Activity' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_MEDICATION_ACTIVITY = 689;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Priority Code' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_PRIORITY_CODE = 261;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Method Code' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_METHOD_CODE = 262;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Target Site Code' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_TARGET_SITE_CODE = 263;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Indication' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_INDICATION = 264;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Specimen' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_SPECIMEN = 265;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Service Delivery Location' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_SERVICE_DELIVERY_LOCATION = 266;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Performer' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_PERFORMER = 267;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Template Id' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_TEMPLATE_ID = 255;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Class Code' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_CLASS_CODE = 256;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Id' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_ID = 257;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Code' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_CODE = 258;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Status Code' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_STATUS_CODE = 259;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Effective Time' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_EFFECTIVE_TIME = 260;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Medication Activity' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_MEDICATION_ACTIVITY = 268;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Patient Instruction' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_PATIENT_INSTRUCTION = 269;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Procedure Encounter' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_PROCEDURE_ENCOUNTER = 270;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Procedure Product Instance' of 'Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ACTIVITY_PROCEDURE_PRODUCT_INSTANCE = 271;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Code Null Flavor' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_CODE_NULL_FLAVOR = 272;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Code Code Systems' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_CODE_CODE_SYSTEMS = 670;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Code Original Text' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_CODE_ORIGINAL_TEXT = 671;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Original Text Reference Value' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_ORIGINAL_TEXT_REFERENCE_VALUE = 672;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Reference Value' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_REFERENCE_VALUE = 673;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Encounter Inversion' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_ENCOUNTER_INVERSION = 674;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Service Delivery Location Type Code' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_SERVICE_DELIVERY_LOCATION_TYPE_CODE = 675;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Activity Act Instructions Inversion' of 'Procedure Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ACTIVITY_ACT__PROCEDURE_ACTIVITY_ACT_INSTRUCTIONS_INVERSION = 676;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Entries Optional Template Id' of 'Vital Signs Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL__VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 690;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Entries Optional Code' of 'Vital Signs Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL__VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL_CODE = 691;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Entries Optional Title' of 'Vital Signs Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL__VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL_TITLE = 693;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Entries Optional Vital Signs Organizer' of 'Vital Signs Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL__VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL_VITAL_SIGNS_ORGANIZER = 694;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Entries Optional Text' of 'Vital Signs Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL__VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL_TEXT = 692;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Section Template Id' of 'Family History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SECTION__FAMILY_HISTORY_SECTION_TEMPLATE_ID = 716;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Section Code' of 'Family History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SECTION__FAMILY_HISTORY_SECTION_CODE = 717;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Section Title' of 'Family History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SECTION__FAMILY_HISTORY_SECTION_TITLE = 718;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Section Text' of 'Family History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SECTION__FAMILY_HISTORY_SECTION_TEXT = 719;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Section Family History' of 'Family History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SECTION__FAMILY_HISTORY_SECTION_FAMILY_HISTORY = 720;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Organizer Template Id' of 'Family History Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_ORGANIZER__FAMILY_HISTORY_ORGANIZER_TEMPLATE_ID = 721;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Organizer Class Code' of 'Family History Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_ORGANIZER__FAMILY_HISTORY_ORGANIZER_CLASS_CODE = 722;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Organizer Mood Code' of 'Family History Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_ORGANIZER__FAMILY_HISTORY_ORGANIZER_MOOD_CODE = 723;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Organizer Status Code' of 'Family History Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_ORGANIZER__FAMILY_HISTORY_ORGANIZER_STATUS_CODE = 724;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Organizer Family History Observation' of 'Family History Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_ORGANIZER__FAMILY_HISTORY_ORGANIZER_FAMILY_HISTORY_OBSERVATION = 725;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Organizer Subject' of 'Family History Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_ORGANIZER__FAMILY_HISTORY_ORGANIZER_SUBJECT = 726;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Age Observation Inversion' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_AGE_OBSERVATION_INVERSION = 727;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Template Id' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_TEMPLATE_ID = 728;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Class Code' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_CLASS_CODE = 729;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Mood Code' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_MOOD_CODE = 730;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Id' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_ID = 731;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Code' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_CODE = 732;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Status Code' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_STATUS_CODE = 733;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Effective Time' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_EFFECTIVE_TIME = 734;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Value' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_VALUE = 735;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Age Observation' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_AGE_OBSERVATION = 736;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Family History Death Observation' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_FAMILY_HISTORY_DEATH_OBSERVATION = 737;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Death Observation Template Id' of 'Family History Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_DEATH_OBSERVATION__FAMILY_HISTORY_DEATH_OBSERVATION_TEMPLATE_ID = 738;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Death Observation Class Code' of 'Family History Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_DEATH_OBSERVATION__FAMILY_HISTORY_DEATH_OBSERVATION_CLASS_CODE = 739;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Death Observation Mood Code' of 'Family History Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_DEATH_OBSERVATION__FAMILY_HISTORY_DEATH_OBSERVATION_MOOD_CODE = 740;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Death Observation Code' of 'Family History Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_DEATH_OBSERVATION__FAMILY_HISTORY_DEATH_OBSERVATION_CODE = 741;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Death Observation Status Code' of 'Family History Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_DEATH_OBSERVATION__FAMILY_HISTORY_DEATH_OBSERVATION_STATUS_CODE = 742;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Death Observation Value' of 'Family History Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_DEATH_OBSERVATION__FAMILY_HISTORY_DEATH_OBSERVATION_VALUE = 743;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Template Id' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_TEMPLATE_ID = 744;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Code' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_CODE = 745;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Title' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_TITLE = 746;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Text' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_TEXT = 747;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Social History Observation' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_SOCIAL_HISTORY_OBSERVATION = 748;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Pregnancy Observation' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_PREGNANCY_OBSERVATION = 749;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Observation Original Text' of 'Social History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_OBSERVATION__SOCIAL_HISTORY_OBSERVATION_ORIGINAL_TEXT = 750;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Observation Reference' of 'Social History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_OBSERVATION__SOCIAL_HISTORY_OBSERVATION_REFERENCE = 751;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Observation Reference Value' of 'Social History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_OBSERVATION__SOCIAL_HISTORY_OBSERVATION_REFERENCE_VALUE = 752;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Observation Template Id' of 'Social History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_OBSERVATION__SOCIAL_HISTORY_OBSERVATION_TEMPLATE_ID = 753;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Observation Class Code' of 'Social History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_OBSERVATION__SOCIAL_HISTORY_OBSERVATION_CLASS_CODE = 754;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Observation Mood Code' of 'Social History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_OBSERVATION__SOCIAL_HISTORY_OBSERVATION_MOOD_CODE = 755;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Observation Id' of 'Social History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_OBSERVATION__SOCIAL_HISTORY_OBSERVATION_ID = 756;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Observation Code' of 'Social History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_OBSERVATION__SOCIAL_HISTORY_OBSERVATION_CODE = 757;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Observation Status Code' of 'Social History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_OBSERVATION__SOCIAL_HISTORY_OBSERVATION_STATUS_CODE = 758;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Observation Value' of 'Social History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_OBSERVATION__SOCIAL_HISTORY_OBSERVATION_VALUE = 759;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Template Id' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_TEMPLATE_ID = 760;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Class Code' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_CLASS_CODE = 761;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Mood Code' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_MOOD_CODE = 762;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Code' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_CODE = 763;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Status Code' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_STATUS_CODE = 764;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Value' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_VALUE = 765;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Effective Time' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_EFFECTIVE_TIME = 766;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Estimated Date Of Delivery' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_ESTIMATED_DATE_OF_DELIVERY = 767;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Estimated Date Of Delivery Template Id' of 'Estimated Date Of Delivery'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ESTIMATED_DATE_OF_DELIVERY__ESTIMATED_DATE_OF_DELIVERY_TEMPLATE_ID = 768;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Estimated Date Of Delivery Class Code' of 'Estimated Date Of Delivery'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ESTIMATED_DATE_OF_DELIVERY__ESTIMATED_DATE_OF_DELIVERY_CLASS_CODE = 769;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Estimated Date Of Delivery Code' of 'Estimated Date Of Delivery'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ESTIMATED_DATE_OF_DELIVERY__ESTIMATED_DATE_OF_DELIVERY_CODE = 770;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Estimated Date Of Delivery Mood Code' of 'Estimated Date Of Delivery'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ESTIMATED_DATE_OF_DELIVERY__ESTIMATED_DATE_OF_DELIVERY_MOOD_CODE = 771;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Estimated Date Of Delivery Status Code' of 'Estimated Date Of Delivery'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ESTIMATED_DATE_OF_DELIVERY__ESTIMATED_DATE_OF_DELIVERY_STATUS_CODE = 772;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Estimated Date Of Delivery Value' of 'Estimated Date Of Delivery'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ESTIMATED_DATE_OF_DELIVERY__ESTIMATED_DATE_OF_DELIVERY_VALUE = 773;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Title' of 'Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION__RESULTS_SECTION_TITLE = 774;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Text' of 'Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION__RESULTS_SECTION_TEXT = 775;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Result Organizer' of 'Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION__RESULTS_SECTION_RESULT_ORGANIZER = 776;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Entries Optional Template Id' of 'Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION__RESULTS_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 777;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Entries Optional Code' of 'Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION__RESULTS_SECTION_ENTRIES_OPTIONAL_CODE = 778;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Entries Optional Template Id' of 'Results Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION_ENTRIES_OPTIONAL__RESULTS_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 779;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Entries Optional Code' of 'Results Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION_ENTRIES_OPTIONAL__RESULTS_SECTION_ENTRIES_OPTIONAL_CODE = 780;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Entries Optional Title' of 'Results Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION_ENTRIES_OPTIONAL__RESULTS_SECTION_ENTRIES_OPTIONAL_TITLE = 781;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Entries Optional Text' of 'Results Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION_ENTRIES_OPTIONAL__RESULTS_SECTION_ENTRIES_OPTIONAL_TEXT = 782;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Entries Optional Result Organizer' of 'Results Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION_ENTRIES_OPTIONAL__RESULTS_SECTION_ENTRIES_OPTIONAL_RESULT_ORGANIZER = 783;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Code Value' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_CODE_VALUE = 784;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Class Code Value' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_CLASS_CODE_VALUE = 785;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Template Id' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_TEMPLATE_ID = 786;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Id' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_ID = 787;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Status Code' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_STATUS_CODE = 788;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Code' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_CODE = 789;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Result Observation' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_RESULT_OBSERVATION = 790;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Text Reference' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_TEXT_REFERENCE = 791;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Text Reference Value' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_TEXT_REFERENCE_VALUE = 792;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Code Value' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_CODE_VALUE = 793;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation No Observation Range Code' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_NO_OBSERVATION_RANGE_CODE = 794;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Author Multiplicity' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_AUTHOR_MULTIPLICITY = 795;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Template Id' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_TEMPLATE_ID = 796;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Id' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_ID = 797;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Code' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_CODE = 798;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Text' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_TEXT = 799;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Status Code' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_STATUS_CODE = 800;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Effective Time' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_EFFECTIVE_TIME = 801;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Value' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_VALUE = 802;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Interpretation Code' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_INTERPRETATION_CODE = 803;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Method Code' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_METHOD_CODE = 804;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Observation Target Site Code' of 'Result Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_OBSERVATION__RESULT_OBSERVATION_TARGET_SITE_CODE = 805;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical Equipment Section Template Id' of 'Medical Equipment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_EQUIPMENT_SECTION__MEDICAL_EQUIPMENT_SECTION_TEMPLATE_ID = 806;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical Equipment Section Code' of 'Medical Equipment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_EQUIPMENT_SECTION__MEDICAL_EQUIPMENT_SECTION_CODE = 807;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical Equipment Section Title' of 'Medical Equipment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_EQUIPMENT_SECTION__MEDICAL_EQUIPMENT_SECTION_TITLE = 808;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical Equipment Section Text' of 'Medical Equipment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_EQUIPMENT_SECTION__MEDICAL_EQUIPMENT_SECTION_TEXT = 809;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical Equipment Section Non Medicinal Supply Activity' of 'Medical Equipment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_EQUIPMENT_SECTION__MEDICAL_EQUIPMENT_SECTION_NON_MEDICINAL_SUPPLY_ACTIVITY = 810;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Template Id' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_TEMPLATE_ID = 811;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Code' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_CODE = 812;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Title' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_TITLE = 813;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Text' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_TEXT = 814;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Problem Observation' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_PROBLEM_OBSERVATION = 815;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Result Observation' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_RESULT_OBSERVATION = 816;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Section Problem Concern' of 'Problem Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_SECTION__PROBLEM_SECTION_PROBLEM_CONCERN = 817;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Section Entries Optional Template Id' of 'Problem Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_SECTION__PROBLEM_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 818;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Section Entries Optional Template Id' of 'Problem Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_SECTION_ENTRIES_OPTIONAL__PROBLEM_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 819;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Section Entries Optional Code' of 'Problem Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_SECTION_ENTRIES_OPTIONAL__PROBLEM_SECTION_ENTRIES_OPTIONAL_CODE = 820;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Section Entries Optional Title' of 'Problem Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_SECTION_ENTRIES_OPTIONAL__PROBLEM_SECTION_ENTRIES_OPTIONAL_TITLE = 821;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Section Entries Optional Text' of 'Problem Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_SECTION_ENTRIES_OPTIONAL__PROBLEM_SECTION_ENTRIES_OPTIONAL_TEXT = 822;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Section Entries Optional Problem Concern' of 'Problem Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_SECTION_ENTRIES_OPTIONAL__PROBLEM_SECTION_ENTRIES_OPTIONAL_PROBLEM_CONCERN = 823;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation No Additional Participants' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_NO_ADDITIONAL_PARTICIPANTS = 824;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation No Additional Relationships' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_NO_ADDITIONAL_RELATIONSHIPS = 825;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation Template Id' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_TEMPLATE_ID = 826;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation Class Code' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_CLASS_CODE = 827;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation Mood Code' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_MOOD_CODE = 828;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation Code' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_CODE = 829;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation Status Code' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_STATUS_CODE = 830;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation Value' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_VALUE = 831;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Section Template Id' of 'Purpose Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_SECTION__PURPOSE_SECTION_TEMPLATE_ID = 832;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Section Code' of 'Purpose Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_SECTION__PURPOSE_SECTION_CODE = 833;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Section Title' of 'Purpose Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_SECTION__PURPOSE_SECTION_TITLE = 834;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Section Text' of 'Purpose Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_SECTION__PURPOSE_SECTION_TEXT = 835;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Section Purpose Activity' of 'Purpose Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_SECTION__PURPOSE_SECTION_PURPOSE_ACTIVITY = 836;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Has Reason' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_HAS_REASON = 837;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Reason Type' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_REASON_TYPE = 838;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Template Id' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_TEMPLATE_ID = 839;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Class Code' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_CLASS_CODE = 840;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Mood Code' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_MOOD_CODE = 841;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Code' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_CODE = 842;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Status Code' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_STATUS_CODE = 843;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Entries Optional Code' of 'Advance Directives Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION__ADVANCE_DIRECTIVES_SECTION_ENTRIES_OPTIONAL_CODE = 848;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Title' of 'Advance Directives Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION__ADVANCE_DIRECTIVES_SECTION_TITLE = 844;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Text' of 'Advance Directives Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION__ADVANCE_DIRECTIVES_SECTION_TEXT = 845;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Advance Directive Observation' of 'Advance Directives Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION__ADVANCE_DIRECTIVES_SECTION_ADVANCE_DIRECTIVE_OBSERVATION = 846;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Entries Optional Template Id' of 'Advance Directives Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION__ADVANCE_DIRECTIVES_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 847;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Has Starting Time' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_HAS_STARTING_TIME = 499;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Has Ending Time' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_HAS_ENDING_TIME = 500;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Template Id' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_TEMPLATE_ID = 501;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Class Code' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_CLASS_CODE = 502;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Mood Code' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_MOOD_CODE = 503;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Id' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_ID = 504;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Code' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_CODE = 505;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Status Code' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_STATUS_CODE = 506;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Effective Time' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_EFFECTIVE_TIME = 507;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Verifier' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_VERIFIER = 508;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Custodian' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_CUSTODIAN = 509;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Reference' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_REFERENCE = 510;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Verifier Time' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_VERIFIER_TIME = 511;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Verifier Type Code' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_VERIFIER_TYPE_CODE = 512;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Verifier Participant Role' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_VERIFIER_PARTICIPANT_ROLE = 513;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Custodian Custodian Role Custodian Entity Name' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_CUSTODIAN_CUSTODIAN_ROLE_CUSTODIAN_ENTITY_NAME = 514;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Custodian Custodian Role Addr' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_CUSTODIAN_CUSTODIAN_ROLE_ADDR = 515;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Custodian Custodian Role Class Code' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_CUSTODIAN_CUSTODIAN_ROLE_CLASS_CODE = 516;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Custodian Custodian Role Telecom' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_CUSTODIAN_CUSTODIAN_ROLE_TELECOM = 517;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Custodian Custodian Role Playing Entity' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_CUSTODIAN_CUSTODIAN_ROLE_PLAYING_ENTITY = 518;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Custodian Type Code' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_CUSTODIAN_TYPE_CODE = 519;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Custodian Advance Directive Observation Custodian Role' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_CUSTODIAN_ADVANCE_DIRECTIVE_OBSERVATION_CUSTODIAN_ROLE = 520;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Reference External Document Id' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_REFERENCE_EXTERNAL_DOCUMENT_ID = 521;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Reference External Document Text' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_REFERENCE_EXTERNAL_DOCUMENT_TEXT = 522;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Observation Reference External Document' of 'Advance Directive Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION__ADVANCE_DIRECTIVE_OBSERVATION_REFERENCE_EXTERNAL_DOCUMENT = 523;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference External Document' of 'Advance Directive Observation Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION_REFERENCE__REFERENCE_EXTERNAL_DOCUMENT = 524;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Document Id' of 'Reference External Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_EXTERNAL_DOCUMENT__EXTERNAL_DOCUMENT_ID = 525;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Document Text' of 'Reference External Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_EXTERNAL_DOCUMENT__EXTERNAL_DOCUMENT_TEXT = 526;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Custodian Type Code' of 'Advance Directive Observation Custodian'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION_CUSTODIAN__CUSTODIAN_TYPE_CODE = 527;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Custodian Advance Directive Observation Custodian Role' of 'Advance Directive Observation Custodian'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION_CUSTODIAN__CUSTODIAN_ADVANCE_DIRECTIVE_OBSERVATION_CUSTODIAN_ROLE = 528;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Custodian Role Addr' of 'Custodian Custodian Role'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CUSTODIAN_CUSTODIAN_ROLE__CUSTODIAN_ROLE_ADDR = 529;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Custodian Role Class Code' of 'Custodian Custodian Role'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CUSTODIAN_CUSTODIAN_ROLE__CUSTODIAN_ROLE_CLASS_CODE = 530;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Custodian Role Telecom' of 'Custodian Custodian Role'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CUSTODIAN_CUSTODIAN_ROLE__CUSTODIAN_ROLE_TELECOM = 531;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Custodian Role Playing Entity' of 'Custodian Custodian Role'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CUSTODIAN_CUSTODIAN_ROLE__CUSTODIAN_ROLE_PLAYING_ENTITY = 532;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Custodian Entity Name' of 'Custodian Role Custodian Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CUSTODIAN_ROLE_CUSTODIAN_ENTITY__CUSTODIAN_ENTITY_NAME = 533;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Verifier Time' of 'Advance Directive Observation Verifier'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION_VERIFIER__VERIFIER_TIME = 534;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Verifier Type Code' of 'Advance Directive Observation Verifier'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION_VERIFIER__VERIFIER_TYPE_CODE = 535;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Verifier Participant Role' of 'Advance Directive Observation Verifier'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_OBSERVATION_VERIFIER__VERIFIER_PARTICIPANT_ROLE = 536;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Verification Template Id' of 'Advance Directive Verification'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_VERIFICATION__ADVANCE_DIRECTIVE_VERIFICATION_TEMPLATE_ID = 849;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Verification Type Code' of 'Advance Directive Verification'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_VERIFICATION__ADVANCE_DIRECTIVE_VERIFICATION_TYPE_CODE = 850;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Verification Time' of 'Advance Directive Verification'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_VERIFICATION__ADVANCE_DIRECTIVE_VERIFICATION_TIME = 851;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation No Additional Participants' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_NO_ADDITIONAL_PARTICIPANTS = 852;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation No Additional Relationships' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_NO_ADDITIONAL_RELATIONSHIPS = 853;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation Template Id' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_TEMPLATE_ID = 854;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation Class Code' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_CLASS_CODE = 855;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation Mood Code' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_MOOD_CODE = 856;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation Code' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_CODE = 857;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation Status Code' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_STATUS_CODE = 858;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Section Encounter Activities' of 'Encounters Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_SECTION__ENCOUNTERS_SECTION_ENCOUNTER_ACTIVITIES = 859;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Section Entries Optional Template Id' of 'Encounters Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_SECTION__ENCOUNTERS_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 860;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Activities Code Original Text' of 'Encounter Activities'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_ACTIVITIES__ENCOUNTER_ACTIVITIES_CODE_ORIGINAL_TEXT = 552;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Activities Code Original Text Reference' of 'Encounter Activities'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_ACTIVITIES__ENCOUNTER_ACTIVITIES_CODE_ORIGINAL_TEXT_REFERENCE = 553;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Activities Code Original Text Reference Value' of 'Encounter Activities'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_ACTIVITIES__ENCOUNTER_ACTIVITIES_CODE_ORIGINAL_TEXT_REFERENCE_VALUE = 554;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Activities Service Delivery Type Code' of 'Encounter Activities'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_ACTIVITIES__ENCOUNTER_ACTIVITIES_SERVICE_DELIVERY_TYPE_CODE = 555;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Activities Template Id' of 'Encounter Activities'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_ACTIVITIES__ENCOUNTER_ACTIVITIES_TEMPLATE_ID = 556;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Activities Class Code' of 'Encounter Activities'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_ACTIVITIES__ENCOUNTER_ACTIVITIES_CLASS_CODE = 557;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Activities Mood Code' of 'Encounter Activities'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_ACTIVITIES__ENCOUNTER_ACTIVITIES_MOOD_CODE = 558;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Activities Id' of 'Encounter Activities'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_ACTIVITIES__ENCOUNTER_ACTIVITIES_ID = 559;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Activities Code' of 'Encounter Activities'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_ACTIVITIES__ENCOUNTER_ACTIVITIES_CODE = 560;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Activities Effective Time' of 'Encounter Activities'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_ACTIVITIES__ENCOUNTER_ACTIVITIES_EFFECTIVE_TIME = 561;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Activities Service Delivery Location' of 'Encounter Activities'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_ACTIVITIES__ENCOUNTER_ACTIVITIES_SERVICE_DELIVERY_LOCATION = 562;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Activities Indication' of 'Encounter Activities'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_ACTIVITIES__ENCOUNTER_ACTIVITIES_INDICATION = 563;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Service Delivery Location Has Playing Entity' of 'Service Delivery Location'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERVICE_DELIVERY_LOCATION__SERVICE_DELIVERY_LOCATION_HAS_PLAYING_ENTITY = 281;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Service Delivery Location Has Playing Entity Class Code' of 'Service Delivery Location'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERVICE_DELIVERY_LOCATION__SERVICE_DELIVERY_LOCATION_HAS_PLAYING_ENTITY_CLASS_CODE = 282;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Service Delivery Location Template Id' of 'Service Delivery Location'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERVICE_DELIVERY_LOCATION__SERVICE_DELIVERY_LOCATION_TEMPLATE_ID = 283;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Service Delivery Location Addr' of 'Service Delivery Location'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERVICE_DELIVERY_LOCATION__SERVICE_DELIVERY_LOCATION_ADDR = 284;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Service Delivery Location Telecom' of 'Service Delivery Location'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERVICE_DELIVERY_LOCATION__SERVICE_DELIVERY_LOCATION_TELECOM = 285;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Encounter Admission Source Value Set' of 'Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER__CONSOL_ENCOUNTER_ADMISSION_SOURCE_VALUE_SET = 861;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Encounter Class Code' of 'Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER__CONSOL_ENCOUNTER_CLASS_CODE = 862;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Encounter Id' of 'Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER__CONSOL_ENCOUNTER_ID = 863;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Encounter Code' of 'Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER__CONSOL_ENCOUNTER_CODE = 864;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Encounter Text' of 'Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER__CONSOL_ENCOUNTER_TEXT = 865;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Entries Optional Code' of 'Immunizations Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION__IMMUNIZATIONS_SECTION_ENTRIES_OPTIONAL_CODE = 870;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Title' of 'Immunizations Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION__IMMUNIZATIONS_SECTION_TITLE = 866;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Text' of 'Immunizations Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION__IMMUNIZATIONS_SECTION_TEXT = 867;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Immunization' of 'Immunizations Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION__IMMUNIZATIONS_SECTION_IMMUNIZATION = 868;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Entries Optional Template Id' of 'Immunizations Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION__IMMUNIZATIONS_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 869;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Template Id' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_TEMPLATE_ID = 569;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Class Code' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_CLASS_CODE = 570;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Id' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_ID = 571;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Code' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_CODE = 572;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Status Code' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_STATUS_CODE = 573;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Effective Time' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_EFFECTIVE_TIME = 574;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Route Code' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_ROUTE_CODE = 575;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Approach Site Code' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_APPROACH_SITE_CODE = 576;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Dose Quantity' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_DOSE_QUANTITY = 577;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Negation Ind' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_NEGATION_IND = 578;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Text' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_TEXT = 579;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Repeat Number' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_REPEAT_NUMBER = 580;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Administration Unit Code' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_ADMINISTRATION_UNIT_CODE = 581;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Drug Vehicle' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_DRUG_VEHICLE = 582;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Indication' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_INDICATION = 583;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Instructions' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_INSTRUCTIONS = 584;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Medication Dispense' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_MEDICATION_DISPENSE = 585;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Reaction Observation' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_REACTION_OBSERVATION = 586;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Precondition' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_PRECONDITION = 587;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Immunization Refusal Reason' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_IMMUNIZATION_REFUSAL_REASON = 588;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Consumable' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_CONSUMABLE = 589;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Performer' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_PERFORMER = 590;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Activity Medication Supply Order' of 'Immunization Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_ACTIVITY__IMMUNIZATION_ACTIVITY_MEDICATION_SUPPLY_ORDER = 591;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Refusal Reason Template Id' of 'Immunization Refusal Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_REFUSAL_REASON__IMMUNIZATION_REFUSAL_REASON_TEMPLATE_ID = 592;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Refusal Reason Class Code' of 'Immunization Refusal Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_REFUSAL_REASON__IMMUNIZATION_REFUSAL_REASON_CLASS_CODE = 593;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Refusal Reason Code' of 'Immunization Refusal Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_REFUSAL_REASON__IMMUNIZATION_REFUSAL_REASON_CODE = 594;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Refusal Reason Id' of 'Immunization Refusal Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_REFUSAL_REASON__IMMUNIZATION_REFUSAL_REASON_ID = 595;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Refusal Reason Mood Code' of 'Immunization Refusal Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_REFUSAL_REASON__IMMUNIZATION_REFUSAL_REASON_MOOD_CODE = 596;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Refusal Reason Status Code' of 'Immunization Refusal Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_REFUSAL_REASON__IMMUNIZATION_REFUSAL_REASON_STATUS_CODE = 597;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Information Source' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_INFORMATION_SOURCE = 871;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Sequence Number' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_SEQUENCE_NUMBER = 872;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Payment Providers' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_PAYMENT_PROVIDERS = 873;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Payer Entry ID' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_PAYER_ENTRY_ID = 874;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Health Insurance Type' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_HEALTH_INSURANCE_TYPE = 875;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Insurance Information' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_INSURANCE_INFORMATION = 876;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Insurance Info Source ID' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_INSURANCE_INFO_SOURCE_ID = 877;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Insurance Info Source Addr' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_INSURANCE_INFO_SOURCE_ADDR = 878;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Health Plan Coverage Start Time' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_HEALTH_PLAN_COVERAGE_START_TIME = 879;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Health Plan Coverage Stop Time' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_HEALTH_PLAN_COVERAGE_STOP_TIME = 880;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Patient Information' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_PATIENT_INFORMATION = 881;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Member Id' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_MEMBER_ID = 882;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Member Id Root' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_MEMBER_ID_ROOT = 883;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Relationship To Subscriber' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_RELATIONSHIP_TO_SUBSCRIBER = 884;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Relationship To Subscriber Code System' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_RELATIONSHIP_TO_SUBSCRIBER_CODE_SYSTEM = 885;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Patient Name' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_PATIENT_NAME = 886;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Subscriber Information' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_SUBSCRIBER_INFORMATION = 887;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Subscriber Id' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_SUBSCRIBER_ID = 888;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Subscriber Id Root' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_SUBSCRIBER_ID_ROOT = 889;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Subscriber Address' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_SUBSCRIBER_ADDRESS = 890;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Financial Responsibility Party Type' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_FINANCIAL_RESPONSIBILITY_PARTY_TYPE = 891;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Financial Responsibility Party Type Code' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_FINANCIAL_RESPONSIBILITY_PARTY_TYPE_CODE = 892;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Financial Responsibility Party Address' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_FINANCIAL_RESPONSIBILITY_PARTY_ADDRESS = 893;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Class Code' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_CLASS_CODE = 894;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Mood Code' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_MOOD_CODE = 895;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Id' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_ID = 896;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Code' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_CODE = 897;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Status Code' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_STATUS_CODE = 898;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Payer Entry' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_PAYER_ENTRY = 899;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Payer Entity Is Required' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_PAYER_ENTITY_IS_REQUIRED = 900;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Covered Party Is Required' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_COVERED_PARTY_IS_REQUIRED = 901;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Covered Party Time' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_COVERED_PARTY_TIME = 902;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Subscriber Is Allowed' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_SUBSCRIBER_IS_ALLOWED = 903;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Subscriber Time' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_SUBSCRIBER_TIME = 904;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Entry Relationship REFR' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_ENTRY_RELATIONSHIP_REFR = 905;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Class Code' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_CLASS_CODE = 906;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Mood Code' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_MOOD_CODE = 907;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Id' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_ID = 908;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Status Code' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_STATUS_CODE = 909;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Payer Entity' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_PAYER_ENTITY = 910;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Covered Party' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_COVERED_PARTY = 911;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Subscriber' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_SUBSCRIBER = 912;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Covered Party Id' of 'Covered Party'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COVERED_PARTY__COVERED_PARTY_ID = 913;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Covered Party Code' of 'Covered Party'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COVERED_PARTY__COVERED_PARTY_CODE = 914;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Policy Subscriber Id' of 'Policy Subscriber'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int POLICY_SUBSCRIBER__POLICY_SUBSCRIBER_ID = 915;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Has No Code' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_HAS_NO_CODE = 916;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Has Reference' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_HAS_REFERENCE = 917;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Has Reference External Document' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_HAS_REFERENCE_EXTERNAL_DOCUMENT = 918;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Has Reference External Document ID' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_HAS_REFERENCE_EXTERNAL_DOCUMENT_ID = 919;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Has Reference External Document Text' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_HAS_REFERENCE_EXTERNAL_DOCUMENT_TEXT = 920;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Template Id' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_TEMPLATE_ID = 921;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Class Code' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_CLASS_CODE = 922;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Mood Code' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_MOOD_CODE = 923;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Id' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_ID = 924;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Text' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_TEXT = 925;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Entries Optional Code' of 'Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION__VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL_CODE = 930;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Title' of 'Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION__VITAL_SIGNS_SECTION_TITLE = 927;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Text' of 'Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION__VITAL_SIGNS_SECTION_TEXT = 926;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Vital Signs Organizer' of 'Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION__VITAL_SIGNS_SECTION_VITAL_SIGNS_ORGANIZER = 928;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Entries Optional Template Id' of 'Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION__VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 929;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Template Id' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_TEMPLATE_ID = 695;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Class Code' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_CLASS_CODE = 696;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Mood Code' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_MOOD_CODE = 697;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Id' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_ID = 698;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Code' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_CODE = 699;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Status Code' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_STATUS_CODE = 700;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Effective Time' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_EFFECTIVE_TIME = 701;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Vital Sign Observation' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_VITAL_SIGN_OBSERVATION = 702;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Observation Template Id' of 'Vital Sign Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN_OBSERVATION__VITAL_SIGN_OBSERVATION_TEMPLATE_ID = 703;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Observation Class Code' of 'Vital Sign Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN_OBSERVATION__VITAL_SIGN_OBSERVATION_CLASS_CODE = 704;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Observation Mood Code' of 'Vital Sign Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN_OBSERVATION__VITAL_SIGN_OBSERVATION_MOOD_CODE = 705;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Observation Id' of 'Vital Sign Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN_OBSERVATION__VITAL_SIGN_OBSERVATION_ID = 706;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Observation Code' of 'Vital Sign Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN_OBSERVATION__VITAL_SIGN_OBSERVATION_CODE = 707;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Observation Status Code' of 'Vital Sign Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN_OBSERVATION__VITAL_SIGN_OBSERVATION_STATUS_CODE = 708;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Observation Effective Time' of 'Vital Sign Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN_OBSERVATION__VITAL_SIGN_OBSERVATION_EFFECTIVE_TIME = 709;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Observation Value' of 'Vital Sign Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN_OBSERVATION__VITAL_SIGN_OBSERVATION_VALUE = 710;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Observation Interpretation Code' of 'Vital Sign Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN_OBSERVATION__VITAL_SIGN_OBSERVATION_INTERPRETATION_CODE = 711;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Observation Method Code' of 'Vital Sign Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN_OBSERVATION__VITAL_SIGN_OBSERVATION_METHOD_CODE = 712;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Observation Target Site Code' of 'Vital Sign Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN_OBSERVATION__VITAL_SIGN_OBSERVATION_TARGET_SITE_CODE = 713;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Observation Text' of 'Vital Sign Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN_OBSERVATION__VITAL_SIGN_OBSERVATION_TEXT = 714;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Observation Author' of 'Vital Sign Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN_OBSERVATION__VITAL_SIGN_OBSERVATION_AUTHOR = 715;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Past Illness Section Template Id' of 'History Of Past Illness Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PAST_ILLNESS_SECTION__HISTORY_OF_PAST_ILLNESS_SECTION_TEMPLATE_ID = 931;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Past Illness Section Code' of 'History Of Past Illness Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PAST_ILLNESS_SECTION__HISTORY_OF_PAST_ILLNESS_SECTION_CODE = 932;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Past Illness Section Title' of 'History Of Past Illness Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PAST_ILLNESS_SECTION__HISTORY_OF_PAST_ILLNESS_SECTION_TITLE = 933;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Past Illness Section Text' of 'History Of Past Illness Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PAST_ILLNESS_SECTION__HISTORY_OF_PAST_ILLNESS_SECTION_TEXT = 934;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Past Illness Section Problem Observation' of 'History Of Past Illness Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PAST_ILLNESS_SECTION__HISTORY_OF_PAST_ILLNESS_SECTION_PROBLEM_OBSERVATION = 935;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chief Complaint Section Template Id' of 'Chief Complaint Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHIEF_COMPLAINT_SECTION__CHIEF_COMPLAINT_SECTION_TEMPLATE_ID = 936;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chief Complaint Section Code' of 'Chief Complaint Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHIEF_COMPLAINT_SECTION__CHIEF_COMPLAINT_SECTION_CODE = 937;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chief Complaint Section Text' of 'Chief Complaint Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHIEF_COMPLAINT_SECTION__CHIEF_COMPLAINT_SECTION_TEXT = 938;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chief Complaint Section Title' of 'Chief Complaint Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHIEF_COMPLAINT_SECTION__CHIEF_COMPLAINT_SECTION_TITLE = 939;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Referral Section Template Id' of 'Reason For Referral Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_REFERRAL_SECTION__REASON_FOR_REFERRAL_SECTION_TEMPLATE_ID = 940;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Referral Section Code' of 'Reason For Referral Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_REFERRAL_SECTION__REASON_FOR_REFERRAL_SECTION_CODE = 941;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Referral Section Title' of 'Reason For Referral Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_REFERRAL_SECTION__REASON_FOR_REFERRAL_SECTION_TITLE = 942;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Referral Section Text' of 'Reason For Referral Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_REFERRAL_SECTION__REASON_FOR_REFERRAL_SECTION_TEXT = 943;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Present Illness Template Id' of 'History Of Present Illness'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PRESENT_ILLNESS__HISTORY_OF_PRESENT_ILLNESS_TEMPLATE_ID = 944;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Present Illness Code' of 'History Of Present Illness'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PRESENT_ILLNESS__HISTORY_OF_PRESENT_ILLNESS_CODE = 945;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Present Illness Title' of 'History Of Present Illness'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PRESENT_ILLNESS__HISTORY_OF_PRESENT_ILLNESS_TITLE = 946;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Present Illness Text' of 'History Of Present Illness'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PRESENT_ILLNESS__HISTORY_OF_PRESENT_ILLNESS_TEXT = 947;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Admission Diagnosis Section Template Id' of 'Hospital Admission Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_ADMISSION_DIAGNOSIS_SECTION__HOSPITAL_ADMISSION_DIAGNOSIS_SECTION_TEMPLATE_ID = 948;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Admission Diagnosis Section Code' of 'Hospital Admission Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_ADMISSION_DIAGNOSIS_SECTION__HOSPITAL_ADMISSION_DIAGNOSIS_SECTION_CODE = 949;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Admission Diagnosis Section Condition' of 'Hospital Admission Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_ADMISSION_DIAGNOSIS_SECTION__HOSPITAL_ADMISSION_DIAGNOSIS_SECTION_CONDITION = 950;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Diagnosis Section Template Id' of 'Hospital Discharge Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_DIAGNOSIS_SECTION__HOSPITAL_DISCHARGE_DIAGNOSIS_SECTION_TEMPLATE_ID = 1086;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Diagnosis Section Code' of 'Hospital Discharge Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_DIAGNOSIS_SECTION__HOSPITAL_DISCHARGE_DIAGNOSIS_SECTION_CODE = 1087;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Diagnosis Section Title' of 'Hospital Discharge Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_DIAGNOSIS_SECTION__HOSPITAL_DISCHARGE_DIAGNOSIS_SECTION_TITLE = 1088;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Diagnosis Section Text' of 'Hospital Discharge Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_DIAGNOSIS_SECTION__HOSPITAL_DISCHARGE_DIAGNOSIS_SECTION_TEXT = 1089;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Diagnosis Section Hospital Discharge Diagnosis' of 'Hospital Discharge Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_DIAGNOSIS_SECTION__HOSPITAL_DISCHARGE_DIAGNOSIS_SECTION_HOSPITAL_DISCHARGE_DIAGNOSIS = 1090;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Admission Medications Section Entries Optional Template Id' of 'Hospital Admission Medications Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_ADMISSION_MEDICATIONS_SECTION_ENTRIES_OPTIONAL__HOSPITAL_ADMISSION_MEDICATIONS_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 951;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Admission Medications Section Entries Optional Code' of 'Hospital Admission Medications Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_ADMISSION_MEDICATIONS_SECTION_ENTRIES_OPTIONAL__HOSPITAL_ADMISSION_MEDICATIONS_SECTION_ENTRIES_OPTIONAL_CODE = 952;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Administered Section Template Id' of 'Medications Administered Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_ADMINISTERED_SECTION__MEDICATIONS_ADMINISTERED_SECTION_TEMPLATE_ID = 953;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Administered Section Code' of 'Medications Administered Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_ADMINISTERED_SECTION__MEDICATIONS_ADMINISTERED_SECTION_CODE = 954;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Template Id' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_TEMPLATE_ID = 955;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Code' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_CODE = 956;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Title' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_TITLE = 957;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Text' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_TEXT = 958;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Status Section Template Id' of 'General Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_STATUS_SECTION__GENERAL_STATUS_SECTION_TEMPLATE_ID = 959;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Status Section Code' of 'General Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_STATUS_SECTION__GENERAL_STATUS_SECTION_CODE = 960;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Status Section Title' of 'General Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_STATUS_SECTION__GENERAL_STATUS_SECTION_TITLE = 961;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Status Section Text' of 'General Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_STATUS_SECTION__GENERAL_STATUS_SECTION_TEXT = 962;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Review Of Systems Section Template Id' of 'Review Of Systems Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REVIEW_OF_SYSTEMS_SECTION__REVIEW_OF_SYSTEMS_SECTION_TEMPLATE_ID = 963;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Review Of Systems Section Code' of 'Review Of Systems Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REVIEW_OF_SYSTEMS_SECTION__REVIEW_OF_SYSTEMS_SECTION_CODE = 964;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Review Of Systems Section Title' of 'Review Of Systems Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REVIEW_OF_SYSTEMS_SECTION__REVIEW_OF_SYSTEMS_SECTION_TITLE = 965;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Review Of Systems Section Text' of 'Review Of Systems Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REVIEW_OF_SYSTEMS_SECTION__REVIEW_OF_SYSTEMS_SECTION_TEXT = 966;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Course Section Template Id' of 'Hospital Course Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_COURSE_SECTION__HOSPITAL_COURSE_SECTION_TEMPLATE_ID = 1110;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Course Section Code' of 'Hospital Course Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_COURSE_SECTION__HOSPITAL_COURSE_SECTION_CODE = 1111;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Course Section Title' of 'Hospital Course Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_COURSE_SECTION__HOSPITAL_COURSE_SECTION_TITLE = 1112;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Course Section Text' of 'Hospital Course Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_COURSE_SECTION__HOSPITAL_COURSE_SECTION_TEXT = 1113;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment And Plan Section Template Id' of 'Assessment And Plan Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_AND_PLAN_SECTION__ASSESSMENT_AND_PLAN_SECTION_TEMPLATE_ID = 967;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment And Plan Section Code' of 'Assessment And Plan Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_AND_PLAN_SECTION__ASSESSMENT_AND_PLAN_SECTION_CODE = 968;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment And Plan Section Text' of 'Assessment And Plan Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_AND_PLAN_SECTION__ASSESSMENT_AND_PLAN_SECTION_TEXT = 969;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment And Plan Section Plan Of Care Activity Act' of 'Assessment And Plan Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_AND_PLAN_SECTION__ASSESSMENT_AND_PLAN_SECTION_PLAN_OF_CARE_ACTIVITY_ACT = 970;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Language Spoken No Proficiency Level Code' of 'Language Spoken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LANGUAGE_SPOKEN__LANGUAGE_SPOKEN_NO_PROFICIENCY_LEVEL_CODE = 971;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Language Spoken Mode Code' of 'Language Spoken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LANGUAGE_SPOKEN__LANGUAGE_SPOKEN_MODE_CODE = 972;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Surgical Drains Section Template Id' of 'Surgical Drains Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SURGICAL_DRAINS_SECTION__SURGICAL_DRAINS_SECTION_TEMPLATE_ID = 973;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Type Id Fixed' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_TYPE_ID_FIXED = 974;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has One Record Target' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_ONE_RECORD_TARGET = 975;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Assigned Author' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_ASSIGNED_AUTHOR = 976;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Patient Role Id' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_PATIENT_ROLE_ID = 977;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Patient Role Address' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_PATIENT_ROLE_ADDRESS = 978;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Patient Name' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_PATIENT_NAME = 979;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Patient Gender Code' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_PATIENT_GENDER_CODE = 980;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Patient Birth Year' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_PATIENT_BIRTH_YEAR = 981;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Original Author' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_ORIGINAL_AUTHOR = 982;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Scanning Device' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_SCANNING_DEVICE = 983;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Scan Data Enterer' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_SCAN_DATA_ENTERER = 984;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Represented Custodian Organization Name' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_NAME = 985;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Represented Custodian Organization Addr' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_ADDR = 986;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Legal Authenticator Assigned Entity Id' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY_ID = 987;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Non XML Body' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_NON_XML_BODY = 988;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Non XML Body Binary Text' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_NON_XML_BODY_BINARY_TEXT = 989;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Non XML Body Text Media Type' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_NON_XML_BODY_TEXT_MEDIA_TYPE = 990;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Non XML Body Text Representation' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_NON_XML_BODY_TEXT_REPRESENTATION = 991;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document No Structured Data' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_NO_STRUCTURED_DATA = 992;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document One Patient Per Document' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_ONE_PATIENT_PER_DOCUMENT = 993;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Code' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_CODE = 994;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Confidentiality Code' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_CONFIDENTIALITY_CODE = 995;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Effective Time' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_EFFECTIVE_TIME = 996;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Id' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_ID = 997;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Language Code' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_LANGUAGE_CODE = 998;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Title' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_TITLE = 999;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Type Id' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_TYPE_ID = 1000;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Scan Original Author' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_SCAN_ORIGINAL_AUTHOR = 1001;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Scanning Device' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_SCANNING_DEVICE = 1002;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Scan Data Enterer' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_SCAN_DATA_ENTERER = 1003;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Legal Authenticator' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_LEGAL_AUTHENTICATOR = 1004;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Documentation Of' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_DOCUMENTATION_OF = 1005;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Template Id' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__GENERAL_HEADER_CONSTRAINTS_TEMPLATE_ID = 1006;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scan Original Author Has Assigned Author Id' of 'Scan Original Author'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCAN_ORIGINAL_AUTHOR__SCAN_ORIGINAL_AUTHOR_HAS_ASSIGNED_AUTHOR_ID = 1007;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scan Original Author Has Assigned Author Represented Organization Id' of 'Scan Original Author'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCAN_ORIGINAL_AUTHOR__SCAN_ORIGINAL_AUTHOR_HAS_ASSIGNED_AUTHOR_REPRESENTED_ORGANIZATION_ID = 1008;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scanning Device Time Equals Document Effective Time' of 'Scanning Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCANNING_DEVICE__SCANNING_DEVICE_TIME_EQUALS_DOCUMENT_EFFECTIVE_TIME = 1009;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scanning Device Has Assigned Author Id' of 'Scanning Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCANNING_DEVICE__SCANNING_DEVICE_HAS_ASSIGNED_AUTHOR_ID = 1010;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scanning Device Has Assigned Authoring Device Code' of 'Scanning Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCANNING_DEVICE__SCANNING_DEVICE_HAS_ASSIGNED_AUTHORING_DEVICE_CODE = 1011;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scanning Device Has Device Manufacturer Model Name' of 'Scanning Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCANNING_DEVICE__SCANNING_DEVICE_HAS_DEVICE_MANUFACTURER_MODEL_NAME = 1012;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scanning Device Has Device Software Name' of 'Scanning Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCANNING_DEVICE__SCANNING_DEVICE_HAS_DEVICE_SOFTWARE_NAME = 1013;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scanning Device Has Assigned Author Represented Organization Id' of 'Scanning Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCANNING_DEVICE__SCANNING_DEVICE_HAS_ASSIGNED_AUTHOR_REPRESENTED_ORGANIZATION_ID = 1014;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scan Data Enterer Time Equals Document Effective Time' of 'Scan Data Enterer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCAN_DATA_ENTERER__SCAN_DATA_ENTERER_TIME_EQUALS_DOCUMENT_EFFECTIVE_TIME = 1015;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scan Data Enterer Has Assigned Entity Id' of 'Scan Data Enterer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCAN_DATA_ENTERER__SCAN_DATA_ENTERER_HAS_ASSIGNED_ENTITY_ID = 1016;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scan Data Enterer Time' of 'Scan Data Enterer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCAN_DATA_ENTERER__SCAN_DATA_ENTERER_TIME = 1017;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Template Id' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_TEMPLATE_ID = 1018;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Id' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_ID = 1019;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Class Code' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_CLASS_CODE = 1020;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Manufactured Material' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_MANUFACTURED_MATERIAL = 1021;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Manufacturer Organization' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_MANUFACTURER_ORGANIZATION = 1022;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Type Id Fixed' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TYPE_ID_FIXED = 1023;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has One Record Target' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ONE_RECORD_TARGET = 1024;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Assigned Author' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ASSIGNED_AUTHOR = 1025;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Patient Role Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_PATIENT_ROLE_ID = 1026;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Patient Role Address' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PATIENT_ROLE_ADDRESS = 1027;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Patient Name' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PATIENT_NAME = 1028;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Patient Gender Code' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PATIENT_GENDER_CODE = 1029;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Patient Birth Year' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PATIENT_BIRTH_YEAR = 1030;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Original Author' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ORIGINAL_AUTHOR = 1031;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Scanning Device' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_SCANNING_DEVICE = 1032;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Scan Data Enterer' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_SCAN_DATA_ENTERER = 1033;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Legal Authenticator Assigned Entity Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY_ID = 1034;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Non XML Body' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_NON_XML_BODY = 1035;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Non XML Body Binary Text' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_NON_XML_BODY_BINARY_TEXT = 1036;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Non XML Body Text Media Type' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_NON_XML_BODY_TEXT_MEDIA_TYPE = 1037;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Non XML Body Text Representation' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_NON_XML_BODY_TEXT_REPRESENTATION = 1038;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document No Structured Data' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_NO_STRUCTURED_DATA = 1039;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document One Patient Per Document' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ONE_PATIENT_PER_DOCUMENT = 1040;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Patient Role Has Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_PATIENT_ROLE_HAS_ID = 1041;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Assigned Author Has Addr' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ASSIGNED_AUTHOR_HAS_ADDR = 1042;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Assigned Author Has Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ASSIGNED_AUTHOR_HAS_TELECOM = 1043;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION = 1044;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_ID = 1045;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Name' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_NAME = 1046;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_TELECOM = 1047;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Addr' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_ADDR = 1048;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Non XML Body Text' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_NON_XML_BODY_TEXT = 1049;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Text Reference Or Representation' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_TEXT_REFERENCE_OR_REPRESENTATION = 1050;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Text Media Type Value Set' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_TEXT_MEDIA_TYPE_VALUE_SET = 1051;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Code' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_CODE = 1052;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Effective Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_EFFECTIVE_TIME = 1053;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ID = 1054;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Language Code' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LANGUAGE_CODE = 1055;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Title' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TITLE = 1056;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Type Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TYPE_ID = 1057;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Scan Original Author' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_SCAN_ORIGINAL_AUTHOR = 1058;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Scanning Device' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_SCANNING_DEVICE = 1059;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Scan Data Enterer' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_SCAN_DATA_ENTERER = 1060;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Legal Authenticator' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LEGAL_AUTHENTICATOR = 1061;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Documentation Of' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_DOCUMENTATION_OF = 1062;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Custodian' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_CUSTODIAN = 1063;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Template Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__GENERAL_HEADER_CONSTRAINTS_TEMPLATE_ID = 1064;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Template Id' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__GENERAL_HEADER_CONSTRAINTS_TEMPLATE_ID = 1065;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Code' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__GENERAL_HEADER_CONSTRAINTS_CODE = 1066;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Admission Medication History Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_ADMISSION_MEDICATION_HISTORY_SECTION = 1067;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Hospital Admission Diagnosis Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HOSPITAL_ADMISSION_DIAGNOSIS_SECTION = 1068;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Advance Directives Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_ADVANCE_DIRECTIVES_SECTION = 1069;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Allergies Reactions Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_ALLERGIES_REACTIONS_SECTION = 1070;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Discharge Diagnosis Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_DISCHARGE_DIAGNOSIS_SECTION = 1071;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Discharge Diet' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_DISCHARGE_DIET = 1072;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Hospital Discharge Medications Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HOSPITAL_DISCHARGE_MEDICATIONS_SECTION = 1073;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Functional Status Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_FUNCTIONAL_STATUS_SECTION = 1074;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary History Of Present Illness' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HISTORY_OF_PRESENT_ILLNESS = 1075;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Hospital Course Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HOSPITAL_COURSE_SECTION = 1076;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Medical Equipment Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_MEDICAL_EQUIPMENT_SECTION = 1077;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Physical Exam Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_PHYSICAL_EXAM_SECTION = 1078;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Plan Of Care Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_PLAN_OF_CARE_SECTION = 1079;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary History Of Past Illness Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HISTORY_OF_PAST_ILLNESS_SECTION = 1080;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Review Of Systems Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_REVIEW_OF_SYSTEMS_SECTION = 1081;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Medications Administered Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_MEDICATIONS_ADMINISTERED_SECTION = 1082;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Vital Signs Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_VITAL_SIGNS_SECTION = 1083;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Template Id' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__GENERAL_HEADER_CONSTRAINTS_TEMPLATE_ID = 1084;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Header Constraints Code' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__GENERAL_HEADER_CONSTRAINTS_CODE = 1085;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Diet Section Template Id' of 'Discharge Diet Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_DIET_SECTION__DISCHARGE_DIET_SECTION_TEMPLATE_ID = 1096;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Diet Section Code' of 'Discharge Diet Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_DIET_SECTION__DISCHARGE_DIET_SECTION_CODE = 1097;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Diet Section Title' of 'Discharge Diet Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_DIET_SECTION__DISCHARGE_DIET_SECTION_TITLE = 1098;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Diet Section Text' of 'Discharge Diet Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_DIET_SECTION__DISCHARGE_DIET_SECTION_TEXT = 1099;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Medications Section Entries Optional Template Id' of 'Hospital Discharge Medications Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_ENTRIES_OPTIONAL__HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 1100;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Medications Section Entries Optional Code' of 'Hospital Discharge Medications Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_ENTRIES_OPTIONAL__HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_ENTRIES_OPTIONAL_CODE = 1101;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Medications Section Entries Optional Title' of 'Hospital Discharge Medications Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_ENTRIES_OPTIONAL__HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_ENTRIES_OPTIONAL_TITLE = 1102;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Medications Section Entries Optional Text' of 'Hospital Discharge Medications Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_ENTRIES_OPTIONAL__HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_ENTRIES_OPTIONAL_TEXT = 1103;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Medications Section Entries Optional Discharge Medication' of 'Hospital Discharge Medications Section Entries Optional'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_ENTRIES_OPTIONAL__HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_ENTRIES_OPTIONAL_DISCHARGE_MEDICATION = 1104;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Precondition For Substance Administration Criterion Code' of 'Precondition For Substance Administration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRECONDITION_FOR_SUBSTANCE_ADMINISTRATION__PRECONDITION_FOR_SUBSTANCE_ADMINISTRATION_CRITERION_CODE = 1114;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Precondition For Substance Administration Criterion Text' of 'Precondition For Substance Administration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRECONDITION_FOR_SUBSTANCE_ADMINISTRATION__PRECONDITION_FOR_SUBSTANCE_ADMINISTRATION_CRITERION_TEXT = 1115;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Precondition For Substance Administration Criterion Value' of 'Precondition For Substance Administration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRECONDITION_FOR_SUBSTANCE_ADMINISTRATION__PRECONDITION_FOR_SUBSTANCE_ADMINISTRATION_CRITERION_VALUE = 1116;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Precondition For Substance Administration Template Id' of 'Precondition For Substance Administration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRECONDITION_FOR_SUBSTANCE_ADMINISTRATION__PRECONDITION_FOR_SUBSTANCE_ADMINISTRATION_TEMPLATE_ID = 1117;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Precondition For Substance Administration Criterion' of 'Precondition For Substance Administration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRECONDITION_FOR_SUBSTANCE_ADMINISTRATION__PRECONDITION_FOR_SUBSTANCE_ADMINISTRATION_CRITERION = 1118;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Medication Information Template Id' of 'Immunization Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_MEDICATION_INFORMATION__IMMUNIZATION_MEDICATION_INFORMATION_TEMPLATE_ID = 1119;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Medication Information Class Code' of 'Immunization Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_MEDICATION_INFORMATION__IMMUNIZATION_MEDICATION_INFORMATION_CLASS_CODE = 1120;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Medication Information Id' of 'Immunization Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_MEDICATION_INFORMATION__IMMUNIZATION_MEDICATION_INFORMATION_ID = 1121;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Medication Information Organization' of 'Immunization Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION_MEDICATION_INFORMATION__IMMUNIZATION_MEDICATION_INFORMATION_ORGANIZATION = 1122;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Specimen Specimen Role' of 'Procedure Specimen'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_SPECIMEN__PROCEDURE_SPECIMEN_SPECIMEN_ROLE = 1123;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Specimen Speciment Role Id' of 'Procedure Specimen'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_SPECIMEN__PROCEDURE_SPECIMEN_SPECIMENT_ROLE_ID = 1124;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Specimen Template Id' of 'Procedure Specimen'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_SPECIMEN__PROCEDURE_SPECIMEN_TEMPLATE_ID = 1125;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Performer Assigned Entity' of 'Procedure Performer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_PERFORMER__PROCEDURE_PERFORMER_ASSIGNED_ENTITY = 1126;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Performer Assigned Entity Id' of 'Procedure Performer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_PERFORMER__PROCEDURE_PERFORMER_ASSIGNED_ENTITY_ID = 1127;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Performer Assigned Entity Addr' of 'Procedure Performer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_PERFORMER__PROCEDURE_PERFORMER_ASSIGNED_ENTITY_ADDR = 1128;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Performer Assigned Entity Telecom' of 'Procedure Performer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_PERFORMER__PROCEDURE_PERFORMER_ASSIGNED_ENTITY_TELECOM = 1129;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Performer Assigned Entity Rep Org' of 'Procedure Performer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_PERFORMER__PROCEDURE_PERFORMER_ASSIGNED_ENTITY_REP_ORG = 1130;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Performer Assigned Entity Rep Org Id' of 'Procedure Performer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_PERFORMER__PROCEDURE_PERFORMER_ASSIGNED_ENTITY_REP_ORG_ID = 1131;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Performer Assigned Entity Rep Org Name' of 'Procedure Performer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_PERFORMER__PROCEDURE_PERFORMER_ASSIGNED_ENTITY_REP_ORG_NAME = 1132;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Performer Assigned Entity Rep Org Addr' of 'Procedure Performer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_PERFORMER__PROCEDURE_PERFORMER_ASSIGNED_ENTITY_REP_ORG_ADDR = 1133;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Performer Assigned Entity Rep Org Telecom' of 'Procedure Performer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_PERFORMER__PROCEDURE_PERFORMER_ASSIGNED_ENTITY_REP_ORG_TELECOM = 1134;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Encounter Class Code' of 'Procedure Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENCOUNTER__PROCEDURE_ENCOUNTER_CLASS_CODE = 1135;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Encounter Mood Code' of 'Procedure Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENCOUNTER__PROCEDURE_ENCOUNTER_MOOD_CODE = 1136;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Encounter Id' of 'Procedure Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENCOUNTER__PROCEDURE_ENCOUNTER_ID = 1137;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Manufactured Material Code' of 'Medication Information Manufactured Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION_MANUFACTURED_MATERIAL__MEDICATION_INFORMATION_MANUFACTURED_MATERIAL_CODE = 1138;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Subject Related Subject Class Code' of 'Family History Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SUBJECT__FAMILY_HISTORY_SUBJECT_RELATED_SUBJECT_CLASS_CODE = 1139;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Subject Related Subject Code' of 'Family History Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SUBJECT__FAMILY_HISTORY_SUBJECT_RELATED_SUBJECT_CODE = 1140;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Subject Related Subject Code Value Set' of 'Family History Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SUBJECT__FAMILY_HISTORY_SUBJECT_RELATED_SUBJECT_CODE_VALUE_SET = 1141;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Subject Related Subject Subject' of 'Family History Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SUBJECT__FAMILY_HISTORY_SUBJECT_RELATED_SUBJECT_SUBJECT = 1142;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Subject Related Subject Subject Adm Gender Code' of 'Family History Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SUBJECT__FAMILY_HISTORY_SUBJECT_RELATED_SUBJECT_SUBJECT_ADM_GENDER_CODE = 1143;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Subject Related Subject Subject Birth Time' of 'Family History Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SUBJECT__FAMILY_HISTORY_SUBJECT_RELATED_SUBJECT_SUBJECT_BIRTH_TIME = 1144;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Subject Related Subject Subject Deceased Ind' of 'Family History Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SUBJECT__FAMILY_HISTORY_SUBJECT_RELATED_SUBJECT_SUBJECT_DECEASED_IND = 1145;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Subject Related Subject Subject Deceased Time' of 'Family History Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SUBJECT__FAMILY_HISTORY_SUBJECT_RELATED_SUBJECT_SUBJECT_DECEASED_TIME = 1146;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Studies Summary Section Template Id' of 'Hospital Discharge Studies Summary Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION__HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION_TEMPLATE_ID = 1147;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Studies Summary Section Code' of 'Hospital Discharge Studies Summary Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION__HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION_CODE = 1148;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Studies Summary Section Title' of 'Hospital Discharge Studies Summary Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION__HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION_TITLE = 1149;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Studies Summary Section Text' of 'Hospital Discharge Studies Summary Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION__HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION_TEXT = 1150;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Medication Medication Activity' of 'Discharge Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_MEDICATION__DISCHARGE_MEDICATION_MEDICATION_ACTIVITY = 1105;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Medication Template Id' of 'Discharge Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_MEDICATION__DISCHARGE_MEDICATION_TEMPLATE_ID = 1106;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Medication Class Code' of 'Discharge Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_MEDICATION__DISCHARGE_MEDICATION_CLASS_CODE = 1107;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Medication Mood Code' of 'Discharge Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_MEDICATION__DISCHARGE_MEDICATION_MOOD_CODE = 1108;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Medication Code' of 'Discharge Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_MEDICATION__DISCHARGE_MEDICATION_CODE = 1109;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Diagnosis Problem Observation' of 'Hospital Discharge Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_DIAGNOSIS__HOSPITAL_DISCHARGE_DIAGNOSIS_PROBLEM_OBSERVATION = 1091;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Diagnosis Template Id' of 'Hospital Discharge Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_DIAGNOSIS__HOSPITAL_DISCHARGE_DIAGNOSIS_TEMPLATE_ID = 1092;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Diagnosis Class Code' of 'Hospital Discharge Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_DIAGNOSIS__HOSPITAL_DISCHARGE_DIAGNOSIS_CLASS_CODE = 1093;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Diagnosis Mood Code' of 'Hospital Discharge Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_DIAGNOSIS__HOSPITAL_DISCHARGE_DIAGNOSIS_MOOD_CODE = 1094;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Diagnosis Code' of 'Hospital Discharge Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_DIAGNOSIS__HOSPITAL_DISCHARGE_DIAGNOSIS_CODE = 1095;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Instructions Section Template Id' of 'Hospital Discharge Instructions Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_INSTRUCTIONS_SECTION__HOSPITAL_DISCHARGE_INSTRUCTIONS_SECTION_TEMPLATE_ID = 1151;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Instructions Section Code' of 'Hospital Discharge Instructions Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_INSTRUCTIONS_SECTION__HOSPITAL_DISCHARGE_INSTRUCTIONS_SECTION_CODE = 1152;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Instructions Section Text' of 'Hospital Discharge Instructions Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_INSTRUCTIONS_SECTION__HOSPITAL_DISCHARGE_INSTRUCTIONS_SECTION_TEXT = 1154;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Medications Section Discharge Medication' of 'Hospital Discharge Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_MEDICATIONS_SECTION__HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_DISCHARGE_MEDICATION = 1155;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Instructions Section Title' of 'Hospital Discharge Instructions Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_INSTRUCTIONS_SECTION__HOSPITAL_DISCHARGE_INSTRUCTIONS_SECTION_TITLE = 1153;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Medications Section Entries Optional Template Id' of 'Hospital Discharge Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_MEDICATIONS_SECTION__HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_ENTRIES_OPTIONAL_TEMPLATE_ID = 1156;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Physical Section Template Id' of 'Hospital Discharge Physical Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_PHYSICAL_SECTION__HOSPITAL_DISCHARGE_PHYSICAL_SECTION_TEMPLATE_ID = 1157;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Physical Section Code' of 'Hospital Discharge Physical Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_PHYSICAL_SECTION__HOSPITAL_DISCHARGE_PHYSICAL_SECTION_CODE = 1158;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Physical Section Title' of 'Hospital Discharge Physical Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_PHYSICAL_SECTION__HOSPITAL_DISCHARGE_PHYSICAL_SECTION_TITLE = 1159;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Physical Section Text' of 'Hospital Discharge Physical Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_PHYSICAL_SECTION__HOSPITAL_DISCHARGE_PHYSICAL_SECTION_TEXT = 1160;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chief Complaint And Reason For Visit Section Template Id' of 'Chief Complaint And Reason For Visit Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHIEF_COMPLAINT_AND_REASON_FOR_VISIT_SECTION__CHIEF_COMPLAINT_AND_REASON_FOR_VISIT_SECTION_TEMPLATE_ID = 1161;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chief Complaint And Reason For Visit Section Code' of 'Chief Complaint And Reason For Visit Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHIEF_COMPLAINT_AND_REASON_FOR_VISIT_SECTION__CHIEF_COMPLAINT_AND_REASON_FOR_VISIT_SECTION_CODE = 1162;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chief Complaint And Reason For Visit Section Text' of 'Chief Complaint And Reason For Visit Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHIEF_COMPLAINT_AND_REASON_FOR_VISIT_SECTION__CHIEF_COMPLAINT_AND_REASON_FOR_VISIT_SECTION_TEXT = 1163;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chief Complaint And Reason For Visit Section Title' of 'Chief Complaint And Reason For Visit Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHIEF_COMPLAINT_AND_REASON_FOR_VISIT_SECTION__CHIEF_COMPLAINT_AND_REASON_FOR_VISIT_SECTION_TITLE = 1164;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Visit Section Template Id' of 'Reason For Visit Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_VISIT_SECTION__REASON_FOR_VISIT_SECTION_TEMPLATE_ID = 1165;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Visit Section Code' of 'Reason For Visit Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_VISIT_SECTION__REASON_FOR_VISIT_SECTION_CODE = 1166;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Visit Section Text' of 'Reason For Visit Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_VISIT_SECTION__REASON_FOR_VISIT_SECTION_TEXT = 1167;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Visit Section Title' of 'Reason For Visit Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_VISIT_SECTION__REASON_FOR_VISIT_SECTION_TITLE = 1168;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Related Informant Addr' of 'Related Informant'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RELATED_INFORMANT__RELATED_INFORMANT_ADDR = 1169;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Related Informant Code' of 'Related Informant'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RELATED_INFORMANT__RELATED_INFORMANT_CODE = 1170;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Performer Assigned Entity Code' of 'Encounter Performer Assigned Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_PERFORMER_ASSIGNED_ENTITY__ENCOUNTER_PERFORMER_ASSIGNED_ENTITY_CODE = 1171;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Participant Participant Role' of 'Allergy Observation Participant'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION_PARTICIPANT__ALLERGY_OBSERVATION_PARTICIPANT_PARTICIPANT_ROLE = 1172;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Participant Role Playing Entity' of 'Allergy Observation Participant Role'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION_PARTICIPANT_ROLE__ALLERGY_OBSERVATION_PARTICIPANT_ROLE_PLAYING_ENTITY = 1173;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Playing Entity Code Original Text' of 'Allergy Observation Playing Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION_PLAYING_ENTITY__ALLERGY_OBSERVATION_PLAYING_ENTITY_CODE_ORIGINAL_TEXT = 1174;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Playing Entity Code Translation' of 'Allergy Observation Playing Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION_PLAYING_ENTITY__ALLERGY_OBSERVATION_PLAYING_ENTITY_CODE_TRANSLATION = 1175;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Playing Entity Class Code' of 'Allergy Observation Playing Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION_PLAYING_ENTITY__ALLERGY_OBSERVATION_PLAYING_ENTITY_CLASS_CODE = 1176;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Observation Playing Entity Code' of 'Allergy Observation Playing Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_OBSERVATION_PLAYING_ENTITY__ALLERGY_OBSERVATION_PLAYING_ENTITY_CODE = 1177;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Anesthesia Section Template Id' of 'Anesthesia Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ANESTHESIA_SECTION__ANESTHESIA_SECTION_TEMPLATE_ID = 1178;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Anesthesia Section Code' of 'Anesthesia Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ANESTHESIA_SECTION__ANESTHESIA_SECTION_CODE = 1179;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Anesthesia Section Text' of 'Anesthesia Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ANESTHESIA_SECTION__ANESTHESIA_SECTION_TEXT = 1180;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Anesthesia Section Title' of 'Anesthesia Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ANESTHESIA_SECTION__ANESTHESIA_SECTION_TITLE = 1181;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Anesthesia Section Procedure Activity Procedure' of 'Anesthesia Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ANESTHESIA_SECTION__ANESTHESIA_SECTION_PROCEDURE_ACTIVITY_PROCEDURE = 1182;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Anesthesia Section Medication Activity' of 'Anesthesia Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ANESTHESIA_SECTION__ANESTHESIA_SECTION_MEDICATION_ACTIVITY = 1183;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Complications Section Template Id' of 'Complications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMPLICATIONS_SECTION__COMPLICATIONS_SECTION_TEMPLATE_ID = 1184;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate DICOM Object Catalog Section Template Id' of 'DICOM Object Catalog Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DICOM_OBJECT_CATALOG_SECTION__DICOM_OBJECT_CATALOG_SECTION_TEMPLATE_ID = 1185;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Findings Section Template Id' of 'Findings Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDINGS_SECTION__FINDINGS_SECTION_TEMPLATE_ID = 1186;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Consultations Section Template Id' of 'Hospital Consultations Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_CONSULTATIONS_SECTION__HOSPITAL_CONSULTATIONS_SECTION_TEMPLATE_ID = 1187;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Interventions Section Template Id' of 'Interventions Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTERVENTIONS_SECTION__INTERVENTIONS_SECTION_TEMPLATE_ID = 1188;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Section Template Id' of 'Medical History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_SECTION__MEDICAL_HISTORY_SECTION_TEMPLATE_ID = 1189;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Objective Section Template Id' of 'Objective Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OBJECTIVE_SECTION__OBJECTIVE_SECTION_TEMPLATE_ID = 1190;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Operative Note Fluid Section Template Id' of 'Operative Note Fluid Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OPERATIVE_NOTE_FLUID_SECTION__OPERATIVE_NOTE_FLUID_SECTION_TEMPLATE_ID = 1191;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Operative Note Surgical Procedure Section Template Id' of 'Operative Note Surgical Procedure Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OPERATIVE_NOTE_SURGICAL_PROCEDURE_SECTION__OPERATIVE_NOTE_SURGICAL_PROCEDURE_SECTION_TEMPLATE_ID = 1192;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Planned Procedure Section Template Id' of 'Planned Procedure Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLANNED_PROCEDURE_SECTION__PLANNED_PROCEDURE_SECTION_TEMPLATE_ID = 1193;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Postoperative Diagnosis Section Template Id' of 'Postoperative Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int POSTOPERATIVE_DIAGNOSIS_SECTION__POSTOPERATIVE_DIAGNOSIS_SECTION_TEMPLATE_ID = 1194;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Postprocedure Diagnosis Section Template Id' of 'Postprocedure Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int POSTPROCEDURE_DIAGNOSIS_SECTION__POSTPROCEDURE_DIAGNOSIS_SECTION_TEMPLATE_ID = 1195;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Preoperative Diagnosis Section Template Id' of 'Preoperative Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREOPERATIVE_DIAGNOSIS_SECTION__PREOPERATIVE_DIAGNOSIS_SECTION_TEMPLATE_ID = 1196;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Description Section Template Id' of 'Procedure Description Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_DESCRIPTION_SECTION__PROCEDURE_DESCRIPTION_SECTION_TEMPLATE_ID = 1197;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Disposition Section Template Id' of 'Procedure Disposition Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_DISPOSITION_SECTION__PROCEDURE_DISPOSITION_SECTION_TEMPLATE_ID = 1198;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Estimated Blood Loss Section Template Id' of 'Procedure Estimated Blood Loss Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ESTIMATED_BLOOD_LOSS_SECTION__PROCEDURE_ESTIMATED_BLOOD_LOSS_SECTION_TEMPLATE_ID = 1199;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Findings Section Template Id' of 'Procedure Findings Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_FINDINGS_SECTION__PROCEDURE_FINDINGS_SECTION_TEMPLATE_ID = 1200;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Implants Section Template Id' of 'Procedure Implants Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_IMPLANTS_SECTION__PROCEDURE_IMPLANTS_SECTION_TEMPLATE_ID = 1201;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Indications Section Template Id' of 'Procedure Indications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_INDICATIONS_SECTION__PROCEDURE_INDICATIONS_SECTION_TEMPLATE_ID = 1202;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Specimens Taken Section Template Id' of 'Procedure Specimens Taken Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_SPECIMENS_TAKEN_SECTION__PROCEDURE_SPECIMENS_TAKEN_SECTION_TEMPLATE_ID = 1203;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subjective Section Template Id' of 'Subjective Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECTIVE_SECTION__SUBJECTIVE_SECTION_TEMPLATE_ID = 1204;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Template Id' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_TEMPLATE_ID = 1205;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note In Fulfillment Of' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_IN_FULFILLMENT_OF = 1206;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Component Of' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_COMPONENT_OF = 1207;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Assessment Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_ASSESSMENT_SECTION = 1208;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Assessment And Plan Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_ASSESSMENT_AND_PLAN_SECTION = 1209;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Plan Of Care Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_PLAN_OF_CARE_SECTION = 1210;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note History Of Present Illness' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HISTORY_OF_PRESENT_ILLNESS = 1211;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Physical Exam Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_PHYSICAL_EXAM_SECTION = 1212;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Reason For Referral Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_REASON_FOR_REFERRAL_SECTION = 1213;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Reason For Visit Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_REASON_FOR_VISIT_SECTION = 1214;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Allergies Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_ALLERGIES_SECTION = 1215;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Chief Complaint Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_CHIEF_COMPLAINT_SECTION = 1216;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Chief Complaint And Reason For Visit Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_CHIEF_COMPLAINT_AND_REASON_FOR_VISIT_SECTION = 1217;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Family History Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_FAMILY_HISTORY_SECTION = 1218;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note General Status Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_GENERAL_STATUS_SECTION = 1219;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note History Of Past Illness Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HISTORY_OF_PAST_ILLNESS_SECTION = 1220;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Immunizations Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_IMMUNIZATIONS_SECTION = 1221;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Medications Section Entries Optional' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_MEDICATIONS_SECTION_ENTRIES_OPTIONAL = 1222;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Problem Section Entries Optional' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_PROBLEM_SECTION_ENTRIES_OPTIONAL = 1223;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Procedures Section Entries Optional' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_PROCEDURES_SECTION_ENTRIES_OPTIONAL = 1224;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Results Section Entries Optional' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_RESULTS_SECTION_ENTRIES_OPTIONAL = 1225;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Review Of Systems Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_REVIEW_OF_SYSTEMS_SECTION = 1226;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Social History Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_SOCIAL_HISTORY_SECTION = 1227;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Vital Signs Section Entries Optional' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL = 1228;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note In Fulfillment Of Order Id' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_IN_FULFILLMENT_OF_ORDER_ID = 1229;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note In Fulfillment Of Order' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_IN_FULFILLMENT_OF_ORDER = 1230;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Component Of Encompassing Encounter2 Encounter Participant Assigned Entity' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_COMPONENT_OF_ENCOMPASSING_ENCOUNTER2_ENCOUNTER_PARTICIPANT_ASSIGNED_ENTITY = 1231;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Component Of Encompassing Encounter2 Responsible Party Assigned Entity' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_COMPONENT_OF_ENCOMPASSING_ENCOUNTER2_RESPONSIBLE_PARTY_ASSIGNED_ENTITY = 1232;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Component Of Encompassing Encounter2 Effective Time' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_COMPONENT_OF_ENCOMPASSING_ENCOUNTER2_EFFECTIVE_TIME = 1233;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Component Of Encompassing Encounter2 Id' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_COMPONENT_OF_ENCOMPASSING_ENCOUNTER2_ID = 1234;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Component Of Encompassing Encounter2 Responsible Party' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_COMPONENT_OF_ENCOMPASSING_ENCOUNTER2_RESPONSIBLE_PARTY = 1235;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Component Of Encompassing Encounter2 Encounter Participant' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_COMPONENT_OF_ENCOMPASSING_ENCOUNTER2_ENCOUNTER_PARTICIPANT = 1236;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Component Of Encompassing Encounter' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_COMPONENT_OF_ENCOMPASSING_ENCOUNTER = 1237;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Component Of Encompassing Encounter' of 'Consultation Note Component Of'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE_COMPONENT_OF__COMPONENT_OF_ENCOMPASSING_ENCOUNTER = 1238;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encompassing Encounter2 Effective Time' of 'Component Of Encompassing Encounter2'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMPONENT_OF_ENCOMPASSING_ENCOUNTER2__ENCOMPASSING_ENCOUNTER2_EFFECTIVE_TIME = 1239;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encompassing Encounter2 Id' of 'Component Of Encompassing Encounter2'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMPONENT_OF_ENCOMPASSING_ENCOUNTER2__ENCOMPASSING_ENCOUNTER2_ID = 1240;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encompassing Encounter2 Responsible Party' of 'Component Of Encompassing Encounter2'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMPONENT_OF_ENCOMPASSING_ENCOUNTER2__ENCOMPASSING_ENCOUNTER2_RESPONSIBLE_PARTY = 1241;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encompassing Encounter2 Encounter Participant' of 'Component Of Encompassing Encounter2'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMPONENT_OF_ENCOMPASSING_ENCOUNTER2__ENCOMPASSING_ENCOUNTER2_ENCOUNTER_PARTICIPANT = 1242;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Responsible Party Assigned Entity' of 'Encompassing Encounter2 Responsible Party'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOMPASSING_ENCOUNTER2_RESPONSIBLE_PARTY__RESPONSIBLE_PARTY_ASSIGNED_ENTITY = 1243;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Participant Assigned Entity' of 'Encompassing Encounter2 Encounter Participant'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOMPASSING_ENCOUNTER2_ENCOUNTER_PARTICIPANT__ENCOUNTER_PARTICIPANT_ASSIGNED_ENTITY = 1244;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment Section Template Id' of 'Assessment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_SECTION__ASSESSMENT_SECTION_TEMPLATE_ID = 1245;

	/**
	 * A constant with a fixed name that can be used as the base value for additional hand written constants.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static final int GENERATED_DIAGNOSTIC_CODE_COUNT = 1245;

	/**
	 * A constant with a fixed name that can be used as the base value for additional hand written constants in a derived class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected static final int DIAGNOSTIC_CODE_COUNT = GENERATED_DIAGNOSTIC_CODE_COUNT;

	/**
	 * The cached base package validator.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CDAValidator cdaValidator;

	/**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ConsolValidator() {
		super();
		cdaValidator = CDAValidator.INSTANCE;
	}

	/**
	 * Returns the package of this validator switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EPackage getEPackage() {
		return ConsolPackage.eINSTANCE;
	}

	/**
	 * Calls <code>validateXXX</code> for the corresponding classifier of the model.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected boolean validate(int classifierID, Object value, DiagnosticChain diagnostics, Map<Object, Object> context) {
		switch (classifierID) {
			case ConsolPackage.GENERAL_HEADER_CONSTRAINTS:
				return validateGeneralHeaderConstraints((GeneralHeaderConstraints) value, diagnostics, context);
			case ConsolPackage.GENERAL_HEADER_CONSTRAINTS_RECORD_TARGET:
				return validateGeneralHeaderConstraints_RecordTarget(
					(GeneralHeaderConstraints_RecordTarget) value, diagnostics, context);
			case ConsolPackage.RECORD_TARGET_PATIENT_ROLE:
				return validateRecordTarget_PatientRole((RecordTarget_PatientRole) value, diagnostics, context);
			case ConsolPackage.PATIENT_ROLE_PATIENT:
				return validatePatientRole_Patient((PatientRole_Patient) value, diagnostics, context);
			case ConsolPackage.PATIENT_GUARDIAN:
				return validatePatient_Guardian((Patient_Guardian) value, diagnostics, context);
			case ConsolPackage.PATIENT_LANGUAGE_COMMUNICATION:
				return validatePatient_LanguageCommunication(
					(Patient_LanguageCommunication) value, diagnostics, context);
			case ConsolPackage.PATIENT_BIRTHPLACE:
				return validatePatient_Birthplace((Patient_Birthplace) value, diagnostics, context);
			case ConsolPackage.BIRTHPLACE_PLACE:
				return validateBirthplace_Place((Birthplace_Place) value, diagnostics, context);
			case ConsolPackage.PATIENT_ROLE_PROVIDER_ORGANIZATION:
				return validatePatientRole_ProviderOrganization(
					(PatientRole_ProviderOrganization) value, diagnostics, context);
			case ConsolPackage.GENERAL_HEADER_CONSTRAINTS_COMPONENT_OF:
				return validateGeneralHeaderConstraints_ComponentOf(
					(GeneralHeaderConstraints_ComponentOf) value, diagnostics, context);
			case ConsolPackage.COMPONENT_OF_ENCOMPASSING_ENCOUNTER:
				return validateComponentOf_EncompassingEncounter(
					(ComponentOf_EncompassingEncounter) value, diagnostics, context);
			case ConsolPackage.GENERAL_HEADER_CONSTRAINTS_AUTHOR:
				return validateGeneralHeaderConstraints_Author(
					(GeneralHeaderConstraints_Author) value, diagnostics, context);
			case ConsolPackage.AUTHOR_ASSIGNED_AUTHOR:
				return validateAuthor_AssignedAuthor((Author_AssignedAuthor) value, diagnostics, context);
			case ConsolPackage.ASSIGNED_AUTHOR_AUTHORING_DEVICE:
				return validateAssignedAuthor_AuthoringDevice(
					(AssignedAuthor_AuthoringDevice) value, diagnostics, context);
			case ConsolPackage.GENERAL_HEADER_CONSTRAINTS_PERSON:
				return validateGeneralHeaderConstraints_Person(
					(GeneralHeaderConstraints_Person) value, diagnostics, context);
			case ConsolPackage.GENERAL_HEADER_CONSTRAINTS_DATA_ENTERER:
				return validateGeneralHeaderConstraints_DataEnterer(
					(GeneralHeaderConstraints_DataEnterer) value, diagnostics, context);
			case ConsolPackage.DATA_ENTERER_ASSIGNED_ENTITY:
				return validateDataEnterer_AssignedEntity((DataEnterer_AssignedEntity) value, diagnostics, context);
			case ConsolPackage.GENERAL_HEADER_CONSTRAINTS_CUSTODIAN:
				return validateGeneralHeaderConstraints_Custodian(
					(GeneralHeaderConstraints_Custodian) value, diagnostics, context);
			case ConsolPackage.CUSTODIAN_ASSIGNED_CUSTODIAN:
				return validateCustodian_AssignedCustodian((Custodian_AssignedCustodian) value, diagnostics, context);
			case ConsolPackage.ASSIGNED_CUSTODIAN_CUSTODIAN_ORGANIZATION:
				return validateAssignedCustodian_CustodianOrganization(
					(AssignedCustodian_CustodianOrganization) value, diagnostics, context);
			case ConsolPackage.GENERAL_HEADER_CONSTRAINTS_INFORMATION_RECIPIENT:
				return validateGeneralHeaderConstraints_InformationRecipient(
					(GeneralHeaderConstraints_InformationRecipient) value, diagnostics, context);
			case ConsolPackage.INFORMATION_RECIPIENT_INTENDED_RECIPIENT:
				return validateInformationRecipient_IntendedRecipient(
					(InformationRecipient_IntendedRecipient) value, diagnostics, context);
			case ConsolPackage.INTENDED_RECIPIENT_ORGANIZATION:
				return validateIntendedRecipient_Organization(
					(IntendedRecipient_Organization) value, diagnostics, context);
			case ConsolPackage.GENERAL_HEADER_CONSTRAINTS_LEGAL_AUTHENTICATOR:
				return validateGeneralHeaderConstraints_LegalAuthenticator(
					(GeneralHeaderConstraints_LegalAuthenticator) value, diagnostics, context);
			case ConsolPackage.LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY:
				return validateLegalAuthenticator_AssignedEntity(
					(LegalAuthenticator_AssignedEntity) value, diagnostics, context);
			case ConsolPackage.GENERAL_HEADER_CONSTRAINTS_AUTHENTICATOR:
				return validateGeneralHeaderConstraints_Authenticator(
					(GeneralHeaderConstraints_Authenticator) value, diagnostics, context);
			case ConsolPackage.AUTHENTICATOR_ASSIGNED_ENTITY:
				return validateAuthenticator_AssignedEntity((Authenticator_AssignedEntity) value, diagnostics, context);
			case ConsolPackage.GENERAL_HEADER_CONSTRAINTS_INFORMANT:
				return validateGeneralHeaderConstraints_Informant(
					(GeneralHeaderConstraints_Informant) value, diagnostics, context);
			case ConsolPackage.INFORMANT_ASSIGNED_ENTITY:
				return validateInformant_AssignedEntity((Informant_AssignedEntity) value, diagnostics, context);
			case ConsolPackage.INFORMANT_RELATED_ENTITY:
				return validateInformant_RelatedEntity((Informant_RelatedEntity) value, diagnostics, context);
			case ConsolPackage.GENERAL_HEADER_CONSTRAINTS_PARTICIPANT_SUPPORT:
				return validateGeneralHeaderConstraints_ParticipantSupport(
					(GeneralHeaderConstraints_ParticipantSupport) value, diagnostics, context);
			case ConsolPackage.GENERAL_HEADER_CONSTRAINTS_IN_FULFILLMENT_OF:
				return validateGeneralHeaderConstraints_InFulfillmentOf(
					(GeneralHeaderConstraints_InFulfillmentOf) value, diagnostics, context);
			case ConsolPackage.IN_FULFILLMENT_OF_ORDER:
				return validateInFulfillmentOf_Order((InFulfillmentOf_Order) value, diagnostics, context);
			case ConsolPackage.ALLERGY_PROBLEM_ACT:
				return validateAllergyProblemAct((AllergyProblemAct) value, diagnostics, context);
			case ConsolPackage.ALLERGY_OBSERVATION:
				return validateAllergyObservation((AllergyObservation) value, diagnostics, context);
			case ConsolPackage.REACTION_OBSERVATION:
				return validateReactionObservation((ReactionObservation) value, diagnostics, context);
			case ConsolPackage.SEVERITY_OBSERVATION:
				return validateSeverityObservation((SeverityObservation) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_ACTIVITY_PROCEDURE:
				return validateProcedureActivityProcedure((ProcedureActivityProcedure) value, diagnostics, context);
			case ConsolPackage.INDICATION:
				return validateIndication((Indication) value, diagnostics, context);
			case ConsolPackage.SERVICE_DELIVERY_LOCATION:
				return validateServiceDeliveryLocation((ServiceDeliveryLocation) value, diagnostics, context);
			case ConsolPackage.MEDICATION_ACTIVITY:
				return validateMedicationActivity((MedicationActivity) value, diagnostics, context);
			case ConsolPackage.MEDICATION_SUPPLY_ORDER:
				return validateMedicationSupplyOrder((MedicationSupplyOrder) value, diagnostics, context);
			case ConsolPackage.INSTRUCTIONS:
				return validateInstructions((Instructions) value, diagnostics, context);
			case ConsolPackage.MEDICATION_DISPENSE:
				return validateMedicationDispense((MedicationDispense) value, diagnostics, context);
			case ConsolPackage.DRUG_VEHICLE:
				return validateDrugVehicle((DrugVehicle) value, diagnostics, context);
			case ConsolPackage.PRODUCT_INSTANCE:
				return validateProductInstance((ProductInstance) value, diagnostics, context);
			case ConsolPackage.ALLERGY_STATUS_OBSERVATION:
				return validateAllergyStatusObservation((AllergyStatusObservation) value, diagnostics, context);
			case ConsolPackage.AGE_OBSERVATION:
				return validateAgeObservation((AgeObservation) value, diagnostics, context);
			case ConsolPackage.HEALTH_STATUS_OBSERVATION:
				return validateHealthStatusObservation((HealthStatusObservation) value, diagnostics, context);
			case ConsolPackage.COMMENT:
				return validateComment((Comment) value, diagnostics, context);
			case ConsolPackage.MEDICATION_SERIES_NUMBER_OBSERVATION:
				return validateMedicationSeriesNumberObservation(
					(MedicationSeriesNumberObservation) value, diagnostics, context);
			case ConsolPackage.MEDICATION_STATUS_OBSERVATION:
				return validateMedicationStatusObservation((MedicationStatusObservation) value, diagnostics, context);
			case ConsolPackage.INTERNAL_REFERENCE:
				return validateInternalReference((InternalReference) value, diagnostics, context);
			case ConsolPackage.MEDICATION_TYPE:
				return validateMedicationType((MedicationType) value, diagnostics, context);
			case ConsolPackage.NON_MEDICINAL_SUPPLY_ACTIVITY:
				return validateNonMedicinalSupplyActivity((NonMedicinalSupplyActivity) value, diagnostics, context);
			case ConsolPackage.MEDICATION_FULLFILLMENT_INSTRUCTIONS:
				return validateMedicationFullfillmentInstructions(
					(MedicationFullfillmentInstructions) value, diagnostics, context);
			case ConsolPackage.PROBLEM_CONCERN_ACT:
				return validateProblemConcernAct((ProblemConcernAct) value, diagnostics, context);
			case ConsolPackage.PROBLEM_OBSERVATION:
				return validateProblemObservation((ProblemObservation) value, diagnostics, context);
			case ConsolPackage.PROBLEM_STATUS:
				return validateProblemStatus((ProblemStatus) value, diagnostics, context);
			case ConsolPackage.CONTINUITY_OF_CARE_DOCUMENT:
				return validateContinuityOfCareDocument((ContinuityOfCareDocument) value, diagnostics, context);
			case ConsolPackage.ADVANCE_DIRECTIVES_SECTION_ENTRIES_OPTIONAL:
				return validateAdvanceDirectivesSectionEntriesOptional(
					(AdvanceDirectivesSectionEntriesOptional) value, diagnostics, context);
			case ConsolPackage.ADVANCE_DIRECTIVE_OBSERVATION:
				return validateAdvanceDirectiveObservation((AdvanceDirectiveObservation) value, diagnostics, context);
			case ConsolPackage.ADVANCE_DIRECTIVE_OBSERVATION_REFERENCE:
				return validateAdvanceDirectiveObservation_Reference(
					(AdvanceDirectiveObservation_Reference) value, diagnostics, context);
			case ConsolPackage.REFERENCE_EXTERNAL_DOCUMENT:
				return validateReference_ExternalDocument((Reference_ExternalDocument) value, diagnostics, context);
			case ConsolPackage.ADVANCE_DIRECTIVE_OBSERVATION_CUSTODIAN:
				return validateAdvanceDirectiveObservation_Custodian(
					(AdvanceDirectiveObservation_Custodian) value, diagnostics, context);
			case ConsolPackage.CUSTODIAN_CUSTODIAN_ROLE:
				return validateCustodian_CustodianRole((Custodian_CustodianRole) value, diagnostics, context);
			case ConsolPackage.CUSTODIAN_ROLE_CUSTODIAN_ENTITY:
				return validateCustodianRole_CustodianEntity(
					(CustodianRole_CustodianEntity) value, diagnostics, context);
			case ConsolPackage.ADVANCE_DIRECTIVE_OBSERVATION_VERIFIER:
				return validateAdvanceDirectiveObservation_Verifier(
					(AdvanceDirectiveObservation_Verifier) value, diagnostics, context);
			case ConsolPackage.ALLERGIES_SECTION:
				return validateAllergiesSection((AllergiesSection) value, diagnostics, context);
			case ConsolPackage.ALLERGIES_SECTION_ENTRIES_OPTIONAL:
				return validateAllergiesSectionEntriesOptional(
					(AllergiesSectionEntriesOptional) value, diagnostics, context);
			case ConsolPackage.ENCOUNTERS_SECTION_ENTRIES_OPTIONAL:
				return validateEncountersSectionEntriesOptional(
					(EncountersSectionEntriesOptional) value, diagnostics, context);
			case ConsolPackage.ENCOUNTER_ACTIVITIES:
				return validateEncounterActivities((EncounterActivities) value, diagnostics, context);
			case ConsolPackage.IMMUNIZATIONS_SECTION_ENTRIES_OPTIONAL:
				return validateImmunizationsSectionEntriesOptional(
					(ImmunizationsSectionEntriesOptional) value, diagnostics, context);
			case ConsolPackage.IMMUNIZATION_ACTIVITY:
				return validateImmunizationActivity((ImmunizationActivity) value, diagnostics, context);
			case ConsolPackage.IMMUNIZATION_REFUSAL_REASON:
				return validateImmunizationRefusalReason((ImmunizationRefusalReason) value, diagnostics, context);
			case ConsolPackage.PAYERS_SECTION:
				return validatePayersSection((PayersSection) value, diagnostics, context);
			case ConsolPackage.COVERAGE_ACTIVITY:
				return validateCoverageActivity((CoverageActivity) value, diagnostics, context);
			case ConsolPackage.POLICY_ACTIVITY:
				return validatePolicyActivity((PolicyActivity) value, diagnostics, context);
			case ConsolPackage.AUTHORIZATION_ACTIVITY:
				return validateAuthorizationActivity((AuthorizationActivity) value, diagnostics, context);
			case ConsolPackage.MEDICATIONS_SECTION:
				return validateMedicationsSection((MedicationsSection) value, diagnostics, context);
			case ConsolPackage.MEDICATIONS_SECTION_ENTRIES_OPTIONAL:
				return validateMedicationsSectionEntriesOptional(
					(MedicationsSectionEntriesOptional) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_SECTION:
				return validatePlanOfCareSection((PlanOfCareSection) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_ACTIVITY_ACT:
				return validatePlanOfCareActivityAct((PlanOfCareActivityAct) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_ACTIVITY_ENCOUNTER:
				return validatePlanOfCareActivityEncounter((PlanOfCareActivityEncounter) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_ACTIVITY_OBSERVATION:
				return validatePlanOfCareActivityObservation(
					(PlanOfCareActivityObservation) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_ACTIVITY_PROCEDURE:
				return validatePlanOfCareActivityProcedure((PlanOfCareActivityProcedure) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION:
				return validatePlanOfCareActivitySubstanceAdministration(
					(PlanOfCareActivitySubstanceAdministration) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_ACTIVITY_SUPPLY:
				return validatePlanOfCareActivitySupply((PlanOfCareActivitySupply) value, diagnostics, context);
			case ConsolPackage.PROCEDURES_SECTION:
				return validateProceduresSection((ProceduresSection) value, diagnostics, context);
			case ConsolPackage.PROCEDURES_SECTION_ENTRIES_OPTIONAL:
				return validateProceduresSectionEntriesOptional(
					(ProceduresSectionEntriesOptional) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_ACTIVITY_OBSERVATION:
				return validateProcedureActivityObservation((ProcedureActivityObservation) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_ACTIVITY_ACT:
				return validateProcedureActivityAct((ProcedureActivityAct) value, diagnostics, context);
			case ConsolPackage.VITAL_SIGNS_SECTION_ENTRIES_OPTIONAL:
				return validateVitalSignsSectionEntriesOptional(
					(VitalSignsSectionEntriesOptional) value, diagnostics, context);
			case ConsolPackage.VITAL_SIGNS_ORGANIZER:
				return validateVitalSignsOrganizer((VitalSignsOrganizer) value, diagnostics, context);
			case ConsolPackage.VITAL_SIGN_OBSERVATION:
				return validateVitalSignObservation((VitalSignObservation) value, diagnostics, context);
			case ConsolPackage.FAMILY_HISTORY_SECTION:
				return validateFamilyHistorySection((FamilyHistorySection) value, diagnostics, context);
			case ConsolPackage.FAMILY_HISTORY_ORGANIZER:
				return validateFamilyHistoryOrganizer((FamilyHistoryOrganizer) value, diagnostics, context);
			case ConsolPackage.FAMILY_HISTORY_OBSERVATION:
				return validateFamilyHistoryObservation((FamilyHistoryObservation) value, diagnostics, context);
			case ConsolPackage.FAMILY_HISTORY_DEATH_OBSERVATION:
				return validateFamilyHistoryDeathObservation(
					(FamilyHistoryDeathObservation) value, diagnostics, context);
			case ConsolPackage.SOCIAL_HISTORY_SECTION:
				return validateSocialHistorySection((SocialHistorySection) value, diagnostics, context);
			case ConsolPackage.SOCIAL_HISTORY_OBSERVATION:
				return validateSocialHistoryObservation((SocialHistoryObservation) value, diagnostics, context);
			case ConsolPackage.PREGNANCY_OBSERVATION:
				return validatePregnancyObservation((PregnancyObservation) value, diagnostics, context);
			case ConsolPackage.ESTIMATED_DATE_OF_DELIVERY:
				return validateEstimatedDateOfDelivery((EstimatedDateOfDelivery) value, diagnostics, context);
			case ConsolPackage.RESULTS_SECTION:
				return validateResultsSection((ResultsSection) value, diagnostics, context);
			case ConsolPackage.RESULTS_SECTION_ENTRIES_OPTIONAL:
				return validateResultsSectionEntriesOptional(
					(ResultsSectionEntriesOptional) value, diagnostics, context);
			case ConsolPackage.RESULT_ORGANIZER:
				return validateResultOrganizer((ResultOrganizer) value, diagnostics, context);
			case ConsolPackage.RESULT_OBSERVATION:
				return validateResultObservation((ResultObservation) value, diagnostics, context);
			case ConsolPackage.MEDICAL_EQUIPMENT_SECTION:
				return validateMedicalEquipmentSection((MedicalEquipmentSection) value, diagnostics, context);
			case ConsolPackage.FUNCTIONAL_STATUS_SECTION:
				return validateFunctionalStatusSection((FunctionalStatusSection) value, diagnostics, context);
			case ConsolPackage.PROBLEM_SECTION:
				return validateProblemSection((ProblemSection) value, diagnostics, context);
			case ConsolPackage.PROBLEM_SECTION_ENTRIES_OPTIONAL:
				return validateProblemSectionEntriesOptional(
					(ProblemSectionEntriesOptional) value, diagnostics, context);
			case ConsolPackage.SOCIAL_HISTORY_STATUS_OBSERVATION:
				return validateSocialHistoryStatusObservation(
					(SocialHistoryStatusObservation) value, diagnostics, context);
			case ConsolPackage.PURPOSE_SECTION:
				return validatePurposeSection((PurposeSection) value, diagnostics, context);
			case ConsolPackage.PURPOSE_ACTIVITY:
				return validatePurposeActivity((PurposeActivity) value, diagnostics, context);
			case ConsolPackage.ADVANCE_DIRECTIVES_SECTION:
				return validateAdvanceDirectivesSection((AdvanceDirectivesSection) value, diagnostics, context);
			case ConsolPackage.ADVANCE_DIRECTIVE_VERIFICATION:
				return validateAdvanceDirectiveVerification((AdvanceDirectiveVerification) value, diagnostics, context);
			case ConsolPackage.ADVANCE_DIRECTIVE_STATUS_OBSERVATION:
				return validateAdvanceDirectiveStatusObservation(
					(AdvanceDirectiveStatusObservation) value, diagnostics, context);
			case ConsolPackage.ENCOUNTERS_SECTION:
				return validateEncountersSection((EncountersSection) value, diagnostics, context);
			case ConsolPackage.ENCOUNTER:
				return validateEncounter((Encounter) value, diagnostics, context);
			case ConsolPackage.IMMUNIZATIONS_SECTION:
				return validateImmunizationsSection((ImmunizationsSection) value, diagnostics, context);
			case ConsolPackage.INSURANCE_PROVIDER:
				return validateInsuranceProvider((InsuranceProvider) value, diagnostics, context);
			case ConsolPackage.PAYER_ENTRY:
				return validatePayerEntry((PayerEntry) value, diagnostics, context);
			case ConsolPackage.COVERED_PARTY:
				return validateCoveredParty((CoveredParty) value, diagnostics, context);
			case ConsolPackage.POLICY_SUBSCRIBER:
				return validatePolicySubscriber((PolicySubscriber) value, diagnostics, context);
			case ConsolPackage.EXTERNAL_REFERENCE:
				return validateExternalReference((ExternalReference) value, diagnostics, context);
			case ConsolPackage.SUPPORT:
				return validateSupport((Support) value, diagnostics, context);
			case ConsolPackage.VITAL_SIGNS_SECTION:
				return validateVitalSignsSection((VitalSignsSection) value, diagnostics, context);
			case ConsolPackage.HISTORY_OF_PAST_ILLNESS_SECTION:
				return validateHistoryOfPastIllnessSection((HistoryOfPastIllnessSection) value, diagnostics, context);
			case ConsolPackage.CHIEF_COMPLAINT_SECTION:
				return validateChiefComplaintSection((ChiefComplaintSection) value, diagnostics, context);
			case ConsolPackage.REASON_FOR_REFERRAL_SECTION:
				return validateReasonForReferralSection((ReasonForReferralSection) value, diagnostics, context);
			case ConsolPackage.HISTORY_OF_PRESENT_ILLNESS:
				return validateHistoryOfPresentIllness((HistoryOfPresentIllness) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_ADMISSION_DIAGNOSIS_SECTION:
				return validateHospitalAdmissionDiagnosisSection(
					(HospitalAdmissionDiagnosisSection) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_ADMISSION_MEDICATIONS_SECTION_ENTRIES_OPTIONAL:
				return validateHospitalAdmissionMedicationsSectionEntriesOptional(
					(HospitalAdmissionMedicationsSectionEntriesOptional) value, diagnostics, context);
			case ConsolPackage.MEDICATIONS_ADMINISTERED_SECTION:
				return validateMedicationsAdministeredSection(
					(MedicationsAdministeredSection) value, diagnostics, context);
			case ConsolPackage.PHYSICAL_EXAM_SECTION:
				return validatePhysicalExamSection((PhysicalExamSection) value, diagnostics, context);
			case ConsolPackage.GENERAL_STATUS_SECTION:
				return validateGeneralStatusSection((GeneralStatusSection) value, diagnostics, context);
			case ConsolPackage.REVIEW_OF_SYSTEMS_SECTION:
				return validateReviewOfSystemsSection((ReviewOfSystemsSection) value, diagnostics, context);
			case ConsolPackage.ASSESSMENT_AND_PLAN_SECTION:
				return validateAssessmentAndPlanSection((AssessmentAndPlanSection) value, diagnostics, context);
			case ConsolPackage.LANGUAGE_SPOKEN:
				return validateLanguageSpoken((LanguageSpoken) value, diagnostics, context);
			case ConsolPackage.HEALTHCARE_PROVIDER:
				return validateHealthcareProvider((HealthcareProvider) value, diagnostics, context);
			case ConsolPackage.SUPPORT_GUARDIAN:
				return validateSupportGuardian((SupportGuardian) value, diagnostics, context);
			case ConsolPackage.SUPPORT_PARTICIPANT:
				return validateSupportParticipant((SupportParticipant) value, diagnostics, context);
			case ConsolPackage.SURGICAL_DRAINS_SECTION:
				return validateSurgicalDrainsSection((SurgicalDrainsSection) value, diagnostics, context);
			case ConsolPackage.UNSTRUCTURED_DOCUMENT:
				return validateUnstructuredDocument((UnstructuredDocument) value, diagnostics, context);
			case ConsolPackage.SCAN_ORIGINAL_AUTHOR:
				return validateScanOriginalAuthor((ScanOriginalAuthor) value, diagnostics, context);
			case ConsolPackage.SCANNING_DEVICE:
				return validateScanningDevice((ScanningDevice) value, diagnostics, context);
			case ConsolPackage.SCAN_DATA_ENTERER:
				return validateScanDataEnterer((ScanDataEnterer) value, diagnostics, context);
			case ConsolPackage.MEDICATION_INFORMATION:
				return validateMedicationInformation((MedicationInformation) value, diagnostics, context);
			case ConsolPackage.UNSTRUCTURED_OR_SCANNED_DOCUMENT:
				return validateUnstructuredOrScannedDocument(
					(UnstructuredOrScannedDocument) value, diagnostics, context);
			case ConsolPackage.REFERRAL_SUMMARY:
				return validateReferralSummary((ReferralSummary) value, diagnostics, context);
			case ConsolPackage.DISCHARGE_SUMMARY:
				return validateDischargeSummary((DischargeSummary) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_DISCHARGE_DIAGNOSIS_SECTION:
				return validateHospitalDischargeDiagnosisSection(
					(HospitalDischargeDiagnosisSection) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_DISCHARGE_DIAGNOSIS:
				return validateHospitalDischargeDiagnosis((HospitalDischargeDiagnosis) value, diagnostics, context);
			case ConsolPackage.DISCHARGE_DIET_SECTION:
				return validateDischargeDietSection((DischargeDietSection) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_ENTRIES_OPTIONAL:
				return validateHospitalDischargeMedicationsSectionEntriesOptional(
					(HospitalDischargeMedicationsSectionEntriesOptional) value, diagnostics, context);
			case ConsolPackage.DISCHARGE_MEDICATION:
				return validateDischargeMedication((DischargeMedication) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_COURSE_SECTION:
				return validateHospitalCourseSection((HospitalCourseSection) value, diagnostics, context);
			case ConsolPackage.PRECONDITION_FOR_SUBSTANCE_ADMINISTRATION:
				return validatePreconditionForSubstanceAdministration(
					(PreconditionForSubstanceAdministration) value, diagnostics, context);
			case ConsolPackage.IMMUNIZATION_MEDICATION_INFORMATION:
				return validateImmunizationMedicationInformation(
					(ImmunizationMedicationInformation) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_SPECIMEN:
				return validateProcedureSpecimen((ProcedureSpecimen) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_PERFORMER:
				return validateProcedurePerformer((ProcedurePerformer) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_ENCOUNTER:
				return validateProcedureEncounter((ProcedureEncounter) value, diagnostics, context);
			case ConsolPackage.MEDICATION_INFORMATION_MANUFACTURED_MATERIAL:
				return validateMedicationInformationManufacturedMaterial(
					(MedicationInformationManufacturedMaterial) value, diagnostics, context);
			case ConsolPackage.FAMILY_HISTORY_SUBJECT:
				return validateFamilyHistorySubject((FamilyHistorySubject) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION:
				return validateHospitalDischargeStudiesSummarySection(
					(HospitalDischargeStudiesSummarySection) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_DISCHARGE_INSTRUCTIONS_SECTION:
				return validateHospitalDischargeInstructionsSection(
					(HospitalDischargeInstructionsSection) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_DISCHARGE_MEDICATIONS_SECTION:
				return validateHospitalDischargeMedicationsSection(
					(HospitalDischargeMedicationsSection) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_DISCHARGE_PHYSICAL_SECTION:
				return validateHospitalDischargePhysicalSection(
					(HospitalDischargePhysicalSection) value, diagnostics, context);
			case ConsolPackage.CHIEF_COMPLAINT_AND_REASON_FOR_VISIT_SECTION:
				return validateChiefComplaintAndReasonForVisitSection(
					(ChiefComplaintAndReasonForVisitSection) value, diagnostics, context);
			case ConsolPackage.REASON_FOR_VISIT_SECTION:
				return validateReasonForVisitSection((ReasonForVisitSection) value, diagnostics, context);
			case ConsolPackage.RELATED_INFORMANT:
				return validateRelatedInformant((RelatedInformant) value, diagnostics, context);
			case ConsolPackage.ENCOUNTER_PERFORMER:
				return validateEncounterPerformer((EncounterPerformer) value, diagnostics, context);
			case ConsolPackage.ENCOUNTER_PERFORMER_ASSIGNED_ENTITY:
				return validateEncounterPerformerAssignedEntity(
					(EncounterPerformerAssignedEntity) value, diagnostics, context);
			case ConsolPackage.ALLERGY_OBSERVATION_PARTICIPANT:
				return validateAllergyObservationParticipant(
					(AllergyObservationParticipant) value, diagnostics, context);
			case ConsolPackage.ALLERGY_OBSERVATION_PARTICIPANT_ROLE:
				return validateAllergyObservationParticipantRole(
					(AllergyObservationParticipantRole) value, diagnostics, context);
			case ConsolPackage.ALLERGY_OBSERVATION_PLAYING_ENTITY:
				return validateAllergyObservationPlayingEntity(
					(AllergyObservationPlayingEntity) value, diagnostics, context);
			case ConsolPackage.ANESTHESIA_SECTION:
				return validateAnesthesiaSection((AnesthesiaSection) value, diagnostics, context);
			case ConsolPackage.COMPLICATIONS_SECTION:
				return validateComplicationsSection((ComplicationsSection) value, diagnostics, context);
			case ConsolPackage.DICOM_OBJECT_CATALOG_SECTION:
				return validateDICOMObjectCatalogSection((DICOMObjectCatalogSection) value, diagnostics, context);
			case ConsolPackage.FINDINGS_SECTION:
				return validateFindingsSection((FindingsSection) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_CONSULTATIONS_SECTION:
				return validateHospitalConsultationsSection((HospitalConsultationsSection) value, diagnostics, context);
			case ConsolPackage.INTERVENTIONS_SECTION:
				return validateInterventionsSection((InterventionsSection) value, diagnostics, context);
			case ConsolPackage.MEDICAL_HISTORY_SECTION:
				return validateMedicalHistorySection((MedicalHistorySection) value, diagnostics, context);
			case ConsolPackage.OBJECTIVE_SECTION:
				return validateObjectiveSection((ObjectiveSection) value, diagnostics, context);
			case ConsolPackage.OPERATIVE_NOTE_FLUID_SECTION:
				return validateOperativeNoteFluidSection((OperativeNoteFluidSection) value, diagnostics, context);
			case ConsolPackage.OPERATIVE_NOTE_SURGICAL_PROCEDURE_SECTION:
				return validateOperativeNoteSurgicalProcedureSection(
					(OperativeNoteSurgicalProcedureSection) value, diagnostics, context);
			case ConsolPackage.PLANNED_PROCEDURE_SECTION:
				return validatePlannedProcedureSection((PlannedProcedureSection) value, diagnostics, context);
			case ConsolPackage.POSTOPERATIVE_DIAGNOSIS_SECTION:
				return validatePostoperativeDiagnosisSection(
					(PostoperativeDiagnosisSection) value, diagnostics, context);
			case ConsolPackage.POSTPROCEDURE_DIAGNOSIS_SECTION:
				return validatePostprocedureDiagnosisSection(
					(PostprocedureDiagnosisSection) value, diagnostics, context);
			case ConsolPackage.PREOPERATIVE_DIAGNOSIS_SECTION:
				return validatePreoperativeDiagnosisSection((PreoperativeDiagnosisSection) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_DESCRIPTION_SECTION:
				return validateProcedureDescriptionSection((ProcedureDescriptionSection) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_DISPOSITION_SECTION:
				return validateProcedureDispositionSection((ProcedureDispositionSection) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_ESTIMATED_BLOOD_LOSS_SECTION:
				return validateProcedureEstimatedBloodLossSection(
					(ProcedureEstimatedBloodLossSection) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_FINDINGS_SECTION:
				return validateProcedureFindingsSection((ProcedureFindingsSection) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_IMPLANTS_SECTION:
				return validateProcedureImplantsSection((ProcedureImplantsSection) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_INDICATIONS_SECTION:
				return validateProcedureIndicationsSection((ProcedureIndicationsSection) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_SPECIMENS_TAKEN_SECTION:
				return validateProcedureSpecimensTakenSection(
					(ProcedureSpecimensTakenSection) value, diagnostics, context);
			case ConsolPackage.SUBJECTIVE_SECTION:
				return validateSubjectiveSection((SubjectiveSection) value, diagnostics, context);
			case ConsolPackage.CONSULTATION_NOTE:
				return validateConsultationNote((ConsultationNote) value, diagnostics, context);
			case ConsolPackage.CONSULTATION_NOTE_COMPONENT_OF:
				return validateConsultationNote_ComponentOf((ConsultationNote_ComponentOf) value, diagnostics, context);
			case ConsolPackage.COMPONENT_OF_ENCOMPASSING_ENCOUNTER2:
				return validateComponentOf_EncompassingEncounter2(
					(ComponentOf_EncompassingEncounter2) value, diagnostics, context);
			case ConsolPackage.ENCOMPASSING_ENCOUNTER2_RESPONSIBLE_PARTY:
				return validateEncompassingEncounter2_ResponsibleParty(
					(EncompassingEncounter2_ResponsibleParty) value, diagnostics, context);
			case ConsolPackage.ENCOMPASSING_ENCOUNTER2_ENCOUNTER_PARTICIPANT:
				return validateEncompassingEncounter2_EncounterParticipant(
					(EncompassingEncounter2_EncounterParticipant) value, diagnostics, context);
			case ConsolPackage.ASSESSMENT_SECTION:
				return validateAssessmentSection((AssessmentSection) value, diagnostics, context);
			default:
				return true;
		}
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints(GeneralHeaderConstraints generalHeaderConstraints,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalHeaderConstraints, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(generalHeaderConstraints, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTemplateId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRealmCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTypeId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTitle(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsEffectiveTime(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsConfidentialityCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSetId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsVersionNumber(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthor(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEnterer(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodian(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipient(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticator(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticator(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTarget(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOf(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformant(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSupportParticipant(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOf(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAddr(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorTelecom(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthor(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAddr(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityTelecom(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodian(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipient(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorTime(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorSignatureCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityAddr(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorTime(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorSignatureCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntity(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToYear(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToDay(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientName(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleAddr(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleTelecom(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatient(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRole(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounter(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityAddr(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityPerson(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityAddr(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityCode(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityPerson(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportTime(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrderId(
				generalHeaderConstraints, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrder(
				generalHeaderConstraints, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsTemplateId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTemplateId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRealmCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRealmCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRealmCode(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsTypeId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTypeId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsTypeId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsCode(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsTitle constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTitle(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsTitle(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsEffectiveTime constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsEffectiveTime(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsConfidentialityCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsConfidentialityCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsConfidentialityCode(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsSetId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSetId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsSetId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsVersionNumber constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsVersionNumber(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsVersionNumber(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthor constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthor(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsDataEnterer constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEnterer(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsDataEnterer(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsCustodian constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodian(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsCustodian(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformationRecipient constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipient(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformationRecipient(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsLegalAuthenticator constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticator(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsLegalAuthenticator(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthenticator constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticator(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthenticator(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTarget constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTarget(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTarget(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsComponentOf constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOf(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsComponentOf(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformant constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformant(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformant(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsSupportParticipant constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSupportParticipant(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsSupportParticipant(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInFulfillmentOf constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOf(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInFulfillmentOf(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthorAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthorAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthorAssignedAuthorAddr constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAddr(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthorAssignedAuthorAddr(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthorAssignedAuthorCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthorAssignedAuthorCode(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthorAssignedAuthorId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthorAssignedAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthorAssignedAuthorTelecom constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorTelecom(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthorAssignedAuthorTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthorAssignedAuthor constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthor(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthorAssignedAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsDataEntererAssignedEntityAddr constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAddr(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsDataEntererAssignedEntityAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsDataEntererAssignedEntityCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsDataEntererAssignedEntityCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsDataEntererAssignedEntityId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsDataEntererAssignedEntityId(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsDataEntererAssignedEntityTelecom constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityTelecom(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsDataEntererAssignedEntityTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsCustodianAssignedCustodian constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodian(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsCustodianAssignedCustodian(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformationRecipientIntendedRecipient constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipient(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformationRecipientIntendedRecipient(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsLegalAuthenticatorTime constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorTime(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsLegalAuthenticatorTime(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsLegalAuthenticatorSignatureCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorSignatureCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsLegalAuthenticatorSignatureCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthenticatorAssignedEntityAddr constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityAddr(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthenticatorAssignedEntityAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthenticatorAssignedEntityCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthenticatorAssignedEntityCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthenticatorAssignedEntityId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthenticatorAssignedEntityId(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthenticatorTime constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorTime(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthenticatorTime(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthenticatorSignatureCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorSignatureCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthenticatorSignatureCode(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsAuthenticatorAssignedEntity constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntity(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsAuthenticatorAssignedEntity(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToYear constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToYear(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToYear(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToDay constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToDay(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToDay(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientName constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientName(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientName(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRoleAddr constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleAddr(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRoleAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRoleId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRoleId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRoleTelecom constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleTelecom(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRoleTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRolePatient constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatient(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRolePatient(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsRecordTargetPatientRole constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRole(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsRecordTargetPatientRole(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsComponentOfEncompassingEncounterId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsComponentOfEncompassingEncounterId(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsComponentOfEncompassingEncounter constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounter(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsComponentOfEncompassingEncounter(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformantAssignedEntityAddr constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityAddr(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformantAssignedEntityAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformantAssignedEntityCode constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityCode(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformantAssignedEntityCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformantAssignedEntityId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformantAssignedEntityId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformantAssignedEntityPerson constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityPerson(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformantAssignedEntityPerson(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformantRelatedEntityAddr constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityAddr(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformantRelatedEntityAddr(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformantRelatedEntityPerson constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityPerson(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformantRelatedEntityPerson(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier(
			diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsParticipantSupportTime constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportTime(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsParticipantSupportTime(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInFulfillmentOfOrderId constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrderId(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInFulfillmentOfOrderId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsInFulfillmentOfOrder constraint of '<em>General Header Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrder(
			GeneralHeaderConstraints generalHeaderConstraints, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints.validateGeneralHeaderConstraintsInFulfillmentOfOrder(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_RecordTarget(
			GeneralHeaderConstraints_RecordTarget generalHeaderConstraints_RecordTarget, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalHeaderConstraints_RecordTarget, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(generalHeaderConstraints_RecordTarget, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalHeaderConstraints_RecordTarget, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(generalHeaderConstraints_RecordTarget, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalHeaderConstraints_RecordTarget, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalHeaderConstraints_RecordTarget, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalHeaderConstraints_RecordTarget, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalHeaderConstraints_RecordTarget, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateRecordTarget_validateTypeCode(
				generalHeaderConstraints_RecordTarget, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateRecordTarget_validateContextControlCode(
				generalHeaderConstraints_RecordTarget, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_RecordTarget_validateRecordTargetPatientRole(
				generalHeaderConstraints_RecordTarget, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateRecordTargetPatientRole constraint of '<em>General Header Constraints Record Target</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_RecordTarget_validateRecordTargetPatientRole(
			GeneralHeaderConstraints_RecordTarget generalHeaderConstraints_RecordTarget, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return generalHeaderConstraints_RecordTarget.validateRecordTargetPatientRole(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRecordTarget_PatientRole(RecordTarget_PatientRole recordTarget_PatientRole,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(recordTarget_PatientRole, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(recordTarget_PatientRole, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(recordTarget_PatientRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(recordTarget_PatientRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(recordTarget_PatientRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(recordTarget_PatientRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(recordTarget_PatientRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(recordTarget_PatientRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validatePatientRole_validateClassCode(recordTarget_PatientRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateRecordTarget_PatientRole_validatePatientRoleAddr(
				recordTarget_PatientRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateRecordTarget_PatientRole_validatePatientRoleId(
				recordTarget_PatientRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateRecordTarget_PatientRole_validatePatientRoleTelecom(
				recordTarget_PatientRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateRecordTarget_PatientRole_validatePatientRolePatient(
				recordTarget_PatientRole, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePatientRoleAddr constraint of '<em>Record Target Patient Role</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRecordTarget_PatientRole_validatePatientRoleAddr(
			RecordTarget_PatientRole recordTarget_PatientRole, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return recordTarget_PatientRole.validatePatientRoleAddr(diagnostics, context);
	}

	/**
	 * Validates the validatePatientRoleId constraint of '<em>Record Target Patient Role</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRecordTarget_PatientRole_validatePatientRoleId(
			RecordTarget_PatientRole recordTarget_PatientRole, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return recordTarget_PatientRole.validatePatientRoleId(diagnostics, context);
	}

	/**
	 * Validates the validatePatientRoleTelecom constraint of '<em>Record Target Patient Role</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRecordTarget_PatientRole_validatePatientRoleTelecom(
			RecordTarget_PatientRole recordTarget_PatientRole, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return recordTarget_PatientRole.validatePatientRoleTelecom(diagnostics, context);
	}

	/**
	 * Validates the validatePatientRolePatient constraint of '<em>Record Target Patient Role</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRecordTarget_PatientRole_validatePatientRolePatient(
			RecordTarget_PatientRole recordTarget_PatientRole, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return recordTarget_PatientRole.validatePatientRolePatient(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_Patient(PatientRole_Patient patientRole_Patient, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(patientRole_Patient, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(patientRole_Patient, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validatePatient_validateClassCode(patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validatePatient_validateDeterminerCode(patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_Patient_validatePatientBirthTimePreciseToYear(
				patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_Patient_validatePatientBirthTimePreciseToDay(
				patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_Patient_validatePatientBirthTime(patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_Patient_validatePatientEthnicGroupCode(
				patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_Patient_validatePatientMaritalStatusCode(
				patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_Patient_validatePatientName(patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_Patient_validatePatientRaceCode(patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_Patient_validatePatientReligiousAffiliationCode(
				patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_Patient_validatePatientGuardian(patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_Patient_validatePatientBirthplace(patientRole_Patient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_Patient_validatePatientLanguageCommunication(
				patientRole_Patient, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePatientBirthTimePreciseToYear constraint of '<em>Patient Role Patient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_Patient_validatePatientBirthTimePreciseToYear(
			PatientRole_Patient patientRole_Patient, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientRole_Patient.validatePatientBirthTimePreciseToYear(diagnostics, context);
	}

	/**
	 * Validates the validatePatientBirthTimePreciseToDay constraint of '<em>Patient Role Patient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_Patient_validatePatientBirthTimePreciseToDay(
			PatientRole_Patient patientRole_Patient, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientRole_Patient.validatePatientBirthTimePreciseToDay(diagnostics, context);
	}

	/**
	 * Validates the validatePatientBirthTime constraint of '<em>Patient Role Patient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_Patient_validatePatientBirthTime(PatientRole_Patient patientRole_Patient,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientRole_Patient.validatePatientBirthTime(diagnostics, context);
	}

	/**
	 * Validates the validatePatientEthnicGroupCode constraint of '<em>Patient Role Patient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_Patient_validatePatientEthnicGroupCode(PatientRole_Patient patientRole_Patient,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientRole_Patient.validatePatientEthnicGroupCode(diagnostics, context);
	}

	/**
	 * Validates the validatePatientMaritalStatusCode constraint of '<em>Patient Role Patient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_Patient_validatePatientMaritalStatusCode(
			PatientRole_Patient patientRole_Patient, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientRole_Patient.validatePatientMaritalStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validatePatientName constraint of '<em>Patient Role Patient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_Patient_validatePatientName(PatientRole_Patient patientRole_Patient,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientRole_Patient.validatePatientName(diagnostics, context);
	}

	/**
	 * Validates the validatePatientRaceCode constraint of '<em>Patient Role Patient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_Patient_validatePatientRaceCode(PatientRole_Patient patientRole_Patient,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientRole_Patient.validatePatientRaceCode(diagnostics, context);
	}

	/**
	 * Validates the validatePatientReligiousAffiliationCode constraint of '<em>Patient Role Patient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_Patient_validatePatientReligiousAffiliationCode(
			PatientRole_Patient patientRole_Patient, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientRole_Patient.validatePatientReligiousAffiliationCode(diagnostics, context);
	}

	/**
	 * Validates the validatePatientGuardian constraint of '<em>Patient Role Patient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_Patient_validatePatientGuardian(PatientRole_Patient patientRole_Patient,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientRole_Patient.validatePatientGuardian(diagnostics, context);
	}

	/**
	 * Validates the validatePatientBirthplace constraint of '<em>Patient Role Patient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_Patient_validatePatientBirthplace(PatientRole_Patient patientRole_Patient,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientRole_Patient.validatePatientBirthplace(diagnostics, context);
	}

	/**
	 * Validates the validatePatientLanguageCommunication constraint of '<em>Patient Role Patient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_Patient_validatePatientLanguageCommunication(
			PatientRole_Patient patientRole_Patient, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientRole_Patient.validatePatientLanguageCommunication(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatient_Guardian(Patient_Guardian patient_Guardian, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(patient_Guardian, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(patient_Guardian, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(patient_Guardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(patient_Guardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(patient_Guardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(patient_Guardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(patient_Guardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(patient_Guardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateGuardian_validateGuardianChoice(patient_Guardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateGuardian_validateClassCode(patient_Guardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatient_Guardian_validateGuardianAddr(patient_Guardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatient_Guardian_validateGuardianCode(patient_Guardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatient_Guardian_validateGuardianTelecom(patient_Guardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatient_Guardian_validateGuardianGuardianPerson(patient_Guardian, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateGuardianAddr constraint of '<em>Patient Guardian</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatient_Guardian_validateGuardianAddr(Patient_Guardian patient_Guardian,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patient_Guardian.validateGuardianAddr(diagnostics, context);
	}

	/**
	 * Validates the validateGuardianCode constraint of '<em>Patient Guardian</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatient_Guardian_validateGuardianCode(Patient_Guardian patient_Guardian,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patient_Guardian.validateGuardianCode(diagnostics, context);
	}

	/**
	 * Validates the validateGuardianTelecom constraint of '<em>Patient Guardian</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatient_Guardian_validateGuardianTelecom(Patient_Guardian patient_Guardian,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patient_Guardian.validateGuardianTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateGuardianGuardianPerson constraint of '<em>Patient Guardian</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatient_Guardian_validateGuardianGuardianPerson(Patient_Guardian patient_Guardian,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patient_Guardian.validateGuardianGuardianPerson(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatient_LanguageCommunication(Patient_LanguageCommunication patient_LanguageCommunication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(patient_LanguageCommunication, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(patient_LanguageCommunication, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(patient_LanguageCommunication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(patient_LanguageCommunication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(patient_LanguageCommunication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(patient_LanguageCommunication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(patient_LanguageCommunication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(patient_LanguageCommunication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatient_LanguageCommunication_validateLanguageCommunicationPreferenceInd(
				patient_LanguageCommunication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatient_LanguageCommunication_validateLanguageCommunicationModeCode(
				patient_LanguageCommunication, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateLanguageCommunicationPreferenceInd constraint of '<em>Patient Language Communication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatient_LanguageCommunication_validateLanguageCommunicationPreferenceInd(
			Patient_LanguageCommunication patient_LanguageCommunication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return patient_LanguageCommunication.validateLanguageCommunicationPreferenceInd(diagnostics, context);
	}

	/**
	 * Validates the validateLanguageCommunicationModeCode constraint of '<em>Patient Language Communication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatient_LanguageCommunication_validateLanguageCommunicationModeCode(
			Patient_LanguageCommunication patient_LanguageCommunication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return patient_LanguageCommunication.validateLanguageCommunicationModeCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatient_Birthplace(Patient_Birthplace patient_Birthplace, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(patient_Birthplace, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(patient_Birthplace, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(patient_Birthplace, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(patient_Birthplace, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(patient_Birthplace, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(patient_Birthplace, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(patient_Birthplace, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(patient_Birthplace, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateBirthplace_validateClassCode(patient_Birthplace, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatient_Birthplace_validateBirthplacePlace(patient_Birthplace, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateBirthplacePlace constraint of '<em>Patient Birthplace</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatient_Birthplace_validateBirthplacePlace(Patient_Birthplace patient_Birthplace,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patient_Birthplace.validateBirthplacePlace(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBirthplace_Place(Birthplace_Place birthplace_Place, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(birthplace_Place, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(birthplace_Place, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(birthplace_Place, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(birthplace_Place, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(birthplace_Place, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(birthplace_Place, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(birthplace_Place, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(birthplace_Place, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validatePlace_validateClassCode(birthplace_Place, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validatePlace_validateDeterminerCode(birthplace_Place, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateBirthplace_Place_validatePlaceAddr(birthplace_Place, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlaceAddr constraint of '<em>Birthplace Place</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBirthplace_Place_validatePlaceAddr(Birthplace_Place birthplace_Place,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return birthplace_Place.validatePlaceAddr(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_ProviderOrganization(
			PatientRole_ProviderOrganization patientRole_ProviderOrganization, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(patientRole_ProviderOrganization, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(patientRole_ProviderOrganization, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(patientRole_ProviderOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(patientRole_ProviderOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(patientRole_ProviderOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(patientRole_ProviderOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(patientRole_ProviderOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(patientRole_ProviderOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateOrganization_validateClassCode(
				patientRole_ProviderOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateOrganization_validateDeterminerCode(
				patientRole_ProviderOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_ProviderOrganization_validateProviderOrganizationHasNationalProviderIdentifier(
				patientRole_ProviderOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_ProviderOrganization_validateProviderOrganizationAddr(
				patientRole_ProviderOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_ProviderOrganization_validateProviderOrganizationId(
				patientRole_ProviderOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_ProviderOrganization_validateProviderOrganizationName(
				patientRole_ProviderOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientRole_ProviderOrganization_validateProviderOrganizationTelecom(
				patientRole_ProviderOrganization, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProviderOrganizationHasNationalProviderIdentifier constraint of '<em>Patient Role Provider Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_ProviderOrganization_validateProviderOrganizationHasNationalProviderIdentifier(
			PatientRole_ProviderOrganization patientRole_ProviderOrganization, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return patientRole_ProviderOrganization.validateProviderOrganizationHasNationalProviderIdentifier(
			diagnostics, context);
	}

	/**
	 * Validates the validateProviderOrganizationAddr constraint of '<em>Patient Role Provider Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_ProviderOrganization_validateProviderOrganizationAddr(
			PatientRole_ProviderOrganization patientRole_ProviderOrganization, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return patientRole_ProviderOrganization.validateProviderOrganizationAddr(diagnostics, context);
	}

	/**
	 * Validates the validateProviderOrganizationId constraint of '<em>Patient Role Provider Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_ProviderOrganization_validateProviderOrganizationId(
			PatientRole_ProviderOrganization patientRole_ProviderOrganization, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return patientRole_ProviderOrganization.validateProviderOrganizationId(diagnostics, context);
	}

	/**
	 * Validates the validateProviderOrganizationName constraint of '<em>Patient Role Provider Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_ProviderOrganization_validateProviderOrganizationName(
			PatientRole_ProviderOrganization patientRole_ProviderOrganization, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return patientRole_ProviderOrganization.validateProviderOrganizationName(diagnostics, context);
	}

	/**
	 * Validates the validateProviderOrganizationTelecom constraint of '<em>Patient Role Provider Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientRole_ProviderOrganization_validateProviderOrganizationTelecom(
			PatientRole_ProviderOrganization patientRole_ProviderOrganization, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return patientRole_ProviderOrganization.validateProviderOrganizationTelecom(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_ComponentOf(
			GeneralHeaderConstraints_ComponentOf generalHeaderConstraints_ComponentOf, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalHeaderConstraints_ComponentOf, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(generalHeaderConstraints_ComponentOf, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalHeaderConstraints_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(generalHeaderConstraints_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalHeaderConstraints_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalHeaderConstraints_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalHeaderConstraints_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalHeaderConstraints_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateComponent1_validateTypeCode(
				generalHeaderConstraints_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_ComponentOf_validateComponentOfEncompassingEncounter(
				generalHeaderConstraints_ComponentOf, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateComponentOfEncompassingEncounter constraint of '<em>General Header Constraints Component Of</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_ComponentOf_validateComponentOfEncompassingEncounter(
			GeneralHeaderConstraints_ComponentOf generalHeaderConstraints_ComponentOf, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return generalHeaderConstraints_ComponentOf.validateComponentOfEncompassingEncounter(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComponentOf_EncompassingEncounter(
			ComponentOf_EncompassingEncounter componentOf_EncompassingEncounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(componentOf_EncompassingEncounter, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(componentOf_EncompassingEncounter, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(componentOf_EncompassingEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(componentOf_EncompassingEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(componentOf_EncompassingEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(componentOf_EncompassingEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(componentOf_EncompassingEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(componentOf_EncompassingEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateEncompassingEncounter_validateClassCode(
				componentOf_EncompassingEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateEncompassingEncounter_validateMoodCode(
				componentOf_EncompassingEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComponentOf_EncompassingEncounter_validateEncompassingEncounterEffectiveTime(
				componentOf_EncompassingEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComponentOf_EncompassingEncounter_validateEncompassingEncounterId(
				componentOf_EncompassingEncounter, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEncompassingEncounterEffectiveTime constraint of '<em>Component Of Encompassing Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComponentOf_EncompassingEncounter_validateEncompassingEncounterEffectiveTime(
			ComponentOf_EncompassingEncounter componentOf_EncompassingEncounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return componentOf_EncompassingEncounter.validateEncompassingEncounterEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateEncompassingEncounterId constraint of '<em>Component Of Encompassing Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComponentOf_EncompassingEncounter_validateEncompassingEncounterId(
			ComponentOf_EncompassingEncounter componentOf_EncompassingEncounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return componentOf_EncompassingEncounter.validateEncompassingEncounterId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_Author(
			GeneralHeaderConstraints_Author generalHeaderConstraints_Author, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalHeaderConstraints_Author, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(generalHeaderConstraints_Author, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalHeaderConstraints_Author, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(generalHeaderConstraints_Author, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalHeaderConstraints_Author, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalHeaderConstraints_Author, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalHeaderConstraints_Author, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalHeaderConstraints_Author, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAuthor_validateTypeCode(
				generalHeaderConstraints_Author, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAuthor_validateContextControlCode(
				generalHeaderConstraints_Author, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_Author_validateAuthorAssignedAuthor(
				generalHeaderConstraints_Author, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAuthorAssignedAuthor constraint of '<em>General Header Constraints Author</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_Author_validateAuthorAssignedAuthor(
			GeneralHeaderConstraints_Author generalHeaderConstraints_Author, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return generalHeaderConstraints_Author.validateAuthorAssignedAuthor(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthor_AssignedAuthor(Author_AssignedAuthor author_AssignedAuthor,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(author_AssignedAuthor, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(author_AssignedAuthor, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(author_AssignedAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(author_AssignedAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(author_AssignedAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(author_AssignedAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(author_AssignedAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(author_AssignedAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAssignedAuthor_validateAssignedAuthorChoice(
				author_AssignedAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAssignedAuthor_validateClassCode(author_AssignedAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAuthor_AssignedAuthor_validateAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice(
				author_AssignedAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAuthor_AssignedAuthor_validateAssignedAuthorHasNationalProviderIdentifier(
				author_AssignedAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAuthor_AssignedAuthor_validateAssignedAuthorAddr(
				author_AssignedAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAuthor_AssignedAuthor_validateAssignedAuthorCode(
				author_AssignedAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAuthor_AssignedAuthor_validateAssignedAuthorId(
				author_AssignedAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAuthor_AssignedAuthor_validateAssignedAuthorTelecom(
				author_AssignedAuthor, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice constraint of '<em>Author Assigned Author</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthor_AssignedAuthor_validateAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice(
			Author_AssignedAuthor author_AssignedAuthor, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return author_AssignedAuthor.validateAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice(
			diagnostics, context);
	}

	/**
	 * Validates the validateAssignedAuthorHasNationalProviderIdentifier constraint of '<em>Author Assigned Author</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthor_AssignedAuthor_validateAssignedAuthorHasNationalProviderIdentifier(
			Author_AssignedAuthor author_AssignedAuthor, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return author_AssignedAuthor.validateAssignedAuthorHasNationalProviderIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedAuthorAddr constraint of '<em>Author Assigned Author</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthor_AssignedAuthor_validateAssignedAuthorAddr(
			Author_AssignedAuthor author_AssignedAuthor, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return author_AssignedAuthor.validateAssignedAuthorAddr(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedAuthorCode constraint of '<em>Author Assigned Author</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthor_AssignedAuthor_validateAssignedAuthorCode(
			Author_AssignedAuthor author_AssignedAuthor, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return author_AssignedAuthor.validateAssignedAuthorCode(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedAuthorId constraint of '<em>Author Assigned Author</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthor_AssignedAuthor_validateAssignedAuthorId(Author_AssignedAuthor author_AssignedAuthor,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return author_AssignedAuthor.validateAssignedAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedAuthorTelecom constraint of '<em>Author Assigned Author</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthor_AssignedAuthor_validateAssignedAuthorTelecom(
			Author_AssignedAuthor author_AssignedAuthor, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return author_AssignedAuthor.validateAssignedAuthorTelecom(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssignedAuthor_AuthoringDevice(
			AssignedAuthor_AuthoringDevice assignedAuthor_AuthoringDevice, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(assignedAuthor_AuthoringDevice, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(assignedAuthor_AuthoringDevice, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(assignedAuthor_AuthoringDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(assignedAuthor_AuthoringDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(assignedAuthor_AuthoringDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(assignedAuthor_AuthoringDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(assignedAuthor_AuthoringDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(assignedAuthor_AuthoringDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAuthoringDevice_validateClassCode(
				assignedAuthor_AuthoringDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAuthoringDevice_validateDeterminerCode(
				assignedAuthor_AuthoringDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssignedAuthor_AuthoringDevice_validateAuthoringDeviceManufacturerModelName(
				assignedAuthor_AuthoringDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssignedAuthor_AuthoringDevice_validateAuthoringDeviceSoftwareName(
				assignedAuthor_AuthoringDevice, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAuthoringDeviceManufacturerModelName constraint of '<em>Assigned Author Authoring Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssignedAuthor_AuthoringDevice_validateAuthoringDeviceManufacturerModelName(
			AssignedAuthor_AuthoringDevice assignedAuthor_AuthoringDevice, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return assignedAuthor_AuthoringDevice.validateAuthoringDeviceManufacturerModelName(diagnostics, context);
	}

	/**
	 * Validates the validateAuthoringDeviceSoftwareName constraint of '<em>Assigned Author Authoring Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssignedAuthor_AuthoringDevice_validateAuthoringDeviceSoftwareName(
			AssignedAuthor_AuthoringDevice assignedAuthor_AuthoringDevice, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return assignedAuthor_AuthoringDevice.validateAuthoringDeviceSoftwareName(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_Person(
			GeneralHeaderConstraints_Person generalHeaderConstraints_Person, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalHeaderConstraints_Person, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(generalHeaderConstraints_Person, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalHeaderConstraints_Person, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(generalHeaderConstraints_Person, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalHeaderConstraints_Person, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalHeaderConstraints_Person, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalHeaderConstraints_Person, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalHeaderConstraints_Person, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validatePerson_validateClassCode(
				generalHeaderConstraints_Person, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validatePerson_validateDeterminerCode(
				generalHeaderConstraints_Person, diagnostics, context);
		}
		return result;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_DataEnterer(
			GeneralHeaderConstraints_DataEnterer generalHeaderConstraints_DataEnterer, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalHeaderConstraints_DataEnterer, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(generalHeaderConstraints_DataEnterer, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalHeaderConstraints_DataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(generalHeaderConstraints_DataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalHeaderConstraints_DataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalHeaderConstraints_DataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalHeaderConstraints_DataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalHeaderConstraints_DataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateDataEnterer_validateTypeCode(
				generalHeaderConstraints_DataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateDataEnterer_validateContextControlCode(
				generalHeaderConstraints_DataEnterer, diagnostics, context);
		}
		return result;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataEnterer_AssignedEntity(DataEnterer_AssignedEntity dataEnterer_AssignedEntity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(dataEnterer_AssignedEntity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(dataEnterer_AssignedEntity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(dataEnterer_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(dataEnterer_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(dataEnterer_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(dataEnterer_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(dataEnterer_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(dataEnterer_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAssignedEntity_validateClassCode(
				dataEnterer_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDataEnterer_AssignedEntity_validateAssignedEntityHasNationalProviderIdentifier(
				dataEnterer_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDataEnterer_AssignedEntity_validateAssignedEntityAddr(
				dataEnterer_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDataEnterer_AssignedEntity_validateAssignedEntityCode(
				dataEnterer_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDataEnterer_AssignedEntity_validateAssignedEntityId(
				dataEnterer_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDataEnterer_AssignedEntity_validateAssignedEntityTelecom(
				dataEnterer_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDataEnterer_AssignedEntity_validateAssignedEntityAssignedPerson(
				dataEnterer_AssignedEntity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAssignedEntityHasNationalProviderIdentifier constraint of '<em>Data Enterer Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataEnterer_AssignedEntity_validateAssignedEntityHasNationalProviderIdentifier(
			DataEnterer_AssignedEntity dataEnterer_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return dataEnterer_AssignedEntity.validateAssignedEntityHasNationalProviderIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityAddr constraint of '<em>Data Enterer Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataEnterer_AssignedEntity_validateAssignedEntityAddr(
			DataEnterer_AssignedEntity dataEnterer_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return dataEnterer_AssignedEntity.validateAssignedEntityAddr(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityCode constraint of '<em>Data Enterer Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataEnterer_AssignedEntity_validateAssignedEntityCode(
			DataEnterer_AssignedEntity dataEnterer_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return dataEnterer_AssignedEntity.validateAssignedEntityCode(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityId constraint of '<em>Data Enterer Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataEnterer_AssignedEntity_validateAssignedEntityId(
			DataEnterer_AssignedEntity dataEnterer_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return dataEnterer_AssignedEntity.validateAssignedEntityId(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityTelecom constraint of '<em>Data Enterer Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataEnterer_AssignedEntity_validateAssignedEntityTelecom(
			DataEnterer_AssignedEntity dataEnterer_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return dataEnterer_AssignedEntity.validateAssignedEntityTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityAssignedPerson constraint of '<em>Data Enterer Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataEnterer_AssignedEntity_validateAssignedEntityAssignedPerson(
			DataEnterer_AssignedEntity dataEnterer_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return dataEnterer_AssignedEntity.validateAssignedEntityAssignedPerson(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_Custodian(
			GeneralHeaderConstraints_Custodian generalHeaderConstraints_Custodian, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalHeaderConstraints_Custodian, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(generalHeaderConstraints_Custodian, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalHeaderConstraints_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(generalHeaderConstraints_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalHeaderConstraints_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalHeaderConstraints_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalHeaderConstraints_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalHeaderConstraints_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateCustodian_validateTypeCode(
				generalHeaderConstraints_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_Custodian_validateCustodianAssignedCustodian(
				generalHeaderConstraints_Custodian, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateCustodianAssignedCustodian constraint of '<em>General Header Constraints Custodian</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_Custodian_validateCustodianAssignedCustodian(
			GeneralHeaderConstraints_Custodian generalHeaderConstraints_Custodian, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return generalHeaderConstraints_Custodian.validateCustodianAssignedCustodian(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCustodian_AssignedCustodian(Custodian_AssignedCustodian custodian_AssignedCustodian,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(custodian_AssignedCustodian, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(custodian_AssignedCustodian, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(custodian_AssignedCustodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(custodian_AssignedCustodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(custodian_AssignedCustodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(custodian_AssignedCustodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(custodian_AssignedCustodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(custodian_AssignedCustodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAssignedCustodian_validateClassCode(
				custodian_AssignedCustodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCustodian_AssignedCustodian_validateAssignedCustodianRepresentedCustodianOrganization(
				custodian_AssignedCustodian, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAssignedCustodianRepresentedCustodianOrganization constraint of '<em>Custodian Assigned Custodian</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCustodian_AssignedCustodian_validateAssignedCustodianRepresentedCustodianOrganization(
			Custodian_AssignedCustodian custodian_AssignedCustodian, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return custodian_AssignedCustodian.validateAssignedCustodianRepresentedCustodianOrganization(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssignedCustodian_CustodianOrganization(
			AssignedCustodian_CustodianOrganization assignedCustodian_CustodianOrganization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(assignedCustodian_CustodianOrganization, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			assignedCustodian_CustodianOrganization, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(assignedCustodian_CustodianOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(assignedCustodian_CustodianOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(assignedCustodian_CustodianOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(assignedCustodian_CustodianOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(assignedCustodian_CustodianOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(assignedCustodian_CustodianOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateCustodianOrganization_validateClassCode(
				assignedCustodian_CustodianOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateCustodianOrganization_validateDeterminerCode(
				assignedCustodian_CustodianOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssignedCustodian_CustodianOrganization_validateCustodianOrganizationHasNationalProviderIdentifier(
				assignedCustodian_CustodianOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssignedCustodian_CustodianOrganization_validateCustodianOrganizationAddr(
				assignedCustodian_CustodianOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssignedCustodian_CustodianOrganization_validateCustodianOrganizationId(
				assignedCustodian_CustodianOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssignedCustodian_CustodianOrganization_validateCustodianOrganizationName(
				assignedCustodian_CustodianOrganization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssignedCustodian_CustodianOrganization_validateCustodianOrganizationTelecom(
				assignedCustodian_CustodianOrganization, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateCustodianOrganizationHasNationalProviderIdentifier constraint of '<em>Assigned Custodian Custodian Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssignedCustodian_CustodianOrganization_validateCustodianOrganizationHasNationalProviderIdentifier(
			AssignedCustodian_CustodianOrganization assignedCustodian_CustodianOrganization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assignedCustodian_CustodianOrganization.validateCustodianOrganizationHasNationalProviderIdentifier(
			diagnostics, context);
	}

	/**
	 * Validates the validateCustodianOrganizationAddr constraint of '<em>Assigned Custodian Custodian Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssignedCustodian_CustodianOrganization_validateCustodianOrganizationAddr(
			AssignedCustodian_CustodianOrganization assignedCustodian_CustodianOrganization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assignedCustodian_CustodianOrganization.validateCustodianOrganizationAddr(diagnostics, context);
	}

	/**
	 * Validates the validateCustodianOrganizationId constraint of '<em>Assigned Custodian Custodian Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssignedCustodian_CustodianOrganization_validateCustodianOrganizationId(
			AssignedCustodian_CustodianOrganization assignedCustodian_CustodianOrganization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assignedCustodian_CustodianOrganization.validateCustodianOrganizationId(diagnostics, context);
	}

	/**
	 * Validates the validateCustodianOrganizationName constraint of '<em>Assigned Custodian Custodian Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssignedCustodian_CustodianOrganization_validateCustodianOrganizationName(
			AssignedCustodian_CustodianOrganization assignedCustodian_CustodianOrganization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assignedCustodian_CustodianOrganization.validateCustodianOrganizationName(diagnostics, context);
	}

	/**
	 * Validates the validateCustodianOrganizationTelecom constraint of '<em>Assigned Custodian Custodian Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssignedCustodian_CustodianOrganization_validateCustodianOrganizationTelecom(
			AssignedCustodian_CustodianOrganization assignedCustodian_CustodianOrganization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assignedCustodian_CustodianOrganization.validateCustodianOrganizationTelecom(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_InformationRecipient(
			GeneralHeaderConstraints_InformationRecipient generalHeaderConstraints_InformationRecipient,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalHeaderConstraints_InformationRecipient, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			generalHeaderConstraints_InformationRecipient, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(
				generalHeaderConstraints_InformationRecipient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(
				generalHeaderConstraints_InformationRecipient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalHeaderConstraints_InformationRecipient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalHeaderConstraints_InformationRecipient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalHeaderConstraints_InformationRecipient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalHeaderConstraints_InformationRecipient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_InformationRecipient_validateInformationRecipientIntendedRecipient(
				generalHeaderConstraints_InformationRecipient, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateInformationRecipientIntendedRecipient constraint of '<em>General Header Constraints Information Recipient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_InformationRecipient_validateInformationRecipientIntendedRecipient(
			GeneralHeaderConstraints_InformationRecipient generalHeaderConstraints_InformationRecipient,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints_InformationRecipient.validateInformationRecipientIntendedRecipient(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInformationRecipient_IntendedRecipient(
			InformationRecipient_IntendedRecipient informationRecipient_IntendedRecipient, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(informationRecipient_IntendedRecipient, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			informationRecipient_IntendedRecipient, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(informationRecipient_IntendedRecipient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(informationRecipient_IntendedRecipient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(informationRecipient_IntendedRecipient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(informationRecipient_IntendedRecipient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(informationRecipient_IntendedRecipient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(informationRecipient_IntendedRecipient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInformationRecipient_IntendedRecipient_validateIntendedRecipientInformationRecipient(
				informationRecipient_IntendedRecipient, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInformationRecipient_IntendedRecipient_validateIntendedRecipientRecievedOrganization(
				informationRecipient_IntendedRecipient, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateIntendedRecipientInformationRecipient constraint of '<em>Information Recipient Intended Recipient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInformationRecipient_IntendedRecipient_validateIntendedRecipientInformationRecipient(
			InformationRecipient_IntendedRecipient informationRecipient_IntendedRecipient, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return informationRecipient_IntendedRecipient.validateIntendedRecipientInformationRecipient(
			diagnostics, context);
	}

	/**
	 * Validates the validateIntendedRecipientRecievedOrganization constraint of '<em>Information Recipient Intended Recipient</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInformationRecipient_IntendedRecipient_validateIntendedRecipientRecievedOrganization(
			InformationRecipient_IntendedRecipient informationRecipient_IntendedRecipient, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return informationRecipient_IntendedRecipient.validateIntendedRecipientRecievedOrganization(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIntendedRecipient_Organization(
			IntendedRecipient_Organization intendedRecipient_Organization, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(intendedRecipient_Organization, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(intendedRecipient_Organization, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(intendedRecipient_Organization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(intendedRecipient_Organization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(intendedRecipient_Organization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(intendedRecipient_Organization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(intendedRecipient_Organization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(intendedRecipient_Organization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateOrganization_validateClassCode(
				intendedRecipient_Organization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateOrganization_validateDeterminerCode(
				intendedRecipient_Organization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIntendedRecipient_Organization_validateOrganizationName(
				intendedRecipient_Organization, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateOrganizationName constraint of '<em>Intended Recipient Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIntendedRecipient_Organization_validateOrganizationName(
			IntendedRecipient_Organization intendedRecipient_Organization, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return intendedRecipient_Organization.validateOrganizationName(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_LegalAuthenticator(
			GeneralHeaderConstraints_LegalAuthenticator generalHeaderConstraints_LegalAuthenticator,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalHeaderConstraints_LegalAuthenticator, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			generalHeaderConstraints_LegalAuthenticator, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalHeaderConstraints_LegalAuthenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(
				generalHeaderConstraints_LegalAuthenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalHeaderConstraints_LegalAuthenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalHeaderConstraints_LegalAuthenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalHeaderConstraints_LegalAuthenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalHeaderConstraints_LegalAuthenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateLegalAuthenticator_validateTypeCode(
				generalHeaderConstraints_LegalAuthenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateLegalAuthenticator_validateContextControlCode(
				generalHeaderConstraints_LegalAuthenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_LegalAuthenticator_validateLegalAuthenticatorTime(
				generalHeaderConstraints_LegalAuthenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_LegalAuthenticator_validateLegalAuthenticatorSignatureCode(
				generalHeaderConstraints_LegalAuthenticator, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateLegalAuthenticatorTime constraint of '<em>General Header Constraints Legal Authenticator</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_LegalAuthenticator_validateLegalAuthenticatorTime(
			GeneralHeaderConstraints_LegalAuthenticator generalHeaderConstraints_LegalAuthenticator,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints_LegalAuthenticator.validateLegalAuthenticatorTime(diagnostics, context);
	}

	/**
	 * Validates the validateLegalAuthenticatorSignatureCode constraint of '<em>General Header Constraints Legal Authenticator</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_LegalAuthenticator_validateLegalAuthenticatorSignatureCode(
			GeneralHeaderConstraints_LegalAuthenticator generalHeaderConstraints_LegalAuthenticator,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints_LegalAuthenticator.validateLegalAuthenticatorSignatureCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLegalAuthenticator_AssignedEntity(
			LegalAuthenticator_AssignedEntity legalAuthenticator_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(legalAuthenticator_AssignedEntity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(legalAuthenticator_AssignedEntity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(legalAuthenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(legalAuthenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(legalAuthenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(legalAuthenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(legalAuthenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(legalAuthenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAssignedEntity_validateClassCode(
				legalAuthenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLegalAuthenticator_AssignedEntity_validateAssignedEntityHasNationalProviderIdentifier(
				legalAuthenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLegalAuthenticator_AssignedEntity_validateAssignedEntityAddr(
				legalAuthenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLegalAuthenticator_AssignedEntity_validateAssignedEntityCode(
				legalAuthenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLegalAuthenticator_AssignedEntity_validateAssignedEntityId(
				legalAuthenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLegalAuthenticator_AssignedEntity_validateAssignedEntityTelecom(
				legalAuthenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLegalAuthenticator_AssignedEntity_validateAssignedEntityAssignedPerson(
				legalAuthenticator_AssignedEntity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAssignedEntityHasNationalProviderIdentifier constraint of '<em>Legal Authenticator Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLegalAuthenticator_AssignedEntity_validateAssignedEntityHasNationalProviderIdentifier(
			LegalAuthenticator_AssignedEntity legalAuthenticator_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return legalAuthenticator_AssignedEntity.validateAssignedEntityHasNationalProviderIdentifier(
			diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityAddr constraint of '<em>Legal Authenticator Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLegalAuthenticator_AssignedEntity_validateAssignedEntityAddr(
			LegalAuthenticator_AssignedEntity legalAuthenticator_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return legalAuthenticator_AssignedEntity.validateAssignedEntityAddr(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityCode constraint of '<em>Legal Authenticator Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLegalAuthenticator_AssignedEntity_validateAssignedEntityCode(
			LegalAuthenticator_AssignedEntity legalAuthenticator_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return legalAuthenticator_AssignedEntity.validateAssignedEntityCode(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityId constraint of '<em>Legal Authenticator Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLegalAuthenticator_AssignedEntity_validateAssignedEntityId(
			LegalAuthenticator_AssignedEntity legalAuthenticator_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return legalAuthenticator_AssignedEntity.validateAssignedEntityId(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityTelecom constraint of '<em>Legal Authenticator Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLegalAuthenticator_AssignedEntity_validateAssignedEntityTelecom(
			LegalAuthenticator_AssignedEntity legalAuthenticator_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return legalAuthenticator_AssignedEntity.validateAssignedEntityTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityAssignedPerson constraint of '<em>Legal Authenticator Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLegalAuthenticator_AssignedEntity_validateAssignedEntityAssignedPerson(
			LegalAuthenticator_AssignedEntity legalAuthenticator_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return legalAuthenticator_AssignedEntity.validateAssignedEntityAssignedPerson(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_Authenticator(
			GeneralHeaderConstraints_Authenticator generalHeaderConstraints_Authenticator, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalHeaderConstraints_Authenticator, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			generalHeaderConstraints_Authenticator, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalHeaderConstraints_Authenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(generalHeaderConstraints_Authenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalHeaderConstraints_Authenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalHeaderConstraints_Authenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalHeaderConstraints_Authenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalHeaderConstraints_Authenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAuthenticator_validateTypeCode(
				generalHeaderConstraints_Authenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_Authenticator_validateAuthenticatorTime(
				generalHeaderConstraints_Authenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_Authenticator_validateAuthenticatorSignatureCode(
				generalHeaderConstraints_Authenticator, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_Authenticator_validateAuthenticatorAssignedEntity(
				generalHeaderConstraints_Authenticator, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAuthenticatorTime constraint of '<em>General Header Constraints Authenticator</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_Authenticator_validateAuthenticatorTime(
			GeneralHeaderConstraints_Authenticator generalHeaderConstraints_Authenticator, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return generalHeaderConstraints_Authenticator.validateAuthenticatorTime(diagnostics, context);
	}

	/**
	 * Validates the validateAuthenticatorSignatureCode constraint of '<em>General Header Constraints Authenticator</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_Authenticator_validateAuthenticatorSignatureCode(
			GeneralHeaderConstraints_Authenticator generalHeaderConstraints_Authenticator, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return generalHeaderConstraints_Authenticator.validateAuthenticatorSignatureCode(diagnostics, context);
	}

	/**
	 * Validates the validateAuthenticatorAssignedEntity constraint of '<em>General Header Constraints Authenticator</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_Authenticator_validateAuthenticatorAssignedEntity(
			GeneralHeaderConstraints_Authenticator generalHeaderConstraints_Authenticator, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return generalHeaderConstraints_Authenticator.validateAuthenticatorAssignedEntity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthenticator_AssignedEntity(Authenticator_AssignedEntity authenticator_AssignedEntity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(authenticator_AssignedEntity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(authenticator_AssignedEntity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(authenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(authenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(authenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(authenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(authenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(authenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAssignedEntity_validateClassCode(
				authenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAuthenticator_AssignedEntity_validateAssignedEntityHasNationalProviderIdentifier(
				authenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAuthenticator_AssignedEntity_validateAssignedEntityAddr(
				authenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAuthenticator_AssignedEntity_validateAssignedEntityCode(
				authenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAuthenticator_AssignedEntity_validateAssignedEntityId(
				authenticator_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAuthenticator_AssignedEntity_validateAssignedEntityTelecom(
				authenticator_AssignedEntity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAssignedEntityHasNationalProviderIdentifier constraint of '<em>Authenticator Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthenticator_AssignedEntity_validateAssignedEntityHasNationalProviderIdentifier(
			Authenticator_AssignedEntity authenticator_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return authenticator_AssignedEntity.validateAssignedEntityHasNationalProviderIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityAddr constraint of '<em>Authenticator Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthenticator_AssignedEntity_validateAssignedEntityAddr(
			Authenticator_AssignedEntity authenticator_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return authenticator_AssignedEntity.validateAssignedEntityAddr(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityCode constraint of '<em>Authenticator Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthenticator_AssignedEntity_validateAssignedEntityCode(
			Authenticator_AssignedEntity authenticator_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return authenticator_AssignedEntity.validateAssignedEntityCode(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityId constraint of '<em>Authenticator Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthenticator_AssignedEntity_validateAssignedEntityId(
			Authenticator_AssignedEntity authenticator_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return authenticator_AssignedEntity.validateAssignedEntityId(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityTelecom constraint of '<em>Authenticator Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthenticator_AssignedEntity_validateAssignedEntityTelecom(
			Authenticator_AssignedEntity authenticator_AssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return authenticator_AssignedEntity.validateAssignedEntityTelecom(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_Informant(
			GeneralHeaderConstraints_Informant generalHeaderConstraints_Informant, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalHeaderConstraints_Informant, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(generalHeaderConstraints_Informant, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalHeaderConstraints_Informant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(generalHeaderConstraints_Informant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalHeaderConstraints_Informant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalHeaderConstraints_Informant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalHeaderConstraints_Informant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalHeaderConstraints_Informant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateInformant12_validateInformantChoice(
				generalHeaderConstraints_Informant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateInformant12_validateTypeCode(
				generalHeaderConstraints_Informant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateInformant12_validateContextControlCode(
				generalHeaderConstraints_Informant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_Informant_validateInformantHasAssignedEntityOrRelatedEntity(
				generalHeaderConstraints_Informant, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateInformantHasAssignedEntityOrRelatedEntity constraint of '<em>General Header Constraints Informant</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_Informant_validateInformantHasAssignedEntityOrRelatedEntity(
			GeneralHeaderConstraints_Informant generalHeaderConstraints_Informant, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return generalHeaderConstraints_Informant.validateInformantHasAssignedEntityOrRelatedEntity(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInformant_AssignedEntity(Informant_AssignedEntity informant_AssignedEntity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(informant_AssignedEntity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(informant_AssignedEntity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(informant_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(informant_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(informant_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(informant_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(informant_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(informant_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAssignedEntity_validateClassCode(
				informant_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInformant_AssignedEntity_validateAssignedEntityHasNationalProviderIdentifier(
				informant_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInformant_AssignedEntity_validateAssignedEntityAddr(
				informant_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInformant_AssignedEntity_validateAssignedEntityCode(
				informant_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInformant_AssignedEntity_validateAssignedEntityId(
				informant_AssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInformant_AssignedEntity_validateAssignedEntityPerson(
				informant_AssignedEntity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAssignedEntityHasNationalProviderIdentifier constraint of '<em>Informant Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInformant_AssignedEntity_validateAssignedEntityHasNationalProviderIdentifier(
			Informant_AssignedEntity informant_AssignedEntity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return informant_AssignedEntity.validateAssignedEntityHasNationalProviderIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityAddr constraint of '<em>Informant Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInformant_AssignedEntity_validateAssignedEntityAddr(
			Informant_AssignedEntity informant_AssignedEntity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return informant_AssignedEntity.validateAssignedEntityAddr(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityCode constraint of '<em>Informant Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInformant_AssignedEntity_validateAssignedEntityCode(
			Informant_AssignedEntity informant_AssignedEntity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return informant_AssignedEntity.validateAssignedEntityCode(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityId constraint of '<em>Informant Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInformant_AssignedEntity_validateAssignedEntityId(
			Informant_AssignedEntity informant_AssignedEntity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return informant_AssignedEntity.validateAssignedEntityId(diagnostics, context);
	}

	/**
	 * Validates the validateAssignedEntityPerson constraint of '<em>Informant Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInformant_AssignedEntity_validateAssignedEntityPerson(
			Informant_AssignedEntity informant_AssignedEntity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return informant_AssignedEntity.validateAssignedEntityPerson(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInformant_RelatedEntity(Informant_RelatedEntity informant_RelatedEntity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(informant_RelatedEntity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(informant_RelatedEntity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(informant_RelatedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(informant_RelatedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(informant_RelatedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(informant_RelatedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(informant_RelatedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(informant_RelatedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInformant_RelatedEntity_validateRelatedEntityAddr(
				informant_RelatedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInformant_RelatedEntity_validateRelatedEntityPerson(
				informant_RelatedEntity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateRelatedEntityAddr constraint of '<em>Informant Related Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInformant_RelatedEntity_validateRelatedEntityAddr(
			Informant_RelatedEntity informant_RelatedEntity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return informant_RelatedEntity.validateRelatedEntityAddr(diagnostics, context);
	}

	/**
	 * Validates the validateRelatedEntityPerson constraint of '<em>Informant Related Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInformant_RelatedEntity_validateRelatedEntityPerson(
			Informant_RelatedEntity informant_RelatedEntity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return informant_RelatedEntity.validateRelatedEntityPerson(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_ParticipantSupport(
			GeneralHeaderConstraints_ParticipantSupport generalHeaderConstraints_ParticipantSupport,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalHeaderConstraints_ParticipantSupport, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			generalHeaderConstraints_ParticipantSupport, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalHeaderConstraints_ParticipantSupport, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(
				generalHeaderConstraints_ParticipantSupport, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalHeaderConstraints_ParticipantSupport, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalHeaderConstraints_ParticipantSupport, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalHeaderConstraints_ParticipantSupport, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalHeaderConstraints_ParticipantSupport, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipant1_validateContextControlCode(
				generalHeaderConstraints_ParticipantSupport, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_ParticipantSupport_validateParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization(
				generalHeaderConstraints_ParticipantSupport, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_ParticipantSupport_validateParticipantSupportTime(
				generalHeaderConstraints_ParticipantSupport, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization constraint of '<em>General Header Constraints Participant Support</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_ParticipantSupport_validateParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization(
			GeneralHeaderConstraints_ParticipantSupport generalHeaderConstraints_ParticipantSupport,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints_ParticipantSupport.validateParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization(
			diagnostics, context);
	}

	/**
	 * Validates the validateParticipantSupportTime constraint of '<em>General Header Constraints Participant Support</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_ParticipantSupport_validateParticipantSupportTime(
			GeneralHeaderConstraints_ParticipantSupport generalHeaderConstraints_ParticipantSupport,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints_ParticipantSupport.validateParticipantSupportTime(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_InFulfillmentOf(
			GeneralHeaderConstraints_InFulfillmentOf generalHeaderConstraints_InFulfillmentOf,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalHeaderConstraints_InFulfillmentOf, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			generalHeaderConstraints_InFulfillmentOf, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalHeaderConstraints_InFulfillmentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(generalHeaderConstraints_InFulfillmentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalHeaderConstraints_InFulfillmentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalHeaderConstraints_InFulfillmentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalHeaderConstraints_InFulfillmentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalHeaderConstraints_InFulfillmentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateInFulfillmentOf_validateTypeCode(
				generalHeaderConstraints_InFulfillmentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_InFulfillmentOf_validateInFulfillmentOfOrder(
				generalHeaderConstraints_InFulfillmentOf, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateInFulfillmentOfOrder constraint of '<em>General Header Constraints In Fulfillment Of</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralHeaderConstraints_InFulfillmentOf_validateInFulfillmentOfOrder(
			GeneralHeaderConstraints_InFulfillmentOf generalHeaderConstraints_InFulfillmentOf,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalHeaderConstraints_InFulfillmentOf.validateInFulfillmentOfOrder(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInFulfillmentOf_Order(InFulfillmentOf_Order inFulfillmentOf_Order,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(inFulfillmentOf_Order, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(inFulfillmentOf_Order, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(inFulfillmentOf_Order, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(inFulfillmentOf_Order, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(inFulfillmentOf_Order, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(inFulfillmentOf_Order, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(inFulfillmentOf_Order, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(inFulfillmentOf_Order, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateOrder_validateMoodCode(inFulfillmentOf_Order, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInFulfillmentOf_Order_validateOrderId(inFulfillmentOf_Order, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateOrderId constraint of '<em>In Fulfillment Of Order</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInFulfillmentOf_Order_validateOrderId(InFulfillmentOf_Order inFulfillmentOf_Order,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inFulfillmentOf_Order.validateOrderId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyProblemAct(AllergyProblemAct allergyProblemAct, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(allergyProblemAct, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(allergyProblemAct, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyProblemAct_validateAllergyProblemActEffectiveTimeLow(
				allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyProblemAct_validateAllergyProblemActEffectiveTimeHigh(
				allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyProblemAct_validateAllergyProblemActTemplateId(
				allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyProblemAct_validateAllergyProblemActClassCode(
				allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyProblemAct_validateAllergyProblemActMoodCode(
				allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyProblemAct_validateAllergyProblemActId(allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyProblemAct_validateAllergyProblemActCode(allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyProblemAct_validateAllergyProblemActStatusCode(
				allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyProblemAct_validateAllergyProblemActEffectiveTime(
				allergyProblemAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyProblemAct_validateAllergyProblemActAllergyObservation(
				allergyProblemAct, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAllergyProblemActEffectiveTimeLow constraint of '<em>Allergy Problem Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyProblemAct_validateAllergyProblemActEffectiveTimeLow(
			AllergyProblemAct allergyProblemAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyProblemAct.validateAllergyProblemActEffectiveTimeLow(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyProblemActEffectiveTimeHigh constraint of '<em>Allergy Problem Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyProblemAct_validateAllergyProblemActEffectiveTimeHigh(
			AllergyProblemAct allergyProblemAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyProblemAct.validateAllergyProblemActEffectiveTimeHigh(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyProblemActTemplateId constraint of '<em>Allergy Problem Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyProblemAct_validateAllergyProblemActTemplateId(AllergyProblemAct allergyProblemAct,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyProblemAct.validateAllergyProblemActTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyProblemActClassCode constraint of '<em>Allergy Problem Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyProblemAct_validateAllergyProblemActClassCode(AllergyProblemAct allergyProblemAct,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyProblemAct.validateAllergyProblemActClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyProblemActMoodCode constraint of '<em>Allergy Problem Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyProblemAct_validateAllergyProblemActMoodCode(AllergyProblemAct allergyProblemAct,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyProblemAct.validateAllergyProblemActMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyProblemActId constraint of '<em>Allergy Problem Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyProblemAct_validateAllergyProblemActId(AllergyProblemAct allergyProblemAct,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyProblemAct.validateAllergyProblemActId(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyProblemActCode constraint of '<em>Allergy Problem Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyProblemAct_validateAllergyProblemActCode(AllergyProblemAct allergyProblemAct,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyProblemAct.validateAllergyProblemActCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyProblemActStatusCode constraint of '<em>Allergy Problem Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyProblemAct_validateAllergyProblemActStatusCode(AllergyProblemAct allergyProblemAct,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyProblemAct.validateAllergyProblemActStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyProblemActEffectiveTime constraint of '<em>Allergy Problem Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyProblemAct_validateAllergyProblemActEffectiveTime(
			AllergyProblemAct allergyProblemAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyProblemAct.validateAllergyProblemActEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyProblemActAllergyObservation constraint of '<em>Allergy Problem Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyProblemAct_validateAllergyProblemActAllergyObservation(
			AllergyProblemAct allergyProblemAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyProblemAct.validateAllergyProblemActAllergyObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation(AllergyObservation allergyObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(allergyObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(allergyObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationAllergyStatusInversionIndicator(
				allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationReactionInversionIndicator(
				allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationSeverityInversionIndicator(
				allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationTemplateId(
				allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationClassCode(
				allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationMoodCode(
				allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationId(allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationCode(
				allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationStatusCode(
				allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationEffectiveTime(
				allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationValue(
				allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationProblemEntryReactionObservationContainer(
				allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationSeverity(
				allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationAllergyStatusObservation(
				allergyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservation_validateAllergyObservationParticipant(
				allergyObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAllergyObservationAllergyStatusInversionIndicator constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationAllergyStatusInversionIndicator(
			AllergyObservation allergyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationAllergyStatusInversionIndicator(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationReactionInversionIndicator constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationReactionInversionIndicator(
			AllergyObservation allergyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationReactionInversionIndicator(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationSeverityInversionIndicator constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationSeverityInversionIndicator(
			AllergyObservation allergyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationSeverityInversionIndicator(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationTemplateId constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationTemplateId(
			AllergyObservation allergyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationClassCode constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationClassCode(
			AllergyObservation allergyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationMoodCode constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationMoodCode(AllergyObservation allergyObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationId constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationId(AllergyObservation allergyObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationId(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationCode constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationCode(AllergyObservation allergyObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationStatusCode constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationStatusCode(
			AllergyObservation allergyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationEffectiveTime constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationEffectiveTime(
			AllergyObservation allergyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationValue constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationValue(AllergyObservation allergyObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationValue(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationProblemEntryReactionObservationContainer constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationProblemEntryReactionObservationContainer(
			AllergyObservation allergyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationProblemEntryReactionObservationContainer(
			diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationSeverity constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationSeverity(AllergyObservation allergyObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationSeverity(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationAllergyStatusObservation constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationAllergyStatusObservation(
			AllergyObservation allergyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationAllergyStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationParticipant constraint of '<em>Allergy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservation_validateAllergyObservationParticipant(
			AllergyObservation allergyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyObservation.validateAllergyObservationParticipant(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation(ReactionObservation reactionObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(reactionObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(reactionObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationTextReference(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationReferenceValue(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationEffectiveTimeLow(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationEffectiveTimeHigh(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationSeverityObservationInversionInd(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationProcedureActivityProcedureInversionInd(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationMedicationActivityInversionInd(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationTemplateId(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationClassCode(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationMoodCode(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationId(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationCode(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationText(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationStatusCode(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationEffectiveTime(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationValue(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationSeverityObservation(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationProcedureActivityProcedure(
				reactionObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReactionObservation_validateReactionObservationMedicationActivity(
				reactionObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateReactionObservationTextReference constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationTextReference(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationReferenceValue constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationReferenceValue(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationReferenceValue(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationEffectiveTimeLow constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationEffectiveTimeLow(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationEffectiveTimeLow(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationEffectiveTimeHigh constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationEffectiveTimeHigh(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationEffectiveTimeHigh(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationSeverityObservationInversionInd constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationSeverityObservationInversionInd(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationSeverityObservationInversionInd(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationProcedureActivityProcedureInversionInd constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationProcedureActivityProcedureInversionInd(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationProcedureActivityProcedureInversionInd(
			diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationMedicationActivityInversionInd constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationMedicationActivityInversionInd(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationMedicationActivityInversionInd(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationTemplateId constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationTemplateId(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationClassCode constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationClassCode(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationMoodCode constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationMoodCode(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationId constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationId(ReactionObservation reactionObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationId(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationCode constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationCode(ReactionObservation reactionObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationText constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationText(ReactionObservation reactionObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationText(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationStatusCode constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationStatusCode(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationEffectiveTime constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationEffectiveTime(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationValue constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationValue(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationValue(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationSeverityObservation constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationSeverityObservation(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationSeverityObservation(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationProcedureActivityProcedure constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationProcedureActivityProcedure(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationProcedureActivityProcedure(diagnostics, context);
	}

	/**
	 * Validates the validateReactionObservationMedicationActivity constraint of '<em>Reaction Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReactionObservation_validateReactionObservationMedicationActivity(
			ReactionObservation reactionObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reactionObservation.validateReactionObservationMedicationActivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverityObservation(SeverityObservation severityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(severityObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(severityObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverityObservation_validateSeverityObservationTextReference(
				severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverityObservation_validateSeverityObservationReferenceValue(
				severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverityObservation_validateSeverityObservationTemplateId(
				severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverityObservation_validateSeverityObservationClassCode(
				severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverityObservation_validateSeverityObservationMoodCode(
				severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverityObservation_validateSeverityObservationCode(
				severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverityObservation_validateSeverityObservationText(
				severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverityObservation_validateSeverityObservationStatusCode(
				severityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverityObservation_validateSeverityObservationValue(
				severityObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSeverityObservationTextReference constraint of '<em>Severity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverityObservation_validateSeverityObservationTextReference(
			SeverityObservation severityObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return severityObservation.validateSeverityObservationTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityObservationReferenceValue constraint of '<em>Severity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverityObservation_validateSeverityObservationReferenceValue(
			SeverityObservation severityObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return severityObservation.validateSeverityObservationReferenceValue(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityObservationTemplateId constraint of '<em>Severity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverityObservation_validateSeverityObservationTemplateId(
			SeverityObservation severityObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return severityObservation.validateSeverityObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityObservationClassCode constraint of '<em>Severity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverityObservation_validateSeverityObservationClassCode(
			SeverityObservation severityObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return severityObservation.validateSeverityObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityObservationMoodCode constraint of '<em>Severity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverityObservation_validateSeverityObservationMoodCode(
			SeverityObservation severityObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return severityObservation.validateSeverityObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityObservationCode constraint of '<em>Severity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverityObservation_validateSeverityObservationCode(SeverityObservation severityObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return severityObservation.validateSeverityObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityObservationText constraint of '<em>Severity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverityObservation_validateSeverityObservationText(SeverityObservation severityObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return severityObservation.validateSeverityObservationText(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityObservationStatusCode constraint of '<em>Severity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverityObservation_validateSeverityObservationStatusCode(
			SeverityObservation severityObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return severityObservation.validateSeverityObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityObservationValue constraint of '<em>Severity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverityObservation_validateSeverityObservationValue(
			SeverityObservation severityObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return severityObservation.validateSeverityObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyStatusObservation(AllergyStatusObservation allergyStatusObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(allergyStatusObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(allergyStatusObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(allergyStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(allergyStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(allergyStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(allergyStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(allergyStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(allergyStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyStatusObservation_validateAllergyStatusObservationTemplateId(
				allergyStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyStatusObservation_validateAllergyStatusObservationClassCode(
				allergyStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyStatusObservation_validateAllergyStatusObservationMoodCode(
				allergyStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyStatusObservation_validateAllergyStatusObservationCode(
				allergyStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyStatusObservation_validateAllergyStatusObservationStatusCode(
				allergyStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyStatusObservation_validateAllergyStatusObservationValue(
				allergyStatusObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAllergyStatusObservationTemplateId constraint of '<em>Allergy Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyStatusObservation_validateAllergyStatusObservationTemplateId(
			AllergyStatusObservation allergyStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyStatusObservation.validateAllergyStatusObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyStatusObservationClassCode constraint of '<em>Allergy Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyStatusObservation_validateAllergyStatusObservationClassCode(
			AllergyStatusObservation allergyStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyStatusObservation.validateAllergyStatusObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyStatusObservationMoodCode constraint of '<em>Allergy Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyStatusObservation_validateAllergyStatusObservationMoodCode(
			AllergyStatusObservation allergyStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyStatusObservation.validateAllergyStatusObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyStatusObservationCode constraint of '<em>Allergy Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyStatusObservation_validateAllergyStatusObservationCode(
			AllergyStatusObservation allergyStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyStatusObservation.validateAllergyStatusObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyStatusObservationStatusCode constraint of '<em>Allergy Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyStatusObservation_validateAllergyStatusObservationStatusCode(
			AllergyStatusObservation allergyStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyStatusObservation.validateAllergyStatusObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyStatusObservationValue constraint of '<em>Allergy Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyStatusObservation_validateAllergyStatusObservationValue(
			AllergyStatusObservation allergyStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyStatusObservation.validateAllergyStatusObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation(AgeObservation ageObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(ageObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(ageObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAgeObservation_validateAgeObservationTemplateId(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAgeObservation_validateAgeObservationClassCode(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAgeObservation_validateAgeObservationMoodCode(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAgeObservation_validateAgeObservationCode(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAgeObservation_validateAgeObservationStatusCode(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAgeObservation_validateAgeObservationValue(ageObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAgeObservationTemplateId constraint of '<em>Age Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation_validateAgeObservationTemplateId(AgeObservation ageObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ageObservation.validateAgeObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAgeObservationClassCode constraint of '<em>Age Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation_validateAgeObservationClassCode(AgeObservation ageObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ageObservation.validateAgeObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateAgeObservationMoodCode constraint of '<em>Age Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation_validateAgeObservationMoodCode(AgeObservation ageObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ageObservation.validateAgeObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateAgeObservationCode constraint of '<em>Age Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation_validateAgeObservationCode(AgeObservation ageObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ageObservation.validateAgeObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateAgeObservationStatusCode constraint of '<em>Age Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation_validateAgeObservationStatusCode(AgeObservation ageObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ageObservation.validateAgeObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateAgeObservationValue constraint of '<em>Age Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation_validateAgeObservationValue(AgeObservation ageObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ageObservation.validateAgeObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation(HealthStatusObservation healthStatusObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(healthStatusObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(healthStatusObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationHasTextReference(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationHasTextReferenceValue(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationTemplateId(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationClassCode(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationMoodCode(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationCode(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationText(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationStatusCode(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationValue(
				healthStatusObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHealthStatusObservationHasTextReference constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationHasTextReference(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationHasTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationHasTextReferenceValue constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationHasTextReferenceValue(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationHasTextReferenceValue(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationTemplateId constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationTemplateId(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationClassCode constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationClassCode(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationMoodCode constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationMoodCode(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationCode constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationCode(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationText constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationText(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationText(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationStatusCode constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationStatusCode(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationValue constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationValue(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment(Comment comment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(comment, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(comment, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentHasTextReference(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentEffectiveTimeWhenAuthorPresent(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentHasAuthorId(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentHasAuthorOrganization(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentTemplateId(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentClassCode(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentMoodCode(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentCode(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentText(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentStatusCode(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentAuthor(comment, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateCommentHasTextReference constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentHasTextReference(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentHasTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateCommentEffectiveTimeWhenAuthorPresent constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentEffectiveTimeWhenAuthorPresent(Comment comment,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return comment.validateCommentEffectiveTimeWhenAuthorPresent(diagnostics, context);
	}

	/**
	 * Validates the validateCommentHasAuthorId constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentHasAuthorId(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentHasAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateCommentHasAuthorOrganization constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentHasAuthorOrganization(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentHasAuthorOrganization(diagnostics, context);
	}

	/**
	 * Validates the validateCommentTemplateId constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentTemplateId(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateCommentClassCode constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentClassCode(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateCommentMoodCode constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentMoodCode(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateCommentCode constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentCode(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentCode(diagnostics, context);
	}

	/**
	 * Validates the validateCommentText constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentText(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentText(diagnostics, context);
	}

	/**
	 * Validates the validateCommentStatusCode constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentStatusCode(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateCommentAuthor constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentAuthor(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentAuthor(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity(MedicationActivity medicationActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationActivity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationActivity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSubstanceAdministration_validateClassCode(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityTemplateId(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityClassCode(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityId(medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityCode(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityStatusCode(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityEffectiveTime(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityRouteCode(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityApproachSiteCode(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityDoseQuantity(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityRateQuantity(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityMaxDoseQuantity(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityAdministrationUnitCode(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityText(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityRepeatNumber(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityMedicationSupplyOrder(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityReactionObservation(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityConsumable(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityPerformer(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityInstructions(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityIndication(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityMedicationDispense(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityPrecondition(
				medicationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationActivity_validateMedicationActivityDrugVehicle(
				medicationActivity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationActivityTemplateId constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityTemplateId(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityClassCode constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityClassCode(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityId constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityId(MedicationActivity medicationActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityCode constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityCode(MedicationActivity medicationActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityStatusCode constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityStatusCode(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityEffectiveTime constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityEffectiveTime(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityRouteCode constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityRouteCode(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityApproachSiteCode constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityApproachSiteCode(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityApproachSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityDoseQuantity constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityDoseQuantity(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityRateQuantity constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityRateQuantity(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityRateQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityMaxDoseQuantity constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityMaxDoseQuantity(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityMaxDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityAdministrationUnitCode constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityAdministrationUnitCode(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityAdministrationUnitCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityText constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityText(MedicationActivity medicationActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityText(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityRepeatNumber constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityRepeatNumber(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityRepeatNumber(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityMedicationSupplyOrder constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityMedicationSupplyOrder(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityMedicationSupplyOrder(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityReactionObservation constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityReactionObservation(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityReactionObservation(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityConsumable constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityConsumable(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityConsumable(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityPerformer constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityPerformer(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityPerformer(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityInstructions constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityInstructions(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityInstructions(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityIndication constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityIndication(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityIndication(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityMedicationDispense constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityMedicationDispense(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityMedicationDispense(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityPrecondition constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityPrecondition(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityPrecondition(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationActivityDrugVehicle constraint of '<em>Medication Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationActivity_validateMedicationActivityDrugVehicle(
			MedicationActivity medicationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationActivity.validateMedicationActivityDrugVehicle(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity(NonMedicinalSupplyActivity nonMedicinalSupplyActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(nonMedicinalSupplyActivity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(nonMedicinalSupplyActivity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSupply_validateClassCode(nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityMoodCode(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasAuthor(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasPerformer(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasParticipantLocation(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityInformationSource(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasProduct(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasIntentAuthor(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasAuthorTime(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasAssignedAuthor(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasAssignedAuthorID(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasAssignedAuthorPersonOrOrg(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasPerformerTimeEvent(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasPerformerTimeIntent(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasPerformerAssignedEntity(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasPerformerAssignedEntityID(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasPerformerEntityPersonOrOrg(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityQuantityHasValue(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityOrderNumber(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityOrderExpiration(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityQuantityOrdered(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityQuantityUnit(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityPrescriptionNumber(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityAssigningAuthority(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityDispenseDate(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityDispensingPharmacyLocation(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityQuantityDispensed(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasFillNumber(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityTemplateId(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityId(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityStatusCode(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityEffectiveTime(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityRepeatNumber(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityQuantity(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityProductInstance(
				nonMedicinalSupplyActivity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityMoodCode constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityMoodCode(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasAuthor constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasAuthor(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasPerformer constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasPerformer(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasPerformer(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasParticipantLocation constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasParticipantLocation(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasParticipantLocation(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityInformationSource constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityInformationSource(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasProduct constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasProduct(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasProduct(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasIntentAuthor constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasIntentAuthor(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasIntentAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasAuthorTime constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasAuthorTime(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasAuthorTime(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasAssignedAuthor constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasAssignedAuthor(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasAssignedAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasAssignedAuthorID constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasAssignedAuthorID(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasAssignedAuthorID(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasAssignedAuthorPersonOrOrg constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasAssignedAuthorPersonOrOrg(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasAssignedAuthorPersonOrOrg(
			diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasPerformerTimeEvent constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasPerformerTimeEvent(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasPerformerTimeEvent(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasPerformerTimeIntent constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasPerformerTimeIntent(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasPerformerTimeIntent(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasPerformerAssignedEntity constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasPerformerAssignedEntity(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasPerformerAssignedEntity(
			diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasPerformerAssignedEntityID constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasPerformerAssignedEntityID(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasPerformerAssignedEntityID(
			diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasPerformerEntityPersonOrOrg constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasPerformerEntityPersonOrOrg(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasPerformerEntityPersonOrOrg(
			diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityQuantityHasValue constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityQuantityHasValue(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityQuantityHasValue(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityOrderNumber constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityOrderNumber(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityOrderNumber(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityOrderExpiration constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityOrderExpiration(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityOrderExpiration(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityQuantityOrdered constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityQuantityOrdered(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityQuantityOrdered(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityQuantityUnit constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityQuantityUnit(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityQuantityUnit(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityPrescriptionNumber constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityPrescriptionNumber(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityPrescriptionNumber(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityAssigningAuthority constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityAssigningAuthority(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityAssigningAuthority(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityDispenseDate constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityDispenseDate(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityDispenseDate(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityDispensingPharmacyLocation constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityDispensingPharmacyLocation(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityDispensingPharmacyLocation(
			diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityQuantityDispensed constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityQuantityDispensed(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityQuantityDispensed(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityHasFillNumber constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityHasFillNumber(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityHasFillNumber(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityTemplateId constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityTemplateId(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityId constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityId(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityId(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityStatusCode constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityStatusCode(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityEffectiveTime constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityEffectiveTime(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityRepeatNumber constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityRepeatNumber(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityRepeatNumber(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityQuantity constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityQuantity(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateNonMedicinalSupplyActivityProductInstance constraint of '<em>Non Medicinal Supply Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonMedicinalSupplyActivity_validateNonMedicinalSupplyActivityProductInstance(
			NonMedicinalSupplyActivity nonMedicinalSupplyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return nonMedicinalSupplyActivity.validateNonMedicinalSupplyActivityProductInstance(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProductInstance(ProductInstance productInstance, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(productInstance, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(productInstance, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipantRole_validatePlayingEntityChoice(
				productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProductInstance_validateProductInstanceHasScopingEntity(
				productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProductInstance_validateProductInstanceTemplateId(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProductInstance_validateProductInstanceClassCode(productInstance, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProductInstanceHasScopingEntity constraint of '<em>Product Instance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProductInstance_validateProductInstanceHasScopingEntity(ProductInstance productInstance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return productInstance.validateProductInstanceHasScopingEntity(diagnostics, context);
	}

	/**
	 * Validates the validateProductInstanceTemplateId constraint of '<em>Product Instance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProductInstance_validateProductInstanceTemplateId(ProductInstance productInstance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return productInstance.validateProductInstanceTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProductInstanceClassCode constraint of '<em>Product Instance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProductInstance_validateProductInstanceClassCode(ProductInstance productInstance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return productInstance.validateProductInstanceClassCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInstructions(Instructions instructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(instructions, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(instructions, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(instructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(instructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(instructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(instructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(instructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(instructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInstructions_validateInstructionsTextReference(instructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInstructions_validateInstructionsTextReferenceValue(instructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInstructions_validateInstructionsTemplateId(instructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInstructions_validateInstructionsClassCode(instructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInstructions_validateInstructionsMoodCode(instructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInstructions_validateInstructionsText(instructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInstructions_validateInstructionsStatusCode(instructions, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateInstructionsTextReference constraint of '<em>Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInstructions_validateInstructionsTextReference(Instructions instructions,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return instructions.validateInstructionsTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateInstructionsTextReferenceValue constraint of '<em>Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInstructions_validateInstructionsTextReferenceValue(Instructions instructions,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return instructions.validateInstructionsTextReferenceValue(diagnostics, context);
	}

	/**
	 * Validates the validateInstructionsTemplateId constraint of '<em>Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInstructions_validateInstructionsTemplateId(Instructions instructions,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return instructions.validateInstructionsTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateInstructionsClassCode constraint of '<em>Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInstructions_validateInstructionsClassCode(Instructions instructions,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return instructions.validateInstructionsClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateInstructionsMoodCode constraint of '<em>Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInstructions_validateInstructionsMoodCode(Instructions instructions,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return instructions.validateInstructionsMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateInstructionsText constraint of '<em>Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInstructions_validateInstructionsText(Instructions instructions,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return instructions.validateInstructionsText(diagnostics, context);
	}

	/**
	 * Validates the validateInstructionsStatusCode constraint of '<em>Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInstructions_validateInstructionsStatusCode(Instructions instructions,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return instructions.validateInstructionsStatusCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication(Indication indication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(indication, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(indication, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIndication_validateIndicationCodeNullFlavor(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIndication_validateIndicationTemplateId(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIndication_validateIndicationClassCode(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIndication_validateIndicationMoodCode(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIndication_validateIndicationId(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIndication_validateIndicationCode(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIndication_validateIndicationStatusCode(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIndication_validateIndicationEffectiveTime(indication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIndication_validateIndicationValue(indication, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateIndicationCodeNullFlavor constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationCodeNullFlavor(Indication indication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return indication.validateIndicationCodeNullFlavor(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationTemplateId constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationTemplateId(Indication indication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return indication.validateIndicationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationClassCode constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationClassCode(Indication indication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return indication.validateIndicationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationCode constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationCode(Indication indication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return indication.validateIndicationCode(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationEffectiveTime constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationEffectiveTime(Indication indication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return indication.validateIndicationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationId constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationId(Indication indication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return indication.validateIndicationId(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationMoodCode constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationMoodCode(Indication indication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return indication.validateIndicationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationStatusCode constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationStatusCode(Indication indication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return indication.validateIndicationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationValue constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationValue(Indication indication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return indication.validateIndicationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationDispense(MedicationDispense medicationDispense, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationDispense, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationDispense, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSupply_validateClassCode(medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationDispense_validateMedicationDispenseTemplateId(
				medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationDispense_validateMedicationDispenseClassCode(
				medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationDispense_validateMedicationDispenseEffectiveTime(
				medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationDispense_validateMedicationDispenseId(medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationDispense_validateMedicationDispenseMoodCode(
				medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationDispense_validateMedicationDispenseRepeatNumber(
				medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationDispense_validateMedicationDispenseStatusCode(
				medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationDispense_validateMedicationDispensePerformer2(
				medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationDispense_validateMedicationDispenseAssignedEntity(
				medicationDispense, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationDispense_validateMedicationDispenseMedicationSupplyOrder(
				medicationDispense, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationDispenseTemplateId constraint of '<em>Medication Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationDispense_validateMedicationDispenseTemplateId(
			MedicationDispense medicationDispense, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationDispense.validateMedicationDispenseTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationDispenseClassCode constraint of '<em>Medication Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationDispense_validateMedicationDispenseClassCode(
			MedicationDispense medicationDispense, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationDispense.validateMedicationDispenseClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationDispenseEffectiveTime constraint of '<em>Medication Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationDispense_validateMedicationDispenseEffectiveTime(
			MedicationDispense medicationDispense, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationDispense.validateMedicationDispenseEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationDispenseId constraint of '<em>Medication Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationDispense_validateMedicationDispenseId(MedicationDispense medicationDispense,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationDispense.validateMedicationDispenseId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationDispenseMoodCode constraint of '<em>Medication Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationDispense_validateMedicationDispenseMoodCode(MedicationDispense medicationDispense,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationDispense.validateMedicationDispenseMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationDispenseRepeatNumber constraint of '<em>Medication Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationDispense_validateMedicationDispenseRepeatNumber(
			MedicationDispense medicationDispense, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationDispense.validateMedicationDispenseRepeatNumber(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationDispenseStatusCode constraint of '<em>Medication Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationDispense_validateMedicationDispenseStatusCode(
			MedicationDispense medicationDispense, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationDispense.validateMedicationDispenseStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationDispensePerformer2 constraint of '<em>Medication Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationDispense_validateMedicationDispensePerformer2(
			MedicationDispense medicationDispense, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationDispense.validateMedicationDispensePerformer2(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationDispenseAssignedEntity constraint of '<em>Medication Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationDispense_validateMedicationDispenseAssignedEntity(
			MedicationDispense medicationDispense, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationDispense.validateMedicationDispenseAssignedEntity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationDispenseMedicationSupplyOrder constraint of '<em>Medication Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationDispense_validateMedicationDispenseMedicationSupplyOrder(
			MedicationDispense medicationDispense, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationDispense.validateMedicationDispenseMedicationSupplyOrder(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSupplyOrder(MedicationSupplyOrder medicationSupplyOrder,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationSupplyOrder, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationSupplyOrder, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSupply_validateClassCode(medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSupplyOrder_validateMedicationSupplyOrderTemplateId(
				medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSupplyOrder_validateMedicationSupplyOrderClassCode(
				medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSupplyOrder_validateMedicationSupplyOrderEffectiveTime(
				medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSupplyOrder_validateMedicationSupplyOrderMoodCode(
				medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSupplyOrder_validateMedicationSupplyOrderQuantity(
				medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSupplyOrder_validateMedicationSupplyOrderRepeatNumber(
				medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSupplyOrder_validateMedicationSupplyOrderStatusCode(
				medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSupplyOrder_validateMedicationSupplyOrderId(
				medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSupplyOrder_validateMedicationSupplyOrderAuthor(
				medicationSupplyOrder, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSupplyOrder_validateMedicationSupplyOrderInstructions(
				medicationSupplyOrder, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationSupplyOrderTemplateId constraint of '<em>Medication Supply Order</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSupplyOrder_validateMedicationSupplyOrderTemplateId(
			MedicationSupplyOrder medicationSupplyOrder, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSupplyOrder.validateMedicationSupplyOrderTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSupplyOrderClassCode constraint of '<em>Medication Supply Order</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSupplyOrder_validateMedicationSupplyOrderClassCode(
			MedicationSupplyOrder medicationSupplyOrder, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSupplyOrder.validateMedicationSupplyOrderClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSupplyOrderEffectiveTime constraint of '<em>Medication Supply Order</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSupplyOrder_validateMedicationSupplyOrderEffectiveTime(
			MedicationSupplyOrder medicationSupplyOrder, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSupplyOrder.validateMedicationSupplyOrderEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSupplyOrderMoodCode constraint of '<em>Medication Supply Order</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSupplyOrder_validateMedicationSupplyOrderMoodCode(
			MedicationSupplyOrder medicationSupplyOrder, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSupplyOrder.validateMedicationSupplyOrderMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSupplyOrderQuantity constraint of '<em>Medication Supply Order</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSupplyOrder_validateMedicationSupplyOrderQuantity(
			MedicationSupplyOrder medicationSupplyOrder, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSupplyOrder.validateMedicationSupplyOrderQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSupplyOrderRepeatNumber constraint of '<em>Medication Supply Order</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSupplyOrder_validateMedicationSupplyOrderRepeatNumber(
			MedicationSupplyOrder medicationSupplyOrder, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSupplyOrder.validateMedicationSupplyOrderRepeatNumber(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSupplyOrderStatusCode constraint of '<em>Medication Supply Order</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSupplyOrder_validateMedicationSupplyOrderStatusCode(
			MedicationSupplyOrder medicationSupplyOrder, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSupplyOrder.validateMedicationSupplyOrderStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSupplyOrderId constraint of '<em>Medication Supply Order</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSupplyOrder_validateMedicationSupplyOrderId(
			MedicationSupplyOrder medicationSupplyOrder, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSupplyOrder.validateMedicationSupplyOrderId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSupplyOrderAuthor constraint of '<em>Medication Supply Order</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSupplyOrder_validateMedicationSupplyOrderAuthor(
			MedicationSupplyOrder medicationSupplyOrder, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSupplyOrder.validateMedicationSupplyOrderAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSupplyOrderInstructions constraint of '<em>Medication Supply Order</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSupplyOrder_validateMedicationSupplyOrderInstructions(
			MedicationSupplyOrder medicationSupplyOrder, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSupplyOrder.validateMedicationSupplyOrderInstructions(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugVehicle(DrugVehicle drugVehicle, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(drugVehicle, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(drugVehicle, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(drugVehicle, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(drugVehicle, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(drugVehicle, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(drugVehicle, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(drugVehicle, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(drugVehicle, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipantRole_validatePlayingEntityChoice(
				drugVehicle, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDrugVehicle_validateDrugVehiclePlayingEntityCode(drugVehicle, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDrugVehicle_validateDrugVehicleTemplateId(drugVehicle, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDrugVehicle_validateDrugVehicleClassCode(drugVehicle, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDrugVehicle_validateDrugVehicleCode(drugVehicle, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDrugVehicle_validateDrugVehiclePlayingEntity(drugVehicle, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateDrugVehiclePlayingEntityCode constraint of '<em>Drug Vehicle</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugVehicle_validateDrugVehiclePlayingEntityCode(DrugVehicle drugVehicle,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugVehicle.validateDrugVehiclePlayingEntityCode(diagnostics, context);
	}

	/**
	 * Validates the validateDrugVehicleTemplateId constraint of '<em>Drug Vehicle</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugVehicle_validateDrugVehicleTemplateId(DrugVehicle drugVehicle,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugVehicle.validateDrugVehicleTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateDrugVehicleClassCode constraint of '<em>Drug Vehicle</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugVehicle_validateDrugVehicleClassCode(DrugVehicle drugVehicle,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugVehicle.validateDrugVehicleClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateDrugVehicleCode constraint of '<em>Drug Vehicle</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugVehicle_validateDrugVehicleCode(DrugVehicle drugVehicle, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return drugVehicle.validateDrugVehicleCode(diagnostics, context);
	}

	/**
	 * Validates the validateDrugVehiclePlayingEntity constraint of '<em>Drug Vehicle</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugVehicle_validateDrugVehiclePlayingEntity(DrugVehicle drugVehicle,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugVehicle.validateDrugVehiclePlayingEntity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationSeriesNumberObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationSeriesNumberObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationTemplateId(
				medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationClassCode(
				medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationMoodCode(
				medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationCode(
				medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationStatusCode(
				medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationValue(
				medicationSeriesNumberObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationSeriesNumberObservationTemplateId constraint of '<em>Medication Series Number Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationTemplateId(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationSeriesNumberObservation.validateMedicationSeriesNumberObservationTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSeriesNumberObservationClassCode constraint of '<em>Medication Series Number Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationClassCode(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationSeriesNumberObservation.validateMedicationSeriesNumberObservationClassCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSeriesNumberObservationMoodCode constraint of '<em>Medication Series Number Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationMoodCode(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationSeriesNumberObservation.validateMedicationSeriesNumberObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSeriesNumberObservationCode constraint of '<em>Medication Series Number Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationCode(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationSeriesNumberObservation.validateMedicationSeriesNumberObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSeriesNumberObservationStatusCode constraint of '<em>Medication Series Number Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationStatusCode(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationSeriesNumberObservation.validateMedicationSeriesNumberObservationStatusCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSeriesNumberObservationValue constraint of '<em>Medication Series Number Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationValue(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationSeriesNumberObservation.validateMedicationSeriesNumberObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation(MedicationStatusObservation medicationStatusObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationStatusObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationStatusObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationNoAdditionalParticipants(
				medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationNoAdditionalRelationships(
				medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationTemplateId(
				medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationClassCode(
				medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationMoodCode(
				medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationCode(
				medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationStatusCode(
				medicationStatusObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationStatusObservationNoAdditionalParticipants constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationNoAdditionalParticipants(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationNoAdditionalParticipants(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusObservationNoAdditionalRelationships constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationNoAdditionalRelationships(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationNoAdditionalRelationships(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusObservationTemplateId constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationTemplateId(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusObservationClassCode constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationClassCode(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusObservationMoodCode constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationMoodCode(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusObservationCode constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationCode(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusObservationStatusCode constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationStatusCode(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationStatusCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInternalReference(InternalReference internalReference, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(internalReference, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(internalReference, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInternalReference_validateInternalReferenceId(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInternalReference_validateInternalReferenceCode(internalReference, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateInternalReferenceId constraint of '<em>Internal Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInternalReference_validateInternalReferenceId(InternalReference internalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return internalReference.validateInternalReferenceId(diagnostics, context);
	}

	/**
	 * Validates the validateInternalReferenceCode constraint of '<em>Internal Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInternalReference_validateInternalReferenceCode(InternalReference internalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return internalReference.validateInternalReferenceCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationType(MedicationType medicationType, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationType, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationType, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationType, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationType, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationType, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationType, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationType, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationType, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationType_validateMedicationTypeCode(medicationType, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationTypeCode constraint of '<em>Medication Type</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationType_validateMedicationTypeCode(MedicationType medicationType,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationType.validateMedicationTypeCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationFullfillmentInstructions(
			MedicationFullfillmentInstructions medicationFullfillmentInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationFullfillmentInstructions, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationFullfillmentInstructions, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsMoodCode(
				medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsCode(
				medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsText(
				medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsStatusCode(
				medicationFullfillmentInstructions, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationFullfillmentInstructionsMoodCode constraint of '<em>Medication Fullfillment Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsMoodCode(
			MedicationFullfillmentInstructions medicationFullfillmentInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationFullfillmentInstructions.validateMedicationFullfillmentInstructionsMoodCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationFullfillmentInstructionsCode constraint of '<em>Medication Fullfillment Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsCode(
			MedicationFullfillmentInstructions medicationFullfillmentInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationFullfillmentInstructions.validateMedicationFullfillmentInstructionsCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationFullfillmentInstructionsText constraint of '<em>Medication Fullfillment Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsText(
			MedicationFullfillmentInstructions medicationFullfillmentInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationFullfillmentInstructions.validateMedicationFullfillmentInstructionsText(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationFullfillmentInstructionsStatusCode constraint of '<em>Medication Fullfillment Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsStatusCode(
			MedicationFullfillmentInstructions medicationFullfillmentInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationFullfillmentInstructions.validateMedicationFullfillmentInstructionsStatusCode(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemConcernAct(ProblemConcernAct problemConcernAct, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(problemConcernAct, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(problemConcernAct, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemConcernAct_validateProblemConcernActEffectiveTimeLow(
				problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemConcernAct_validateProblemConcernActEffectiveTimeHigh(
				problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemConcernAct_validateProblemConcernActTemplateId(
				problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemConcernAct_validateProblemConcernActClassCode(
				problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemConcernAct_validateProblemConcernActMoodCode(
				problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemConcernAct_validateProblemConcernActId(problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemConcernAct_validateProblemConcernActCode(problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemConcernAct_validateProblemConcernActEffectiveTime(
				problemConcernAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemConcernAct_validateProblemConcernActProblemObservation(
				problemConcernAct, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProblemConcernActEffectiveTimeLow constraint of '<em>Problem Concern Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemConcernAct_validateProblemConcernActEffectiveTimeLow(
			ProblemConcernAct problemConcernAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemConcernAct.validateProblemConcernActEffectiveTimeLow(diagnostics, context);
	}

	/**
	 * Validates the validateProblemConcernActEffectiveTimeHigh constraint of '<em>Problem Concern Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemConcernAct_validateProblemConcernActEffectiveTimeHigh(
			ProblemConcernAct problemConcernAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemConcernAct.validateProblemConcernActEffectiveTimeHigh(diagnostics, context);
	}

	/**
	 * Validates the validateProblemConcernActTemplateId constraint of '<em>Problem Concern Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemConcernAct_validateProblemConcernActTemplateId(ProblemConcernAct problemConcernAct,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemConcernAct.validateProblemConcernActTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProblemConcernActClassCode constraint of '<em>Problem Concern Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemConcernAct_validateProblemConcernActClassCode(ProblemConcernAct problemConcernAct,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemConcernAct.validateProblemConcernActClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemConcernActMoodCode constraint of '<em>Problem Concern Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemConcernAct_validateProblemConcernActMoodCode(ProblemConcernAct problemConcernAct,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemConcernAct.validateProblemConcernActMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemConcernActId constraint of '<em>Problem Concern Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemConcernAct_validateProblemConcernActId(ProblemConcernAct problemConcernAct,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemConcernAct.validateProblemConcernActId(diagnostics, context);
	}

	/**
	 * Validates the validateProblemConcernActCode constraint of '<em>Problem Concern Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemConcernAct_validateProblemConcernActCode(ProblemConcernAct problemConcernAct,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemConcernAct.validateProblemConcernActCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemConcernActEffectiveTime constraint of '<em>Problem Concern Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemConcernAct_validateProblemConcernActEffectiveTime(
			ProblemConcernAct problemConcernAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemConcernAct.validateProblemConcernActEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateProblemConcernActProblemObservation constraint of '<em>Problem Concern Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemConcernAct_validateProblemConcernActProblemObservation(
			ProblemConcernAct problemConcernAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemConcernAct.validateProblemConcernActProblemObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation(ProblemObservation problemObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(problemObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(problemObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationHasTextReference(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationHasTextReferenceValue(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationAgeObservationInversion(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationTemplateId(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationClassCode(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationMoodCode(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationNegationInd(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationId(problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationCode(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationText(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationStatusCode(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationEffectiveTime(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationValue(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationAgeObservation(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationHealthStatusObservation(
				problemObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemObservation_validateProblemObservationProblemStatus(
				problemObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProblemObservationHasTextReference constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationHasTextReference(
			ProblemObservation problemObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationHasTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationHasTextReferenceValue constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationHasTextReferenceValue(
			ProblemObservation problemObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationHasTextReferenceValue(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationAgeObservationInversion constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationAgeObservationInversion(
			ProblemObservation problemObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationAgeObservationInversion(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationTemplateId constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationTemplateId(
			ProblemObservation problemObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationClassCode constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationClassCode(
			ProblemObservation problemObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationMoodCode constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationMoodCode(ProblemObservation problemObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationNegationInd constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationNegationInd(
			ProblemObservation problemObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationNegationInd(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationId constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationId(ProblemObservation problemObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationId(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationCode constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationCode(ProblemObservation problemObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationText constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationText(ProblemObservation problemObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationText(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationStatusCode constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationStatusCode(
			ProblemObservation problemObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationEffectiveTime constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationEffectiveTime(
			ProblemObservation problemObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationValue constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationValue(ProblemObservation problemObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationValue(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationAgeObservation constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationAgeObservation(
			ProblemObservation problemObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationAgeObservation(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationHealthStatusObservation constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationHealthStatusObservation(
			ProblemObservation problemObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationHealthStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateProblemObservationProblemStatus constraint of '<em>Problem Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemObservation_validateProblemObservationProblemStatus(
			ProblemObservation problemObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemObservation.validateProblemObservationProblemStatus(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatus(ProblemStatus problemStatus, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(problemStatus, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(problemStatus, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatus_validateProblemStatusTextReference(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatus_validateProblemStatusTextReferenceValue(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatus_validateProblemStatusTemplateId(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatus_validateProblemStatusClassCode(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatus_validateProblemStatusMoodCode(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatus_validateProblemStatusCode(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatus_validateProblemStatusText(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatus_validateProblemStatusStatusCode(problemStatus, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatus_validateProblemStatusValue(problemStatus, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProblemStatusTextReference constraint of '<em>Problem Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatus_validateProblemStatusTextReference(ProblemStatus problemStatus,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatus.validateProblemStatusTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusTextReferenceValue constraint of '<em>Problem Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatus_validateProblemStatusTextReferenceValue(ProblemStatus problemStatus,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatus.validateProblemStatusTextReferenceValue(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusTemplateId constraint of '<em>Problem Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatus_validateProblemStatusTemplateId(ProblemStatus problemStatus,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatus.validateProblemStatusTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusClassCode constraint of '<em>Problem Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatus_validateProblemStatusClassCode(ProblemStatus problemStatus,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatus.validateProblemStatusClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusMoodCode constraint of '<em>Problem Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatus_validateProblemStatusMoodCode(ProblemStatus problemStatus,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatus.validateProblemStatusMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusCode constraint of '<em>Problem Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatus_validateProblemStatusCode(ProblemStatus problemStatus,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatus.validateProblemStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusStatusCode constraint of '<em>Problem Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatus_validateProblemStatusStatusCode(ProblemStatus problemStatus,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatus.validateProblemStatusStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusText constraint of '<em>Problem Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatus_validateProblemStatusText(ProblemStatus problemStatus,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatus.validateProblemStatusText(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusValue constraint of '<em>Problem Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatus_validateProblemStatusValue(ProblemStatus problemStatus,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatus.validateProblemStatusValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument(ContinuityOfCareDocument continuityOfCareDocument,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(continuityOfCareDocument, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(continuityOfCareDocument, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateGeneralHeaderConstraintsTemplateId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRealmCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTypeId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateGeneralHeaderConstraintsCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTitle(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsEffectiveTime(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsConfidentialityCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSetId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsVersionNumber(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthor(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEnterer(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodian(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipient(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticator(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticator(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTarget(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOf(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformant(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSupportParticipant(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOf(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAddr(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorTelecom(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthor(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAddr(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityTelecom(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodian(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipient(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorTime(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorSignatureCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityAddr(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorTime(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorSignatureCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntity(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToYear(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToDay(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientName(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleAddr(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleTelecom(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatient(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRole(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounter(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityAddr(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityPerson(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityAddr(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityPerson(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportTime(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrderId(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrder(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentServiceEventRequired(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentServiceEventClassCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentServiceEventEffectiveTime(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentLanguageCodeFormat(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentNoTemplateIdExtension(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentHasEffectiveTimeSeconds(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentHasEffectiveTimeZone(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentOneOrTwoRecordTarget(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentHasAssignedAuthor(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentHasAssignedAuthorNullFlavor(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentHasInformationRecipient(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentHealthcareProvider(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentLanguageCode(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentAdvanceDirectivesSection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentAllergiesSection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentEncountersSection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentImmunizationsSection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentPayersSection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentMedicationsSection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentPlanOfCareSection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentProceduresSection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentVitalSignsSection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentFamilyHistorySection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentSocialHistorySection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentResultsSection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentMedicalEquipmentSection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentFunctionalStatusSection(
				continuityOfCareDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateContinuityOfCareDocument_validateContinuityOfCareDocumentProblemSection(
				continuityOfCareDocument, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateContinuityOfCareDocumentServiceEventRequired constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentServiceEventRequired(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentServiceEventRequired(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentServiceEventClassCode constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentServiceEventClassCode(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentServiceEventClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentServiceEventEffectiveTime constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentServiceEventEffectiveTime(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentServiceEventEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentLanguageCodeFormat constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentLanguageCodeFormat(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentLanguageCodeFormat(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentNoTemplateIdExtension constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentNoTemplateIdExtension(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentNoTemplateIdExtension(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentHasEffectiveTimeSeconds constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentHasEffectiveTimeSeconds(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentHasEffectiveTimeSeconds(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentHasEffectiveTimeZone constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentHasEffectiveTimeZone(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentHasEffectiveTimeZone(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentOneOrTwoRecordTarget constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentOneOrTwoRecordTarget(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentOneOrTwoRecordTarget(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentHasAssignedAuthor constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentHasAssignedAuthor(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentHasAssignedAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentHasAssignedAuthorNullFlavor constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentHasAssignedAuthorNullFlavor(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentHasAssignedAuthorNullFlavor(
			diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentHasInformationRecipient constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentHasInformationRecipient(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentHasInformationRecipient(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentHealthcareProvider constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentHealthcareProvider(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentHealthcareProvider(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentLanguageCode constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentLanguageCode(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentLanguageCode(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentAdvanceDirectivesSection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentAdvanceDirectivesSection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentAdvanceDirectivesSection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentAllergiesSection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentAllergiesSection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentAllergiesSection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentEncountersSection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentEncountersSection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentEncountersSection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentImmunizationsSection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentImmunizationsSection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentImmunizationsSection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentPayersSection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentPayersSection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentPayersSection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentMedicationsSection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentMedicationsSection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentMedicationsSection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentPlanOfCareSection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentPlanOfCareSection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentPlanOfCareSection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentProceduresSection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentProceduresSection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentProceduresSection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentVitalSignsSection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentVitalSignsSection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentVitalSignsSection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentFamilyHistorySection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentFamilyHistorySection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentFamilyHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentSocialHistorySection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentSocialHistorySection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentSocialHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentResultsSection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentResultsSection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentResultsSection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentMedicalEquipmentSection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentMedicalEquipmentSection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentMedicalEquipmentSection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentFunctionalStatusSection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentFunctionalStatusSection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentFunctionalStatusSection(diagnostics, context);
	}

	/**
	 * Validates the validateContinuityOfCareDocumentProblemSection constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateContinuityOfCareDocumentProblemSection(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateContinuityOfCareDocumentProblemSection(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsTemplateId constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateGeneralHeaderConstraintsTemplateId(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateGeneralHeaderConstraintsTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsCode constraint of '<em>Continuity Of Care Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateContinuityOfCareDocument_validateGeneralHeaderConstraintsCode(
			ContinuityOfCareDocument continuityOfCareDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return continuityOfCareDocument.validateGeneralHeaderConstraintsCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSectionEntriesOptional(
			AdvanceDirectivesSectionEntriesOptional advanceDirectivesSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(advanceDirectivesSectionEntriesOptional, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			advanceDirectivesSectionEntriesOptional, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(advanceDirectivesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(advanceDirectivesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(advanceDirectivesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(advanceDirectivesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(advanceDirectivesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(advanceDirectivesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				advanceDirectivesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				advanceDirectivesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSectionEntriesOptional_validateAdvanceDirectivesSectionEntriesOptionalTemplateId(
				advanceDirectivesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSectionEntriesOptional_validateAdvanceDirectivesSectionEntriesOptionalCode(
				advanceDirectivesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSectionEntriesOptional_validateAdvanceDirectivesSectionEntriesOptionalTitle(
				advanceDirectivesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSectionEntriesOptional_validateAdvanceDirectivesSectionEntriesOptionalText(
				advanceDirectivesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSectionEntriesOptional_validateAdvanceDirectivesSectionEntriesOptionalAdvanceDirectiveObservation(
				advanceDirectivesSectionEntriesOptional, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionEntriesOptionalTemplateId constraint of '<em>Advance Directives Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSectionEntriesOptional_validateAdvanceDirectivesSectionEntriesOptionalTemplateId(
			AdvanceDirectivesSectionEntriesOptional advanceDirectivesSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSectionEntriesOptional.validateAdvanceDirectivesSectionEntriesOptionalTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionEntriesOptionalCode constraint of '<em>Advance Directives Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSectionEntriesOptional_validateAdvanceDirectivesSectionEntriesOptionalCode(
			AdvanceDirectivesSectionEntriesOptional advanceDirectivesSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSectionEntriesOptional.validateAdvanceDirectivesSectionEntriesOptionalCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionEntriesOptionalTitle constraint of '<em>Advance Directives Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSectionEntriesOptional_validateAdvanceDirectivesSectionEntriesOptionalTitle(
			AdvanceDirectivesSectionEntriesOptional advanceDirectivesSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSectionEntriesOptional.validateAdvanceDirectivesSectionEntriesOptionalTitle(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionEntriesOptionalText constraint of '<em>Advance Directives Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSectionEntriesOptional_validateAdvanceDirectivesSectionEntriesOptionalText(
			AdvanceDirectivesSectionEntriesOptional advanceDirectivesSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSectionEntriesOptional.validateAdvanceDirectivesSectionEntriesOptionalText(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionEntriesOptionalAdvanceDirectiveObservation constraint of '<em>Advance Directives Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSectionEntriesOptional_validateAdvanceDirectivesSectionEntriesOptionalAdvanceDirectiveObservation(
			AdvanceDirectivesSectionEntriesOptional advanceDirectivesSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSectionEntriesOptional.validateAdvanceDirectivesSectionEntriesOptionalAdvanceDirectiveObservation(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesSection(AllergiesSection allergiesSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(allergiesSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(allergiesSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesSection_validateAllergiesSectionEntriesOptionalTemplateId(
				allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesSection_validateAllergiesSectionEntriesOptionalCode(
				allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesSectionEntriesOptional_validateAllergiesSectionEntriesOptionalTitle(
				allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesSectionEntriesOptional_validateAllergiesSectionEntriesOptionalText(
				allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesSectionEntriesOptional_validateAllergiesSectionEntriesOptionalAllergyProblemAct(
				allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesSection_validateAllergiesSectionTitle(allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesSection_validateAllergiesSectionText(allergiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesSection_validateAllergiesSectionAllergyDrugSensitivity(
				allergiesSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAllergiesSectionEntriesOptionalCode constraint of '<em>Allergies Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesSection_validateAllergiesSectionEntriesOptionalCode(
			AllergiesSection allergiesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergiesSection.validateAllergiesSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergiesSectionTitle constraint of '<em>Allergies Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesSection_validateAllergiesSectionTitle(AllergiesSection allergiesSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergiesSection.validateAllergiesSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateAllergiesSectionText constraint of '<em>Allergies Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesSection_validateAllergiesSectionText(AllergiesSection allergiesSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergiesSection.validateAllergiesSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateAllergiesSectionAllergyDrugSensitivity constraint of '<em>Allergies Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesSection_validateAllergiesSectionAllergyDrugSensitivity(
			AllergiesSection allergiesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergiesSection.validateAllergiesSectionAllergyDrugSensitivity(diagnostics, context);
	}

	/**
	 * Validates the validateAllergiesSectionEntriesOptionalTemplateId constraint of '<em>Allergies Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesSection_validateAllergiesSectionEntriesOptionalTemplateId(
			AllergiesSection allergiesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergiesSection.validateAllergiesSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesSectionEntriesOptional(
			AllergiesSectionEntriesOptional allergiesSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(allergiesSectionEntriesOptional, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(allergiesSectionEntriesOptional, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(allergiesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(allergiesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(allergiesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(allergiesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(allergiesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(allergiesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				allergiesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				allergiesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesSectionEntriesOptional_validateAllergiesSectionEntriesOptionalTemplateId(
				allergiesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesSectionEntriesOptional_validateAllergiesSectionEntriesOptionalCode(
				allergiesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesSectionEntriesOptional_validateAllergiesSectionEntriesOptionalTitle(
				allergiesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesSectionEntriesOptional_validateAllergiesSectionEntriesOptionalText(
				allergiesSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesSectionEntriesOptional_validateAllergiesSectionEntriesOptionalAllergyProblemAct(
				allergiesSectionEntriesOptional, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAllergiesSectionEntriesOptionalTemplateId constraint of '<em>Allergies Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesSectionEntriesOptional_validateAllergiesSectionEntriesOptionalTemplateId(
			AllergiesSectionEntriesOptional allergiesSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergiesSectionEntriesOptional.validateAllergiesSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAllergiesSectionEntriesOptionalCode constraint of '<em>Allergies Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesSectionEntriesOptional_validateAllergiesSectionEntriesOptionalCode(
			AllergiesSectionEntriesOptional allergiesSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergiesSectionEntriesOptional.validateAllergiesSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergiesSectionEntriesOptionalTitle constraint of '<em>Allergies Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesSectionEntriesOptional_validateAllergiesSectionEntriesOptionalTitle(
			AllergiesSectionEntriesOptional allergiesSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergiesSectionEntriesOptional.validateAllergiesSectionEntriesOptionalTitle(diagnostics, context);
	}

	/**
	 * Validates the validateAllergiesSectionEntriesOptionalText constraint of '<em>Allergies Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesSectionEntriesOptional_validateAllergiesSectionEntriesOptionalText(
			AllergiesSectionEntriesOptional allergiesSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergiesSectionEntriesOptional.validateAllergiesSectionEntriesOptionalText(diagnostics, context);
	}

	/**
	 * Validates the validateAllergiesSectionEntriesOptionalAllergyProblemAct constraint of '<em>Allergies Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesSectionEntriesOptional_validateAllergiesSectionEntriesOptionalAllergyProblemAct(
			AllergiesSectionEntriesOptional allergiesSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergiesSectionEntriesOptional.validateAllergiesSectionEntriesOptionalAllergyProblemAct(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSectionEntriesOptional(
			EncountersSectionEntriesOptional encountersSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(encountersSectionEntriesOptional, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(encountersSectionEntriesOptional, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(encountersSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(encountersSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(encountersSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(encountersSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(encountersSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(encountersSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				encountersSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				encountersSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalTemplateId(
				encountersSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalCode(
				encountersSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalTitle(
				encountersSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalText(
				encountersSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalEncounterActivities(
				encountersSectionEntriesOptional, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEncountersSectionEntriesOptionalTemplateId constraint of '<em>Encounters Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalTemplateId(
			EncountersSectionEntriesOptional encountersSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encountersSectionEntriesOptional.validateEncountersSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersSectionEntriesOptionalCode constraint of '<em>Encounters Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalCode(
			EncountersSectionEntriesOptional encountersSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encountersSectionEntriesOptional.validateEncountersSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersSectionEntriesOptionalTitle constraint of '<em>Encounters Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalTitle(
			EncountersSectionEntriesOptional encountersSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encountersSectionEntriesOptional.validateEncountersSectionEntriesOptionalTitle(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersSectionEntriesOptionalText constraint of '<em>Encounters Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalText(
			EncountersSectionEntriesOptional encountersSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encountersSectionEntriesOptional.validateEncountersSectionEntriesOptionalText(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersSectionEntriesOptionalEncounterActivities constraint of '<em>Encounters Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalEncounterActivities(
			EncountersSectionEntriesOptional encountersSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encountersSectionEntriesOptional.validateEncountersSectionEntriesOptionalEncounterActivities(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSectionEntriesOptional(
			ImmunizationsSectionEntriesOptional immunizationsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(immunizationsSectionEntriesOptional, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(immunizationsSectionEntriesOptional, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(immunizationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(immunizationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(immunizationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(immunizationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(immunizationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(immunizationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				immunizationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				immunizationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSectionEntriesOptional_validateImmunizationsSectionEntriesOptionalTemplateId(
				immunizationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSectionEntriesOptional_validateImmunizationsSectionEntriesOptionalCode(
				immunizationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSectionEntriesOptional_validateImmunizationsSectionEntriesOptionalTitle(
				immunizationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSectionEntriesOptional_validateImmunizationsSectionEntriesOptionalText(
				immunizationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSectionEntriesOptional_validateImmunizationsSectionEntriesOptionalImmunizationActivity(
				immunizationsSectionEntriesOptional, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateImmunizationsSectionEntriesOptionalTemplateId constraint of '<em>Immunizations Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSectionEntriesOptional_validateImmunizationsSectionEntriesOptionalTemplateId(
			ImmunizationsSectionEntriesOptional immunizationsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationsSectionEntriesOptional.validateImmunizationsSectionEntriesOptionalTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionEntriesOptionalCode constraint of '<em>Immunizations Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSectionEntriesOptional_validateImmunizationsSectionEntriesOptionalCode(
			ImmunizationsSectionEntriesOptional immunizationsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationsSectionEntriesOptional.validateImmunizationsSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionEntriesOptionalTitle constraint of '<em>Immunizations Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSectionEntriesOptional_validateImmunizationsSectionEntriesOptionalTitle(
			ImmunizationsSectionEntriesOptional immunizationsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationsSectionEntriesOptional.validateImmunizationsSectionEntriesOptionalTitle(
			diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionEntriesOptionalText constraint of '<em>Immunizations Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSectionEntriesOptional_validateImmunizationsSectionEntriesOptionalText(
			ImmunizationsSectionEntriesOptional immunizationsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationsSectionEntriesOptional.validateImmunizationsSectionEntriesOptionalText(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionEntriesOptionalImmunizationActivity constraint of '<em>Immunizations Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSectionEntriesOptional_validateImmunizationsSectionEntriesOptionalImmunizationActivity(
			ImmunizationsSectionEntriesOptional immunizationsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationsSectionEntriesOptional.validateImmunizationsSectionEntriesOptionalImmunizationActivity(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayersSection(PayersSection payersSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(payersSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(payersSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayersSection_validatePayersSectionTemplateId(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayersSection_validatePayersSectionCode(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayersSection_validatePayersSectionTitle(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayersSection_validatePayersSectionText(payersSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePayersSectionTemplateId constraint of '<em>Payers Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayersSection_validatePayersSectionTemplateId(PayersSection payersSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payersSection.validatePayersSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePayersSectionCode constraint of '<em>Payers Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayersSection_validatePayersSectionCode(PayersSection payersSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payersSection.validatePayersSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validatePayersSectionTitle constraint of '<em>Payers Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayersSection_validatePayersSectionTitle(PayersSection payersSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payersSection.validatePayersSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validatePayersSectionText constraint of '<em>Payers Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayersSection_validatePayersSectionText(PayersSection payersSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payersSection.validatePayersSectionText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCoverageActivity(CoverageActivity coverageActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(coverageActivity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(coverageActivity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(coverageActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(coverageActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(coverageActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(coverageActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(coverageActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(coverageActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCoverageActivity_validateCoverageActivityTemplateId(
				coverageActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCoverageActivity_validateCoverageActivityPolicyActivity(
				coverageActivity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateCoverageActivityTemplateId constraint of '<em>Coverage Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCoverageActivity_validateCoverageActivityTemplateId(CoverageActivity coverageActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return coverageActivity.validateCoverageActivityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateCoverageActivityPolicyActivity constraint of '<em>Coverage Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCoverageActivity_validateCoverageActivityPolicyActivity(CoverageActivity coverageActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return coverageActivity.validateCoverageActivityPolicyActivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePolicyActivity(PolicyActivity policyActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(policyActivity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(policyActivity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(policyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(policyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(policyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(policyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(policyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(policyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePolicyActivity_validatePolicyActivityTemplateId(policyActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePolicyActivity_validatePolicyActivityAuthorizationActivity(
				policyActivity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePolicyActivityTemplateId constraint of '<em>Policy Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePolicyActivity_validatePolicyActivityTemplateId(PolicyActivity policyActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return policyActivity.validatePolicyActivityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePolicyActivityAuthorizationActivity constraint of '<em>Policy Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePolicyActivity_validatePolicyActivityAuthorizationActivity(PolicyActivity policyActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return policyActivity.validatePolicyActivityAuthorizationActivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthorizationActivity(AuthorizationActivity authorizationActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(authorizationActivity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(authorizationActivity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(authorizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(authorizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(authorizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(authorizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(authorizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(authorizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAuthorizationActivity_validateAuthorizationActivityTemplateId(
				authorizationActivity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAuthorizationActivityTemplateId constraint of '<em>Authorization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAuthorizationActivity_validateAuthorizationActivityTemplateId(
			AuthorizationActivity authorizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return authorizationActivity.validateAuthorizationActivityTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection(MedicationsSection medicationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSection_validateMedicationsSectionEntriesOptionalTemplateId(
				medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSection_validateMedicationsSectionEntriesOptionalCode(
				medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSectionEntriesOptional_validateMedicationsSectionEntriesOptionalTitle(
				medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSectionEntriesOptional_validateMedicationsSectionEntriesOptionalText(
				medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSectionEntriesOptional_validateMedicationsSectionEntriesOptionalMedicationActivity(
				medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSection_validateMedicationsSectionTitle(
				medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSection_validateMedicationsSectionText(
				medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSection_validateMedicationsSectionMedication(
				medicationsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationsSectionEntriesOptionalCode constraint of '<em>Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection_validateMedicationsSectionEntriesOptionalCode(
			MedicationsSection medicationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationsSection.validateMedicationsSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionTitle constraint of '<em>Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection_validateMedicationsSectionTitle(MedicationsSection medicationsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationsSection.validateMedicationsSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionText constraint of '<em>Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection_validateMedicationsSectionText(MedicationsSection medicationsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationsSection.validateMedicationsSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionMedication constraint of '<em>Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection_validateMedicationsSectionMedication(
			MedicationsSection medicationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationsSection.validateMedicationsSectionMedication(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionEntriesOptionalTemplateId constraint of '<em>Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection_validateMedicationsSectionEntriesOptionalTemplateId(
			MedicationsSection medicationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationsSection.validateMedicationsSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSectionEntriesOptional(
			MedicationsSectionEntriesOptional medicationsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationsSectionEntriesOptional, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationsSectionEntriesOptional, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				medicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				medicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSectionEntriesOptional_validateMedicationsSectionEntriesOptionalTemplateId(
				medicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSectionEntriesOptional_validateMedicationsSectionEntriesOptionalCode(
				medicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSectionEntriesOptional_validateMedicationsSectionEntriesOptionalTitle(
				medicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSectionEntriesOptional_validateMedicationsSectionEntriesOptionalText(
				medicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSectionEntriesOptional_validateMedicationsSectionEntriesOptionalMedicationActivity(
				medicationsSectionEntriesOptional, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationsSectionEntriesOptionalTemplateId constraint of '<em>Medications Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSectionEntriesOptional_validateMedicationsSectionEntriesOptionalTemplateId(
			MedicationsSectionEntriesOptional medicationsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationsSectionEntriesOptional.validateMedicationsSectionEntriesOptionalTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionEntriesOptionalCode constraint of '<em>Medications Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSectionEntriesOptional_validateMedicationsSectionEntriesOptionalCode(
			MedicationsSectionEntriesOptional medicationsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationsSectionEntriesOptional.validateMedicationsSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionEntriesOptionalTitle constraint of '<em>Medications Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSectionEntriesOptional_validateMedicationsSectionEntriesOptionalTitle(
			MedicationsSectionEntriesOptional medicationsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationsSectionEntriesOptional.validateMedicationsSectionEntriesOptionalTitle(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionEntriesOptionalText constraint of '<em>Medications Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSectionEntriesOptional_validateMedicationsSectionEntriesOptionalText(
			MedicationsSectionEntriesOptional medicationsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationsSectionEntriesOptional.validateMedicationsSectionEntriesOptionalText(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionEntriesOptionalMedicationActivity constraint of '<em>Medications Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSectionEntriesOptional_validateMedicationsSectionEntriesOptionalMedicationActivity(
			MedicationsSectionEntriesOptional medicationsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationsSectionEntriesOptional.validateMedicationsSectionEntriesOptionalMedicationActivity(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection(PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(planOfCareSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionTemplateId(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionCode(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionText(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityAct(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityEncounter(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityObservation(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityProcedure(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivitySubstanceAdministration(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivitySupply(
				planOfCareSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareSectionTemplateId constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionTemplateId(PlanOfCareSection planOfCareSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionCode constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionCode(PlanOfCareSection planOfCareSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionText constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionText(PlanOfCareSection planOfCareSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionText(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionPlanOfCareActivityAct constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityAct(
			PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionPlanOfCareActivityAct(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionPlanOfCareActivityEncounter constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityEncounter(
			PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionPlanOfCareActivityEncounter(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionPlanOfCareActivityObservation constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityObservation(
			PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionPlanOfCareActivityObservation(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionPlanOfCareActivityProcedure constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityProcedure(
			PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionPlanOfCareActivityProcedure(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionPlanOfCareActivitySubstanceAdministration constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivitySubstanceAdministration(
			PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionPlanOfCareActivitySubstanceAdministration(
			diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionPlanOfCareActivitySupply constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivitySupply(
			PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionPlanOfCareActivitySupply(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityAct(PlanOfCareActivityAct planOfCareActivityAct,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareActivityAct, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(planOfCareActivityAct, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityAct_validatePlanOfCareActivityActTemplateId(
				planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityAct_validatePlanOfCareActivityActId(
				planOfCareActivityAct, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareActivityActTemplateId constraint of '<em>Plan Of Care Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityAct_validatePlanOfCareActivityActTemplateId(
			PlanOfCareActivityAct planOfCareActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivityAct.validatePlanOfCareActivityActTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityActId constraint of '<em>Plan Of Care Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityAct_validatePlanOfCareActivityActId(
			PlanOfCareActivityAct planOfCareActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivityAct.validatePlanOfCareActivityActId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityEncounter(PlanOfCareActivityEncounter planOfCareActivityEncounter,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareActivityEncounter, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(planOfCareActivityEncounter, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityEncounter_validatePlanOfCareActivityEncounterTemplateId(
				planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityEncounter_validatePlanOfCareActivityEncounterId(
				planOfCareActivityEncounter, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareActivityEncounterTemplateId constraint of '<em>Plan Of Care Activity Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityEncounter_validatePlanOfCareActivityEncounterTemplateId(
			PlanOfCareActivityEncounter planOfCareActivityEncounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityEncounter.validatePlanOfCareActivityEncounterTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityEncounterId constraint of '<em>Plan Of Care Activity Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityEncounter_validatePlanOfCareActivityEncounterId(
			PlanOfCareActivityEncounter planOfCareActivityEncounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityEncounter.validatePlanOfCareActivityEncounterId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityObservation(PlanOfCareActivityObservation planOfCareActivityObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareActivityObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(planOfCareActivityObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityObservation_validatePlanOfCareActivityObservationTemplateId(
				planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityObservation_validatePlanOfCareActivityObservationId(
				planOfCareActivityObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareActivityObservationTemplateId constraint of '<em>Plan Of Care Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityObservation_validatePlanOfCareActivityObservationTemplateId(
			PlanOfCareActivityObservation planOfCareActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityObservation.validatePlanOfCareActivityObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityObservationId constraint of '<em>Plan Of Care Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityObservation_validatePlanOfCareActivityObservationId(
			PlanOfCareActivityObservation planOfCareActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityObservation.validatePlanOfCareActivityObservationId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityProcedure(PlanOfCareActivityProcedure planOfCareActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareActivityProcedure, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(planOfCareActivityProcedure, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityProcedure_validatePlanOfCareActivityProcedureTemplateId(
				planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityProcedure_validatePlanOfCareActivityProcedureId(
				planOfCareActivityProcedure, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareActivityProcedureTemplateId constraint of '<em>Plan Of Care Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityProcedure_validatePlanOfCareActivityProcedureTemplateId(
			PlanOfCareActivityProcedure planOfCareActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityProcedure.validatePlanOfCareActivityProcedureTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityProcedureId constraint of '<em>Plan Of Care Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityProcedure_validatePlanOfCareActivityProcedureId(
			PlanOfCareActivityProcedure planOfCareActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityProcedure.validatePlanOfCareActivityProcedureId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySubstanceAdministration(
			PlanOfCareActivitySubstanceAdministration planOfCareActivitySubstanceAdministration,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareActivitySubstanceAdministration, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			planOfCareActivitySubstanceAdministration, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(
				planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSubstanceAdministration_validateClassCode(
				planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivitySubstanceAdministration_validatePlanOfCareActivitySubstanceAdministrationTemplateId(
				planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivitySubstanceAdministration_validatePlanOfCareActivitySubstanceAdministrationId(
				planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareActivitySubstanceAdministrationTemplateId constraint of '<em>Plan Of Care Activity Substance Administration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySubstanceAdministration_validatePlanOfCareActivitySubstanceAdministrationTemplateId(
			PlanOfCareActivitySubstanceAdministration planOfCareActivitySubstanceAdministration,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivitySubstanceAdministration.validatePlanOfCareActivitySubstanceAdministrationTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivitySubstanceAdministrationId constraint of '<em>Plan Of Care Activity Substance Administration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySubstanceAdministration_validatePlanOfCareActivitySubstanceAdministrationId(
			PlanOfCareActivitySubstanceAdministration planOfCareActivitySubstanceAdministration,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivitySubstanceAdministration.validatePlanOfCareActivitySubstanceAdministrationId(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySupply(PlanOfCareActivitySupply planOfCareActivitySupply,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareActivitySupply, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(planOfCareActivitySupply, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSupply_validateClassCode(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivitySupply_validatePlanOfCareActivitySupplyTemplateId(
				planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivitySupply_validatePlanOfCareActivitySupplyId(
				planOfCareActivitySupply, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareActivitySupplyTemplateId constraint of '<em>Plan Of Care Activity Supply</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySupply_validatePlanOfCareActivitySupplyTemplateId(
			PlanOfCareActivitySupply planOfCareActivitySupply, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivitySupply.validatePlanOfCareActivitySupplyTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivitySupplyId constraint of '<em>Plan Of Care Activity Supply</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySupply_validatePlanOfCareActivitySupplyId(
			PlanOfCareActivitySupply planOfCareActivitySupply, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivitySupply.validatePlanOfCareActivitySupplyId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProceduresSection(ProceduresSection proceduresSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(proceduresSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(proceduresSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSection_validateProceduresSectionEntriesOptionalTemplateId(
				proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalCode(
				proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalText(
				proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalProcedureActivityProcedure(
				proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalProcedureAcivityObservation(
				proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalProcedureActivityAct(
				proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSection_validateProceduresSectionHasProcedureActivity(
				proceduresSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSection_validateProceduresSectionTitle(proceduresSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProceduresSectionHasProcedureActivity constraint of '<em>Procedures Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProceduresSection_validateProceduresSectionHasProcedureActivity(
			ProceduresSection proceduresSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return proceduresSection.validateProceduresSectionHasProcedureActivity(diagnostics, context);
	}

	/**
	 * Validates the validateProceduresSectionTitle constraint of '<em>Procedures Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProceduresSection_validateProceduresSectionTitle(ProceduresSection proceduresSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return proceduresSection.validateProceduresSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateProceduresSectionEntriesOptionalTemplateId constraint of '<em>Procedures Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProceduresSection_validateProceduresSectionEntriesOptionalTemplateId(
			ProceduresSection proceduresSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return proceduresSection.validateProceduresSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProceduresSectionEntriesOptional(
			ProceduresSectionEntriesOptional proceduresSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(proceduresSectionEntriesOptional, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(proceduresSectionEntriesOptional, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(proceduresSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(proceduresSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(proceduresSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(proceduresSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(proceduresSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(proceduresSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				proceduresSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				proceduresSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalTemplateId(
				proceduresSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalCode(
				proceduresSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalText(
				proceduresSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalProcedureActivityProcedure(
				proceduresSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalProcedureAcivityObservation(
				proceduresSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalProcedureActivityAct(
				proceduresSectionEntriesOptional, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProceduresSectionEntriesOptionalTemplateId constraint of '<em>Procedures Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalTemplateId(
			ProceduresSectionEntriesOptional proceduresSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return proceduresSectionEntriesOptional.validateProceduresSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProceduresSectionEntriesOptionalCode constraint of '<em>Procedures Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalCode(
			ProceduresSectionEntriesOptional proceduresSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return proceduresSectionEntriesOptional.validateProceduresSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * Validates the validateProceduresSectionEntriesOptionalText constraint of '<em>Procedures Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalText(
			ProceduresSectionEntriesOptional proceduresSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return proceduresSectionEntriesOptional.validateProceduresSectionEntriesOptionalText(diagnostics, context);
	}

	/**
	 * Validates the validateProceduresSectionEntriesOptionalProcedureActivityProcedure constraint of '<em>Procedures Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalProcedureActivityProcedure(
			ProceduresSectionEntriesOptional proceduresSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return proceduresSectionEntriesOptional.validateProceduresSectionEntriesOptionalProcedureActivityProcedure(
			diagnostics, context);
	}

	/**
	 * Validates the validateProceduresSectionEntriesOptionalProcedureAcivityObservation constraint of '<em>Procedures Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalProcedureAcivityObservation(
			ProceduresSectionEntriesOptional proceduresSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return proceduresSectionEntriesOptional.validateProceduresSectionEntriesOptionalProcedureAcivityObservation(
			diagnostics, context);
	}

	/**
	 * Validates the validateProceduresSectionEntriesOptionalProcedureActivityAct constraint of '<em>Procedures Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProceduresSectionEntriesOptional_validateProceduresSectionEntriesOptionalProcedureActivityAct(
			ProceduresSectionEntriesOptional proceduresSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return proceduresSectionEntriesOptional.validateProceduresSectionEntriesOptionalProcedureActivityAct(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation(ProcedureActivityObservation procedureActivityObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedureActivityObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedureActivityObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationCodeCodeSystems(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationCodeOriginalText(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationOriginalTextReferenceValue(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationReferenceValue(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationEncounterInversion(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationServiceDeliveryLocationTypeCode(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationInstructionsInversion(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationTemplateId(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationClassCode(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationId(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationCode(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationStatusCode(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationValue(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationEffectiveTime(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationPriorityCode(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationMethodCode(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationTargetSiteCode(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationPerformer(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationServiceDeliveryLocation(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationProcedureEncounter(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationInstructions(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationIndication(
				procedureActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityObservation_validateProcedureActivityObservationMedicationActivity(
				procedureActivityObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedureActivityObservationCodeCodeSystems constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationCodeCodeSystems(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationCodeCodeSystems(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationCodeOriginalText constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationCodeOriginalText(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationCodeOriginalText(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationOriginalTextReferenceValue constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationOriginalTextReferenceValue(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationOriginalTextReferenceValue(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationReferenceValue constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationReferenceValue(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationReferenceValue(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationEncounterInversion constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationEncounterInversion(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationEncounterInversion(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationServiceDeliveryLocationTypeCode constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationServiceDeliveryLocationTypeCode(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationServiceDeliveryLocationTypeCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationInstructionsInversion constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationInstructionsInversion(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationInstructionsInversion(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationTemplateId constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationTemplateId(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationClassCode constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationClassCode(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationId constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationId(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationId(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationCode constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationCode(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationStatusCode constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationStatusCode(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationValue constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationValue(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationValue(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationEffectiveTime constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationEffectiveTime(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationPriorityCode constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationPriorityCode(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationPriorityCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationMethodCode constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationMethodCode(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationTargetSiteCode constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationTargetSiteCode(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationPerformer constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationPerformer(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationPerformer(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationServiceDeliveryLocation constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationServiceDeliveryLocation(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationServiceDeliveryLocation(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationProcedureEncounter constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationProcedureEncounter(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationProcedureEncounter(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationInstructions constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationInstructions(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationInstructions(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationIndication constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationIndication(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationIndication(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityObservationMedicationActivity constraint of '<em>Procedure Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityObservation_validateProcedureActivityObservationMedicationActivity(
			ProcedureActivityObservation procedureActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityObservation.validateProcedureActivityObservationMedicationActivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct(ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedureActivityAct, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedureActivityAct, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActCodeCodeSystems(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActCodeOriginalText(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActOriginalTextReferenceValue(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActReferenceValue(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActEncounterInversion(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActServiceDeliveryLocationTypeCode(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActInstructionsInversion(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActTemplateId(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActClassCode(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActId(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActCode(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActStatusCode(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActEffectiveTime(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActPriorityCode(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActPerformer(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActServiceDeliveryLocation(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActProcedureEncounter(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActInstructions(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActIndication(
				procedureActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityAct_validateProcedureActivityActMedicationActivity(
				procedureActivityAct, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedureActivityActCodeCodeSystems constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActCodeCodeSystems(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActCodeCodeSystems(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActCodeOriginalText constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActCodeOriginalText(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActCodeOriginalText(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActOriginalTextReferenceValue constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActOriginalTextReferenceValue(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActOriginalTextReferenceValue(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActReferenceValue constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActReferenceValue(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActReferenceValue(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActEncounterInversion constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActEncounterInversion(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActEncounterInversion(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActServiceDeliveryLocationTypeCode constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActServiceDeliveryLocationTypeCode(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActServiceDeliveryLocationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActInstructionsInversion constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActInstructionsInversion(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActInstructionsInversion(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActTemplateId constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActTemplateId(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActClassCode constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActClassCode(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActId constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActId(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActId(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActCode constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActCode(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActStatusCode constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActStatusCode(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActEffectiveTime constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActEffectiveTime(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActPriorityCode constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActPriorityCode(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActPriorityCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActPerformer constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActPerformer(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActPerformer(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActServiceDeliveryLocation constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActServiceDeliveryLocation(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActServiceDeliveryLocation(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActProcedureEncounter constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActProcedureEncounter(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActProcedureEncounter(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActInstructions constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActInstructions(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActInstructions(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActIndication constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActIndication(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActIndication(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityActMedicationActivity constraint of '<em>Procedure Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityAct_validateProcedureActivityActMedicationActivity(
			ProcedureActivityAct procedureActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureActivityAct.validateProcedureActivityActMedicationActivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure(ProcedureActivityProcedure procedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedureActivityProcedure, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedureActivityProcedure, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureCodeCodeSystems(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureCodeOriginalText(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureOriginalTextReferenceValue(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureReferenceValue(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureEncounterInversion(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureProductInstanceTypeCode(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureServiceDeliveryLocationTypeCode(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureInstructionsInversion(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureTemplateId(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureClassCode(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureId(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureCode(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureStatusCode(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureEffectiveTime(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedurePriorityCode(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureMethodCode(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureTargetSiteCode(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureIndication(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureSpecimen(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureServiceDeliveryLocation(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedurePerformer(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureMedicationActivity(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedurePatientInstruction(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureProcedureEncounter(
				procedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureActivityProcedure_validateProcedureActivityProcedureProductInstance(
				procedureActivityProcedure, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedureActivityProcedureCodeCodeSystems constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureCodeCodeSystems(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureCodeCodeSystems(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureCodeOriginalText constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureCodeOriginalText(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureCodeOriginalText(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureOriginalTextReferenceValue constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureOriginalTextReferenceValue(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureOriginalTextReferenceValue(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureReferenceValue constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureReferenceValue(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureReferenceValue(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureEncounterInversion constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureEncounterInversion(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureEncounterInversion(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureProductInstanceTypeCode constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureProductInstanceTypeCode(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureProductInstanceTypeCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureServiceDeliveryLocationTypeCode constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureServiceDeliveryLocationTypeCode(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureServiceDeliveryLocationTypeCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureInstructionsInversion constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureInstructionsInversion(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureInstructionsInversion(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedurePriorityCode constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedurePriorityCode(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedurePriorityCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureMethodCode constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureMethodCode(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureTargetSiteCode constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureTargetSiteCode(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureIndication constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureIndication(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureIndication(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureSpecimen constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureSpecimen(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureSpecimen(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureServiceDeliveryLocation constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureServiceDeliveryLocation(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureServiceDeliveryLocation(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedurePerformer constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedurePerformer(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedurePerformer(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureTemplateId constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureTemplateId(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureClassCode constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureClassCode(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureId constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureId(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureId(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureCode constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureCode(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureStatusCode constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureStatusCode(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureEffectiveTime constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureEffectiveTime(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureMedicationActivity constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureMedicationActivity(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureMedicationActivity(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedurePatientInstruction constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedurePatientInstruction(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedurePatientInstruction(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureProcedureEncounter constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureProcedureEncounter(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureProcedureEncounter(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureActivityProcedureProductInstance constraint of '<em>Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureActivityProcedure_validateProcedureActivityProcedureProductInstance(
			ProcedureActivityProcedure procedureActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureActivityProcedure.validateProcedureActivityProcedureProductInstance(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSectionEntriesOptional(
			VitalSignsSectionEntriesOptional vitalSignsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(vitalSignsSectionEntriesOptional, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(vitalSignsSectionEntriesOptional, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(vitalSignsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(vitalSignsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(vitalSignsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(vitalSignsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(vitalSignsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(vitalSignsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				vitalSignsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				vitalSignsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSectionEntriesOptional_validateVitalSignsSectionEntriesOptionalTemplateId(
				vitalSignsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSectionEntriesOptional_validateVitalSignsSectionEntriesOptionalCode(
				vitalSignsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSectionEntriesOptional_validateVitalSignsSectionEntriesOptionalText(
				vitalSignsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSectionEntriesOptional_validateVitalSignsSectionEntriesOptionalTitle(
				vitalSignsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSectionEntriesOptional_validateVitalSignsSectionEntriesOptionalVitalSignsOrganizer(
				vitalSignsSectionEntriesOptional, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateVitalSignsSectionEntriesOptionalTemplateId constraint of '<em>Vital Signs Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSectionEntriesOptional_validateVitalSignsSectionEntriesOptionalTemplateId(
			VitalSignsSectionEntriesOptional vitalSignsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSignsSectionEntriesOptional.validateVitalSignsSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsSectionEntriesOptionalCode constraint of '<em>Vital Signs Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSectionEntriesOptional_validateVitalSignsSectionEntriesOptionalCode(
			VitalSignsSectionEntriesOptional vitalSignsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSignsSectionEntriesOptional.validateVitalSignsSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsSectionEntriesOptionalTitle constraint of '<em>Vital Signs Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSectionEntriesOptional_validateVitalSignsSectionEntriesOptionalTitle(
			VitalSignsSectionEntriesOptional vitalSignsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSignsSectionEntriesOptional.validateVitalSignsSectionEntriesOptionalTitle(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsSectionEntriesOptionalVitalSignsOrganizer constraint of '<em>Vital Signs Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSectionEntriesOptional_validateVitalSignsSectionEntriesOptionalVitalSignsOrganizer(
			VitalSignsSectionEntriesOptional vitalSignsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSignsSectionEntriesOptional.validateVitalSignsSectionEntriesOptionalVitalSignsOrganizer(
			diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsSectionEntriesOptionalText constraint of '<em>Vital Signs Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSectionEntriesOptional_validateVitalSignsSectionEntriesOptionalText(
			VitalSignsSectionEntriesOptional vitalSignsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSignsSectionEntriesOptional.validateVitalSignsSectionEntriesOptionalText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection(FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(familyHistorySection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(familyHistorySection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySection_validateFamilyHistorySectionTemplateId(
				familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySection_validateFamilyHistorySectionCode(
				familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySection_validateFamilyHistorySectionTitle(
				familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySection_validateFamilyHistorySectionText(
				familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySection_validateFamilyHistorySectionFamilyHistory(
				familyHistorySection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateFamilyHistorySectionTemplateId constraint of '<em>Family History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection_validateFamilyHistorySectionTemplateId(
			FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySection.validateFamilyHistorySectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySectionCode constraint of '<em>Family History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection_validateFamilyHistorySectionCode(
			FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySection.validateFamilyHistorySectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySectionTitle constraint of '<em>Family History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection_validateFamilyHistorySectionTitle(
			FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySection.validateFamilyHistorySectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySectionText constraint of '<em>Family History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection_validateFamilyHistorySectionText(
			FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySection.validateFamilyHistorySectionText(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySectionFamilyHistory constraint of '<em>Family History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection_validateFamilyHistorySectionFamilyHistory(
			FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySection.validateFamilyHistorySectionFamilyHistory(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryOrganizer(FamilyHistoryOrganizer familyHistoryOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(familyHistoryOrganizer, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(familyHistoryOrganizer, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(familyHistoryOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(familyHistoryOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(familyHistoryOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(familyHistoryOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(familyHistoryOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(familyHistoryOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryOrganizer_validateFamilyHistoryOrganizerTemplateId(
				familyHistoryOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryOrganizer_validateFamilyHistoryOrganizerClassCode(
				familyHistoryOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryOrganizer_validateFamilyHistoryOrganizerMoodCode(
				familyHistoryOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryOrganizer_validateFamilyHistoryOrganizerStatusCode(
				familyHistoryOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryOrganizer_validateFamilyHistoryOrganizerFamilyHistoryObservation(
				familyHistoryOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryOrganizer_validateFamilyHistoryOrganizerSubject(
				familyHistoryOrganizer, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateFamilyHistoryOrganizerTemplateId constraint of '<em>Family History Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryOrganizer_validateFamilyHistoryOrganizerTemplateId(
			FamilyHistoryOrganizer familyHistoryOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryOrganizer.validateFamilyHistoryOrganizerTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryOrganizerClassCode constraint of '<em>Family History Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryOrganizer_validateFamilyHistoryOrganizerClassCode(
			FamilyHistoryOrganizer familyHistoryOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryOrganizer.validateFamilyHistoryOrganizerClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryOrganizerMoodCode constraint of '<em>Family History Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryOrganizer_validateFamilyHistoryOrganizerMoodCode(
			FamilyHistoryOrganizer familyHistoryOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryOrganizer.validateFamilyHistoryOrganizerMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryOrganizerStatusCode constraint of '<em>Family History Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryOrganizer_validateFamilyHistoryOrganizerStatusCode(
			FamilyHistoryOrganizer familyHistoryOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryOrganizer.validateFamilyHistoryOrganizerStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryOrganizerFamilyHistoryObservation constraint of '<em>Family History Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryOrganizer_validateFamilyHistoryOrganizerFamilyHistoryObservation(
			FamilyHistoryOrganizer familyHistoryOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryOrganizer.validateFamilyHistoryOrganizerFamilyHistoryObservation(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryOrganizerSubject constraint of '<em>Family History Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryOrganizer_validateFamilyHistoryOrganizerSubject(
			FamilyHistoryOrganizer familyHistoryOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryOrganizer.validateFamilyHistoryOrganizerSubject(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation(FamilyHistoryObservation familyHistoryObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(familyHistoryObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(familyHistoryObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationAgeObservationInversion(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationTemplateId(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationClassCode(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationMoodCode(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationId(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationCode(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationStatusCode(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationEffectiveTime(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationValue(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationAgeObservation(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationFamilyHistoryDeathObservation(
				familyHistoryObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateFamilyHistoryObservationAgeObservationInversion constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationAgeObservationInversion(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationAgeObservationInversion(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationTemplateId constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationTemplateId(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationClassCode constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationClassCode(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationMoodCode constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationMoodCode(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationId constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationId(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationId(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationCode constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationCode(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationStatusCode constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationStatusCode(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationEffectiveTime constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationEffectiveTime(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationValue constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationValue(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationValue(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationAgeObservation constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationAgeObservation(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationAgeObservation(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationFamilyHistoryDeathObservation constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationFamilyHistoryDeathObservation(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationFamilyHistoryDeathObservation(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryDeathObservation(FamilyHistoryDeathObservation familyHistoryDeathObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(familyHistoryDeathObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(familyHistoryDeathObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(familyHistoryDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(familyHistoryDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(familyHistoryDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(familyHistoryDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(familyHistoryDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(familyHistoryDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryDeathObservation_validateFamilyHistoryDeathObservationTemplateId(
				familyHistoryDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryDeathObservation_validateFamilyHistoryDeathObservationClassCode(
				familyHistoryDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryDeathObservation_validateFamilyHistoryDeathObservationMoodCode(
				familyHistoryDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryDeathObservation_validateFamilyHistoryDeathObservationCode(
				familyHistoryDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryDeathObservation_validateFamilyHistoryDeathObservationStatusCode(
				familyHistoryDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryDeathObservation_validateFamilyHistoryDeathObservationValue(
				familyHistoryDeathObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateFamilyHistoryDeathObservationTemplateId constraint of '<em>Family History Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryDeathObservation_validateFamilyHistoryDeathObservationTemplateId(
			FamilyHistoryDeathObservation familyHistoryDeathObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return familyHistoryDeathObservation.validateFamilyHistoryDeathObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryDeathObservationClassCode constraint of '<em>Family History Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryDeathObservation_validateFamilyHistoryDeathObservationClassCode(
			FamilyHistoryDeathObservation familyHistoryDeathObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return familyHistoryDeathObservation.validateFamilyHistoryDeathObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryDeathObservationMoodCode constraint of '<em>Family History Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryDeathObservation_validateFamilyHistoryDeathObservationMoodCode(
			FamilyHistoryDeathObservation familyHistoryDeathObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return familyHistoryDeathObservation.validateFamilyHistoryDeathObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryDeathObservationCode constraint of '<em>Family History Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryDeathObservation_validateFamilyHistoryDeathObservationCode(
			FamilyHistoryDeathObservation familyHistoryDeathObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return familyHistoryDeathObservation.validateFamilyHistoryDeathObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryDeathObservationStatusCode constraint of '<em>Family History Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryDeathObservation_validateFamilyHistoryDeathObservationStatusCode(
			FamilyHistoryDeathObservation familyHistoryDeathObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return familyHistoryDeathObservation.validateFamilyHistoryDeathObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryDeathObservationValue constraint of '<em>Family History Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryDeathObservation_validateFamilyHistoryDeathObservationValue(
			FamilyHistoryDeathObservation familyHistoryDeathObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return familyHistoryDeathObservation.validateFamilyHistoryDeathObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection(SocialHistorySection socialHistorySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(socialHistorySection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(socialHistorySection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionTemplateId(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionCode(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionTitle(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionText(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionSocialHistoryObservation(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionPregnancyObservation(
				socialHistorySection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSocialHistorySectionTemplateId constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionTemplateId(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionCode constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionCode(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionTitle constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionTitle(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionText constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionText(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionText(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionSocialHistoryObservation constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionSocialHistoryObservation(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionSocialHistoryObservation(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionPregnancyObservation constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionPregnancyObservation(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionPregnancyObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryObservation(SocialHistoryObservation socialHistoryObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(socialHistoryObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(socialHistoryObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryObservation_validateSocialHistoryObservationOriginalText(
				socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryObservation_validateSocialHistoryObservationReference(
				socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryObservation_validateSocialHistoryObservationReferenceValue(
				socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryObservation_validateSocialHistoryObservationTemplateId(
				socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryObservation_validateSocialHistoryObservationClassCode(
				socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryObservation_validateSocialHistoryObservationMoodCode(
				socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryObservation_validateSocialHistoryObservationId(
				socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryObservation_validateSocialHistoryObservationCode(
				socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryObservation_validateSocialHistoryObservationStatusCode(
				socialHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryObservation_validateSocialHistoryObservationValue(
				socialHistoryObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSocialHistoryObservationOriginalText constraint of '<em>Social History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryObservation_validateSocialHistoryObservationOriginalText(
			SocialHistoryObservation socialHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistoryObservation.validateSocialHistoryObservationOriginalText(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryObservationReference constraint of '<em>Social History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryObservation_validateSocialHistoryObservationReference(
			SocialHistoryObservation socialHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistoryObservation.validateSocialHistoryObservationReference(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryObservationReferenceValue constraint of '<em>Social History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryObservation_validateSocialHistoryObservationReferenceValue(
			SocialHistoryObservation socialHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistoryObservation.validateSocialHistoryObservationReferenceValue(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryObservationTemplateId constraint of '<em>Social History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryObservation_validateSocialHistoryObservationTemplateId(
			SocialHistoryObservation socialHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistoryObservation.validateSocialHistoryObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryObservationClassCode constraint of '<em>Social History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryObservation_validateSocialHistoryObservationClassCode(
			SocialHistoryObservation socialHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistoryObservation.validateSocialHistoryObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryObservationMoodCode constraint of '<em>Social History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryObservation_validateSocialHistoryObservationMoodCode(
			SocialHistoryObservation socialHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistoryObservation.validateSocialHistoryObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryObservationId constraint of '<em>Social History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryObservation_validateSocialHistoryObservationId(
			SocialHistoryObservation socialHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistoryObservation.validateSocialHistoryObservationId(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryObservationCode constraint of '<em>Social History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryObservation_validateSocialHistoryObservationCode(
			SocialHistoryObservation socialHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistoryObservation.validateSocialHistoryObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryObservationStatusCode constraint of '<em>Social History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryObservation_validateSocialHistoryObservationStatusCode(
			SocialHistoryObservation socialHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistoryObservation.validateSocialHistoryObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryObservationValue constraint of '<em>Social History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryObservation_validateSocialHistoryObservationValue(
			SocialHistoryObservation socialHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistoryObservation.validateSocialHistoryObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation(PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(pregnancyObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(pregnancyObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationTemplateId(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationClassCode(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationMoodCode(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationCode(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationStatusCode(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationValue(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationEffectiveTime(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationEstimatedDateOfDelivery(
				pregnancyObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePregnancyObservationTemplateId constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationTemplateId(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationClassCode constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationClassCode(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationMoodCode constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationMoodCode(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationCode constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationCode(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationStatusCode constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationStatusCode(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationValue constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationValue(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationValue(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationEffectiveTime constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationEffectiveTime(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationEstimatedDateOfDelivery constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationEstimatedDateOfDelivery(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationEstimatedDateOfDelivery(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEstimatedDateOfDelivery(EstimatedDateOfDelivery estimatedDateOfDelivery,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(estimatedDateOfDelivery, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(estimatedDateOfDelivery, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(estimatedDateOfDelivery, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(estimatedDateOfDelivery, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(estimatedDateOfDelivery, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(estimatedDateOfDelivery, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(estimatedDateOfDelivery, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(estimatedDateOfDelivery, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEstimatedDateOfDelivery_validateEstimatedDateOfDeliveryTemplateId(
				estimatedDateOfDelivery, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEstimatedDateOfDelivery_validateEstimatedDateOfDeliveryClassCode(
				estimatedDateOfDelivery, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEstimatedDateOfDelivery_validateEstimatedDateOfDeliveryCode(
				estimatedDateOfDelivery, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEstimatedDateOfDelivery_validateEstimatedDateOfDeliveryMoodCode(
				estimatedDateOfDelivery, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEstimatedDateOfDelivery_validateEstimatedDateOfDeliveryStatusCode(
				estimatedDateOfDelivery, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEstimatedDateOfDelivery_validateEstimatedDateOfDeliveryValue(
				estimatedDateOfDelivery, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEstimatedDateOfDeliveryTemplateId constraint of '<em>Estimated Date Of Delivery</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEstimatedDateOfDelivery_validateEstimatedDateOfDeliveryTemplateId(
			EstimatedDateOfDelivery estimatedDateOfDelivery, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return estimatedDateOfDelivery.validateEstimatedDateOfDeliveryTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEstimatedDateOfDeliveryClassCode constraint of '<em>Estimated Date Of Delivery</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEstimatedDateOfDelivery_validateEstimatedDateOfDeliveryClassCode(
			EstimatedDateOfDelivery estimatedDateOfDelivery, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return estimatedDateOfDelivery.validateEstimatedDateOfDeliveryClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateEstimatedDateOfDeliveryCode constraint of '<em>Estimated Date Of Delivery</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEstimatedDateOfDelivery_validateEstimatedDateOfDeliveryCode(
			EstimatedDateOfDelivery estimatedDateOfDelivery, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return estimatedDateOfDelivery.validateEstimatedDateOfDeliveryCode(diagnostics, context);
	}

	/**
	 * Validates the validateEstimatedDateOfDeliveryMoodCode constraint of '<em>Estimated Date Of Delivery</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEstimatedDateOfDelivery_validateEstimatedDateOfDeliveryMoodCode(
			EstimatedDateOfDelivery estimatedDateOfDelivery, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return estimatedDateOfDelivery.validateEstimatedDateOfDeliveryMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateEstimatedDateOfDeliveryStatusCode constraint of '<em>Estimated Date Of Delivery</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEstimatedDateOfDelivery_validateEstimatedDateOfDeliveryStatusCode(
			EstimatedDateOfDelivery estimatedDateOfDelivery, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return estimatedDateOfDelivery.validateEstimatedDateOfDeliveryStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateEstimatedDateOfDeliveryValue constraint of '<em>Estimated Date Of Delivery</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEstimatedDateOfDelivery_validateEstimatedDateOfDeliveryValue(
			EstimatedDateOfDelivery estimatedDateOfDelivery, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return estimatedDateOfDelivery.validateEstimatedDateOfDeliveryValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSection(ResultsSection resultsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(resultsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(resultsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSection_validateResultsSectionEntriesOptionalTemplateId(
				resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSection_validateResultsSectionEntriesOptionalCode(
				resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSectionEntriesOptional_validateResultsSectionEntriesOptionalTitle(
				resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSectionEntriesOptional_validateResultsSectionEntriesOptionalText(
				resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSectionEntriesOptional_validateResultsSectionEntriesOptionalResultOrganizer(
				resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSection_validateResultsSectionTitle(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSection_validateResultsSectionText(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSection_validateResultsSectionResultOrganizer(resultsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateResultsSectionTitle constraint of '<em>Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSection_validateResultsSectionTitle(ResultsSection resultsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultsSection.validateResultsSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionText constraint of '<em>Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSection_validateResultsSectionText(ResultsSection resultsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultsSection.validateResultsSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionResultOrganizer constraint of '<em>Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSection_validateResultsSectionResultOrganizer(ResultsSection resultsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultsSection.validateResultsSectionResultOrganizer(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionEntriesOptionalTemplateId constraint of '<em>Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSection_validateResultsSectionEntriesOptionalTemplateId(
			ResultsSection resultsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultsSection.validateResultsSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionEntriesOptionalCode constraint of '<em>Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSection_validateResultsSectionEntriesOptionalCode(ResultsSection resultsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultsSection.validateResultsSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSectionEntriesOptional(ResultsSectionEntriesOptional resultsSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(resultsSectionEntriesOptional, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(resultsSectionEntriesOptional, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(resultsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(resultsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(resultsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(resultsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(resultsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(resultsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				resultsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(resultsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSectionEntriesOptional_validateResultsSectionEntriesOptionalTemplateId(
				resultsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSectionEntriesOptional_validateResultsSectionEntriesOptionalCode(
				resultsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSectionEntriesOptional_validateResultsSectionEntriesOptionalTitle(
				resultsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSectionEntriesOptional_validateResultsSectionEntriesOptionalText(
				resultsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSectionEntriesOptional_validateResultsSectionEntriesOptionalResultOrganizer(
				resultsSectionEntriesOptional, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateResultsSectionEntriesOptionalTemplateId constraint of '<em>Results Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSectionEntriesOptional_validateResultsSectionEntriesOptionalTemplateId(
			ResultsSectionEntriesOptional resultsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return resultsSectionEntriesOptional.validateResultsSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionEntriesOptionalCode constraint of '<em>Results Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSectionEntriesOptional_validateResultsSectionEntriesOptionalCode(
			ResultsSectionEntriesOptional resultsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return resultsSectionEntriesOptional.validateResultsSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionEntriesOptionalTitle constraint of '<em>Results Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSectionEntriesOptional_validateResultsSectionEntriesOptionalTitle(
			ResultsSectionEntriesOptional resultsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return resultsSectionEntriesOptional.validateResultsSectionEntriesOptionalTitle(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionEntriesOptionalText constraint of '<em>Results Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSectionEntriesOptional_validateResultsSectionEntriesOptionalText(
			ResultsSectionEntriesOptional resultsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return resultsSectionEntriesOptional.validateResultsSectionEntriesOptionalText(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionEntriesOptionalResultOrganizer constraint of '<em>Results Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSectionEntriesOptional_validateResultsSectionEntriesOptionalResultOrganizer(
			ResultsSectionEntriesOptional resultsSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return resultsSectionEntriesOptional.validateResultsSectionEntriesOptionalResultOrganizer(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer(ResultOrganizer resultOrganizer, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(resultOrganizer, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(resultOrganizer, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerCodeValue(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerClassCodeValue(
				resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerTemplateId(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerId(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerStatusCode(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerCode(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerResultObservation(
				resultOrganizer, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateResultOrganizerCodeValue constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerCodeValue(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerCodeValue(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerClassCodeValue constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerClassCodeValue(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerClassCodeValue(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerTemplateId constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerTemplateId(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerId constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerId(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerId(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerStatusCode constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerStatusCode(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerCode constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerCode(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerResultObservation constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerResultObservation(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerResultObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation(ResultObservation resultObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(resultObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(resultObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationTextReference(
				resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationTextReferenceValue(
				resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationCodeValue(
				resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationNoObservationRangeCode(
				resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationAuthorMultiplicity(
				resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationTemplateId(
				resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationId(resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationCode(resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationText(resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationStatusCode(
				resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationEffectiveTime(
				resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationValue(resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationInterpretationCode(
				resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationMethodCode(
				resultObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultObservation_validateResultObservationTargetSiteCode(
				resultObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateResultObservationTextReference constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationTextReference(
			ResultObservation resultObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationTextReferenceValue constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationTextReferenceValue(
			ResultObservation resultObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationTextReferenceValue(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationCodeValue constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationCodeValue(ResultObservation resultObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationCodeValue(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationNoObservationRangeCode constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationNoObservationRangeCode(
			ResultObservation resultObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationNoObservationRangeCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationAuthorMultiplicity constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationAuthorMultiplicity(
			ResultObservation resultObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationAuthorMultiplicity(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationTemplateId constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationTemplateId(ResultObservation resultObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationId constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationId(ResultObservation resultObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationId(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationCode constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationCode(ResultObservation resultObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationText constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationText(ResultObservation resultObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationText(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationStatusCode constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationStatusCode(ResultObservation resultObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationEffectiveTime constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationEffectiveTime(
			ResultObservation resultObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationValue constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationValue(ResultObservation resultObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationValue(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationInterpretationCode constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationInterpretationCode(
			ResultObservation resultObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationMethodCode constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationMethodCode(ResultObservation resultObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultObservationTargetSiteCode constraint of '<em>Result Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultObservation_validateResultObservationTargetSiteCode(
			ResultObservation resultObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultObservation.validateResultObservationTargetSiteCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalEquipmentSection(MedicalEquipmentSection medicalEquipmentSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicalEquipmentSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicalEquipmentSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicalEquipmentSection_validateMedicalEquipmentSectionTemplateId(
				medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicalEquipmentSection_validateMedicalEquipmentSectionCode(
				medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicalEquipmentSection_validateMedicalEquipmentSectionTitle(
				medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicalEquipmentSection_validateMedicalEquipmentSectionText(
				medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicalEquipmentSection_validateMedicalEquipmentSectionNonMedicinalSupplyActivity(
				medicalEquipmentSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicalEquipmentSectionTemplateId constraint of '<em>Medical Equipment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalEquipmentSection_validateMedicalEquipmentSectionTemplateId(
			MedicalEquipmentSection medicalEquipmentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalEquipmentSection.validateMedicalEquipmentSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalEquipmentSectionCode constraint of '<em>Medical Equipment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalEquipmentSection_validateMedicalEquipmentSectionCode(
			MedicalEquipmentSection medicalEquipmentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalEquipmentSection.validateMedicalEquipmentSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalEquipmentSectionTitle constraint of '<em>Medical Equipment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalEquipmentSection_validateMedicalEquipmentSectionTitle(
			MedicalEquipmentSection medicalEquipmentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalEquipmentSection.validateMedicalEquipmentSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalEquipmentSectionText constraint of '<em>Medical Equipment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalEquipmentSection_validateMedicalEquipmentSectionText(
			MedicalEquipmentSection medicalEquipmentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalEquipmentSection.validateMedicalEquipmentSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalEquipmentSectionNonMedicinalSupplyActivity constraint of '<em>Medical Equipment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalEquipmentSection_validateMedicalEquipmentSectionNonMedicinalSupplyActivity(
			MedicalEquipmentSection medicalEquipmentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalEquipmentSection.validateMedicalEquipmentSectionNonMedicinalSupplyActivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection(FunctionalStatusSection functionalStatusSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(functionalStatusSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(functionalStatusSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionTemplateId(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionCode(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionTitle(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionText(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionProblemObservation(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionResultObservation(
				functionalStatusSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateFunctionalStatusSectionTemplateId constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionTemplateId(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionCode constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionCode(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionTitle constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionTitle(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionText constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionText(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionProblemObservation constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionProblemObservation(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionProblemObservation(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionResultObservation constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionResultObservation(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionResultObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemSection(ProblemSection problemSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(problemSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(problemSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(problemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(problemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(problemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(problemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(problemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(problemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(problemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(problemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemSection_validateProblemSectionEntriesOptionalTemplateId(
				problemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalCode(
				problemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalTitle(
				problemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalText(
				problemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalProblemConcern(
				problemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemSection_validateProblemSectionProblemConcern(problemSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProblemSectionProblemConcern constraint of '<em>Problem Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemSection_validateProblemSectionProblemConcern(ProblemSection problemSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemSection.validateProblemSectionProblemConcern(diagnostics, context);
	}

	/**
	 * Validates the validateProblemSectionEntriesOptionalTemplateId constraint of '<em>Problem Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemSection_validateProblemSectionEntriesOptionalTemplateId(
			ProblemSection problemSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemSection.validateProblemSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemSectionEntriesOptional(ProblemSectionEntriesOptional problemSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(problemSectionEntriesOptional, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(problemSectionEntriesOptional, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(problemSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(problemSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(problemSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(problemSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(problemSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(problemSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				problemSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(problemSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalTemplateId(
				problemSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalCode(
				problemSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalTitle(
				problemSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalText(
				problemSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalProblemConcern(
				problemSectionEntriesOptional, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProblemSectionEntriesOptionalTemplateId constraint of '<em>Problem Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalTemplateId(
			ProblemSectionEntriesOptional problemSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return problemSectionEntriesOptional.validateProblemSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProblemSectionEntriesOptionalCode constraint of '<em>Problem Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalCode(
			ProblemSectionEntriesOptional problemSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return problemSectionEntriesOptional.validateProblemSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemSectionEntriesOptionalTitle constraint of '<em>Problem Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalTitle(
			ProblemSectionEntriesOptional problemSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return problemSectionEntriesOptional.validateProblemSectionEntriesOptionalTitle(diagnostics, context);
	}

	/**
	 * Validates the validateProblemSectionEntriesOptionalText constraint of '<em>Problem Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalText(
			ProblemSectionEntriesOptional problemSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return problemSectionEntriesOptional.validateProblemSectionEntriesOptionalText(diagnostics, context);
	}

	/**
	 * Validates the validateProblemSectionEntriesOptionalProblemConcern constraint of '<em>Problem Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemSectionEntriesOptional_validateProblemSectionEntriesOptionalProblemConcern(
			ProblemSectionEntriesOptional problemSectionEntriesOptional, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return problemSectionEntriesOptional.validateProblemSectionEntriesOptionalProblemConcern(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(socialHistoryStatusObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(socialHistoryStatusObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationNoAdditionalParticipants(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationNoAdditionalRelationships(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationTemplateId(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationClassCode(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationMoodCode(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationCode(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationStatusCode(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationValue(
				socialHistoryStatusObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationNoAdditionalParticipants constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationNoAdditionalParticipants(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationNoAdditionalParticipants(
			diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationNoAdditionalRelationships constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationNoAdditionalRelationships(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationNoAdditionalRelationships(
			diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationTemplateId constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationTemplateId(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationClassCode constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationClassCode(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationMoodCode constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationMoodCode(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationCode constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationCode(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationStatusCode constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationStatusCode(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationValue constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationValue(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeSection(PurposeSection purposeSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(purposeSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(purposeSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeSection_validatePurposeSectionTemplateId(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeSection_validatePurposeSectionCode(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeSection_validatePurposeSectionTitle(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeSection_validatePurposeSectionText(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeSection_validatePurposeSectionPurposeActivity(purposeSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePurposeSectionTemplateId constraint of '<em>Purpose Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeSection_validatePurposeSectionTemplateId(PurposeSection purposeSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeSection.validatePurposeSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeSectionCode constraint of '<em>Purpose Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeSection_validatePurposeSectionCode(PurposeSection purposeSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeSection.validatePurposeSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeSectionTitle constraint of '<em>Purpose Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeSection_validatePurposeSectionTitle(PurposeSection purposeSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeSection.validatePurposeSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeSectionText constraint of '<em>Purpose Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeSection_validatePurposeSectionText(PurposeSection purposeSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeSection.validatePurposeSectionText(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeSectionPurposeActivity constraint of '<em>Purpose Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeSection_validatePurposeSectionPurposeActivity(PurposeSection purposeSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeSection.validatePurposeSectionPurposeActivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity(PurposeActivity purposeActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(purposeActivity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(purposeActivity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityHasReason(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityReasonType(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityTemplateId(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityClassCode(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityMoodCode(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityCode(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityStatusCode(purposeActivity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePurposeActivityHasReason constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityHasReason(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityHasReason(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeActivityReasonType constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityReasonType(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityReasonType(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeActivityTemplateId constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityTemplateId(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeActivityClassCode constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityClassCode(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeActivityMoodCode constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityMoodCode(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeActivityCode constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityCode(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityCode(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeActivityStatusCode constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityStatusCode(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityStatusCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSection(AdvanceDirectivesSection advanceDirectivesSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(advanceDirectivesSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(advanceDirectivesSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionEntriesOptionalTemplateId(
				advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionEntriesOptionalCode(
				advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSectionEntriesOptional_validateAdvanceDirectivesSectionEntriesOptionalTitle(
				advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSectionEntriesOptional_validateAdvanceDirectivesSectionEntriesOptionalText(
				advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSectionEntriesOptional_validateAdvanceDirectivesSectionEntriesOptionalAdvanceDirectiveObservation(
				advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionTitle(
				advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionText(
				advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionAdvanceDirectiveObservation(
				advanceDirectivesSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionEntriesOptionalCode constraint of '<em>Advance Directives Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionEntriesOptionalCode(
			AdvanceDirectivesSection advanceDirectivesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSection.validateAdvanceDirectivesSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionTitle constraint of '<em>Advance Directives Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionTitle(
			AdvanceDirectivesSection advanceDirectivesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSection.validateAdvanceDirectivesSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionText constraint of '<em>Advance Directives Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionText(
			AdvanceDirectivesSection advanceDirectivesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSection.validateAdvanceDirectivesSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionAdvanceDirectiveObservation constraint of '<em>Advance Directives Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionAdvanceDirectiveObservation(
			AdvanceDirectivesSection advanceDirectivesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSection.validateAdvanceDirectivesSectionAdvanceDirectiveObservation(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionEntriesOptionalTemplateId constraint of '<em>Advance Directives Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionEntriesOptionalTemplateId(
			AdvanceDirectivesSection advanceDirectivesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSection.validateAdvanceDirectivesSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation(AdvanceDirectiveObservation advanceDirectiveObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(advanceDirectiveObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(advanceDirectiveObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationHasStartingTime(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationHasEndingTime(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationTemplateId(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationClassCode(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationMoodCode(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationId(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCode(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationStatusCode(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationEffectiveTime(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationVerifier(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodian(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationReference(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationVerifierTime(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationVerifierTypeCode(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationVerifierParticipantRole(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianCustodianRoleAddr(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianCustodianRoleClassCode(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianCustodianRoleTelecom(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianCustodianRolePlayingEntity(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianTypeCode(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianAdvanceDirectiveObservationCustodianRole(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationReferenceExternalDocumentId(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationReferenceExternalDocumentText(
				advanceDirectiveObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationReferenceExternalDocument(
				advanceDirectiveObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationHasStartingTime constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationHasStartingTime(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationHasStartingTime(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationHasEndingTime constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationHasEndingTime(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationHasEndingTime(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationTemplateId constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationTemplateId(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationClassCode constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationClassCode(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationMoodCode constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationMoodCode(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationId constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationId(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationId(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationCode constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCode(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationStatusCode constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationStatusCode(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationEffectiveTime constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationEffectiveTime(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationVerifier constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationVerifier(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationVerifier(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationCustodian constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodian(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationCustodian(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationReference constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationReference(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationReference(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationVerifierTime constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationVerifierTime(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationVerifierTime(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationVerifierTypeCode constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationVerifierTypeCode(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationVerifierTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationVerifierParticipantRole constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationVerifierParticipantRole(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationVerifierParticipantRole(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationCustodianCustodianRoleAddr constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianCustodianRoleAddr(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationCustodianCustodianRoleAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationCustodianCustodianRoleClassCode constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianCustodianRoleClassCode(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationCustodianCustodianRoleClassCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationCustodianCustodianRoleTelecom constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianCustodianRoleTelecom(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationCustodianCustodianRoleTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationCustodianCustodianRolePlayingEntity constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianCustodianRolePlayingEntity(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationCustodianCustodianRolePlayingEntity(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationCustodianTypeCode constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianTypeCode(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationCustodianTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationCustodianAdvanceDirectiveObservationCustodianRole constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationCustodianAdvanceDirectiveObservationCustodianRole(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationCustodianAdvanceDirectiveObservationCustodianRole(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationReferenceExternalDocumentId constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationReferenceExternalDocumentId(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationReferenceExternalDocumentId(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationReferenceExternalDocumentText constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationReferenceExternalDocumentText(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationReferenceExternalDocumentText(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveObservationReferenceExternalDocument constraint of '<em>Advance Directive Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_validateAdvanceDirectiveObservationReferenceExternalDocument(
			AdvanceDirectiveObservation advanceDirectiveObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation.validateAdvanceDirectiveObservationReferenceExternalDocument(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_Reference(
			AdvanceDirectiveObservation_Reference advanceDirectiveObservation_Reference, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(advanceDirectiveObservation_Reference, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(advanceDirectiveObservation_Reference, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(advanceDirectiveObservation_Reference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(advanceDirectiveObservation_Reference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(advanceDirectiveObservation_Reference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(advanceDirectiveObservation_Reference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(advanceDirectiveObservation_Reference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(advanceDirectiveObservation_Reference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateReference_validateExternalActChoice(
				advanceDirectiveObservation_Reference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_Reference_validateReferenceExternalDocument(
				advanceDirectiveObservation_Reference, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateReferenceExternalDocument constraint of '<em>Advance Directive Observation Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_Reference_validateReferenceExternalDocument(
			AdvanceDirectiveObservation_Reference advanceDirectiveObservation_Reference, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation_Reference.validateReferenceExternalDocument(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReference_ExternalDocument(Reference_ExternalDocument reference_ExternalDocument,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(reference_ExternalDocument, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(reference_ExternalDocument, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(reference_ExternalDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(reference_ExternalDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(reference_ExternalDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(reference_ExternalDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(reference_ExternalDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(reference_ExternalDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateExternalDocument_validateMoodCode(
				reference_ExternalDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReference_ExternalDocument_validateExternalDocumentId(
				reference_ExternalDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReference_ExternalDocument_validateExternalDocumentText(
				reference_ExternalDocument, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateExternalDocumentId constraint of '<em>Reference External Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReference_ExternalDocument_validateExternalDocumentId(
			Reference_ExternalDocument reference_ExternalDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return reference_ExternalDocument.validateExternalDocumentId(diagnostics, context);
	}

	/**
	 * Validates the validateExternalDocumentText constraint of '<em>Reference External Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReference_ExternalDocument_validateExternalDocumentText(
			Reference_ExternalDocument reference_ExternalDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return reference_ExternalDocument.validateExternalDocumentText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_Custodian(
			AdvanceDirectiveObservation_Custodian advanceDirectiveObservation_Custodian, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(advanceDirectiveObservation_Custodian, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(advanceDirectiveObservation_Custodian, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(advanceDirectiveObservation_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(advanceDirectiveObservation_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(advanceDirectiveObservation_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(advanceDirectiveObservation_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(advanceDirectiveObservation_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(advanceDirectiveObservation_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipant2_validateContextControlCode(
				advanceDirectiveObservation_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_Custodian_validateCustodianTypeCode(
				advanceDirectiveObservation_Custodian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_Custodian_validateCustodianAdvanceDirectiveObservationCustodianRole(
				advanceDirectiveObservation_Custodian, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateCustodianTypeCode constraint of '<em>Advance Directive Observation Custodian</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_Custodian_validateCustodianTypeCode(
			AdvanceDirectiveObservation_Custodian advanceDirectiveObservation_Custodian, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation_Custodian.validateCustodianTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateCustodianAdvanceDirectiveObservationCustodianRole constraint of '<em>Advance Directive Observation Custodian</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_Custodian_validateCustodianAdvanceDirectiveObservationCustodianRole(
			AdvanceDirectiveObservation_Custodian advanceDirectiveObservation_Custodian, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation_Custodian.validateCustodianAdvanceDirectiveObservationCustodianRole(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCustodian_CustodianRole(Custodian_CustodianRole custodian_CustodianRole,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(custodian_CustodianRole, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(custodian_CustodianRole, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(custodian_CustodianRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(custodian_CustodianRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(custodian_CustodianRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(custodian_CustodianRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(custodian_CustodianRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(custodian_CustodianRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipantRole_validatePlayingEntityChoice(
				custodian_CustodianRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCustodian_CustodianRole_validateCustodianRoleAddr(
				custodian_CustodianRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCustodian_CustodianRole_validateCustodianRoleClassCode(
				custodian_CustodianRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCustodian_CustodianRole_validateCustodianRoleTelecom(
				custodian_CustodianRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCustodian_CustodianRole_validateCustodianRolePlayingEntity(
				custodian_CustodianRole, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateCustodianRoleAddr constraint of '<em>Custodian Custodian Role</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCustodian_CustodianRole_validateCustodianRoleAddr(
			Custodian_CustodianRole custodian_CustodianRole, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return custodian_CustodianRole.validateCustodianRoleAddr(diagnostics, context);
	}

	/**
	 * Validates the validateCustodianRoleClassCode constraint of '<em>Custodian Custodian Role</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCustodian_CustodianRole_validateCustodianRoleClassCode(
			Custodian_CustodianRole custodian_CustodianRole, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return custodian_CustodianRole.validateCustodianRoleClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateCustodianRoleTelecom constraint of '<em>Custodian Custodian Role</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCustodian_CustodianRole_validateCustodianRoleTelecom(
			Custodian_CustodianRole custodian_CustodianRole, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return custodian_CustodianRole.validateCustodianRoleTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateCustodianRolePlayingEntity constraint of '<em>Custodian Custodian Role</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCustodian_CustodianRole_validateCustodianRolePlayingEntity(
			Custodian_CustodianRole custodian_CustodianRole, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return custodian_CustodianRole.validateCustodianRolePlayingEntity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCustodianRole_CustodianEntity(CustodianRole_CustodianEntity custodianRole_CustodianEntity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(custodianRole_CustodianEntity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(custodianRole_CustodianEntity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(custodianRole_CustodianEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(custodianRole_CustodianEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(custodianRole_CustodianEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(custodianRole_CustodianEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(custodianRole_CustodianEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(custodianRole_CustodianEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validatePlayingEntity_validateDeterminerCode(
				custodianRole_CustodianEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCustodianRole_CustodianEntity_validateCustodianEntityName(
				custodianRole_CustodianEntity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateCustodianEntityName constraint of '<em>Custodian Role Custodian Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCustodianRole_CustodianEntity_validateCustodianEntityName(
			CustodianRole_CustodianEntity custodianRole_CustodianEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return custodianRole_CustodianEntity.validateCustodianEntityName(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_Verifier(
			AdvanceDirectiveObservation_Verifier advanceDirectiveObservation_Verifier, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(advanceDirectiveObservation_Verifier, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(advanceDirectiveObservation_Verifier, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(advanceDirectiveObservation_Verifier, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(advanceDirectiveObservation_Verifier, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(advanceDirectiveObservation_Verifier, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(advanceDirectiveObservation_Verifier, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(advanceDirectiveObservation_Verifier, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(advanceDirectiveObservation_Verifier, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipant2_validateContextControlCode(
				advanceDirectiveObservation_Verifier, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_Verifier_validateVerifierTime(
				advanceDirectiveObservation_Verifier, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_Verifier_validateVerifierTypeCode(
				advanceDirectiveObservation_Verifier, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveObservation_Verifier_validateVerifierParticipantRole(
				advanceDirectiveObservation_Verifier, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateVerifierTime constraint of '<em>Advance Directive Observation Verifier</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_Verifier_validateVerifierTime(
			AdvanceDirectiveObservation_Verifier advanceDirectiveObservation_Verifier, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation_Verifier.validateVerifierTime(diagnostics, context);
	}

	/**
	 * Validates the validateVerifierTypeCode constraint of '<em>Advance Directive Observation Verifier</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_Verifier_validateVerifierTypeCode(
			AdvanceDirectiveObservation_Verifier advanceDirectiveObservation_Verifier, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation_Verifier.validateVerifierTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateVerifierParticipantRole constraint of '<em>Advance Directive Observation Verifier</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveObservation_Verifier_validateVerifierParticipantRole(
			AdvanceDirectiveObservation_Verifier advanceDirectiveObservation_Verifier, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveObservation_Verifier.validateVerifierParticipantRole(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveVerification(AdvanceDirectiveVerification advanceDirectiveVerification,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(advanceDirectiveVerification, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(advanceDirectiveVerification, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipant2_validateContextControlCode(
				advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveVerification_validateAdvanceDirectiveVerificationTemplateId(
				advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveVerification_validateAdvanceDirectiveVerificationTypeCode(
				advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveVerification_validateAdvanceDirectiveVerificationTime(
				advanceDirectiveVerification, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAdvanceDirectiveVerificationTemplateId constraint of '<em>Advance Directive Verification</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveVerification_validateAdvanceDirectiveVerificationTemplateId(
			AdvanceDirectiveVerification advanceDirectiveVerification, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveVerification.validateAdvanceDirectiveVerificationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveVerificationTypeCode constraint of '<em>Advance Directive Verification</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveVerification_validateAdvanceDirectiveVerificationTypeCode(
			AdvanceDirectiveVerification advanceDirectiveVerification, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveVerification.validateAdvanceDirectiveVerificationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveVerificationTime constraint of '<em>Advance Directive Verification</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveVerification_validateAdvanceDirectiveVerificationTime(
			AdvanceDirectiveVerification advanceDirectiveVerification, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveVerification.validateAdvanceDirectiveVerificationTime(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(advanceDirectiveStatusObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(advanceDirectiveStatusObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationNoAdditionalParticipants(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationNoAdditionalRelationships(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationTemplateId(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationClassCode(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationMoodCode(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationCode(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationStatusCode(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationNoAdditionalParticipants constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationNoAdditionalParticipants(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationNoAdditionalParticipants(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationNoAdditionalRelationships constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationNoAdditionalRelationships(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationNoAdditionalRelationships(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationTemplateId constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationTemplateId(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationClassCode constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationClassCode(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationClassCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationMoodCode constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationMoodCode(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationCode constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationCode(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationStatusCode constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationStatusCode(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationStatusCode(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSection(EncountersSection encountersSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(encountersSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(encountersSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSection_validateEncountersSectionEntriesOptionalTemplateId(
				encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalCode(
				encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalTitle(
				encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalText(
				encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSectionEntriesOptional_validateEncountersSectionEntriesOptionalEncounterActivities(
				encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSection_validateEncountersSectionEncounterActivities(
				encountersSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEncountersSectionEncounterActivities constraint of '<em>Encounters Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSection_validateEncountersSectionEncounterActivities(
			EncountersSection encountersSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersSection.validateEncountersSectionEncounterActivities(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersSectionEntriesOptionalTemplateId constraint of '<em>Encounters Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSection_validateEncountersSectionEntriesOptionalTemplateId(
			EncountersSection encountersSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersSection.validateEncountersSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterActivities(EncounterActivities encounterActivities, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(encounterActivities, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(encounterActivities, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterActivities_validateEncounterActivitiesCodeOriginalText(
				encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterActivities_validateEncounterActivitiesCodeOriginalTextReference(
				encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterActivities_validateEncounterActivitiesCodeOriginalTextReferenceValue(
				encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterActivities_validateEncounterActivitiesServiceDeliveryTypeCode(
				encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterActivities_validateEncounterActivitiesTemplateId(
				encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterActivities_validateEncounterActivitiesClassCode(
				encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterActivities_validateEncounterActivitiesMoodCode(
				encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterActivities_validateEncounterActivitiesId(
				encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterActivities_validateEncounterActivitiesCode(
				encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterActivities_validateEncounterActivitiesEffectiveTime(
				encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterActivities_validateEncounterActivitiesServiceDeliveryLocation(
				encounterActivities, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterActivities_validateEncounterActivitiesIndication(
				encounterActivities, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEncounterActivitiesCodeOriginalText constraint of '<em>Encounter Activities</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterActivities_validateEncounterActivitiesCodeOriginalText(
			EncounterActivities encounterActivities, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterActivities.validateEncounterActivitiesCodeOriginalText(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterActivitiesCodeOriginalTextReference constraint of '<em>Encounter Activities</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterActivities_validateEncounterActivitiesCodeOriginalTextReference(
			EncounterActivities encounterActivities, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterActivities.validateEncounterActivitiesCodeOriginalTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterActivitiesCodeOriginalTextReferenceValue constraint of '<em>Encounter Activities</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterActivities_validateEncounterActivitiesCodeOriginalTextReferenceValue(
			EncounterActivities encounterActivities, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterActivities.validateEncounterActivitiesCodeOriginalTextReferenceValue(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterActivitiesServiceDeliveryTypeCode constraint of '<em>Encounter Activities</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterActivities_validateEncounterActivitiesServiceDeliveryTypeCode(
			EncounterActivities encounterActivities, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterActivities.validateEncounterActivitiesServiceDeliveryTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterActivitiesTemplateId constraint of '<em>Encounter Activities</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterActivities_validateEncounterActivitiesTemplateId(
			EncounterActivities encounterActivities, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterActivities.validateEncounterActivitiesTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterActivitiesClassCode constraint of '<em>Encounter Activities</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterActivities_validateEncounterActivitiesClassCode(
			EncounterActivities encounterActivities, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterActivities.validateEncounterActivitiesClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterActivitiesMoodCode constraint of '<em>Encounter Activities</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterActivities_validateEncounterActivitiesMoodCode(
			EncounterActivities encounterActivities, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterActivities.validateEncounterActivitiesMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterActivitiesId constraint of '<em>Encounter Activities</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterActivities_validateEncounterActivitiesId(EncounterActivities encounterActivities,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterActivities.validateEncounterActivitiesId(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterActivitiesCode constraint of '<em>Encounter Activities</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterActivities_validateEncounterActivitiesCode(EncounterActivities encounterActivities,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterActivities.validateEncounterActivitiesCode(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterActivitiesEffectiveTime constraint of '<em>Encounter Activities</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterActivities_validateEncounterActivitiesEffectiveTime(
			EncounterActivities encounterActivities, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterActivities.validateEncounterActivitiesEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterActivitiesServiceDeliveryLocation constraint of '<em>Encounter Activities</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterActivities_validateEncounterActivitiesServiceDeliveryLocation(
			EncounterActivities encounterActivities, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterActivities.validateEncounterActivitiesServiceDeliveryLocation(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterActivitiesIndication constraint of '<em>Encounter Activities</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterActivities_validateEncounterActivitiesIndication(
			EncounterActivities encounterActivities, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterActivities.validateEncounterActivitiesIndication(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateServiceDeliveryLocation(ServiceDeliveryLocation serviceDeliveryLocation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(serviceDeliveryLocation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(serviceDeliveryLocation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(serviceDeliveryLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(serviceDeliveryLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(serviceDeliveryLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(serviceDeliveryLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(serviceDeliveryLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(serviceDeliveryLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipantRole_validatePlayingEntityChoice(
				serviceDeliveryLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateServiceDeliveryLocation_validateServiceDeliveryLocationHasPlayingEntity(
				serviceDeliveryLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateServiceDeliveryLocation_validateServiceDeliveryLocationHasPlayingEntityClassCode(
				serviceDeliveryLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateServiceDeliveryLocation_validateServiceDeliveryLocationTemplateId(
				serviceDeliveryLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateServiceDeliveryLocation_validateServiceDeliveryLocationAddr(
				serviceDeliveryLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateServiceDeliveryLocation_validateServiceDeliveryLocationTelecom(
				serviceDeliveryLocation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateServiceDeliveryLocationHasPlayingEntity constraint of '<em>Service Delivery Location</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateServiceDeliveryLocation_validateServiceDeliveryLocationHasPlayingEntity(
			ServiceDeliveryLocation serviceDeliveryLocation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return serviceDeliveryLocation.validateServiceDeliveryLocationHasPlayingEntity(diagnostics, context);
	}

	/**
	 * Validates the validateServiceDeliveryLocationHasPlayingEntityClassCode constraint of '<em>Service Delivery Location</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateServiceDeliveryLocation_validateServiceDeliveryLocationHasPlayingEntityClassCode(
			ServiceDeliveryLocation serviceDeliveryLocation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return serviceDeliveryLocation.validateServiceDeliveryLocationHasPlayingEntityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateServiceDeliveryLocationTemplateId constraint of '<em>Service Delivery Location</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateServiceDeliveryLocation_validateServiceDeliveryLocationTemplateId(
			ServiceDeliveryLocation serviceDeliveryLocation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return serviceDeliveryLocation.validateServiceDeliveryLocationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateServiceDeliveryLocationAddr constraint of '<em>Service Delivery Location</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateServiceDeliveryLocation_validateServiceDeliveryLocationAddr(
			ServiceDeliveryLocation serviceDeliveryLocation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return serviceDeliveryLocation.validateServiceDeliveryLocationAddr(diagnostics, context);
	}

	/**
	 * Validates the validateServiceDeliveryLocationTelecom constraint of '<em>Service Delivery Location</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateServiceDeliveryLocation_validateServiceDeliveryLocationTelecom(
			ServiceDeliveryLocation serviceDeliveryLocation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return serviceDeliveryLocation.validateServiceDeliveryLocationTelecom(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounter(Encounter encounter, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(encounter, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(encounter, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounter_validateConsolEncounterAdmissionSourceValueSet(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounter_validateConsolEncounterClassCode(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounter_validateConsolEncounterId(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounter_validateConsolEncounterCode(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounter_validateConsolEncounterText(encounter, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateConsolEncounterAdmissionSourceValueSet constraint of '<em>Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounter_validateConsolEncounterAdmissionSourceValueSet(Encounter encounter,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounter.validateConsolEncounterAdmissionSourceValueSet(diagnostics, context);
	}

	/**
	 * Validates the validateConsolEncounterClassCode constraint of '<em>Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounter_validateConsolEncounterClassCode(Encounter encounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encounter.validateConsolEncounterClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsolEncounterId constraint of '<em>Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounter_validateConsolEncounterId(Encounter encounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encounter.validateConsolEncounterId(diagnostics, context);
	}

	/**
	 * Validates the validateConsolEncounterCode constraint of '<em>Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounter_validateConsolEncounterCode(Encounter encounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encounter.validateConsolEncounterCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsolEncounterText constraint of '<em>Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounter_validateConsolEncounterText(Encounter encounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encounter.validateConsolEncounterText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection(ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(immunizationsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(immunizationsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSection_validateImmunizationsSectionEntriesOptionalTemplateId(
				immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSection_validateImmunizationsSectionEntriesOptionalCode(
				immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSectionEntriesOptional_validateImmunizationsSectionEntriesOptionalTitle(
				immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSectionEntriesOptional_validateImmunizationsSectionEntriesOptionalText(
				immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSectionEntriesOptional_validateImmunizationsSectionEntriesOptionalImmunizationActivity(
				immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSection_validateImmunizationsSectionTitle(
				immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSection_validateImmunizationsSectionText(
				immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSection_validateImmunizationsSectionImmunization(
				immunizationsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateImmunizationsSectionEntriesOptionalCode constraint of '<em>Immunizations Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection_validateImmunizationsSectionEntriesOptionalCode(
			ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationsSection.validateImmunizationsSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionTitle constraint of '<em>Immunizations Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection_validateImmunizationsSectionTitle(
			ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationsSection.validateImmunizationsSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionText constraint of '<em>Immunizations Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection_validateImmunizationsSectionText(
			ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationsSection.validateImmunizationsSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionImmunization constraint of '<em>Immunizations Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection_validateImmunizationsSectionImmunization(
			ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationsSection.validateImmunizationsSectionImmunization(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionEntriesOptionalTemplateId constraint of '<em>Immunizations Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection_validateImmunizationsSectionEntriesOptionalTemplateId(
			ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationsSection.validateImmunizationsSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity(ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(immunizationActivity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(immunizationActivity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSubstanceAdministration_validateClassCode(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityTemplateId(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityClassCode(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityId(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityCode(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityStatusCode(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityEffectiveTime(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityRouteCode(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityApproachSiteCode(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityDoseQuantity(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityNegationInd(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityText(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityRepeatNumber(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityAdministrationUnitCode(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityDrugVehicle(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityIndication(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityInstructions(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityMedicationDispense(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityReactionObservation(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityPrecondition(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityImmunizationRefusalReason(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityConsumable(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityPerformer(
				immunizationActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationActivity_validateImmunizationActivityMedicationSupplyOrder(
				immunizationActivity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateImmunizationActivityTemplateId constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityTemplateId(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityClassCode constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityClassCode(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityId constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityId(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityId(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityCode constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityCode(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityStatusCode constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityStatusCode(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityEffectiveTime constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityEffectiveTime(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityRouteCode constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityRouteCode(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityApproachSiteCode constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityApproachSiteCode(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityApproachSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityDoseQuantity constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityDoseQuantity(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityNegationInd constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityNegationInd(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityNegationInd(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityText constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityText(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityText(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityRepeatNumber constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityRepeatNumber(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityRepeatNumber(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityAdministrationUnitCode constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityAdministrationUnitCode(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityAdministrationUnitCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityDrugVehicle constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityDrugVehicle(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityDrugVehicle(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityIndication constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityIndication(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityIndication(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityInstructions constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityInstructions(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityInstructions(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityMedicationDispense constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityMedicationDispense(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityMedicationDispense(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityReactionObservation constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityReactionObservation(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityReactionObservation(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityPrecondition constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityPrecondition(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityPrecondition(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityImmunizationRefusalReason constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityImmunizationRefusalReason(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityImmunizationRefusalReason(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityConsumable constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityConsumable(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityConsumable(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityPerformer constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityPerformer(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityPerformer(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationActivityMedicationSupplyOrder constraint of '<em>Immunization Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationActivity_validateImmunizationActivityMedicationSupplyOrder(
			ImmunizationActivity immunizationActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationActivity.validateImmunizationActivityMedicationSupplyOrder(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationRefusalReason(ImmunizationRefusalReason immunizationRefusalReason,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(immunizationRefusalReason, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(immunizationRefusalReason, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(immunizationRefusalReason, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(immunizationRefusalReason, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(immunizationRefusalReason, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(immunizationRefusalReason, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(immunizationRefusalReason, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(immunizationRefusalReason, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationRefusalReason_validateImmunizationRefusalReasonTemplateId(
				immunizationRefusalReason, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationRefusalReason_validateImmunizationRefusalReasonClassCode(
				immunizationRefusalReason, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationRefusalReason_validateImmunizationRefusalReasonCode(
				immunizationRefusalReason, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationRefusalReason_validateImmunizationRefusalReasonId(
				immunizationRefusalReason, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationRefusalReason_validateImmunizationRefusalReasonMoodCode(
				immunizationRefusalReason, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationRefusalReason_validateImmunizationRefusalReasonStatusCode(
				immunizationRefusalReason, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateImmunizationRefusalReasonTemplateId constraint of '<em>Immunization Refusal Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationRefusalReason_validateImmunizationRefusalReasonTemplateId(
			ImmunizationRefusalReason immunizationRefusalReason, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationRefusalReason.validateImmunizationRefusalReasonTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationRefusalReasonClassCode constraint of '<em>Immunization Refusal Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationRefusalReason_validateImmunizationRefusalReasonClassCode(
			ImmunizationRefusalReason immunizationRefusalReason, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationRefusalReason.validateImmunizationRefusalReasonClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationRefusalReasonCode constraint of '<em>Immunization Refusal Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationRefusalReason_validateImmunizationRefusalReasonCode(
			ImmunizationRefusalReason immunizationRefusalReason, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationRefusalReason.validateImmunizationRefusalReasonCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationRefusalReasonId constraint of '<em>Immunization Refusal Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationRefusalReason_validateImmunizationRefusalReasonId(
			ImmunizationRefusalReason immunizationRefusalReason, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationRefusalReason.validateImmunizationRefusalReasonId(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationRefusalReasonMoodCode constraint of '<em>Immunization Refusal Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationRefusalReason_validateImmunizationRefusalReasonMoodCode(
			ImmunizationRefusalReason immunizationRefusalReason, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationRefusalReason.validateImmunizationRefusalReasonMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationRefusalReasonStatusCode constraint of '<em>Immunization Refusal Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationRefusalReason_validateImmunizationRefusalReasonStatusCode(
			ImmunizationRefusalReason immunizationRefusalReason, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationRefusalReason.validateImmunizationRefusalReasonStatusCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider(InsuranceProvider insuranceProvider, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(insuranceProvider, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(insuranceProvider, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderInformationSource(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderSequenceNumber(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderPaymentProviders(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderPayerEntryID(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderHealthInsuranceType(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderInsuranceInformation(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderInsuranceInfoSourceID(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderInsuranceInfoSourceAddr(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderHealthPlanCoverageStartTime(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderHealthPlanCoverageStopTime(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderPatientInformation(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderMemberId(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderMemberIdRoot(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderRelationshipToSubscriber(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderRelationshipToSubscriberCodeSystem(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderPatientName(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderSubscriberInformation(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderSubscriberId(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderSubscriberIdRoot(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderSubscriberAddress(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderFinancialResponsibilityPartyType(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderFinancialResponsibilityPartyTypeCode(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderFinancialResponsibilityPartyAddress(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderClassCode(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderMoodCode(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderId(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderCode(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderStatusCode(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderPayerEntry(
				insuranceProvider, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateInsuranceProviderInformationSource constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderInformationSource(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderSequenceNumber constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderSequenceNumber(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderSequenceNumber(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderPaymentProviders constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderPaymentProviders(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderPaymentProviders(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderPayerEntryID constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderPayerEntryID(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderPayerEntryID(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderHealthInsuranceType constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderHealthInsuranceType(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderHealthInsuranceType(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderInsuranceInformation constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderInsuranceInformation(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderInsuranceInformation(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderInsuranceInfoSourceID constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderInsuranceInfoSourceID(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderInsuranceInfoSourceID(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderInsuranceInfoSourceAddr constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderInsuranceInfoSourceAddr(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderInsuranceInfoSourceAddr(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderHealthPlanCoverageStartTime constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderHealthPlanCoverageStartTime(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderHealthPlanCoverageStartTime(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderHealthPlanCoverageStopTime constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderHealthPlanCoverageStopTime(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderHealthPlanCoverageStopTime(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderPatientInformation constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderPatientInformation(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderPatientInformation(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderMemberId constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderMemberId(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderMemberId(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderMemberIdRoot constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderMemberIdRoot(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderMemberIdRoot(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderRelationshipToSubscriber constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderRelationshipToSubscriber(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderRelationshipToSubscriber(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderRelationshipToSubscriberCodeSystem constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderRelationshipToSubscriberCodeSystem(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderRelationshipToSubscriberCodeSystem(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderPatientName constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderPatientName(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderPatientName(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderSubscriberInformation constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderSubscriberInformation(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderSubscriberInformation(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderSubscriberId constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderSubscriberId(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderSubscriberId(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderSubscriberIdRoot constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderSubscriberIdRoot(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderSubscriberIdRoot(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderSubscriberAddress constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderSubscriberAddress(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderSubscriberAddress(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderFinancialResponsibilityPartyType constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderFinancialResponsibilityPartyType(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderFinancialResponsibilityPartyType(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderFinancialResponsibilityPartyTypeCode constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderFinancialResponsibilityPartyTypeCode(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderFinancialResponsibilityPartyTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderFinancialResponsibilityPartyAddress constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderFinancialResponsibilityPartyAddress(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderFinancialResponsibilityPartyAddress(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderClassCode constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderClassCode(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderMoodCode constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderMoodCode(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderId constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderId(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderId(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderCode constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderCode(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderCode(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderStatusCode constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderStatusCode(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderPayerEntry constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderPayerEntry(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderPayerEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry(PayerEntry payerEntry, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(payerEntry, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(payerEntry, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryPayerEntityIsRequired(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryCoveredPartyIsRequired(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryCoveredPartyTime(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntrySubscriberIsAllowed(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntrySubscriberTime(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryEntryRelationshipREFR(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryClassCode(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryMoodCode(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryId(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryStatusCode(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryPayerEntity(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryCoveredParty(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntrySubscriber(payerEntry, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePayerEntryPayerEntityIsRequired constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryPayerEntityIsRequired(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntryPayerEntityIsRequired(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryCoveredPartyIsRequired constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryCoveredPartyIsRequired(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntryCoveredPartyIsRequired(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryCoveredPartyTime constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryCoveredPartyTime(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntryCoveredPartyTime(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntrySubscriberIsAllowed constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntrySubscriberIsAllowed(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntrySubscriberIsAllowed(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntrySubscriberTime constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntrySubscriberTime(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntrySubscriberTime(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryEntryRelationshipREFR constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryEntryRelationshipREFR(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntryEntryRelationshipREFR(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryClassCode constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryClassCode(PayerEntry payerEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntry.validatePayerEntryClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryMoodCode constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryMoodCode(PayerEntry payerEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntry.validatePayerEntryMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryId constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryId(PayerEntry payerEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntry.validatePayerEntryId(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryStatusCode constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryStatusCode(PayerEntry payerEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntry.validatePayerEntryStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryPayerEntity constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryPayerEntity(PayerEntry payerEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntry.validatePayerEntryPayerEntity(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryCoveredParty constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryCoveredParty(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntryCoveredParty(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntrySubscriber constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntrySubscriber(PayerEntry payerEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntry.validatePayerEntrySubscriber(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCoveredParty(CoveredParty coveredParty, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(coveredParty, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(coveredParty, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipantRole_validatePlayingEntityChoice(
				coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCoveredParty_validateCoveredPartyId(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCoveredParty_validateCoveredPartyCode(coveredParty, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateCoveredPartyId constraint of '<em>Covered Party</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCoveredParty_validateCoveredPartyId(CoveredParty coveredParty, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return coveredParty.validateCoveredPartyId(diagnostics, context);
	}

	/**
	 * Validates the validateCoveredPartyCode constraint of '<em>Covered Party</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCoveredParty_validateCoveredPartyCode(CoveredParty coveredParty,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return coveredParty.validateCoveredPartyCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePolicySubscriber(PolicySubscriber policySubscriber, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(policySubscriber, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(policySubscriber, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipantRole_validatePlayingEntityChoice(
				policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePolicySubscriber_validatePolicySubscriberId(policySubscriber, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePolicySubscriberId constraint of '<em>Policy Subscriber</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePolicySubscriber_validatePolicySubscriberId(PolicySubscriber policySubscriber,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return policySubscriber.validatePolicySubscriberId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference(ExternalReference externalReference, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(externalReference, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(externalReference, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceHasNoCode(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceHasReference(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceHasReferenceExternalDocument(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceHasReferenceExternalDocumentID(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceHasReferenceExternalDocumentText(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceTemplateId(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceClassCode(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceMoodCode(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceId(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceText(externalReference, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateExternalReferenceHasNoCode constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceHasNoCode(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceHasNoCode(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceHasReference constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceHasReference(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceHasReference(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceHasReferenceExternalDocument constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceHasReferenceExternalDocument(
			ExternalReference externalReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceHasReferenceExternalDocument(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceHasReferenceExternalDocumentID constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceHasReferenceExternalDocumentID(
			ExternalReference externalReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceHasReferenceExternalDocumentID(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceHasReferenceExternalDocumentText constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceHasReferenceExternalDocumentText(
			ExternalReference externalReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceHasReferenceExternalDocumentText(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceTemplateId constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceTemplateId(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceClassCode constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceClassCode(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceMoodCode constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceMoodCode(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceId constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceId(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceId(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceText constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceText(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupport(Support support, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return validate_EveryDefaultConstraint(support, diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSection(VitalSignsSection vitalSignsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(vitalSignsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(vitalSignsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSection_validateVitalSignsSectionEntriesOptionalTemplateId(
				vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSection_validateVitalSignsSectionEntriesOptionalCode(
				vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSectionEntriesOptional_validateVitalSignsSectionEntriesOptionalText(
				vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSectionEntriesOptional_validateVitalSignsSectionEntriesOptionalTitle(
				vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSectionEntriesOptional_validateVitalSignsSectionEntriesOptionalVitalSignsOrganizer(
				vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSection_validateVitalSignsSectionText(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSection_validateVitalSignsSectionTitle(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSection_validateVitalSignsSectionVitalSignsOrganizer(
				vitalSignsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateVitalSignsSectionEntriesOptionalCode constraint of '<em>Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSection_validateVitalSignsSectionEntriesOptionalCode(
			VitalSignsSection vitalSignsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsSection.validateVitalSignsSectionEntriesOptionalCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsSectionTitle constraint of '<em>Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSection_validateVitalSignsSectionTitle(VitalSignsSection vitalSignsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsSection.validateVitalSignsSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsSectionText constraint of '<em>Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSection_validateVitalSignsSectionText(VitalSignsSection vitalSignsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsSection.validateVitalSignsSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsSectionVitalSignsOrganizer constraint of '<em>Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSection_validateVitalSignsSectionVitalSignsOrganizer(
			VitalSignsSection vitalSignsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsSection.validateVitalSignsSectionVitalSignsOrganizer(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsSectionEntriesOptionalTemplateId constraint of '<em>Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSection_validateVitalSignsSectionEntriesOptionalTemplateId(
			VitalSignsSection vitalSignsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsSection.validateVitalSignsSectionEntriesOptionalTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer(VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(vitalSignsOrganizer, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(vitalSignsOrganizer, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerTemplateId(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerClassCode(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerMoodCode(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerId(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerCode(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerStatusCode(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerEffectiveTime(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerVitalSignObservation(
				vitalSignsOrganizer, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateVitalSignsOrganizerTemplateId constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerTemplateId(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerClassCode constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerClassCode(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerMoodCode constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerMoodCode(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerId constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerId(VitalSignsOrganizer vitalSignsOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerId(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerCode constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerCode(VitalSignsOrganizer vitalSignsOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerStatusCode constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerStatusCode(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerEffectiveTime constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerEffectiveTime(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerVitalSignObservation constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerVitalSignObservation(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerVitalSignObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation(VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(vitalSignObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(vitalSignObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignObservation_validateVitalSignObservationTemplateId(
				vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignObservation_validateVitalSignObservationClassCode(
				vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignObservation_validateVitalSignObservationMoodCode(
				vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignObservation_validateVitalSignObservationId(
				vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignObservation_validateVitalSignObservationCode(
				vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignObservation_validateVitalSignObservationStatusCode(
				vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignObservation_validateVitalSignObservationEffectiveTime(
				vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignObservation_validateVitalSignObservationValue(
				vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignObservation_validateVitalSignObservationInterpretationCode(
				vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignObservation_validateVitalSignObservationMethodCode(
				vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignObservation_validateVitalSignObservationTargetSiteCode(
				vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignObservation_validateVitalSignObservationText(
				vitalSignObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignObservation_validateVitalSignObservationAuthor(
				vitalSignObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateVitalSignObservationTemplateId constraint of '<em>Vital Sign Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation_validateVitalSignObservationTemplateId(
			VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignObservation.validateVitalSignObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignObservationClassCode constraint of '<em>Vital Sign Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation_validateVitalSignObservationClassCode(
			VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignObservation.validateVitalSignObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignObservationMoodCode constraint of '<em>Vital Sign Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation_validateVitalSignObservationMoodCode(
			VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignObservation.validateVitalSignObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignObservationId constraint of '<em>Vital Sign Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation_validateVitalSignObservationId(
			VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignObservation.validateVitalSignObservationId(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignObservationCode constraint of '<em>Vital Sign Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation_validateVitalSignObservationCode(
			VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignObservation.validateVitalSignObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignObservationStatusCode constraint of '<em>Vital Sign Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation_validateVitalSignObservationStatusCode(
			VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignObservation.validateVitalSignObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignObservationEffectiveTime constraint of '<em>Vital Sign Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation_validateVitalSignObservationEffectiveTime(
			VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignObservation.validateVitalSignObservationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignObservationValue constraint of '<em>Vital Sign Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation_validateVitalSignObservationValue(
			VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignObservation.validateVitalSignObservationValue(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignObservationInterpretationCode constraint of '<em>Vital Sign Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation_validateVitalSignObservationInterpretationCode(
			VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignObservation.validateVitalSignObservationInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignObservationMethodCode constraint of '<em>Vital Sign Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation_validateVitalSignObservationMethodCode(
			VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignObservation.validateVitalSignObservationMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignObservationTargetSiteCode constraint of '<em>Vital Sign Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation_validateVitalSignObservationTargetSiteCode(
			VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignObservation.validateVitalSignObservationTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignObservationText constraint of '<em>Vital Sign Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation_validateVitalSignObservationText(
			VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignObservation.validateVitalSignObservationText(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignObservationAuthor constraint of '<em>Vital Sign Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignObservation_validateVitalSignObservationAuthor(
			VitalSignObservation vitalSignObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignObservation.validateVitalSignObservationAuthor(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPastIllnessSection(HistoryOfPastIllnessSection historyOfPastIllnessSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(historyOfPastIllnessSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(historyOfPastIllnessSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionTemplateId(
				historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionCode(
				historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionTitle(
				historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionText(
				historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionProblemObservation(
				historyOfPastIllnessSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHistoryOfPastIllnessSectionTemplateId constraint of '<em>History Of Past Illness Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionTemplateId(
			HistoryOfPastIllnessSection historyOfPastIllnessSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return historyOfPastIllnessSection.validateHistoryOfPastIllnessSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryOfPastIllnessSectionCode constraint of '<em>History Of Past Illness Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionCode(
			HistoryOfPastIllnessSection historyOfPastIllnessSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return historyOfPastIllnessSection.validateHistoryOfPastIllnessSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryOfPastIllnessSectionTitle constraint of '<em>History Of Past Illness Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionTitle(
			HistoryOfPastIllnessSection historyOfPastIllnessSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return historyOfPastIllnessSection.validateHistoryOfPastIllnessSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryOfPastIllnessSectionText constraint of '<em>History Of Past Illness Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionText(
			HistoryOfPastIllnessSection historyOfPastIllnessSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return historyOfPastIllnessSection.validateHistoryOfPastIllnessSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryOfPastIllnessSectionProblemObservation constraint of '<em>History Of Past Illness Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionProblemObservation(
			HistoryOfPastIllnessSection historyOfPastIllnessSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return historyOfPastIllnessSection.validateHistoryOfPastIllnessSectionProblemObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintSection(ChiefComplaintSection chiefComplaintSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(chiefComplaintSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(chiefComplaintSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChiefComplaintSection_validateChiefComplaintSectionTemplateId(
				chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChiefComplaintSection_validateChiefComplaintSectionCode(
				chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChiefComplaintSection_validateChiefComplaintSectionText(
				chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChiefComplaintSection_validateChiefComplaintSectionTitle(
				chiefComplaintSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateChiefComplaintSectionTemplateId constraint of '<em>Chief Complaint Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintSection_validateChiefComplaintSectionTemplateId(
			ChiefComplaintSection chiefComplaintSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return chiefComplaintSection.validateChiefComplaintSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateChiefComplaintSectionCode constraint of '<em>Chief Complaint Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintSection_validateChiefComplaintSectionCode(
			ChiefComplaintSection chiefComplaintSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return chiefComplaintSection.validateChiefComplaintSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateChiefComplaintSectionText constraint of '<em>Chief Complaint Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintSection_validateChiefComplaintSectionText(
			ChiefComplaintSection chiefComplaintSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return chiefComplaintSection.validateChiefComplaintSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateChiefComplaintSectionTitle constraint of '<em>Chief Complaint Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintSection_validateChiefComplaintSectionTitle(
			ChiefComplaintSection chiefComplaintSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return chiefComplaintSection.validateChiefComplaintSectionTitle(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForReferralSection(ReasonForReferralSection reasonForReferralSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(reasonForReferralSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(reasonForReferralSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForReferralSection_validateReasonForReferralSectionTemplateId(
				reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForReferralSection_validateReasonForReferralSectionCode(
				reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForReferralSection_validateReasonForReferralSectionTitle(
				reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForReferralSection_validateReasonForReferralSectionText(
				reasonForReferralSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateReasonForReferralSectionTemplateId constraint of '<em>Reason For Referral Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForReferralSection_validateReasonForReferralSectionTemplateId(
			ReasonForReferralSection reasonForReferralSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForReferralSection.validateReasonForReferralSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateReasonForReferralSectionCode constraint of '<em>Reason For Referral Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForReferralSection_validateReasonForReferralSectionCode(
			ReasonForReferralSection reasonForReferralSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForReferralSection.validateReasonForReferralSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateReasonForReferralSectionTitle constraint of '<em>Reason For Referral Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForReferralSection_validateReasonForReferralSectionTitle(
			ReasonForReferralSection reasonForReferralSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForReferralSection.validateReasonForReferralSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateReasonForReferralSectionText constraint of '<em>Reason For Referral Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForReferralSection_validateReasonForReferralSectionText(
			ReasonForReferralSection reasonForReferralSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForReferralSection.validateReasonForReferralSectionText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPresentIllness(HistoryOfPresentIllness historyOfPresentIllness,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(historyOfPresentIllness, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(historyOfPresentIllness, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPresentIllness_validateHistoryOfPresentIllnessTemplateId(
				historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPresentIllness_validateHistoryOfPresentIllnessCode(
				historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPresentIllness_validateHistoryOfPresentIllnessTitle(
				historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPresentIllness_validateHistoryOfPresentIllnessText(
				historyOfPresentIllness, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHistoryOfPresentIllnessTemplateId constraint of '<em>History Of Present Illness</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPresentIllness_validateHistoryOfPresentIllnessTemplateId(
			HistoryOfPresentIllness historyOfPresentIllness, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyOfPresentIllness.validateHistoryOfPresentIllnessTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryOfPresentIllnessCode constraint of '<em>History Of Present Illness</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPresentIllness_validateHistoryOfPresentIllnessCode(
			HistoryOfPresentIllness historyOfPresentIllness, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyOfPresentIllness.validateHistoryOfPresentIllnessCode(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryOfPresentIllnessTitle constraint of '<em>History Of Present Illness</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPresentIllness_validateHistoryOfPresentIllnessTitle(
			HistoryOfPresentIllness historyOfPresentIllness, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyOfPresentIllness.validateHistoryOfPresentIllnessTitle(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryOfPresentIllnessText constraint of '<em>History Of Present Illness</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPresentIllness_validateHistoryOfPresentIllnessText(
			HistoryOfPresentIllness historyOfPresentIllness, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyOfPresentIllness.validateHistoryOfPresentIllnessText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalAdmissionDiagnosisSection(
			HospitalAdmissionDiagnosisSection hospitalAdmissionDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalAdmissionDiagnosisSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(hospitalAdmissionDiagnosisSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalAdmissionDiagnosisSection_validateHospitalAdmissionDiagnosisSectionTemplateId(
				hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalAdmissionDiagnosisSection_validateHospitalAdmissionDiagnosisSectionCode(
				hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalAdmissionDiagnosisSection_validateHospitalAdmissionDiagnosisSectionCondition(
				hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalAdmissionDiagnosisSectionTemplateId constraint of '<em>Hospital Admission Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalAdmissionDiagnosisSection_validateHospitalAdmissionDiagnosisSectionTemplateId(
			HospitalAdmissionDiagnosisSection hospitalAdmissionDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalAdmissionDiagnosisSection.validateHospitalAdmissionDiagnosisSectionTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalAdmissionDiagnosisSectionCode constraint of '<em>Hospital Admission Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalAdmissionDiagnosisSection_validateHospitalAdmissionDiagnosisSectionCode(
			HospitalAdmissionDiagnosisSection hospitalAdmissionDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalAdmissionDiagnosisSection.validateHospitalAdmissionDiagnosisSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalAdmissionDiagnosisSectionCondition constraint of '<em>Hospital Admission Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalAdmissionDiagnosisSection_validateHospitalAdmissionDiagnosisSectionCondition(
			HospitalAdmissionDiagnosisSection hospitalAdmissionDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalAdmissionDiagnosisSection.validateHospitalAdmissionDiagnosisSectionCondition(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeDiagnosisSection(
			HospitalDischargeDiagnosisSection hospitalDischargeDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalDischargeDiagnosisSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(hospitalDischargeDiagnosisSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(hospitalDischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(hospitalDischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(hospitalDischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalDischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalDischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(hospitalDischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				hospitalDischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				hospitalDischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeDiagnosisSection_validateHospitalDischargeDiagnosisSectionTemplateId(
				hospitalDischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeDiagnosisSection_validateHospitalDischargeDiagnosisSectionCode(
				hospitalDischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeDiagnosisSection_validateHospitalDischargeDiagnosisSectionTitle(
				hospitalDischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeDiagnosisSection_validateHospitalDischargeDiagnosisSectionText(
				hospitalDischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeDiagnosisSection_validateHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis(
				hospitalDischargeDiagnosisSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalDischargeDiagnosisSectionTemplateId constraint of '<em>Hospital Discharge Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeDiagnosisSection_validateHospitalDischargeDiagnosisSectionTemplateId(
			HospitalDischargeDiagnosisSection hospitalDischargeDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeDiagnosisSection.validateHospitalDischargeDiagnosisSectionTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeDiagnosisSectionCode constraint of '<em>Hospital Discharge Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeDiagnosisSection_validateHospitalDischargeDiagnosisSectionCode(
			HospitalDischargeDiagnosisSection hospitalDischargeDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeDiagnosisSection.validateHospitalDischargeDiagnosisSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeDiagnosisSectionTitle constraint of '<em>Hospital Discharge Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeDiagnosisSection_validateHospitalDischargeDiagnosisSectionTitle(
			HospitalDischargeDiagnosisSection hospitalDischargeDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeDiagnosisSection.validateHospitalDischargeDiagnosisSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeDiagnosisSectionText constraint of '<em>Hospital Discharge Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeDiagnosisSection_validateHospitalDischargeDiagnosisSectionText(
			HospitalDischargeDiagnosisSection hospitalDischargeDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeDiagnosisSection.validateHospitalDischargeDiagnosisSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis constraint of '<em>Hospital Discharge Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeDiagnosisSection_validateHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis(
			HospitalDischargeDiagnosisSection hospitalDischargeDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeDiagnosisSection.validateHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalAdmissionMedicationsSectionEntriesOptional(
			HospitalAdmissionMedicationsSectionEntriesOptional hospitalAdmissionMedicationsSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalAdmissionMedicationsSectionEntriesOptional, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			hospitalAdmissionMedicationsSectionEntriesOptional, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(
				hospitalAdmissionMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(
				hospitalAdmissionMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(
				hospitalAdmissionMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalAdmissionMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalAdmissionMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(
				hospitalAdmissionMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				hospitalAdmissionMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				hospitalAdmissionMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalAdmissionMedicationsSectionEntriesOptional_validateHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId(
				hospitalAdmissionMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalAdmissionMedicationsSectionEntriesOptional_validateHospitalAdmissionMedicationsSectionEntriesOptionalCode(
				hospitalAdmissionMedicationsSectionEntriesOptional, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId constraint of '<em>Hospital Admission Medications Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalAdmissionMedicationsSectionEntriesOptional_validateHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId(
			HospitalAdmissionMedicationsSectionEntriesOptional hospitalAdmissionMedicationsSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return hospitalAdmissionMedicationsSectionEntriesOptional.validateHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalAdmissionMedicationsSectionEntriesOptionalCode constraint of '<em>Hospital Admission Medications Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalAdmissionMedicationsSectionEntriesOptional_validateHospitalAdmissionMedicationsSectionEntriesOptionalCode(
			HospitalAdmissionMedicationsSectionEntriesOptional hospitalAdmissionMedicationsSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return hospitalAdmissionMedicationsSectionEntriesOptional.validateHospitalAdmissionMedicationsSectionEntriesOptionalCode(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeMedicationsSection(
			HospitalDischargeMedicationsSection hospitalDischargeMedicationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalDischargeMedicationsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(hospitalDischargeMedicationsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSection_validateHospitalDischargeMedicationsSectionEntriesOptionalTemplateId(
				hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalCode(
				hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalTitle(
				hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalText(
				hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication(
				hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSection_validateHospitalDischargeMedicationsSectionDischargeMedication(
				hospitalDischargeMedicationsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalDischargeMedicationsSectionDischargeMedication constraint of '<em>Hospital Discharge Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeMedicationsSection_validateHospitalDischargeMedicationsSectionDischargeMedication(
			HospitalDischargeMedicationsSection hospitalDischargeMedicationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeMedicationsSection.validateHospitalDischargeMedicationsSectionDischargeMedication(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeMedicationsSectionEntriesOptionalTemplateId constraint of '<em>Hospital Discharge Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeMedicationsSection_validateHospitalDischargeMedicationsSectionEntriesOptionalTemplateId(
			HospitalDischargeMedicationsSection hospitalDischargeMedicationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeMedicationsSection.validateHospitalDischargeMedicationsSectionEntriesOptionalTemplateId(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargePhysicalSection(
			HospitalDischargePhysicalSection hospitalDischargePhysicalSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalDischargePhysicalSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(hospitalDischargePhysicalSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(hospitalDischargePhysicalSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(hospitalDischargePhysicalSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(hospitalDischargePhysicalSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalDischargePhysicalSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalDischargePhysicalSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(hospitalDischargePhysicalSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				hospitalDischargePhysicalSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				hospitalDischargePhysicalSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargePhysicalSection_validateHospitalDischargePhysicalSectionTemplateId(
				hospitalDischargePhysicalSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargePhysicalSection_validateHospitalDischargePhysicalSectionCode(
				hospitalDischargePhysicalSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargePhysicalSection_validateHospitalDischargePhysicalSectionTitle(
				hospitalDischargePhysicalSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargePhysicalSection_validateHospitalDischargePhysicalSectionText(
				hospitalDischargePhysicalSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalDischargePhysicalSectionTemplateId constraint of '<em>Hospital Discharge Physical Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargePhysicalSection_validateHospitalDischargePhysicalSectionTemplateId(
			HospitalDischargePhysicalSection hospitalDischargePhysicalSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargePhysicalSection.validateHospitalDischargePhysicalSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargePhysicalSectionCode constraint of '<em>Hospital Discharge Physical Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargePhysicalSection_validateHospitalDischargePhysicalSectionCode(
			HospitalDischargePhysicalSection hospitalDischargePhysicalSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargePhysicalSection.validateHospitalDischargePhysicalSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargePhysicalSectionTitle constraint of '<em>Hospital Discharge Physical Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargePhysicalSection_validateHospitalDischargePhysicalSectionTitle(
			HospitalDischargePhysicalSection hospitalDischargePhysicalSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargePhysicalSection.validateHospitalDischargePhysicalSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargePhysicalSectionText constraint of '<em>Hospital Discharge Physical Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargePhysicalSection_validateHospitalDischargePhysicalSectionText(
			HospitalDischargePhysicalSection hospitalDischargePhysicalSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargePhysicalSection.validateHospitalDischargePhysicalSectionText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintAndReasonForVisitSection(
			ChiefComplaintAndReasonForVisitSection chiefComplaintAndReasonForVisitSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(chiefComplaintAndReasonForVisitSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			chiefComplaintAndReasonForVisitSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(chiefComplaintAndReasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(chiefComplaintAndReasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(chiefComplaintAndReasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(chiefComplaintAndReasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(chiefComplaintAndReasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(chiefComplaintAndReasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				chiefComplaintAndReasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				chiefComplaintAndReasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChiefComplaintAndReasonForVisitSection_validateChiefComplaintAndReasonForVisitSectionTemplateId(
				chiefComplaintAndReasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChiefComplaintAndReasonForVisitSection_validateChiefComplaintAndReasonForVisitSectionCode(
				chiefComplaintAndReasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChiefComplaintAndReasonForVisitSection_validateChiefComplaintAndReasonForVisitSectionText(
				chiefComplaintAndReasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChiefComplaintAndReasonForVisitSection_validateChiefComplaintAndReasonForVisitSectionTitle(
				chiefComplaintAndReasonForVisitSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateChiefComplaintAndReasonForVisitSectionTemplateId constraint of '<em>Chief Complaint And Reason For Visit Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintAndReasonForVisitSection_validateChiefComplaintAndReasonForVisitSectionTemplateId(
			ChiefComplaintAndReasonForVisitSection chiefComplaintAndReasonForVisitSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return chiefComplaintAndReasonForVisitSection.validateChiefComplaintAndReasonForVisitSectionTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateChiefComplaintAndReasonForVisitSectionCode constraint of '<em>Chief Complaint And Reason For Visit Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintAndReasonForVisitSection_validateChiefComplaintAndReasonForVisitSectionCode(
			ChiefComplaintAndReasonForVisitSection chiefComplaintAndReasonForVisitSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return chiefComplaintAndReasonForVisitSection.validateChiefComplaintAndReasonForVisitSectionCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateChiefComplaintAndReasonForVisitSectionText constraint of '<em>Chief Complaint And Reason For Visit Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintAndReasonForVisitSection_validateChiefComplaintAndReasonForVisitSectionText(
			ChiefComplaintAndReasonForVisitSection chiefComplaintAndReasonForVisitSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return chiefComplaintAndReasonForVisitSection.validateChiefComplaintAndReasonForVisitSectionText(
			diagnostics, context);
	}

	/**
	 * Validates the validateChiefComplaintAndReasonForVisitSectionTitle constraint of '<em>Chief Complaint And Reason For Visit Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintAndReasonForVisitSection_validateChiefComplaintAndReasonForVisitSectionTitle(
			ChiefComplaintAndReasonForVisitSection chiefComplaintAndReasonForVisitSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return chiefComplaintAndReasonForVisitSection.validateChiefComplaintAndReasonForVisitSectionTitle(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitSection(ReasonForVisitSection reasonForVisitSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(reasonForVisitSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(reasonForVisitSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForVisitSection_validateReasonForVisitSectionTemplateId(
				reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForVisitSection_validateReasonForVisitSectionCode(
				reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForVisitSection_validateReasonForVisitSectionText(
				reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForVisitSection_validateReasonForVisitSectionTitle(
				reasonForVisitSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateReasonForVisitSectionTemplateId constraint of '<em>Reason For Visit Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitSection_validateReasonForVisitSectionTemplateId(
			ReasonForVisitSection reasonForVisitSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForVisitSection.validateReasonForVisitSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateReasonForVisitSectionCode constraint of '<em>Reason For Visit Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitSection_validateReasonForVisitSectionCode(
			ReasonForVisitSection reasonForVisitSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForVisitSection.validateReasonForVisitSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateReasonForVisitSectionText constraint of '<em>Reason For Visit Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitSection_validateReasonForVisitSectionText(
			ReasonForVisitSection reasonForVisitSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForVisitSection.validateReasonForVisitSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateReasonForVisitSectionTitle constraint of '<em>Reason For Visit Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitSection_validateReasonForVisitSectionTitle(
			ReasonForVisitSection reasonForVisitSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForVisitSection.validateReasonForVisitSectionTitle(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRelatedInformant(RelatedInformant relatedInformant, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(relatedInformant, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(relatedInformant, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(relatedInformant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(relatedInformant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(relatedInformant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(relatedInformant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(relatedInformant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(relatedInformant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateRelatedInformant_validateRelatedInformantAddr(relatedInformant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateRelatedInformant_validateRelatedInformantCode(relatedInformant, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateRelatedInformantAddr constraint of '<em>Related Informant</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRelatedInformant_validateRelatedInformantAddr(RelatedInformant relatedInformant,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return relatedInformant.validateRelatedInformantAddr(diagnostics, context);
	}

	/**
	 * Validates the validateRelatedInformantCode constraint of '<em>Related Informant</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRelatedInformant_validateRelatedInformantCode(RelatedInformant relatedInformant,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return relatedInformant.validateRelatedInformantCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterPerformer(EncounterPerformer encounterPerformer, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(encounterPerformer, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(encounterPerformer, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(encounterPerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(encounterPerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(encounterPerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(encounterPerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(encounterPerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(encounterPerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validatePerformer2_validateTypeCode(encounterPerformer, diagnostics, context);
		}
		return result;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterPerformerAssignedEntity(
			EncounterPerformerAssignedEntity encounterPerformerAssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(encounterPerformerAssignedEntity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(encounterPerformerAssignedEntity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(encounterPerformerAssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(encounterPerformerAssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(encounterPerformerAssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(encounterPerformerAssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(encounterPerformerAssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(encounterPerformerAssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAssignedEntity_validateClassCode(
				encounterPerformerAssignedEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterPerformerAssignedEntity_validateEncounterPerformerAssignedEntityCode(
				encounterPerformerAssignedEntity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEncounterPerformerAssignedEntityCode constraint of '<em>Encounter Performer Assigned Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterPerformerAssignedEntity_validateEncounterPerformerAssignedEntityCode(
			EncounterPerformerAssignedEntity encounterPerformerAssignedEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encounterPerformerAssignedEntity.validateEncounterPerformerAssignedEntityCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservationParticipant(AllergyObservationParticipant allergyObservationParticipant,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(allergyObservationParticipant, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(allergyObservationParticipant, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(allergyObservationParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(allergyObservationParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(allergyObservationParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(allergyObservationParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(allergyObservationParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(allergyObservationParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipant2_validateContextControlCode(
				allergyObservationParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservationParticipant_validateAllergyObservationParticipantParticipantRole(
				allergyObservationParticipant, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAllergyObservationParticipantParticipantRole constraint of '<em>Allergy Observation Participant</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservationParticipant_validateAllergyObservationParticipantParticipantRole(
			AllergyObservationParticipant allergyObservationParticipant, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergyObservationParticipant.validateAllergyObservationParticipantParticipantRole(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservationParticipantRole(
			AllergyObservationParticipantRole allergyObservationParticipantRole, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(allergyObservationParticipantRole, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(allergyObservationParticipantRole, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(allergyObservationParticipantRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(allergyObservationParticipantRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(allergyObservationParticipantRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(allergyObservationParticipantRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(allergyObservationParticipantRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(allergyObservationParticipantRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipantRole_validatePlayingEntityChoice(
				allergyObservationParticipantRole, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservationParticipantRole_validateAllergyObservationParticipantRolePlayingEntity(
				allergyObservationParticipantRole, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAllergyObservationParticipantRolePlayingEntity constraint of '<em>Allergy Observation Participant Role</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservationParticipantRole_validateAllergyObservationParticipantRolePlayingEntity(
			AllergyObservationParticipantRole allergyObservationParticipantRole, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergyObservationParticipantRole.validateAllergyObservationParticipantRolePlayingEntity(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservationPlayingEntity(
			AllergyObservationPlayingEntity allergyObservationPlayingEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(allergyObservationPlayingEntity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(allergyObservationPlayingEntity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(allergyObservationPlayingEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(allergyObservationPlayingEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(allergyObservationPlayingEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(allergyObservationPlayingEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(allergyObservationPlayingEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(allergyObservationPlayingEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validatePlayingEntity_validateDeterminerCode(
				allergyObservationPlayingEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservationPlayingEntity_validateAllergyObservationPlayingEntityCodeOriginalText(
				allergyObservationPlayingEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservationPlayingEntity_validateAllergyObservationPlayingEntityCodeTranslation(
				allergyObservationPlayingEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservationPlayingEntity_validateAllergyObservationPlayingEntityClassCode(
				allergyObservationPlayingEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyObservationPlayingEntity_validateAllergyObservationPlayingEntityCode(
				allergyObservationPlayingEntity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAllergyObservationPlayingEntityCodeOriginalText constraint of '<em>Allergy Observation Playing Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservationPlayingEntity_validateAllergyObservationPlayingEntityCodeOriginalText(
			AllergyObservationPlayingEntity allergyObservationPlayingEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergyObservationPlayingEntity.validateAllergyObservationPlayingEntityCodeOriginalText(
			diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationPlayingEntityCodeTranslation constraint of '<em>Allergy Observation Playing Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservationPlayingEntity_validateAllergyObservationPlayingEntityCodeTranslation(
			AllergyObservationPlayingEntity allergyObservationPlayingEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergyObservationPlayingEntity.validateAllergyObservationPlayingEntityCodeTranslation(
			diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationPlayingEntityClassCode constraint of '<em>Allergy Observation Playing Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservationPlayingEntity_validateAllergyObservationPlayingEntityClassCode(
			AllergyObservationPlayingEntity allergyObservationPlayingEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergyObservationPlayingEntity.validateAllergyObservationPlayingEntityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyObservationPlayingEntityCode constraint of '<em>Allergy Observation Playing Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyObservationPlayingEntity_validateAllergyObservationPlayingEntityCode(
			AllergyObservationPlayingEntity allergyObservationPlayingEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergyObservationPlayingEntity.validateAllergyObservationPlayingEntityCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAnesthesiaSection(AnesthesiaSection anesthesiaSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(anesthesiaSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(anesthesiaSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(anesthesiaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(anesthesiaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(anesthesiaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(anesthesiaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(anesthesiaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(anesthesiaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(anesthesiaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(anesthesiaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAnesthesiaSection_validateAnesthesiaSectionTemplateId(
				anesthesiaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAnesthesiaSection_validateAnesthesiaSectionCode(anesthesiaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAnesthesiaSection_validateAnesthesiaSectionText(anesthesiaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAnesthesiaSection_validateAnesthesiaSectionTitle(anesthesiaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAnesthesiaSection_validateAnesthesiaSectionProcedureActivityProcedure(
				anesthesiaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAnesthesiaSection_validateAnesthesiaSectionMedicationActivity(
				anesthesiaSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAnesthesiaSectionTemplateId constraint of '<em>Anesthesia Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAnesthesiaSection_validateAnesthesiaSectionTemplateId(AnesthesiaSection anesthesiaSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return anesthesiaSection.validateAnesthesiaSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAnesthesiaSectionCode constraint of '<em>Anesthesia Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAnesthesiaSection_validateAnesthesiaSectionCode(AnesthesiaSection anesthesiaSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return anesthesiaSection.validateAnesthesiaSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateAnesthesiaSectionText constraint of '<em>Anesthesia Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAnesthesiaSection_validateAnesthesiaSectionText(AnesthesiaSection anesthesiaSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return anesthesiaSection.validateAnesthesiaSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateAnesthesiaSectionTitle constraint of '<em>Anesthesia Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAnesthesiaSection_validateAnesthesiaSectionTitle(AnesthesiaSection anesthesiaSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return anesthesiaSection.validateAnesthesiaSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateAnesthesiaSectionProcedureActivityProcedure constraint of '<em>Anesthesia Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAnesthesiaSection_validateAnesthesiaSectionProcedureActivityProcedure(
			AnesthesiaSection anesthesiaSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return anesthesiaSection.validateAnesthesiaSectionProcedureActivityProcedure(diagnostics, context);
	}

	/**
	 * Validates the validateAnesthesiaSectionMedicationActivity constraint of '<em>Anesthesia Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAnesthesiaSection_validateAnesthesiaSectionMedicationActivity(
			AnesthesiaSection anesthesiaSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return anesthesiaSection.validateAnesthesiaSectionMedicationActivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComplicationsSection(ComplicationsSection complicationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(complicationsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(complicationsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(complicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(complicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(complicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(complicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(complicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(complicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(complicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(complicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComplicationsSection_validateComplicationsSectionTemplateId(
				complicationsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateComplicationsSectionTemplateId constraint of '<em>Complications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComplicationsSection_validateComplicationsSectionTemplateId(
			ComplicationsSection complicationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return complicationsSection.validateComplicationsSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDICOMObjectCatalogSection(DICOMObjectCatalogSection dicomObjectCatalogSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(dicomObjectCatalogSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(dicomObjectCatalogSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(dicomObjectCatalogSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(dicomObjectCatalogSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(dicomObjectCatalogSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(dicomObjectCatalogSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(dicomObjectCatalogSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(dicomObjectCatalogSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(dicomObjectCatalogSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(dicomObjectCatalogSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDICOMObjectCatalogSection_validateDICOMObjectCatalogSectionTemplateId(
				dicomObjectCatalogSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateDICOMObjectCatalogSectionTemplateId constraint of '<em>DICOM Object Catalog Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDICOMObjectCatalogSection_validateDICOMObjectCatalogSectionTemplateId(
			DICOMObjectCatalogSection dicomObjectCatalogSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return dicomObjectCatalogSection.validateDICOMObjectCatalogSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingsSection(FindingsSection findingsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(findingsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(findingsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(findingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(findingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(findingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(findingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(findingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(findingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(findingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(findingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFindingsSection_validateFindingsSectionTemplateId(findingsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateFindingsSectionTemplateId constraint of '<em>Findings Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingsSection_validateFindingsSectionTemplateId(FindingsSection findingsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingsSection.validateFindingsSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalConsultationsSection(HospitalConsultationsSection hospitalConsultationsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalConsultationsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(hospitalConsultationsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(hospitalConsultationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(hospitalConsultationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(hospitalConsultationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalConsultationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalConsultationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(hospitalConsultationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(hospitalConsultationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(hospitalConsultationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalConsultationsSection_validateHospitalConsultationsSectionTemplateId(
				hospitalConsultationsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalConsultationsSectionTemplateId constraint of '<em>Hospital Consultations Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalConsultationsSection_validateHospitalConsultationsSectionTemplateId(
			HospitalConsultationsSection hospitalConsultationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalConsultationsSection.validateHospitalConsultationsSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInterventionsSection(InterventionsSection interventionsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(interventionsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(interventionsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(interventionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(interventionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(interventionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(interventionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(interventionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(interventionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(interventionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(interventionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInterventionsSection_validateInterventionsSectionTemplateId(
				interventionsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateInterventionsSectionTemplateId constraint of '<em>Interventions Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInterventionsSection_validateInterventionsSectionTemplateId(
			InterventionsSection interventionsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return interventionsSection.validateInterventionsSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistorySection(MedicalHistorySection medicalHistorySection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicalHistorySection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicalHistorySection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicalHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicalHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicalHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicalHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicalHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicalHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(medicalHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(medicalHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicalHistorySection_validateMedicalHistorySectionTemplateId(
				medicalHistorySection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicalHistorySectionTemplateId constraint of '<em>Medical History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistorySection_validateMedicalHistorySectionTemplateId(
			MedicalHistorySection medicalHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistorySection.validateMedicalHistorySectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateObjectiveSection(ObjectiveSection objectiveSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(objectiveSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(objectiveSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateObjectiveSection_validateObjectiveSectionTemplateId(
				objectiveSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateObjectiveSectionTemplateId constraint of '<em>Objective Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateObjectiveSection_validateObjectiveSectionTemplateId(ObjectiveSection objectiveSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return objectiveSection.validateObjectiveSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOperativeNoteFluidSection(OperativeNoteFluidSection operativeNoteFluidSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(operativeNoteFluidSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(operativeNoteFluidSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(operativeNoteFluidSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(operativeNoteFluidSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(operativeNoteFluidSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(operativeNoteFluidSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(operativeNoteFluidSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(operativeNoteFluidSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(operativeNoteFluidSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(operativeNoteFluidSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateOperativeNoteFluidSection_validateOperativeNoteFluidSectionTemplateId(
				operativeNoteFluidSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateOperativeNoteFluidSectionTemplateId constraint of '<em>Operative Note Fluid Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOperativeNoteFluidSection_validateOperativeNoteFluidSectionTemplateId(
			OperativeNoteFluidSection operativeNoteFluidSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return operativeNoteFluidSection.validateOperativeNoteFluidSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOperativeNoteSurgicalProcedureSection(
			OperativeNoteSurgicalProcedureSection operativeNoteSurgicalProcedureSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(operativeNoteSurgicalProcedureSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(operativeNoteSurgicalProcedureSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(operativeNoteSurgicalProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(operativeNoteSurgicalProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(operativeNoteSurgicalProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(operativeNoteSurgicalProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(operativeNoteSurgicalProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(operativeNoteSurgicalProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				operativeNoteSurgicalProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				operativeNoteSurgicalProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateOperativeNoteSurgicalProcedureSection_validateOperativeNoteSurgicalProcedureSectionTemplateId(
				operativeNoteSurgicalProcedureSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateOperativeNoteSurgicalProcedureSectionTemplateId constraint of '<em>Operative Note Surgical Procedure Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOperativeNoteSurgicalProcedureSection_validateOperativeNoteSurgicalProcedureSectionTemplateId(
			OperativeNoteSurgicalProcedureSection operativeNoteSurgicalProcedureSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return operativeNoteSurgicalProcedureSection.validateOperativeNoteSurgicalProcedureSectionTemplateId(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlannedProcedureSection(PlannedProcedureSection plannedProcedureSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(plannedProcedureSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(plannedProcedureSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(plannedProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(plannedProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(plannedProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(plannedProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(plannedProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(plannedProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(plannedProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(plannedProcedureSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlannedProcedureSection_validatePlannedProcedureSectionTemplateId(
				plannedProcedureSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlannedProcedureSectionTemplateId constraint of '<em>Planned Procedure Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlannedProcedureSection_validatePlannedProcedureSectionTemplateId(
			PlannedProcedureSection plannedProcedureSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return plannedProcedureSection.validatePlannedProcedureSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePostoperativeDiagnosisSection(PostoperativeDiagnosisSection postoperativeDiagnosisSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(postoperativeDiagnosisSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(postoperativeDiagnosisSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(postoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(postoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(postoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(postoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(postoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(postoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				postoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(postoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePostoperativeDiagnosisSection_validatePostoperativeDiagnosisSectionTemplateId(
				postoperativeDiagnosisSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePostoperativeDiagnosisSectionTemplateId constraint of '<em>Postoperative Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePostoperativeDiagnosisSection_validatePostoperativeDiagnosisSectionTemplateId(
			PostoperativeDiagnosisSection postoperativeDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return postoperativeDiagnosisSection.validatePostoperativeDiagnosisSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePostprocedureDiagnosisSection(PostprocedureDiagnosisSection postprocedureDiagnosisSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(postprocedureDiagnosisSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(postprocedureDiagnosisSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(postprocedureDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(postprocedureDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(postprocedureDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(postprocedureDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(postprocedureDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(postprocedureDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				postprocedureDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(postprocedureDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePostprocedureDiagnosisSection_validatePostprocedureDiagnosisSectionTemplateId(
				postprocedureDiagnosisSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePostprocedureDiagnosisSectionTemplateId constraint of '<em>Postprocedure Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePostprocedureDiagnosisSection_validatePostprocedureDiagnosisSectionTemplateId(
			PostprocedureDiagnosisSection postprocedureDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return postprocedureDiagnosisSection.validatePostprocedureDiagnosisSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreoperativeDiagnosisSection(PreoperativeDiagnosisSection preoperativeDiagnosisSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(preoperativeDiagnosisSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(preoperativeDiagnosisSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(preoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(preoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(preoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(preoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(preoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(preoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(preoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(preoperativeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePreoperativeDiagnosisSection_validatePreoperativeDiagnosisSectionTemplateId(
				preoperativeDiagnosisSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePreoperativeDiagnosisSectionTemplateId constraint of '<em>Preoperative Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreoperativeDiagnosisSection_validatePreoperativeDiagnosisSectionTemplateId(
			PreoperativeDiagnosisSection preoperativeDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return preoperativeDiagnosisSection.validatePreoperativeDiagnosisSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureDescriptionSection(ProcedureDescriptionSection procedureDescriptionSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedureDescriptionSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedureDescriptionSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedureDescriptionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedureDescriptionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedureDescriptionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedureDescriptionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedureDescriptionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedureDescriptionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(procedureDescriptionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(procedureDescriptionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureDescriptionSection_validateProcedureDescriptionSectionTemplateId(
				procedureDescriptionSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedureDescriptionSectionTemplateId constraint of '<em>Procedure Description Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureDescriptionSection_validateProcedureDescriptionSectionTemplateId(
			ProcedureDescriptionSection procedureDescriptionSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureDescriptionSection.validateProcedureDescriptionSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureDispositionSection(ProcedureDispositionSection procedureDispositionSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedureDispositionSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedureDispositionSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedureDispositionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedureDispositionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedureDispositionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedureDispositionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedureDispositionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedureDispositionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(procedureDispositionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(procedureDispositionSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureDispositionSection_validateProcedureDispositionSectionTemplateId(
				procedureDispositionSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedureDispositionSectionTemplateId constraint of '<em>Procedure Disposition Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureDispositionSection_validateProcedureDispositionSectionTemplateId(
			ProcedureDispositionSection procedureDispositionSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureDispositionSection.validateProcedureDispositionSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEstimatedBloodLossSection(
			ProcedureEstimatedBloodLossSection procedureEstimatedBloodLossSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedureEstimatedBloodLossSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedureEstimatedBloodLossSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedureEstimatedBloodLossSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedureEstimatedBloodLossSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedureEstimatedBloodLossSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedureEstimatedBloodLossSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedureEstimatedBloodLossSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedureEstimatedBloodLossSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				procedureEstimatedBloodLossSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				procedureEstimatedBloodLossSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEstimatedBloodLossSection_validateProcedureEstimatedBloodLossSectionTemplateId(
				procedureEstimatedBloodLossSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedureEstimatedBloodLossSectionTemplateId constraint of '<em>Procedure Estimated Blood Loss Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEstimatedBloodLossSection_validateProcedureEstimatedBloodLossSectionTemplateId(
			ProcedureEstimatedBloodLossSection procedureEstimatedBloodLossSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureEstimatedBloodLossSection.validateProcedureEstimatedBloodLossSectionTemplateId(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureFindingsSection(ProcedureFindingsSection procedureFindingsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedureFindingsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedureFindingsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedureFindingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedureFindingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedureFindingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedureFindingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedureFindingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedureFindingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(procedureFindingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(procedureFindingsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureFindingsSection_validateProcedureFindingsSectionTemplateId(
				procedureFindingsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedureFindingsSectionTemplateId constraint of '<em>Procedure Findings Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureFindingsSection_validateProcedureFindingsSectionTemplateId(
			ProcedureFindingsSection procedureFindingsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureFindingsSection.validateProcedureFindingsSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureImplantsSection(ProcedureImplantsSection procedureImplantsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedureImplantsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedureImplantsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedureImplantsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedureImplantsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedureImplantsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedureImplantsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedureImplantsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedureImplantsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(procedureImplantsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(procedureImplantsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureImplantsSection_validateProcedureImplantsSectionTemplateId(
				procedureImplantsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedureImplantsSectionTemplateId constraint of '<em>Procedure Implants Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureImplantsSection_validateProcedureImplantsSectionTemplateId(
			ProcedureImplantsSection procedureImplantsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureImplantsSection.validateProcedureImplantsSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureIndicationsSection(ProcedureIndicationsSection procedureIndicationsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedureIndicationsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedureIndicationsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedureIndicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedureIndicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedureIndicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedureIndicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedureIndicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedureIndicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(procedureIndicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(procedureIndicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureIndicationsSection_validateProcedureIndicationsSectionTemplateId(
				procedureIndicationsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedureIndicationsSectionTemplateId constraint of '<em>Procedure Indications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureIndicationsSection_validateProcedureIndicationsSectionTemplateId(
			ProcedureIndicationsSection procedureIndicationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureIndicationsSection.validateProcedureIndicationsSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureSpecimensTakenSection(
			ProcedureSpecimensTakenSection procedureSpecimensTakenSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedureSpecimensTakenSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedureSpecimensTakenSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedureSpecimensTakenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedureSpecimensTakenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedureSpecimensTakenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedureSpecimensTakenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedureSpecimensTakenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedureSpecimensTakenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				procedureSpecimensTakenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				procedureSpecimensTakenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureSpecimensTakenSection_validateProcedureSpecimensTakenSectionTemplateId(
				procedureSpecimensTakenSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedureSpecimensTakenSectionTemplateId constraint of '<em>Procedure Specimens Taken Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureSpecimensTakenSection_validateProcedureSpecimensTakenSectionTemplateId(
			ProcedureSpecimensTakenSection procedureSpecimensTakenSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedureSpecimensTakenSection.validateProcedureSpecimensTakenSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectiveSection(SubjectiveSection subjectiveSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(subjectiveSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(subjectiveSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSubjectiveSection_validateSubjectiveSectionTemplateId(
				subjectiveSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSubjectiveSectionTemplateId constraint of '<em>Subjective Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectiveSection_validateSubjectiveSectionTemplateId(SubjectiveSection subjectiveSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectiveSection.validateSubjectiveSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote(ConsultationNote consultationNote, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(consultationNote, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(consultationNote, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTemplateId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRealmCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTypeId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTitle(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsEffectiveTime(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsConfidentialityCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSetId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsVersionNumber(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthor(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEnterer(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodian(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipient(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticator(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticator(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTarget(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOf(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformant(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSupportParticipant(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOf(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAddr(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorTelecom(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthor(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAddr(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityTelecom(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodian(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipient(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorTime(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorSignatureCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityAddr(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorTime(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorSignatureCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntity(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToYear(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToDay(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientName(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleAddr(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleTelecom(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatient(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRole(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounter(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityAddr(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityPerson(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityAddr(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityPerson(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportTime(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrderId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrder(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteTemplateId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteInFulfillmentOf(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteComponentOf(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteAssessmentSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteAssessmentAndPlanSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNotePlanOfCareSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHistoryOfPresentIllness(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNotePhysicalExamSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteReasonForReferralSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteReasonForVisitSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteAllergiesSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteChiefComplaintSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteChiefComplaintAndReasonForVisitSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteFamilyHistorySection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteGeneralStatusSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHistoryOfPastIllnessSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteImmunizationsSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteMedicationsSectionEntriesOptional(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteProblemSectionEntriesOptional(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteProceduresSectionEntriesOptional(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteResultsSectionEntriesOptional(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteReviewOfSystemsSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteSocialHistorySection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteVitalSignsSectionEntriesOptional(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteInFulfillmentOfOrderId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteInFulfillmentOfOrder(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntity(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntity(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter2EffectiveTime(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter2Id(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter2ResponsibleParty(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter2EncounterParticipant(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter(
				consultationNote, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateConsultationNoteTemplateId constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteTemplateId(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteInFulfillmentOf constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteInFulfillmentOf(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteInFulfillmentOf(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteComponentOf constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteComponentOf(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteComponentOf(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteAssessmentSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteAssessmentSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteAssessmentSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteAssessmentAndPlanSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteAssessmentAndPlanSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteAssessmentAndPlanSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNotePlanOfCareSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNotePlanOfCareSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNotePlanOfCareSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHistoryOfPresentIllness constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHistoryOfPresentIllness(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHistoryOfPresentIllness(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNotePhysicalExamSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNotePhysicalExamSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNotePhysicalExamSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteReasonForReferralSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteReasonForReferralSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteReasonForReferralSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteReasonForVisitSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteReasonForVisitSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteReasonForVisitSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteAllergiesSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteAllergiesSection(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteAllergiesSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteChiefComplaintSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteChiefComplaintSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteChiefComplaintSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteChiefComplaintAndReasonForVisitSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteChiefComplaintAndReasonForVisitSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteChiefComplaintAndReasonForVisitSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteFamilyHistorySection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteFamilyHistorySection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteFamilyHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteGeneralStatusSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteGeneralStatusSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteGeneralStatusSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHistoryOfPastIllnessSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHistoryOfPastIllnessSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHistoryOfPastIllnessSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteImmunizationsSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteImmunizationsSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteImmunizationsSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteMedicationsSectionEntriesOptional constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteMedicationsSectionEntriesOptional(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteMedicationsSectionEntriesOptional(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteProblemSectionEntriesOptional constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteProblemSectionEntriesOptional(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteProblemSectionEntriesOptional(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteProceduresSectionEntriesOptional constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteProceduresSectionEntriesOptional(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteProceduresSectionEntriesOptional(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteResultsSectionEntriesOptional constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteResultsSectionEntriesOptional(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteResultsSectionEntriesOptional(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteReviewOfSystemsSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteReviewOfSystemsSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteReviewOfSystemsSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteSocialHistorySection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteSocialHistorySection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteSocialHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteVitalSignsSectionEntriesOptional constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteVitalSignsSectionEntriesOptional(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteVitalSignsSectionEntriesOptional(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteInFulfillmentOfOrderId constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteInFulfillmentOfOrderId(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteInFulfillmentOfOrderId(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteInFulfillmentOfOrder constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteInFulfillmentOfOrder(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteInFulfillmentOfOrder(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntity constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntity(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntity(
			diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntity constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntity(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntity(
			diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteComponentOfEncompassingEncounter2EffectiveTime constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter2EffectiveTime(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteComponentOfEncompassingEncounter2EffectiveTime(
			diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteComponentOfEncompassingEncounter2Id constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter2Id(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteComponentOfEncompassingEncounter2Id(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteComponentOfEncompassingEncounter2ResponsibleParty constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter2ResponsibleParty(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteComponentOfEncompassingEncounter2ResponsibleParty(
			diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteComponentOfEncompassingEncounter2EncounterParticipant constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter2EncounterParticipant(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteComponentOfEncompassingEncounter2EncounterParticipant(
			diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteComponentOfEncompassingEncounter constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteComponentOfEncompassingEncounter(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteComponentOfEncompassingEncounter(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_ComponentOf(ConsultationNote_ComponentOf consultationNote_ComponentOf,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(consultationNote_ComponentOf, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(consultationNote_ComponentOf, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(consultationNote_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(consultationNote_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(consultationNote_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(consultationNote_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(consultationNote_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(consultationNote_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateComponent1_validateTypeCode(
				consultationNote_ComponentOf, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_ComponentOf_validateComponentOfEncompassingEncounter(
				consultationNote_ComponentOf, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateComponentOfEncompassingEncounter constraint of '<em>Consultation Note Component Of</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_ComponentOf_validateComponentOfEncompassingEncounter(
			ConsultationNote_ComponentOf consultationNote_ComponentOf, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return consultationNote_ComponentOf.validateComponentOfEncompassingEncounter(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComponentOf_EncompassingEncounter2(
			ComponentOf_EncompassingEncounter2 componentOf_EncompassingEncounter2, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(componentOf_EncompassingEncounter2, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(componentOf_EncompassingEncounter2, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(componentOf_EncompassingEncounter2, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(componentOf_EncompassingEncounter2, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(componentOf_EncompassingEncounter2, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(componentOf_EncompassingEncounter2, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(componentOf_EncompassingEncounter2, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(componentOf_EncompassingEncounter2, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateEncompassingEncounter_validateClassCode(
				componentOf_EncompassingEncounter2, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateEncompassingEncounter_validateMoodCode(
				componentOf_EncompassingEncounter2, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComponentOf_EncompassingEncounter2_validateEncompassingEncounter2EffectiveTime(
				componentOf_EncompassingEncounter2, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComponentOf_EncompassingEncounter2_validateEncompassingEncounter2Id(
				componentOf_EncompassingEncounter2, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComponentOf_EncompassingEncounter2_validateEncompassingEncounter2ResponsibleParty(
				componentOf_EncompassingEncounter2, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComponentOf_EncompassingEncounter2_validateEncompassingEncounter2EncounterParticipant(
				componentOf_EncompassingEncounter2, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEncompassingEncounter2EffectiveTime constraint of '<em>Component Of Encompassing Encounter2</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComponentOf_EncompassingEncounter2_validateEncompassingEncounter2EffectiveTime(
			ComponentOf_EncompassingEncounter2 componentOf_EncompassingEncounter2, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return componentOf_EncompassingEncounter2.validateEncompassingEncounter2EffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateEncompassingEncounter2Id constraint of '<em>Component Of Encompassing Encounter2</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComponentOf_EncompassingEncounter2_validateEncompassingEncounter2Id(
			ComponentOf_EncompassingEncounter2 componentOf_EncompassingEncounter2, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return componentOf_EncompassingEncounter2.validateEncompassingEncounter2Id(diagnostics, context);
	}

	/**
	 * Validates the validateEncompassingEncounter2ResponsibleParty constraint of '<em>Component Of Encompassing Encounter2</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComponentOf_EncompassingEncounter2_validateEncompassingEncounter2ResponsibleParty(
			ComponentOf_EncompassingEncounter2 componentOf_EncompassingEncounter2, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return componentOf_EncompassingEncounter2.validateEncompassingEncounter2ResponsibleParty(diagnostics, context);
	}

	/**
	 * Validates the validateEncompassingEncounter2EncounterParticipant constraint of '<em>Component Of Encompassing Encounter2</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComponentOf_EncompassingEncounter2_validateEncompassingEncounter2EncounterParticipant(
			ComponentOf_EncompassingEncounter2 componentOf_EncompassingEncounter2, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return componentOf_EncompassingEncounter2.validateEncompassingEncounter2EncounterParticipant(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncompassingEncounter2_ResponsibleParty(
			EncompassingEncounter2_ResponsibleParty encompassingEncounter2_ResponsibleParty,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(encompassingEncounter2_ResponsibleParty, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			encompassingEncounter2_ResponsibleParty, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(encompassingEncounter2_ResponsibleParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(encompassingEncounter2_ResponsibleParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(encompassingEncounter2_ResponsibleParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(encompassingEncounter2_ResponsibleParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(encompassingEncounter2_ResponsibleParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(encompassingEncounter2_ResponsibleParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateResponsibleParty_validateTypeCode(
				encompassingEncounter2_ResponsibleParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncompassingEncounter2_ResponsibleParty_validateResponsiblePartyAssignedEntity(
				encompassingEncounter2_ResponsibleParty, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateResponsiblePartyAssignedEntity constraint of '<em>Encompassing Encounter2 Responsible Party</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncompassingEncounter2_ResponsibleParty_validateResponsiblePartyAssignedEntity(
			EncompassingEncounter2_ResponsibleParty encompassingEncounter2_ResponsibleParty,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encompassingEncounter2_ResponsibleParty.validateResponsiblePartyAssignedEntity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncompassingEncounter2_EncounterParticipant(
			EncompassingEncounter2_EncounterParticipant encompassingEncounter2_EncounterParticipant,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(encompassingEncounter2_EncounterParticipant, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			encompassingEncounter2_EncounterParticipant, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(encompassingEncounter2_EncounterParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(
				encompassingEncounter2_EncounterParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(encompassingEncounter2_EncounterParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(encompassingEncounter2_EncounterParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(encompassingEncounter2_EncounterParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(encompassingEncounter2_EncounterParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncompassingEncounter2_EncounterParticipant_validateEncounterParticipantAssignedEntity(
				encompassingEncounter2_EncounterParticipant, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEncounterParticipantAssignedEntity constraint of '<em>Encompassing Encounter2 Encounter Participant</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncompassingEncounter2_EncounterParticipant_validateEncounterParticipantAssignedEntity(
			EncompassingEncounter2_EncounterParticipant encompassingEncounter2_EncounterParticipant,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encompassingEncounter2_EncounterParticipant.validateEncounterParticipantAssignedEntity(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentSection(AssessmentSection assessmentSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(assessmentSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(assessmentSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentSection_validateAssessmentSectionTemplateId(
				assessmentSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAssessmentSectionTemplateId constraint of '<em>Assessment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentSection_validateAssessmentSectionTemplateId(AssessmentSection assessmentSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assessmentSection.validateAssessmentSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsAdministeredSection(
			MedicationsAdministeredSection medicationsAdministeredSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationsAdministeredSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationsAdministeredSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsAdministeredSection_validateMedicationsAdministeredSectionTemplateId(
				medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsAdministeredSection_validateMedicationsAdministeredSectionCode(
				medicationsAdministeredSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationsAdministeredSectionTemplateId constraint of '<em>Medications Administered Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsAdministeredSection_validateMedicationsAdministeredSectionTemplateId(
			MedicationsAdministeredSection medicationsAdministeredSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationsAdministeredSection.validateMedicationsAdministeredSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsAdministeredSectionCode constraint of '<em>Medications Administered Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsAdministeredSection_validateMedicationsAdministeredSectionCode(
			MedicationsAdministeredSection medicationsAdministeredSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationsAdministeredSection.validateMedicationsAdministeredSectionCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection(PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(physicalExamSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(physicalExamSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionTemplateId(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionCode(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionTitle(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionText(
				physicalExamSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePhysicalExamSectionTemplateId constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionTemplateId(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionCode constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionCode(PhysicalExamSection physicalExamSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionTitle constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionTitle(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionText constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionText(PhysicalExamSection physicalExamSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralStatusSection(GeneralStatusSection generalStatusSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalStatusSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(generalStatusSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralStatusSection_validateGeneralStatusSectionTemplateId(
				generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralStatusSection_validateGeneralStatusSectionCode(
				generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralStatusSection_validateGeneralStatusSectionTitle(
				generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralStatusSection_validateGeneralStatusSectionText(
				generalStatusSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateGeneralStatusSectionTemplateId constraint of '<em>General Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralStatusSection_validateGeneralStatusSectionTemplateId(
			GeneralStatusSection generalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalStatusSection.validateGeneralStatusSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralStatusSectionCode constraint of '<em>General Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralStatusSection_validateGeneralStatusSectionCode(
			GeneralStatusSection generalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalStatusSection.validateGeneralStatusSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralStatusSectionTitle constraint of '<em>General Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralStatusSection_validateGeneralStatusSectionTitle(
			GeneralStatusSection generalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalStatusSection.validateGeneralStatusSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralStatusSectionText constraint of '<em>General Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralStatusSection_validateGeneralStatusSectionText(
			GeneralStatusSection generalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalStatusSection.validateGeneralStatusSectionText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReviewOfSystemsSection(ReviewOfSystemsSection reviewOfSystemsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(reviewOfSystemsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(reviewOfSystemsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReviewOfSystemsSection_validateReviewOfSystemsSectionTemplateId(
				reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReviewOfSystemsSection_validateReviewOfSystemsSectionCode(
				reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReviewOfSystemsSection_validateReviewOfSystemsSectionTitle(
				reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReviewOfSystemsSection_validateReviewOfSystemsSectionText(
				reviewOfSystemsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateReviewOfSystemsSectionTemplateId constraint of '<em>Review Of Systems Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReviewOfSystemsSection_validateReviewOfSystemsSectionTemplateId(
			ReviewOfSystemsSection reviewOfSystemsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reviewOfSystemsSection.validateReviewOfSystemsSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateReviewOfSystemsSectionCode constraint of '<em>Review Of Systems Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReviewOfSystemsSection_validateReviewOfSystemsSectionCode(
			ReviewOfSystemsSection reviewOfSystemsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reviewOfSystemsSection.validateReviewOfSystemsSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateReviewOfSystemsSectionTitle constraint of '<em>Review Of Systems Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReviewOfSystemsSection_validateReviewOfSystemsSectionTitle(
			ReviewOfSystemsSection reviewOfSystemsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reviewOfSystemsSection.validateReviewOfSystemsSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateReviewOfSystemsSectionText constraint of '<em>Review Of Systems Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReviewOfSystemsSection_validateReviewOfSystemsSectionText(
			ReviewOfSystemsSection reviewOfSystemsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reviewOfSystemsSection.validateReviewOfSystemsSectionText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalCourseSection(HospitalCourseSection hospitalCourseSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalCourseSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(hospitalCourseSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalCourseSection_validateHospitalCourseSectionTemplateId(
				hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalCourseSection_validateHospitalCourseSectionCode(
				hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalCourseSection_validateHospitalCourseSectionTitle(
				hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalCourseSection_validateHospitalCourseSectionText(
				hospitalCourseSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalCourseSectionTemplateId constraint of '<em>Hospital Course Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalCourseSection_validateHospitalCourseSectionTemplateId(
			HospitalCourseSection hospitalCourseSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return hospitalCourseSection.validateHospitalCourseSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalCourseSectionCode constraint of '<em>Hospital Course Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalCourseSection_validateHospitalCourseSectionCode(
			HospitalCourseSection hospitalCourseSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return hospitalCourseSection.validateHospitalCourseSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalCourseSectionTitle constraint of '<em>Hospital Course Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalCourseSection_validateHospitalCourseSectionTitle(
			HospitalCourseSection hospitalCourseSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return hospitalCourseSection.validateHospitalCourseSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalCourseSectionText constraint of '<em>Hospital Course Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalCourseSection_validateHospitalCourseSectionText(
			HospitalCourseSection hospitalCourseSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return hospitalCourseSection.validateHospitalCourseSectionText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSection(AssessmentAndPlanSection assessmentAndPlanSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(assessmentAndPlanSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(assessmentAndPlanSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionTemplateId(
				assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionCode(
				assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionText(
				assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionPlanOfCareActivityAct(
				assessmentAndPlanSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAssessmentAndPlanSectionTemplateId constraint of '<em>Assessment And Plan Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionTemplateId(
			AssessmentAndPlanSection assessmentAndPlanSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assessmentAndPlanSection.validateAssessmentAndPlanSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAssessmentAndPlanSectionCode constraint of '<em>Assessment And Plan Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionCode(
			AssessmentAndPlanSection assessmentAndPlanSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assessmentAndPlanSection.validateAssessmentAndPlanSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateAssessmentAndPlanSectionText constraint of '<em>Assessment And Plan Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionText(
			AssessmentAndPlanSection assessmentAndPlanSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assessmentAndPlanSection.validateAssessmentAndPlanSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateAssessmentAndPlanSectionPlanOfCareActivityAct constraint of '<em>Assessment And Plan Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionPlanOfCareActivityAct(
			AssessmentAndPlanSection assessmentAndPlanSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assessmentAndPlanSection.validateAssessmentAndPlanSectionPlanOfCareActivityAct(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLanguageSpoken(LanguageSpoken languageSpoken, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(languageSpoken, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(languageSpoken, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLanguageSpoken_validateLanguageSpokenNoProficiencyLevelCode(
				languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLanguageSpoken_validateLanguageSpokenModeCode(languageSpoken, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateLanguageSpokenNoProficiencyLevelCode constraint of '<em>Language Spoken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLanguageSpoken_validateLanguageSpokenNoProficiencyLevelCode(LanguageSpoken languageSpoken,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return languageSpoken.validateLanguageSpokenNoProficiencyLevelCode(diagnostics, context);
	}

	/**
	 * Validates the validateLanguageSpokenModeCode constraint of '<em>Language Spoken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLanguageSpoken_validateLanguageSpokenModeCode(LanguageSpoken languageSpoken,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return languageSpoken.validateLanguageSpokenModeCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthcareProvider(HealthcareProvider healthcareProvider, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return validate_EveryDefaultConstraint(healthcareProvider, diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupportGuardian(SupportGuardian supportGuardian, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return validate_EveryDefaultConstraint(supportGuardian, diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupportParticipant(SupportParticipant supportParticipant, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return validate_EveryDefaultConstraint(supportParticipant, diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSurgicalDrainsSection(SurgicalDrainsSection surgicalDrainsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(surgicalDrainsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(surgicalDrainsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(surgicalDrainsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(surgicalDrainsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(surgicalDrainsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(surgicalDrainsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(surgicalDrainsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(surgicalDrainsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(surgicalDrainsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(surgicalDrainsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSurgicalDrainsSection_validateSurgicalDrainsSectionTemplateId(
				surgicalDrainsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSurgicalDrainsSectionTemplateId constraint of '<em>Surgical Drains Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSurgicalDrainsSection_validateSurgicalDrainsSectionTemplateId(
			SurgicalDrainsSection surgicalDrainsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return surgicalDrainsSection.validateSurgicalDrainsSectionTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument(UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(unstructuredDocument, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(unstructuredDocument, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateGeneralHeaderConstraintsTemplateId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRealmCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTypeId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTitle(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsEffectiveTime(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsConfidentialityCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSetId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsVersionNumber(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthor(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEnterer(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodian(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipient(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticator(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticator(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTarget(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOf(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformant(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSupportParticipant(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOf(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAddr(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorTelecom(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthor(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAddr(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityTelecom(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodian(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipient(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorTime(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorSignatureCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityAddr(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorTime(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorSignatureCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntity(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToYear(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToDay(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientName(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleAddr(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleTelecom(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatient(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRole(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounter(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityAddr(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityPerson(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityAddr(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityPerson(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportTime(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrderId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrder(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentTypeIdFixed(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasOneRecordTarget(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasAssignedAuthor(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentPatientRoleId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasPatientRoleAddress(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasPatientName(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasPatientGenderCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasPatientBirthYear(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasOriginalAuthor(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasScanningDevice(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasScanDataEnterer(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasRepresentedCustodianOrganizationName(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasRepresentedCustodianOrganizationAddr(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentLegalAuthenticatorAssignedEntityId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBody(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBodyBinaryText(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBodyTextMediaType(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBodyTextRepresentation(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentNoStructuredData(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentOnePatientPerDocument(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentConfidentialityCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentEffectiveTime(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentLanguageCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentTitle(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentTypeId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentScanOriginalAuthor(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentScanningDevice(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentScanDataEnterer(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentLegalAuthenticator(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentDocumentationOf(
				unstructuredDocument, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateUnstructuredDocumentTypeIdFixed constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentTypeIdFixed(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentTypeIdFixed(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasOneRecordTarget constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasOneRecordTarget(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasOneRecordTarget(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasAssignedAuthor constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasAssignedAuthor(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasAssignedAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentPatientRoleId constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentPatientRoleId(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentPatientRoleId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasPatientRoleAddress constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasPatientRoleAddress(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasPatientRoleAddress(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasPatientName constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasPatientName(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasPatientName(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasPatientGenderCode constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasPatientGenderCode(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasPatientGenderCode(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasPatientBirthYear constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasPatientBirthYear(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasPatientBirthYear(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasOriginalAuthor constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasOriginalAuthor(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasOriginalAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasScanningDevice constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasScanningDevice(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasScanningDevice(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasScanDataEnterer constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasScanDataEnterer(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasScanDataEnterer(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasRepresentedCustodianOrganizationName constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasRepresentedCustodianOrganizationName(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasRepresentedCustodianOrganizationName(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasRepresentedCustodianOrganizationAddr constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasRepresentedCustodianOrganizationAddr(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasRepresentedCustodianOrganizationAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentLegalAuthenticatorAssignedEntityId constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentLegalAuthenticatorAssignedEntityId(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentLegalAuthenticatorAssignedEntityId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasNonXMLBody constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBody(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasNonXMLBody(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasNonXMLBodyBinaryText constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBodyBinaryText(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasNonXMLBodyBinaryText(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasNonXMLBodyTextMediaType constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBodyTextMediaType(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasNonXMLBodyTextMediaType(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasNonXMLBodyTextRepresentation constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBodyTextRepresentation(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasNonXMLBodyTextRepresentation(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentNoStructuredData constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentNoStructuredData(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentNoStructuredData(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentOnePatientPerDocument constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentOnePatientPerDocument(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentOnePatientPerDocument(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentCode constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentCode(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentCode(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentConfidentialityCode constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentConfidentialityCode(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentConfidentialityCode(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentEffectiveTime constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentEffectiveTime(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentId constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentId(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentLanguageCode constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentLanguageCode(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentLanguageCode(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentTitle constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentTitle(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentTitle(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentTypeId constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentTypeId(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentTypeId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentScanOriginalAuthor constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentScanOriginalAuthor(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentScanOriginalAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentScanningDevice constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentScanningDevice(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentScanningDevice(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentScanDataEnterer constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentScanDataEnterer(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentScanDataEnterer(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentLegalAuthenticator constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentLegalAuthenticator(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentLegalAuthenticator(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentDocumentationOf constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentDocumentationOf(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentDocumentationOf(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsTemplateId constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateGeneralHeaderConstraintsTemplateId(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateGeneralHeaderConstraintsTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanOriginalAuthor(ScanOriginalAuthor scanOriginalAuthor, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(scanOriginalAuthor, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(scanOriginalAuthor, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAuthor_validateTypeCode(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAuthor_validateContextControlCode(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanOriginalAuthor_validateScanOriginalAuthorHasAssignedAuthorId(
				scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanOriginalAuthor_validateScanOriginalAuthorHasAssignedAuthorRepresentedOrganizationId(
				scanOriginalAuthor, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateScanOriginalAuthorHasAssignedAuthorId constraint of '<em>Scan Original Author</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanOriginalAuthor_validateScanOriginalAuthorHasAssignedAuthorId(
			ScanOriginalAuthor scanOriginalAuthor, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanOriginalAuthor.validateScanOriginalAuthorHasAssignedAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateScanOriginalAuthorHasAssignedAuthorRepresentedOrganizationId constraint of '<em>Scan Original Author</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanOriginalAuthor_validateScanOriginalAuthorHasAssignedAuthorRepresentedOrganizationId(
			ScanOriginalAuthor scanOriginalAuthor, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanOriginalAuthor.validateScanOriginalAuthorHasAssignedAuthorRepresentedOrganizationId(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice(ScanningDevice scanningDevice, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(scanningDevice, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(scanningDevice, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAuthor_validateTypeCode(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAuthor_validateContextControlCode(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanningDevice_validateScanningDeviceTimeEqualsDocumentEffectiveTime(
				scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanningDevice_validateScanningDeviceHasAssignedAuthorId(
				scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanningDevice_validateScanningDeviceHasAssignedAuthoringDeviceCode(
				scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanningDevice_validateScanningDeviceHasDeviceManufacturerModelName(
				scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanningDevice_validateScanningDeviceHasDeviceSoftwareName(
				scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanningDevice_validateScanningDeviceHasAssignedAuthorRepresentedOrganizationId(
				scanningDevice, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateScanningDeviceTimeEqualsDocumentEffectiveTime constraint of '<em>Scanning Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice_validateScanningDeviceTimeEqualsDocumentEffectiveTime(
			ScanningDevice scanningDevice, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanningDevice.validateScanningDeviceTimeEqualsDocumentEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateScanningDeviceHasAssignedAuthorId constraint of '<em>Scanning Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice_validateScanningDeviceHasAssignedAuthorId(ScanningDevice scanningDevice,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanningDevice.validateScanningDeviceHasAssignedAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateScanningDeviceHasAssignedAuthoringDeviceCode constraint of '<em>Scanning Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice_validateScanningDeviceHasAssignedAuthoringDeviceCode(
			ScanningDevice scanningDevice, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanningDevice.validateScanningDeviceHasAssignedAuthoringDeviceCode(diagnostics, context);
	}

	/**
	 * Validates the validateScanningDeviceHasDeviceManufacturerModelName constraint of '<em>Scanning Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice_validateScanningDeviceHasDeviceManufacturerModelName(
			ScanningDevice scanningDevice, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanningDevice.validateScanningDeviceHasDeviceManufacturerModelName(diagnostics, context);
	}

	/**
	 * Validates the validateScanningDeviceHasDeviceSoftwareName constraint of '<em>Scanning Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice_validateScanningDeviceHasDeviceSoftwareName(ScanningDevice scanningDevice,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanningDevice.validateScanningDeviceHasDeviceSoftwareName(diagnostics, context);
	}

	/**
	 * Validates the validateScanningDeviceHasAssignedAuthorRepresentedOrganizationId constraint of '<em>Scanning Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice_validateScanningDeviceHasAssignedAuthorRepresentedOrganizationId(
			ScanningDevice scanningDevice, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanningDevice.validateScanningDeviceHasAssignedAuthorRepresentedOrganizationId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanDataEnterer(ScanDataEnterer scanDataEnterer, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(scanDataEnterer, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(scanDataEnterer, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateDataEnterer_validateTypeCode(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateDataEnterer_validateContextControlCode(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanDataEnterer_validateScanDataEntererTimeEqualsDocumentEffectiveTime(
				scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanDataEnterer_validateScanDataEntererHasAssignedEntityId(
				scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanDataEnterer_validateScanDataEntererTime(scanDataEnterer, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateScanDataEntererTimeEqualsDocumentEffectiveTime constraint of '<em>Scan Data Enterer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanDataEnterer_validateScanDataEntererTimeEqualsDocumentEffectiveTime(
			ScanDataEnterer scanDataEnterer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanDataEnterer.validateScanDataEntererTimeEqualsDocumentEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateScanDataEntererHasAssignedEntityId constraint of '<em>Scan Data Enterer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanDataEnterer_validateScanDataEntererHasAssignedEntityId(ScanDataEnterer scanDataEnterer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanDataEnterer.validateScanDataEntererHasAssignedEntityId(diagnostics, context);
	}

	/**
	 * Validates the validateScanDataEntererTime constraint of '<em>Scan Data Enterer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanDataEnterer_validateScanDataEntererTime(ScanDataEnterer scanDataEnterer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanDataEnterer.validateScanDataEntererTime(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation(MedicationInformation medicationInformation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationInformation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationInformation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateManufacturedProduct_validateManufacturedDrugOrOtherMaterial(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateManufacturedProduct_validateClassCode(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationTemplateId(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationId(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationClassCode(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationManufacturedMaterial(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationManufacturerOrganization(
				medicationInformation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationInformationTemplateId constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationTemplateId(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationId constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationId(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationClassCode constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationClassCode(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationManufacturedMaterial constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationManufacturedMaterial(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationManufacturedMaterial(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationManufacturerOrganization constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationManufacturerOrganization(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationManufacturerOrganization(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument(UnstructuredOrScannedDocument unstructuredOrScannedDocument,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(unstructuredOrScannedDocument, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(unstructuredOrScannedDocument, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateGeneralHeaderConstraintsTemplateId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRealmCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTypeId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTitle(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsEffectiveTime(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsConfidentialityCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSetId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsVersionNumber(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthor(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEnterer(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodian(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipient(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticator(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticator(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTarget(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOf(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformant(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSupportParticipant(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOf(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthor(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodian(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipient(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorTime(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorSignatureCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorTime(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorSignatureCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntity(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToYear(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToDay(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientName(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatient(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRole(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounter(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityPerson(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityPerson(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportTime(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrderId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrder(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTypeIdFixed(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasOneRecordTarget(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasAssignedAuthor(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentPatientRoleId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientRoleAddress(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientName(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientGenderCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientBirthYear(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasOriginalAuthor(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasScanningDevice(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasScanDataEnterer(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLegalAuthenticatorAssignedEntityId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBody(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyBinaryText(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyTextMediaType(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyTextRepresentation(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentNoStructuredData(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentOnePatientPerDocument(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentPatientRoleHasId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentAssignedAuthorHasAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentAssignedAuthorHasTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganization(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationName(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyText(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasTextReferenceOrRepresentation(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasTextMediaTypeValueSet(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentEffectiveTime(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLanguageCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTitle(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTypeId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentScanOriginalAuthor(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentScanningDevice(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentScanDataEnterer(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLegalAuthenticator(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentDocumentationOf(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentCustodian(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentTypeIdFixed constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTypeIdFixed(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentTypeIdFixed(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasOneRecordTarget constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasOneRecordTarget(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasOneRecordTarget(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasAssignedAuthor constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasAssignedAuthor(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasAssignedAuthor(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentPatientRoleId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentPatientRoleId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentPatientRoleId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasPatientRoleAddress constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientRoleAddress(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasPatientRoleAddress(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasPatientName constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientName(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasPatientName(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasPatientGenderCode constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientGenderCode(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasPatientGenderCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasPatientBirthYear constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientBirthYear(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasPatientBirthYear(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasOriginalAuthor constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasOriginalAuthor(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasOriginalAuthor(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasScanningDevice constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasScanningDevice(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasScanningDevice(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasScanDataEnterer constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasScanDataEnterer(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasScanDataEnterer(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentLegalAuthenticatorAssignedEntityId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLegalAuthenticatorAssignedEntityId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentLegalAuthenticatorAssignedEntityId(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasNonXMLBody constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBody(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasNonXMLBody(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasNonXMLBodyBinaryText constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyBinaryText(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasNonXMLBodyBinaryText(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasNonXMLBodyTextMediaType constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyTextMediaType(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasNonXMLBodyTextMediaType(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasNonXMLBodyTextRepresentation constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyTextRepresentation(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasNonXMLBodyTextRepresentation(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentNoStructuredData constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentNoStructuredData(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentNoStructuredData(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentOnePatientPerDocument constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentOnePatientPerDocument(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentOnePatientPerDocument(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentPatientRoleHasId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentPatientRoleHasId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentPatientRoleHasId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentAssignedAuthorHasAddr constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentAssignedAuthorHasAddr(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentAssignedAuthorHasAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentAssignedAuthorHasTelecom constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentAssignedAuthorHasTelecom(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentAssignedAuthorHasTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganization constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganization(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganization(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationId(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationName constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationName(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationName(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationTelecom constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationTelecom(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationAddr constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationAddr(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasNonXMLBodyText constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyText(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasNonXMLBodyText(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasTextReferenceOrRepresentation constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasTextReferenceOrRepresentation(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasTextReferenceOrRepresentation(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasTextMediaTypeValueSet constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasTextMediaTypeValueSet(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasTextMediaTypeValueSet(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentCode constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentCode(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentCode(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentEffectiveTime constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentEffectiveTime(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentLanguageCode constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLanguageCode(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentLanguageCode(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentTitle constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTitle(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentTitle(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentTypeId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTypeId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentTypeId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentScanOriginalAuthor constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentScanOriginalAuthor(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentScanOriginalAuthor(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentScanningDevice constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentScanningDevice(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentScanningDevice(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentScanDataEnterer constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentScanDataEnterer(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentScanDataEnterer(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentLegalAuthenticator constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLegalAuthenticator(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentLegalAuthenticator(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentDocumentationOf constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentDocumentationOf(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentDocumentationOf(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentCustodian constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentCustodian(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentCustodian(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsTemplateId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateGeneralHeaderConstraintsTemplateId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateGeneralHeaderConstraintsTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary(ReferralSummary referralSummary, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(referralSummary, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(referralSummary, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateGeneralHeaderConstraintsTemplateId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRealmCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTypeId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateGeneralHeaderConstraintsCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTitle(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsEffectiveTime(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsConfidentialityCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSetId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsVersionNumber(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthor(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEnterer(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodian(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipient(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticator(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticator(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTarget(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOf(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformant(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSupportParticipant(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOf(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAddr(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorTelecom(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthor(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAddr(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityTelecom(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodian(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipient(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorTime(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorSignatureCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityAddr(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorTime(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorSignatureCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntity(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToYear(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToDay(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientName(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleAddr(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleTelecom(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatient(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRole(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounter(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityAddr(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityPerson(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityAddr(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityPerson(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportTime(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrderId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrder(
				referralSummary, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsTemplateId constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateGeneralHeaderConstraintsTemplateId(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateGeneralHeaderConstraintsTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsCode constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateGeneralHeaderConstraintsCode(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateGeneralHeaderConstraintsCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary(DischargeSummary dischargeSummary, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(dischargeSummary, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(dischargeSummary, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateGeneralHeaderConstraintsTemplateId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRealmCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTypeId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateGeneralHeaderConstraintsCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsTitle(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsEffectiveTime(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsConfidentialityCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSetId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsVersionNumber(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthor(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEnterer(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodian(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipient(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticator(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticator(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTarget(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOf(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformant(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsSupportParticipant(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOf(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorAddr(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthorTelecom(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthorAssignedAuthor(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAddr(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityTelecom(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsCustodianAssignedCustodian(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformationRecipientIntendedRecipient(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorTime(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsLegalAuthenticatorSignatureCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityAddr(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorTime(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorSignatureCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsAuthenticatorAssignedEntity(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToYear(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToDay(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientName(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleAddr(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRoleTelecom(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRolePatient(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsRecordTargetPatientRole(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounterId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsComponentOfEncompassingEncounter(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityAddr(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantRelatedEntityPerson(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityAddr(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantAssignedEntityPerson(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsParticipantSupportTime(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrderId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralHeaderConstraints_validateGeneralHeaderConstraintsInFulfillmentOfOrder(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryAdmissionMedicationHistorySection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHospitalAdmissionDiagnosisSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryAdvanceDirectivesSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryAllergiesReactionsSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryDischargeDiagnosisSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryDischargeDiet(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHospitalDischargeMedicationsSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryFunctionalStatusSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHistoryOfPresentIllness(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHospitalCourseSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryMedicalEquipmentSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryPhysicalExamSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryPlanOfCareSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHistoryOfPastIllnessSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryReviewOfSystemsSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryMedicationsAdministeredSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryVitalSignsSection(
				dischargeSummary, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateDischargeSummaryAdmissionMedicationHistorySection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryAdmissionMedicationHistorySection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryAdmissionMedicationHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHospitalAdmissionDiagnosisSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHospitalAdmissionDiagnosisSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHospitalAdmissionDiagnosisSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryAdvanceDirectivesSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryAdvanceDirectivesSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryAdvanceDirectivesSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryAllergiesReactionsSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryAllergiesReactionsSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryAllergiesReactionsSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryDischargeDiagnosisSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryDischargeDiagnosisSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryDischargeDiagnosisSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryDischargeDiet constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryDischargeDiet(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryDischargeDiet(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHospitalDischargeMedicationsSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHospitalDischargeMedicationsSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHospitalDischargeMedicationsSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryFunctionalStatusSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryFunctionalStatusSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryFunctionalStatusSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHistoryOfPresentIllness constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHistoryOfPresentIllness(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHistoryOfPresentIllness(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHospitalCourseSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHospitalCourseSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHospitalCourseSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryMedicalEquipmentSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryMedicalEquipmentSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryMedicalEquipmentSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryPhysicalExamSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryPhysicalExamSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryPhysicalExamSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryPlanOfCareSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryPlanOfCareSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryPlanOfCareSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHistoryOfPastIllnessSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHistoryOfPastIllnessSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHistoryOfPastIllnessSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryReviewOfSystemsSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryReviewOfSystemsSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryReviewOfSystemsSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryMedicationsAdministeredSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryMedicationsAdministeredSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryMedicationsAdministeredSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryVitalSignsSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryVitalSignsSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryVitalSignsSection(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsTemplateId constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateGeneralHeaderConstraintsTemplateId(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateGeneralHeaderConstraintsTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralHeaderConstraintsCode constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateGeneralHeaderConstraintsCode(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateGeneralHeaderConstraintsCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeDietSection(DischargeDietSection dischargeDietSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(dischargeDietSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(dischargeDietSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(dischargeDietSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(dischargeDietSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(dischargeDietSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(dischargeDietSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(dischargeDietSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(dischargeDietSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(dischargeDietSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(dischargeDietSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeDietSection_validateDischargeDietSectionTemplateId(
				dischargeDietSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeDietSection_validateDischargeDietSectionCode(
				dischargeDietSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeDietSection_validateDischargeDietSectionTitle(
				dischargeDietSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeDietSection_validateDischargeDietSectionText(
				dischargeDietSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateDischargeDietSectionTemplateId constraint of '<em>Discharge Diet Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeDietSection_validateDischargeDietSectionTemplateId(
			DischargeDietSection dischargeDietSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeDietSection.validateDischargeDietSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeDietSectionCode constraint of '<em>Discharge Diet Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeDietSection_validateDischargeDietSectionCode(
			DischargeDietSection dischargeDietSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeDietSection.validateDischargeDietSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeDietSectionTitle constraint of '<em>Discharge Diet Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeDietSection_validateDischargeDietSectionTitle(
			DischargeDietSection dischargeDietSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeDietSection.validateDischargeDietSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeDietSectionText constraint of '<em>Discharge Diet Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeDietSection_validateDischargeDietSectionText(
			DischargeDietSection dischargeDietSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeDietSection.validateDischargeDietSectionText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeMedicationsSectionEntriesOptional(
			HospitalDischargeMedicationsSectionEntriesOptional hospitalDischargeMedicationsSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(
				hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(
				hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(
				hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(
				hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalTemplateId(
				hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalCode(
				hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalTitle(
				hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalText(
				hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication(
				hospitalDischargeMedicationsSectionEntriesOptional, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalDischargeMedicationsSectionEntriesOptionalTemplateId constraint of '<em>Hospital Discharge Medications Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalTemplateId(
			HospitalDischargeMedicationsSectionEntriesOptional hospitalDischargeMedicationsSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return hospitalDischargeMedicationsSectionEntriesOptional.validateHospitalDischargeMedicationsSectionEntriesOptionalTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeMedicationsSectionEntriesOptionalCode constraint of '<em>Hospital Discharge Medications Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalCode(
			HospitalDischargeMedicationsSectionEntriesOptional hospitalDischargeMedicationsSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return hospitalDischargeMedicationsSectionEntriesOptional.validateHospitalDischargeMedicationsSectionEntriesOptionalCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeMedicationsSectionEntriesOptionalTitle constraint of '<em>Hospital Discharge Medications Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalTitle(
			HospitalDischargeMedicationsSectionEntriesOptional hospitalDischargeMedicationsSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return hospitalDischargeMedicationsSectionEntriesOptional.validateHospitalDischargeMedicationsSectionEntriesOptionalTitle(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeMedicationsSectionEntriesOptionalText constraint of '<em>Hospital Discharge Medications Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalText(
			HospitalDischargeMedicationsSectionEntriesOptional hospitalDischargeMedicationsSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return hospitalDischargeMedicationsSectionEntriesOptional.validateHospitalDischargeMedicationsSectionEntriesOptionalText(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication constraint of '<em>Hospital Discharge Medications Section Entries Optional</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeMedicationsSectionEntriesOptional_validateHospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication(
			HospitalDischargeMedicationsSectionEntriesOptional hospitalDischargeMedicationsSectionEntriesOptional,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return hospitalDischargeMedicationsSectionEntriesOptional.validateHospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreconditionForSubstanceAdministration(
			PreconditionForSubstanceAdministration preconditionForSubstanceAdministration, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(preconditionForSubstanceAdministration, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			preconditionForSubstanceAdministration, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(preconditionForSubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(preconditionForSubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(preconditionForSubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(preconditionForSubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(preconditionForSubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(preconditionForSubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validatePrecondition_validateTypeCode(
				preconditionForSubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePreconditionForSubstanceAdministration_validatePreconditionForSubstanceAdministrationCriterionCode(
				preconditionForSubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePreconditionForSubstanceAdministration_validatePreconditionForSubstanceAdministrationCriterionText(
				preconditionForSubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePreconditionForSubstanceAdministration_validatePreconditionForSubstanceAdministrationCriterionValue(
				preconditionForSubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePreconditionForSubstanceAdministration_validatePreconditionForSubstanceAdministrationTemplateId(
				preconditionForSubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePreconditionForSubstanceAdministration_validatePreconditionForSubstanceAdministrationCriterion(
				preconditionForSubstanceAdministration, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePreconditionForSubstanceAdministrationCriterionCode constraint of '<em>Precondition For Substance Administration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreconditionForSubstanceAdministration_validatePreconditionForSubstanceAdministrationCriterionCode(
			PreconditionForSubstanceAdministration preconditionForSubstanceAdministration, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return preconditionForSubstanceAdministration.validatePreconditionForSubstanceAdministrationCriterionCode(
			diagnostics, context);
	}

	/**
	 * Validates the validatePreconditionForSubstanceAdministrationCriterionText constraint of '<em>Precondition For Substance Administration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreconditionForSubstanceAdministration_validatePreconditionForSubstanceAdministrationCriterionText(
			PreconditionForSubstanceAdministration preconditionForSubstanceAdministration, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return preconditionForSubstanceAdministration.validatePreconditionForSubstanceAdministrationCriterionText(
			diagnostics, context);
	}

	/**
	 * Validates the validatePreconditionForSubstanceAdministrationCriterionValue constraint of '<em>Precondition For Substance Administration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreconditionForSubstanceAdministration_validatePreconditionForSubstanceAdministrationCriterionValue(
			PreconditionForSubstanceAdministration preconditionForSubstanceAdministration, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return preconditionForSubstanceAdministration.validatePreconditionForSubstanceAdministrationCriterionValue(
			diagnostics, context);
	}

	/**
	 * Validates the validatePreconditionForSubstanceAdministrationTemplateId constraint of '<em>Precondition For Substance Administration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreconditionForSubstanceAdministration_validatePreconditionForSubstanceAdministrationTemplateId(
			PreconditionForSubstanceAdministration preconditionForSubstanceAdministration, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return preconditionForSubstanceAdministration.validatePreconditionForSubstanceAdministrationTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validatePreconditionForSubstanceAdministrationCriterion constraint of '<em>Precondition For Substance Administration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreconditionForSubstanceAdministration_validatePreconditionForSubstanceAdministrationCriterion(
			PreconditionForSubstanceAdministration preconditionForSubstanceAdministration, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return preconditionForSubstanceAdministration.validatePreconditionForSubstanceAdministrationCriterion(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationMedicationInformation(
			ImmunizationMedicationInformation immunizationMedicationInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(immunizationMedicationInformation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(immunizationMedicationInformation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(immunizationMedicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(immunizationMedicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(immunizationMedicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(immunizationMedicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(immunizationMedicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(immunizationMedicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateManufacturedProduct_validateManufacturedDrugOrOtherMaterial(
				immunizationMedicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateManufacturedProduct_validateClassCode(
				immunizationMedicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationMedicationInformation_validateImmunizationMedicationInformationTemplateId(
				immunizationMedicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationMedicationInformation_validateImmunizationMedicationInformationClassCode(
				immunizationMedicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationMedicationInformation_validateImmunizationMedicationInformationId(
				immunizationMedicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationMedicationInformation_validateImmunizationMedicationInformationOrganization(
				immunizationMedicationInformation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateImmunizationMedicationInformationTemplateId constraint of '<em>Immunization Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationMedicationInformation_validateImmunizationMedicationInformationTemplateId(
			ImmunizationMedicationInformation immunizationMedicationInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationMedicationInformation.validateImmunizationMedicationInformationTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationMedicationInformationClassCode constraint of '<em>Immunization Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationMedicationInformation_validateImmunizationMedicationInformationClassCode(
			ImmunizationMedicationInformation immunizationMedicationInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationMedicationInformation.validateImmunizationMedicationInformationClassCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationMedicationInformationId constraint of '<em>Immunization Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationMedicationInformation_validateImmunizationMedicationInformationId(
			ImmunizationMedicationInformation immunizationMedicationInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationMedicationInformation.validateImmunizationMedicationInformationId(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationMedicationInformationOrganization constraint of '<em>Immunization Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationMedicationInformation_validateImmunizationMedicationInformationOrganization(
			ImmunizationMedicationInformation immunizationMedicationInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunizationMedicationInformation.validateImmunizationMedicationInformationOrganization(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureSpecimen(ProcedureSpecimen procedureSpecimen, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedureSpecimen, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedureSpecimen, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedureSpecimen, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedureSpecimen, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedureSpecimen, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedureSpecimen, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedureSpecimen, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedureSpecimen, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSpecimen_validateTypeCode(procedureSpecimen, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureSpecimen_validateProcedureSpecimenSpecimenRole(
				procedureSpecimen, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureSpecimen_validateProcedureSpecimenSpecimentRoleId(
				procedureSpecimen, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureSpecimen_validateProcedureSpecimenTemplateId(
				procedureSpecimen, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedureSpecimenSpecimenRole constraint of '<em>Procedure Specimen</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureSpecimen_validateProcedureSpecimenSpecimenRole(ProcedureSpecimen procedureSpecimen,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureSpecimen.validateProcedureSpecimenSpecimenRole(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureSpecimenSpecimentRoleId constraint of '<em>Procedure Specimen</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureSpecimen_validateProcedureSpecimenSpecimentRoleId(
			ProcedureSpecimen procedureSpecimen, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureSpecimen.validateProcedureSpecimenSpecimentRoleId(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureSpecimenTemplateId constraint of '<em>Procedure Specimen</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureSpecimen_validateProcedureSpecimenTemplateId(ProcedureSpecimen procedureSpecimen,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureSpecimen.validateProcedureSpecimenTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedurePerformer(ProcedurePerformer procedurePerformer, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedurePerformer, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedurePerformer, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validatePerformer2_validateTypeCode(procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedurePerformer_validateProcedurePerformerAssignedEntity(
				procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedurePerformer_validateProcedurePerformerAssignedEntityId(
				procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedurePerformer_validateProcedurePerformerAssignedEntityAddr(
				procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedurePerformer_validateProcedurePerformerAssignedEntityTelecom(
				procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedurePerformer_validateProcedurePerformerAssignedEntityRepOrg(
				procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedurePerformer_validateProcedurePerformerAssignedEntityRepOrgId(
				procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedurePerformer_validateProcedurePerformerAssignedEntityRepOrgName(
				procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedurePerformer_validateProcedurePerformerAssignedEntityRepOrgAddr(
				procedurePerformer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedurePerformer_validateProcedurePerformerAssignedEntityRepOrgTelecom(
				procedurePerformer, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedurePerformerAssignedEntity constraint of '<em>Procedure Performer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedurePerformer_validateProcedurePerformerAssignedEntity(
			ProcedurePerformer procedurePerformer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedurePerformer.validateProcedurePerformerAssignedEntity(diagnostics, context);
	}

	/**
	 * Validates the validateProcedurePerformerAssignedEntityId constraint of '<em>Procedure Performer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedurePerformer_validateProcedurePerformerAssignedEntityId(
			ProcedurePerformer procedurePerformer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedurePerformer.validateProcedurePerformerAssignedEntityId(diagnostics, context);
	}

	/**
	 * Validates the validateProcedurePerformerAssignedEntityAddr constraint of '<em>Procedure Performer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedurePerformer_validateProcedurePerformerAssignedEntityAddr(
			ProcedurePerformer procedurePerformer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedurePerformer.validateProcedurePerformerAssignedEntityAddr(diagnostics, context);
	}

	/**
	 * Validates the validateProcedurePerformerAssignedEntityTelecom constraint of '<em>Procedure Performer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedurePerformer_validateProcedurePerformerAssignedEntityTelecom(
			ProcedurePerformer procedurePerformer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedurePerformer.validateProcedurePerformerAssignedEntityTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateProcedurePerformerAssignedEntityRepOrg constraint of '<em>Procedure Performer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedurePerformer_validateProcedurePerformerAssignedEntityRepOrg(
			ProcedurePerformer procedurePerformer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedurePerformer.validateProcedurePerformerAssignedEntityRepOrg(diagnostics, context);
	}

	/**
	 * Validates the validateProcedurePerformerAssignedEntityRepOrgId constraint of '<em>Procedure Performer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedurePerformer_validateProcedurePerformerAssignedEntityRepOrgId(
			ProcedurePerformer procedurePerformer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedurePerformer.validateProcedurePerformerAssignedEntityRepOrgId(diagnostics, context);
	}

	/**
	 * Validates the validateProcedurePerformerAssignedEntityRepOrgName constraint of '<em>Procedure Performer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedurePerformer_validateProcedurePerformerAssignedEntityRepOrgName(
			ProcedurePerformer procedurePerformer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedurePerformer.validateProcedurePerformerAssignedEntityRepOrgName(diagnostics, context);
	}

	/**
	 * Validates the validateProcedurePerformerAssignedEntityRepOrgAddr constraint of '<em>Procedure Performer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedurePerformer_validateProcedurePerformerAssignedEntityRepOrgAddr(
			ProcedurePerformer procedurePerformer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedurePerformer.validateProcedurePerformerAssignedEntityRepOrgAddr(diagnostics, context);
	}

	/**
	 * Validates the validateProcedurePerformerAssignedEntityRepOrgTelecom constraint of '<em>Procedure Performer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedurePerformer_validateProcedurePerformerAssignedEntityRepOrgTelecom(
			ProcedurePerformer procedurePerformer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedurePerformer.validateProcedurePerformerAssignedEntityRepOrgTelecom(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEncounter(ProcedureEncounter procedureEncounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedureEncounter, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedureEncounter, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedureEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedureEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedureEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedureEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedureEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedureEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEncounter_validateProcedureEncounterClassCode(
				procedureEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEncounter_validateProcedureEncounterMoodCode(
				procedureEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEncounter_validateProcedureEncounterId(procedureEncounter, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedureEncounterClassCode constraint of '<em>Procedure Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEncounter_validateProcedureEncounterClassCode(
			ProcedureEncounter procedureEncounter, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEncounter.validateProcedureEncounterClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEncounterMoodCode constraint of '<em>Procedure Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEncounter_validateProcedureEncounterMoodCode(ProcedureEncounter procedureEncounter,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEncounter.validateProcedureEncounterMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEncounterId constraint of '<em>Procedure Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEncounter_validateProcedureEncounterId(ProcedureEncounter procedureEncounter,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEncounter.validateProcedureEncounterId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformationManufacturedMaterial(
			MedicationInformationManufacturedMaterial medicationInformationManufacturedMaterial,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationInformationManufacturedMaterial, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			medicationInformationManufacturedMaterial, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationInformationManufacturedMaterial, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(
				medicationInformationManufacturedMaterial, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationInformationManufacturedMaterial, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationInformationManufacturedMaterial, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationInformationManufacturedMaterial, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationInformationManufacturedMaterial, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateMaterial_validateClassCode(
				medicationInformationManufacturedMaterial, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateMaterial_validateDeterminerCode(
				medicationInformationManufacturedMaterial, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformationManufacturedMaterial_validateMedicationInformationManufacturedMaterialCode(
				medicationInformationManufacturedMaterial, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationInformationManufacturedMaterialCode constraint of '<em>Medication Information Manufactured Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformationManufacturedMaterial_validateMedicationInformationManufacturedMaterialCode(
			MedicationInformationManufacturedMaterial medicationInformationManufacturedMaterial,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformationManufacturedMaterial.validateMedicationInformationManufacturedMaterialCode(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySubject(FamilyHistorySubject familyHistorySubject, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(familyHistorySubject, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(familyHistorySubject, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSubject_validateTypeCode(familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSubject_validateContextControlCode(
				familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectClassCode(
				familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectCode(
				familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectCodeValueSet(
				familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectSubject(
				familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectSubjectAdmGenderCode(
				familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectSubjectBirthTime(
				familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectSubjectDeceasedInd(
				familyHistorySubject, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectSubjectDeceasedTime(
				familyHistorySubject, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateFamilyHistorySubjectRelatedSubjectClassCode constraint of '<em>Family History Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectClassCode(
			FamilyHistorySubject familyHistorySubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySubject.validateFamilyHistorySubjectRelatedSubjectClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySubjectRelatedSubjectCode constraint of '<em>Family History Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectCode(
			FamilyHistorySubject familyHistorySubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySubject.validateFamilyHistorySubjectRelatedSubjectCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySubjectRelatedSubjectCodeValueSet constraint of '<em>Family History Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectCodeValueSet(
			FamilyHistorySubject familyHistorySubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySubject.validateFamilyHistorySubjectRelatedSubjectCodeValueSet(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySubjectRelatedSubjectSubject constraint of '<em>Family History Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectSubject(
			FamilyHistorySubject familyHistorySubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySubject.validateFamilyHistorySubjectRelatedSubjectSubject(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySubjectRelatedSubjectSubjectAdmGenderCode constraint of '<em>Family History Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectSubjectAdmGenderCode(
			FamilyHistorySubject familyHistorySubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySubject.validateFamilyHistorySubjectRelatedSubjectSubjectAdmGenderCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySubjectRelatedSubjectSubjectBirthTime constraint of '<em>Family History Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectSubjectBirthTime(
			FamilyHistorySubject familyHistorySubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySubject.validateFamilyHistorySubjectRelatedSubjectSubjectBirthTime(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySubjectRelatedSubjectSubjectDeceasedInd constraint of '<em>Family History Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectSubjectDeceasedInd(
			FamilyHistorySubject familyHistorySubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySubject.validateFamilyHistorySubjectRelatedSubjectSubjectDeceasedInd(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySubjectRelatedSubjectSubjectDeceasedTime constraint of '<em>Family History Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySubject_validateFamilyHistorySubjectRelatedSubjectSubjectDeceasedTime(
			FamilyHistorySubject familyHistorySubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySubject.validateFamilyHistorySubjectRelatedSubjectSubjectDeceasedTime(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeStudiesSummarySection(
			HospitalDischargeStudiesSummarySection hospitalDischargeStudiesSummarySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalDischargeStudiesSummarySection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			hospitalDischargeStudiesSummarySection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionTemplateId(
				hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionCode(
				hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionTitle(
				hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionText(
				hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalDischargeStudiesSummarySectionTemplateId constraint of '<em>Hospital Discharge Studies Summary Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionTemplateId(
			HospitalDischargeStudiesSummarySection hospitalDischargeStudiesSummarySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeStudiesSummarySection.validateHospitalDischargeStudiesSummarySectionTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeStudiesSummarySectionCode constraint of '<em>Hospital Discharge Studies Summary Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionCode(
			HospitalDischargeStudiesSummarySection hospitalDischargeStudiesSummarySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeStudiesSummarySection.validateHospitalDischargeStudiesSummarySectionCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeStudiesSummarySectionTitle constraint of '<em>Hospital Discharge Studies Summary Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionTitle(
			HospitalDischargeStudiesSummarySection hospitalDischargeStudiesSummarySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeStudiesSummarySection.validateHospitalDischargeStudiesSummarySectionTitle(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeStudiesSummarySectionText constraint of '<em>Hospital Discharge Studies Summary Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionText(
			HospitalDischargeStudiesSummarySection hospitalDischargeStudiesSummarySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeStudiesSummarySection.validateHospitalDischargeStudiesSummarySectionText(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeMedication(DischargeMedication dischargeMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(dischargeMedication, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(dischargeMedication, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(dischargeMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(dischargeMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(dischargeMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(dischargeMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(dischargeMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(dischargeMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeMedication_validateDischargeMedicationMedicationActivity(
				dischargeMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeMedication_validateDischargeMedicationTemplateId(
				dischargeMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeMedication_validateDischargeMedicationClassCode(
				dischargeMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeMedication_validateDischargeMedicationMoodCode(
				dischargeMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeMedication_validateDischargeMedicationCode(
				dischargeMedication, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateDischargeMedicationMedicationActivity constraint of '<em>Discharge Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeMedication_validateDischargeMedicationMedicationActivity(
			DischargeMedication dischargeMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeMedication.validateDischargeMedicationMedicationActivity(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeMedicationTemplateId constraint of '<em>Discharge Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeMedication_validateDischargeMedicationTemplateId(
			DischargeMedication dischargeMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeMedication.validateDischargeMedicationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeMedicationClassCode constraint of '<em>Discharge Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeMedication_validateDischargeMedicationClassCode(
			DischargeMedication dischargeMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeMedication.validateDischargeMedicationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeMedicationMoodCode constraint of '<em>Discharge Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeMedication_validateDischargeMedicationMoodCode(
			DischargeMedication dischargeMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeMedication.validateDischargeMedicationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeMedicationCode constraint of '<em>Discharge Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeMedication_validateDischargeMedicationCode(DischargeMedication dischargeMedication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeMedication.validateDischargeMedicationCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeDiagnosis(HospitalDischargeDiagnosis hospitalDischargeDiagnosis,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalDischargeDiagnosis, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(hospitalDischargeDiagnosis, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(hospitalDischargeDiagnosis, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(hospitalDischargeDiagnosis, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(hospitalDischargeDiagnosis, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalDischargeDiagnosis, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalDischargeDiagnosis, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(hospitalDischargeDiagnosis, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeDiagnosis_validateHospitalDischargeDiagnosisProblemObservation(
				hospitalDischargeDiagnosis, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeDiagnosis_validateHospitalDischargeDiagnosisTemplateId(
				hospitalDischargeDiagnosis, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeDiagnosis_validateHospitalDischargeDiagnosisClassCode(
				hospitalDischargeDiagnosis, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeDiagnosis_validateHospitalDischargeDiagnosisMoodCode(
				hospitalDischargeDiagnosis, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeDiagnosis_validateHospitalDischargeDiagnosisCode(
				hospitalDischargeDiagnosis, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalDischargeDiagnosisProblemObservation constraint of '<em>Hospital Discharge Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeDiagnosis_validateHospitalDischargeDiagnosisProblemObservation(
			HospitalDischargeDiagnosis hospitalDischargeDiagnosis, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeDiagnosis.validateHospitalDischargeDiagnosisProblemObservation(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeDiagnosisTemplateId constraint of '<em>Hospital Discharge Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeDiagnosis_validateHospitalDischargeDiagnosisTemplateId(
			HospitalDischargeDiagnosis hospitalDischargeDiagnosis, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeDiagnosis.validateHospitalDischargeDiagnosisTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeDiagnosisClassCode constraint of '<em>Hospital Discharge Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeDiagnosis_validateHospitalDischargeDiagnosisClassCode(
			HospitalDischargeDiagnosis hospitalDischargeDiagnosis, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeDiagnosis.validateHospitalDischargeDiagnosisClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeDiagnosisMoodCode constraint of '<em>Hospital Discharge Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeDiagnosis_validateHospitalDischargeDiagnosisMoodCode(
			HospitalDischargeDiagnosis hospitalDischargeDiagnosis, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeDiagnosis.validateHospitalDischargeDiagnosisMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeDiagnosisCode constraint of '<em>Hospital Discharge Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeDiagnosis_validateHospitalDischargeDiagnosisCode(
			HospitalDischargeDiagnosis hospitalDischargeDiagnosis, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeDiagnosis.validateHospitalDischargeDiagnosisCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeInstructionsSection(
			HospitalDischargeInstructionsSection hospitalDischargeInstructionsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalDischargeInstructionsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(hospitalDischargeInstructionsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(hospitalDischargeInstructionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(hospitalDischargeInstructionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(hospitalDischargeInstructionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalDischargeInstructionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalDischargeInstructionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(hospitalDischargeInstructionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				hospitalDischargeInstructionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				hospitalDischargeInstructionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeInstructionsSection_validateHospitalDischargeInstructionsSectionTemplateId(
				hospitalDischargeInstructionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeInstructionsSection_validateHospitalDischargeInstructionsSectionCode(
				hospitalDischargeInstructionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeInstructionsSection_validateHospitalDischargeInstructionsSectionTitle(
				hospitalDischargeInstructionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeInstructionsSection_validateHospitalDischargeInstructionsSectionText(
				hospitalDischargeInstructionsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalDischargeInstructionsSectionTemplateId constraint of '<em>Hospital Discharge Instructions Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeInstructionsSection_validateHospitalDischargeInstructionsSectionTemplateId(
			HospitalDischargeInstructionsSection hospitalDischargeInstructionsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeInstructionsSection.validateHospitalDischargeInstructionsSectionTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeInstructionsSectionCode constraint of '<em>Hospital Discharge Instructions Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeInstructionsSection_validateHospitalDischargeInstructionsSectionCode(
			HospitalDischargeInstructionsSection hospitalDischargeInstructionsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeInstructionsSection.validateHospitalDischargeInstructionsSectionCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeInstructionsSectionText constraint of '<em>Hospital Discharge Instructions Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeInstructionsSection_validateHospitalDischargeInstructionsSectionText(
			HospitalDischargeInstructionsSection hospitalDischargeInstructionsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeInstructionsSection.validateHospitalDischargeInstructionsSectionText(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeInstructionsSectionTitle constraint of '<em>Hospital Discharge Instructions Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeInstructionsSection_validateHospitalDischargeInstructionsSectionTitle(
			HospitalDischargeInstructionsSection hospitalDischargeInstructionsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeInstructionsSection.validateHospitalDischargeInstructionsSectionTitle(
			diagnostics, context);
	}

	/**
	 * Returns the resource locator that will be used to fetch messages for this validator's diagnostics.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ResourceLocator getResourceLocator() {
		return ConsolPlugin.INSTANCE;
	}

} // ConsolValidator
