/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.openhealthtools.mdht.uml.cda.consol.util;

import java.util.Map;

import org.eclipse.emf.common.util.DiagnosticChain;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.util.EObjectValidator;
import org.openhealthtools.mdht.uml.cda.consol.*;
import org.openhealthtools.mdht.uml.cda.util.CDAValidator;

/**
 * <!-- begin-user-doc -->
 * The <b>Validator</b> for the model.
 * <!-- end-user-doc -->
 * @see org.openhealthtools.mdht.uml.cda.consol.ConsolPackage
 * @generated
 */
public class ConsolValidator extends EObjectValidator {
	/**
	 * The cached model package
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final ConsolValidator INSTANCE = new ConsolValidator();

	/**
	 * A constant for the {@link org.eclipse.emf.common.util.Diagnostic#getSource() source} of diagnostic {@link org.eclipse.emf.common.util.Diagnostic#getCode() codes} from this package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.emf.common.util.Diagnostic#getSource()
	 * @see org.eclipse.emf.common.util.Diagnostic#getCode()
	 * @generated
	 */
	public static final String DIAGNOSTIC_SOURCE = "org.openhealthtools.mdht.uml.cda.consol";

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Entry Relationship Required' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_ENTRY_RELATIONSHIP_REQUIRED = 1;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Subject Of Target' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_SUBJECT_OF_TARGET = 2;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Contains Problem Observation' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_CONTAINS_PROBLEM_OBSERVATION = 3;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Contains Alert Observation' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_CONTAINS_ALERT_OBSERVATION = 4;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Contains Patient Awareness' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_CONTAINS_PATIENT_AWARENESS = 5;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Effective Time Low High' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_EFFECTIVE_TIME_LOW_HIGH = 6;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Has Related Observations' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_HAS_RELATED_OBSERVATIONS = 7;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Related Observations Type Code' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_RELATED_OBSERVATIONS_TYPE_CODE = 8;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Has Related References Type Code' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_HAS_RELATED_REFERENCES_TYPE_CODE = 9;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Advere Event Date' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_ADVERE_EVENT_DATE = 10;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Advere Event Type' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_ADVERE_EVENT_TYPE = 11;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Advere Event Type Vocab' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_ADVERE_EVENT_TYPE_VOCAB = 12;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Allergy Product' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_ALLERGY_PRODUCT = 13;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Allergy Product Type Code' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_ALLERGY_PRODUCT_TYPE_CODE = 14;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Product Detail Participant Role' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_PRODUCT_DETAIL_PARTICIPANT_ROLE = 15;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Product Detail Participant Role Class Code' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_PRODUCT_DETAIL_PARTICIPANT_ROLE_CLASS_CODE = 16;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Product Detail Playing Entity' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_PRODUCT_DETAIL_PLAYING_ENTITY = 17;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Product Detail Playing Entity Class Code' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_PRODUCT_DETAIL_PLAYING_ENTITY_CLASS_CODE = 18;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Product Detail Name' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_PRODUCT_DETAIL_NAME = 19;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Product Code' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_PRODUCT_CODE = 20;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Allergy Product Food Vocab' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_ALLERGY_PRODUCT_FOOD_VOCAB = 21;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Allergy Product Med Class Vocab' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_ALLERGY_PRODUCT_MED_CLASS_VOCAB = 22;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Allergy Product Specific Med Vocab' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_ALLERGY_PRODUCT_SPECIFIC_MED_VOCAB = 23;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Reaction Text' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_REACTION_TEXT = 24;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Reaction Code' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_REACTION_CODE = 25;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Reaction Code Vocab' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_REACTION_CODE_VOCAB = 26;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Severity Text' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_SEVERITY_TEXT = 27;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Severity Code' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_SEVERITY_CODE = 28;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Severity Code Vocab' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_SEVERITY_CODE_VOCAB = 29;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Template Id' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_TEMPLATE_ID = 30;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Class Code' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_CLASS_CODE = 31;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Mood Code' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_MOOD_CODE = 32;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Id' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_ID = 33;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Code Null Flavor' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_CODE_NULL_FLAVOR = 34;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Effective Time' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_EFFECTIVE_TIME = 35;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Episode Observation' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_EPISODE_OBSERVATION = 36;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Drug Sensitivity Allergy Intolerance' of 'Allergy Drug Sensitivity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_DRUG_SENSITIVITY__ALLERGY_DRUG_SENSITIVITY_ALLERGY_INTOLERANCE = 37;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Episode Observation One Entry Relationship SUBJ' of 'Episode Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EPISODE_OBSERVATION__EPISODE_OBSERVATION_ONE_ENTRY_RELATIONSHIP_SUBJ = 38;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Episode Observation Exists Entry Relationship SAS' of 'Episode Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EPISODE_OBSERVATION__EPISODE_OBSERVATION_EXISTS_ENTRY_RELATIONSHIP_SAS = 39;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Episode Observation Template Id' of 'Episode Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EPISODE_OBSERVATION__EPISODE_OBSERVATION_TEMPLATE_ID = 40;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Episode Observation Class Code' of 'Episode Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EPISODE_OBSERVATION__EPISODE_OBSERVATION_CLASS_CODE = 41;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Episode Observation Mood Code' of 'Episode Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EPISODE_OBSERVATION__EPISODE_OBSERVATION_MOOD_CODE = 42;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Episode Observation Code' of 'Episode Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EPISODE_OBSERVATION__EPISODE_OBSERVATION_CODE = 43;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Episode Observation Status Code' of 'Episode Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EPISODE_OBSERVATION__EPISODE_OBSERVATION_STATUS_CODE = 44;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Episode Observation Value' of 'Episode Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EPISODE_OBSERVATION__EPISODE_OBSERVATION_VALUE = 45;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Information Source' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_INFORMATION_SOURCE = 46;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Contains Patient Awareness' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_CONTAINS_PATIENT_AWARENESS = 47;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Has Text Reference' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_HAS_TEXT_REFERENCE = 48;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Comment Inversion Ind' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_COMMENT_INVERSION_IND = 49;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Code Code System Required' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_CODE_CODE_SYSTEM_REQUIRED = 50;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Display Name Code Name' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_DISPLAY_NAME_CODE_NAME = 51;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Allergy Substance' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_ALLERGY_SUBSTANCE = 52;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Allergy Substance Type Code' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_ALLERGY_SUBSTANCE_TYPE_CODE = 53;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Allergy Substance Participant Role' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_ALLERGY_SUBSTANCE_PARTICIPANT_ROLE = 54;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Allergy Substance Participant Role Class Code' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_ALLERGY_SUBSTANCE_PARTICIPANT_ROLE_CLASS_CODE = 55;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Allergy Substance Playing Entity' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_ALLERGY_SUBSTANCE_PLAYING_ENTITY = 56;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Allergy Substance Playing Entity Class Code' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_ALLERGY_SUBSTANCE_PLAYING_ENTITY_CLASS_CODE = 57;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Allergy Substance Playing Entity Code' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_ALLERGY_SUBSTANCE_PLAYING_ENTITY_CODE = 58;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Playing Entity Code Reference' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_PLAYING_ENTITY_CODE_REFERENCE = 59;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Template Id' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_TEMPLATE_ID = 60;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Mood Code' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_MOOD_CODE = 61;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Id' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_ID = 62;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Code' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_CODE = 63;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Text' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_TEXT = 64;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Status Code' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_STATUS_CODE = 65;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Effective Time' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_EFFECTIVE_TIME = 66;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Value' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_VALUE = 67;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Problem Entry Reaction Observation Container' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER = 68;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Severity' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_SEVERITY = 69;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Problem Status Observation' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_PROBLEM_STATUS_OBSERVATION = 70;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Comment' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_COMMENT = 71;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Age Observation' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_AGE_OBSERVATION = 72;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergy Intolerance Health Status Observation' of 'Allergy Intolerance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGY_INTOLERANCE__ALLERGY_INTOLERANCE_HEALTH_STATUS_OBSERVATION = 73;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Has Reaction Intervention' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_HAS_REACTION_INTERVENTION = 74;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Reaction Intervention Type Code' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_REACTION_INTERVENTION_TYPE_CODE = 75;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Reaction Intervention Type' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_REACTION_INTERVENTION_TYPE = 76;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Information Source' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_INFORMATION_SOURCE = 77;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Contains Patient Awareness' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_CONTAINS_PATIENT_AWARENESS = 78;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Has Text Reference' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_HAS_TEXT_REFERENCE = 79;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Comment Inversion Ind' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_COMMENT_INVERSION_IND = 80;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Template Id' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_TEMPLATE_ID = 81;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Mood Code' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_MOOD_CODE = 82;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Id' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_ID = 83;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Code' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_CODE = 84;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Text' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_TEXT = 85;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Status Code' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_STATUS_CODE = 86;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Effective Time' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_EFFECTIVE_TIME = 87;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Value' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_VALUE = 88;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Age Observation' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_AGE_OBSERVATION = 89;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Severity' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_SEVERITY = 90;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Problem Status Observation' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_PROBLEM_STATUS_OBSERVATION = 91;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Health Status Observation' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_HEALTH_STATUS_OBSERVATION = 92;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Entry Reaction Observation Container Comment' of 'Problem Entry Reaction Observation Container'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER__PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER_COMMENT = 93;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Age Observation Template Id' of 'Age Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AGE_OBSERVATION__AGE_OBSERVATION_TEMPLATE_ID = 94;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Age Observation Class Code' of 'Age Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AGE_OBSERVATION__AGE_OBSERVATION_CLASS_CODE = 95;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Age Observation Mood Code' of 'Age Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AGE_OBSERVATION__AGE_OBSERVATION_MOOD_CODE = 96;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Age Observation Code' of 'Age Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AGE_OBSERVATION__AGE_OBSERVATION_CODE = 97;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Age Observation Status Code' of 'Age Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AGE_OBSERVATION__AGE_OBSERVATION_STATUS_CODE = 98;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Age Observation Value' of 'Age Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int AGE_OBSERVATION__AGE_OBSERVATION_VALUE = 99;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Has Text Reference' of 'Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY__SEVERITY_HAS_TEXT_REFERENCE = 100;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Template Id' of 'Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY__SEVERITY_TEMPLATE_ID = 101;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Class Code' of 'Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY__SEVERITY_CLASS_CODE = 102;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Mood Code' of 'Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY__SEVERITY_MOOD_CODE = 103;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Code' of 'Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY__SEVERITY_CODE = 104;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Text' of 'Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY__SEVERITY_TEXT = 105;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Status Code' of 'Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY__SEVERITY_STATUS_CODE = 106;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Severity Value' of 'Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SEVERITY__SEVERITY_VALUE = 107;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Observation Target Of Entry Relationship' of 'Problem Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS_OBSERVATION__PROBLEM_STATUS_OBSERVATION_TARGET_OF_ENTRY_RELATIONSHIP = 108;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Observation No Additional Participants' of 'Problem Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS_OBSERVATION__PROBLEM_STATUS_OBSERVATION_NO_ADDITIONAL_PARTICIPANTS = 109;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Observation No Additional Relationships' of 'Problem Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS_OBSERVATION__PROBLEM_STATUS_OBSERVATION_NO_ADDITIONAL_RELATIONSHIPS = 110;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Observation Has Text Reference' of 'Problem Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS_OBSERVATION__PROBLEM_STATUS_OBSERVATION_HAS_TEXT_REFERENCE = 111;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Observation Template Id' of 'Problem Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS_OBSERVATION__PROBLEM_STATUS_OBSERVATION_TEMPLATE_ID = 112;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Observation Class Code' of 'Problem Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS_OBSERVATION__PROBLEM_STATUS_OBSERVATION_CLASS_CODE = 113;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Observation Mood Code' of 'Problem Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS_OBSERVATION__PROBLEM_STATUS_OBSERVATION_MOOD_CODE = 114;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Observation Code' of 'Problem Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS_OBSERVATION__PROBLEM_STATUS_OBSERVATION_CODE = 115;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Observation Text' of 'Problem Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS_OBSERVATION__PROBLEM_STATUS_OBSERVATION_TEXT = 116;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Observation Status Code' of 'Problem Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS_OBSERVATION__PROBLEM_STATUS_OBSERVATION_STATUS_CODE = 117;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem Status Observation Value' of 'Problem Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_STATUS_OBSERVATION__PROBLEM_STATUS_OBSERVATION_VALUE = 118;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Target Of Entry Relationship' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_TARGET_OF_ENTRY_RELATIONSHIP = 119;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation No Additional Participants' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_NO_ADDITIONAL_PARTICIPANTS = 120;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation No Additional Relationships' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_NO_ADDITIONAL_RELATIONSHIPS = 121;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Has Text Reference' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_HAS_TEXT_REFERENCE = 122;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Template Id' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_TEMPLATE_ID = 123;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Class Code' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_CLASS_CODE = 124;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Mood Code' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_MOOD_CODE = 125;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Code' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_CODE = 126;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Text' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_TEXT = 127;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Status Code' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_STATUS_CODE = 128;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Health Status Observation Value' of 'Health Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTH_STATUS_OBSERVATION__HEALTH_STATUS_OBSERVATION_VALUE = 129;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Has Text Reference' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_HAS_TEXT_REFERENCE = 130;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Effective Time When Author Present' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_EFFECTIVE_TIME_WHEN_AUTHOR_PRESENT = 131;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Has Author Id' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_HAS_AUTHOR_ID = 132;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Has Author Organization' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_HAS_AUTHOR_ORGANIZATION = 133;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Template Id' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_TEMPLATE_ID = 134;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Class Code' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_CLASS_CODE = 135;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Mood Code' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_MOOD_CODE = 136;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Code' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_CODE = 137;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Text' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_TEXT = 138;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Status Code' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_STATUS_CODE = 139;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Mood Code' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_MOOD_CODE = 140;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Dose Quantity Or Rate Quantity' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_DOSE_QUANTITY_OR_RATE_QUANTITY = 141;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Consents' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_CONSENTS = 142;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Source' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_INFORMATION_SOURCE = 143;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Precondition Criterion' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_PRECONDITION_CRITERION = 144;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Reason' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_REASON = 145;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Reason Problem' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_REASON_PROBLEM = 146;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Product' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_PRODUCT = 147;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Dosing' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_DOSING = 148;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Dosing Relationship' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_DOSING_RELATIONSHIP = 149;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Description No Med Not Known' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_DESCRIPTION_NO_MED_NOT_KNOWN = 150;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Reason Class Mood' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_REASON_CLASS_MOOD = 151;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Product Entry' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_PRODUCT_ENTRY = 152;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Intructions Inversion' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_INTRUCTIONS_INVERSION = 153;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Product Strength' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_PRODUCT_STRENGTH = 154;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Product Name' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_PRODUCT_NAME = 155;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Precondition Reference' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_PRECONDITION_REFERENCE = 156;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Supply Entry Inversion' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_SUPPLY_ENTRY_INVERSION = 157;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Fill Number' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_FILL_NUMBER = 158;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication First Effective Time Datatype' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_FIRST_EFFECTIVE_TIME_DATATYPE = 159;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Dose Units' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_DOSE_UNITS = 160;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Delivery Method Description' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_DELIVERY_METHOD_DESCRIPTION = 161;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Medication Information' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_MEDICATION_INFORMATION = 162;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Status Of Medication' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_STATUS_OF_MEDICATION = 163;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Indication' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_INDICATION = 164;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Indication Narrative Text' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_INDICATION_NARRATIVE_TEXT = 165;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Indication Vocab' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_INDICATION_VOCAB = 166;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Patient Instructions' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_PATIENT_INSTRUCTIONS = 167;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Has Medication Vehicle' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_HAS_MEDICATION_VEHICLE = 168;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Vehicle Type' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_VEHICLE_TYPE = 169;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Vehicle Class' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_VEHICLE_CLASS = 170;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Vehicle Code' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_VEHICLE_CODE = 171;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Vehicle Name' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_VEHICLE_NAME = 172;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Vehicle Coded Name' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_VEHICLE_CODED_NAME = 173;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Vehicle Coded Name Vocab' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_VEHICLE_CODED_NAME_VOCAB = 174;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Template Id' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_TEMPLATE_ID = 175;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Id' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_ID = 176;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Code' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_CODE = 177;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Code' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_STATUS_CODE = 178;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Effective Time' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_EFFECTIVE_TIME = 179;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Route Code' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_ROUTE_CODE = 180;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Approach Site Code' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_APPROACH_SITE_CODE = 181;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Dose Quantity' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_DOSE_QUANTITY = 182;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Rate Quantity' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_RATE_QUANTITY = 183;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Max Dose Quantity' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_MAX_DOSE_QUANTITY = 184;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Administration Unit Code' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_ADMINISTRATION_UNIT_CODE = 185;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Medication Series Number Observation' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_MEDICATION_SERIES_NUMBER_OBSERVATION = 186;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Medication Status Observation' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_MEDICATION_STATUS_OBSERVATION = 187;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Product Instance' of 'Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION__MEDICATION_PRODUCT_INSTANCE = 188;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Type Template Id' of 'Medication Type'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TYPE__MEDICATION_TYPE_TEMPLATE_ID = 189;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Type Code' of 'Medication Type'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TYPE__MEDICATION_TYPE_CODE = 190;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Mood Code' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_MOOD_CODE = 191;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Author' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_AUTHOR = 192;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Performer' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_PERFORMER = 193;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Participant Location' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_PARTICIPANT_LOCATION = 194;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Information Source' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_INFORMATION_SOURCE = 195;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Product' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_PRODUCT = 196;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Intent Author' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_INTENT_AUTHOR = 197;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Author Time' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_AUTHOR_TIME = 198;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Assigned Author' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_ASSIGNED_AUTHOR = 199;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Assigned Author ID' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_ASSIGNED_AUTHOR_ID = 200;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Assigned Author Person Or Org' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_ASSIGNED_AUTHOR_PERSON_OR_ORG = 201;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Performer Time Event' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_PERFORMER_TIME_EVENT = 202;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Performer Time Intent' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_PERFORMER_TIME_INTENT = 203;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Performer Assigned Entity' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_PERFORMER_ASSIGNED_ENTITY = 204;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Performer Assigned Entity ID' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_PERFORMER_ASSIGNED_ENTITY_ID = 205;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Performer Entity Person Or Org' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_PERFORMER_ENTITY_PERSON_OR_ORG = 206;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Order Number' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_ORDER_NUMBER = 207;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Order Expiration' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_ORDER_EXPIRATION = 208;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Quantity Ordered' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_QUANTITY_ORDERED = 209;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Quantity Unit' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_QUANTITY_UNIT = 210;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Prescription Number' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_PRESCRIPTION_NUMBER = 211;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Assigning Authority' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_ASSIGNING_AUTHORITY = 212;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Dispense Date' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_DISPENSE_DATE = 213;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Dispensing Pharmacy Location' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_DISPENSING_PHARMACY_LOCATION = 214;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Quantity Dispensed' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_QUANTITY_DISPENSED = 215;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Has Fill Number' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_HAS_FILL_NUMBER = 216;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Template Id' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_TEMPLATE_ID = 217;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Id' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_ID = 218;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Status Code' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_STATUS_CODE = 219;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Effective Time' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_EFFECTIVE_TIME = 220;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Repeat Number' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_REPEAT_NUMBER = 221;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Quantity' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_QUANTITY = 222;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Medication Status Observation' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_MEDICATION_STATUS_OBSERVATION = 223;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Order Information Product Instance' of 'Medication Order Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_ORDER_INFORMATION__MEDICATION_ORDER_INFORMATION_PRODUCT_INSTANCE = 224;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation Target Of Entry Relationship' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_TARGET_OF_ENTRY_RELATIONSHIP = 225;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation No Additional Participants' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_NO_ADDITIONAL_PARTICIPANTS = 226;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation No Additional Relationships' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_NO_ADDITIONAL_RELATIONSHIPS = 227;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation Template Id' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_TEMPLATE_ID = 228;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation Class Code' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_CLASS_CODE = 229;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation Mood Code' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_MOOD_CODE = 230;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation Code' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_CODE = 231;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Status Observation Status Code' of 'Medication Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_STATUS_OBSERVATION__MEDICATION_STATUS_OBSERVATION_STATUS_CODE = 232;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Product Instance Has Scoping Entity' of 'Product Instance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRODUCT_INSTANCE__PRODUCT_INSTANCE_HAS_SCOPING_ENTITY = 233;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Product Instance Template Id' of 'Product Instance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRODUCT_INSTANCE__PRODUCT_INSTANCE_TEMPLATE_ID = 234;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Product Instance Class Code' of 'Product Instance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRODUCT_INSTANCE__PRODUCT_INSTANCE_CLASS_CODE = 235;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Fullfillment Instructions Template Id' of 'Medication Fullfillment Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_FULLFILLMENT_INSTRUCTIONS__MEDICATION_FULLFILLMENT_INSTRUCTIONS_TEMPLATE_ID = 236;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Fullfillment Instructions Mood Code' of 'Medication Fullfillment Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_FULLFILLMENT_INSTRUCTIONS__MEDICATION_FULLFILLMENT_INSTRUCTIONS_MOOD_CODE = 237;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Fullfillment Instructions Code' of 'Medication Fullfillment Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_FULLFILLMENT_INSTRUCTIONS__MEDICATION_FULLFILLMENT_INSTRUCTIONS_CODE = 238;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Fullfillment Instructions Text' of 'Medication Fullfillment Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_FULLFILLMENT_INSTRUCTIONS__MEDICATION_FULLFILLMENT_INSTRUCTIONS_TEXT = 239;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Fullfillment Instructions Status Code' of 'Medication Fullfillment Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_FULLFILLMENT_INSTRUCTIONS__MEDICATION_FULLFILLMENT_INSTRUCTIONS_STATUS_CODE = 240;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Series Number Observation Template Id' of 'Medication Series Number Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SERIES_NUMBER_OBSERVATION__MEDICATION_SERIES_NUMBER_OBSERVATION_TEMPLATE_ID = 241;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Series Number Observation Class Code' of 'Medication Series Number Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SERIES_NUMBER_OBSERVATION__MEDICATION_SERIES_NUMBER_OBSERVATION_CLASS_CODE = 242;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Series Number Observation Mood Code' of 'Medication Series Number Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SERIES_NUMBER_OBSERVATION__MEDICATION_SERIES_NUMBER_OBSERVATION_MOOD_CODE = 243;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Series Number Observation Code' of 'Medication Series Number Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SERIES_NUMBER_OBSERVATION__MEDICATION_SERIES_NUMBER_OBSERVATION_CODE = 244;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Series Number Observation Status Code' of 'Medication Series Number Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SERIES_NUMBER_OBSERVATION__MEDICATION_SERIES_NUMBER_OBSERVATION_STATUS_CODE = 245;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Series Number Observation Value' of 'Medication Series Number Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SERIES_NUMBER_OBSERVATION__MEDICATION_SERIES_NUMBER_OBSERVATION_VALUE = 246;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Internal Reference Template Id' of 'Internal Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTERNAL_REFERENCE__INTERNAL_REFERENCE_TEMPLATE_ID = 247;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Internal Reference Id' of 'Internal Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTERNAL_REFERENCE__INTERNAL_REFERENCE_ID = 248;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Internal Reference Code' of 'Internal Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTERNAL_REFERENCE__INTERNAL_REFERENCE_CODE = 249;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Medical Instructions Template Id' of 'Patient Medical Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_MEDICAL_INSTRUCTIONS__PATIENT_MEDICAL_INSTRUCTIONS_TEMPLATE_ID = 250;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Medical Instructions Class Code' of 'Patient Medical Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_MEDICAL_INSTRUCTIONS__PATIENT_MEDICAL_INSTRUCTIONS_CLASS_CODE = 251;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Medical Instructions Mood Code' of 'Patient Medical Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_MEDICAL_INSTRUCTIONS__PATIENT_MEDICAL_INSTRUCTIONS_MOOD_CODE = 252;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Medical Instructions Code' of 'Patient Medical Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_MEDICAL_INSTRUCTIONS__PATIENT_MEDICAL_INSTRUCTIONS_CODE = 253;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Medical Instructions Text' of 'Patient Medical Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_MEDICAL_INSTRUCTIONS__PATIENT_MEDICAL_INSTRUCTIONS_TEXT = 254;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Medical Instructions Status Code' of 'Patient Medical Instructions'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_MEDICAL_INSTRUCTIONS__PATIENT_MEDICAL_INSTRUCTIONS_STATUS_CODE = 255;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Relationship Required' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_ENTRY_RELATIONSHIP_REQUIRED = 256;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Subject Of Target' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_SUBJECT_OF_TARGET = 257;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Contains Problem Observation' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_CONTAINS_PROBLEM_OBSERVATION = 258;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Contains Alert Observation' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_CONTAINS_ALERT_OBSERVATION = 259;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Contains Patient Awareness' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_CONTAINS_PATIENT_AWARENESS = 260;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Effective Time Low High' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_EFFECTIVE_TIME_LOW_HIGH = 261;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Has Related Observations' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_HAS_RELATED_OBSERVATIONS = 262;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Related Observations Type Code' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_RELATED_OBSERVATIONS_TYPE_CODE = 263;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Has Related References Type Code' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_HAS_RELATED_REFERENCES_TYPE_CODE = 264;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Has Treating Provider' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_HAS_TREATING_PROVIDER = 265;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Has Provider Id' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_HAS_PROVIDER_ID = 266;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Has Provider Treatment Time' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_HAS_PROVIDER_TREATMENT_TIME = 267;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Template Id' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_TEMPLATE_ID = 268;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Class Code' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_CLASS_CODE = 269;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Mood Code' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_MOOD_CODE = 270;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Id' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_ID = 271;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Code Null Flavor' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_CODE_NULL_FLAVOR = 272;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Effective Time' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_EFFECTIVE_TIME = 273;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Condition Entry' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_CONDITION_ENTRY = 274;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Episode Observation' of 'Condition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION__CONDITION_EPISODE_OBSERVATION = 275;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Information Source' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_INFORMATION_SOURCE = 276;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Contains Patient Awareness' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_CONTAINS_PATIENT_AWARENESS = 277;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Has Text Reference' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_HAS_TEXT_REFERENCE = 278;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Comment Inversion Ind' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_COMMENT_INVERSION_IND = 279;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Has Onset Date' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_HAS_ONSET_DATE = 280;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Has Resolution Date' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_HAS_RESOLUTION_DATE = 281;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Has Unknown Resolution Date' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_HAS_UNKNOWN_RESOLUTION_DATE = 282;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Template Id' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_TEMPLATE_ID = 283;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Mood Code' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_MOOD_CODE = 284;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Id' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_ID = 285;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Code' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_CODE = 286;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Text' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_TEXT = 287;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Status Code' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_STATUS_CODE = 288;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Effective Time' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_EFFECTIVE_TIME = 289;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Value' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_VALUE = 290;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Age Observation' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_AGE_OBSERVATION = 291;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Cause Of Death Observation' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_CAUSE_OF_DEATH_OBSERVATION = 292;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Problem Status Observation' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_PROBLEM_STATUS_OBSERVATION = 293;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Severity' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_SEVERITY = 294;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Health Status Observation' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_HEALTH_STATUS_OBSERVATION = 295;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Condition Entry Comment' of 'Condition Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONDITION_ENTRY__CONDITION_ENTRY_COMMENT = 296;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Has Subject' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_HAS_SUBJECT = 297;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Has Subject Patient Relationship' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_HAS_SUBJECT_PATIENT_RELATIONSHIP = 298;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Relationship Value Code' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_RELATIONSHIP_VALUE_CODE = 299;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Has Related Subject Code' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_HAS_RELATED_SUBJECT_CODE = 300;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Related Subject Code Value Set' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_RELATED_SUBJECT_CODE_VALUE_SET = 301;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Has Related Subject Subject' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_HAS_RELATED_SUBJECT_SUBJECT = 302;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Has Gender Code' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_HAS_GENDER_CODE = 303;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Related Subject Birth Time' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_RELATED_SUBJECT_BIRTH_TIME = 304;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Template Id' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_TEMPLATE_ID = 305;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Mood Code' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_MOOD_CODE = 306;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Id' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_ID = 307;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Status Code' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_STATUS_CODE = 308;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Effective Time' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_EFFECTIVE_TIME = 309;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Age Observation' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_AGE_OBSERVATION = 310;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Problem Status Observation' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_PROBLEM_STATUS_OBSERVATION = 311;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Cause Of Death Observation Cause Of Death Observation' of 'Cause Of Death Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CAUSE_OF_DEATH_OBSERVATION__CAUSE_OF_DEATH_OBSERVATION_CAUSE_OF_DEATH_OBSERVATION = 312;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Service Event Required' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_SERVICE_EVENT_REQUIRED = 313;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Service Event Class Code' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_SERVICE_EVENT_CLASS_CODE = 314;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Service Event Effective Time' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_SERVICE_EVENT_EFFECTIVE_TIME = 315;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Language Code Format' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_LANGUAGE_CODE_FORMAT = 316;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary No Template Id Extension' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_NO_TEMPLATE_ID_EXTENSION = 317;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Effective Time Seconds' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_EFFECTIVE_TIME_SECONDS = 318;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Effective Time Zone' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_EFFECTIVE_TIME_ZONE = 319;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary One Or Two Record Target' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_ONE_OR_TWO_RECORD_TARGET = 320;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Assigned Author' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_ASSIGNED_AUTHOR = 321;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Assigned Author Null Flavor' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_ASSIGNED_AUTHOR_NULL_FLAVOR = 322;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Information Recipient' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_INFORMATION_RECIPIENT = 323;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Person Has Name' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_PERSON_HAS_NAME = 324;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Roles Shall Have Addr And Telecom' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_ROLES_SHALL_HAVE_ADDR_AND_TELECOM = 325;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Roles Should Have Addr And Telecom' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_ROLES_SHOULD_HAVE_ADDR_AND_TELECOM = 326;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Organizations Have Contact Info' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_ORGANIZATIONS_HAVE_CONTACT_INFO = 327;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Time Precise To Day' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_TIME_PRECISE_TO_DAY = 328;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Time Precise To Year' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_TIME_PRECISE_TO_YEAR = 329;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Telephone Matches Regex' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_TELEPHONE_MATCHES_REGEX = 330;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Telephone Dialing Digits' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_TELEPHONE_DIALING_DIGITS = 331;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Unknown Telephone Uses Null Flavor' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_UNKNOWN_TELEPHONE_USES_NULL_FLAVOR = 332;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Type Id Extension' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_TYPE_ID_EXTENSION = 333;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Id Root Format' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_ID_ROOT_FORMAT = 334;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Oid Length' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_OID_LENGTH = 335;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Language Code Form' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_LANGUAGE_CODE_FORM = 336;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Set Id And Version Number' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_SET_ID_AND_VERSION_NUMBER = 337;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Set Id And Id Are Unique' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_SET_ID_AND_ID_ARE_UNIQUE = 338;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Copy Time Not Present' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_COPY_TIME_NOT_PRESENT = 339;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Record Target Patient Role' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_RECORD_TARGET_PATIENT_ROLE = 340;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Patient Birth Time' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_PATIENT_BIRTH_TIME = 341;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Administrative Gender Code' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_ADMINISTRATIVE_GENDER_CODE = 342;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Provider Organization' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_PROVIDER_ORGANIZATION = 343;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Author Time' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_AUTHOR_TIME = 344;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Assigned Author Id' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_ASSIGNED_AUTHOR_ID = 345;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Assigned Author Person Or Device' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_ASSIGNED_AUTHOR_PERSON_OR_DEVICE = 346;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Data Enterer Assigned Person' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_DATA_ENTERER_ASSIGNED_PERSON = 347;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Data Enterer Time' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_DATA_ENTERER_TIME = 348;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Informant' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_INFORMANT = 349;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Has Informant Assigned Person Or Related Person' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HAS_INFORMANT_ASSIGNED_PERSON_OR_RELATED_PERSON = 350;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Legal Authenticator Has Assigned Person' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_LEGAL_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 351;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Authenticator Has Assigned Person' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 352;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Time Precise To Second' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_TIME_PRECISE_TO_SECOND = 353;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Time Precise To Year And Day' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_TIME_PRECISE_TO_YEAR_AND_DAY = 354;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Healthcare Provider' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_HEALTHCARE_PROVIDER = 355;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Template Id' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_TEMPLATE_ID = 356;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Realm Code' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_REALM_CODE = 357;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Type Id' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_TYPE_ID = 358;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Id' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_ID = 359;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Code' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_CODE = 360;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Title' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_TITLE = 361;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Effective Time' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_EFFECTIVE_TIME = 362;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Language Code' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_LANGUAGE_CODE = 363;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Advance Directives Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_ADVANCE_DIRECTIVES_SECTION = 364;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Allergies Reactions Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_ALLERGIES_REACTIONS_SECTION = 365;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Problem List Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_PROBLEM_LIST_SECTION = 366;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Encounters Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_ENCOUNTERS_SECTION = 367;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Immunizations Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_IMMUNIZATIONS_SECTION = 368;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Payers Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_PAYERS_SECTION = 369;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Medications Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_MEDICATIONS_SECTION = 370;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Plan Of Care Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_PLAN_OF_CARE_SECTION = 371;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Pregnancy History Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_PREGNANCY_HISTORY_SECTION = 372;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Surgeries Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_SURGERIES_SECTION = 373;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Vital Signs Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_VITAL_SIGNS_SECTION = 374;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Diagnostic Results Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_DIAGNOSTIC_RESULTS_SECTION = 375;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Family History Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_FAMILY_HISTORY_SECTION = 376;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Social History Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_SOCIAL_HISTORY_SECTION = 377;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Results Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_RESULTS_SECTION = 378;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Medical Equipment Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_MEDICAL_EQUIPMENT_SECTION = 379;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Functional Status Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_FUNCTIONAL_STATUS_SECTION = 380;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Patient Summary Purpose Section' of 'Patient Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PATIENT_SUMMARY__PATIENT_SUMMARY_PURPOSE_SECTION = 381;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Template Id' of 'Advance Directives Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION__ADVANCE_DIRECTIVES_SECTION_TEMPLATE_ID = 382;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Code' of 'Advance Directives Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION__ADVANCE_DIRECTIVES_SECTION_CODE = 383;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Title' of 'Advance Directives Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION__ADVANCE_DIRECTIVES_SECTION_TITLE = 384;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Text' of 'Advance Directives Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION__ADVANCE_DIRECTIVES_SECTION_TEXT = 385;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directives Section Advance Directive' of 'Advance Directives Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVES_SECTION__ADVANCE_DIRECTIVES_SECTION_ADVANCE_DIRECTIVE = 386;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Adv Directive Code Value Set' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_ADV_DIRECTIVE_CODE_VALUE_SET = 387;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Adv Directive Code Code System' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_ADV_DIRECTIVE_CODE_CODE_SYSTEM = 388;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Has External Reference' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_HAS_EXTERNAL_REFERENCE = 389;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Has Starting Time' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_HAS_STARTING_TIME = 390;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Has Ending Time' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_HAS_ENDING_TIME = 391;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Has Custodian' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_HAS_CUSTODIAN = 392;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Participant Type Code' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_PARTICIPANT_TYPE_CODE = 393;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Participant Role Class Code' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_PARTICIPANT_ROLE_CLASS_CODE = 394;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Has Address' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_HAS_ADDRESS = 395;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Has Telecom' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_HAS_TELECOM = 396;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Has Name Of Agent' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_HAS_NAME_OF_AGENT = 397;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Template Id' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_TEMPLATE_ID = 398;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Class Code' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_CLASS_CODE = 399;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Mood Code' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_MOOD_CODE = 400;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Id' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_ID = 401;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Code' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_CODE = 402;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Code' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_STATUS_CODE = 403;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Effective Time' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_EFFECTIVE_TIME = 404;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Repeat Number' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_REPEAT_NUMBER = 405;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Interpretation Code' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_INTERPRETATION_CODE = 406;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Target Site Code' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_TARGET_SITE_CODE = 407;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Advance Directive Status Observation' of 'Advance Directive'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE__ADVANCE_DIRECTIVE_ADVANCE_DIRECTIVE_STATUS_OBSERVATION = 408;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation Target Of Entry Relationship' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_TARGET_OF_ENTRY_RELATIONSHIP = 409;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation No Additional Participants' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_NO_ADDITIONAL_PARTICIPANTS = 410;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation No Additional Relationships' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_NO_ADDITIONAL_RELATIONSHIPS = 411;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation Template Id' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_TEMPLATE_ID = 412;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation Class Code' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_CLASS_CODE = 413;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation Mood Code' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_MOOD_CODE = 414;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation Code' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_CODE = 415;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Status Observation Status Code' of 'Advance Directive Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_STATUS_OBSERVATION__ADVANCE_DIRECTIVE_STATUS_OBSERVATION_STATUS_CODE = 416;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Reactions Section Template Id' of 'Allergies Reactions Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_REACTIONS_SECTION__ALLERGIES_REACTIONS_SECTION_TEMPLATE_ID = 417;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Reactions Section Code' of 'Allergies Reactions Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_REACTIONS_SECTION__ALLERGIES_REACTIONS_SECTION_CODE = 418;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Reactions Section Title' of 'Allergies Reactions Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_REACTIONS_SECTION__ALLERGIES_REACTIONS_SECTION_TITLE = 419;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Reactions Section Text' of 'Allergies Reactions Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_REACTIONS_SECTION__ALLERGIES_REACTIONS_SECTION_TEXT = 420;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Allergies Reactions Section Allergy Drug Sensitivity' of 'Allergies Reactions Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ALLERGIES_REACTIONS_SECTION__ALLERGIES_REACTIONS_SECTION_ALLERGY_DRUG_SENSITIVITY = 421;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem List Section Template Id' of 'Problem List Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_LIST_SECTION__PROBLEM_LIST_SECTION_TEMPLATE_ID = 422;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem List Section Code' of 'Problem List Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_LIST_SECTION__PROBLEM_LIST_SECTION_CODE = 423;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem List Section Title' of 'Problem List Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_LIST_SECTION__PROBLEM_LIST_SECTION_TITLE = 424;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem List Section Text' of 'Problem List Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_LIST_SECTION__PROBLEM_LIST_SECTION_TEXT = 425;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Problem List Section Condition' of 'Problem List Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROBLEM_LIST_SECTION__PROBLEM_LIST_SECTION_CONDITION = 426;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Section Template Id' of 'Encounters Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_SECTION__ENCOUNTERS_SECTION_TEMPLATE_ID = 427;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Section Code' of 'Encounters Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_SECTION__ENCOUNTERS_SECTION_CODE = 428;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Section Title' of 'Encounters Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_SECTION__ENCOUNTERS_SECTION_TITLE = 429;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Section Text' of 'Encounters Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_SECTION__ENCOUNTERS_SECTION_TEXT = 430;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Section Encounter Entry' of 'Encounters Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_SECTION__ENCOUNTERS_SECTION_ENCOUNTER_ENTRY = 431;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Section Encounters Activity' of 'Encounters Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_SECTION__ENCOUNTERS_SECTION_ENCOUNTERS_ACTIVITY = 432;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Encounter Admission Source Value Set' of 'Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER__CONSOL_ENCOUNTER_ADMISSION_SOURCE_VALUE_SET = 433;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Encounter Template Id' of 'Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER__CONSOL_ENCOUNTER_TEMPLATE_ID = 434;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Encounter Class Code' of 'Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER__CONSOL_ENCOUNTER_CLASS_CODE = 435;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Encounter Id' of 'Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER__CONSOL_ENCOUNTER_ID = 436;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Encounter Code' of 'Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER__CONSOL_ENCOUNTER_CODE = 437;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Encounter Text' of 'Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER__CONSOL_ENCOUNTER_TEXT = 438;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Activity Has Indications' of 'Encounters Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_ACTIVITY__ENCOUNTERS_ACTIVITY_HAS_INDICATIONS = 439;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Activity Has Practitioners' of 'Encounters Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_ACTIVITY__ENCOUNTERS_ACTIVITY_HAS_PRACTITIONERS = 440;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Activity Practitioner Role' of 'Encounters Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_ACTIVITY__ENCOUNTERS_ACTIVITY_PRACTITIONER_ROLE = 441;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Activity Template Id' of 'Encounters Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_ACTIVITY__ENCOUNTERS_ACTIVITY_TEMPLATE_ID = 442;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Activity Class Code' of 'Encounters Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_ACTIVITY__ENCOUNTERS_ACTIVITY_CLASS_CODE = 443;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Activity Mood Code' of 'Encounters Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_ACTIVITY__ENCOUNTERS_ACTIVITY_MOOD_CODE = 444;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Activity Id' of 'Encounters Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_ACTIVITY__ENCOUNTERS_ACTIVITY_ID = 445;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Activity Effective Time' of 'Encounters Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_ACTIVITY__ENCOUNTERS_ACTIVITY_EFFECTIVE_TIME = 446;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Activity Patient Instruction' of 'Encounters Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_ACTIVITY__ENCOUNTERS_ACTIVITY_PATIENT_INSTRUCTION = 447;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounters Activity Age Observation' of 'Encounters Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTERS_ACTIVITY__ENCOUNTERS_ACTIVITY_AGE_OBSERVATION = 448;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Has Medication Or Supply Activity' of 'Immunizations Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION__IMMUNIZATIONS_SECTION_HAS_MEDICATION_OR_SUPPLY_ACTIVITY = 449;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Template Id' of 'Immunizations Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION__IMMUNIZATIONS_SECTION_TEMPLATE_ID = 450;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Code' of 'Immunizations Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION__IMMUNIZATIONS_SECTION_CODE = 451;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Title' of 'Immunizations Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION__IMMUNIZATIONS_SECTION_TITLE = 452;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Text' of 'Immunizations Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION__IMMUNIZATIONS_SECTION_TEXT = 453;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Immunization' of 'Immunizations Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION__IMMUNIZATIONS_SECTION_IMMUNIZATION = 454;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunizations Section Supply Activity' of 'Immunizations Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATIONS_SECTION__IMMUNIZATIONS_SECTION_SUPPLY_ACTIVITY = 455;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Mood Code' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_MOOD_CODE = 456;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Has Dose Quantity Or Rate Quantity' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_HAS_DOSE_QUANTITY_OR_RATE_QUANTITY = 457;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Has Consents' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_HAS_CONSENTS = 458;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Information Source' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_INFORMATION_SOURCE = 459;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Has Precondition Criterion' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_HAS_PRECONDITION_CRITERION = 460;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Has Reason' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_HAS_REASON = 461;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Has Reason Problem' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_HAS_REASON_PROBLEM = 462;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Has Product' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_HAS_PRODUCT = 463;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Comments' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_COMMENTS = 464;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Refusal Reason' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_REFUSAL_REASON = 465;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Template Id' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_TEMPLATE_ID = 466;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Id' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_ID = 467;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Code' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_CODE = 468;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Status Code' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_STATUS_CODE = 469;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Effective Time' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_EFFECTIVE_TIME = 470;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Route Code' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_ROUTE_CODE = 471;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Max Dose Quantity' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_MAX_DOSE_QUANTITY = 472;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Medication Series Number Observation' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_MEDICATION_SERIES_NUMBER_OBSERVATION = 473;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Medication Status Observation' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_MEDICATION_STATUS_OBSERVATION = 474;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Patient Instruction' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_PATIENT_INSTRUCTION = 475;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Reaction Observation' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_REACTION_OBSERVATION = 476;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Immunization Product Instance' of 'Immunization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IMMUNIZATION__IMMUNIZATION_PRODUCT_INSTANCE = 477;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payers Section Template Id' of 'Payers Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYERS_SECTION__PAYERS_SECTION_TEMPLATE_ID = 478;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payers Section Code' of 'Payers Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYERS_SECTION__PAYERS_SECTION_CODE = 479;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payers Section Title' of 'Payers Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYERS_SECTION__PAYERS_SECTION_TITLE = 480;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payers Section Text' of 'Payers Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYERS_SECTION__PAYERS_SECTION_TEXT = 481;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payers Section Insurance Provider' of 'Payers Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYERS_SECTION__PAYERS_SECTION_INSURANCE_PROVIDER = 482;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Information Source' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_INFORMATION_SOURCE = 483;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Sequence Number' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_SEQUENCE_NUMBER = 484;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Payment Providers' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_PAYMENT_PROVIDERS = 485;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Payer Entry ID' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_PAYER_ENTRY_ID = 486;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Health Insurance Type' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_HEALTH_INSURANCE_TYPE = 487;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Insurance Information' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_INSURANCE_INFORMATION = 488;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Insurance Info Source ID' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_INSURANCE_INFO_SOURCE_ID = 489;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Insurance Info Source Addr' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_INSURANCE_INFO_SOURCE_ADDR = 490;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Health Plan Coverage Start Time' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_HEALTH_PLAN_COVERAGE_START_TIME = 491;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Health Plan Coverage Stop Time' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_HEALTH_PLAN_COVERAGE_STOP_TIME = 492;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Patient Information' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_PATIENT_INFORMATION = 493;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Member Id' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_MEMBER_ID = 494;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Member Id Root' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_MEMBER_ID_ROOT = 495;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Relationship To Subscriber' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_RELATIONSHIP_TO_SUBSCRIBER = 496;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Relationship To Subscriber Code System' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_RELATIONSHIP_TO_SUBSCRIBER_CODE_SYSTEM = 497;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Patient Name' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_PATIENT_NAME = 498;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Subscriber Information' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_SUBSCRIBER_INFORMATION = 499;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Subscriber Id' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_SUBSCRIBER_ID = 500;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Subscriber Id Root' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_SUBSCRIBER_ID_ROOT = 501;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Subscriber Address' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_SUBSCRIBER_ADDRESS = 502;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Financial Responsibility Party Type' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_FINANCIAL_RESPONSIBILITY_PARTY_TYPE = 503;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Financial Responsibility Party Type Code' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_FINANCIAL_RESPONSIBILITY_PARTY_TYPE_CODE = 504;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Financial Responsibility Party Address' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_FINANCIAL_RESPONSIBILITY_PARTY_ADDRESS = 505;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Template Id' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_TEMPLATE_ID = 506;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Class Code' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_CLASS_CODE = 507;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Mood Code' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_MOOD_CODE = 508;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Id' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_ID = 509;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Code' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_CODE = 510;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Status Code' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_STATUS_CODE = 511;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Insurance Provider Payer Entry' of 'Insurance Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INSURANCE_PROVIDER__INSURANCE_PROVIDER_PAYER_ENTRY = 512;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Payer Entity Is Required' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_PAYER_ENTITY_IS_REQUIRED = 513;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Covered Party Is Required' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_COVERED_PARTY_IS_REQUIRED = 514;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Covered Party Time' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_COVERED_PARTY_TIME = 515;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Subscriber Is Allowed' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_SUBSCRIBER_IS_ALLOWED = 516;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Subscriber Time' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_SUBSCRIBER_TIME = 517;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Entry Relationship REFR' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_ENTRY_RELATIONSHIP_REFR = 518;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Entry Relationship Target' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_ENTRY_RELATIONSHIP_TARGET = 519;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Template Id' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_TEMPLATE_ID = 520;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Class Code' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_CLASS_CODE = 521;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Mood Code' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_MOOD_CODE = 522;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Id' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_ID = 523;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Status Code' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_STATUS_CODE = 524;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Payer Entity' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_PAYER_ENTITY = 525;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Covered Party' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_COVERED_PARTY = 526;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entry Subscriber' of 'Payer Entry'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTRY__PAYER_ENTRY_SUBSCRIBER = 527;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Has Medication Or Supply Activity' of 'Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION__MEDICATIONS_SECTION_HAS_MEDICATION_OR_SUPPLY_ACTIVITY = 528;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Template Id' of 'Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION__MEDICATIONS_SECTION_TEMPLATE_ID = 529;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Code' of 'Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION__MEDICATIONS_SECTION_CODE = 530;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Title' of 'Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION__MEDICATIONS_SECTION_TITLE = 531;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Text' of 'Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION__MEDICATIONS_SECTION_TEXT = 532;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Medication' of 'Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION__MEDICATIONS_SECTION_MEDICATION = 533;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Section Supply Activity' of 'Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_SECTION__MEDICATIONS_SECTION_SUPPLY_ACTIVITY = 534;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Template Id' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_TEMPLATE_ID = 535;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Code' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_CODE = 536;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Title' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_TITLE = 537;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Text' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_TEXT = 538;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Medication' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_MEDICATION = 539;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Immunization' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_IMMUNIZATION = 540;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Encounter' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_ENCOUNTER = 541;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Procedure' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_PROCEDURE = 542;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Plan Of Care Activity Act' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_PLAN_OF_CARE_ACTIVITY_ACT = 543;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Plan Of Care Activity Encounter' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_PLAN_OF_CARE_ACTIVITY_ENCOUNTER = 544;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Plan Of Care Activity Observation' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_PLAN_OF_CARE_ACTIVITY_OBSERVATION = 545;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Plan Of Care Activity Procedure' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_PLAN_OF_CARE_ACTIVITY_PROCEDURE = 546;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Plan Of Care Activity Substance Administration' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION = 547;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Section Plan Of Care Activity Supply' of 'Plan Of Care Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_SECTION__PLAN_OF_CARE_SECTION_PLAN_OF_CARE_ACTIVITY_SUPPLY = 548;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Procedure Has Code Original Text' of 'Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE__CONSOL_PROCEDURE_HAS_CODE_ORIGINAL_TEXT = 549;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Procedure Performer Assigned Entity' of 'Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE__CONSOL_PROCEDURE_PERFORMER_ASSIGNED_ENTITY = 550;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Procedure Template Id' of 'Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE__CONSOL_PROCEDURE_TEMPLATE_ID = 551;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Procedure Code' of 'Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE__CONSOL_PROCEDURE_CODE = 552;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consol Procedure Target Site Code' of 'Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE__CONSOL_PROCEDURE_TARGET_SITE_CODE = 553;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Act Mood Code Value' of 'Plan Of Care Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_ACT__PLAN_OF_CARE_ACTIVITY_ACT_MOOD_CODE_VALUE = 554;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Act Template Id' of 'Plan Of Care Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_ACT__PLAN_OF_CARE_ACTIVITY_ACT_TEMPLATE_ID = 555;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Act Mood Code' of 'Plan Of Care Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_ACT__PLAN_OF_CARE_ACTIVITY_ACT_MOOD_CODE = 556;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Act Id' of 'Plan Of Care Activity Act'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_ACT__PLAN_OF_CARE_ACTIVITY_ACT_ID = 557;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Encounter Mood Code Value' of 'Plan Of Care Activity Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_ENCOUNTER__PLAN_OF_CARE_ACTIVITY_ENCOUNTER_MOOD_CODE_VALUE = 558;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Encounter Template Id' of 'Plan Of Care Activity Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_ENCOUNTER__PLAN_OF_CARE_ACTIVITY_ENCOUNTER_TEMPLATE_ID = 559;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Encounter Mood Code' of 'Plan Of Care Activity Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_ENCOUNTER__PLAN_OF_CARE_ACTIVITY_ENCOUNTER_MOOD_CODE = 560;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Encounter Id' of 'Plan Of Care Activity Encounter'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_ENCOUNTER__PLAN_OF_CARE_ACTIVITY_ENCOUNTER_ID = 561;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Observation Mood Code Value' of 'Plan Of Care Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_OBSERVATION__PLAN_OF_CARE_ACTIVITY_OBSERVATION_MOOD_CODE_VALUE = 562;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Observation Template Id' of 'Plan Of Care Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_OBSERVATION__PLAN_OF_CARE_ACTIVITY_OBSERVATION_TEMPLATE_ID = 563;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Observation Mood Code' of 'Plan Of Care Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_OBSERVATION__PLAN_OF_CARE_ACTIVITY_OBSERVATION_MOOD_CODE = 564;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Observation Id' of 'Plan Of Care Activity Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_OBSERVATION__PLAN_OF_CARE_ACTIVITY_OBSERVATION_ID = 565;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Procedure Mood Code Value' of 'Plan Of Care Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_PROCEDURE__PLAN_OF_CARE_ACTIVITY_PROCEDURE_MOOD_CODE_VALUE = 566;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Procedure Template Id' of 'Plan Of Care Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_PROCEDURE__PLAN_OF_CARE_ACTIVITY_PROCEDURE_TEMPLATE_ID = 567;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Procedure Mood Code' of 'Plan Of Care Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_PROCEDURE__PLAN_OF_CARE_ACTIVITY_PROCEDURE_MOOD_CODE = 568;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Procedure Id' of 'Plan Of Care Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_PROCEDURE__PLAN_OF_CARE_ACTIVITY_PROCEDURE_ID = 569;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Substance Administration Mood Code Value' of 'Plan Of Care Activity Substance Administration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION__PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION_MOOD_CODE_VALUE = 570;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Substance Administration Template Id' of 'Plan Of Care Activity Substance Administration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION__PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION_TEMPLATE_ID = 571;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Substance Administration Mood Code' of 'Plan Of Care Activity Substance Administration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION__PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION_MOOD_CODE = 572;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Substance Administration Id' of 'Plan Of Care Activity Substance Administration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION__PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION_ID = 573;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Supply Mood Code Value' of 'Plan Of Care Activity Supply'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_SUPPLY__PLAN_OF_CARE_ACTIVITY_SUPPLY_MOOD_CODE_VALUE = 574;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Supply Template Id' of 'Plan Of Care Activity Supply'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_SUPPLY__PLAN_OF_CARE_ACTIVITY_SUPPLY_TEMPLATE_ID = 575;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Supply Mood Code' of 'Plan Of Care Activity Supply'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_SUPPLY__PLAN_OF_CARE_ACTIVITY_SUPPLY_MOOD_CODE = 576;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Of Care Activity Supply Id' of 'Plan Of Care Activity Supply'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_OF_CARE_ACTIVITY_SUPPLY__PLAN_OF_CARE_ACTIVITY_SUPPLY_ID = 577;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy History Section Template Id' of 'Pregnancy History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_HISTORY_SECTION__PREGNANCY_HISTORY_SECTION_TEMPLATE_ID = 578;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy History Section Code' of 'Pregnancy History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_HISTORY_SECTION__PREGNANCY_HISTORY_SECTION_CODE = 579;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy History Section Pregnancy Observation' of 'Pregnancy History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_HISTORY_SECTION__PREGNANCY_HISTORY_SECTION_PREGNANCY_OBSERVATION = 580;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Template Id' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_TEMPLATE_ID = 581;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Id' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_ID = 582;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Code' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_CODE = 583;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Status Code' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_STATUS_CODE = 584;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Repeat Number' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_REPEAT_NUMBER = 585;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Value' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_VALUE = 586;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Interpretation Code' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_INTERPRETATION_CODE = 587;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Method Code' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_METHOD_CODE = 588;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pregnancy Observation Target Site Code' of 'Pregnancy Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PREGNANCY_OBSERVATION__PREGNANCY_OBSERVATION_TARGET_SITE_CODE = 589;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Surgeries Section Has Procedure Activity' of 'Surgeries Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SURGERIES_SECTION__SURGERIES_SECTION_HAS_PROCEDURE_ACTIVITY = 590;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Surgeries Section Template Id' of 'Surgeries Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SURGERIES_SECTION__SURGERIES_SECTION_TEMPLATE_ID = 591;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Surgeries Section Code' of 'Surgeries Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SURGERIES_SECTION__SURGERIES_SECTION_CODE = 592;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Surgeries Section Title' of 'Surgeries Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SURGERIES_SECTION__SURGERIES_SECTION_TITLE = 593;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Surgeries Section Text' of 'Surgeries Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SURGERIES_SECTION__SURGERIES_SECTION_TEXT = 594;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Surgeries Section Procedure Activity' of 'Surgeries Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SURGERIES_SECTION__SURGERIES_SECTION_PROCEDURE_ACTIVITY = 595;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Surgeries Section External Reference' of 'Surgeries Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SURGERIES_SECTION__SURGERIES_SECTION_EXTERNAL_REFERENCE = 596;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Surgeries Section Procedure Entry Procedure Activity Procedure' of 'Surgeries Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SURGERIES_SECTION__SURGERIES_SECTION_PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE = 597;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Has No Code' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_HAS_NO_CODE = 598;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Has Reference' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_HAS_REFERENCE = 599;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Has Reference External Document' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_HAS_REFERENCE_EXTERNAL_DOCUMENT = 600;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Has Reference External Document ID' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_HAS_REFERENCE_EXTERNAL_DOCUMENT_ID = 601;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Has Reference External Document Text' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_HAS_REFERENCE_EXTERNAL_DOCUMENT_TEXT = 602;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Template Id' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_TEMPLATE_ID = 603;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Class Code' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_CLASS_CODE = 604;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Mood Code' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_MOOD_CODE = 605;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Id' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_ID = 606;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate External Reference Text' of 'External Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTERNAL_REFERENCE__EXTERNAL_REFERENCE_TEXT = 607;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Mood Code' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_MOOD_CODE = 608;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Has Text Reference' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_HAS_TEXT_REFERENCE = 609;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Priority Code' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_PRIORITY_CODE = 610;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Has Inversion Ind For Encounter' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_HAS_INVERSION_IND_FOR_ENCOUNTER = 611;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Template Id' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_TEMPLATE_ID = 612;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Class Code' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_CLASS_CODE = 613;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Id' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_ID = 614;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Code' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_CODE = 615;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Text' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_TEXT = 616;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Effective Time' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_EFFECTIVE_TIME = 617;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Approach Site Code' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_APPROACH_SITE_CODE = 618;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Internal Reference' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_INTERNAL_REFERENCE = 619;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Internal Reference Reason' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_INTERNAL_REFERENCE_REASON = 620;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Problem Observation' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_PROBLEM_OBSERVATION = 621;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Problem Act' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_PROBLEM_ACT = 622;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Age Observation' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_AGE_OBSERVATION = 623;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Medication Activity' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_MEDICATION_ACTIVITY = 624;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Procedure Entry Procedure Activity Procedure Patient Instruction' of 'Procedure Entry Procedure Activity Procedure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE__PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE_PATIENT_INSTRUCTION = 625;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Vital Sign Entry' of 'Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION__VITAL_SIGNS_SECTION_VITAL_SIGN_ENTRY = 626;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Template Id' of 'Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION__VITAL_SIGNS_SECTION_TEMPLATE_ID = 627;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Code' of 'Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION__VITAL_SIGNS_SECTION_CODE = 628;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Title' of 'Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION__VITAL_SIGNS_SECTION_TITLE = 629;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Text' of 'Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION__VITAL_SIGNS_SECTION_TEXT = 630;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Section Vital Signs Organizer' of 'Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_SECTION__VITAL_SIGNS_SECTION_VITAL_SIGNS_ORGANIZER = 631;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Code Value' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_CODE_VALUE = 632;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Component Element' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_COMPONENT_ELEMENT = 633;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Information Source' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_INFORMATION_SOURCE = 634;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Information Source' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_INFORMATION_SOURCE = 644;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Information Source' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_INFORMATION_SOURCE = 644;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Information Source' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_INFORMATION_SOURCE = 644;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Require Results Organizer Template ID' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_REQUIRE_RESULTS_ORGANIZER_TEMPLATE_ID = 635;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Template Id' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_TEMPLATE_ID = 636;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Class Code' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_CLASS_CODE = 637;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Mood Code' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_MOOD_CODE = 638;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Id' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_ID = 639;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Code' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_CODE = 640;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Status Code' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_STATUS_CODE = 641;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Effective Time' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_EFFECTIVE_TIME = 642;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Vital Sign Observation' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_VITAL_SIGN_OBSERVATION = 643;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signs Organizer Information Source' of 'Vital Signs Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGNS_ORGANIZER__VITAL_SIGNS_ORGANIZER_INFORMATION_SOURCE = 644;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Code Value' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_CODE_VALUE = 645;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Reference Range Required' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_REFERENCE_RANGE_REQUIRED = 646;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign No Observation Range Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_NO_OBSERVATION_RANGE_CODE = 647;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Information Source' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_INFORMATION_SOURCE = 648;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Template Id' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_TEMPLATE_ID = 649;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Mood Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_MOOD_CODE = 650;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Id' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_ID = 651;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_CODE = 652;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Status Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_STATUS_CODE = 653;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Effective Time' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_EFFECTIVE_TIME = 654;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Value' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_VALUE = 655;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Interpretation Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_INTERPRETATION_CODE = 656;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Method Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_METHOD_CODE = 657;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Target Site Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_TARGET_SITE_CODE = 658;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Diagnostic Results Section Has Result' of 'Diagnostic Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DIAGNOSTIC_RESULTS_SECTION__DIAGNOSTIC_RESULTS_SECTION_HAS_RESULT = 659;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Diagnostic Results Section Template Id' of 'Diagnostic Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DIAGNOSTIC_RESULTS_SECTION__DIAGNOSTIC_RESULTS_SECTION_TEMPLATE_ID = 660;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Diagnostic Results Section Code' of 'Diagnostic Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DIAGNOSTIC_RESULTS_SECTION__DIAGNOSTIC_RESULTS_SECTION_CODE = 661;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Diagnostic Results Section Diagnostic Procedure' of 'Diagnostic Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DIAGNOSTIC_RESULTS_SECTION__DIAGNOSTIC_RESULTS_SECTION_DIAGNOSTIC_PROCEDURE = 662;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Diagnostic Results Section Result' of 'Diagnostic Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DIAGNOSTIC_RESULTS_SECTION__DIAGNOSTIC_RESULTS_SECTION_RESULT = 663;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Diagnostic Results Section Result Organizer' of 'Diagnostic Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DIAGNOSTIC_RESULTS_SECTION__DIAGNOSTIC_RESULTS_SECTION_RESULT_ORGANIZER = 664;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Diagnostic Results Section External Reference' of 'Diagnostic Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DIAGNOSTIC_RESULTS_SECTION__DIAGNOSTIC_RESULTS_SECTION_EXTERNAL_REFERENCE = 665;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Code Value' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_CODE_VALUE = 666;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Reference Range Required' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_REFERENCE_RANGE_REQUIRED = 667;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result No Observation Range Code' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_NO_OBSERVATION_RANGE_CODE = 668;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Information Source' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_INFORMATION_SOURCE = 669;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Type Code System' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_TYPE_CODE_SYSTEM = 670;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Laboratory Results Value Set' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_LABORATORY_RESULTS_VALUE_SET = 671;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Value Presence' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_VALUE_PRESENCE = 672;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Template Id' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_TEMPLATE_ID = 673;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Mood Code' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_MOOD_CODE = 674;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Id' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_ID = 675;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Code' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_CODE = 676;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Status Code' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_STATUS_CODE = 677;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Effective Time' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_EFFECTIVE_TIME = 678;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Value' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_VALUE = 679;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Interpretation Code' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_INTERPRETATION_CODE = 680;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Method Code' of 'Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT__RESULT_METHOD_CODE = 681;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Code Value' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_CODE_VALUE = 682;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Component Element' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_COMPONENT_ELEMENT = 683;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Information Source' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_INFORMATION_SOURCE = 684;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Template Id' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_TEMPLATE_ID = 685;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Mood Code' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_MOOD_CODE = 686;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Id' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_ID = 687;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Code' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_CODE = 688;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Status Code' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_STATUS_CODE = 689;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Organizer Result' of 'Result Organizer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_ORGANIZER__RESULT_ORGANIZER_RESULT = 690;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Section Family History Obs Orgs' of 'Family History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SECTION__FAMILY_HISTORY_SECTION_FAMILY_HISTORY_OBS_ORGS = 691;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Section No Subject' of 'Family History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SECTION__FAMILY_HISTORY_SECTION_NO_SUBJECT = 692;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Section Template Id' of 'Family History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SECTION__FAMILY_HISTORY_SECTION_TEMPLATE_ID = 693;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Section Code' of 'Family History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SECTION__FAMILY_HISTORY_SECTION_CODE = 694;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Section Title' of 'Family History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SECTION__FAMILY_HISTORY_SECTION_TITLE = 695;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Section Text' of 'Family History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SECTION__FAMILY_HISTORY_SECTION_TEXT = 696;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Section Family History' of 'Family History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_SECTION__FAMILY_HISTORY_SECTION_FAMILY_HISTORY = 697;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Component' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_COMPONENT = 698;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Family History Observation' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_FAMILY_HISTORY_OBSERVATION = 699;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Subject' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_SUBJECT = 700;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Subject Patient Relationship' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_SUBJECT_PATIENT_RELATIONSHIP = 701;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Relationship Value Code' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_RELATIONSHIP_VALUE_CODE = 702;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Related Subject Code' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_RELATED_SUBJECT_CODE = 703;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Related Subject Code Value Set' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_RELATED_SUBJECT_CODE_VALUE_SET = 704;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Related Subject Code Value Set' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_RELATED_SUBJECT_CODE_VALUE_SET = 721;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Related Subject Code Value Set' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_RELATED_SUBJECT_CODE_VALUE_SET = 721;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Related Subject Code Value Set' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_RELATED_SUBJECT_CODE_VALUE_SET = 721;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Related Subject Subject' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_RELATED_SUBJECT_SUBJECT = 705;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Gender Code' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_GENDER_CODE = 706;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Gender Code' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_GENDER_CODE = 722;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Gender Code' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_GENDER_CODE = 722;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Gender Code' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_GENDER_CODE = 722;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Related Subject Birth Time' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_RELATED_SUBJECT_BIRTH_TIME = 707;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Participant' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_PARTICIPANT = 708;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Participant Participant Role' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_PARTICIPANT_PARTICIPANT_ROLE = 709;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Participant Role Code' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_PARTICIPANT_ROLE_CODE = 710;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Participant Role Playing Entity' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_PARTICIPANT_ROLE_PLAYING_ENTITY = 711;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Family Name' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_FAMILY_NAME = 712;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Family Member Condition' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_FAMILY_MEMBER_CONDITION = 713;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Template Id' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_TEMPLATE_ID = 714;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Class Code' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_CLASS_CODE = 715;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Mood Code' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_MOOD_CODE = 716;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Code' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_CODE = 717;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Status Code' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_STATUS_CODE = 718;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Problem Status Observation' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_PROBLEM_STATUS_OBSERVATION = 719;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Family History Observation' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_FAMILY_HISTORY_OBSERVATION = 720;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Related Subject Code Value Set' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_RELATED_SUBJECT_CODE_VALUE_SET = 721;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Has Gender Code' of 'Family History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY__FAMILY_HISTORY_HAS_GENDER_CODE = 722;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Has Subject' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_HAS_SUBJECT = 723;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Has Subject Patient Relationship' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_HAS_SUBJECT_PATIENT_RELATIONSHIP = 724;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Relationship Value Code' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_RELATIONSHIP_VALUE_CODE = 725;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Has Related Subject Code' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_HAS_RELATED_SUBJECT_CODE = 726;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Related Subject Code Value Set' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_RELATED_SUBJECT_CODE_VALUE_SET = 727;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Has Related Subject Subject' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_HAS_RELATED_SUBJECT_SUBJECT = 728;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Has Gender Code' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_HAS_GENDER_CODE = 729;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Related Subject Birth Time' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_RELATED_SUBJECT_BIRTH_TIME = 730;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Template Id' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_TEMPLATE_ID = 731;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Id' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_ID = 732;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Code' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_CODE = 733;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Status Code' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_STATUS_CODE = 734;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Value' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_VALUE = 735;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Age Observation' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_AGE_OBSERVATION = 736;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Problem Status Observation' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_PROBLEM_STATUS_OBSERVATION = 737;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Family History Observation Cause Of Death Observation' of 'Family History Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FAMILY_HISTORY_OBSERVATION__FAMILY_HISTORY_OBSERVATION_CAUSE_OF_DEATH_OBSERVATION = 738;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Marital Status' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_MARITAL_STATUS = 739;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Religious Affiliation' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_RELIGIOUS_AFFILIATION = 740;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Patient Race' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_PATIENT_RACE = 741;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Patient Race Code System' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_PATIENT_RACE_CODE_SYSTEM = 742;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Patient Ethnicity' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_PATIENT_ETHNICITY = 743;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Patient Ethnicity Code System' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_PATIENT_ETHNICITY_CODE_SYSTEM = 744;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Template Id' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_TEMPLATE_ID = 745;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Code' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_CODE = 746;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Title' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_TITLE = 747;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Text' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_TEXT = 748;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Section Social History' of 'Social History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_SECTION__SOCIAL_HISTORY_SECTION_SOCIAL_HISTORY = 749;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Code Value Set' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_CODE_VALUE_SET = 750;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History No Repeat Number' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_NO_REPEAT_NUMBER = 751;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History No Interpretation Code' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_NO_INTERPRETATION_CODE = 752;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History No Method Code' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_NO_METHOD_CODE = 753;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History No Target Site Code' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_NO_TARGET_SITE_CODE = 754;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Template Id' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_TEMPLATE_ID = 755;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Id' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_ID = 756;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Code' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_CODE = 757;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Text' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_TEXT = 758;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Code' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_STATUS_CODE = 759;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Effective Time' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_EFFECTIVE_TIME = 760;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Value' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_VALUE = 761;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Social History Status Observation' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_SOCIAL_HISTORY_STATUS_OBSERVATION = 762;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Episode Observation' of 'Social History'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY__SOCIAL_HISTORY_EPISODE_OBSERVATION = 763;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation Target Of Entry Relationship' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_TARGET_OF_ENTRY_RELATIONSHIP = 764;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation No Additional Participants' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_NO_ADDITIONAL_PARTICIPANTS = 765;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation No Additional Relationships' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_NO_ADDITIONAL_RELATIONSHIPS = 766;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation Template Id' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_TEMPLATE_ID = 767;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation Class Code' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_CLASS_CODE = 768;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation Mood Code' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_MOOD_CODE = 769;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation Code' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_CODE = 770;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation Status Code' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_STATUS_CODE = 771;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Social History Status Observation Value' of 'Social History Status Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SOCIAL_HISTORY_STATUS_OBSERVATION__SOCIAL_HISTORY_STATUS_OBSERVATION_VALUE = 772;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Template Id' of 'Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION__RESULTS_SECTION_TEMPLATE_ID = 773;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Code' of 'Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION__RESULTS_SECTION_CODE = 774;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Title' of 'Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION__RESULTS_SECTION_TITLE = 775;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Text' of 'Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION__RESULTS_SECTION_TEXT = 776;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Result Organizer' of 'Results Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULTS_SECTION__RESULTS_SECTION_RESULT_ORGANIZER = 777;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical Equipment Section Template Id' of 'Medical Equipment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_EQUIPMENT_SECTION__MEDICAL_EQUIPMENT_SECTION_TEMPLATE_ID = 778;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical Equipment Section Code' of 'Medical Equipment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_EQUIPMENT_SECTION__MEDICAL_EQUIPMENT_SECTION_CODE = 779;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical Equipment Section Title' of 'Medical Equipment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_EQUIPMENT_SECTION__MEDICAL_EQUIPMENT_SECTION_TITLE = 780;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical Equipment Section Text' of 'Medical Equipment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_EQUIPMENT_SECTION__MEDICAL_EQUIPMENT_SECTION_TEXT = 781;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical Equipment Section Supply Activity' of 'Medical Equipment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_EQUIPMENT_SECTION__MEDICAL_EQUIPMENT_SECTION_SUPPLY_ACTIVITY = 782;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical Equipment Section Medication Activity' of 'Medical Equipment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_EQUIPMENT_SECTION__MEDICAL_EQUIPMENT_SECTION_MEDICATION_ACTIVITY = 783;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Clinical Statements' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_CLINICAL_STATEMENTS = 784;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Observation Code' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_OBSERVATION_CODE = 785;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Observation Code Value Set' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_OBSERVATION_CODE_VALUE_SET = 786;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Value Datatype' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_VALUE_DATATYPE = 787;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Icf Code System' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_ICF_CODE_SYSTEM = 788;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Problem Status Observation' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_PROBLEM_STATUS_OBSERVATION = 789;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Result Status Observation' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_RESULT_STATUS_OBSERVATION = 790;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Template Id' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_TEMPLATE_ID = 791;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Code' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_CODE = 792;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Title' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_TITLE = 793;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Functional Status Section Text' of 'Functional Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FUNCTIONAL_STATUS_SECTION__FUNCTIONAL_STATUS_SECTION_TEXT = 794;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Section Template Id' of 'Purpose Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_SECTION__PURPOSE_SECTION_TEMPLATE_ID = 795;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Section Code' of 'Purpose Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_SECTION__PURPOSE_SECTION_CODE = 796;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Section Title' of 'Purpose Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_SECTION__PURPOSE_SECTION_TITLE = 797;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Section Text' of 'Purpose Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_SECTION__PURPOSE_SECTION_TEXT = 798;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Section Purpose Activity' of 'Purpose Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_SECTION__PURPOSE_SECTION_PURPOSE_ACTIVITY = 799;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Has Reason' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_HAS_REASON = 800;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Reason Type' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_REASON_TYPE = 801;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Template Id' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_TEMPLATE_ID = 802;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Class Code' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_CLASS_CODE = 803;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Mood Code' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_MOOD_CODE = 804;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Code' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_CODE = 805;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Purpose Activity Status Code' of 'Purpose Activity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PURPOSE_ACTIVITY__PURPOSE_ACTIVITY_STATUS_CODE = 806;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Verification Template Id' of 'Advance Directive Verification'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_VERIFICATION__ADVANCE_DIRECTIVE_VERIFICATION_TEMPLATE_ID = 807;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Verification Type Code' of 'Advance Directive Verification'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_VERIFICATION__ADVANCE_DIRECTIVE_VERIFICATION_TYPE_CODE = 808;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Verification Time' of 'Advance Directive Verification'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_VERIFICATION__ADVANCE_DIRECTIVE_VERIFICATION_TIME = 809;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Reference Has URL' of 'Advance Directive Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_REFERENCE__ADVANCE_DIRECTIVE_REFERENCE_HAS_URL = 810;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Reference Has MIME Type' of 'Advance Directive Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_REFERENCE__ADVANCE_DIRECTIVE_REFERENCE_HAS_MIME_TYPE = 811;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Reference External Document Has Id' of 'Advance Directive Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_REFERENCE__ADVANCE_DIRECTIVE_REFERENCE_EXTERNAL_DOCUMENT_HAS_ID = 812;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Reference Template Id' of 'Advance Directive Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_REFERENCE__ADVANCE_DIRECTIVE_REFERENCE_TEMPLATE_ID = 813;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Advance Directive Reference Type Code' of 'Advance Directive Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVANCE_DIRECTIVE_REFERENCE__ADVANCE_DIRECTIVE_REFERENCE_TYPE_CODE = 814;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Location Has Participant Role' of 'Encounter Location'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_LOCATION__ENCOUNTER_LOCATION_HAS_PARTICIPANT_ROLE = 815;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Location Has Participant Role Location' of 'Encounter Location'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_LOCATION__ENCOUNTER_LOCATION_HAS_PARTICIPANT_ROLE_LOCATION = 816;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Location Has Participant Role Code' of 'Encounter Location'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_LOCATION__ENCOUNTER_LOCATION_HAS_PARTICIPANT_ROLE_CODE = 817;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Location Has Participant Role Code Vocab' of 'Encounter Location'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_LOCATION__ENCOUNTER_LOCATION_HAS_PARTICIPANT_ROLE_CODE_VOCAB = 818;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Location Has Playing Entity' of 'Encounter Location'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_LOCATION__ENCOUNTER_LOCATION_HAS_PLAYING_ENTITY = 819;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Location Has Playing Entity Place' of 'Encounter Location'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_LOCATION__ENCOUNTER_LOCATION_HAS_PLAYING_ENTITY_PLACE = 820;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Location Template Id' of 'Encounter Location'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_LOCATION__ENCOUNTER_LOCATION_TEMPLATE_ID = 821;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Encounter Location Type Code' of 'Encounter Location'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENCOUNTER_LOCATION__ENCOUNTER_LOCATION_TYPE_CODE = 822;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Payer Entity Id' of 'Payer Entity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAYER_ENTITY__PAYER_ENTITY_ID = 823;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Covered Party Id' of 'Covered Party'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COVERED_PARTY__COVERED_PARTY_ID = 824;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Covered Party Code' of 'Covered Party'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COVERED_PARTY__COVERED_PARTY_CODE = 825;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Policy Subscriber Id' of 'Policy Subscriber'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int POLICY_SUBSCRIBER__POLICY_SUBSCRIBER_ID = 826;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Support Guardian Template Id' of 'Support Guardian'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPORT_GUARDIAN__SUPPORT_GUARDIAN_TEMPLATE_ID = 827;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Support Guardian Class Code' of 'Support Guardian'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPORT_GUARDIAN__SUPPORT_GUARDIAN_CLASS_CODE = 828;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Support Guardian Code' of 'Support Guardian'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPORT_GUARDIAN__SUPPORT_GUARDIAN_CODE = 829;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Support Guardian Addr' of 'Support Guardian'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPORT_GUARDIAN__SUPPORT_GUARDIAN_ADDR = 830;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Support Guardian Telecom' of 'Support Guardian'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPORT_GUARDIAN__SUPPORT_GUARDIAN_TELECOM = 831;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Past Illness Section Has Clinical Statements' of 'History Of Past Illness Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PAST_ILLNESS_SECTION__HISTORY_OF_PAST_ILLNESS_SECTION_HAS_CLINICAL_STATEMENTS = 832;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Past Illness Section Template Id' of 'History Of Past Illness Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PAST_ILLNESS_SECTION__HISTORY_OF_PAST_ILLNESS_SECTION_TEMPLATE_ID = 833;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Past Illness Section Code' of 'History Of Past Illness Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PAST_ILLNESS_SECTION__HISTORY_OF_PAST_ILLNESS_SECTION_CODE = 834;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Past Illness Section Condition' of 'History Of Past Illness Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PAST_ILLNESS_SECTION__HISTORY_OF_PAST_ILLNESS_SECTION_CONDITION = 835;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chief Complaint Section Template Id' of 'Chief Complaint Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHIEF_COMPLAINT_SECTION__CHIEF_COMPLAINT_SECTION_TEMPLATE_ID = 836;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chief Complaint Section Code' of 'Chief Complaint Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHIEF_COMPLAINT_SECTION__CHIEF_COMPLAINT_SECTION_CODE = 837;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chief Complaint Section Condition' of 'Chief Complaint Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHIEF_COMPLAINT_SECTION__CHIEF_COMPLAINT_SECTION_CONDITION = 838;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Referral Section Template Id' of 'Reason For Referral Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_REFERRAL_SECTION__REASON_FOR_REFERRAL_SECTION_TEMPLATE_ID = 839;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Referral Section Code' of 'Reason For Referral Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_REFERRAL_SECTION__REASON_FOR_REFERRAL_SECTION_CODE = 840;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Referral Section Condition' of 'Reason For Referral Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_REFERRAL_SECTION__REASON_FOR_REFERRAL_SECTION_CONDITION = 841;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Referral Section Result' of 'Reason For Referral Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_REFERRAL_SECTION__REASON_FOR_REFERRAL_SECTION_RESULT = 842;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Referral Section Problem Entry' of 'Reason For Referral Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_REFERRAL_SECTION__REASON_FOR_REFERRAL_SECTION_PROBLEM_ENTRY = 843;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Present Illness Template Id' of 'History Of Present Illness'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PRESENT_ILLNESS__HISTORY_OF_PRESENT_ILLNESS_TEMPLATE_ID = 844;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History Of Present Illness Code' of 'History Of Present Illness'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_OF_PRESENT_ILLNESS__HISTORY_OF_PRESENT_ILLNESS_CODE = 845;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Admission Diagnosis Section Template Id' of 'Hospital Admission Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_ADMISSION_DIAGNOSIS_SECTION__HOSPITAL_ADMISSION_DIAGNOSIS_SECTION_TEMPLATE_ID = 846;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Admission Diagnosis Section Code' of 'Hospital Admission Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_ADMISSION_DIAGNOSIS_SECTION__HOSPITAL_ADMISSION_DIAGNOSIS_SECTION_CODE = 847;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Admission Diagnosis Section Condition' of 'Hospital Admission Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_ADMISSION_DIAGNOSIS_SECTION__HOSPITAL_ADMISSION_DIAGNOSIS_SECTION_CONDITION = 848;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Diagnosis Section Template Id' of 'Discharge Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_DIAGNOSIS_SECTION__DISCHARGE_DIAGNOSIS_SECTION_TEMPLATE_ID = 849;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Diagnosis Section Code' of 'Discharge Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_DIAGNOSIS_SECTION__DISCHARGE_DIAGNOSIS_SECTION_CODE = 850;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Diagnosis Section Condition' of 'Discharge Diagnosis Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_DIAGNOSIS_SECTION__DISCHARGE_DIAGNOSIS_SECTION_CONDITION = 851;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Admission Medication History Section Template Id' of 'Admission Medication History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADMISSION_MEDICATION_HISTORY_SECTION__ADMISSION_MEDICATION_HISTORY_SECTION_TEMPLATE_ID = 852;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Admission Medication History Section Code' of 'Admission Medication History Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADMISSION_MEDICATION_HISTORY_SECTION__ADMISSION_MEDICATION_HISTORY_SECTION_CODE = 853;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Medications Section Template Id' of 'Hospital Discharge Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_MEDICATIONS_SECTION__HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_TEMPLATE_ID = 854;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Medications Section Code' of 'Hospital Discharge Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_MEDICATIONS_SECTION__HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_CODE = 855;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Medications Section Medication' of 'Hospital Discharge Medications Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_MEDICATIONS_SECTION__HOSPITAL_DISCHARGE_MEDICATIONS_SECTION_MEDICATION = 856;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Administered Section Template Id' of 'Medications Administered Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_ADMINISTERED_SECTION__MEDICATIONS_ADMINISTERED_SECTION_TEMPLATE_ID = 857;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medications Administered Section Code' of 'Medications Administered Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATIONS_ADMINISTERED_SECTION__MEDICATIONS_ADMINISTERED_SECTION_CODE = 858;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Template Id' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_TEMPLATE_ID = 859;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Code' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_CODE = 860;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Condition' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_CONDITION = 861;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Vital Signs Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_VITAL_SIGNS_SECTION = 862;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section General Appearance Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_GENERAL_APPEARANCE_SECTION = 863;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Visible Implanted Medical Devices Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_VISIBLE_IMPLANTED_MEDICAL_DEVICES_SECTION = 864;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Integumentary System Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_INTEGUMENTARY_SYSTEM_SECTION = 865;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Head Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_HEAD_SECTION = 866;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Eyes Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_EYES_SECTION = 867;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Ears Nose Mouth Throat Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_EARS_NOSE_MOUTH_THROAT_SECTION = 868;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Ears Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_EARS_SECTION = 869;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Nose Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_NOSE_SECTION = 870;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Mouth Throat Teeth Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_MOUTH_THROAT_TEETH_SECTION = 871;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Neck Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_NECK_SECTION = 872;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Endocrine System Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_ENDOCRINE_SYSTEM_SECTION = 873;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Thorax Lungs Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_THORAX_LUNGS_SECTION = 874;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Chest Wall Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_CHEST_WALL_SECTION = 875;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Breast Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_BREAST_SECTION = 876;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Heart Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_HEART_SECTION = 877;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Respiratory System Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_RESPIRATORY_SYSTEM_SECTION = 878;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Abdomen Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_ABDOMEN_SECTION = 879;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Lymphatic Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_LYMPHATIC_SECTION = 880;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Vessels Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_VESSELS_SECTION = 881;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Musculoskeletal System Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_MUSCULOSKELETAL_SYSTEM_SECTION = 882;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Neurologic System Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_NEUROLOGIC_SYSTEM_SECTION = 883;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Genitalia Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_GENITALIA_SECTION = 884;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Rectum Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_RECTUM_SECTION = 885;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Exam Section Extremities Section' of 'Physical Exam Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAM_SECTION__PHYSICAL_EXAM_SECTION_EXTREMITIES_SECTION = 886;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Appearance Section Template Id' of 'General Appearance Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_APPEARANCE_SECTION__GENERAL_APPEARANCE_SECTION_TEMPLATE_ID = 887;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Appearance Section Code' of 'General Appearance Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_APPEARANCE_SECTION__GENERAL_APPEARANCE_SECTION_CODE = 888;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Appearance Section Problem Entry' of 'General Appearance Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_APPEARANCE_SECTION__GENERAL_APPEARANCE_SECTION_PROBLEM_ENTRY = 889;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visible Implanted Medical Devices Section Template Id' of 'Visible Implanted Medical Devices Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIBLE_IMPLANTED_MEDICAL_DEVICES_SECTION__VISIBLE_IMPLANTED_MEDICAL_DEVICES_SECTION_TEMPLATE_ID = 890;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visible Implanted Medical Devices Section Code' of 'Visible Implanted Medical Devices Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIBLE_IMPLANTED_MEDICAL_DEVICES_SECTION__VISIBLE_IMPLANTED_MEDICAL_DEVICES_SECTION_CODE = 891;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visible Implanted Medical Devices Section Problem Entry' of 'Visible Implanted Medical Devices Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIBLE_IMPLANTED_MEDICAL_DEVICES_SECTION__VISIBLE_IMPLANTED_MEDICAL_DEVICES_SECTION_PROBLEM_ENTRY = 892;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Integumentary System Section Template Id' of 'Integumentary System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTEGUMENTARY_SYSTEM_SECTION__INTEGUMENTARY_SYSTEM_SECTION_TEMPLATE_ID = 893;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Integumentary System Section Code' of 'Integumentary System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTEGUMENTARY_SYSTEM_SECTION__INTEGUMENTARY_SYSTEM_SECTION_CODE = 894;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Integumentary System Section Problem Entry' of 'Integumentary System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTEGUMENTARY_SYSTEM_SECTION__INTEGUMENTARY_SYSTEM_SECTION_PROBLEM_ENTRY = 895;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Head Section Template Id' of 'Head Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEAD_SECTION__HEAD_SECTION_TEMPLATE_ID = 896;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Head Section Code' of 'Head Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEAD_SECTION__HEAD_SECTION_CODE = 897;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Head Section Problem Entry' of 'Head Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEAD_SECTION__HEAD_SECTION_PROBLEM_ENTRY = 898;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Eyes Section Template Id' of 'Eyes Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EYES_SECTION__EYES_SECTION_TEMPLATE_ID = 899;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Eyes Section Code' of 'Eyes Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EYES_SECTION__EYES_SECTION_CODE = 900;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Eyes Section Problem Entry' of 'Eyes Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EYES_SECTION__EYES_SECTION_PROBLEM_ENTRY = 901;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Ears Nose Mouth Throat Section Template Id' of 'Ears Nose Mouth Throat Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EARS_NOSE_MOUTH_THROAT_SECTION__EARS_NOSE_MOUTH_THROAT_SECTION_TEMPLATE_ID = 902;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Ears Nose Mouth Throat Section Code' of 'Ears Nose Mouth Throat Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EARS_NOSE_MOUTH_THROAT_SECTION__EARS_NOSE_MOUTH_THROAT_SECTION_CODE = 903;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Ears Nose Mouth Throat Section Problem Entry' of 'Ears Nose Mouth Throat Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EARS_NOSE_MOUTH_THROAT_SECTION__EARS_NOSE_MOUTH_THROAT_SECTION_PROBLEM_ENTRY = 904;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Ears Section Template Id' of 'Ears Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EARS_SECTION__EARS_SECTION_TEMPLATE_ID = 905;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Ears Section Code' of 'Ears Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EARS_SECTION__EARS_SECTION_CODE = 906;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Ears Section Problem Entry' of 'Ears Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EARS_SECTION__EARS_SECTION_PROBLEM_ENTRY = 907;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nose Section Template Id' of 'Nose Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NOSE_SECTION__NOSE_SECTION_TEMPLATE_ID = 908;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nose Section Code' of 'Nose Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NOSE_SECTION__NOSE_SECTION_CODE = 909;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nose Section Problem Entry' of 'Nose Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NOSE_SECTION__NOSE_SECTION_PROBLEM_ENTRY = 910;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Mouth Throat Teeth Section Template Id' of 'Mouth Throat Teeth Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MOUTH_THROAT_TEETH_SECTION__MOUTH_THROAT_TEETH_SECTION_TEMPLATE_ID = 911;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Mouth Throat Teeth Section Code' of 'Mouth Throat Teeth Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MOUTH_THROAT_TEETH_SECTION__MOUTH_THROAT_TEETH_SECTION_CODE = 912;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Mouth Throat Teeth Section Problem Entry' of 'Mouth Throat Teeth Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MOUTH_THROAT_TEETH_SECTION__MOUTH_THROAT_TEETH_SECTION_PROBLEM_ENTRY = 913;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Neck Section Template Id' of 'Neck Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NECK_SECTION__NECK_SECTION_TEMPLATE_ID = 914;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Neck Section Code' of 'Neck Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NECK_SECTION__NECK_SECTION_CODE = 915;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Neck Section Problem Entry' of 'Neck Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NECK_SECTION__NECK_SECTION_PROBLEM_ENTRY = 916;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Endocrine System Section Template Id' of 'Endocrine System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENDOCRINE_SYSTEM_SECTION__ENDOCRINE_SYSTEM_SECTION_TEMPLATE_ID = 917;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Endocrine System Section Code' of 'Endocrine System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENDOCRINE_SYSTEM_SECTION__ENDOCRINE_SYSTEM_SECTION_CODE = 918;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Endocrine System Section Problem Entry' of 'Endocrine System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ENDOCRINE_SYSTEM_SECTION__ENDOCRINE_SYSTEM_SECTION_PROBLEM_ENTRY = 919;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Thorax Lungs Section Template Id' of 'Thorax Lungs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int THORAX_LUNGS_SECTION__THORAX_LUNGS_SECTION_TEMPLATE_ID = 920;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Thorax Lungs Section Code' of 'Thorax Lungs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int THORAX_LUNGS_SECTION__THORAX_LUNGS_SECTION_CODE = 921;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Thorax Lungs Section Problem Entry' of 'Thorax Lungs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int THORAX_LUNGS_SECTION__THORAX_LUNGS_SECTION_PROBLEM_ENTRY = 922;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chest Wall Section Template Id' of 'Chest Wall Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHEST_WALL_SECTION__CHEST_WALL_SECTION_TEMPLATE_ID = 923;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chest Wall Section Code' of 'Chest Wall Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHEST_WALL_SECTION__CHEST_WALL_SECTION_CODE = 924;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chest Wall Section Problem Entry' of 'Chest Wall Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHEST_WALL_SECTION__CHEST_WALL_SECTION_PROBLEM_ENTRY = 925;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Breast Section Template Id' of 'Breast Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BREAST_SECTION__BREAST_SECTION_TEMPLATE_ID = 926;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Breast Section Code' of 'Breast Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BREAST_SECTION__BREAST_SECTION_CODE = 927;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Heart Section Template Id' of 'Heart Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEART_SECTION__HEART_SECTION_TEMPLATE_ID = 928;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Heart Section Code' of 'Heart Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEART_SECTION__HEART_SECTION_CODE = 929;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Heart Section Problem Entry' of 'Heart Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEART_SECTION__HEART_SECTION_PROBLEM_ENTRY = 930;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Respiratory System Section Template Id' of 'Respiratory System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESPIRATORY_SYSTEM_SECTION__RESPIRATORY_SYSTEM_SECTION_TEMPLATE_ID = 931;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Respiratory System Section Code' of 'Respiratory System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESPIRATORY_SYSTEM_SECTION__RESPIRATORY_SYSTEM_SECTION_CODE = 932;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Respiratory System Section Problem Entry' of 'Respiratory System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESPIRATORY_SYSTEM_SECTION__RESPIRATORY_SYSTEM_SECTION_PROBLEM_ENTRY = 933;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Abdomen Section Template Id' of 'Abdomen Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ABDOMEN_SECTION__ABDOMEN_SECTION_TEMPLATE_ID = 934;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Abdomen Section Code' of 'Abdomen Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ABDOMEN_SECTION__ABDOMEN_SECTION_CODE = 935;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Abdomen Section Problem Entry' of 'Abdomen Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ABDOMEN_SECTION__ABDOMEN_SECTION_PROBLEM_ENTRY = 936;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Lymphatic Section Template Id' of 'Lymphatic Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LYMPHATIC_SECTION__LYMPHATIC_SECTION_TEMPLATE_ID = 937;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Lymphatic Section Code' of 'Lymphatic Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LYMPHATIC_SECTION__LYMPHATIC_SECTION_CODE = 938;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Lymphatic Section Problem Entry' of 'Lymphatic Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LYMPHATIC_SECTION__LYMPHATIC_SECTION_PROBLEM_ENTRY = 939;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vessels Section Template Id' of 'Vessels Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VESSELS_SECTION__VESSELS_SECTION_TEMPLATE_ID = 940;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vessels Section Code' of 'Vessels Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VESSELS_SECTION__VESSELS_SECTION_CODE = 941;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vessels Section Problem Entry' of 'Vessels Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VESSELS_SECTION__VESSELS_SECTION_PROBLEM_ENTRY = 942;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Musculoskeletal System Section Template Id' of 'Musculoskeletal System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MUSCULOSKELETAL_SYSTEM_SECTION__MUSCULOSKELETAL_SYSTEM_SECTION_TEMPLATE_ID = 943;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Musculoskeletal System Section Code' of 'Musculoskeletal System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MUSCULOSKELETAL_SYSTEM_SECTION__MUSCULOSKELETAL_SYSTEM_SECTION_CODE = 944;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Musculoskeletal System Section Problem Entry' of 'Musculoskeletal System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MUSCULOSKELETAL_SYSTEM_SECTION__MUSCULOSKELETAL_SYSTEM_SECTION_PROBLEM_ENTRY = 945;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Neurologic System Section Template Id' of 'Neurologic System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NEUROLOGIC_SYSTEM_SECTION__NEUROLOGIC_SYSTEM_SECTION_TEMPLATE_ID = 946;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Neurologic System Section Code' of 'Neurologic System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NEUROLOGIC_SYSTEM_SECTION__NEUROLOGIC_SYSTEM_SECTION_CODE = 947;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Neurologic System Section Problem Entry' of 'Neurologic System Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NEUROLOGIC_SYSTEM_SECTION__NEUROLOGIC_SYSTEM_SECTION_PROBLEM_ENTRY = 948;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Genitalia Section Template Id' of 'Genitalia Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENITALIA_SECTION__GENITALIA_SECTION_TEMPLATE_ID = 949;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Genitalia Section Code' of 'Genitalia Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENITALIA_SECTION__GENITALIA_SECTION_CODE = 950;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Genitalia Section Problem Entry' of 'Genitalia Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENITALIA_SECTION__GENITALIA_SECTION_PROBLEM_ENTRY = 951;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Rectum Section Template Id' of 'Rectum Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RECTUM_SECTION__RECTUM_SECTION_TEMPLATE_ID = 952;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Rectum Section Code' of 'Rectum Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RECTUM_SECTION__RECTUM_SECTION_CODE = 953;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Rectum Section Problem Entry' of 'Rectum Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RECTUM_SECTION__RECTUM_SECTION_PROBLEM_ENTRY = 954;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Extremities Section Template Id' of 'Extremities Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTREMITIES_SECTION__EXTREMITIES_SECTION_TEMPLATE_ID = 955;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Extremities Section Code' of 'Extremities Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTREMITIES_SECTION__EXTREMITIES_SECTION_CODE = 956;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Extremities Section Problem Entry' of 'Extremities Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXTREMITIES_SECTION__EXTREMITIES_SECTION_PROBLEM_ENTRY = 957;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Review Of Systems Section Template Id' of 'Review Of Systems Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REVIEW_OF_SYSTEMS_SECTION__REVIEW_OF_SYSTEMS_SECTION_TEMPLATE_ID = 958;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Review Of Systems Section Code' of 'Review Of Systems Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REVIEW_OF_SYSTEMS_SECTION__REVIEW_OF_SYSTEMS_SECTION_CODE = 959;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Course Section Template Id' of 'Hospital Course Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_COURSE_SECTION__HOSPITAL_COURSE_SECTION_TEMPLATE_ID = 960;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Course Section Code' of 'Hospital Course Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_COURSE_SECTION__HOSPITAL_COURSE_SECTION_CODE = 961;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment And Plan Section Template Id' of 'Assessment And Plan Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_AND_PLAN_SECTION__ASSESSMENT_AND_PLAN_SECTION_TEMPLATE_ID = 962;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment And Plan Section Code' of 'Assessment And Plan Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_AND_PLAN_SECTION__ASSESSMENT_AND_PLAN_SECTION_CODE = 963;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment And Plan Section Medication' of 'Assessment And Plan Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_AND_PLAN_SECTION__ASSESSMENT_AND_PLAN_SECTION_MEDICATION = 964;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment And Plan Section Immunization' of 'Assessment And Plan Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_AND_PLAN_SECTION__ASSESSMENT_AND_PLAN_SECTION_IMMUNIZATION = 965;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment And Plan Section Encounter Entry' of 'Assessment And Plan Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_AND_PLAN_SECTION__ASSESSMENT_AND_PLAN_SECTION_ENCOUNTER_ENTRY = 966;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment And Plan Section Procedure Entry' of 'Assessment And Plan Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_AND_PLAN_SECTION__ASSESSMENT_AND_PLAN_SECTION_PROCEDURE_ENTRY = 967;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Language Spoken No Proficiency Level Code' of 'Language Spoken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LANGUAGE_SPOKEN__LANGUAGE_SPOKEN_NO_PROFICIENCY_LEVEL_CODE = 968;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Language Spoken Template Id' of 'Language Spoken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LANGUAGE_SPOKEN__LANGUAGE_SPOKEN_TEMPLATE_ID = 969;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Language Spoken Mode Code' of 'Language Spoken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LANGUAGE_SPOKEN__LANGUAGE_SPOKEN_MODE_CODE = 970;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Healthcare Provider Template Id' of 'Healthcare Provider'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HEALTHCARE_PROVIDER__HEALTHCARE_PROVIDER_TEMPLATE_ID = 971;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Mood Code' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_MOOD_CODE = 972;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Has Dose Quantity Or Rate Quantity' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_HAS_DOSE_QUANTITY_OR_RATE_QUANTITY = 973;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Has Consents' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_HAS_CONSENTS = 974;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Information Source' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_INFORMATION_SOURCE = 975;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Has Precondition Criterion' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_HAS_PRECONDITION_CRITERION = 976;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Has Reason' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_HAS_REASON = 977;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Has Reason Problem' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_HAS_REASON_PROBLEM = 978;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Has Product' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_HAS_PRODUCT = 979;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Has Dosing' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_HAS_DOSING = 980;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Dosing Relationship' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_DOSING_RELATIONSHIP = 981;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Has Description No Med Not Known' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_HAS_DESCRIPTION_NO_MED_NOT_KNOWN = 982;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Reason Class Mood' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_REASON_CLASS_MOOD = 983;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Has Product Entry' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_HAS_PRODUCT_ENTRY = 984;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Has Intructions Inversion' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_HAS_INTRUCTIONS_INVERSION = 985;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Product Strength' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_PRODUCT_STRENGTH = 986;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Product Name' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_PRODUCT_NAME = 987;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Precondition Reference' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_PRECONDITION_REFERENCE = 988;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Has Supply Entry Inversion' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_HAS_SUPPLY_ENTRY_INVERSION = 989;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Has Fill Number' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_HAS_FILL_NUMBER = 990;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose No Subordinate Substance Administration' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_NO_SUBORDINATE_SUBSTANCE_ADMINISTRATION = 991;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Id' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_ID = 992;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Code' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_CODE = 993;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Status Code' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_STATUS_CODE = 994;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Effective Time' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_EFFECTIVE_TIME = 995;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Route Code' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_ROUTE_CODE = 996;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Approach Site Code' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_APPROACH_SITE_CODE = 997;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Dose Quantity' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_DOSE_QUANTITY = 998;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Rate Quantity' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_RATE_QUANTITY = 999;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Max Dose Quantity' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_MAX_DOSE_QUANTITY = 1000;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Administration Unit Code' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_ADMINISTRATION_UNIT_CODE = 1001;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Medication Series Number Observation' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1002;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Medication Status Observation' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_MEDICATION_STATUS_OBSERVATION = 1003;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Product Instance' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_PRODUCT_INSTANCE = 1004;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Medication Series Number Observation' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1006;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Medication Status Observation' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_MEDICATION_STATUS_OBSERVATION = 1007;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Product Instance' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_PRODUCT_INSTANCE = 1008;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Medication Series Number Observation' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1006;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Medication Status Observation' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_MEDICATION_STATUS_OBSERVATION = 1007;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Product Instance' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_PRODUCT_INSTANCE = 1008;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Medication Series Number Observation' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1006;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Medication Status Observation' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_MEDICATION_STATUS_OBSERVATION = 1007;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Product Instance' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_PRODUCT_INSTANCE = 1008;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Template Id' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_TEMPLATE_ID = 1005;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Medication Series Number Observation' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1006;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Medication Status Observation' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_MEDICATION_STATUS_OBSERVATION = 1007;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Normal Dose Product Instance' of 'Medication Normal Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_NORMAL_DOSE__MEDICATION_NORMAL_DOSE_PRODUCT_INSTANCE = 1008;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Mood Code' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_MOOD_CODE = 1009;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Has Dose Quantity Or Rate Quantity' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_HAS_DOSE_QUANTITY_OR_RATE_QUANTITY = 1010;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Has Consents' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_HAS_CONSENTS = 1011;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Information Source' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_INFORMATION_SOURCE = 1012;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Has Precondition Criterion' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_HAS_PRECONDITION_CRITERION = 1013;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Has Reason' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_HAS_REASON = 1014;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Has Reason Problem' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_HAS_REASON_PROBLEM = 1015;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Has Product' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_HAS_PRODUCT = 1016;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Has Dosing' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_HAS_DOSING = 1017;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Dosing Relationship' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_DOSING_RELATIONSHIP = 1018;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Has Description No Med Not Known' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_HAS_DESCRIPTION_NO_MED_NOT_KNOWN = 1019;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Reason Class Mood' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_REASON_CLASS_MOOD = 1020;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Has Product Entry' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_HAS_PRODUCT_ENTRY = 1021;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Has Intructions Inversion' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_HAS_INTRUCTIONS_INVERSION = 1022;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Product Strength' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_PRODUCT_STRENGTH = 1023;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Product Name' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_PRODUCT_NAME = 1024;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Precondition Reference' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_PRECONDITION_REFERENCE = 1025;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Has Supply Entry Inversion' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_HAS_SUPPLY_ENTRY_INVERSION = 1026;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Has Fill Number' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_HAS_FILL_NUMBER = 1027;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Split Dosing Substance Administration' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_SPLIT_DOSING_SUBSTANCE_ADMINISTRATION = 1028;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Id' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_ID = 1029;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Code' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_CODE = 1030;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Status Code' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_STATUS_CODE = 1031;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Effective Time' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_EFFECTIVE_TIME = 1032;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Route Code' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_ROUTE_CODE = 1033;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Approach Site Code' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_APPROACH_SITE_CODE = 1034;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Dose Quantity' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_DOSE_QUANTITY = 1035;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Rate Quantity' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_RATE_QUANTITY = 1036;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Max Dose Quantity' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_MAX_DOSE_QUANTITY = 1037;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Administration Unit Code' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_ADMINISTRATION_UNIT_CODE = 1038;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Medication Series Number Observation' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1039;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Medication Status Observation' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_MEDICATION_STATUS_OBSERVATION = 1040;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Product Instance' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_PRODUCT_INSTANCE = 1041;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Medication Series Number Observation' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1043;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Medication Status Observation' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_MEDICATION_STATUS_OBSERVATION = 1044;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Product Instance' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_PRODUCT_INSTANCE = 1045;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Medication Series Number Observation' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1043;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Medication Status Observation' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_MEDICATION_STATUS_OBSERVATION = 1044;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Product Instance' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_PRODUCT_INSTANCE = 1045;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Medication Series Number Observation' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1043;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Medication Status Observation' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_MEDICATION_STATUS_OBSERVATION = 1044;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Product Instance' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_PRODUCT_INSTANCE = 1045;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Template Id' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_TEMPLATE_ID = 1042;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Medication Series Number Observation' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1043;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Medication Status Observation' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_MEDICATION_STATUS_OBSERVATION = 1044;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Split Dose Product Instance' of 'Medication Split Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_SPLIT_DOSE__MEDICATION_SPLIT_DOSE_PRODUCT_INSTANCE = 1045;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Mood Code' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_MOOD_CODE = 1046;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Has Dose Quantity Or Rate Quantity' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_HAS_DOSE_QUANTITY_OR_RATE_QUANTITY = 1047;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Has Consents' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_HAS_CONSENTS = 1048;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Information Source' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_INFORMATION_SOURCE = 1049;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Has Precondition Criterion' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_HAS_PRECONDITION_CRITERION = 1050;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Has Reason' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_HAS_REASON = 1051;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Has Reason Problem' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_HAS_REASON_PROBLEM = 1052;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Has Product' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_HAS_PRODUCT = 1053;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Has Dosing' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_HAS_DOSING = 1054;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Dosing Relationship' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_DOSING_RELATIONSHIP = 1055;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Has Description No Med Not Known' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_HAS_DESCRIPTION_NO_MED_NOT_KNOWN = 1056;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Reason Class Mood' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_REASON_CLASS_MOOD = 1057;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Has Product Entry' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_HAS_PRODUCT_ENTRY = 1058;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Has Intructions Inversion' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_HAS_INTRUCTIONS_INVERSION = 1059;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Product Strength' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_PRODUCT_STRENGTH = 1060;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Product Name' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_PRODUCT_NAME = 1061;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Precondition Reference' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_PRECONDITION_REFERENCE = 1062;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Has Supply Entry Inversion' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_HAS_SUPPLY_ENTRY_INVERSION = 1063;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Has Fill Number' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_HAS_FILL_NUMBER = 1064;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Tapered Dosing Substance Administration' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_TAPERED_DOSING_SUBSTANCE_ADMINISTRATION = 1065;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Id' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_ID = 1066;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Code' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_CODE = 1067;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Status Code' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_STATUS_CODE = 1068;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Effective Time' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_EFFECTIVE_TIME = 1069;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Route Code' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_ROUTE_CODE = 1070;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Approach Site Code' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_APPROACH_SITE_CODE = 1071;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Dose Quantity' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_DOSE_QUANTITY = 1072;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Rate Quantity' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_RATE_QUANTITY = 1073;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Max Dose Quantity' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_MAX_DOSE_QUANTITY = 1074;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Administration Unit Code' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_ADMINISTRATION_UNIT_CODE = 1075;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Medication Series Number Observation' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1076;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Medication Status Observation' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_MEDICATION_STATUS_OBSERVATION = 1077;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Product Instance' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_PRODUCT_INSTANCE = 1078;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Medication Series Number Observation' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1080;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Medication Status Observation' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_MEDICATION_STATUS_OBSERVATION = 1081;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Product Instance' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_PRODUCT_INSTANCE = 1082;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Medication Series Number Observation' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1080;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Medication Status Observation' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_MEDICATION_STATUS_OBSERVATION = 1081;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Product Instance' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_PRODUCT_INSTANCE = 1082;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Medication Series Number Observation' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1080;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Medication Status Observation' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_MEDICATION_STATUS_OBSERVATION = 1081;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Product Instance' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_PRODUCT_INSTANCE = 1082;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Template Id' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TEMPLATE_ID = 1079;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Medication Series Number Observation' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1080;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Medication Status Observation' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_MEDICATION_STATUS_OBSERVATION = 1081;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Tapered Dose Product Instance' of 'Medication Tapered Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_TAPERED_DOSE__MEDICATION_TAPERED_DOSE_PRODUCT_INSTANCE = 1082;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Mood Code' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_MOOD_CODE = 1083;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Has Dose Quantity Or Rate Quantity' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_HAS_DOSE_QUANTITY_OR_RATE_QUANTITY = 1084;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Has Consents' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_HAS_CONSENTS = 1085;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Information Source' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_INFORMATION_SOURCE = 1086;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Has Precondition Criterion' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_HAS_PRECONDITION_CRITERION = 1087;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Has Reason' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_HAS_REASON = 1088;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Has Reason Problem' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_HAS_REASON_PROBLEM = 1089;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Has Product' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_HAS_PRODUCT = 1090;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Has Dosing' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_HAS_DOSING = 1091;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Dosing Relationship' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_DOSING_RELATIONSHIP = 1092;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Has Description No Med Not Known' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_HAS_DESCRIPTION_NO_MED_NOT_KNOWN = 1093;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Reason Class Mood' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_REASON_CLASS_MOOD = 1094;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Has Product Entry' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_HAS_PRODUCT_ENTRY = 1095;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Has Intructions Inversion' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_HAS_INTRUCTIONS_INVERSION = 1096;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Product Strength' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_PRODUCT_STRENGTH = 1097;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Product Name' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_PRODUCT_NAME = 1098;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Precondition Reference' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_PRECONDITION_REFERENCE = 1099;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Has Supply Entry Inversion' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_HAS_SUPPLY_ENTRY_INVERSION = 1100;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Has Fill Number' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_HAS_FILL_NUMBER = 1101;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Conditional Dosing Substance Administration' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_CONDITIONAL_DOSING_SUBSTANCE_ADMINISTRATION = 1102;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Id' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_ID = 1103;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Code' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_CODE = 1104;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Status Code' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_STATUS_CODE = 1105;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Effective Time' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_EFFECTIVE_TIME = 1106;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Route Code' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_ROUTE_CODE = 1107;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Approach Site Code' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_APPROACH_SITE_CODE = 1108;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Dose Quantity' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_DOSE_QUANTITY = 1109;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Rate Quantity' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_RATE_QUANTITY = 1110;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Max Dose Quantity' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_MAX_DOSE_QUANTITY = 1111;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Administration Unit Code' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_ADMINISTRATION_UNIT_CODE = 1112;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Medication Series Number Observation' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1113;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Medication Status Observation' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_MEDICATION_STATUS_OBSERVATION = 1114;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Product Instance' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_PRODUCT_INSTANCE = 1115;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Medication Series Number Observation' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1117;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Medication Status Observation' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_MEDICATION_STATUS_OBSERVATION = 1118;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Product Instance' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_PRODUCT_INSTANCE = 1119;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Medication Series Number Observation' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1117;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Medication Status Observation' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_MEDICATION_STATUS_OBSERVATION = 1118;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Product Instance' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_PRODUCT_INSTANCE = 1119;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Medication Series Number Observation' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1117;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Medication Status Observation' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_MEDICATION_STATUS_OBSERVATION = 1118;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Product Instance' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_PRODUCT_INSTANCE = 1119;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Template Id' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_TEMPLATE_ID = 1116;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Medication Series Number Observation' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_MEDICATION_SERIES_NUMBER_OBSERVATION = 1117;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Medication Status Observation' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_MEDICATION_STATUS_OBSERVATION = 1118;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Conditional Dose Product Instance' of 'Medication Conditional Dose'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_CONDITIONAL_DOSE__MEDICATION_CONDITIONAL_DOSE_PRODUCT_INSTANCE = 1119;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Mood Code' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_MOOD_CODE = 1120;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Has Dose Quantity Or Rate Quantity' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_HAS_DOSE_QUANTITY_OR_RATE_QUANTITY = 1121;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Has Consents' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_HAS_CONSENTS = 1122;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Information Source' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_INFORMATION_SOURCE = 1123;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Has Precondition Criterion' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_HAS_PRECONDITION_CRITERION = 1124;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Has Reason' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_HAS_REASON = 1125;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Has Reason Problem' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_HAS_REASON_PROBLEM = 1126;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Has Product' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_HAS_PRODUCT = 1127;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Has Dosing' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_HAS_DOSING = 1128;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Dosing Relationship' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_DOSING_RELATIONSHIP = 1129;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Has Description No Med Not Known' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_HAS_DESCRIPTION_NO_MED_NOT_KNOWN = 1130;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Reason Class Mood' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_REASON_CLASS_MOOD = 1131;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Has Product Entry' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_HAS_PRODUCT_ENTRY = 1132;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Has Intructions Inversion' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_HAS_INTRUCTIONS_INVERSION = 1133;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Product Strength' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_PRODUCT_STRENGTH = 1134;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Product Name' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_PRODUCT_NAME = 1135;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Precondition Reference' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_PRECONDITION_REFERENCE = 1136;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Has Supply Entry Inversion' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_HAS_SUPPLY_ENTRY_INVERSION = 1137;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Has Fill Number' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_HAS_FILL_NUMBER = 1138;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Combination Medication Substance Administration' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_COMBINATION_MEDICATION_SUBSTANCE_ADMINISTRATION = 1139;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Id' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_ID = 1140;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Code' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_CODE = 1141;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Status Code' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_STATUS_CODE = 1142;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Effective Time' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_EFFECTIVE_TIME = 1143;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Route Code' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_ROUTE_CODE = 1144;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Approach Site Code' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_APPROACH_SITE_CODE = 1145;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Dose Quantity' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_DOSE_QUANTITY = 1146;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Rate Quantity' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_RATE_QUANTITY = 1147;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Max Dose Quantity' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_MAX_DOSE_QUANTITY = 1148;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Administration Unit Code' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_ADMINISTRATION_UNIT_CODE = 1149;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Medication Series Number Observation' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_MEDICATION_SERIES_NUMBER_OBSERVATION = 1150;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Medication Status Observation' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_MEDICATION_STATUS_OBSERVATION = 1151;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Product Instance' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_PRODUCT_INSTANCE = 1152;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Medication Series Number Observation' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_MEDICATION_SERIES_NUMBER_OBSERVATION = 1154;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Medication Status Observation' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_MEDICATION_STATUS_OBSERVATION = 1155;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Product Instance' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_PRODUCT_INSTANCE = 1156;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Medication Series Number Observation' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_MEDICATION_SERIES_NUMBER_OBSERVATION = 1154;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Medication Status Observation' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_MEDICATION_STATUS_OBSERVATION = 1155;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Product Instance' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_PRODUCT_INSTANCE = 1156;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Medication Series Number Observation' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_MEDICATION_SERIES_NUMBER_OBSERVATION = 1154;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Medication Status Observation' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_MEDICATION_STATUS_OBSERVATION = 1155;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Product Instance' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_PRODUCT_INSTANCE = 1156;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Template Id' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_TEMPLATE_ID = 1153;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Medication Series Number Observation' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_MEDICATION_SERIES_NUMBER_OBSERVATION = 1154;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Medication Status Observation' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_MEDICATION_STATUS_OBSERVATION = 1155;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Combination Medication Product Instance' of 'Medication Combination Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_COMBINATION_MEDICATION__MEDICATION_COMBINATION_MEDICATION_PRODUCT_INSTANCE = 1156;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Support Participant Template Id' of 'Support Participant'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPORT_PARTICIPANT__SUPPORT_PARTICIPANT_TEMPLATE_ID = 1157;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Support Participant Type Code' of 'Support Participant'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPORT_PARTICIPANT__SUPPORT_PARTICIPANT_TYPE_CODE = 1158;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Support Participant Time' of 'Support Participant'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPORT_PARTICIPANT__SUPPORT_PARTICIPANT_TIME = 1159;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Person Has Name' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_PERSON_HAS_NAME = 1160;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Roles Shall Have Addr And Telecom' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_ROLES_SHALL_HAVE_ADDR_AND_TELECOM = 1161;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Roles Should Have Addr And Telecom' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_ROLES_SHOULD_HAVE_ADDR_AND_TELECOM = 1162;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Organizations Have Contact Info' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_ORGANIZATIONS_HAVE_CONTACT_INFO = 1163;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Time Precise To Day' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_TIME_PRECISE_TO_DAY = 1164;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Time Precise To Year' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_TIME_PRECISE_TO_YEAR = 1165;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Telephone Matches Regex' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_TELEPHONE_MATCHES_REGEX = 1166;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Telephone Dialing Digits' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_TELEPHONE_DIALING_DIGITS = 1167;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Unknown Telephone Uses Null Flavor' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_UNKNOWN_TELEPHONE_USES_NULL_FLAVOR = 1168;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Type Id Extension' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_TYPE_ID_EXTENSION = 1169;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Id Root Format' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_ID_ROOT_FORMAT = 1170;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Oid Length' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_OID_LENGTH = 1171;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Language Code Form' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_LANGUAGE_CODE_FORM = 1172;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Set Id And Version Number' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_SET_ID_AND_VERSION_NUMBER = 1173;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Set Id And Id Are Unique' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_SET_ID_AND_ID_ARE_UNIQUE = 1174;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Copy Time Not Present' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_COPY_TIME_NOT_PRESENT = 1175;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Record Target Patient Role' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_RECORD_TARGET_PATIENT_ROLE = 1176;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Patient Birth Time' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_PATIENT_BIRTH_TIME = 1177;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Administrative Gender Code' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_ADMINISTRATIVE_GENDER_CODE = 1178;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Provider Organization' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_PROVIDER_ORGANIZATION = 1179;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Author Time' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_AUTHOR_TIME = 1180;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Assigned Author Id' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_ASSIGNED_AUTHOR_ID = 1181;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Assigned Author Person Or Device' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_ASSIGNED_AUTHOR_PERSON_OR_DEVICE = 1182;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Data Enterer Assigned Person' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_DATA_ENTERER_ASSIGNED_PERSON = 1183;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Data Enterer Time' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_DATA_ENTERER_TIME = 1184;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Informant' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_INFORMANT = 1185;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Informant Assigned Person Or Related Person' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_INFORMANT_ASSIGNED_PERSON_OR_RELATED_PERSON = 1186;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Legal Authenticator Has Assigned Person' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_LEGAL_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1187;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Authenticator Has Assigned Person' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1188;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Time Precise To Second' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_TIME_PRECISE_TO_SECOND = 1189;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Time Precise To Year And Day' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_TIME_PRECISE_TO_YEAR_AND_DAY = 1190;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Type Id Fixed' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_TYPE_ID_FIXED = 1191;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has One Record Target' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_ONE_RECORD_TARGET = 1192;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Assigned Author' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_ASSIGNED_AUTHOR = 1193;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Patient Role Id' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_PATIENT_ROLE_ID = 1194;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Patient Role Address' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_PATIENT_ROLE_ADDRESS = 1195;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Patient Name' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_PATIENT_NAME = 1196;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Patient Gender Code' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_PATIENT_GENDER_CODE = 1197;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Patient Birth Year' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_PATIENT_BIRTH_YEAR = 1198;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Original Author' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_ORIGINAL_AUTHOR = 1199;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Scanning Device' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_SCANNING_DEVICE = 1200;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Scan Data Enterer' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_SCAN_DATA_ENTERER = 1201;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Represented Custodian Organization Name' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_NAME = 1202;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Represented Custodian Organization Addr' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_ADDR = 1203;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Legal Authenticator Assigned Entity Id' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY_ID = 1204;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Non XML Body' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_NON_XML_BODY = 1205;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Non XML Body Binary Text' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_NON_XML_BODY_BINARY_TEXT = 1206;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Non XML Body Text Media Type' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_NON_XML_BODY_TEXT_MEDIA_TYPE = 1207;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Has Non XML Body Text Representation' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_HAS_NON_XML_BODY_TEXT_REPRESENTATION = 1208;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document No Structured Data' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_NO_STRUCTURED_DATA = 1209;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document One Patient Per Document' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_ONE_PATIENT_PER_DOCUMENT = 1210;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Template Id' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_TEMPLATE_ID = 1211;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Type Id' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_TYPE_ID = 1212;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Id' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_ID = 1213;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Code' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_CODE = 1214;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Title' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_TITLE = 1215;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Effective Time' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_EFFECTIVE_TIME = 1216;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Confidentiality Code' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_CONFIDENTIALITY_CODE = 1217;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Document Language Code' of 'Unstructured Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_DOCUMENT__UNSTRUCTURED_DOCUMENT_LANGUAGE_CODE = 1218;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scan Original Author Has Assigned Author Id' of 'Scan Original Author'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCAN_ORIGINAL_AUTHOR__SCAN_ORIGINAL_AUTHOR_HAS_ASSIGNED_AUTHOR_ID = 1219;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scan Original Author Has Assigned Author Represented Organization Id' of 'Scan Original Author'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCAN_ORIGINAL_AUTHOR__SCAN_ORIGINAL_AUTHOR_HAS_ASSIGNED_AUTHOR_REPRESENTED_ORGANIZATION_ID = 1220;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scan Original Author Template Id' of 'Scan Original Author'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCAN_ORIGINAL_AUTHOR__SCAN_ORIGINAL_AUTHOR_TEMPLATE_ID = 1221;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scanning Device Time Equals Document Effective Time' of 'Scanning Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCANNING_DEVICE__SCANNING_DEVICE_TIME_EQUALS_DOCUMENT_EFFECTIVE_TIME = 1222;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scanning Device Has Assigned Author Id' of 'Scanning Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCANNING_DEVICE__SCANNING_DEVICE_HAS_ASSIGNED_AUTHOR_ID = 1223;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scanning Device Has Assigned Authoring Device Code' of 'Scanning Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCANNING_DEVICE__SCANNING_DEVICE_HAS_ASSIGNED_AUTHORING_DEVICE_CODE = 1224;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scanning Device Has Device Manufacturer Model Name' of 'Scanning Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCANNING_DEVICE__SCANNING_DEVICE_HAS_DEVICE_MANUFACTURER_MODEL_NAME = 1225;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scanning Device Has Device Software Name' of 'Scanning Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCANNING_DEVICE__SCANNING_DEVICE_HAS_DEVICE_SOFTWARE_NAME = 1226;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scanning Device Has Assigned Author Represented Organization Id' of 'Scanning Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCANNING_DEVICE__SCANNING_DEVICE_HAS_ASSIGNED_AUTHOR_REPRESENTED_ORGANIZATION_ID = 1227;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scanning Device Template Id' of 'Scanning Device'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCANNING_DEVICE__SCANNING_DEVICE_TEMPLATE_ID = 1228;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scan Data Enterer Time Equals Document Effective Time' of 'Scan Data Enterer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCAN_DATA_ENTERER__SCAN_DATA_ENTERER_TIME_EQUALS_DOCUMENT_EFFECTIVE_TIME = 1229;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scan Data Enterer Has Assigned Entity Id' of 'Scan Data Enterer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCAN_DATA_ENTERER__SCAN_DATA_ENTERER_HAS_ASSIGNED_ENTITY_ID = 1230;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scan Data Enterer Template Id' of 'Scan Data Enterer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCAN_DATA_ENTERER__SCAN_DATA_ENTERER_TEMPLATE_ID = 1231;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Scan Data Enterer Time' of 'Scan Data Enterer'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SCAN_DATA_ENTERER__SCAN_DATA_ENTERER_TIME = 1232;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Has Material' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_HAS_MATERIAL = 1233;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Has Material Code' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_HAS_MATERIAL_CODE = 1234;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Has Material Code Vocab' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_HAS_MATERIAL_CODE_VOCAB = 1235;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Has Material Code Original Text' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_HAS_MATERIAL_CODE_ORIGINAL_TEXT = 1236;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Has Material Name' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_HAS_MATERIAL_NAME = 1237;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information May Have Material Manufacturer' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_MAY_HAVE_MATERIAL_MANUFACTURER = 1238;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Should Have Material Manufacturer' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_SHOULD_HAVE_MATERIAL_MANUFACTURER = 1239;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Coded Product Name' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_CODED_PRODUCT_NAME = 1240;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Coded Product Vocab' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_CODED_PRODUCT_VOCAB = 1241;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Coded Drug Class Vocab' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_CODED_DRUG_CLASS_VOCAB = 1242;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Coded Ingredient Vocab' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_CODED_INGREDIENT_VOCAB = 1243;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Coded Brand Name' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_CODED_BRAND_NAME = 1244;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Coded Brand Name Vocab' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_CODED_BRAND_NAME_VOCAB = 1245;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Free Text Product Name' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_FREE_TEXT_PRODUCT_NAME = 1246;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Free Text Brand Name' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_FREE_TEXT_BRAND_NAME = 1247;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Template Id' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_TEMPLATE_ID = 1248;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medication Information Id' of 'Medication Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICATION_INFORMATION__MEDICATION_INFORMATION_ID = 1249;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Person Has Name' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_PERSON_HAS_NAME = 1250;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Roles Shall Have Addr And Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ROLES_SHALL_HAVE_ADDR_AND_TELECOM = 1251;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Roles Should Have Addr And Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ROLES_SHOULD_HAVE_ADDR_AND_TELECOM = 1252;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Organizations Have Contact Info' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ORGANIZATIONS_HAVE_CONTACT_INFO = 1253;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Day' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_DAY = 1254;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Year' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_YEAR = 1255;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Telephone Matches Regex' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TELEPHONE_MATCHES_REGEX = 1256;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Telephone Dialing Digits' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_TELEPHONE_DIALING_DIGITS = 1257;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Unknown Telephone Uses Null Flavor' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_UNKNOWN_TELEPHONE_USES_NULL_FLAVOR = 1258;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Type Id Extension' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TYPE_ID_EXTENSION = 1259;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Id Root Format' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ID_ROOT_FORMAT = 1260;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Oid Length' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_OID_LENGTH = 1261;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Language Code Form' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LANGUAGE_CODE_FORM = 1262;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Set Id And Version Number' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_SET_ID_AND_VERSION_NUMBER = 1263;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Set Id And Id Are Unique' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_SET_ID_AND_ID_ARE_UNIQUE = 1264;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Copy Time Not Present' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_COPY_TIME_NOT_PRESENT = 1265;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Record Target Patient Role' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_RECORD_TARGET_PATIENT_ROLE = 1266;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Patient Birth Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PATIENT_BIRTH_TIME = 1267;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Administrative Gender Code' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ADMINISTRATIVE_GENDER_CODE = 1268;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Provider Organization' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PROVIDER_ORGANIZATION = 1269;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Author Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_AUTHOR_TIME = 1270;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Assigned Author Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ASSIGNED_AUTHOR_ID = 1271;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Assigned Author Person Or Device' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ASSIGNED_AUTHOR_PERSON_OR_DEVICE = 1272;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Data Enterer Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_DATA_ENTERER_ASSIGNED_PERSON = 1273;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Data Enterer Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_DATA_ENTERER_TIME = 1274;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Informant' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_INFORMANT = 1275;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Informant Assigned Person Or Related Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_INFORMANT_ASSIGNED_PERSON_OR_RELATED_PERSON = 1276;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Legal Authenticator Has Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LEGAL_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1277;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Authenticator Has Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1278;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Second' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_SECOND = 1279;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Year And Day' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_YEAR_AND_DAY = 1280;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Person Has Name' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_PERSON_HAS_NAME = 1318;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Roles Shall Have Addr And Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ROLES_SHALL_HAVE_ADDR_AND_TELECOM = 1319;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Roles Should Have Addr And Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ROLES_SHOULD_HAVE_ADDR_AND_TELECOM = 1320;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Organizations Have Contact Info' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ORGANIZATIONS_HAVE_CONTACT_INFO = 1321;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Day' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_DAY = 1322;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Year' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_YEAR = 1323;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Telephone Matches Regex' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TELEPHONE_MATCHES_REGEX = 1324;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Telephone Dialing Digits' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_TELEPHONE_DIALING_DIGITS = 1325;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Unknown Telephone Uses Null Flavor' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_UNKNOWN_TELEPHONE_USES_NULL_FLAVOR = 1326;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Type Id Extension' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TYPE_ID_EXTENSION = 1327;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Id Root Format' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ID_ROOT_FORMAT = 1328;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Oid Length' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_OID_LENGTH = 1329;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Language Code Form' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LANGUAGE_CODE_FORM = 1330;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Set Id And Version Number' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_SET_ID_AND_VERSION_NUMBER = 1331;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Set Id And Id Are Unique' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_SET_ID_AND_ID_ARE_UNIQUE = 1332;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Copy Time Not Present' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_COPY_TIME_NOT_PRESENT = 1333;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Record Target Patient Role' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_RECORD_TARGET_PATIENT_ROLE = 1334;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Patient Birth Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PATIENT_BIRTH_TIME = 1335;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Administrative Gender Code' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ADMINISTRATIVE_GENDER_CODE = 1336;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Provider Organization' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PROVIDER_ORGANIZATION = 1337;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Author Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_AUTHOR_TIME = 1338;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Assigned Author Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ASSIGNED_AUTHOR_ID = 1339;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Assigned Author Person Or Device' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ASSIGNED_AUTHOR_PERSON_OR_DEVICE = 1340;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Data Enterer Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_DATA_ENTERER_ASSIGNED_PERSON = 1341;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Data Enterer Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_DATA_ENTERER_TIME = 1342;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Informant' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_INFORMANT = 1343;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Informant Assigned Person Or Related Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_INFORMANT_ASSIGNED_PERSON_OR_RELATED_PERSON = 1344;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Legal Authenticator Has Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LEGAL_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1345;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Authenticator Has Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1346;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Second' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_SECOND = 1347;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Year And Day' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_YEAR_AND_DAY = 1348;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Person Has Name' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_PERSON_HAS_NAME = 1318;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Roles Shall Have Addr And Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ROLES_SHALL_HAVE_ADDR_AND_TELECOM = 1319;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Roles Should Have Addr And Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ROLES_SHOULD_HAVE_ADDR_AND_TELECOM = 1320;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Organizations Have Contact Info' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ORGANIZATIONS_HAVE_CONTACT_INFO = 1321;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Day' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_DAY = 1322;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Year' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_YEAR = 1323;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Telephone Matches Regex' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TELEPHONE_MATCHES_REGEX = 1324;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Telephone Dialing Digits' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_TELEPHONE_DIALING_DIGITS = 1325;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Unknown Telephone Uses Null Flavor' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_UNKNOWN_TELEPHONE_USES_NULL_FLAVOR = 1326;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Type Id Extension' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TYPE_ID_EXTENSION = 1327;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Id Root Format' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ID_ROOT_FORMAT = 1328;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Oid Length' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_OID_LENGTH = 1329;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Language Code Form' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LANGUAGE_CODE_FORM = 1330;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Set Id And Version Number' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_SET_ID_AND_VERSION_NUMBER = 1331;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Set Id And Id Are Unique' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_SET_ID_AND_ID_ARE_UNIQUE = 1332;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Copy Time Not Present' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_COPY_TIME_NOT_PRESENT = 1333;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Record Target Patient Role' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_RECORD_TARGET_PATIENT_ROLE = 1334;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Patient Birth Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PATIENT_BIRTH_TIME = 1335;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Administrative Gender Code' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ADMINISTRATIVE_GENDER_CODE = 1336;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Provider Organization' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PROVIDER_ORGANIZATION = 1337;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Author Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_AUTHOR_TIME = 1338;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Assigned Author Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ASSIGNED_AUTHOR_ID = 1339;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Assigned Author Person Or Device' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ASSIGNED_AUTHOR_PERSON_OR_DEVICE = 1340;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Data Enterer Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_DATA_ENTERER_ASSIGNED_PERSON = 1341;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Data Enterer Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_DATA_ENTERER_TIME = 1342;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Informant' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_INFORMANT = 1343;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Informant Assigned Person Or Related Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_INFORMANT_ASSIGNED_PERSON_OR_RELATED_PERSON = 1344;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Legal Authenticator Has Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LEGAL_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1345;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Authenticator Has Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1346;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Second' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_SECOND = 1347;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Year And Day' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_YEAR_AND_DAY = 1348;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Person Has Name' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_PERSON_HAS_NAME = 1318;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Roles Shall Have Addr And Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ROLES_SHALL_HAVE_ADDR_AND_TELECOM = 1319;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Roles Should Have Addr And Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ROLES_SHOULD_HAVE_ADDR_AND_TELECOM = 1320;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Organizations Have Contact Info' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ORGANIZATIONS_HAVE_CONTACT_INFO = 1321;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Day' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_DAY = 1322;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Year' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_YEAR = 1323;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Telephone Matches Regex' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TELEPHONE_MATCHES_REGEX = 1324;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Telephone Dialing Digits' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_TELEPHONE_DIALING_DIGITS = 1325;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Unknown Telephone Uses Null Flavor' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_UNKNOWN_TELEPHONE_USES_NULL_FLAVOR = 1326;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Type Id Extension' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TYPE_ID_EXTENSION = 1327;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Id Root Format' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ID_ROOT_FORMAT = 1328;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Oid Length' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_OID_LENGTH = 1329;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Language Code Form' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LANGUAGE_CODE_FORM = 1330;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Set Id And Version Number' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_SET_ID_AND_VERSION_NUMBER = 1331;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Set Id And Id Are Unique' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_SET_ID_AND_ID_ARE_UNIQUE = 1332;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Copy Time Not Present' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_COPY_TIME_NOT_PRESENT = 1333;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Record Target Patient Role' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_RECORD_TARGET_PATIENT_ROLE = 1334;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Patient Birth Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PATIENT_BIRTH_TIME = 1335;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Administrative Gender Code' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ADMINISTRATIVE_GENDER_CODE = 1336;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Provider Organization' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PROVIDER_ORGANIZATION = 1337;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Author Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_AUTHOR_TIME = 1338;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Assigned Author Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ASSIGNED_AUTHOR_ID = 1339;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Assigned Author Person Or Device' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ASSIGNED_AUTHOR_PERSON_OR_DEVICE = 1340;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Data Enterer Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_DATA_ENTERER_ASSIGNED_PERSON = 1341;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Data Enterer Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_DATA_ENTERER_TIME = 1342;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Informant' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_INFORMANT = 1343;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Informant Assigned Person Or Related Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_INFORMANT_ASSIGNED_PERSON_OR_RELATED_PERSON = 1344;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Legal Authenticator Has Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LEGAL_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1345;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Authenticator Has Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1346;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Second' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_SECOND = 1347;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Year And Day' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_YEAR_AND_DAY = 1348;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Type Id Fixed' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TYPE_ID_FIXED = 1281;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has One Record Target' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ONE_RECORD_TARGET = 1282;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Assigned Author' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ASSIGNED_AUTHOR = 1283;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Patient Role Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_PATIENT_ROLE_ID = 1284;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Patient Role Address' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PATIENT_ROLE_ADDRESS = 1285;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Patient Name' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PATIENT_NAME = 1286;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Patient Gender Code' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PATIENT_GENDER_CODE = 1287;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Patient Birth Year' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PATIENT_BIRTH_YEAR = 1288;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Original Author' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ORIGINAL_AUTHOR = 1289;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Scanning Device' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_SCANNING_DEVICE = 1290;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Scan Data Enterer' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_SCAN_DATA_ENTERER = 1291;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Name' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_NAME = 1292;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Addr' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_ADDR = 1293;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Name' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_NAME = 1349;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Addr' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_ADDR = 1350;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Name' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_NAME = 1349;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Addr' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_ADDR = 1350;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Name' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_NAME = 1349;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Addr' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_ADDR = 1350;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Legal Authenticator Assigned Entity Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LEGAL_AUTHENTICATOR_ASSIGNED_ENTITY_ID = 1294;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Non XML Body' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_NON_XML_BODY = 1295;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Non XML Body Binary Text' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_NON_XML_BODY_BINARY_TEXT = 1296;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Non XML Body Text Media Type' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_NON_XML_BODY_TEXT_MEDIA_TYPE = 1297;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Non XML Body Text Representation' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_NON_XML_BODY_TEXT_REPRESENTATION = 1298;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document No Structured Data' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_NO_STRUCTURED_DATA = 1299;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document One Patient Per Document' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ONE_PATIENT_PER_DOCUMENT = 1300;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Patient Role Has Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_PATIENT_ROLE_HAS_ID = 1301;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Assigned Author Has Addr' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ASSIGNED_AUTHOR_HAS_ADDR = 1302;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Assigned Author Has Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ASSIGNED_AUTHOR_HAS_TELECOM = 1303;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION = 1304;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_ID = 1305;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_TELECOM = 1306;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Non XML Body Text' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_NON_XML_BODY_TEXT = 1307;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Text Reference Or Representation' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_TEXT_REFERENCE_OR_REPRESENTATION = 1308;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Text Media Type Value Set' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_TEXT_MEDIA_TYPE_VALUE_SET = 1309;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Template Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TEMPLATE_ID = 1310;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Realm Code' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_REALM_CODE = 1311;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Type Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TYPE_ID = 1312;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ID = 1313;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Code' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_CODE = 1314;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Title' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TITLE = 1315;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Effective Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_EFFECTIVE_TIME = 1316;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Language Code' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LANGUAGE_CODE = 1317;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Person Has Name' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_PERSON_HAS_NAME = 1318;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Roles Shall Have Addr And Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ROLES_SHALL_HAVE_ADDR_AND_TELECOM = 1319;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Roles Should Have Addr And Telecom' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ROLES_SHOULD_HAVE_ADDR_AND_TELECOM = 1320;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Organizations Have Contact Info' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ORGANIZATIONS_HAVE_CONTACT_INFO = 1321;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Day' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_DAY = 1322;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Year' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_YEAR = 1323;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Telephone Matches Regex' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TELEPHONE_MATCHES_REGEX = 1324;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Telephone Dialing Digits' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_TELEPHONE_DIALING_DIGITS = 1325;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Unknown Telephone Uses Null Flavor' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_UNKNOWN_TELEPHONE_USES_NULL_FLAVOR = 1326;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Type Id Extension' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TYPE_ID_EXTENSION = 1327;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Id Root Format' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_ID_ROOT_FORMAT = 1328;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Oid Length' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_OID_LENGTH = 1329;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Language Code Form' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LANGUAGE_CODE_FORM = 1330;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Set Id And Version Number' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_SET_ID_AND_VERSION_NUMBER = 1331;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Set Id And Id Are Unique' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_SET_ID_AND_ID_ARE_UNIQUE = 1332;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Copy Time Not Present' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_COPY_TIME_NOT_PRESENT = 1333;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Record Target Patient Role' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_RECORD_TARGET_PATIENT_ROLE = 1334;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Patient Birth Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PATIENT_BIRTH_TIME = 1335;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Administrative Gender Code' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ADMINISTRATIVE_GENDER_CODE = 1336;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Provider Organization' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_PROVIDER_ORGANIZATION = 1337;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Author Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_AUTHOR_TIME = 1338;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Assigned Author Id' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ASSIGNED_AUTHOR_ID = 1339;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Assigned Author Person Or Device' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_ASSIGNED_AUTHOR_PERSON_OR_DEVICE = 1340;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Data Enterer Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_DATA_ENTERER_ASSIGNED_PERSON = 1341;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Data Enterer Time' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_DATA_ENTERER_TIME = 1342;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Informant' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_INFORMANT = 1343;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Informant Assigned Person Or Related Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_INFORMANT_ASSIGNED_PERSON_OR_RELATED_PERSON = 1344;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Legal Authenticator Has Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_LEGAL_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1345;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Authenticator Has Assigned Person' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1346;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Second' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_SECOND = 1347;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Time Precise To Year And Day' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_TIME_PRECISE_TO_YEAR_AND_DAY = 1348;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Name' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_NAME = 1349;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Unstructured Or Scanned Document Has Represented Custodian Organization Addr' of 'Unstructured Or Scanned Document'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int UNSTRUCTURED_OR_SCANNED_DOCUMENT__UNSTRUCTURED_OR_SCANNED_DOCUMENT_HAS_REPRESENTED_CUSTODIAN_ORGANIZATION_ADDR = 1350;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Person Has Name' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_PERSON_HAS_NAME = 1351;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Roles Shall Have Addr And Telecom' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_ROLES_SHALL_HAVE_ADDR_AND_TELECOM = 1352;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Roles Should Have Addr And Telecom' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_ROLES_SHOULD_HAVE_ADDR_AND_TELECOM = 1353;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Organizations Have Contact Info' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_ORGANIZATIONS_HAVE_CONTACT_INFO = 1354;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Time Precise To Day' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_TIME_PRECISE_TO_DAY = 1355;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Time Precise To Year' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_TIME_PRECISE_TO_YEAR = 1356;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Telephone Matches Regex' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_TELEPHONE_MATCHES_REGEX = 1357;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Has Telephone Dialing Digits' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_HAS_TELEPHONE_DIALING_DIGITS = 1358;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Unknown Telephone Uses Null Flavor' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_UNKNOWN_TELEPHONE_USES_NULL_FLAVOR = 1359;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Type Id Extension' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_TYPE_ID_EXTENSION = 1360;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Id Root Format' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_ID_ROOT_FORMAT = 1361;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Oid Length' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_OID_LENGTH = 1362;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Language Code Form' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_LANGUAGE_CODE_FORM = 1363;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Set Id And Version Number' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_SET_ID_AND_VERSION_NUMBER = 1364;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Set Id And Id Are Unique' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_SET_ID_AND_ID_ARE_UNIQUE = 1365;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Copy Time Not Present' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_COPY_TIME_NOT_PRESENT = 1366;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Has Record Target Patient Role' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_HAS_RECORD_TARGET_PATIENT_ROLE = 1367;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Has Patient Birth Time' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_HAS_PATIENT_BIRTH_TIME = 1368;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Has Administrative Gender Code' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_HAS_ADMINISTRATIVE_GENDER_CODE = 1369;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Has Provider Organization' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_HAS_PROVIDER_ORGANIZATION = 1370;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Has Author Time' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_HAS_AUTHOR_TIME = 1371;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Has Assigned Author Id' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_HAS_ASSIGNED_AUTHOR_ID = 1372;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Has Assigned Author Person Or Device' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_HAS_ASSIGNED_AUTHOR_PERSON_OR_DEVICE = 1373;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Has Data Enterer Assigned Person' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_HAS_DATA_ENTERER_ASSIGNED_PERSON = 1374;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Has Data Enterer Time' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_HAS_DATA_ENTERER_TIME = 1375;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Has Informant' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_HAS_INFORMANT = 1376;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Has Informant Assigned Person Or Related Person' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_HAS_INFORMANT_ASSIGNED_PERSON_OR_RELATED_PERSON = 1377;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Legal Authenticator Has Assigned Person' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_LEGAL_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1378;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Authenticator Has Assigned Person' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1379;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Time Precise To Second' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_TIME_PRECISE_TO_SECOND = 1380;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Time Precise To Year And Day' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_TIME_PRECISE_TO_YEAR_AND_DAY = 1381;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Medical Summary Problem Concern Entry' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_MEDICAL_SUMMARY_PROBLEM_CONCERN_ENTRY = 1382;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Medical Summary Allergy Concern Entry' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_MEDICAL_SUMMARY_ALLERGY_CONCERN_ENTRY = 1383;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Medical Summary Medications' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_MEDICAL_SUMMARY_MEDICATIONS = 1384;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Template Id' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_TEMPLATE_ID = 1385;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Realm Code' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_REALM_CODE = 1386;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Type Id' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_TYPE_ID = 1387;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Id' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_ID = 1388;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Code' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_CODE = 1389;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Title' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_TITLE = 1390;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Effective Time' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_EFFECTIVE_TIME = 1391;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Referral Summary Language Code' of 'Referral Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERRAL_SUMMARY__REFERRAL_SUMMARY_LANGUAGE_CODE = 1392;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Person Has Name' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_PERSON_HAS_NAME = 1393;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Roles Shall Have Addr And Telecom' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_ROLES_SHALL_HAVE_ADDR_AND_TELECOM = 1394;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Roles Should Have Addr And Telecom' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_ROLES_SHOULD_HAVE_ADDR_AND_TELECOM = 1395;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Organizations Have Contact Info' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_ORGANIZATIONS_HAVE_CONTACT_INFO = 1396;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Time Precise To Day' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_TIME_PRECISE_TO_DAY = 1397;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Time Precise To Year' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_TIME_PRECISE_TO_YEAR = 1398;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Telephone Matches Regex' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_TELEPHONE_MATCHES_REGEX = 1399;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Has Telephone Dialing Digits' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HAS_TELEPHONE_DIALING_DIGITS = 1400;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Unknown Telephone Uses Null Flavor' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_UNKNOWN_TELEPHONE_USES_NULL_FLAVOR = 1401;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Type Id Extension' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_TYPE_ID_EXTENSION = 1402;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Id Root Format' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_ID_ROOT_FORMAT = 1403;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Oid Length' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_OID_LENGTH = 1404;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Language Code Form' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_LANGUAGE_CODE_FORM = 1405;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Set Id And Version Number' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_SET_ID_AND_VERSION_NUMBER = 1406;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Set Id And Id Are Unique' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_SET_ID_AND_ID_ARE_UNIQUE = 1407;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Copy Time Not Present' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_COPY_TIME_NOT_PRESENT = 1408;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Has Record Target Patient Role' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HAS_RECORD_TARGET_PATIENT_ROLE = 1409;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Has Patient Birth Time' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HAS_PATIENT_BIRTH_TIME = 1410;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Has Administrative Gender Code' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HAS_ADMINISTRATIVE_GENDER_CODE = 1411;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Has Provider Organization' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HAS_PROVIDER_ORGANIZATION = 1412;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Has Author Time' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HAS_AUTHOR_TIME = 1413;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Has Assigned Author Id' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HAS_ASSIGNED_AUTHOR_ID = 1414;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Has Assigned Author Person Or Device' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HAS_ASSIGNED_AUTHOR_PERSON_OR_DEVICE = 1415;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Has Data Enterer Assigned Person' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HAS_DATA_ENTERER_ASSIGNED_PERSON = 1416;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Has Data Enterer Time' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HAS_DATA_ENTERER_TIME = 1417;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Has Informant' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HAS_INFORMANT = 1418;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Has Informant Assigned Person Or Related Person' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HAS_INFORMANT_ASSIGNED_PERSON_OR_RELATED_PERSON = 1419;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Legal Authenticator Has Assigned Person' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_LEGAL_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1420;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Authenticator Has Assigned Person' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1421;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Time Precise To Second' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_TIME_PRECISE_TO_SECOND = 1422;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Time Precise To Year And Day' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_TIME_PRECISE_TO_YEAR_AND_DAY = 1423;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Medical Summary Problem Concern Entry' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_MEDICAL_SUMMARY_PROBLEM_CONCERN_ENTRY = 1424;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Medical Summary Allergy Concern Entry' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_MEDICAL_SUMMARY_ALLERGY_CONCERN_ENTRY = 1425;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Medical Summary Medications' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_MEDICAL_SUMMARY_MEDICATIONS = 1426;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Template Id' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_TEMPLATE_ID = 1427;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Realm Code' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_REALM_CODE = 1428;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Type Id' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_TYPE_ID = 1429;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Id' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_ID = 1430;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Code' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_CODE = 1431;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Title' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_TITLE = 1432;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Effective Time' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_EFFECTIVE_TIME = 1433;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Language Code' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_LANGUAGE_CODE = 1434;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Problem List Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_PROBLEM_LIST_SECTION = 1435;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Admission Medication History Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_ADMISSION_MEDICATION_HISTORY_SECTION = 1436;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Hospital Admission Diagnosis Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HOSPITAL_ADMISSION_DIAGNOSIS_SECTION = 1437;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Advance Directives Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_ADVANCE_DIRECTIVES_SECTION = 1438;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Allergies Reactions Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_ALLERGIES_REACTIONS_SECTION = 1439;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Discharge Diagnosis Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_DISCHARGE_DIAGNOSIS_SECTION = 1440;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Discharge Diet' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_DISCHARGE_DIET = 1441;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Hospital Discharge Medications Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HOSPITAL_DISCHARGE_MEDICATIONS_SECTION = 1442;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Diagnostic Results Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_DIAGNOSTIC_RESULTS_SECTION = 1443;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Functional Status Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_FUNCTIONAL_STATUS_SECTION = 1444;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary History Of Present Illness' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HISTORY_OF_PRESENT_ILLNESS = 1445;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Hospital Course Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HOSPITAL_COURSE_SECTION = 1446;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Medical Equipment Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_MEDICAL_EQUIPMENT_SECTION = 1447;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Physical Exam Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_PHYSICAL_EXAM_SECTION = 1448;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Plan Of Care Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_PLAN_OF_CARE_SECTION = 1449;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary History Of Past Illness Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_HISTORY_OF_PAST_ILLNESS_SECTION = 1450;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Review Of Systems Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_REVIEW_OF_SYSTEMS_SECTION = 1451;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Medications Administered Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_MEDICATIONS_ADMINISTERED_SECTION = 1452;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Summary Vital Signs Section' of 'Discharge Summary'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_SUMMARY__DISCHARGE_SUMMARY_VITAL_SIGNS_SECTION = 1453;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Diet Template Id' of 'Discharge Diet'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_DIET__DISCHARGE_DIET_TEMPLATE_ID = 1454;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Discharge Diet Code' of 'Discharge Diet'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DISCHARGE_DIET__DISCHARGE_DIET_CODE = 1455;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Person Has Name' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_PERSON_HAS_NAME = 1456;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Roles Shall Have Addr And Telecom' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_ROLES_SHALL_HAVE_ADDR_AND_TELECOM = 1457;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Roles Should Have Addr And Telecom' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_ROLES_SHOULD_HAVE_ADDR_AND_TELECOM = 1458;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Organizations Have Contact Info' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_ORGANIZATIONS_HAVE_CONTACT_INFO = 1459;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Time Precise To Day' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_TIME_PRECISE_TO_DAY = 1460;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Time Precise To Year' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_TIME_PRECISE_TO_YEAR = 1461;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Telephone Matches Regex' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_TELEPHONE_MATCHES_REGEX = 1462;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Has Telephone Dialing Digits' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_HAS_TELEPHONE_DIALING_DIGITS = 1463;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Unknown Telephone Uses Null Flavor' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_UNKNOWN_TELEPHONE_USES_NULL_FLAVOR = 1464;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Type Id Extension' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_TYPE_ID_EXTENSION = 1465;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Id Root Format' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_ID_ROOT_FORMAT = 1466;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Oid Length' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_OID_LENGTH = 1467;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Language Code Form' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_LANGUAGE_CODE_FORM = 1468;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Set Id And Version Number' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_SET_ID_AND_VERSION_NUMBER = 1469;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Set Id And Id Are Unique' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_SET_ID_AND_ID_ARE_UNIQUE = 1470;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Copy Time Not Present' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_COPY_TIME_NOT_PRESENT = 1471;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Has Record Target Patient Role' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_HAS_RECORD_TARGET_PATIENT_ROLE = 1472;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Has Patient Birth Time' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_HAS_PATIENT_BIRTH_TIME = 1473;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Has Administrative Gender Code' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_HAS_ADMINISTRATIVE_GENDER_CODE = 1474;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Has Provider Organization' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_HAS_PROVIDER_ORGANIZATION = 1475;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Has Author Time' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_HAS_AUTHOR_TIME = 1476;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Has Assigned Author Id' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_HAS_ASSIGNED_AUTHOR_ID = 1477;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Has Assigned Author Person Or Device' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_HAS_ASSIGNED_AUTHOR_PERSON_OR_DEVICE = 1478;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Has Data Enterer Assigned Person' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_HAS_DATA_ENTERER_ASSIGNED_PERSON = 1479;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Has Data Enterer Time' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_HAS_DATA_ENTERER_TIME = 1480;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Has Informant' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_HAS_INFORMANT = 1481;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Has Informant Assigned Person Or Related Person' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_HAS_INFORMANT_ASSIGNED_PERSON_OR_RELATED_PERSON = 1482;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Legal Authenticator Has Assigned Person' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_LEGAL_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1483;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Authenticator Has Assigned Person' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1484;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Time Precise To Second' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_TIME_PRECISE_TO_SECOND = 1485;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Time Precise To Year And Day' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_TIME_PRECISE_TO_YEAR_AND_DAY = 1486;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Assessment And Plan' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_ASSESSMENT_AND_PLAN = 1487;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Both Assessment And Plan' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_BOTH_ASSESSMENT_AND_PLAN = 1488;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Reason For Visit And Chief Complaint' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_REASON_FOR_VISIT_AND_CHIEF_COMPLAINT = 1489;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Both Reason For Visit And Chief Complaint' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_BOTH_REASON_FOR_VISIT_AND_CHIEF_COMPLAINT = 1490;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Template Id' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_TEMPLATE_ID = 1491;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Realm Code' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_REALM_CODE = 1492;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Type Id' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_TYPE_ID = 1493;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Id' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_ID = 1494;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Code' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_CODE = 1495;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Title' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_TITLE = 1496;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Effective Time' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_EFFECTIVE_TIME = 1497;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Language Code' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_LANGUAGE_CODE = 1498;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical History Of Present Illness' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_HISTORY_OF_PRESENT_ILLNESS = 1499;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Past Medical History Section' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_PAST_MEDICAL_HISTORY_SECTION = 1500;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Medications Section' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_MEDICATIONS_SECTION = 1501;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Alerts Section' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_ALERTS_SECTION = 1502;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Social History Section' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_SOCIAL_HISTORY_SECTION = 1503;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Family History Section' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_FAMILY_HISTORY_SECTION = 1504;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Review Of Systems Section' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_REVIEW_OF_SYSTEMS_SECTION = 1505;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Physical Examination Section' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_PHYSICAL_EXAMINATION_SECTION = 1506;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Vital Signs Section' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_VITAL_SIGNS_SECTION = 1507;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical General Status Section' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_GENERAL_STATUS_SECTION = 1508;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Diagnostic Findings' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_DIAGNOSTIC_FINDINGS = 1509;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Problem Section' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_PROBLEM_SECTION = 1510;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Procedures Section' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_PROCEDURES_SECTION = 1511;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate History And Physical Immunizations Section' of 'History And Physical'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HISTORY_AND_PHYSICAL__HISTORY_AND_PHYSICAL_IMMUNIZATIONS_SECTION = 1512;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate IHE History Of Present Illness Template Id' of 'IHE History Of Present Illness'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IHE_HISTORY_OF_PRESENT_ILLNESS__IHE_HISTORY_OF_PRESENT_ILLNESS_TEMPLATE_ID = 1513;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate IHE History Of Present Illness Code' of 'IHE History Of Present Illness'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int IHE_HISTORY_OF_PRESENT_ILLNESS__IHE_HISTORY_OF_PRESENT_ILLNESS_CODE = 1514;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Review Of Systems Section IHE Template Id' of 'Review Of Systems Section IHE'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REVIEW_OF_SYSTEMS_SECTION_IHE__REVIEW_OF_SYSTEMS_SECTION_IHE_TEMPLATE_ID = 1515;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Review Of Systems Section IHE Code' of 'Review Of Systems Section IHE'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REVIEW_OF_SYSTEMS_SECTION_IHE__REVIEW_OF_SYSTEMS_SECTION_IHE_CODE = 1516;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate CCD Vital Signs Section Clinical Statements' of 'CCD Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CCD_VITAL_SIGNS_SECTION__CCD_VITAL_SIGNS_SECTION_CLINICAL_STATEMENTS = 1517;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate CCD Vital Signs Section Template Id' of 'CCD Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CCD_VITAL_SIGNS_SECTION__CCD_VITAL_SIGNS_SECTION_TEMPLATE_ID = 1518;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate CCD Vital Signs Section Code' of 'CCD Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CCD_VITAL_SIGNS_SECTION__CCD_VITAL_SIGNS_SECTION_CODE = 1519;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate CCD Vital Signs Section Text' of 'CCD Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CCD_VITAL_SIGNS_SECTION__CCD_VITAL_SIGNS_SECTION_TEXT = 1520;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate CCD Vital Signs Section Vital Signs Organizer' of 'CCD Vital Signs Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CCD_VITAL_SIGNS_SECTION__CCD_VITAL_SIGNS_SECTION_VITAL_SIGNS_ORGANIZER = 1521;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Status Section Template Id' of 'General Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_STATUS_SECTION__GENERAL_STATUS_SECTION_TEMPLATE_ID = 1522;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate General Status Section Code' of 'General Status Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GENERAL_STATUS_SECTION__GENERAL_STATUS_SECTION_CODE = 1523;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Diagnostic Findings Title' of 'Diagnostic Findings'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DIAGNOSTIC_FINDINGS__DIAGNOSTIC_FINDINGS_TITLE = 1524;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Diagnostic Findings Text' of 'Diagnostic Findings'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DIAGNOSTIC_FINDINGS__DIAGNOSTIC_FINDINGS_TEXT = 1525;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Diagnostic Findings Result Organizer' of 'Diagnostic Findings'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DIAGNOSTIC_FINDINGS__DIAGNOSTIC_FINDINGS_RESULT_ORGANIZER = 1526;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Template Id' of 'Diagnostic Findings'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DIAGNOSTIC_FINDINGS__RESULTS_SECTION_TEMPLATE_ID = 1527;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Results Section Code' of 'Diagnostic Findings'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DIAGNOSTIC_FINDINGS__RESULTS_SECTION_CODE = 1528;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Person Has Name' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_PERSON_HAS_NAME = 1529;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Roles Shall Have Addr And Telecom' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_ROLES_SHALL_HAVE_ADDR_AND_TELECOM = 1530;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Roles Should Have Addr And Telecom' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_ROLES_SHOULD_HAVE_ADDR_AND_TELECOM = 1531;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Organizations Have Contact Info' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_ORGANIZATIONS_HAVE_CONTACT_INFO = 1532;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Time Precise To Day' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_TIME_PRECISE_TO_DAY = 1533;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Time Precise To Year' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_TIME_PRECISE_TO_YEAR = 1534;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Telephone Matches Regex' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_TELEPHONE_MATCHES_REGEX = 1535;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Has Telephone Dialing Digits' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HAS_TELEPHONE_DIALING_DIGITS = 1536;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Unknown Telephone Uses Null Flavor' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_UNKNOWN_TELEPHONE_USES_NULL_FLAVOR = 1537;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Type Id Extension' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_TYPE_ID_EXTENSION = 1538;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Id Root Format' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_ID_ROOT_FORMAT = 1539;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Oid Length' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_OID_LENGTH = 1540;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Language Code Form' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_LANGUAGE_CODE_FORM = 1541;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Set Id And Version Number' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_SET_ID_AND_VERSION_NUMBER = 1542;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Set Id And Id Are Unique' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_SET_ID_AND_ID_ARE_UNIQUE = 1543;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Copy Time Not Present' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_COPY_TIME_NOT_PRESENT = 1544;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Has Record Target Patient Role' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HAS_RECORD_TARGET_PATIENT_ROLE = 1545;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Has Patient Birth Time' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HAS_PATIENT_BIRTH_TIME = 1546;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Has Administrative Gender Code' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HAS_ADMINISTRATIVE_GENDER_CODE = 1547;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Has Provider Organization' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HAS_PROVIDER_ORGANIZATION = 1548;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Has Author Time' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HAS_AUTHOR_TIME = 1549;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Has Assigned Author Id' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HAS_ASSIGNED_AUTHOR_ID = 1550;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Has Assigned Author Person Or Device' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HAS_ASSIGNED_AUTHOR_PERSON_OR_DEVICE = 1551;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Has Data Enterer Assigned Person' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HAS_DATA_ENTERER_ASSIGNED_PERSON = 1552;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Has Data Enterer Time' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HAS_DATA_ENTERER_TIME = 1553;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Has Informant' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HAS_INFORMANT = 1554;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Has Informant Assigned Person Or Related Person' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HAS_INFORMANT_ASSIGNED_PERSON_OR_RELATED_PERSON = 1555;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Legal Authenticator Has Assigned Person' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_LEGAL_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1556;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Authenticator Has Assigned Person' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1557;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Time Precise To Second' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_TIME_PRECISE_TO_SECOND = 1558;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Time Precise To Year And Day' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_TIME_PRECISE_TO_YEAR_AND_DAY = 1559;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Referral Or Visit' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_REFERRAL_OR_VISIT = 1560;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Template Id' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_TEMPLATE_ID = 1561;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Realm Code' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_REALM_CODE = 1562;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Type Id' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_TYPE_ID = 1563;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Id' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_ID = 1564;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Code' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_CODE = 1565;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Title' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_TITLE = 1566;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Effective Time' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_EFFECTIVE_TIME = 1567;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Language Code' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_LANGUAGE_CODE = 1568;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note History Of Present Illness' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_HISTORY_OF_PRESENT_ILLNESS = 1569;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Physical Examination' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_PHYSICAL_EXAMINATION = 1570;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Problem Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_PROBLEM_SECTION = 1571;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Procedures Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_PROCEDURES_SECTION = 1572;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Past Medical History Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_PAST_MEDICAL_HISTORY_SECTION = 1573;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Immunizations Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_IMMUNIZATIONS_SECTION = 1574;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Medications Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_MEDICATIONS_SECTION = 1575;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Alerts Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_ALERTS_SECTION = 1576;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Social History Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_SOCIAL_HISTORY_SECTION = 1577;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Family History Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_FAMILY_HISTORY_SECTION = 1578;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Review Of Systems Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_REVIEW_OF_SYSTEMS_SECTION = 1579;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Vital Signs Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_VITAL_SIGNS_SECTION = 1580;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note General Status Section' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_GENERAL_STATUS_SECTION = 1581;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consultation Note Diagnostic Findings' of 'Consultation Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSULTATION_NOTE__CONSULTATION_NOTE_DIAGNOSTIC_FINDINGS = 1582;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Past Medical History Section Consult Template Id' of 'Past Medical History Section Consult'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAST_MEDICAL_HISTORY_SECTION_CONSULT__PAST_MEDICAL_HISTORY_SECTION_CONSULT_TEMPLATE_ID = 1583;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Past Medical History Section Consult Code' of 'Past Medical History Section Consult'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAST_MEDICAL_HISTORY_SECTION_CONSULT__PAST_MEDICAL_HISTORY_SECTION_CONSULT_CODE = 1584;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Past Medical History Section Consult Text' of 'Past Medical History Section Consult'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PAST_MEDICAL_HISTORY_SECTION_CONSULT__PAST_MEDICAL_HISTORY_SECTION_CONSULT_TEXT = 1585;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Visit Section Consult Template Id' of 'Reason For Visit Section Consult'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_VISIT_SECTION_CONSULT__REASON_FOR_VISIT_SECTION_CONSULT_TEMPLATE_ID = 1586;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Visit Section Consult Code' of 'Reason For Visit Section Consult'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_VISIT_SECTION_CONSULT__REASON_FOR_VISIT_SECTION_CONSULT_CODE = 1587;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Level One Conformance Template Id' of 'Level One Conformance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LEVEL_ONE_CONFORMANCE__LEVEL_ONE_CONFORMANCE_TEMPLATE_ID = 1588;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Level One Conformance Template Id' of 'Level Two Conformance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LEVEL_TWO_CONFORMANCE__LEVEL_ONE_CONFORMANCE_TEMPLATE_ID = 1589;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Level One Conformance Template Id' of 'Level Three Conformance'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int LEVEL_THREE_CONFORMANCE__LEVEL_ONE_CONFORMANCE_TEMPLATE_ID = 1590;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment Section Template Id' of 'Assessment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_SECTION__ASSESSMENT_SECTION_TEMPLATE_ID = 1591;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment Section Code' of 'Assessment Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_SECTION__ASSESSMENT_SECTION_CODE = 1592;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Section Template Id' of 'Plan Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_SECTION__PLAN_SECTION_TEMPLATE_ID = 1593;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Plan Section Code' of 'Plan Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLAN_SECTION__PLAN_SECTION_CODE = 1594;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Visit Section Template Id' of 'Reason For Visit Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_VISIT_SECTION__REASON_FOR_VISIT_SECTION_TEMPLATE_ID = 1595;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Visit Section Code' of 'Reason For Visit Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_VISIT_SECTION__REASON_FOR_VISIT_SECTION_CODE = 1596;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Visit And Chief Complaint Section Template Id' of 'Reason For Visit And Chief Complaint Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_VISIT_AND_CHIEF_COMPLAINT_SECTION__REASON_FOR_VISIT_AND_CHIEF_COMPLAINT_SECTION_TEMPLATE_ID = 1597;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reason For Visit And Chief Complaint Section Code' of 'Reason For Visit And Chief Complaint Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REASON_FOR_VISIT_AND_CHIEF_COMPLAINT_SECTION__REASON_FOR_VISIT_AND_CHIEF_COMPLAINT_SECTION_CODE = 1598;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Person Has Name' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_PERSON_HAS_NAME = 1599;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Roles Shall Have Addr And Telecom' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_ROLES_SHALL_HAVE_ADDR_AND_TELECOM = 1600;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Roles Should Have Addr And Telecom' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_ROLES_SHOULD_HAVE_ADDR_AND_TELECOM = 1601;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Organizations Have Contact Info' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_ORGANIZATIONS_HAVE_CONTACT_INFO = 1602;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Time Precise To Day' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_TIME_PRECISE_TO_DAY = 1603;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Time Precise To Year' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_TIME_PRECISE_TO_YEAR = 1604;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Telephone Matches Regex' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_TELEPHONE_MATCHES_REGEX = 1605;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Telephone Dialing Digits' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_TELEPHONE_DIALING_DIGITS = 1606;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Unknown Telephone Uses Null Flavor' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_UNKNOWN_TELEPHONE_USES_NULL_FLAVOR = 1607;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Type Id Extension' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_TYPE_ID_EXTENSION = 1608;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Id Root Format' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_ID_ROOT_FORMAT = 1609;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Oid Length' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_OID_LENGTH = 1610;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Language Code Form' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_LANGUAGE_CODE_FORM = 1611;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Set Id And Version Number' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_SET_ID_AND_VERSION_NUMBER = 1612;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Set Id And Id Are Unique' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_SET_ID_AND_ID_ARE_UNIQUE = 1613;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Copy Time Not Present' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_COPY_TIME_NOT_PRESENT = 1614;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Record Target Patient Role' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_RECORD_TARGET_PATIENT_ROLE = 1615;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Patient Birth Time' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_PATIENT_BIRTH_TIME = 1616;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Administrative Gender Code' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_ADMINISTRATIVE_GENDER_CODE = 1617;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Provider Organization' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_PROVIDER_ORGANIZATION = 1618;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Author Time' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_AUTHOR_TIME = 1619;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Assigned Author Id' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_ASSIGNED_AUTHOR_ID = 1620;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Assigned Author Person Or Device' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_ASSIGNED_AUTHOR_PERSON_OR_DEVICE = 1621;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Data Enterer Assigned Person' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_DATA_ENTERER_ASSIGNED_PERSON = 1622;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Data Enterer Time' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_DATA_ENTERER_TIME = 1623;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Informant' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_INFORMANT = 1624;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Informant Assigned Person Or Related Person' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_INFORMANT_ASSIGNED_PERSON_OR_RELATED_PERSON = 1625;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Legal Authenticator Has Assigned Person' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_LEGAL_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1626;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Authenticator Has Assigned Person' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_AUTHENTICATOR_HAS_ASSIGNED_PERSON = 1627;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Time Precise To Second' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_TIME_PRECISE_TO_SECOND = 1628;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Time Precise To Year And Day' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_TIME_PRECISE_TO_YEAR_AND_DAY = 1629;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Assessment And Plan' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_ASSESSMENT_AND_PLAN = 1630;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Both Assessment And Plan' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_BOTH_ASSESSMENT_AND_PLAN = 1631;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Service Event' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_SERVICE_EVENT = 1632;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Service Event Code' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_SERVICE_EVENT_CODE = 1633;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Service Event Effective Time' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_SERVICE_EVENT_EFFECTIVE_TIME = 1634;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Component Of Element' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_COMPONENT_OF_ELEMENT = 1635;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Encompassing Encounter Id' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_ENCOMPASSING_ENCOUNTER_ID = 1636;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Encompassing Encounter Effective Time' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_ENCOMPASSING_ENCOUNTER_EFFECTIVE_TIME = 1637;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Encompassing Encounter Effective Time Low' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_ENCOMPASSING_ENCOUNTER_EFFECTIVE_TIME_LOW = 1638;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Has Encompassing Encounter Facility Id' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_HAS_ENCOMPASSING_ENCOUNTER_FACILITY_ID = 1639;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Template Id' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_TEMPLATE_ID = 1640;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Realm Code' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_REALM_CODE = 1641;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Type Id' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_TYPE_ID = 1642;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Id' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_ID = 1643;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Code' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_CODE = 1644;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Title' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_TITLE = 1645;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Effective Time' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_EFFECTIVE_TIME = 1646;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Language Code' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_LANGUAGE_CODE = 1647;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Alerts Section' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_ALERTS_SECTION = 1648;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Chief Complaint Section' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_CHIEF_COMPLAINT_SECTION = 1649;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Medications Section' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_MEDICATIONS_SECTION = 1650;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Objective Section' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_OBJECTIVE_SECTION = 1651;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Physical Examination Section' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_PHYSICAL_EXAMINATION_SECTION = 1652;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Problem Section' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_PROBLEM_SECTION = 1653;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Results Section' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_RESULTS_SECTION = 1654;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Vital Signs Section' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_VITAL_SIGNS_SECTION = 1655;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Review Of Systems Section' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_REVIEW_OF_SYSTEMS_SECTION = 1656;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Progress Note Subjective Section' of 'Progress Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROGRESS_NOTE__PROGRESS_NOTE_SUBJECTIVE_SECTION = 1657;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment And Plan Section Proc Note Template Id' of 'Assessment And Plan Section Proc Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_AND_PLAN_SECTION_PROC_NOTE__ASSESSMENT_AND_PLAN_SECTION_PROC_NOTE_TEMPLATE_ID = 1658;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment And Plan Section Proc Note Code' of 'Assessment And Plan Section Proc Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_AND_PLAN_SECTION_PROC_NOTE__ASSESSMENT_AND_PLAN_SECTION_PROC_NOTE_CODE = 1659;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment Section Proc Note Template Id' of 'Assessment Section Proc Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_SECTION_PROC_NOTE__ASSESSMENT_SECTION_PROC_NOTE_TEMPLATE_ID = 1660;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assessment Section Proc Note Code' of 'Assessment Section Proc Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSESSMENT_SECTION_PROC_NOTE__ASSESSMENT_SECTION_PROC_NOTE_CODE = 1661;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chief Complaint Section Proc Note Template Id' of 'Chief Complaint Section Proc Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHIEF_COMPLAINT_SECTION_PROC_NOTE__CHIEF_COMPLAINT_SECTION_PROC_NOTE_TEMPLATE_ID = 1662;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Chief Complaint Section Proc Note Code' of 'Chief Complaint Section Proc Note'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CHIEF_COMPLAINT_SECTION_PROC_NOTE__CHIEF_COMPLAINT_SECTION_PROC_NOTE_CODE = 1663;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Objective Section Has Clinical Statements' of 'Objective Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OBJECTIVE_SECTION__OBJECTIVE_SECTION_HAS_CLINICAL_STATEMENTS = 1664;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Objective Section Template Id' of 'Objective Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OBJECTIVE_SECTION__OBJECTIVE_SECTION_TEMPLATE_ID = 1665;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Objective Section Code' of 'Objective Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OBJECTIVE_SECTION__OBJECTIVE_SECTION_CODE = 1666;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Objective Section Title' of 'Objective Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OBJECTIVE_SECTION__OBJECTIVE_SECTION_TITLE = 1667;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Objective Section Text' of 'Objective Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OBJECTIVE_SECTION__OBJECTIVE_SECTION_TEXT = 1668;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subjective Section Has Clinical Statements' of 'Subjective Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECTIVE_SECTION__SUBJECTIVE_SECTION_HAS_CLINICAL_STATEMENTS = 1669;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subjective Section Template Id' of 'Subjective Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECTIVE_SECTION__SUBJECTIVE_SECTION_TEMPLATE_ID = 1670;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subjective Section Code' of 'Subjective Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECTIVE_SECTION__SUBJECTIVE_SECTION_CODE = 1671;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subjective Section Title' of 'Subjective Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECTIVE_SECTION__SUBJECTIVE_SECTION_TITLE = 1672;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subjective Section Text' of 'Subjective Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECTIVE_SECTION__SUBJECTIVE_SECTION_TEXT = 1673;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Studies Summary Section Template Id' of 'Hospital Discharge Studies Summary Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION__HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION_TEMPLATE_ID = 1674;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Studies Summary Section Code' of 'Hospital Discharge Studies Summary Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION__HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION_CODE = 1675;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Hospital Discharge Studies Summary Section Title' of 'Hospital Discharge Studies Summary Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION__HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION_TITLE = 1676;

	/**
	 * A constant with a fixed name that can be used as the base value for additional hand written constants.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static final int GENERATED_DIAGNOSTIC_CODE_COUNT = 1676;

	/**
	 * A constant with a fixed name that can be used as the base value for additional hand written constants in a derived class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected static final int DIAGNOSTIC_CODE_COUNT = GENERATED_DIAGNOSTIC_CODE_COUNT;

	/**
	 * The cached base package validator.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CDAValidator cdaValidator;

	/**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ConsolValidator() {
		super();
		cdaValidator = CDAValidator.INSTANCE;
	}

	/**
	 * Returns the package of this validator switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EPackage getEPackage() {
		return ConsolPackage.eINSTANCE;
	}

	/**
	 * Calls <code>validateXXX</code> for the corresponding classifier of the model.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected boolean validate(int classifierID, Object value, DiagnosticChain diagnostics, Map<Object, Object> context) {
		switch (classifierID) {
			case ConsolPackage.ALLERGY_DRUG_SENSITIVITY:
				return validateAllergyDrugSensitivity((AllergyDrugSensitivity) value, diagnostics, context);
			case ConsolPackage.EPISODE_OBSERVATION:
				return validateEpisodeObservation((EpisodeObservation) value, diagnostics, context);
			case ConsolPackage.ALLERGY_INTOLERANCE:
				return validateAllergyIntolerance((AllergyIntolerance) value, diagnostics, context);
			case ConsolPackage.PROBLEM_ENTRY_REACTION_OBSERVATION_CONTAINER:
				return validateProblemEntryReactionObservationContainer(
					(ProblemEntryReactionObservationContainer) value, diagnostics, context);
			case ConsolPackage.AGE_OBSERVATION:
				return validateAgeObservation((AgeObservation) value, diagnostics, context);
			case ConsolPackage.SEVERITY:
				return validateSeverity((Severity) value, diagnostics, context);
			case ConsolPackage.PROBLEM_STATUS_OBSERVATION:
				return validateProblemStatusObservation((ProblemStatusObservation) value, diagnostics, context);
			case ConsolPackage.HEALTH_STATUS_OBSERVATION:
				return validateHealthStatusObservation((HealthStatusObservation) value, diagnostics, context);
			case ConsolPackage.COMMENT:
				return validateComment((Comment) value, diagnostics, context);
			case ConsolPackage.MEDICATION:
				return validateMedication((Medication) value, diagnostics, context);
			case ConsolPackage.MEDICATION_TYPE:
				return validateMedicationType((MedicationType) value, diagnostics, context);
			case ConsolPackage.MEDICATION_ORDER_INFORMATION:
				return validateMedicationOrderInformation((MedicationOrderInformation) value, diagnostics, context);
			case ConsolPackage.MEDICATION_STATUS_OBSERVATION:
				return validateMedicationStatusObservation((MedicationStatusObservation) value, diagnostics, context);
			case ConsolPackage.PRODUCT_INSTANCE:
				return validateProductInstance((ProductInstance) value, diagnostics, context);
			case ConsolPackage.MEDICATION_FULLFILLMENT_INSTRUCTIONS:
				return validateMedicationFullfillmentInstructions(
					(MedicationFullfillmentInstructions) value, diagnostics, context);
			case ConsolPackage.MEDICATION_SERIES_NUMBER_OBSERVATION:
				return validateMedicationSeriesNumberObservation(
					(MedicationSeriesNumberObservation) value, diagnostics, context);
			case ConsolPackage.INTERNAL_REFERENCE:
				return validateInternalReference((InternalReference) value, diagnostics, context);
			case ConsolPackage.PATIENT_MEDICAL_INSTRUCTIONS:
				return validatePatientMedicalInstructions((PatientMedicalInstructions) value, diagnostics, context);
			case ConsolPackage.CONDITION:
				return validateCondition((Condition) value, diagnostics, context);
			case ConsolPackage.CONDITION_ENTRY:
				return validateConditionEntry((ConditionEntry) value, diagnostics, context);
			case ConsolPackage.CAUSE_OF_DEATH_OBSERVATION:
				return validateCauseOfDeathObservation((CauseOfDeathObservation) value, diagnostics, context);
			case ConsolPackage.PATIENT_SUMMARY:
				return validatePatientSummary((PatientSummary) value, diagnostics, context);
			case ConsolPackage.ADVANCE_DIRECTIVES_SECTION:
				return validateAdvanceDirectivesSection((AdvanceDirectivesSection) value, diagnostics, context);
			case ConsolPackage.ADVANCE_DIRECTIVE:
				return validateAdvanceDirective((AdvanceDirective) value, diagnostics, context);
			case ConsolPackage.ADVANCE_DIRECTIVE_STATUS_OBSERVATION:
				return validateAdvanceDirectiveStatusObservation(
					(AdvanceDirectiveStatusObservation) value, diagnostics, context);
			case ConsolPackage.ALLERGIES_REACTIONS_SECTION:
				return validateAllergiesReactionsSection((AllergiesReactionsSection) value, diagnostics, context);
			case ConsolPackage.PROBLEM_LIST_SECTION:
				return validateProblemListSection((ProblemListSection) value, diagnostics, context);
			case ConsolPackage.ENCOUNTERS_SECTION:
				return validateEncountersSection((EncountersSection) value, diagnostics, context);
			case ConsolPackage.ENCOUNTER:
				return validateEncounter((Encounter) value, diagnostics, context);
			case ConsolPackage.ENCOUNTERS_ACTIVITY:
				return validateEncountersActivity((EncountersActivity) value, diagnostics, context);
			case ConsolPackage.IMMUNIZATIONS_SECTION:
				return validateImmunizationsSection((ImmunizationsSection) value, diagnostics, context);
			case ConsolPackage.IMMUNIZATION:
				return validateImmunization((Immunization) value, diagnostics, context);
			case ConsolPackage.PAYERS_SECTION:
				return validatePayersSection((PayersSection) value, diagnostics, context);
			case ConsolPackage.INSURANCE_PROVIDER:
				return validateInsuranceProvider((InsuranceProvider) value, diagnostics, context);
			case ConsolPackage.PAYER_ENTRY:
				return validatePayerEntry((PayerEntry) value, diagnostics, context);
			case ConsolPackage.MEDICATIONS_SECTION:
				return validateMedicationsSection((MedicationsSection) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_SECTION:
				return validatePlanOfCareSection((PlanOfCareSection) value, diagnostics, context);
			case ConsolPackage.PROCEDURE:
				return validateProcedure((Procedure) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_ACTIVITY_ACT:
				return validatePlanOfCareActivityAct((PlanOfCareActivityAct) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_ACTIVITY_ENCOUNTER:
				return validatePlanOfCareActivityEncounter((PlanOfCareActivityEncounter) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_ACTIVITY_OBSERVATION:
				return validatePlanOfCareActivityObservation(
					(PlanOfCareActivityObservation) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_ACTIVITY_PROCEDURE:
				return validatePlanOfCareActivityProcedure((PlanOfCareActivityProcedure) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_ACTIVITY_SUBSTANCE_ADMINISTRATION:
				return validatePlanOfCareActivitySubstanceAdministration(
					(PlanOfCareActivitySubstanceAdministration) value, diagnostics, context);
			case ConsolPackage.PLAN_OF_CARE_ACTIVITY_SUPPLY:
				return validatePlanOfCareActivitySupply((PlanOfCareActivitySupply) value, diagnostics, context);
			case ConsolPackage.PREGNANCY_HISTORY_SECTION:
				return validatePregnancyHistorySection((PregnancyHistorySection) value, diagnostics, context);
			case ConsolPackage.PREGNANCY_OBSERVATION:
				return validatePregnancyObservation((PregnancyObservation) value, diagnostics, context);
			case ConsolPackage.SURGERIES_SECTION:
				return validateSurgeriesSection((SurgeriesSection) value, diagnostics, context);
			case ConsolPackage.EXTERNAL_REFERENCE:
				return validateExternalReference((ExternalReference) value, diagnostics, context);
			case ConsolPackage.PROCEDURE_ENTRY_PROCEDURE_ACTIVITY_PROCEDURE:
				return validateProcedureEntryProcedureActivityProcedure(
					(ProcedureEntryProcedureActivityProcedure) value, diagnostics, context);
			case ConsolPackage.VITAL_SIGNS_SECTION:
				return validateVitalSignsSection((VitalSignsSection) value, diagnostics, context);
			case ConsolPackage.VITAL_SIGNS_ORGANIZER:
				return validateVitalSignsOrganizer((VitalSignsOrganizer) value, diagnostics, context);
			case ConsolPackage.VITAL_SIGN:
				return validateVitalSign((VitalSign) value, diagnostics, context);
			case ConsolPackage.DIAGNOSTIC_RESULTS_SECTION:
				return validateDiagnosticResultsSection((DiagnosticResultsSection) value, diagnostics, context);
			case ConsolPackage.RESULT:
				return validateResult((Result) value, diagnostics, context);
			case ConsolPackage.RESULT_ORGANIZER:
				return validateResultOrganizer((ResultOrganizer) value, diagnostics, context);
			case ConsolPackage.FAMILY_HISTORY_SECTION:
				return validateFamilyHistorySection((FamilyHistorySection) value, diagnostics, context);
			case ConsolPackage.FAMILY_HISTORY:
				return validateFamilyHistory((FamilyHistory) value, diagnostics, context);
			case ConsolPackage.FAMILY_HISTORY_OBSERVATION:
				return validateFamilyHistoryObservation((FamilyHistoryObservation) value, diagnostics, context);
			case ConsolPackage.SOCIAL_HISTORY_SECTION:
				return validateSocialHistorySection((SocialHistorySection) value, diagnostics, context);
			case ConsolPackage.SOCIAL_HISTORY:
				return validateSocialHistory((SocialHistory) value, diagnostics, context);
			case ConsolPackage.SOCIAL_HISTORY_STATUS_OBSERVATION:
				return validateSocialHistoryStatusObservation(
					(SocialHistoryStatusObservation) value, diagnostics, context);
			case ConsolPackage.RESULTS_SECTION:
				return validateResultsSection((ResultsSection) value, diagnostics, context);
			case ConsolPackage.MEDICAL_EQUIPMENT_SECTION:
				return validateMedicalEquipmentSection((MedicalEquipmentSection) value, diagnostics, context);
			case ConsolPackage.FUNCTIONAL_STATUS_SECTION:
				return validateFunctionalStatusSection((FunctionalStatusSection) value, diagnostics, context);
			case ConsolPackage.PURPOSE_SECTION:
				return validatePurposeSection((PurposeSection) value, diagnostics, context);
			case ConsolPackage.PURPOSE_ACTIVITY:
				return validatePurposeActivity((PurposeActivity) value, diagnostics, context);
			case ConsolPackage.ADVANCE_DIRECTIVE_VERIFICATION:
				return validateAdvanceDirectiveVerification((AdvanceDirectiveVerification) value, diagnostics, context);
			case ConsolPackage.ADVANCE_DIRECTIVE_REFERENCE:
				return validateAdvanceDirectiveReference((AdvanceDirectiveReference) value, diagnostics, context);
			case ConsolPackage.ENCOUNTER_LOCATION:
				return validateEncounterLocation((EncounterLocation) value, diagnostics, context);
			case ConsolPackage.PAYER_ENTITY:
				return validatePayerEntity((PayerEntity) value, diagnostics, context);
			case ConsolPackage.COVERED_PARTY:
				return validateCoveredParty((CoveredParty) value, diagnostics, context);
			case ConsolPackage.POLICY_SUBSCRIBER:
				return validatePolicySubscriber((PolicySubscriber) value, diagnostics, context);
			case ConsolPackage.SUPPORT_GUARDIAN:
				return validateSupportGuardian((SupportGuardian) value, diagnostics, context);
			case ConsolPackage.HISTORY_OF_PAST_ILLNESS_SECTION:
				return validateHistoryOfPastIllnessSection((HistoryOfPastIllnessSection) value, diagnostics, context);
			case ConsolPackage.CHIEF_COMPLAINT_SECTION:
				return validateChiefComplaintSection((ChiefComplaintSection) value, diagnostics, context);
			case ConsolPackage.REASON_FOR_REFERRAL_SECTION:
				return validateReasonForReferralSection((ReasonForReferralSection) value, diagnostics, context);
			case ConsolPackage.HISTORY_OF_PRESENT_ILLNESS:
				return validateHistoryOfPresentIllness((HistoryOfPresentIllness) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_ADMISSION_DIAGNOSIS_SECTION:
				return validateHospitalAdmissionDiagnosisSection(
					(HospitalAdmissionDiagnosisSection) value, diagnostics, context);
			case ConsolPackage.DISCHARGE_DIAGNOSIS_SECTION:
				return validateDischargeDiagnosisSection((DischargeDiagnosisSection) value, diagnostics, context);
			case ConsolPackage.ADMISSION_MEDICATION_HISTORY_SECTION:
				return validateAdmissionMedicationHistorySection(
					(AdmissionMedicationHistorySection) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_DISCHARGE_MEDICATIONS_SECTION:
				return validateHospitalDischargeMedicationsSection(
					(HospitalDischargeMedicationsSection) value, diagnostics, context);
			case ConsolPackage.MEDICATIONS_ADMINISTERED_SECTION:
				return validateMedicationsAdministeredSection(
					(MedicationsAdministeredSection) value, diagnostics, context);
			case ConsolPackage.PHYSICAL_EXAM_SECTION:
				return validatePhysicalExamSection((PhysicalExamSection) value, diagnostics, context);
			case ConsolPackage.GENERAL_APPEARANCE_SECTION:
				return validateGeneralAppearanceSection((GeneralAppearanceSection) value, diagnostics, context);
			case ConsolPackage.VISIBLE_IMPLANTED_MEDICAL_DEVICES_SECTION:
				return validateVisibleImplantedMedicalDevicesSection(
					(VisibleImplantedMedicalDevicesSection) value, diagnostics, context);
			case ConsolPackage.INTEGUMENTARY_SYSTEM_SECTION:
				return validateIntegumentarySystemSection((IntegumentarySystemSection) value, diagnostics, context);
			case ConsolPackage.HEAD_SECTION:
				return validateHeadSection((HeadSection) value, diagnostics, context);
			case ConsolPackage.EYES_SECTION:
				return validateEyesSection((EyesSection) value, diagnostics, context);
			case ConsolPackage.EARS_NOSE_MOUTH_THROAT_SECTION:
				return validateEarsNoseMouthThroatSection((EarsNoseMouthThroatSection) value, diagnostics, context);
			case ConsolPackage.EARS_SECTION:
				return validateEarsSection((EarsSection) value, diagnostics, context);
			case ConsolPackage.NOSE_SECTION:
				return validateNoseSection((NoseSection) value, diagnostics, context);
			case ConsolPackage.MOUTH_THROAT_TEETH_SECTION:
				return validateMouthThroatTeethSection((MouthThroatTeethSection) value, diagnostics, context);
			case ConsolPackage.NECK_SECTION:
				return validateNeckSection((NeckSection) value, diagnostics, context);
			case ConsolPackage.ENDOCRINE_SYSTEM_SECTION:
				return validateEndocrineSystemSection((EndocrineSystemSection) value, diagnostics, context);
			case ConsolPackage.THORAX_LUNGS_SECTION:
				return validateThoraxLungsSection((ThoraxLungsSection) value, diagnostics, context);
			case ConsolPackage.CHEST_WALL_SECTION:
				return validateChestWallSection((ChestWallSection) value, diagnostics, context);
			case ConsolPackage.BREAST_SECTION:
				return validateBreastSection((BreastSection) value, diagnostics, context);
			case ConsolPackage.HEART_SECTION:
				return validateHeartSection((HeartSection) value, diagnostics, context);
			case ConsolPackage.RESPIRATORY_SYSTEM_SECTION:
				return validateRespiratorySystemSection((RespiratorySystemSection) value, diagnostics, context);
			case ConsolPackage.ABDOMEN_SECTION:
				return validateAbdomenSection((AbdomenSection) value, diagnostics, context);
			case ConsolPackage.LYMPHATIC_SECTION:
				return validateLymphaticSection((LymphaticSection) value, diagnostics, context);
			case ConsolPackage.VESSELS_SECTION:
				return validateVesselsSection((VesselsSection) value, diagnostics, context);
			case ConsolPackage.MUSCULOSKELETAL_SYSTEM_SECTION:
				return validateMusculoskeletalSystemSection((MusculoskeletalSystemSection) value, diagnostics, context);
			case ConsolPackage.NEUROLOGIC_SYSTEM_SECTION:
				return validateNeurologicSystemSection((NeurologicSystemSection) value, diagnostics, context);
			case ConsolPackage.GENITALIA_SECTION:
				return validateGenitaliaSection((GenitaliaSection) value, diagnostics, context);
			case ConsolPackage.RECTUM_SECTION:
				return validateRectumSection((RectumSection) value, diagnostics, context);
			case ConsolPackage.EXTREMITIES_SECTION:
				return validateExtremitiesSection((ExtremitiesSection) value, diagnostics, context);
			case ConsolPackage.REVIEW_OF_SYSTEMS_SECTION:
				return validateReviewOfSystemsSection((ReviewOfSystemsSection) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_COURSE_SECTION:
				return validateHospitalCourseSection((HospitalCourseSection) value, diagnostics, context);
			case ConsolPackage.ASSESSMENT_AND_PLAN_SECTION:
				return validateAssessmentAndPlanSection((AssessmentAndPlanSection) value, diagnostics, context);
			case ConsolPackage.LANGUAGE_SPOKEN:
				return validateLanguageSpoken((LanguageSpoken) value, diagnostics, context);
			case ConsolPackage.HEALTHCARE_PROVIDER:
				return validateHealthcareProvider((HealthcareProvider) value, diagnostics, context);
			case ConsolPackage.MEDICATION_NORMAL_DOSE:
				return validateMedicationNormalDose((MedicationNormalDose) value, diagnostics, context);
			case ConsolPackage.MEDICATION_SPLIT_DOSE:
				return validateMedicationSplitDose((MedicationSplitDose) value, diagnostics, context);
			case ConsolPackage.MEDICATION_TAPERED_DOSE:
				return validateMedicationTaperedDose((MedicationTaperedDose) value, diagnostics, context);
			case ConsolPackage.MEDICATION_CONDITIONAL_DOSE:
				return validateMedicationConditionalDose((MedicationConditionalDose) value, diagnostics, context);
			case ConsolPackage.MEDICATION_COMBINATION_MEDICATION:
				return validateMedicationCombinationMedication(
					(MedicationCombinationMedication) value, diagnostics, context);
			case ConsolPackage.SUPPORT_PARTICIPANT:
				return validateSupportParticipant((SupportParticipant) value, diagnostics, context);
			case ConsolPackage.UNSTRUCTURED_DOCUMENT:
				return validateUnstructuredDocument((UnstructuredDocument) value, diagnostics, context);
			case ConsolPackage.SCAN_ORIGINAL_AUTHOR:
				return validateScanOriginalAuthor((ScanOriginalAuthor) value, diagnostics, context);
			case ConsolPackage.SCANNING_DEVICE:
				return validateScanningDevice((ScanningDevice) value, diagnostics, context);
			case ConsolPackage.SCAN_DATA_ENTERER:
				return validateScanDataEnterer((ScanDataEnterer) value, diagnostics, context);
			case ConsolPackage.MEDICATION_INFORMATION:
				return validateMedicationInformation((MedicationInformation) value, diagnostics, context);
			case ConsolPackage.UNSTRUCTURED_OR_SCANNED_DOCUMENT:
				return validateUnstructuredOrScannedDocument(
					(UnstructuredOrScannedDocument) value, diagnostics, context);
			case ConsolPackage.REFERRAL_SUMMARY:
				return validateReferralSummary((ReferralSummary) value, diagnostics, context);
			case ConsolPackage.DISCHARGE_SUMMARY:
				return validateDischargeSummary((DischargeSummary) value, diagnostics, context);
			case ConsolPackage.DISCHARGE_DIET:
				return validateDischargeDiet((DischargeDiet) value, diagnostics, context);
			case ConsolPackage.HISTORY_AND_PHYSICAL:
				return validateHistoryAndPhysical((HistoryAndPhysical) value, diagnostics, context);
			case ConsolPackage.IHE_HISTORY_OF_PRESENT_ILLNESS:
				return validateIHEHistoryOfPresentIllness((IHEHistoryOfPresentIllness) value, diagnostics, context);
			case ConsolPackage.REVIEW_OF_SYSTEMS_SECTION_IHE:
				return validateReviewOfSystemsSectionIHE((ReviewOfSystemsSectionIHE) value, diagnostics, context);
			case ConsolPackage.CCD_VITAL_SIGNS_SECTION:
				return validateCCDVitalSignsSection((CCDVitalSignsSection) value, diagnostics, context);
			case ConsolPackage.GENERAL_STATUS_SECTION:
				return validateGeneralStatusSection((GeneralStatusSection) value, diagnostics, context);
			case ConsolPackage.DIAGNOSTIC_FINDINGS:
				return validateDiagnosticFindings((DiagnosticFindings) value, diagnostics, context);
			case ConsolPackage.CONSULTATION_NOTE:
				return validateConsultationNote((ConsultationNote) value, diagnostics, context);
			case ConsolPackage.PAST_MEDICAL_HISTORY_SECTION_CONSULT:
				return validatePastMedicalHistorySectionConsult(
					(PastMedicalHistorySectionConsult) value, diagnostics, context);
			case ConsolPackage.REASON_FOR_VISIT_SECTION_CONSULT:
				return validateReasonForVisitSectionConsult((ReasonForVisitSectionConsult) value, diagnostics, context);
			case ConsolPackage.LEVEL_ONE_CONFORMANCE:
				return validateLevelOneConformance((LevelOneConformance) value, diagnostics, context);
			case ConsolPackage.LEVEL_TWO_CONFORMANCE:
				return validateLevelTwoConformance((LevelTwoConformance) value, diagnostics, context);
			case ConsolPackage.LEVEL_THREE_CONFORMANCE:
				return validateLevelThreeConformance((LevelThreeConformance) value, diagnostics, context);
			case ConsolPackage.ASSESSMENT_SECTION:
				return validateAssessmentSection((AssessmentSection) value, diagnostics, context);
			case ConsolPackage.PLAN_SECTION:
				return validatePlanSection((PlanSection) value, diagnostics, context);
			case ConsolPackage.REASON_FOR_VISIT_SECTION:
				return validateReasonForVisitSection((ReasonForVisitSection) value, diagnostics, context);
			case ConsolPackage.REASON_FOR_VISIT_AND_CHIEF_COMPLAINT_SECTION:
				return validateReasonForVisitAndChiefComplaintSection(
					(ReasonForVisitAndChiefComplaintSection) value, diagnostics, context);
			case ConsolPackage.PROGRESS_NOTE:
				return validateProgressNote((ProgressNote) value, diagnostics, context);
			case ConsolPackage.ASSESSMENT_AND_PLAN_SECTION_PROC_NOTE:
				return validateAssessmentAndPlanSectionProcNote(
					(AssessmentAndPlanSectionProcNote) value, diagnostics, context);
			case ConsolPackage.ASSESSMENT_SECTION_PROC_NOTE:
				return validateAssessmentSectionProcNote((AssessmentSectionProcNote) value, diagnostics, context);
			case ConsolPackage.CHIEF_COMPLAINT_SECTION_PROC_NOTE:
				return validateChiefComplaintSectionProcNote(
					(ChiefComplaintSectionProcNote) value, diagnostics, context);
			case ConsolPackage.OBJECTIVE_SECTION:
				return validateObjectiveSection((ObjectiveSection) value, diagnostics, context);
			case ConsolPackage.SUBJECTIVE_SECTION:
				return validateSubjectiveSection((SubjectiveSection) value, diagnostics, context);
			case ConsolPackage.HOSPITAL_DISCHARGE_STUDIES_SUMMARY_SECTION:
				return validateHospitalDischargeStudiesSummarySection(
					(HospitalDischargeStudiesSummarySection) value, diagnostics, context);
			default:
				return true;
		}
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity(AllergyDrugSensitivity allergyDrugSensitivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(allergyDrugSensitivity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(allergyDrugSensitivity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityEntryRelationshipRequired(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivitySubjectOfTarget(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityContainsProblemObservation(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityContainsAlertObservation(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityContainsPatientAwareness(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityEffectiveTimeLowHigh(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityHasRelatedObservations(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityRelatedObservationsTypeCode(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityHasRelatedReferencesTypeCode(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAdvereEventDate(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAdvereEventType(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAdvereEventTypeVocab(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAllergyProduct(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAllergyProductTypeCode(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityProductDetailParticipantRole(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityProductDetailParticipantRoleClassCode(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityProductDetailPlayingEntity(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityProductDetailPlayingEntityClassCode(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityProductDetailName(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityProductCode(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAllergyProductFoodVocab(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAllergyProductMedClassVocab(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAllergyProductSpecificMedVocab(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityReactionText(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityReactionCode(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityReactionCodeVocab(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivitySeverityText(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivitySeverityCode(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivitySeverityCodeVocab(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityTemplateId(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityClassCode(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityMoodCode(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityId(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityCodeNullFlavor(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityEffectiveTime(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityEpisodeObservation(
				allergyDrugSensitivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAllergyIntolerance(
				allergyDrugSensitivity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAllergyDrugSensitivityEntryRelationshipRequired constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityEntryRelationshipRequired(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityEntryRelationshipRequired(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivitySubjectOfTarget constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivitySubjectOfTarget(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivitySubjectOfTarget(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityContainsProblemObservation constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityContainsProblemObservation(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityContainsProblemObservation(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityContainsAlertObservation constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityContainsAlertObservation(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityContainsAlertObservation(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityContainsPatientAwareness constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityContainsPatientAwareness(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityContainsPatientAwareness(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityEffectiveTimeLowHigh constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityEffectiveTimeLowHigh(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityEffectiveTimeLowHigh(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityHasRelatedObservations constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityHasRelatedObservations(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityHasRelatedObservations(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityRelatedObservationsTypeCode constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityRelatedObservationsTypeCode(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityRelatedObservationsTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityHasRelatedReferencesTypeCode constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityHasRelatedReferencesTypeCode(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityHasRelatedReferencesTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityAdvereEventDate constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAdvereEventDate(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityAdvereEventDate(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityAdvereEventType constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAdvereEventType(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityAdvereEventType(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityAdvereEventTypeVocab constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAdvereEventTypeVocab(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityAdvereEventTypeVocab(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityAllergyProduct constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAllergyProduct(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityAllergyProduct(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityAllergyProductTypeCode constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAllergyProductTypeCode(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityAllergyProductTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityProductDetailParticipantRole constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityProductDetailParticipantRole(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityProductDetailParticipantRole(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityProductDetailParticipantRoleClassCode constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityProductDetailParticipantRoleClassCode(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityProductDetailParticipantRoleClassCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityProductDetailPlayingEntity constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityProductDetailPlayingEntity(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityProductDetailPlayingEntity(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityProductDetailPlayingEntityClassCode constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityProductDetailPlayingEntityClassCode(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityProductDetailPlayingEntityClassCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityProductDetailName constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityProductDetailName(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityProductDetailName(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityProductCode constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityProductCode(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityProductCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityAllergyProductFoodVocab constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAllergyProductFoodVocab(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityAllergyProductFoodVocab(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityAllergyProductMedClassVocab constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAllergyProductMedClassVocab(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityAllergyProductMedClassVocab(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityAllergyProductSpecificMedVocab constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAllergyProductSpecificMedVocab(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityAllergyProductSpecificMedVocab(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityReactionText constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityReactionText(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityReactionText(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityReactionCode constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityReactionCode(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityReactionCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityReactionCodeVocab constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityReactionCodeVocab(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityReactionCodeVocab(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivitySeverityText constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivitySeverityText(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivitySeverityText(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivitySeverityCode constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivitySeverityCode(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivitySeverityCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivitySeverityCodeVocab constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivitySeverityCodeVocab(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivitySeverityCodeVocab(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityTemplateId constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityTemplateId(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityClassCode constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityClassCode(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityMoodCode constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityMoodCode(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityId constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityId(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityId(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityCodeNullFlavor constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityCodeNullFlavor(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityCodeNullFlavor(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityEffectiveTime constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityEffectiveTime(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityEpisodeObservation constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityEpisodeObservation(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityEpisodeObservation(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyDrugSensitivityAllergyIntolerance constraint of '<em>Allergy Drug Sensitivity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyDrugSensitivity_validateAllergyDrugSensitivityAllergyIntolerance(
			AllergyDrugSensitivity allergyDrugSensitivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyDrugSensitivity.validateAllergyDrugSensitivityAllergyIntolerance(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEpisodeObservation(EpisodeObservation episodeObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(episodeObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(episodeObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(episodeObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(episodeObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(episodeObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(episodeObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(episodeObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(episodeObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEpisodeObservation_validateEpisodeObservationOneEntryRelationshipSUBJ(
				episodeObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEpisodeObservation_validateEpisodeObservationExistsEntryRelationshipSAS(
				episodeObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEpisodeObservation_validateEpisodeObservationTemplateId(
				episodeObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEpisodeObservation_validateEpisodeObservationClassCode(
				episodeObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEpisodeObservation_validateEpisodeObservationMoodCode(
				episodeObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEpisodeObservation_validateEpisodeObservationCode(
				episodeObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEpisodeObservation_validateEpisodeObservationStatusCode(
				episodeObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEpisodeObservation_validateEpisodeObservationValue(
				episodeObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEpisodeObservationOneEntryRelationshipSUBJ constraint of '<em>Episode Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEpisodeObservation_validateEpisodeObservationOneEntryRelationshipSUBJ(
			EpisodeObservation episodeObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return episodeObservation.validateEpisodeObservationOneEntryRelationshipSUBJ(diagnostics, context);
	}

	/**
	 * Validates the validateEpisodeObservationExistsEntryRelationshipSAS constraint of '<em>Episode Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEpisodeObservation_validateEpisodeObservationExistsEntryRelationshipSAS(
			EpisodeObservation episodeObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return episodeObservation.validateEpisodeObservationExistsEntryRelationshipSAS(diagnostics, context);
	}

	/**
	 * Validates the validateEpisodeObservationTemplateId constraint of '<em>Episode Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEpisodeObservation_validateEpisodeObservationTemplateId(
			EpisodeObservation episodeObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return episodeObservation.validateEpisodeObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEpisodeObservationClassCode constraint of '<em>Episode Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEpisodeObservation_validateEpisodeObservationClassCode(
			EpisodeObservation episodeObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return episodeObservation.validateEpisodeObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateEpisodeObservationMoodCode constraint of '<em>Episode Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEpisodeObservation_validateEpisodeObservationMoodCode(EpisodeObservation episodeObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return episodeObservation.validateEpisodeObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateEpisodeObservationCode constraint of '<em>Episode Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEpisodeObservation_validateEpisodeObservationCode(EpisodeObservation episodeObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return episodeObservation.validateEpisodeObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateEpisodeObservationStatusCode constraint of '<em>Episode Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEpisodeObservation_validateEpisodeObservationStatusCode(
			EpisodeObservation episodeObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return episodeObservation.validateEpisodeObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateEpisodeObservationValue constraint of '<em>Episode Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEpisodeObservation_validateEpisodeObservationValue(EpisodeObservation episodeObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return episodeObservation.validateEpisodeObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance(AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(allergyIntolerance, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(allergyIntolerance, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceInformationSource(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceContainsPatientAwareness(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceHasTextReference(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceCommentInversionInd(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceCodeCodeSystemRequired(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceDisplayNameCodeName(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstance(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstanceTypeCode(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstanceParticipantRole(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstanceParticipantRoleClassCode(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstancePlayingEntity(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstancePlayingEntityClassCode(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstancePlayingEntityCode(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntolerancePlayingEntityCodeReference(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceTemplateId(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceMoodCode(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceId(allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceCode(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceText(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceStatusCode(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceEffectiveTime(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceValue(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceProblemEntryReactionObservationContainer(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceSeverity(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceProblemStatusObservation(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceComment(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceAgeObservation(
				allergyIntolerance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergyIntolerance_validateAllergyIntoleranceHealthStatusObservation(
				allergyIntolerance, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAllergyIntoleranceInformationSource constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceInformationSource(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceContainsPatientAwareness constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceContainsPatientAwareness(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceContainsPatientAwareness(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceHasTextReference constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceHasTextReference(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceHasTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceCommentInversionInd constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceCommentInversionInd(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceCommentInversionInd(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceCodeCodeSystemRequired constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceCodeCodeSystemRequired(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceCodeCodeSystemRequired(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceDisplayNameCodeName constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceDisplayNameCodeName(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceDisplayNameCodeName(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceAllergySubstance constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstance(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceAllergySubstance(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceAllergySubstanceTypeCode constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstanceTypeCode(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceAllergySubstanceTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceAllergySubstanceParticipantRole constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstanceParticipantRole(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceAllergySubstanceParticipantRole(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceAllergySubstanceParticipantRoleClassCode constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstanceParticipantRoleClassCode(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceAllergySubstanceParticipantRoleClassCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceAllergySubstancePlayingEntity constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstancePlayingEntity(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceAllergySubstancePlayingEntity(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceAllergySubstancePlayingEntityClassCode constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstancePlayingEntityClassCode(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceAllergySubstancePlayingEntityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceAllergySubstancePlayingEntityCode constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceAllergySubstancePlayingEntityCode(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceAllergySubstancePlayingEntityCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntolerancePlayingEntityCodeReference constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntolerancePlayingEntityCodeReference(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntolerancePlayingEntityCodeReference(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceTemplateId constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceTemplateId(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceMoodCode constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceMoodCode(AllergyIntolerance allergyIntolerance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceId constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceId(AllergyIntolerance allergyIntolerance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceId(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceCode constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceCode(AllergyIntolerance allergyIntolerance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceText constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceText(AllergyIntolerance allergyIntolerance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceText(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceStatusCode constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceStatusCode(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceEffectiveTime constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceEffectiveTime(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceValue constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceValue(AllergyIntolerance allergyIntolerance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceValue(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceProblemEntryReactionObservationContainer constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceProblemEntryReactionObservationContainer(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceProblemEntryReactionObservationContainer(
			diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceSeverity constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceSeverity(AllergyIntolerance allergyIntolerance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceSeverity(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceProblemStatusObservation constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceProblemStatusObservation(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceProblemStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceComment constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceComment(AllergyIntolerance allergyIntolerance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceComment(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceAgeObservation constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceAgeObservation(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceAgeObservation(diagnostics, context);
	}

	/**
	 * Validates the validateAllergyIntoleranceHealthStatusObservation constraint of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergyIntolerance_validateAllergyIntoleranceHealthStatusObservation(
			AllergyIntolerance allergyIntolerance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return allergyIntolerance.validateAllergyIntoleranceHealthStatusObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(problemEntryReactionObservationContainer, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			problemEntryReactionObservationContainer, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerHasReactionIntervention(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerReactionInterventionTypeCode(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerReactionInterventionType(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerInformationSource(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerContainsPatientAwareness(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerHasTextReference(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerCommentInversionInd(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerTemplateId(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerMoodCode(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerId(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerCode(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerText(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerStatusCode(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerEffectiveTime(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerValue(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerAgeObservation(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerSeverity(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerProblemStatusObservation(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerHealthStatusObservation(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerComment(
				problemEntryReactionObservationContainer, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerHasReactionIntervention constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerHasReactionIntervention(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerHasReactionIntervention(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerReactionInterventionTypeCode constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerReactionInterventionTypeCode(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerReactionInterventionTypeCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerReactionInterventionType constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerReactionInterventionType(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerReactionInterventionType(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerInformationSource constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerInformationSource(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerInformationSource(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerContainsPatientAwareness constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerContainsPatientAwareness(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerContainsPatientAwareness(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerHasTextReference constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerHasTextReference(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerHasTextReference(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerCommentInversionInd constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerCommentInversionInd(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerCommentInversionInd(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerTemplateId constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerTemplateId(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerMoodCode constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerMoodCode(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerMoodCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerId constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerId(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerId(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerCode constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerCode(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerText constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerText(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerText(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerStatusCode constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerStatusCode(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerStatusCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerEffectiveTime constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerEffectiveTime(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerEffectiveTime(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerValue constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerValue(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerValue(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerAgeObservation constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerAgeObservation(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerAgeObservation(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerSeverity constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerSeverity(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerSeverity(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerProblemStatusObservation constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerProblemStatusObservation(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerProblemStatusObservation(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerHealthStatusObservation constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerHealthStatusObservation(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerHealthStatusObservation(
			diagnostics, context);
	}

	/**
	 * Validates the validateProblemEntryReactionObservationContainerComment constraint of '<em>Problem Entry Reaction Observation Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemEntryReactionObservationContainer_validateProblemEntryReactionObservationContainerComment(
			ProblemEntryReactionObservationContainer problemEntryReactionObservationContainer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemEntryReactionObservationContainer.validateProblemEntryReactionObservationContainerComment(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation(AgeObservation ageObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(ageObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(ageObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAgeObservation_validateAgeObservationTemplateId(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAgeObservation_validateAgeObservationClassCode(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAgeObservation_validateAgeObservationMoodCode(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAgeObservation_validateAgeObservationCode(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAgeObservation_validateAgeObservationStatusCode(ageObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAgeObservation_validateAgeObservationValue(ageObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAgeObservationTemplateId constraint of '<em>Age Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation_validateAgeObservationTemplateId(AgeObservation ageObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ageObservation.validateAgeObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAgeObservationClassCode constraint of '<em>Age Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation_validateAgeObservationClassCode(AgeObservation ageObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ageObservation.validateAgeObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateAgeObservationMoodCode constraint of '<em>Age Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation_validateAgeObservationMoodCode(AgeObservation ageObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ageObservation.validateAgeObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateAgeObservationCode constraint of '<em>Age Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation_validateAgeObservationCode(AgeObservation ageObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ageObservation.validateAgeObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateAgeObservationStatusCode constraint of '<em>Age Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation_validateAgeObservationStatusCode(AgeObservation ageObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ageObservation.validateAgeObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateAgeObservationValue constraint of '<em>Age Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAgeObservation_validateAgeObservationValue(AgeObservation ageObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ageObservation.validateAgeObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverity(Severity severity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(severity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(severity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(severity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(severity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(severity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(severity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(severity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(severity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverity_validateSeverityHasTextReference(severity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverity_validateSeverityTemplateId(severity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverity_validateSeverityClassCode(severity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverity_validateSeverityMoodCode(severity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverity_validateSeverityCode(severity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverity_validateSeverityText(severity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverity_validateSeverityStatusCode(severity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSeverity_validateSeverityValue(severity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSeverityHasTextReference constraint of '<em>Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverity_validateSeverityHasTextReference(Severity severity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return severity.validateSeverityHasTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityTemplateId constraint of '<em>Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverity_validateSeverityTemplateId(Severity severity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return severity.validateSeverityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityClassCode constraint of '<em>Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverity_validateSeverityClassCode(Severity severity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return severity.validateSeverityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityMoodCode constraint of '<em>Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverity_validateSeverityMoodCode(Severity severity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return severity.validateSeverityMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityCode constraint of '<em>Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverity_validateSeverityCode(Severity severity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return severity.validateSeverityCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityText constraint of '<em>Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverity_validateSeverityText(Severity severity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return severity.validateSeverityText(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityStatusCode constraint of '<em>Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverity_validateSeverityStatusCode(Severity severity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return severity.validateSeverityStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeverityValue constraint of '<em>Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeverity_validateSeverityValue(Severity severity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return severity.validateSeverityValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatusObservation(ProblemStatusObservation problemStatusObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(problemStatusObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(problemStatusObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatusObservation_validateProblemStatusObservationTargetOfEntryRelationship(
				problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatusObservation_validateProblemStatusObservationNoAdditionalParticipants(
				problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatusObservation_validateProblemStatusObservationNoAdditionalRelationships(
				problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatusObservation_validateProblemStatusObservationHasTextReference(
				problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatusObservation_validateProblemStatusObservationTemplateId(
				problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatusObservation_validateProblemStatusObservationClassCode(
				problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatusObservation_validateProblemStatusObservationMoodCode(
				problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatusObservation_validateProblemStatusObservationCode(
				problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatusObservation_validateProblemStatusObservationText(
				problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatusObservation_validateProblemStatusObservationStatusCode(
				problemStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemStatusObservation_validateProblemStatusObservationValue(
				problemStatusObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProblemStatusObservationTargetOfEntryRelationship constraint of '<em>Problem Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatusObservation_validateProblemStatusObservationTargetOfEntryRelationship(
			ProblemStatusObservation problemStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatusObservation.validateProblemStatusObservationTargetOfEntryRelationship(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusObservationNoAdditionalParticipants constraint of '<em>Problem Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatusObservation_validateProblemStatusObservationNoAdditionalParticipants(
			ProblemStatusObservation problemStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatusObservation.validateProblemStatusObservationNoAdditionalParticipants(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusObservationNoAdditionalRelationships constraint of '<em>Problem Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatusObservation_validateProblemStatusObservationNoAdditionalRelationships(
			ProblemStatusObservation problemStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatusObservation.validateProblemStatusObservationNoAdditionalRelationships(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusObservationHasTextReference constraint of '<em>Problem Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatusObservation_validateProblemStatusObservationHasTextReference(
			ProblemStatusObservation problemStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatusObservation.validateProblemStatusObservationHasTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusObservationTemplateId constraint of '<em>Problem Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatusObservation_validateProblemStatusObservationTemplateId(
			ProblemStatusObservation problemStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatusObservation.validateProblemStatusObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusObservationClassCode constraint of '<em>Problem Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatusObservation_validateProblemStatusObservationClassCode(
			ProblemStatusObservation problemStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatusObservation.validateProblemStatusObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusObservationMoodCode constraint of '<em>Problem Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatusObservation_validateProblemStatusObservationMoodCode(
			ProblemStatusObservation problemStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatusObservation.validateProblemStatusObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusObservationCode constraint of '<em>Problem Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatusObservation_validateProblemStatusObservationCode(
			ProblemStatusObservation problemStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatusObservation.validateProblemStatusObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusObservationText constraint of '<em>Problem Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatusObservation_validateProblemStatusObservationText(
			ProblemStatusObservation problemStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatusObservation.validateProblemStatusObservationText(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusObservationStatusCode constraint of '<em>Problem Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatusObservation_validateProblemStatusObservationStatusCode(
			ProblemStatusObservation problemStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatusObservation.validateProblemStatusObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemStatusObservationValue constraint of '<em>Problem Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemStatusObservation_validateProblemStatusObservationValue(
			ProblemStatusObservation problemStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemStatusObservation.validateProblemStatusObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation(HealthStatusObservation healthStatusObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(healthStatusObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(healthStatusObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationTargetOfEntryRelationship(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationNoAdditionalParticipants(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationNoAdditionalRelationships(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationHasTextReference(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationTemplateId(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationClassCode(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationMoodCode(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationCode(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationText(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationStatusCode(
				healthStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthStatusObservation_validateHealthStatusObservationValue(
				healthStatusObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHealthStatusObservationTargetOfEntryRelationship constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationTargetOfEntryRelationship(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationTargetOfEntryRelationship(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationNoAdditionalParticipants constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationNoAdditionalParticipants(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationNoAdditionalParticipants(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationNoAdditionalRelationships constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationNoAdditionalRelationships(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationNoAdditionalRelationships(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationHasTextReference constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationHasTextReference(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationHasTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationTemplateId constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationTemplateId(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationClassCode constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationClassCode(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationMoodCode constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationMoodCode(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationCode constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationCode(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationText constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationText(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationText(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationStatusCode constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationStatusCode(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateHealthStatusObservationValue constraint of '<em>Health Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthStatusObservation_validateHealthStatusObservationValue(
			HealthStatusObservation healthStatusObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthStatusObservation.validateHealthStatusObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment(Comment comment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(comment, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(comment, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentHasTextReference(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentEffectiveTimeWhenAuthorPresent(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentHasAuthorId(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentHasAuthorOrganization(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentTemplateId(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentClassCode(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentMoodCode(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentCode(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentText(comment, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateComment_validateCommentStatusCode(comment, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateCommentHasTextReference constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentHasTextReference(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentHasTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateCommentEffectiveTimeWhenAuthorPresent constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentEffectiveTimeWhenAuthorPresent(Comment comment,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return comment.validateCommentEffectiveTimeWhenAuthorPresent(diagnostics, context);
	}

	/**
	 * Validates the validateCommentHasAuthorId constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentHasAuthorId(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentHasAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateCommentHasAuthorOrganization constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentHasAuthorOrganization(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentHasAuthorOrganization(diagnostics, context);
	}

	/**
	 * Validates the validateCommentTemplateId constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentTemplateId(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateCommentClassCode constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentClassCode(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateCommentMoodCode constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentMoodCode(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateCommentCode constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentCode(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentCode(diagnostics, context);
	}

	/**
	 * Validates the validateCommentText constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentText(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentText(diagnostics, context);
	}

	/**
	 * Validates the validateCommentStatusCode constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentStatusCode(Comment comment, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return comment.validateCommentStatusCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication(Medication medication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medication, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medication, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSubstanceAdministration_validateClassCode(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMoodCode(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDoseQuantityOrRateQuantity(
				medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasConsents(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationInformationSource(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasPreconditionCriterion(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasReason(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasReasonProblem(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasProduct(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDosing(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDosingRelationship(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDescriptionNoMedNotKnown(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationReasonClassMood(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasProductEntry(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIntructionsInversion(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductStrength(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductName(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationPreconditionReference(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasSupplyEntryInversion(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasFillNumber(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationFirstEffectiveTimeDatatype(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDoseUnits(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDeliveryMethodDescription(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasMedicationInformation(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasStatusOfMedication(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndication(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndicationNarrativeText(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndicationVocab(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasPatientInstructions(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasMedicationVehicle(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleType(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleClass(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCode(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleName(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCodedName(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCodedNameVocab(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationTemplateId(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationId(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationCode(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationStatusCode(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationEffectiveTime(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationRouteCode(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationApproachSiteCode(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDoseQuantity(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationRateQuantity(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMaxDoseQuantity(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationAdministrationUnitCode(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMedicationSeriesNumberObservation(
				medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMedicationStatusObservation(medication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductInstance(medication, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationMoodCode constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationMoodCode(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasDoseQuantityOrRateQuantity constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasDoseQuantityOrRateQuantity(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasDoseQuantityOrRateQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasConsents constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasConsents(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationHasConsents(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationSource constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationInformationSource(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasPreconditionCriterion constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasPreconditionCriterion(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasPreconditionCriterion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasReason constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasReason(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationHasReason(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasReasonProblem constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasReasonProblem(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasReasonProblem(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasProduct constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasProduct(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationHasProduct(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasDosing constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasDosing(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationHasDosing(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationDosingRelationship constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationDosingRelationship(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationDosingRelationship(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasDescriptionNoMedNotKnown constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasDescriptionNoMedNotKnown(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasDescriptionNoMedNotKnown(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationReasonClassMood constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationReasonClassMood(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationReasonClassMood(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasProductEntry constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasProductEntry(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasProductEntry(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasIntructionsInversion constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasIntructionsInversion(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasIntructionsInversion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationProductStrength constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationProductStrength(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationProductStrength(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationProductName constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationProductName(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationProductName(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationPreconditionReference constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationPreconditionReference(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationPreconditionReference(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasSupplyEntryInversion constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasSupplyEntryInversion(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasSupplyEntryInversion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasFillNumber constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasFillNumber(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasFillNumber(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationFirstEffectiveTimeDatatype constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationFirstEffectiveTimeDatatype(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationFirstEffectiveTimeDatatype(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationDoseUnits constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationDoseUnits(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationDoseUnits(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationDeliveryMethodDescription constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationDeliveryMethodDescription(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationDeliveryMethodDescription(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasMedicationInformation constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasMedicationInformation(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasMedicationInformation(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasStatusOfMedication constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasStatusOfMedication(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasStatusOfMedication(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasIndication constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasIndication(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasIndication(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasIndicationNarrativeText constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasIndicationNarrativeText(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasIndicationNarrativeText(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasIndicationVocab constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasIndicationVocab(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasIndicationVocab(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasPatientInstructions constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasPatientInstructions(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasPatientInstructions(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationHasMedicationVehicle constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationHasMedicationVehicle(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationHasMedicationVehicle(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationVehicleType constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationVehicleType(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationVehicleType(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationVehicleClass constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationVehicleClass(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationVehicleClass(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationVehicleCode constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationVehicleCode(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationVehicleCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationVehicleName constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationVehicleName(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationVehicleName(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationVehicleCodedName constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationVehicleCodedName(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationVehicleCodedName(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationVehicleCodedNameVocab constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationVehicleCodedNameVocab(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationVehicleCodedNameVocab(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTemplateId constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationTemplateId(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationId constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationId(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCode constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationCode(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusCode constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationStatusCode(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationEffectiveTime constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationEffectiveTime(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationRouteCode constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationRouteCode(Medication medication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medication.validateMedicationRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationApproachSiteCode constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationApproachSiteCode(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationApproachSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationDoseQuantity constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationDoseQuantity(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationRateQuantity constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationRateQuantity(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationRateQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationMaxDoseQuantity constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationMaxDoseQuantity(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationMaxDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationAdministrationUnitCode constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationAdministrationUnitCode(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationAdministrationUnitCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationMedicationSeriesNumberObservation constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationMedicationSeriesNumberObservation(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationMedicationSeriesNumberObservation(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationMedicationStatusObservation constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationMedicationStatusObservation(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationMedicationStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationProductInstance constraint of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedication_validateMedicationProductInstance(Medication medication,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medication.validateMedicationProductInstance(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationType(MedicationType medicationType, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationType, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationType, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationType, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationType, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationType, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationType, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationType, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationType, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationType_validateMedicationTypeTemplateId(medicationType, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationType_validateMedicationTypeCode(medicationType, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationTypeTemplateId constraint of '<em>Medication Type</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationType_validateMedicationTypeTemplateId(MedicationType medicationType,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationType.validateMedicationTypeTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTypeCode constraint of '<em>Medication Type</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationType_validateMedicationTypeCode(MedicationType medicationType,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationType.validateMedicationTypeCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation(MedicationOrderInformation medicationOrderInformation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationOrderInformation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationOrderInformation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSupply_validateClassCode(medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationMoodCode(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasAuthor(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasPerformer(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasParticipantLocation(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationInformationSource(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasProduct(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasIntentAuthor(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasAuthorTime(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasAssignedAuthor(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasAssignedAuthorID(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasAssignedAuthorPersonOrOrg(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasPerformerTimeEvent(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasPerformerTimeIntent(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasPerformerAssignedEntity(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasPerformerAssignedEntityID(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasPerformerEntityPersonOrOrg(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationOrderNumber(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationOrderExpiration(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationQuantityOrdered(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationQuantityUnit(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationPrescriptionNumber(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationAssigningAuthority(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationDispenseDate(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationDispensingPharmacyLocation(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationQuantityDispensed(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationHasFillNumber(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationTemplateId(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationId(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationStatusCode(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationEffectiveTime(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationRepeatNumber(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationQuantity(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationMedicationStatusObservation(
				medicationOrderInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationOrderInformation_validateMedicationOrderInformationProductInstance(
				medicationOrderInformation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationOrderInformationMoodCode constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationMoodCode(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasAuthor constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasAuthor(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasPerformer constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasPerformer(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasPerformer(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasParticipantLocation constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasParticipantLocation(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasParticipantLocation(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationInformationSource constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationInformationSource(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasProduct constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasProduct(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasProduct(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasIntentAuthor constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasIntentAuthor(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasIntentAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasAuthorTime constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasAuthorTime(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasAuthorTime(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasAssignedAuthor constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasAssignedAuthor(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasAssignedAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasAssignedAuthorID constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasAssignedAuthorID(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasAssignedAuthorID(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasAssignedAuthorPersonOrOrg constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasAssignedAuthorPersonOrOrg(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasAssignedAuthorPersonOrOrg(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasPerformerTimeEvent constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasPerformerTimeEvent(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasPerformerTimeEvent(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasPerformerTimeIntent constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasPerformerTimeIntent(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasPerformerTimeIntent(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasPerformerAssignedEntity constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasPerformerAssignedEntity(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasPerformerAssignedEntity(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasPerformerAssignedEntityID constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasPerformerAssignedEntityID(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasPerformerAssignedEntityID(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasPerformerEntityPersonOrOrg constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasPerformerEntityPersonOrOrg(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasPerformerEntityPersonOrOrg(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationOrderNumber constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationOrderNumber(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationOrderNumber(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationOrderExpiration constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationOrderExpiration(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationOrderExpiration(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationQuantityOrdered constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationQuantityOrdered(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationQuantityOrdered(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationQuantityUnit constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationQuantityUnit(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationQuantityUnit(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationPrescriptionNumber constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationPrescriptionNumber(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationPrescriptionNumber(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationAssigningAuthority constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationAssigningAuthority(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationAssigningAuthority(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationDispenseDate constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationDispenseDate(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationDispenseDate(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationDispensingPharmacyLocation constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationDispensingPharmacyLocation(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationDispensingPharmacyLocation(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationQuantityDispensed constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationQuantityDispensed(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationQuantityDispensed(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationHasFillNumber constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationHasFillNumber(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationHasFillNumber(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationTemplateId constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationTemplateId(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationId constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationId(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationStatusCode constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationStatusCode(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationEffectiveTime constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationEffectiveTime(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationRepeatNumber constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationRepeatNumber(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationRepeatNumber(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationQuantity constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationQuantity(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationMedicationStatusObservation constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationMedicationStatusObservation(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationMedicationStatusObservation(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationOrderInformationProductInstance constraint of '<em>Medication Order Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationOrderInformation_validateMedicationOrderInformationProductInstance(
			MedicationOrderInformation medicationOrderInformation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationOrderInformation.validateMedicationOrderInformationProductInstance(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation(MedicationStatusObservation medicationStatusObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationStatusObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationStatusObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationTargetOfEntryRelationship(
				medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationNoAdditionalParticipants(
				medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationNoAdditionalRelationships(
				medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationTemplateId(
				medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationClassCode(
				medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationMoodCode(
				medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationCode(
				medicationStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationStatusObservation_validateMedicationStatusObservationStatusCode(
				medicationStatusObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationStatusObservationTargetOfEntryRelationship constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationTargetOfEntryRelationship(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationTargetOfEntryRelationship(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusObservationNoAdditionalParticipants constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationNoAdditionalParticipants(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationNoAdditionalParticipants(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusObservationNoAdditionalRelationships constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationNoAdditionalRelationships(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationNoAdditionalRelationships(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusObservationTemplateId constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationTemplateId(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusObservationClassCode constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationClassCode(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusObservationMoodCode constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationMoodCode(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusObservationCode constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationCode(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationStatusObservationStatusCode constraint of '<em>Medication Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationStatusObservation_validateMedicationStatusObservationStatusCode(
			MedicationStatusObservation medicationStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationStatusObservation.validateMedicationStatusObservationStatusCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProductInstance(ProductInstance productInstance, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(productInstance, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(productInstance, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipantRole_validatePlayingEntityChoice(
				productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProductInstance_validateProductInstanceHasScopingEntity(
				productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProductInstance_validateProductInstanceTemplateId(productInstance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProductInstance_validateProductInstanceClassCode(productInstance, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProductInstanceHasScopingEntity constraint of '<em>Product Instance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProductInstance_validateProductInstanceHasScopingEntity(ProductInstance productInstance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return productInstance.validateProductInstanceHasScopingEntity(diagnostics, context);
	}

	/**
	 * Validates the validateProductInstanceTemplateId constraint of '<em>Product Instance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProductInstance_validateProductInstanceTemplateId(ProductInstance productInstance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return productInstance.validateProductInstanceTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProductInstanceClassCode constraint of '<em>Product Instance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProductInstance_validateProductInstanceClassCode(ProductInstance productInstance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return productInstance.validateProductInstanceClassCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationFullfillmentInstructions(
			MedicationFullfillmentInstructions medicationFullfillmentInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationFullfillmentInstructions, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationFullfillmentInstructions, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsTemplateId(
				medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsMoodCode(
				medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsCode(
				medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsText(
				medicationFullfillmentInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsStatusCode(
				medicationFullfillmentInstructions, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationFullfillmentInstructionsTemplateId constraint of '<em>Medication Fullfillment Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsTemplateId(
			MedicationFullfillmentInstructions medicationFullfillmentInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationFullfillmentInstructions.validateMedicationFullfillmentInstructionsTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationFullfillmentInstructionsMoodCode constraint of '<em>Medication Fullfillment Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsMoodCode(
			MedicationFullfillmentInstructions medicationFullfillmentInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationFullfillmentInstructions.validateMedicationFullfillmentInstructionsMoodCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationFullfillmentInstructionsCode constraint of '<em>Medication Fullfillment Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsCode(
			MedicationFullfillmentInstructions medicationFullfillmentInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationFullfillmentInstructions.validateMedicationFullfillmentInstructionsCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationFullfillmentInstructionsText constraint of '<em>Medication Fullfillment Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsText(
			MedicationFullfillmentInstructions medicationFullfillmentInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationFullfillmentInstructions.validateMedicationFullfillmentInstructionsText(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationFullfillmentInstructionsStatusCode constraint of '<em>Medication Fullfillment Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationFullfillmentInstructions_validateMedicationFullfillmentInstructionsStatusCode(
			MedicationFullfillmentInstructions medicationFullfillmentInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationFullfillmentInstructions.validateMedicationFullfillmentInstructionsStatusCode(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationSeriesNumberObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationSeriesNumberObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationTemplateId(
				medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationClassCode(
				medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationMoodCode(
				medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationCode(
				medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationStatusCode(
				medicationSeriesNumberObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationValue(
				medicationSeriesNumberObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationSeriesNumberObservationTemplateId constraint of '<em>Medication Series Number Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationTemplateId(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationSeriesNumberObservation.validateMedicationSeriesNumberObservationTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSeriesNumberObservationClassCode constraint of '<em>Medication Series Number Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationClassCode(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationSeriesNumberObservation.validateMedicationSeriesNumberObservationClassCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSeriesNumberObservationMoodCode constraint of '<em>Medication Series Number Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationMoodCode(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationSeriesNumberObservation.validateMedicationSeriesNumberObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSeriesNumberObservationCode constraint of '<em>Medication Series Number Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationCode(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationSeriesNumberObservation.validateMedicationSeriesNumberObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSeriesNumberObservationStatusCode constraint of '<em>Medication Series Number Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationStatusCode(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationSeriesNumberObservation.validateMedicationSeriesNumberObservationStatusCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSeriesNumberObservationValue constraint of '<em>Medication Series Number Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSeriesNumberObservation_validateMedicationSeriesNumberObservationValue(
			MedicationSeriesNumberObservation medicationSeriesNumberObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationSeriesNumberObservation.validateMedicationSeriesNumberObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInternalReference(InternalReference internalReference, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(internalReference, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(internalReference, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInternalReference_validateInternalReferenceTemplateId(
				internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInternalReference_validateInternalReferenceId(internalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInternalReference_validateInternalReferenceCode(internalReference, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateInternalReferenceTemplateId constraint of '<em>Internal Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInternalReference_validateInternalReferenceTemplateId(InternalReference internalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return internalReference.validateInternalReferenceTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateInternalReferenceId constraint of '<em>Internal Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInternalReference_validateInternalReferenceId(InternalReference internalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return internalReference.validateInternalReferenceId(diagnostics, context);
	}

	/**
	 * Validates the validateInternalReferenceCode constraint of '<em>Internal Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInternalReference_validateInternalReferenceCode(InternalReference internalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return internalReference.validateInternalReferenceCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientMedicalInstructions(PatientMedicalInstructions patientMedicalInstructions,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(patientMedicalInstructions, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(patientMedicalInstructions, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(patientMedicalInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(patientMedicalInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(patientMedicalInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(patientMedicalInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(patientMedicalInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(patientMedicalInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientMedicalInstructions_validatePatientMedicalInstructionsTemplateId(
				patientMedicalInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientMedicalInstructions_validatePatientMedicalInstructionsClassCode(
				patientMedicalInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientMedicalInstructions_validatePatientMedicalInstructionsMoodCode(
				patientMedicalInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientMedicalInstructions_validatePatientMedicalInstructionsCode(
				patientMedicalInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientMedicalInstructions_validatePatientMedicalInstructionsText(
				patientMedicalInstructions, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientMedicalInstructions_validatePatientMedicalInstructionsStatusCode(
				patientMedicalInstructions, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePatientMedicalInstructionsTemplateId constraint of '<em>Patient Medical Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientMedicalInstructions_validatePatientMedicalInstructionsTemplateId(
			PatientMedicalInstructions patientMedicalInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return patientMedicalInstructions.validatePatientMedicalInstructionsTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePatientMedicalInstructionsClassCode constraint of '<em>Patient Medical Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientMedicalInstructions_validatePatientMedicalInstructionsClassCode(
			PatientMedicalInstructions patientMedicalInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return patientMedicalInstructions.validatePatientMedicalInstructionsClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePatientMedicalInstructionsMoodCode constraint of '<em>Patient Medical Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientMedicalInstructions_validatePatientMedicalInstructionsMoodCode(
			PatientMedicalInstructions patientMedicalInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return patientMedicalInstructions.validatePatientMedicalInstructionsMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePatientMedicalInstructionsCode constraint of '<em>Patient Medical Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientMedicalInstructions_validatePatientMedicalInstructionsCode(
			PatientMedicalInstructions patientMedicalInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return patientMedicalInstructions.validatePatientMedicalInstructionsCode(diagnostics, context);
	}

	/**
	 * Validates the validatePatientMedicalInstructionsText constraint of '<em>Patient Medical Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientMedicalInstructions_validatePatientMedicalInstructionsText(
			PatientMedicalInstructions patientMedicalInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return patientMedicalInstructions.validatePatientMedicalInstructionsText(diagnostics, context);
	}

	/**
	 * Validates the validatePatientMedicalInstructionsStatusCode constraint of '<em>Patient Medical Instructions</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientMedicalInstructions_validatePatientMedicalInstructionsStatusCode(
			PatientMedicalInstructions patientMedicalInstructions, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return patientMedicalInstructions.validatePatientMedicalInstructionsStatusCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition(Condition condition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(condition, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(condition, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionEntryRelationshipRequired(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionSubjectOfTarget(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionContainsProblemObservation(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionContainsAlertObservation(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionContainsPatientAwareness(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionEffectiveTimeLowHigh(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionHasRelatedObservations(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionRelatedObservationsTypeCode(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionHasRelatedReferencesTypeCode(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionHasTreatingProvider(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionHasProviderId(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionHasProviderTreatmentTime(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionTemplateId(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionClassCode(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionMoodCode(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionId(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionCodeNullFlavor(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionEffectiveTime(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionConditionEntry(condition, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCondition_validateConditionEpisodeObservation(condition, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateConditionEntryRelationshipRequired constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionEntryRelationshipRequired(Condition condition,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return condition.validateConditionEntryRelationshipRequired(diagnostics, context);
	}

	/**
	 * Validates the validateConditionSubjectOfTarget constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionSubjectOfTarget(Condition condition, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return condition.validateConditionSubjectOfTarget(diagnostics, context);
	}

	/**
	 * Validates the validateConditionContainsProblemObservation constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionContainsProblemObservation(Condition condition,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return condition.validateConditionContainsProblemObservation(diagnostics, context);
	}

	/**
	 * Validates the validateConditionContainsAlertObservation constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionContainsAlertObservation(Condition condition,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return condition.validateConditionContainsAlertObservation(diagnostics, context);
	}

	/**
	 * Validates the validateConditionContainsPatientAwareness constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionContainsPatientAwareness(Condition condition,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return condition.validateConditionContainsPatientAwareness(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEffectiveTimeLowHigh constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionEffectiveTimeLowHigh(Condition condition,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return condition.validateConditionEffectiveTimeLowHigh(diagnostics, context);
	}

	/**
	 * Validates the validateConditionHasRelatedObservations constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionHasRelatedObservations(Condition condition,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return condition.validateConditionHasRelatedObservations(diagnostics, context);
	}

	/**
	 * Validates the validateConditionRelatedObservationsTypeCode constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionRelatedObservationsTypeCode(Condition condition,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return condition.validateConditionRelatedObservationsTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateConditionHasRelatedReferencesTypeCode constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionHasRelatedReferencesTypeCode(Condition condition,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return condition.validateConditionHasRelatedReferencesTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateConditionHasTreatingProvider constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionHasTreatingProvider(Condition condition,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return condition.validateConditionHasTreatingProvider(diagnostics, context);
	}

	/**
	 * Validates the validateConditionHasProviderId constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionHasProviderId(Condition condition, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return condition.validateConditionHasProviderId(diagnostics, context);
	}

	/**
	 * Validates the validateConditionHasProviderTreatmentTime constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionHasProviderTreatmentTime(Condition condition,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return condition.validateConditionHasProviderTreatmentTime(diagnostics, context);
	}

	/**
	 * Validates the validateConditionTemplateId constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionTemplateId(Condition condition, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return condition.validateConditionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateConditionClassCode constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionClassCode(Condition condition, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return condition.validateConditionClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateConditionMoodCode constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionMoodCode(Condition condition, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return condition.validateConditionMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateConditionId constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionId(Condition condition, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return condition.validateConditionId(diagnostics, context);
	}

	/**
	 * Validates the validateConditionCodeNullFlavor constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionCodeNullFlavor(Condition condition, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return condition.validateConditionCodeNullFlavor(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEffectiveTime constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionEffectiveTime(Condition condition, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return condition.validateConditionEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateConditionConditionEntry constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionConditionEntry(Condition condition, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return condition.validateConditionConditionEntry(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEpisodeObservation constraint of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCondition_validateConditionEpisodeObservation(Condition condition,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return condition.validateConditionEpisodeObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry(ConditionEntry conditionEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(conditionEntry, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(conditionEntry, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryInformationSource(
				conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryContainsPatientAwareness(
				conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryHasTextReference(
				conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryCommentInversionInd(
				conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryHasOnsetDate(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryHasResolutionDate(
				conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryHasUnknownResolutionDate(
				conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryTemplateId(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryMoodCode(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryId(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryCode(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryText(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryStatusCode(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryEffectiveTime(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryValue(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryAgeObservation(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryCauseOfDeathObservation(
				conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryProblemStatusObservation(
				conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntrySeverity(conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryHealthStatusObservation(
				conditionEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConditionEntry_validateConditionEntryComment(conditionEntry, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateConditionEntryInformationSource constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryInformationSource(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryContainsPatientAwareness constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryContainsPatientAwareness(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryContainsPatientAwareness(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryHasTextReference constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryHasTextReference(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryHasTextReference(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryCommentInversionInd constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryCommentInversionInd(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryCommentInversionInd(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryHasOnsetDate constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryHasOnsetDate(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryHasOnsetDate(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryHasResolutionDate constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryHasResolutionDate(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryHasResolutionDate(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryHasUnknownResolutionDate constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryHasUnknownResolutionDate(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryHasUnknownResolutionDate(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryTemplateId constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryTemplateId(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryMoodCode constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryMoodCode(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryId constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryId(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryId(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryCode constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryCode(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryCode(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryText constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryText(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryText(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryStatusCode constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryStatusCode(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryEffectiveTime constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryEffectiveTime(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryValue constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryValue(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryValue(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryAgeObservation constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryAgeObservation(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryAgeObservation(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryCauseOfDeathObservation constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryCauseOfDeathObservation(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryCauseOfDeathObservation(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryProblemStatusObservation constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryProblemStatusObservation(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryProblemStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntrySeverity constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntrySeverity(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntrySeverity(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryHealthStatusObservation constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryHealthStatusObservation(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryHealthStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateConditionEntryComment constraint of '<em>Condition Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConditionEntry_validateConditionEntryComment(ConditionEntry conditionEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return conditionEntry.validateConditionEntryComment(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation(CauseOfDeathObservation causeOfDeathObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(causeOfDeathObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(causeOfDeathObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationHasSubject(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationHasSubjectPatientRelationship(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationRelationshipValueCode(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationHasRelatedSubjectCode(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationRelatedSubjectCodeValueSet(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationHasRelatedSubjectSubject(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationHasGenderCode(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationRelatedSubjectBirthTime(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationTemplateId(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationMoodCode(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationId(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationStatusCode(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationEffectiveTime(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationAgeObservation(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationProblemStatusObservation(
				causeOfDeathObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCauseOfDeathObservation_validateCauseOfDeathObservationCauseOfDeathObservation(
				causeOfDeathObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateCauseOfDeathObservationHasSubject constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationHasSubject(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationHasSubject(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationHasSubjectPatientRelationship constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationHasSubjectPatientRelationship(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationHasSubjectPatientRelationship(
			diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationRelationshipValueCode constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationRelationshipValueCode(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationRelationshipValueCode(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationHasRelatedSubjectCode constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationHasRelatedSubjectCode(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationHasRelatedSubjectCode(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationRelatedSubjectCodeValueSet constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationRelatedSubjectCodeValueSet(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationRelatedSubjectCodeValueSet(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationHasRelatedSubjectSubject constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationHasRelatedSubjectSubject(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationHasRelatedSubjectSubject(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationHasGenderCode constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationHasGenderCode(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationHasGenderCode(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationRelatedSubjectBirthTime constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationRelatedSubjectBirthTime(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationRelatedSubjectBirthTime(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationTemplateId constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationTemplateId(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationMoodCode constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationMoodCode(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationId constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationId(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationId(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationStatusCode constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationStatusCode(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationEffectiveTime constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationEffectiveTime(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationAgeObservation constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationAgeObservation(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationAgeObservation(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationProblemStatusObservation constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationProblemStatusObservation(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationProblemStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateCauseOfDeathObservationCauseOfDeathObservation constraint of '<em>Cause Of Death Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCauseOfDeathObservation_validateCauseOfDeathObservationCauseOfDeathObservation(
			CauseOfDeathObservation causeOfDeathObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return causeOfDeathObservation.validateCauseOfDeathObservationCauseOfDeathObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary(PatientSummary patientSummary, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(patientSummary, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(patientSummary, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryServiceEventRequired(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryServiceEventClassCode(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryServiceEventEffectiveTime(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryLanguageCodeFormat(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryNoTemplateIdExtension(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasEffectiveTimeSeconds(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasEffectiveTimeZone(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryOneOrTwoRecordTarget(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasAssignedAuthor(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasAssignedAuthorNullFlavor(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasInformationRecipient(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryPersonHasName(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryRolesShallHaveAddrAndTelecom(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryRolesShouldHaveAddrAndTelecom(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryOrganizationsHaveContactInfo(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryTimePreciseToDay(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryTimePreciseToYear(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryTelephoneMatchesRegex(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasTelephoneDialingDigits(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryUnknownTelephoneUsesNullFlavor(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryTypeIdExtension(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryIdRootFormat(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryOidLength(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryLanguageCodeForm(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummarySetIdAndVersionNumber(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummarySetIdAndIdAreUnique(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryCopyTimeNotPresent(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasRecordTargetPatientRole(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasPatientBirthTime(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasAdministrativeGenderCode(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasProviderOrganization(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasAuthorTime(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasAssignedAuthorId(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasAssignedAuthorPersonOrDevice(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasDataEntererAssignedPerson(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasDataEntererTime(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasInformant(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHasInformantAssignedPersonOrRelatedPerson(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryLegalAuthenticatorHasAssignedPerson(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryAuthenticatorHasAssignedPerson(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryTimePreciseToSecond(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryTimePreciseToYearAndDay(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryHealthcareProvider(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryTemplateId(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryRealmCode(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryTypeId(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryId(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryCode(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryTitle(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryEffectiveTime(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryLanguageCode(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryAdvanceDirectivesSection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryAllergiesReactionsSection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryProblemListSection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryEncountersSection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryImmunizationsSection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryPayersSection(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryMedicationsSection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryPlanOfCareSection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryPregnancyHistorySection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummarySurgeriesSection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryVitalSignsSection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryDiagnosticResultsSection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryFamilyHistorySection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummarySocialHistorySection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryResultsSection(patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryMedicalEquipmentSection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryFunctionalStatusSection(
				patientSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePatientSummary_validatePatientSummaryPurposeSection(patientSummary, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePatientSummaryServiceEventRequired constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryServiceEventRequired(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryServiceEventRequired(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryServiceEventClassCode constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryServiceEventClassCode(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryServiceEventClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryServiceEventEffectiveTime constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryServiceEventEffectiveTime(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryServiceEventEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryLanguageCodeFormat constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryLanguageCodeFormat(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryLanguageCodeFormat(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryNoTemplateIdExtension constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryNoTemplateIdExtension(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryNoTemplateIdExtension(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasEffectiveTimeSeconds constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasEffectiveTimeSeconds(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasEffectiveTimeSeconds(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasEffectiveTimeZone constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasEffectiveTimeZone(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasEffectiveTimeZone(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryOneOrTwoRecordTarget constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryOneOrTwoRecordTarget(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryOneOrTwoRecordTarget(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasAssignedAuthor constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasAssignedAuthor(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasAssignedAuthor(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasAssignedAuthorNullFlavor constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasAssignedAuthorNullFlavor(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasAssignedAuthorNullFlavor(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasInformationRecipient constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasInformationRecipient(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasInformationRecipient(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryPersonHasName constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryPersonHasName(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryPersonHasName(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryRolesShallHaveAddrAndTelecom constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryRolesShallHaveAddrAndTelecom(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryRolesShallHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryRolesShouldHaveAddrAndTelecom constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryRolesShouldHaveAddrAndTelecom(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryRolesShouldHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryOrganizationsHaveContactInfo constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryOrganizationsHaveContactInfo(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryOrganizationsHaveContactInfo(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryTimePreciseToDay constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryTimePreciseToDay(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryTimePreciseToDay(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryTimePreciseToYear constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryTimePreciseToYear(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryTimePreciseToYear(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryTelephoneMatchesRegex constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryTelephoneMatchesRegex(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryTelephoneMatchesRegex(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasTelephoneDialingDigits constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasTelephoneDialingDigits(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasTelephoneDialingDigits(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryUnknownTelephoneUsesNullFlavor constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryUnknownTelephoneUsesNullFlavor(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryUnknownTelephoneUsesNullFlavor(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryTypeIdExtension constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryTypeIdExtension(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryTypeIdExtension(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryIdRootFormat constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryIdRootFormat(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryIdRootFormat(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryOidLength constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryOidLength(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryOidLength(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryLanguageCodeForm constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryLanguageCodeForm(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryLanguageCodeForm(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummarySetIdAndVersionNumber constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummarySetIdAndVersionNumber(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummarySetIdAndVersionNumber(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummarySetIdAndIdAreUnique constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummarySetIdAndIdAreUnique(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummarySetIdAndIdAreUnique(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryCopyTimeNotPresent constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryCopyTimeNotPresent(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryCopyTimeNotPresent(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasRecordTargetPatientRole constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasRecordTargetPatientRole(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasRecordTargetPatientRole(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasPatientBirthTime constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasPatientBirthTime(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasPatientBirthTime(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasAdministrativeGenderCode constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasAdministrativeGenderCode(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasAdministrativeGenderCode(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasProviderOrganization constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasProviderOrganization(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasProviderOrganization(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasAuthorTime constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasAuthorTime(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasAuthorTime(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasAssignedAuthorId constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasAssignedAuthorId(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasAssignedAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasAssignedAuthorPersonOrDevice constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasAssignedAuthorPersonOrDevice(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasAssignedAuthorPersonOrDevice(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasDataEntererAssignedPerson constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasDataEntererAssignedPerson(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasDataEntererAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasDataEntererTime constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasDataEntererTime(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasDataEntererTime(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasInformant constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasInformant(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasInformant(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHasInformantAssignedPersonOrRelatedPerson constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHasInformantAssignedPersonOrRelatedPerson(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHasInformantAssignedPersonOrRelatedPerson(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryLegalAuthenticatorHasAssignedPerson constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryLegalAuthenticatorHasAssignedPerson(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryLegalAuthenticatorHasAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryAuthenticatorHasAssignedPerson constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryAuthenticatorHasAssignedPerson(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryAuthenticatorHasAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryTimePreciseToSecond constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryTimePreciseToSecond(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryTimePreciseToSecond(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryTimePreciseToYearAndDay constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryTimePreciseToYearAndDay(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryTimePreciseToYearAndDay(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryHealthcareProvider constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryHealthcareProvider(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryHealthcareProvider(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryTemplateId constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryTemplateId(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryRealmCode constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryRealmCode(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryRealmCode(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryTypeId constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryTypeId(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryTypeId(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryId constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryId(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryId(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryCode constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryCode(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryCode(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryTitle constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryTitle(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryTitle(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryEffectiveTime constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryEffectiveTime(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryLanguageCode constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryLanguageCode(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryLanguageCode(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryAdvanceDirectivesSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryAdvanceDirectivesSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryAdvanceDirectivesSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryAllergiesReactionsSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryAllergiesReactionsSection(
			PatientSummary patientSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryAllergiesReactionsSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryProblemListSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryProblemListSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryProblemListSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryEncountersSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryEncountersSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryEncountersSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryImmunizationsSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryImmunizationsSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryImmunizationsSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryPayersSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryPayersSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryPayersSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryMedicationsSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryMedicationsSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryMedicationsSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryPlanOfCareSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryPlanOfCareSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryPlanOfCareSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryPregnancyHistorySection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryPregnancyHistorySection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryPregnancyHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummarySurgeriesSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummarySurgeriesSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummarySurgeriesSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryVitalSignsSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryVitalSignsSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryVitalSignsSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryDiagnosticResultsSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryDiagnosticResultsSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryDiagnosticResultsSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryFamilyHistorySection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryFamilyHistorySection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryFamilyHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummarySocialHistorySection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummarySocialHistorySection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummarySocialHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryResultsSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryResultsSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryResultsSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryMedicalEquipmentSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryMedicalEquipmentSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryMedicalEquipmentSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryFunctionalStatusSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryFunctionalStatusSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryFunctionalStatusSection(diagnostics, context);
	}

	/**
	 * Validates the validatePatientSummaryPurposeSection constraint of '<em>Patient Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePatientSummary_validatePatientSummaryPurposeSection(PatientSummary patientSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return patientSummary.validatePatientSummaryPurposeSection(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSection(AdvanceDirectivesSection advanceDirectivesSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(advanceDirectivesSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(advanceDirectivesSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionTemplateId(
				advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionCode(
				advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionTitle(
				advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionText(
				advanceDirectivesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionAdvanceDirective(
				advanceDirectivesSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionTemplateId constraint of '<em>Advance Directives Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionTemplateId(
			AdvanceDirectivesSection advanceDirectivesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSection.validateAdvanceDirectivesSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionCode constraint of '<em>Advance Directives Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionCode(
			AdvanceDirectivesSection advanceDirectivesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSection.validateAdvanceDirectivesSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionTitle constraint of '<em>Advance Directives Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionTitle(
			AdvanceDirectivesSection advanceDirectivesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSection.validateAdvanceDirectivesSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionText constraint of '<em>Advance Directives Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionText(
			AdvanceDirectivesSection advanceDirectivesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSection.validateAdvanceDirectivesSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectivesSectionAdvanceDirective constraint of '<em>Advance Directives Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectivesSection_validateAdvanceDirectivesSectionAdvanceDirective(
			AdvanceDirectivesSection advanceDirectivesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirectivesSection.validateAdvanceDirectivesSectionAdvanceDirective(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective(AdvanceDirective advanceDirective, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(advanceDirective, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(advanceDirective, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveAdvDirectiveCodeValueSet(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveAdvDirectiveCodeCodeSystem(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveHasExternalReference(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveHasStartingTime(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveHasEndingTime(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveHasCustodian(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveParticipantTypeCode(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveParticipantRoleClassCode(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveHasAddress(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveHasTelecom(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveHasNameOfAgent(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveTemplateId(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveClassCode(advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveMoodCode(advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveId(advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveCode(advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveStatusCode(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveEffectiveTime(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveRepeatNumber(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveInterpretationCode(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveTargetSiteCode(
				advanceDirective, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirective_validateAdvanceDirectiveAdvanceDirectiveStatusObservation(
				advanceDirective, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAdvanceDirectiveAdvDirectiveCodeValueSet constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveAdvDirectiveCodeValueSet(
			AdvanceDirective advanceDirective, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveAdvDirectiveCodeValueSet(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveAdvDirectiveCodeCodeSystem constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveAdvDirectiveCodeCodeSystem(
			AdvanceDirective advanceDirective, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveAdvDirectiveCodeCodeSystem(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveHasExternalReference constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveHasExternalReference(
			AdvanceDirective advanceDirective, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveHasExternalReference(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveHasStartingTime constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveHasStartingTime(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveHasStartingTime(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveHasEndingTime constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveHasEndingTime(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveHasEndingTime(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveHasCustodian constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveHasCustodian(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveHasCustodian(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveParticipantTypeCode constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveParticipantTypeCode(
			AdvanceDirective advanceDirective, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveParticipantTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveParticipantRoleClassCode constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveParticipantRoleClassCode(
			AdvanceDirective advanceDirective, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveParticipantRoleClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveHasAddress constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveHasAddress(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveHasAddress(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveHasTelecom constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveHasTelecom(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveHasTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveHasNameOfAgent constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveHasNameOfAgent(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveHasNameOfAgent(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveTemplateId constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveTemplateId(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveClassCode constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveClassCode(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveMoodCode constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveMoodCode(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveId constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveId(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveId(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveCode constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveCode(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusCode constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveStatusCode(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveEffectiveTime constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveEffectiveTime(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveRepeatNumber constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveRepeatNumber(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveRepeatNumber(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveInterpretationCode constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveInterpretationCode(
			AdvanceDirective advanceDirective, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveTargetSiteCode constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveTargetSiteCode(AdvanceDirective advanceDirective,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveAdvanceDirectiveStatusObservation constraint of '<em>Advance Directive</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirective_validateAdvanceDirectiveAdvanceDirectiveStatusObservation(
			AdvanceDirective advanceDirective, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return advanceDirective.validateAdvanceDirectiveAdvanceDirectiveStatusObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(advanceDirectiveStatusObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(advanceDirectiveStatusObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationTargetOfEntryRelationship(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationNoAdditionalParticipants(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationNoAdditionalRelationships(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationTemplateId(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationClassCode(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationMoodCode(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationCode(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationStatusCode(
				advanceDirectiveStatusObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationTargetOfEntryRelationship constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationTargetOfEntryRelationship(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationTargetOfEntryRelationship(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationNoAdditionalParticipants constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationNoAdditionalParticipants(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationNoAdditionalParticipants(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationNoAdditionalRelationships constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationNoAdditionalRelationships(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationNoAdditionalRelationships(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationTemplateId constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationTemplateId(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationClassCode constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationClassCode(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationClassCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationMoodCode constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationMoodCode(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationCode constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationCode(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveStatusObservationStatusCode constraint of '<em>Advance Directive Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveStatusObservation_validateAdvanceDirectiveStatusObservationStatusCode(
			AdvanceDirectiveStatusObservation advanceDirectiveStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveStatusObservation.validateAdvanceDirectiveStatusObservationStatusCode(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesReactionsSection(AllergiesReactionsSection allergiesReactionsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(allergiesReactionsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(allergiesReactionsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(allergiesReactionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(allergiesReactionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(allergiesReactionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(allergiesReactionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(allergiesReactionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(allergiesReactionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(allergiesReactionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(allergiesReactionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesReactionsSection_validateAllergiesReactionsSectionTemplateId(
				allergiesReactionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesReactionsSection_validateAllergiesReactionsSectionCode(
				allergiesReactionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesReactionsSection_validateAllergiesReactionsSectionTitle(
				allergiesReactionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesReactionsSection_validateAllergiesReactionsSectionText(
				allergiesReactionsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAllergiesReactionsSection_validateAllergiesReactionsSectionAllergyDrugSensitivity(
				allergiesReactionsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAllergiesReactionsSectionTemplateId constraint of '<em>Allergies Reactions Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesReactionsSection_validateAllergiesReactionsSectionTemplateId(
			AllergiesReactionsSection allergiesReactionsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergiesReactionsSection.validateAllergiesReactionsSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAllergiesReactionsSectionCode constraint of '<em>Allergies Reactions Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesReactionsSection_validateAllergiesReactionsSectionCode(
			AllergiesReactionsSection allergiesReactionsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergiesReactionsSection.validateAllergiesReactionsSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateAllergiesReactionsSectionTitle constraint of '<em>Allergies Reactions Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesReactionsSection_validateAllergiesReactionsSectionTitle(
			AllergiesReactionsSection allergiesReactionsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergiesReactionsSection.validateAllergiesReactionsSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateAllergiesReactionsSectionText constraint of '<em>Allergies Reactions Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesReactionsSection_validateAllergiesReactionsSectionText(
			AllergiesReactionsSection allergiesReactionsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergiesReactionsSection.validateAllergiesReactionsSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateAllergiesReactionsSectionAllergyDrugSensitivity constraint of '<em>Allergies Reactions Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAllergiesReactionsSection_validateAllergiesReactionsSectionAllergyDrugSensitivity(
			AllergiesReactionsSection allergiesReactionsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return allergiesReactionsSection.validateAllergiesReactionsSectionAllergyDrugSensitivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemListSection(ProblemListSection problemListSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(problemListSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(problemListSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(problemListSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(problemListSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(problemListSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(problemListSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(problemListSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(problemListSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(problemListSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(problemListSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemListSection_validateProblemListSectionTemplateId(
				problemListSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemListSection_validateProblemListSectionCode(
				problemListSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemListSection_validateProblemListSectionTitle(
				problemListSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemListSection_validateProblemListSectionText(
				problemListSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProblemListSection_validateProblemListSectionCondition(
				problemListSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProblemListSectionTemplateId constraint of '<em>Problem List Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemListSection_validateProblemListSectionTemplateId(
			ProblemListSection problemListSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemListSection.validateProblemListSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProblemListSectionCode constraint of '<em>Problem List Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemListSection_validateProblemListSectionCode(ProblemListSection problemListSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemListSection.validateProblemListSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateProblemListSectionTitle constraint of '<em>Problem List Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemListSection_validateProblemListSectionTitle(ProblemListSection problemListSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemListSection.validateProblemListSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateProblemListSectionText constraint of '<em>Problem List Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemListSection_validateProblemListSectionText(ProblemListSection problemListSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemListSection.validateProblemListSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateProblemListSectionCondition constraint of '<em>Problem List Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProblemListSection_validateProblemListSectionCondition(
			ProblemListSection problemListSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return problemListSection.validateProblemListSectionCondition(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSection(EncountersSection encountersSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(encountersSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(encountersSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSection_validateEncountersSectionTemplateId(
				encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSection_validateEncountersSectionCode(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSection_validateEncountersSectionTitle(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSection_validateEncountersSectionText(encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSection_validateEncountersSectionEncounterEntry(
				encountersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersSection_validateEncountersSectionEncountersActivity(
				encountersSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEncountersSectionTemplateId constraint of '<em>Encounters Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSection_validateEncountersSectionTemplateId(EncountersSection encountersSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersSection.validateEncountersSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersSectionCode constraint of '<em>Encounters Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSection_validateEncountersSectionCode(EncountersSection encountersSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersSection.validateEncountersSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersSectionTitle constraint of '<em>Encounters Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSection_validateEncountersSectionTitle(EncountersSection encountersSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersSection.validateEncountersSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersSectionText constraint of '<em>Encounters Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSection_validateEncountersSectionText(EncountersSection encountersSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersSection.validateEncountersSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersSectionEncounterEntry constraint of '<em>Encounters Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSection_validateEncountersSectionEncounterEntry(
			EncountersSection encountersSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersSection.validateEncountersSectionEncounterEntry(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersSectionEncountersActivity constraint of '<em>Encounters Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersSection_validateEncountersSectionEncountersActivity(
			EncountersSection encountersSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersSection.validateEncountersSectionEncountersActivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounter(Encounter encounter, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(encounter, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(encounter, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounter_validateConsolEncounterAdmissionSourceValueSet(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounter_validateConsolEncounterTemplateId(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounter_validateConsolEncounterClassCode(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounter_validateConsolEncounterId(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounter_validateConsolEncounterCode(encounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounter_validateConsolEncounterText(encounter, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateConsolEncounterAdmissionSourceValueSet constraint of '<em>Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounter_validateConsolEncounterAdmissionSourceValueSet(Encounter encounter,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounter.validateConsolEncounterAdmissionSourceValueSet(diagnostics, context);
	}

	/**
	 * Validates the validateConsolEncounterTemplateId constraint of '<em>Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounter_validateConsolEncounterTemplateId(Encounter encounter,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounter.validateConsolEncounterTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateConsolEncounterClassCode constraint of '<em>Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounter_validateConsolEncounterClassCode(Encounter encounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encounter.validateConsolEncounterClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsolEncounterId constraint of '<em>Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounter_validateConsolEncounterId(Encounter encounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encounter.validateConsolEncounterId(diagnostics, context);
	}

	/**
	 * Validates the validateConsolEncounterCode constraint of '<em>Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounter_validateConsolEncounterCode(Encounter encounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encounter.validateConsolEncounterCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsolEncounterText constraint of '<em>Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounter_validateConsolEncounterText(Encounter encounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return encounter.validateConsolEncounterText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersActivity(EncountersActivity encountersActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(encountersActivity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(encountersActivity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersActivity_validateEncountersActivityHasIndications(
				encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersActivity_validateEncountersActivityHasPractitioners(
				encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersActivity_validateEncountersActivityPractitionerRole(
				encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersActivity_validateEncountersActivityTemplateId(
				encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersActivity_validateEncountersActivityClassCode(
				encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersActivity_validateEncountersActivityMoodCode(
				encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersActivity_validateEncountersActivityId(encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersActivity_validateEncountersActivityEffectiveTime(
				encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersActivity_validateEncountersActivityPatientInstruction(
				encountersActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncountersActivity_validateEncountersActivityAgeObservation(
				encountersActivity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEncountersActivityHasIndications constraint of '<em>Encounters Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersActivity_validateEncountersActivityHasIndications(
			EncountersActivity encountersActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersActivity.validateEncountersActivityHasIndications(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersActivityHasPractitioners constraint of '<em>Encounters Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersActivity_validateEncountersActivityHasPractitioners(
			EncountersActivity encountersActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersActivity.validateEncountersActivityHasPractitioners(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersActivityPractitionerRole constraint of '<em>Encounters Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersActivity_validateEncountersActivityPractitionerRole(
			EncountersActivity encountersActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersActivity.validateEncountersActivityPractitionerRole(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersActivityTemplateId constraint of '<em>Encounters Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersActivity_validateEncountersActivityTemplateId(
			EncountersActivity encountersActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersActivity.validateEncountersActivityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersActivityClassCode constraint of '<em>Encounters Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersActivity_validateEncountersActivityClassCode(
			EncountersActivity encountersActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersActivity.validateEncountersActivityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersActivityMoodCode constraint of '<em>Encounters Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersActivity_validateEncountersActivityMoodCode(EncountersActivity encountersActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersActivity.validateEncountersActivityMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersActivityId constraint of '<em>Encounters Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersActivity_validateEncountersActivityId(EncountersActivity encountersActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersActivity.validateEncountersActivityId(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersActivityEffectiveTime constraint of '<em>Encounters Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersActivity_validateEncountersActivityEffectiveTime(
			EncountersActivity encountersActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersActivity.validateEncountersActivityEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersActivityPatientInstruction constraint of '<em>Encounters Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersActivity_validateEncountersActivityPatientInstruction(
			EncountersActivity encountersActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersActivity.validateEncountersActivityPatientInstruction(diagnostics, context);
	}

	/**
	 * Validates the validateEncountersActivityAgeObservation constraint of '<em>Encounters Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncountersActivity_validateEncountersActivityAgeObservation(
			EncountersActivity encountersActivity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encountersActivity.validateEncountersActivityAgeObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection(ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(immunizationsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(immunizationsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSection_validateImmunizationsSectionHasMedicationOrSupplyActivity(
				immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSection_validateImmunizationsSectionTemplateId(
				immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSection_validateImmunizationsSectionCode(
				immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSection_validateImmunizationsSectionTitle(
				immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSection_validateImmunizationsSectionText(
				immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSection_validateImmunizationsSectionImmunization(
				immunizationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunizationsSection_validateImmunizationsSectionSupplyActivity(
				immunizationsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateImmunizationsSectionHasMedicationOrSupplyActivity constraint of '<em>Immunizations Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection_validateImmunizationsSectionHasMedicationOrSupplyActivity(
			ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationsSection.validateImmunizationsSectionHasMedicationOrSupplyActivity(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionTemplateId constraint of '<em>Immunizations Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection_validateImmunizationsSectionTemplateId(
			ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationsSection.validateImmunizationsSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionCode constraint of '<em>Immunizations Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection_validateImmunizationsSectionCode(
			ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationsSection.validateImmunizationsSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionTitle constraint of '<em>Immunizations Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection_validateImmunizationsSectionTitle(
			ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationsSection.validateImmunizationsSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionText constraint of '<em>Immunizations Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection_validateImmunizationsSectionText(
			ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationsSection.validateImmunizationsSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionImmunization constraint of '<em>Immunizations Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection_validateImmunizationsSectionImmunization(
			ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationsSection.validateImmunizationsSectionImmunization(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationsSectionSupplyActivity constraint of '<em>Immunizations Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunizationsSection_validateImmunizationsSectionSupplyActivity(
			ImmunizationsSection immunizationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunizationsSection.validateImmunizationsSectionSupplyActivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization(Immunization immunization, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(immunization, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(immunization, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSubstanceAdministration_validateClassCode(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationMoodCode(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationHasDoseQuantityOrRateQuantity(
				immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationHasConsents(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationInformationSource(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationHasPreconditionCriterion(
				immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationHasReason(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationHasReasonProblem(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationHasProduct(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationComments(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationRefusalReason(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationTemplateId(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationId(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationCode(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationStatusCode(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationEffectiveTime(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationRouteCode(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationMaxDoseQuantity(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationMedicationSeriesNumberObservation(
				immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationMedicationStatusObservation(
				immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationPatientInstruction(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationReactionObservation(immunization, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateImmunization_validateImmunizationProductInstance(immunization, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateImmunizationMoodCode constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationMoodCode(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationHasDoseQuantityOrRateQuantity constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationHasDoseQuantityOrRateQuantity(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationHasDoseQuantityOrRateQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationHasConsents constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationHasConsents(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationHasConsents(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationInformationSource constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationInformationSource(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationHasPreconditionCriterion constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationHasPreconditionCriterion(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationHasPreconditionCriterion(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationHasReason constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationHasReason(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationHasReason(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationHasReasonProblem constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationHasReasonProblem(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationHasReasonProblem(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationHasProduct constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationHasProduct(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationHasProduct(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationComments constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationComments(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationComments(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationRefusalReason constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationRefusalReason(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationRefusalReason(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationTemplateId constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationTemplateId(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationId constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationId(Immunization immunization, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return immunization.validateImmunizationId(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationCode constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationCode(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationStatusCode constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationStatusCode(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationEffectiveTime constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationEffectiveTime(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationRouteCode constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationRouteCode(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationMaxDoseQuantity constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationMaxDoseQuantity(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationMaxDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationMedicationSeriesNumberObservation constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationMedicationSeriesNumberObservation(
			Immunization immunization, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationMedicationSeriesNumberObservation(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationMedicationStatusObservation constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationMedicationStatusObservation(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationMedicationStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationPatientInstruction constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationPatientInstruction(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationPatientInstruction(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationReactionObservation constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationReactionObservation(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationReactionObservation(diagnostics, context);
	}

	/**
	 * Validates the validateImmunizationProductInstance constraint of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateImmunization_validateImmunizationProductInstance(Immunization immunization,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return immunization.validateImmunizationProductInstance(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayersSection(PayersSection payersSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(payersSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(payersSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayersSection_validatePayersSectionTemplateId(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayersSection_validatePayersSectionCode(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayersSection_validatePayersSectionTitle(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayersSection_validatePayersSectionText(payersSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayersSection_validatePayersSectionInsuranceProvider(payersSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePayersSectionTemplateId constraint of '<em>Payers Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayersSection_validatePayersSectionTemplateId(PayersSection payersSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payersSection.validatePayersSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePayersSectionCode constraint of '<em>Payers Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayersSection_validatePayersSectionCode(PayersSection payersSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payersSection.validatePayersSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validatePayersSectionTitle constraint of '<em>Payers Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayersSection_validatePayersSectionTitle(PayersSection payersSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payersSection.validatePayersSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validatePayersSectionText constraint of '<em>Payers Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayersSection_validatePayersSectionText(PayersSection payersSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payersSection.validatePayersSectionText(diagnostics, context);
	}

	/**
	 * Validates the validatePayersSectionInsuranceProvider constraint of '<em>Payers Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayersSection_validatePayersSectionInsuranceProvider(PayersSection payersSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payersSection.validatePayersSectionInsuranceProvider(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider(InsuranceProvider insuranceProvider, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(insuranceProvider, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(insuranceProvider, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderInformationSource(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderSequenceNumber(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderPaymentProviders(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderPayerEntryID(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderHealthInsuranceType(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderInsuranceInformation(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderInsuranceInfoSourceID(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderInsuranceInfoSourceAddr(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderHealthPlanCoverageStartTime(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderHealthPlanCoverageStopTime(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderPatientInformation(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderMemberId(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderMemberIdRoot(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderRelationshipToSubscriber(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderRelationshipToSubscriberCodeSystem(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderPatientName(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderSubscriberInformation(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderSubscriberId(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderSubscriberIdRoot(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderSubscriberAddress(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderFinancialResponsibilityPartyType(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderFinancialResponsibilityPartyTypeCode(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderFinancialResponsibilityPartyAddress(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderTemplateId(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderClassCode(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderMoodCode(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderId(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderCode(insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderStatusCode(
				insuranceProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateInsuranceProvider_validateInsuranceProviderPayerEntry(
				insuranceProvider, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateInsuranceProviderInformationSource constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderInformationSource(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderSequenceNumber constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderSequenceNumber(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderSequenceNumber(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderPaymentProviders constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderPaymentProviders(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderPaymentProviders(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderPayerEntryID constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderPayerEntryID(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderPayerEntryID(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderHealthInsuranceType constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderHealthInsuranceType(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderHealthInsuranceType(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderInsuranceInformation constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderInsuranceInformation(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderInsuranceInformation(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderInsuranceInfoSourceID constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderInsuranceInfoSourceID(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderInsuranceInfoSourceID(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderInsuranceInfoSourceAddr constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderInsuranceInfoSourceAddr(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderInsuranceInfoSourceAddr(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderHealthPlanCoverageStartTime constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderHealthPlanCoverageStartTime(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderHealthPlanCoverageStartTime(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderHealthPlanCoverageStopTime constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderHealthPlanCoverageStopTime(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderHealthPlanCoverageStopTime(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderPatientInformation constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderPatientInformation(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderPatientInformation(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderMemberId constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderMemberId(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderMemberId(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderMemberIdRoot constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderMemberIdRoot(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderMemberIdRoot(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderRelationshipToSubscriber constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderRelationshipToSubscriber(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderRelationshipToSubscriber(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderRelationshipToSubscriberCodeSystem constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderRelationshipToSubscriberCodeSystem(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderRelationshipToSubscriberCodeSystem(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderPatientName constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderPatientName(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderPatientName(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderSubscriberInformation constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderSubscriberInformation(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderSubscriberInformation(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderSubscriberId constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderSubscriberId(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderSubscriberId(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderSubscriberIdRoot constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderSubscriberIdRoot(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderSubscriberIdRoot(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderSubscriberAddress constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderSubscriberAddress(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderSubscriberAddress(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderFinancialResponsibilityPartyType constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderFinancialResponsibilityPartyType(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderFinancialResponsibilityPartyType(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderFinancialResponsibilityPartyTypeCode constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderFinancialResponsibilityPartyTypeCode(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderFinancialResponsibilityPartyTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderFinancialResponsibilityPartyAddress constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderFinancialResponsibilityPartyAddress(
			InsuranceProvider insuranceProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderFinancialResponsibilityPartyAddress(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderTemplateId constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderTemplateId(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderClassCode constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderClassCode(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderMoodCode constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderMoodCode(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderId constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderId(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderId(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderCode constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderCode(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderCode(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderStatusCode constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderStatusCode(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateInsuranceProviderPayerEntry constraint of '<em>Insurance Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInsuranceProvider_validateInsuranceProviderPayerEntry(InsuranceProvider insuranceProvider,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return insuranceProvider.validateInsuranceProviderPayerEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry(PayerEntry payerEntry, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(payerEntry, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(payerEntry, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryPayerEntityIsRequired(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryCoveredPartyIsRequired(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryCoveredPartyTime(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntrySubscriberIsAllowed(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntrySubscriberTime(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryEntryRelationshipREFR(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryEntryRelationshipTarget(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryTemplateId(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryClassCode(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryMoodCode(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryId(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryStatusCode(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryPayerEntity(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntryCoveredParty(payerEntry, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntry_validatePayerEntrySubscriber(payerEntry, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePayerEntryPayerEntityIsRequired constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryPayerEntityIsRequired(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntryPayerEntityIsRequired(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryCoveredPartyIsRequired constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryCoveredPartyIsRequired(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntryCoveredPartyIsRequired(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryCoveredPartyTime constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryCoveredPartyTime(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntryCoveredPartyTime(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntrySubscriberIsAllowed constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntrySubscriberIsAllowed(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntrySubscriberIsAllowed(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntrySubscriberTime constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntrySubscriberTime(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntrySubscriberTime(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryEntryRelationshipREFR constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryEntryRelationshipREFR(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntryEntryRelationshipREFR(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryEntryRelationshipTarget constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryEntryRelationshipTarget(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntryEntryRelationshipTarget(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryTemplateId constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryTemplateId(PayerEntry payerEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntry.validatePayerEntryTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryClassCode constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryClassCode(PayerEntry payerEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntry.validatePayerEntryClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryMoodCode constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryMoodCode(PayerEntry payerEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntry.validatePayerEntryMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryId constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryId(PayerEntry payerEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntry.validatePayerEntryId(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryStatusCode constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryStatusCode(PayerEntry payerEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntry.validatePayerEntryStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryPayerEntity constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryPayerEntity(PayerEntry payerEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntry.validatePayerEntryPayerEntity(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntryCoveredParty constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntryCoveredParty(PayerEntry payerEntry,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return payerEntry.validatePayerEntryCoveredParty(diagnostics, context);
	}

	/**
	 * Validates the validatePayerEntrySubscriber constraint of '<em>Payer Entry</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntry_validatePayerEntrySubscriber(PayerEntry payerEntry, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntry.validatePayerEntrySubscriber(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection(MedicationsSection medicationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSection_validateMedicationsSectionHasMedicationOrSupplyActivity(
				medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSection_validateMedicationsSectionTemplateId(
				medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSection_validateMedicationsSectionCode(
				medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSection_validateMedicationsSectionTitle(
				medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSection_validateMedicationsSectionText(
				medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSection_validateMedicationsSectionMedication(
				medicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsSection_validateMedicationsSectionSupplyActivity(
				medicationsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationsSectionHasMedicationOrSupplyActivity constraint of '<em>Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection_validateMedicationsSectionHasMedicationOrSupplyActivity(
			MedicationsSection medicationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationsSection.validateMedicationsSectionHasMedicationOrSupplyActivity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionTemplateId constraint of '<em>Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection_validateMedicationsSectionTemplateId(
			MedicationsSection medicationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationsSection.validateMedicationsSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionCode constraint of '<em>Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection_validateMedicationsSectionCode(MedicationsSection medicationsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationsSection.validateMedicationsSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionTitle constraint of '<em>Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection_validateMedicationsSectionTitle(MedicationsSection medicationsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationsSection.validateMedicationsSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionText constraint of '<em>Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection_validateMedicationsSectionText(MedicationsSection medicationsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationsSection.validateMedicationsSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionMedication constraint of '<em>Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection_validateMedicationsSectionMedication(
			MedicationsSection medicationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationsSection.validateMedicationsSectionMedication(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsSectionSupplyActivity constraint of '<em>Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsSection_validateMedicationsSectionSupplyActivity(
			MedicationsSection medicationsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationsSection.validateMedicationsSectionSupplyActivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection(PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(planOfCareSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionTemplateId(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionCode(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionTitle(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionText(planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionMedication(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionImmunization(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionEncounter(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionProcedure(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityAct(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityEncounter(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityObservation(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityProcedure(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivitySubstanceAdministration(
				planOfCareSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivitySupply(
				planOfCareSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareSectionTemplateId constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionTemplateId(PlanOfCareSection planOfCareSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionCode constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionCode(PlanOfCareSection planOfCareSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionTitle constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionTitle(PlanOfCareSection planOfCareSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionText constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionText(PlanOfCareSection planOfCareSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionText(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionMedication constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionMedication(PlanOfCareSection planOfCareSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionMedication(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionImmunization constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionImmunization(PlanOfCareSection planOfCareSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionImmunization(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionEncounter constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionEncounter(PlanOfCareSection planOfCareSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionEncounter(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionProcedure constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionProcedure(PlanOfCareSection planOfCareSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionProcedure(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionPlanOfCareActivityAct constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityAct(
			PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionPlanOfCareActivityAct(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionPlanOfCareActivityEncounter constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityEncounter(
			PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionPlanOfCareActivityEncounter(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionPlanOfCareActivityObservation constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityObservation(
			PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionPlanOfCareActivityObservation(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionPlanOfCareActivityProcedure constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivityProcedure(
			PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionPlanOfCareActivityProcedure(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionPlanOfCareActivitySubstanceAdministration constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivitySubstanceAdministration(
			PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionPlanOfCareActivitySubstanceAdministration(
			diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareSectionPlanOfCareActivitySupply constraint of '<em>Plan Of Care Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareSection_validatePlanOfCareSectionPlanOfCareActivitySupply(
			PlanOfCareSection planOfCareSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareSection.validatePlanOfCareSectionPlanOfCareActivitySupply(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedure(Procedure procedure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedure, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(procedure, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedure_validateConsolProcedureHasCodeOriginalText(procedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedure_validateConsolProcedurePerformerAssignedEntity(procedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedure_validateConsolProcedureTemplateId(procedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedure_validateConsolProcedureCode(procedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedure_validateConsolProcedureTargetSiteCode(procedure, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateConsolProcedureHasCodeOriginalText constraint of '<em>Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedure_validateConsolProcedureHasCodeOriginalText(Procedure procedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedure.validateConsolProcedureHasCodeOriginalText(diagnostics, context);
	}

	/**
	 * Validates the validateConsolProcedurePerformerAssignedEntity constraint of '<em>Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedure_validateConsolProcedurePerformerAssignedEntity(Procedure procedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedure.validateConsolProcedurePerformerAssignedEntity(diagnostics, context);
	}

	/**
	 * Validates the validateConsolProcedureTemplateId constraint of '<em>Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedure_validateConsolProcedureTemplateId(Procedure procedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedure.validateConsolProcedureTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateConsolProcedureCode constraint of '<em>Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedure_validateConsolProcedureCode(Procedure procedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return procedure.validateConsolProcedureCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsolProcedureTargetSiteCode constraint of '<em>Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedure_validateConsolProcedureTargetSiteCode(Procedure procedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedure.validateConsolProcedureTargetSiteCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityAct(PlanOfCareActivityAct planOfCareActivityAct,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareActivityAct, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(planOfCareActivityAct, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityAct_validatePlanOfCareActivityActMoodCodeValue(
				planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityAct_validatePlanOfCareActivityActTemplateId(
				planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityAct_validatePlanOfCareActivityActMoodCode(
				planOfCareActivityAct, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityAct_validatePlanOfCareActivityActId(
				planOfCareActivityAct, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareActivityActMoodCodeValue constraint of '<em>Plan Of Care Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityAct_validatePlanOfCareActivityActMoodCodeValue(
			PlanOfCareActivityAct planOfCareActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivityAct.validatePlanOfCareActivityActMoodCodeValue(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityActTemplateId constraint of '<em>Plan Of Care Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityAct_validatePlanOfCareActivityActTemplateId(
			PlanOfCareActivityAct planOfCareActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivityAct.validatePlanOfCareActivityActTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityActMoodCode constraint of '<em>Plan Of Care Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityAct_validatePlanOfCareActivityActMoodCode(
			PlanOfCareActivityAct planOfCareActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivityAct.validatePlanOfCareActivityActMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityActId constraint of '<em>Plan Of Care Activity Act</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityAct_validatePlanOfCareActivityActId(
			PlanOfCareActivityAct planOfCareActivityAct, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivityAct.validatePlanOfCareActivityActId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityEncounter(PlanOfCareActivityEncounter planOfCareActivityEncounter,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareActivityEncounter, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(planOfCareActivityEncounter, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityEncounter_validatePlanOfCareActivityEncounterMoodCodeValue(
				planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityEncounter_validatePlanOfCareActivityEncounterTemplateId(
				planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityEncounter_validatePlanOfCareActivityEncounterMoodCode(
				planOfCareActivityEncounter, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityEncounter_validatePlanOfCareActivityEncounterId(
				planOfCareActivityEncounter, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareActivityEncounterMoodCodeValue constraint of '<em>Plan Of Care Activity Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityEncounter_validatePlanOfCareActivityEncounterMoodCodeValue(
			PlanOfCareActivityEncounter planOfCareActivityEncounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityEncounter.validatePlanOfCareActivityEncounterMoodCodeValue(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityEncounterTemplateId constraint of '<em>Plan Of Care Activity Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityEncounter_validatePlanOfCareActivityEncounterTemplateId(
			PlanOfCareActivityEncounter planOfCareActivityEncounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityEncounter.validatePlanOfCareActivityEncounterTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityEncounterMoodCode constraint of '<em>Plan Of Care Activity Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityEncounter_validatePlanOfCareActivityEncounterMoodCode(
			PlanOfCareActivityEncounter planOfCareActivityEncounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityEncounter.validatePlanOfCareActivityEncounterMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityEncounterId constraint of '<em>Plan Of Care Activity Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityEncounter_validatePlanOfCareActivityEncounterId(
			PlanOfCareActivityEncounter planOfCareActivityEncounter, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityEncounter.validatePlanOfCareActivityEncounterId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityObservation(PlanOfCareActivityObservation planOfCareActivityObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareActivityObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(planOfCareActivityObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityObservation_validatePlanOfCareActivityObservationMoodCodeValue(
				planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityObservation_validatePlanOfCareActivityObservationTemplateId(
				planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityObservation_validatePlanOfCareActivityObservationMoodCode(
				planOfCareActivityObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityObservation_validatePlanOfCareActivityObservationId(
				planOfCareActivityObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareActivityObservationMoodCodeValue constraint of '<em>Plan Of Care Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityObservation_validatePlanOfCareActivityObservationMoodCodeValue(
			PlanOfCareActivityObservation planOfCareActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityObservation.validatePlanOfCareActivityObservationMoodCodeValue(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityObservationTemplateId constraint of '<em>Plan Of Care Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityObservation_validatePlanOfCareActivityObservationTemplateId(
			PlanOfCareActivityObservation planOfCareActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityObservation.validatePlanOfCareActivityObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityObservationMoodCode constraint of '<em>Plan Of Care Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityObservation_validatePlanOfCareActivityObservationMoodCode(
			PlanOfCareActivityObservation planOfCareActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityObservation.validatePlanOfCareActivityObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityObservationId constraint of '<em>Plan Of Care Activity Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityObservation_validatePlanOfCareActivityObservationId(
			PlanOfCareActivityObservation planOfCareActivityObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityObservation.validatePlanOfCareActivityObservationId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityProcedure(PlanOfCareActivityProcedure planOfCareActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareActivityProcedure, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(planOfCareActivityProcedure, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityProcedure_validatePlanOfCareActivityProcedureMoodCodeValue(
				planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityProcedure_validatePlanOfCareActivityProcedureTemplateId(
				planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityProcedure_validatePlanOfCareActivityProcedureMoodCode(
				planOfCareActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivityProcedure_validatePlanOfCareActivityProcedureId(
				planOfCareActivityProcedure, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareActivityProcedureMoodCodeValue constraint of '<em>Plan Of Care Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityProcedure_validatePlanOfCareActivityProcedureMoodCodeValue(
			PlanOfCareActivityProcedure planOfCareActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityProcedure.validatePlanOfCareActivityProcedureMoodCodeValue(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityProcedureTemplateId constraint of '<em>Plan Of Care Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityProcedure_validatePlanOfCareActivityProcedureTemplateId(
			PlanOfCareActivityProcedure planOfCareActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityProcedure.validatePlanOfCareActivityProcedureTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityProcedureMoodCode constraint of '<em>Plan Of Care Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityProcedure_validatePlanOfCareActivityProcedureMoodCode(
			PlanOfCareActivityProcedure planOfCareActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityProcedure.validatePlanOfCareActivityProcedureMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivityProcedureId constraint of '<em>Plan Of Care Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivityProcedure_validatePlanOfCareActivityProcedureId(
			PlanOfCareActivityProcedure planOfCareActivityProcedure, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planOfCareActivityProcedure.validatePlanOfCareActivityProcedureId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySubstanceAdministration(
			PlanOfCareActivitySubstanceAdministration planOfCareActivitySubstanceAdministration,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareActivitySubstanceAdministration, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			planOfCareActivitySubstanceAdministration, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(
				planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSubstanceAdministration_validateClassCode(
				planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivitySubstanceAdministration_validatePlanOfCareActivitySubstanceAdministrationMoodCodeValue(
				planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivitySubstanceAdministration_validatePlanOfCareActivitySubstanceAdministrationTemplateId(
				planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivitySubstanceAdministration_validatePlanOfCareActivitySubstanceAdministrationMoodCode(
				planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivitySubstanceAdministration_validatePlanOfCareActivitySubstanceAdministrationId(
				planOfCareActivitySubstanceAdministration, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareActivitySubstanceAdministrationMoodCodeValue constraint of '<em>Plan Of Care Activity Substance Administration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySubstanceAdministration_validatePlanOfCareActivitySubstanceAdministrationMoodCodeValue(
			PlanOfCareActivitySubstanceAdministration planOfCareActivitySubstanceAdministration,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivitySubstanceAdministration.validatePlanOfCareActivitySubstanceAdministrationMoodCodeValue(
			diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivitySubstanceAdministrationTemplateId constraint of '<em>Plan Of Care Activity Substance Administration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySubstanceAdministration_validatePlanOfCareActivitySubstanceAdministrationTemplateId(
			PlanOfCareActivitySubstanceAdministration planOfCareActivitySubstanceAdministration,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivitySubstanceAdministration.validatePlanOfCareActivitySubstanceAdministrationTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivitySubstanceAdministrationMoodCode constraint of '<em>Plan Of Care Activity Substance Administration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySubstanceAdministration_validatePlanOfCareActivitySubstanceAdministrationMoodCode(
			PlanOfCareActivitySubstanceAdministration planOfCareActivitySubstanceAdministration,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivitySubstanceAdministration.validatePlanOfCareActivitySubstanceAdministrationMoodCode(
			diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivitySubstanceAdministrationId constraint of '<em>Plan Of Care Activity Substance Administration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySubstanceAdministration_validatePlanOfCareActivitySubstanceAdministrationId(
			PlanOfCareActivitySubstanceAdministration planOfCareActivitySubstanceAdministration,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivitySubstanceAdministration.validatePlanOfCareActivitySubstanceAdministrationId(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySupply(PlanOfCareActivitySupply planOfCareActivitySupply,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planOfCareActivitySupply, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(planOfCareActivitySupply, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSupply_validateClassCode(planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivitySupply_validatePlanOfCareActivitySupplyMoodCodeValue(
				planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivitySupply_validatePlanOfCareActivitySupplyTemplateId(
				planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivitySupply_validatePlanOfCareActivitySupplyMoodCode(
				planOfCareActivitySupply, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanOfCareActivitySupply_validatePlanOfCareActivitySupplyId(
				planOfCareActivitySupply, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanOfCareActivitySupplyMoodCodeValue constraint of '<em>Plan Of Care Activity Supply</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySupply_validatePlanOfCareActivitySupplyMoodCodeValue(
			PlanOfCareActivitySupply planOfCareActivitySupply, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivitySupply.validatePlanOfCareActivitySupplyMoodCodeValue(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivitySupplyTemplateId constraint of '<em>Plan Of Care Activity Supply</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySupply_validatePlanOfCareActivitySupplyTemplateId(
			PlanOfCareActivitySupply planOfCareActivitySupply, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivitySupply.validatePlanOfCareActivitySupplyTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivitySupplyMoodCode constraint of '<em>Plan Of Care Activity Supply</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySupply_validatePlanOfCareActivitySupplyMoodCode(
			PlanOfCareActivitySupply planOfCareActivitySupply, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivitySupply.validatePlanOfCareActivitySupplyMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePlanOfCareActivitySupplyId constraint of '<em>Plan Of Care Activity Supply</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanOfCareActivitySupply_validatePlanOfCareActivitySupplyId(
			PlanOfCareActivitySupply planOfCareActivitySupply, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planOfCareActivitySupply.validatePlanOfCareActivitySupplyId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyHistorySection(PregnancyHistorySection pregnancyHistorySection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(pregnancyHistorySection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(pregnancyHistorySection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(pregnancyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(pregnancyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(pregnancyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(pregnancyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(pregnancyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(pregnancyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(pregnancyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(pregnancyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyHistorySection_validatePregnancyHistorySectionTemplateId(
				pregnancyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyHistorySection_validatePregnancyHistorySectionCode(
				pregnancyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyHistorySection_validatePregnancyHistorySectionPregnancyObservation(
				pregnancyHistorySection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePregnancyHistorySectionTemplateId constraint of '<em>Pregnancy History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyHistorySection_validatePregnancyHistorySectionTemplateId(
			PregnancyHistorySection pregnancyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyHistorySection.validatePregnancyHistorySectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyHistorySectionCode constraint of '<em>Pregnancy History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyHistorySection_validatePregnancyHistorySectionCode(
			PregnancyHistorySection pregnancyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyHistorySection.validatePregnancyHistorySectionCode(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyHistorySectionPregnancyObservation constraint of '<em>Pregnancy History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyHistorySection_validatePregnancyHistorySectionPregnancyObservation(
			PregnancyHistorySection pregnancyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyHistorySection.validatePregnancyHistorySectionPregnancyObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation(PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(pregnancyObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(pregnancyObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationTemplateId(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationId(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationCode(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationStatusCode(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationRepeatNumber(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationValue(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationInterpretationCode(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationMethodCode(
				pregnancyObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePregnancyObservation_validatePregnancyObservationTargetSiteCode(
				pregnancyObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePregnancyObservationTemplateId constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationTemplateId(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationId constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationId(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationId(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationCode constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationCode(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationStatusCode constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationStatusCode(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationRepeatNumber constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationRepeatNumber(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationRepeatNumber(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationValue constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationValue(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationValue(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationInterpretationCode constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationInterpretationCode(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationMethodCode constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationMethodCode(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePregnancyObservationTargetSiteCode constraint of '<em>Pregnancy Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePregnancyObservation_validatePregnancyObservationTargetSiteCode(
			PregnancyObservation pregnancyObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pregnancyObservation.validatePregnancyObservationTargetSiteCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSurgeriesSection(SurgeriesSection surgeriesSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(surgeriesSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(surgeriesSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSurgeriesSection_validateSurgeriesSectionHasProcedureActivity(
				surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSurgeriesSection_validateSurgeriesSectionTemplateId(
				surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSurgeriesSection_validateSurgeriesSectionCode(surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSurgeriesSection_validateSurgeriesSectionTitle(surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSurgeriesSection_validateSurgeriesSectionText(surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSurgeriesSection_validateSurgeriesSectionProcedureActivity(
				surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSurgeriesSection_validateSurgeriesSectionExternalReference(
				surgeriesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSurgeriesSection_validateSurgeriesSectionProcedureEntryProcedureActivityProcedure(
				surgeriesSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSurgeriesSectionHasProcedureActivity constraint of '<em>Surgeries Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSurgeriesSection_validateSurgeriesSectionHasProcedureActivity(
			SurgeriesSection surgeriesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return surgeriesSection.validateSurgeriesSectionHasProcedureActivity(diagnostics, context);
	}

	/**
	 * Validates the validateSurgeriesSectionTemplateId constraint of '<em>Surgeries Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSurgeriesSection_validateSurgeriesSectionTemplateId(SurgeriesSection surgeriesSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return surgeriesSection.validateSurgeriesSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSurgeriesSectionCode constraint of '<em>Surgeries Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSurgeriesSection_validateSurgeriesSectionCode(SurgeriesSection surgeriesSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return surgeriesSection.validateSurgeriesSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateSurgeriesSectionTitle constraint of '<em>Surgeries Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSurgeriesSection_validateSurgeriesSectionTitle(SurgeriesSection surgeriesSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return surgeriesSection.validateSurgeriesSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateSurgeriesSectionText constraint of '<em>Surgeries Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSurgeriesSection_validateSurgeriesSectionText(SurgeriesSection surgeriesSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return surgeriesSection.validateSurgeriesSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateSurgeriesSectionProcedureActivity constraint of '<em>Surgeries Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSurgeriesSection_validateSurgeriesSectionProcedureActivity(
			SurgeriesSection surgeriesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return surgeriesSection.validateSurgeriesSectionProcedureActivity(diagnostics, context);
	}

	/**
	 * Validates the validateSurgeriesSectionExternalReference constraint of '<em>Surgeries Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSurgeriesSection_validateSurgeriesSectionExternalReference(
			SurgeriesSection surgeriesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return surgeriesSection.validateSurgeriesSectionExternalReference(diagnostics, context);
	}

	/**
	 * Validates the validateSurgeriesSectionProcedureEntryProcedureActivityProcedure constraint of '<em>Surgeries Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSurgeriesSection_validateSurgeriesSectionProcedureEntryProcedureActivityProcedure(
			SurgeriesSection surgeriesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return surgeriesSection.validateSurgeriesSectionProcedureEntryProcedureActivityProcedure(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference(ExternalReference externalReference, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(externalReference, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(externalReference, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceHasNoCode(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceHasReference(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceHasReferenceExternalDocument(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceHasReferenceExternalDocumentID(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceHasReferenceExternalDocumentText(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceTemplateId(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceClassCode(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceMoodCode(
				externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceId(externalReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExternalReference_validateExternalReferenceText(externalReference, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateExternalReferenceHasNoCode constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceHasNoCode(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceHasNoCode(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceHasReference constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceHasReference(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceHasReference(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceHasReferenceExternalDocument constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceHasReferenceExternalDocument(
			ExternalReference externalReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceHasReferenceExternalDocument(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceHasReferenceExternalDocumentID constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceHasReferenceExternalDocumentID(
			ExternalReference externalReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceHasReferenceExternalDocumentID(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceHasReferenceExternalDocumentText constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceHasReferenceExternalDocumentText(
			ExternalReference externalReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceHasReferenceExternalDocumentText(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceTemplateId constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceTemplateId(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceClassCode constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceClassCode(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceMoodCode constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceMoodCode(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceId constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceId(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceId(diagnostics, context);
	}

	/**
	 * Validates the validateExternalReferenceText constraint of '<em>External Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExternalReference_validateExternalReferenceText(ExternalReference externalReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return externalReference.validateExternalReferenceText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(procedureEntryProcedureActivityProcedure, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			procedureEntryProcedureActivityProcedure, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureMoodCode(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureHasTextReference(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedurePriorityCode(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureHasInversionIndForEncounter(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureTemplateId(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureClassCode(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureId(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureCode(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureText(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureEffectiveTime(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureApproachSiteCode(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureInternalReference(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureInternalReferenceReason(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureProblemObservation(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureProblemAct(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureAgeObservation(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureMedicationActivity(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedurePatientInstruction(
				procedureEntryProcedureActivityProcedure, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureMoodCode constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureMoodCode(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureMoodCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureHasTextReference constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureHasTextReference(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureHasTextReference(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedurePriorityCode constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedurePriorityCode(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedurePriorityCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureHasInversionIndForEncounter constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureHasInversionIndForEncounter(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureHasInversionIndForEncounter(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureTemplateId constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureTemplateId(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureClassCode constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureClassCode(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureClassCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureId constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureId(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureId(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureCode constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureCode(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureText constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureText(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureText(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureEffectiveTime constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureEffectiveTime(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureEffectiveTime(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureApproachSiteCode constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureApproachSiteCode(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureApproachSiteCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureInternalReference constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureInternalReference(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureInternalReference(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureInternalReferenceReason constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureInternalReferenceReason(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureInternalReferenceReason(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureProblemObservation constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureProblemObservation(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureProblemObservation(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureProblemAct constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureProblemAct(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureProblemAct(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureAgeObservation constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureAgeObservation(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureAgeObservation(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedureMedicationActivity constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedureMedicationActivity(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedureMedicationActivity(
			diagnostics, context);
	}

	/**
	 * Validates the validateProcedureEntryProcedureActivityProcedurePatientInstruction constraint of '<em>Procedure Entry Procedure Activity Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProcedureEntryProcedureActivityProcedure_validateProcedureEntryProcedureActivityProcedurePatientInstruction(
			ProcedureEntryProcedureActivityProcedure procedureEntryProcedureActivityProcedure,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return procedureEntryProcedureActivityProcedure.validateProcedureEntryProcedureActivityProcedurePatientInstruction(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSection(VitalSignsSection vitalSignsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(vitalSignsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(vitalSignsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSection_validateVitalSignsSectionVitalSignEntry(
				vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSection_validateVitalSignsSectionTemplateId(
				vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSection_validateVitalSignsSectionCode(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSection_validateVitalSignsSectionTitle(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSection_validateVitalSignsSectionText(vitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsSection_validateVitalSignsSectionVitalSignsOrganizer(
				vitalSignsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateVitalSignsSectionVitalSignEntry constraint of '<em>Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSection_validateVitalSignsSectionVitalSignEntry(
			VitalSignsSection vitalSignsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsSection.validateVitalSignsSectionVitalSignEntry(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsSectionTemplateId constraint of '<em>Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSection_validateVitalSignsSectionTemplateId(VitalSignsSection vitalSignsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsSection.validateVitalSignsSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsSectionCode constraint of '<em>Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSection_validateVitalSignsSectionCode(VitalSignsSection vitalSignsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsSection.validateVitalSignsSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsSectionTitle constraint of '<em>Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSection_validateVitalSignsSectionTitle(VitalSignsSection vitalSignsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsSection.validateVitalSignsSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsSectionText constraint of '<em>Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSection_validateVitalSignsSectionText(VitalSignsSection vitalSignsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsSection.validateVitalSignsSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsSectionVitalSignsOrganizer constraint of '<em>Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsSection_validateVitalSignsSectionVitalSignsOrganizer(
			VitalSignsSection vitalSignsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsSection.validateVitalSignsSectionVitalSignsOrganizer(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer(VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(vitalSignsOrganizer, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(vitalSignsOrganizer, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerCodeValue(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerComponentElement(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerInformationSource(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerRequireResultsOrganizerTemplateID(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerTemplateId(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerClassCode(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerMoodCode(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerId(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerCode(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerStatusCode(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerEffectiveTime(
				vitalSignsOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSignsOrganizer_validateVitalSignsOrganizerVitalSignObservation(
				vitalSignsOrganizer, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateVitalSignsOrganizerCodeValue constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerCodeValue(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerCodeValue(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerComponentElement constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerComponentElement(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerComponentElement(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerInformationSource constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerInformationSource(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerRequireResultsOrganizerTemplateID constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerRequireResultsOrganizerTemplateID(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerRequireResultsOrganizerTemplateID(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerTemplateId constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerTemplateId(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerClassCode constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerClassCode(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerMoodCode constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerMoodCode(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerId constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerId(VitalSignsOrganizer vitalSignsOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerId(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerCode constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerCode(VitalSignsOrganizer vitalSignsOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerStatusCode constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerStatusCode(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerEffectiveTime constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerEffectiveTime(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignsOrganizerVitalSignObservation constraint of '<em>Vital Signs Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSignsOrganizer_validateVitalSignsOrganizerVitalSignObservation(
			VitalSignsOrganizer vitalSignsOrganizer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSignsOrganizer.validateVitalSignsOrganizerVitalSignObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(vitalSign, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(vitalSign, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignCodeValue(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignReferenceRangeRequired(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignNoObservationRangeCode(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignInformationSource(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignTemplateId(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignMoodCode(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignId(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignCode(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignStatusCode(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignEffectiveTime(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignValue(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignInterpretationCode(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignMethodCode(vitalSign, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVitalSign_validateVitalSignTargetSiteCode(vitalSign, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateVitalSignCodeValue constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignCodeValue(VitalSign vitalSign, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSign.validateVitalSignCodeValue(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignReferenceRangeRequired constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignReferenceRangeRequired(VitalSign vitalSign,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignReferenceRangeRequired(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignNoObservationRangeCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignNoObservationRangeCode(VitalSign vitalSign,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignNoObservationRangeCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignInformationSource constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignInformationSource(VitalSign vitalSign,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignTemplateId constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignTemplateId(VitalSign vitalSign, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSign.validateVitalSignTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignMoodCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignMoodCode(VitalSign vitalSign, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSign.validateVitalSignMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignId constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignId(VitalSign vitalSign, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSign.validateVitalSignId(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignCode(VitalSign vitalSign, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSign.validateVitalSignCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignStatusCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignStatusCode(VitalSign vitalSign, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSign.validateVitalSignStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignEffectiveTime constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignEffectiveTime(VitalSign vitalSign, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSign.validateVitalSignEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignValue constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignValue(VitalSign vitalSign, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSign.validateVitalSignValue(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignInterpretationCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignInterpretationCode(VitalSign vitalSign,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignMethodCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignMethodCode(VitalSign vitalSign, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSign.validateVitalSignMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignTargetSiteCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignTargetSiteCode(VitalSign vitalSign, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return vitalSign.validateVitalSignTargetSiteCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticResultsSection(DiagnosticResultsSection diagnosticResultsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(diagnosticResultsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(diagnosticResultsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDiagnosticResultsSection_validateDiagnosticResultsSectionHasResult(
				diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDiagnosticResultsSection_validateDiagnosticResultsSectionTemplateId(
				diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDiagnosticResultsSection_validateDiagnosticResultsSectionCode(
				diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDiagnosticResultsSection_validateDiagnosticResultsSectionDiagnosticProcedure(
				diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDiagnosticResultsSection_validateDiagnosticResultsSectionResult(
				diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDiagnosticResultsSection_validateDiagnosticResultsSectionResultOrganizer(
				diagnosticResultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDiagnosticResultsSection_validateDiagnosticResultsSectionExternalReference(
				diagnosticResultsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateDiagnosticResultsSectionHasResult constraint of '<em>Diagnostic Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticResultsSection_validateDiagnosticResultsSectionHasResult(
			DiagnosticResultsSection diagnosticResultsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return diagnosticResultsSection.validateDiagnosticResultsSectionHasResult(diagnostics, context);
	}

	/**
	 * Validates the validateDiagnosticResultsSectionTemplateId constraint of '<em>Diagnostic Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticResultsSection_validateDiagnosticResultsSectionTemplateId(
			DiagnosticResultsSection diagnosticResultsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return diagnosticResultsSection.validateDiagnosticResultsSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateDiagnosticResultsSectionCode constraint of '<em>Diagnostic Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticResultsSection_validateDiagnosticResultsSectionCode(
			DiagnosticResultsSection diagnosticResultsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return diagnosticResultsSection.validateDiagnosticResultsSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateDiagnosticResultsSectionDiagnosticProcedure constraint of '<em>Diagnostic Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticResultsSection_validateDiagnosticResultsSectionDiagnosticProcedure(
			DiagnosticResultsSection diagnosticResultsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return diagnosticResultsSection.validateDiagnosticResultsSectionDiagnosticProcedure(diagnostics, context);
	}

	/**
	 * Validates the validateDiagnosticResultsSectionResult constraint of '<em>Diagnostic Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticResultsSection_validateDiagnosticResultsSectionResult(
			DiagnosticResultsSection diagnosticResultsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return diagnosticResultsSection.validateDiagnosticResultsSectionResult(diagnostics, context);
	}

	/**
	 * Validates the validateDiagnosticResultsSectionResultOrganizer constraint of '<em>Diagnostic Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticResultsSection_validateDiagnosticResultsSectionResultOrganizer(
			DiagnosticResultsSection diagnosticResultsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return diagnosticResultsSection.validateDiagnosticResultsSectionResultOrganizer(diagnostics, context);
	}

	/**
	 * Validates the validateDiagnosticResultsSectionExternalReference constraint of '<em>Diagnostic Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticResultsSection_validateDiagnosticResultsSectionExternalReference(
			DiagnosticResultsSection diagnosticResultsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return diagnosticResultsSection.validateDiagnosticResultsSectionExternalReference(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult(Result result, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(result, diagnostics, context)) {
			return false;
		}
		boolean theResult = validate_EveryMultiplicityConforms(result, diagnostics, context);
		if (theResult || diagnostics != null) {
			result &= validate_EveryDataValueConforms(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validate_EveryProxyResolves(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validate_UniqueID(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validate_EveryKeyUnique(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultCodeValue(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultReferenceRangeRequired(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultNoObservationRangeCode(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultInformationSource(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultTypeCodeSystem(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultLaboratoryResultsValueSet(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultValuePresence(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultTemplateId(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultMoodCode(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultId(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultCode(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultStatusCode(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultEffectiveTime(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultValue(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultInterpretationCode(result, diagnostics, context);
		}
		if (theResult || diagnostics != null) {
			result &= validateResult_validateResultMethodCode(result, diagnostics, context);
		}
		return theResult;
	}

	/**
	 * Validates the validateResultCodeValue constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultCodeValue(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultCodeValue(diagnostics, context);
	}

	/**
	 * Validates the validateResultReferenceRangeRequired constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultReferenceRangeRequired(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultReferenceRangeRequired(diagnostics, context);
	}

	/**
	 * Validates the validateResultNoObservationRangeCode constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultNoObservationRangeCode(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultNoObservationRangeCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultInformationSource constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultInformationSource(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateResultTypeCodeSystem constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultTypeCodeSystem(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultTypeCodeSystem(diagnostics, context);
	}

	/**
	 * Validates the validateResultLaboratoryResultsValueSet constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultLaboratoryResultsValueSet(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultLaboratoryResultsValueSet(diagnostics, context);
	}

	/**
	 * Validates the validateResultValuePresence constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultValuePresence(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultValuePresence(diagnostics, context);
	}

	/**
	 * Validates the validateResultTemplateId constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultTemplateId(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateResultMoodCode constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultMoodCode(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultId constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultId(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultId(diagnostics, context);
	}

	/**
	 * Validates the validateResultCode constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultCode(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultStatusCode constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultStatusCode(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultEffectiveTime constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultEffectiveTime(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateResultValue constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultValue(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultValue(diagnostics, context);
	}

	/**
	 * Validates the validateResultInterpretationCode constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultInterpretationCode(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultMethodCode constraint of '<em>Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResult_validateResultMethodCode(Result result, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return result.validateResultMethodCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer(ResultOrganizer resultOrganizer, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(resultOrganizer, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(resultOrganizer, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerCodeValue(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerComponentElement(
				resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerInformationSource(
				resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerTemplateId(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerMoodCode(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerId(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerCode(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerStatusCode(resultOrganizer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultOrganizer_validateResultOrganizerResult(resultOrganizer, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateResultOrganizerCodeValue constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerCodeValue(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerCodeValue(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerComponentElement constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerComponentElement(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerComponentElement(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerInformationSource constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerInformationSource(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerTemplateId constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerTemplateId(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerMoodCode constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerMoodCode(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerId constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerId(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerId(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerCode constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerCode(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerStatusCode constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerStatusCode(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultOrganizerResult constraint of '<em>Result Organizer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultOrganizer_validateResultOrganizerResult(ResultOrganizer resultOrganizer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultOrganizer.validateResultOrganizerResult(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection(FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(familyHistorySection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(familyHistorySection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySection_validateFamilyHistorySectionFamilyHistoryObsOrgs(
				familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySection_validateFamilyHistorySectionNoSubject(
				familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySection_validateFamilyHistorySectionTemplateId(
				familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySection_validateFamilyHistorySectionCode(
				familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySection_validateFamilyHistorySectionTitle(
				familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySection_validateFamilyHistorySectionText(
				familyHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistorySection_validateFamilyHistorySectionFamilyHistory(
				familyHistorySection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateFamilyHistorySectionFamilyHistoryObsOrgs constraint of '<em>Family History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection_validateFamilyHistorySectionFamilyHistoryObsOrgs(
			FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySection.validateFamilyHistorySectionFamilyHistoryObsOrgs(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySectionNoSubject constraint of '<em>Family History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection_validateFamilyHistorySectionNoSubject(
			FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySection.validateFamilyHistorySectionNoSubject(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySectionTemplateId constraint of '<em>Family History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection_validateFamilyHistorySectionTemplateId(
			FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySection.validateFamilyHistorySectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySectionCode constraint of '<em>Family History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection_validateFamilyHistorySectionCode(
			FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySection.validateFamilyHistorySectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySectionTitle constraint of '<em>Family History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection_validateFamilyHistorySectionTitle(
			FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySection.validateFamilyHistorySectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySectionText constraint of '<em>Family History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection_validateFamilyHistorySectionText(
			FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySection.validateFamilyHistorySectionText(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistorySectionFamilyHistory constraint of '<em>Family History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistorySection_validateFamilyHistorySectionFamilyHistory(
			FamilyHistorySection familyHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistorySection.validateFamilyHistorySectionFamilyHistory(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory(FamilyHistory familyHistory, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(familyHistory, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(familyHistory, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryHasComponent(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryHasFamilyHistoryObservation(
				familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryHasSubject(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryHasSubjectPatientRelationship(
				familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryRelationshipValueCode(
				familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryHasRelatedSubjectCode(
				familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryRelatedSubjectCodeValueSet(
				familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryHasRelatedSubjectSubject(
				familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryHasGenderCode(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryRelatedSubjectBirthTime(
				familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryHasParticipant(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryHasParticipantParticipantRole(
				familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryHasParticipantRoleCode(
				familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryHasParticipantRolePlayingEntity(
				familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryHasFamilyName(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryFamilyMemberCondition(
				familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryTemplateId(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryClassCode(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryMoodCode(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryCode(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryStatusCode(familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryProblemStatusObservation(
				familyHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistory_validateFamilyHistoryFamilyHistoryObservation(
				familyHistory, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateFamilyHistoryHasComponent constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryHasComponent(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryHasComponent(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryHasFamilyHistoryObservation constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryHasFamilyHistoryObservation(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryHasFamilyHistoryObservation(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryHasSubject constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryHasSubject(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryHasSubject(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryHasSubjectPatientRelationship constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryHasSubjectPatientRelationship(
			FamilyHistory familyHistory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryHasSubjectPatientRelationship(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryRelationshipValueCode constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryRelationshipValueCode(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryRelationshipValueCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryHasRelatedSubjectCode constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryHasRelatedSubjectCode(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryHasRelatedSubjectCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryRelatedSubjectCodeValueSet constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryRelatedSubjectCodeValueSet(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryRelatedSubjectCodeValueSet(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryHasRelatedSubjectSubject constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryHasRelatedSubjectSubject(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryHasRelatedSubjectSubject(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryHasGenderCode constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryHasGenderCode(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryHasGenderCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryRelatedSubjectBirthTime constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryRelatedSubjectBirthTime(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryRelatedSubjectBirthTime(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryHasParticipant constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryHasParticipant(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryHasParticipant(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryHasParticipantParticipantRole constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryHasParticipantParticipantRole(
			FamilyHistory familyHistory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryHasParticipantParticipantRole(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryHasParticipantRoleCode constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryHasParticipantRoleCode(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryHasParticipantRoleCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryHasParticipantRolePlayingEntity constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryHasParticipantRolePlayingEntity(
			FamilyHistory familyHistory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryHasParticipantRolePlayingEntity(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryHasFamilyName constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryHasFamilyName(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryHasFamilyName(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryFamilyMemberCondition constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryFamilyMemberCondition(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryFamilyMemberCondition(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryTemplateId constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryTemplateId(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryClassCode constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryClassCode(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryMoodCode constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryMoodCode(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryCode constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryCode(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryStatusCode constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryStatusCode(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryProblemStatusObservation constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryProblemStatusObservation(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryProblemStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryFamilyHistoryObservation constraint of '<em>Family History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistory_validateFamilyHistoryFamilyHistoryObservation(FamilyHistory familyHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistory.validateFamilyHistoryFamilyHistoryObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation(FamilyHistoryObservation familyHistoryObservation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(familyHistoryObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(familyHistoryObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationHasSubject(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationHasSubjectPatientRelationship(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationRelationshipValueCode(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationHasRelatedSubjectCode(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationRelatedSubjectCodeValueSet(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationHasRelatedSubjectSubject(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationHasGenderCode(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationRelatedSubjectBirthTime(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationTemplateId(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationId(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationCode(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationStatusCode(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationValue(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationAgeObservation(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationProblemStatusObservation(
				familyHistoryObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFamilyHistoryObservation_validateFamilyHistoryObservationCauseOfDeathObservation(
				familyHistoryObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateFamilyHistoryObservationHasSubject constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationHasSubject(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationHasSubject(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationHasSubjectPatientRelationship constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationHasSubjectPatientRelationship(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationHasSubjectPatientRelationship(
			diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationRelationshipValueCode constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationRelationshipValueCode(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationRelationshipValueCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationHasRelatedSubjectCode constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationHasRelatedSubjectCode(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationHasRelatedSubjectCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationRelatedSubjectCodeValueSet constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationRelatedSubjectCodeValueSet(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationRelatedSubjectCodeValueSet(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationHasRelatedSubjectSubject constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationHasRelatedSubjectSubject(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationHasRelatedSubjectSubject(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationHasGenderCode constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationHasGenderCode(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationHasGenderCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationRelatedSubjectBirthTime constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationRelatedSubjectBirthTime(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationRelatedSubjectBirthTime(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationTemplateId constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationTemplateId(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationId constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationId(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationId(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationCode constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationCode(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationStatusCode constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationStatusCode(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationValue constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationValue(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationValue(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationAgeObservation constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationAgeObservation(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationAgeObservation(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationProblemStatusObservation constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationProblemStatusObservation(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationProblemStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateFamilyHistoryObservationCauseOfDeathObservation constraint of '<em>Family History Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFamilyHistoryObservation_validateFamilyHistoryObservationCauseOfDeathObservation(
			FamilyHistoryObservation familyHistoryObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return familyHistoryObservation.validateFamilyHistoryObservationCauseOfDeathObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection(SocialHistorySection socialHistorySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(socialHistorySection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(socialHistorySection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionMaritalStatus(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionReligiousAffiliation(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionPatientRace(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionPatientRaceCodeSystem(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionPatientEthnicity(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionPatientEthnicityCodeSystem(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionTemplateId(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionCode(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionTitle(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionText(
				socialHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistorySection_validateSocialHistorySectionSocialHistory(
				socialHistorySection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSocialHistorySectionMaritalStatus constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionMaritalStatus(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionMaritalStatus(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionReligiousAffiliation constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionReligiousAffiliation(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionReligiousAffiliation(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionPatientRace constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionPatientRace(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionPatientRace(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionPatientRaceCodeSystem constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionPatientRaceCodeSystem(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionPatientRaceCodeSystem(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionPatientEthnicity constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionPatientEthnicity(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionPatientEthnicity(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionPatientEthnicityCodeSystem constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionPatientEthnicityCodeSystem(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionPatientEthnicityCodeSystem(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionTemplateId constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionTemplateId(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionCode constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionCode(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionTitle constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionTitle(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionText constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionText(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionText(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySectionSocialHistory constraint of '<em>Social History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistorySection_validateSocialHistorySectionSocialHistory(
			SocialHistorySection socialHistorySection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistorySection.validateSocialHistorySectionSocialHistory(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory(SocialHistory socialHistory, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(socialHistory, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(socialHistory, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistoryCodeValueSet(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistoryNoRepeatNumber(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistoryNoInterpretationCode(
				socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistoryNoMethodCode(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistoryNoTargetSiteCode(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistoryTemplateId(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistoryId(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistoryCode(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistoryText(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistoryStatusCode(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistoryEffectiveTime(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistoryValue(socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistorySocialHistoryStatusObservation(
				socialHistory, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistory_validateSocialHistoryEpisodeObservation(socialHistory, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSocialHistoryCodeValueSet constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistoryCodeValueSet(SocialHistory socialHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistoryCodeValueSet(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryNoRepeatNumber constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistoryNoRepeatNumber(SocialHistory socialHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistoryNoRepeatNumber(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryNoInterpretationCode constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistoryNoInterpretationCode(SocialHistory socialHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistoryNoInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryNoMethodCode constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistoryNoMethodCode(SocialHistory socialHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistoryNoMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryNoTargetSiteCode constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistoryNoTargetSiteCode(SocialHistory socialHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistoryNoTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryTemplateId constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistoryTemplateId(SocialHistory socialHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistoryTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryId constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistoryId(SocialHistory socialHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistoryId(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryCode constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistoryCode(SocialHistory socialHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistoryCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryText constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistoryText(SocialHistory socialHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistoryText(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusCode constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistoryStatusCode(SocialHistory socialHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistoryStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryEffectiveTime constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistoryEffectiveTime(SocialHistory socialHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistoryEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryValue constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistoryValue(SocialHistory socialHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistoryValue(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistorySocialHistoryStatusObservation constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistorySocialHistoryStatusObservation(
			SocialHistory socialHistory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistorySocialHistoryStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryEpisodeObservation constraint of '<em>Social History</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistory_validateSocialHistoryEpisodeObservation(SocialHistory socialHistory,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return socialHistory.validateSocialHistoryEpisodeObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(socialHistoryStatusObservation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(socialHistoryStatusObservation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationTargetOfEntryRelationship(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationNoAdditionalParticipants(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationNoAdditionalRelationships(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationTemplateId(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationClassCode(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationMoodCode(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationCode(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationStatusCode(
				socialHistoryStatusObservation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationValue(
				socialHistoryStatusObservation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationTargetOfEntryRelationship constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationTargetOfEntryRelationship(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationTargetOfEntryRelationship(
			diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationNoAdditionalParticipants constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationNoAdditionalParticipants(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationNoAdditionalParticipants(
			diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationNoAdditionalRelationships constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationNoAdditionalRelationships(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationNoAdditionalRelationships(
			diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationTemplateId constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationTemplateId(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationClassCode constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationClassCode(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationMoodCode constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationMoodCode(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationCode constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationCode(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationStatusCode constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationStatusCode(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateSocialHistoryStatusObservationValue constraint of '<em>Social History Status Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSocialHistoryStatusObservation_validateSocialHistoryStatusObservationValue(
			SocialHistoryStatusObservation socialHistoryStatusObservation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return socialHistoryStatusObservation.validateSocialHistoryStatusObservationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSection(ResultsSection resultsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(resultsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(resultsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSection_validateResultsSectionTemplateId(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSection_validateResultsSectionCode(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSection_validateResultsSectionTitle(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSection_validateResultsSectionText(resultsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSection_validateResultsSectionResultOrganizer(resultsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateResultsSectionTemplateId constraint of '<em>Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSection_validateResultsSectionTemplateId(ResultsSection resultsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultsSection.validateResultsSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionCode constraint of '<em>Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSection_validateResultsSectionCode(ResultsSection resultsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultsSection.validateResultsSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionTitle constraint of '<em>Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSection_validateResultsSectionTitle(ResultsSection resultsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultsSection.validateResultsSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionText constraint of '<em>Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSection_validateResultsSectionText(ResultsSection resultsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultsSection.validateResultsSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionResultOrganizer constraint of '<em>Results Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultsSection_validateResultsSectionResultOrganizer(ResultsSection resultsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultsSection.validateResultsSectionResultOrganizer(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalEquipmentSection(MedicalEquipmentSection medicalEquipmentSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicalEquipmentSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicalEquipmentSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicalEquipmentSection_validateMedicalEquipmentSectionTemplateId(
				medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicalEquipmentSection_validateMedicalEquipmentSectionCode(
				medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicalEquipmentSection_validateMedicalEquipmentSectionTitle(
				medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicalEquipmentSection_validateMedicalEquipmentSectionText(
				medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicalEquipmentSection_validateMedicalEquipmentSectionSupplyActivity(
				medicalEquipmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicalEquipmentSection_validateMedicalEquipmentSectionMedicationActivity(
				medicalEquipmentSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicalEquipmentSectionTemplateId constraint of '<em>Medical Equipment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalEquipmentSection_validateMedicalEquipmentSectionTemplateId(
			MedicalEquipmentSection medicalEquipmentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalEquipmentSection.validateMedicalEquipmentSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalEquipmentSectionCode constraint of '<em>Medical Equipment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalEquipmentSection_validateMedicalEquipmentSectionCode(
			MedicalEquipmentSection medicalEquipmentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalEquipmentSection.validateMedicalEquipmentSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalEquipmentSectionTitle constraint of '<em>Medical Equipment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalEquipmentSection_validateMedicalEquipmentSectionTitle(
			MedicalEquipmentSection medicalEquipmentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalEquipmentSection.validateMedicalEquipmentSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalEquipmentSectionText constraint of '<em>Medical Equipment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalEquipmentSection_validateMedicalEquipmentSectionText(
			MedicalEquipmentSection medicalEquipmentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalEquipmentSection.validateMedicalEquipmentSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalEquipmentSectionSupplyActivity constraint of '<em>Medical Equipment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalEquipmentSection_validateMedicalEquipmentSectionSupplyActivity(
			MedicalEquipmentSection medicalEquipmentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalEquipmentSection.validateMedicalEquipmentSectionSupplyActivity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalEquipmentSectionMedicationActivity constraint of '<em>Medical Equipment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalEquipmentSection_validateMedicalEquipmentSectionMedicationActivity(
			MedicalEquipmentSection medicalEquipmentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalEquipmentSection.validateMedicalEquipmentSectionMedicationActivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection(FunctionalStatusSection functionalStatusSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(functionalStatusSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(functionalStatusSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionClinicalStatements(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionObservationCode(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionObservationCodeValueSet(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionValueDatatype(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionIcfCodeSystem(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionProblemStatusObservation(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionResultStatusObservation(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionTemplateId(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionCode(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionTitle(
				functionalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateFunctionalStatusSection_validateFunctionalStatusSectionText(
				functionalStatusSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateFunctionalStatusSectionClinicalStatements constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionClinicalStatements(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionClinicalStatements(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionObservationCode constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionObservationCode(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionObservationCodeValueSet constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionObservationCodeValueSet(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionObservationCodeValueSet(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionValueDatatype constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionValueDatatype(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionValueDatatype(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionIcfCodeSystem constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionIcfCodeSystem(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionIcfCodeSystem(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionProblemStatusObservation constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionProblemStatusObservation(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionProblemStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionResultStatusObservation constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionResultStatusObservation(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionResultStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionTemplateId constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionTemplateId(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionCode constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionCode(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionTitle constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionTitle(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateFunctionalStatusSectionText constraint of '<em>Functional Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFunctionalStatusSection_validateFunctionalStatusSectionText(
			FunctionalStatusSection functionalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return functionalStatusSection.validateFunctionalStatusSectionText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeSection(PurposeSection purposeSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(purposeSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(purposeSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeSection_validatePurposeSectionTemplateId(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeSection_validatePurposeSectionCode(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeSection_validatePurposeSectionTitle(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeSection_validatePurposeSectionText(purposeSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeSection_validatePurposeSectionPurposeActivity(purposeSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePurposeSectionTemplateId constraint of '<em>Purpose Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeSection_validatePurposeSectionTemplateId(PurposeSection purposeSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeSection.validatePurposeSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeSectionCode constraint of '<em>Purpose Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeSection_validatePurposeSectionCode(PurposeSection purposeSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeSection.validatePurposeSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeSectionTitle constraint of '<em>Purpose Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeSection_validatePurposeSectionTitle(PurposeSection purposeSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeSection.validatePurposeSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeSectionText constraint of '<em>Purpose Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeSection_validatePurposeSectionText(PurposeSection purposeSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeSection.validatePurposeSectionText(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeSectionPurposeActivity constraint of '<em>Purpose Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeSection_validatePurposeSectionPurposeActivity(PurposeSection purposeSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeSection.validatePurposeSectionPurposeActivity(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity(PurposeActivity purposeActivity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(purposeActivity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(purposeActivity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityHasReason(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityReasonType(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityTemplateId(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityClassCode(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityMoodCode(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityCode(purposeActivity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePurposeActivity_validatePurposeActivityStatusCode(purposeActivity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePurposeActivityHasReason constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityHasReason(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityHasReason(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeActivityReasonType constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityReasonType(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityReasonType(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeActivityTemplateId constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityTemplateId(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeActivityClassCode constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityClassCode(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeActivityMoodCode constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityMoodCode(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeActivityCode constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityCode(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityCode(diagnostics, context);
	}

	/**
	 * Validates the validatePurposeActivityStatusCode constraint of '<em>Purpose Activity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePurposeActivity_validatePurposeActivityStatusCode(PurposeActivity purposeActivity,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return purposeActivity.validatePurposeActivityStatusCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveVerification(AdvanceDirectiveVerification advanceDirectiveVerification,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(advanceDirectiveVerification, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(advanceDirectiveVerification, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipant2_validateContextControlCode(
				advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveVerification_validateAdvanceDirectiveVerificationTemplateId(
				advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveVerification_validateAdvanceDirectiveVerificationTypeCode(
				advanceDirectiveVerification, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveVerification_validateAdvanceDirectiveVerificationTime(
				advanceDirectiveVerification, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAdvanceDirectiveVerificationTemplateId constraint of '<em>Advance Directive Verification</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveVerification_validateAdvanceDirectiveVerificationTemplateId(
			AdvanceDirectiveVerification advanceDirectiveVerification, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveVerification.validateAdvanceDirectiveVerificationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveVerificationTypeCode constraint of '<em>Advance Directive Verification</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveVerification_validateAdvanceDirectiveVerificationTypeCode(
			AdvanceDirectiveVerification advanceDirectiveVerification, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveVerification.validateAdvanceDirectiveVerificationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveVerificationTime constraint of '<em>Advance Directive Verification</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveVerification_validateAdvanceDirectiveVerificationTime(
			AdvanceDirectiveVerification advanceDirectiveVerification, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveVerification.validateAdvanceDirectiveVerificationTime(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveReference(AdvanceDirectiveReference advanceDirectiveReference,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(advanceDirectiveReference, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(advanceDirectiveReference, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(advanceDirectiveReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(advanceDirectiveReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(advanceDirectiveReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(advanceDirectiveReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(advanceDirectiveReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(advanceDirectiveReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateReference_validateExternalActChoice(
				advanceDirectiveReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveReference_validateAdvanceDirectiveReferenceHasURL(
				advanceDirectiveReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveReference_validateAdvanceDirectiveReferenceHasMIMEType(
				advanceDirectiveReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveReference_validateAdvanceDirectiveReferenceExternalDocumentHasId(
				advanceDirectiveReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveReference_validateAdvanceDirectiveReferenceTemplateId(
				advanceDirectiveReference, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdvanceDirectiveReference_validateAdvanceDirectiveReferenceTypeCode(
				advanceDirectiveReference, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAdvanceDirectiveReferenceHasURL constraint of '<em>Advance Directive Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveReference_validateAdvanceDirectiveReferenceHasURL(
			AdvanceDirectiveReference advanceDirectiveReference, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveReference.validateAdvanceDirectiveReferenceHasURL(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveReferenceHasMIMEType constraint of '<em>Advance Directive Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveReference_validateAdvanceDirectiveReferenceHasMIMEType(
			AdvanceDirectiveReference advanceDirectiveReference, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveReference.validateAdvanceDirectiveReferenceHasMIMEType(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveReferenceExternalDocumentHasId constraint of '<em>Advance Directive Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveReference_validateAdvanceDirectiveReferenceExternalDocumentHasId(
			AdvanceDirectiveReference advanceDirectiveReference, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveReference.validateAdvanceDirectiveReferenceExternalDocumentHasId(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveReferenceTemplateId constraint of '<em>Advance Directive Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveReference_validateAdvanceDirectiveReferenceTemplateId(
			AdvanceDirectiveReference advanceDirectiveReference, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveReference.validateAdvanceDirectiveReferenceTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAdvanceDirectiveReferenceTypeCode constraint of '<em>Advance Directive Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdvanceDirectiveReference_validateAdvanceDirectiveReferenceTypeCode(
			AdvanceDirectiveReference advanceDirectiveReference, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return advanceDirectiveReference.validateAdvanceDirectiveReferenceTypeCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterLocation(EncounterLocation encounterLocation, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(encounterLocation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(encounterLocation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipant2_validateContextControlCode(
				encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterLocation_validateEncounterLocationHasParticipantRole(
				encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterLocation_validateEncounterLocationHasParticipantRoleLocation(
				encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterLocation_validateEncounterLocationHasParticipantRoleCode(
				encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterLocation_validateEncounterLocationHasParticipantRoleCodeVocab(
				encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterLocation_validateEncounterLocationHasPlayingEntity(
				encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterLocation_validateEncounterLocationHasPlayingEntityPlace(
				encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterLocation_validateEncounterLocationTemplateId(
				encounterLocation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEncounterLocation_validateEncounterLocationTypeCode(
				encounterLocation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEncounterLocationHasParticipantRole constraint of '<em>Encounter Location</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterLocation_validateEncounterLocationHasParticipantRole(
			EncounterLocation encounterLocation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterLocation.validateEncounterLocationHasParticipantRole(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterLocationHasParticipantRoleLocation constraint of '<em>Encounter Location</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterLocation_validateEncounterLocationHasParticipantRoleLocation(
			EncounterLocation encounterLocation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterLocation.validateEncounterLocationHasParticipantRoleLocation(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterLocationHasParticipantRoleCode constraint of '<em>Encounter Location</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterLocation_validateEncounterLocationHasParticipantRoleCode(
			EncounterLocation encounterLocation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterLocation.validateEncounterLocationHasParticipantRoleCode(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterLocationHasParticipantRoleCodeVocab constraint of '<em>Encounter Location</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterLocation_validateEncounterLocationHasParticipantRoleCodeVocab(
			EncounterLocation encounterLocation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterLocation.validateEncounterLocationHasParticipantRoleCodeVocab(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterLocationHasPlayingEntity constraint of '<em>Encounter Location</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterLocation_validateEncounterLocationHasPlayingEntity(
			EncounterLocation encounterLocation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterLocation.validateEncounterLocationHasPlayingEntity(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterLocationHasPlayingEntityPlace constraint of '<em>Encounter Location</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterLocation_validateEncounterLocationHasPlayingEntityPlace(
			EncounterLocation encounterLocation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterLocation.validateEncounterLocationHasPlayingEntityPlace(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterLocationTemplateId constraint of '<em>Encounter Location</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterLocation_validateEncounterLocationTemplateId(EncounterLocation encounterLocation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterLocation.validateEncounterLocationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEncounterLocationTypeCode constraint of '<em>Encounter Location</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEncounterLocation_validateEncounterLocationTypeCode(EncounterLocation encounterLocation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return encounterLocation.validateEncounterLocationTypeCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntity(PayerEntity payerEntity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(payerEntity, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(payerEntity, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(payerEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(payerEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(payerEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(payerEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(payerEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(payerEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAssignedEntity_validateClassCode(payerEntity, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePayerEntity_validatePayerEntityId(payerEntity, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePayerEntityId constraint of '<em>Payer Entity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePayerEntity_validatePayerEntityId(PayerEntity payerEntity, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return payerEntity.validatePayerEntityId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCoveredParty(CoveredParty coveredParty, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(coveredParty, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(coveredParty, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipantRole_validatePlayingEntityChoice(
				coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCoveredParty_validateCoveredPartyId(coveredParty, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCoveredParty_validateCoveredPartyCode(coveredParty, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateCoveredPartyId constraint of '<em>Covered Party</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCoveredParty_validateCoveredPartyId(CoveredParty coveredParty, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return coveredParty.validateCoveredPartyId(diagnostics, context);
	}

	/**
	 * Validates the validateCoveredPartyCode constraint of '<em>Covered Party</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCoveredParty_validateCoveredPartyCode(CoveredParty coveredParty,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return coveredParty.validateCoveredPartyCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePolicySubscriber(PolicySubscriber policySubscriber, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(policySubscriber, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(policySubscriber, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipantRole_validatePlayingEntityChoice(
				policySubscriber, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePolicySubscriber_validatePolicySubscriberId(policySubscriber, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePolicySubscriberId constraint of '<em>Policy Subscriber</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePolicySubscriber_validatePolicySubscriberId(PolicySubscriber policySubscriber,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return policySubscriber.validatePolicySubscriberId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupportGuardian(SupportGuardian supportGuardian, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(supportGuardian, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(supportGuardian, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(supportGuardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(supportGuardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(supportGuardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(supportGuardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(supportGuardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(supportGuardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateGuardian_validateGuardianChoice(supportGuardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateGuardian_validateClassCode(supportGuardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSupportGuardian_validateSupportGuardianTemplateId(supportGuardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSupportGuardian_validateSupportGuardianClassCode(supportGuardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSupportGuardian_validateSupportGuardianCode(supportGuardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSupportGuardian_validateSupportGuardianAddr(supportGuardian, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSupportGuardian_validateSupportGuardianTelecom(supportGuardian, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSupportGuardianTemplateId constraint of '<em>Support Guardian</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupportGuardian_validateSupportGuardianTemplateId(SupportGuardian supportGuardian,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supportGuardian.validateSupportGuardianTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSupportGuardianClassCode constraint of '<em>Support Guardian</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupportGuardian_validateSupportGuardianClassCode(SupportGuardian supportGuardian,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supportGuardian.validateSupportGuardianClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSupportGuardianCode constraint of '<em>Support Guardian</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupportGuardian_validateSupportGuardianCode(SupportGuardian supportGuardian,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supportGuardian.validateSupportGuardianCode(diagnostics, context);
	}

	/**
	 * Validates the validateSupportGuardianAddr constraint of '<em>Support Guardian</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupportGuardian_validateSupportGuardianAddr(SupportGuardian supportGuardian,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supportGuardian.validateSupportGuardianAddr(diagnostics, context);
	}

	/**
	 * Validates the validateSupportGuardianTelecom constraint of '<em>Support Guardian</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupportGuardian_validateSupportGuardianTelecom(SupportGuardian supportGuardian,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supportGuardian.validateSupportGuardianTelecom(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPastIllnessSection(HistoryOfPastIllnessSection historyOfPastIllnessSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(historyOfPastIllnessSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(historyOfPastIllnessSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionHasClinicalStatements(
				historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionTemplateId(
				historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionCode(
				historyOfPastIllnessSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionCondition(
				historyOfPastIllnessSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHistoryOfPastIllnessSectionHasClinicalStatements constraint of '<em>History Of Past Illness Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionHasClinicalStatements(
			HistoryOfPastIllnessSection historyOfPastIllnessSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return historyOfPastIllnessSection.validateHistoryOfPastIllnessSectionHasClinicalStatements(
			diagnostics, context);
	}

	/**
	 * Validates the validateHistoryOfPastIllnessSectionTemplateId constraint of '<em>History Of Past Illness Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionTemplateId(
			HistoryOfPastIllnessSection historyOfPastIllnessSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return historyOfPastIllnessSection.validateHistoryOfPastIllnessSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryOfPastIllnessSectionCode constraint of '<em>History Of Past Illness Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionCode(
			HistoryOfPastIllnessSection historyOfPastIllnessSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return historyOfPastIllnessSection.validateHistoryOfPastIllnessSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryOfPastIllnessSectionCondition constraint of '<em>History Of Past Illness Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPastIllnessSection_validateHistoryOfPastIllnessSectionCondition(
			HistoryOfPastIllnessSection historyOfPastIllnessSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return historyOfPastIllnessSection.validateHistoryOfPastIllnessSectionCondition(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintSection(ChiefComplaintSection chiefComplaintSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(chiefComplaintSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(chiefComplaintSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChiefComplaintSection_validateChiefComplaintSectionTemplateId(
				chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChiefComplaintSection_validateChiefComplaintSectionCode(
				chiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChiefComplaintSection_validateChiefComplaintSectionCondition(
				chiefComplaintSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateChiefComplaintSectionTemplateId constraint of '<em>Chief Complaint Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintSection_validateChiefComplaintSectionTemplateId(
			ChiefComplaintSection chiefComplaintSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return chiefComplaintSection.validateChiefComplaintSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateChiefComplaintSectionCode constraint of '<em>Chief Complaint Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintSection_validateChiefComplaintSectionCode(
			ChiefComplaintSection chiefComplaintSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return chiefComplaintSection.validateChiefComplaintSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateChiefComplaintSectionCondition constraint of '<em>Chief Complaint Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintSection_validateChiefComplaintSectionCondition(
			ChiefComplaintSection chiefComplaintSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return chiefComplaintSection.validateChiefComplaintSectionCondition(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForReferralSection(ReasonForReferralSection reasonForReferralSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(reasonForReferralSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(reasonForReferralSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForReferralSection_validateReasonForReferralSectionTemplateId(
				reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForReferralSection_validateReasonForReferralSectionCode(
				reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForReferralSection_validateReasonForReferralSectionCondition(
				reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForReferralSection_validateReasonForReferralSectionResult(
				reasonForReferralSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForReferralSection_validateReasonForReferralSectionProblemEntry(
				reasonForReferralSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateReasonForReferralSectionTemplateId constraint of '<em>Reason For Referral Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForReferralSection_validateReasonForReferralSectionTemplateId(
			ReasonForReferralSection reasonForReferralSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForReferralSection.validateReasonForReferralSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateReasonForReferralSectionCode constraint of '<em>Reason For Referral Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForReferralSection_validateReasonForReferralSectionCode(
			ReasonForReferralSection reasonForReferralSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForReferralSection.validateReasonForReferralSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateReasonForReferralSectionCondition constraint of '<em>Reason For Referral Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForReferralSection_validateReasonForReferralSectionCondition(
			ReasonForReferralSection reasonForReferralSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForReferralSection.validateReasonForReferralSectionCondition(diagnostics, context);
	}

	/**
	 * Validates the validateReasonForReferralSectionResult constraint of '<em>Reason For Referral Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForReferralSection_validateReasonForReferralSectionResult(
			ReasonForReferralSection reasonForReferralSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForReferralSection.validateReasonForReferralSectionResult(diagnostics, context);
	}

	/**
	 * Validates the validateReasonForReferralSectionProblemEntry constraint of '<em>Reason For Referral Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForReferralSection_validateReasonForReferralSectionProblemEntry(
			ReasonForReferralSection reasonForReferralSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForReferralSection.validateReasonForReferralSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPresentIllness(HistoryOfPresentIllness historyOfPresentIllness,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(historyOfPresentIllness, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(historyOfPresentIllness, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPresentIllness_validateHistoryOfPresentIllnessTemplateId(
				historyOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryOfPresentIllness_validateHistoryOfPresentIllnessCode(
				historyOfPresentIllness, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHistoryOfPresentIllnessTemplateId constraint of '<em>History Of Present Illness</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPresentIllness_validateHistoryOfPresentIllnessTemplateId(
			HistoryOfPresentIllness historyOfPresentIllness, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyOfPresentIllness.validateHistoryOfPresentIllnessTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryOfPresentIllnessCode constraint of '<em>History Of Present Illness</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryOfPresentIllness_validateHistoryOfPresentIllnessCode(
			HistoryOfPresentIllness historyOfPresentIllness, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyOfPresentIllness.validateHistoryOfPresentIllnessCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalAdmissionDiagnosisSection(
			HospitalAdmissionDiagnosisSection hospitalAdmissionDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalAdmissionDiagnosisSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(hospitalAdmissionDiagnosisSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalAdmissionDiagnosisSection_validateHospitalAdmissionDiagnosisSectionTemplateId(
				hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalAdmissionDiagnosisSection_validateHospitalAdmissionDiagnosisSectionCode(
				hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalAdmissionDiagnosisSection_validateHospitalAdmissionDiagnosisSectionCondition(
				hospitalAdmissionDiagnosisSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalAdmissionDiagnosisSectionTemplateId constraint of '<em>Hospital Admission Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalAdmissionDiagnosisSection_validateHospitalAdmissionDiagnosisSectionTemplateId(
			HospitalAdmissionDiagnosisSection hospitalAdmissionDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalAdmissionDiagnosisSection.validateHospitalAdmissionDiagnosisSectionTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalAdmissionDiagnosisSectionCode constraint of '<em>Hospital Admission Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalAdmissionDiagnosisSection_validateHospitalAdmissionDiagnosisSectionCode(
			HospitalAdmissionDiagnosisSection hospitalAdmissionDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalAdmissionDiagnosisSection.validateHospitalAdmissionDiagnosisSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalAdmissionDiagnosisSectionCondition constraint of '<em>Hospital Admission Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalAdmissionDiagnosisSection_validateHospitalAdmissionDiagnosisSectionCondition(
			HospitalAdmissionDiagnosisSection hospitalAdmissionDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalAdmissionDiagnosisSection.validateHospitalAdmissionDiagnosisSectionCondition(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeDiagnosisSection(DischargeDiagnosisSection dischargeDiagnosisSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(dischargeDiagnosisSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(dischargeDiagnosisSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(dischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(dischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(dischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(dischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(dischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(dischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(dischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(dischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeDiagnosisSection_validateDischargeDiagnosisSectionTemplateId(
				dischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeDiagnosisSection_validateDischargeDiagnosisSectionCode(
				dischargeDiagnosisSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeDiagnosisSection_validateDischargeDiagnosisSectionCondition(
				dischargeDiagnosisSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateDischargeDiagnosisSectionTemplateId constraint of '<em>Discharge Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeDiagnosisSection_validateDischargeDiagnosisSectionTemplateId(
			DischargeDiagnosisSection dischargeDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return dischargeDiagnosisSection.validateDischargeDiagnosisSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeDiagnosisSectionCode constraint of '<em>Discharge Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeDiagnosisSection_validateDischargeDiagnosisSectionCode(
			DischargeDiagnosisSection dischargeDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return dischargeDiagnosisSection.validateDischargeDiagnosisSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeDiagnosisSectionCondition constraint of '<em>Discharge Diagnosis Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeDiagnosisSection_validateDischargeDiagnosisSectionCondition(
			DischargeDiagnosisSection dischargeDiagnosisSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return dischargeDiagnosisSection.validateDischargeDiagnosisSectionCondition(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdmissionMedicationHistorySection(
			AdmissionMedicationHistorySection admissionMedicationHistorySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(admissionMedicationHistorySection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(admissionMedicationHistorySection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(admissionMedicationHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(admissionMedicationHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(admissionMedicationHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(admissionMedicationHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(admissionMedicationHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(admissionMedicationHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				admissionMedicationHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				admissionMedicationHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdmissionMedicationHistorySection_validateAdmissionMedicationHistorySectionTemplateId(
				admissionMedicationHistorySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAdmissionMedicationHistorySection_validateAdmissionMedicationHistorySectionCode(
				admissionMedicationHistorySection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAdmissionMedicationHistorySectionTemplateId constraint of '<em>Admission Medication History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdmissionMedicationHistorySection_validateAdmissionMedicationHistorySectionTemplateId(
			AdmissionMedicationHistorySection admissionMedicationHistorySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return admissionMedicationHistorySection.validateAdmissionMedicationHistorySectionTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateAdmissionMedicationHistorySectionCode constraint of '<em>Admission Medication History Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdmissionMedicationHistorySection_validateAdmissionMedicationHistorySectionCode(
			AdmissionMedicationHistorySection admissionMedicationHistorySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return admissionMedicationHistorySection.validateAdmissionMedicationHistorySectionCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeMedicationsSection(
			HospitalDischargeMedicationsSection hospitalDischargeMedicationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalDischargeMedicationsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(hospitalDischargeMedicationsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSection_validateHospitalDischargeMedicationsSectionTemplateId(
				hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSection_validateHospitalDischargeMedicationsSectionCode(
				hospitalDischargeMedicationsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeMedicationsSection_validateHospitalDischargeMedicationsSectionMedication(
				hospitalDischargeMedicationsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalDischargeMedicationsSectionTemplateId constraint of '<em>Hospital Discharge Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeMedicationsSection_validateHospitalDischargeMedicationsSectionTemplateId(
			HospitalDischargeMedicationsSection hospitalDischargeMedicationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeMedicationsSection.validateHospitalDischargeMedicationsSectionTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeMedicationsSectionCode constraint of '<em>Hospital Discharge Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeMedicationsSection_validateHospitalDischargeMedicationsSectionCode(
			HospitalDischargeMedicationsSection hospitalDischargeMedicationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeMedicationsSection.validateHospitalDischargeMedicationsSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeMedicationsSectionMedication constraint of '<em>Hospital Discharge Medications Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeMedicationsSection_validateHospitalDischargeMedicationsSectionMedication(
			HospitalDischargeMedicationsSection hospitalDischargeMedicationsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeMedicationsSection.validateHospitalDischargeMedicationsSectionMedication(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsAdministeredSection(
			MedicationsAdministeredSection medicationsAdministeredSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationsAdministeredSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationsAdministeredSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsAdministeredSection_validateMedicationsAdministeredSectionTemplateId(
				medicationsAdministeredSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationsAdministeredSection_validateMedicationsAdministeredSectionCode(
				medicationsAdministeredSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationsAdministeredSectionTemplateId constraint of '<em>Medications Administered Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsAdministeredSection_validateMedicationsAdministeredSectionTemplateId(
			MedicationsAdministeredSection medicationsAdministeredSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationsAdministeredSection.validateMedicationsAdministeredSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationsAdministeredSectionCode constraint of '<em>Medications Administered Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationsAdministeredSection_validateMedicationsAdministeredSectionCode(
			MedicationsAdministeredSection medicationsAdministeredSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationsAdministeredSection.validateMedicationsAdministeredSectionCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection(PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(physicalExamSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(physicalExamSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionTemplateId(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionCode(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionCondition(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionVitalSignsSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionGeneralAppearanceSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionVisibleImplantedMedicalDevicesSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionIntegumentarySystemSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionHeadSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionEyesSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionEarsNoseMouthThroatSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionEarsSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionNoseSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionMouthThroatTeethSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionNeckSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionEndocrineSystemSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionThoraxLungsSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionChestWallSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionBreastSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionHeartSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionRespiratorySystemSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionAbdomenSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionLymphaticSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionVesselsSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionMusculoskeletalSystemSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionNeurologicSystemSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionGenitaliaSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionRectumSection(
				physicalExamSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePhysicalExamSection_validatePhysicalExamSectionExtremitiesSection(
				physicalExamSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePhysicalExamSectionTemplateId constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionTemplateId(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionCode constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionCode(PhysicalExamSection physicalExamSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionCondition constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionCondition(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionCondition(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionVitalSignsSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionVitalSignsSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionVitalSignsSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionGeneralAppearanceSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionGeneralAppearanceSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionGeneralAppearanceSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionVisibleImplantedMedicalDevicesSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionVisibleImplantedMedicalDevicesSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionVisibleImplantedMedicalDevicesSection(
			diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionIntegumentarySystemSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionIntegumentarySystemSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionIntegumentarySystemSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionHeadSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionHeadSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionHeadSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionEyesSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionEyesSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionEyesSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionEarsNoseMouthThroatSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionEarsNoseMouthThroatSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionEarsNoseMouthThroatSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionEarsSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionEarsSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionEarsSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionNoseSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionNoseSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionNoseSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionMouthThroatTeethSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionMouthThroatTeethSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionMouthThroatTeethSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionNeckSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionNeckSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionNeckSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionEndocrineSystemSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionEndocrineSystemSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionEndocrineSystemSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionThoraxLungsSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionThoraxLungsSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionThoraxLungsSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionChestWallSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionChestWallSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionChestWallSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionBreastSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionBreastSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionBreastSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionHeartSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionHeartSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionHeartSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionRespiratorySystemSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionRespiratorySystemSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionRespiratorySystemSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionAbdomenSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionAbdomenSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionAbdomenSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionLymphaticSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionLymphaticSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionLymphaticSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionVesselsSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionVesselsSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionVesselsSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionMusculoskeletalSystemSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionMusculoskeletalSystemSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionMusculoskeletalSystemSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionNeurologicSystemSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionNeurologicSystemSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionNeurologicSystemSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionGenitaliaSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionGenitaliaSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionGenitaliaSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionRectumSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionRectumSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionRectumSection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExamSectionExtremitiesSection constraint of '<em>Physical Exam Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExamSection_validatePhysicalExamSectionExtremitiesSection(
			PhysicalExamSection physicalExamSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExamSection.validatePhysicalExamSectionExtremitiesSection(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralAppearanceSection(GeneralAppearanceSection generalAppearanceSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalAppearanceSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(generalAppearanceSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalAppearanceSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(generalAppearanceSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalAppearanceSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalAppearanceSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalAppearanceSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalAppearanceSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(generalAppearanceSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(generalAppearanceSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralAppearanceSection_validateGeneralAppearanceSectionTemplateId(
				generalAppearanceSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralAppearanceSection_validateGeneralAppearanceSectionCode(
				generalAppearanceSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralAppearanceSection_validateGeneralAppearanceSectionProblemEntry(
				generalAppearanceSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateGeneralAppearanceSectionTemplateId constraint of '<em>General Appearance Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralAppearanceSection_validateGeneralAppearanceSectionTemplateId(
			GeneralAppearanceSection generalAppearanceSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalAppearanceSection.validateGeneralAppearanceSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralAppearanceSectionCode constraint of '<em>General Appearance Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralAppearanceSection_validateGeneralAppearanceSectionCode(
			GeneralAppearanceSection generalAppearanceSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalAppearanceSection.validateGeneralAppearanceSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralAppearanceSectionProblemEntry constraint of '<em>General Appearance Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralAppearanceSection_validateGeneralAppearanceSectionProblemEntry(
			GeneralAppearanceSection generalAppearanceSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalAppearanceSection.validateGeneralAppearanceSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisibleImplantedMedicalDevicesSection(
			VisibleImplantedMedicalDevicesSection visibleImplantedMedicalDevicesSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(visibleImplantedMedicalDevicesSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(visibleImplantedMedicalDevicesSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(visibleImplantedMedicalDevicesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(visibleImplantedMedicalDevicesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(visibleImplantedMedicalDevicesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(visibleImplantedMedicalDevicesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(visibleImplantedMedicalDevicesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(visibleImplantedMedicalDevicesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				visibleImplantedMedicalDevicesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				visibleImplantedMedicalDevicesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVisibleImplantedMedicalDevicesSection_validateVisibleImplantedMedicalDevicesSectionTemplateId(
				visibleImplantedMedicalDevicesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVisibleImplantedMedicalDevicesSection_validateVisibleImplantedMedicalDevicesSectionCode(
				visibleImplantedMedicalDevicesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVisibleImplantedMedicalDevicesSection_validateVisibleImplantedMedicalDevicesSectionProblemEntry(
				visibleImplantedMedicalDevicesSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateVisibleImplantedMedicalDevicesSectionTemplateId constraint of '<em>Visible Implanted Medical Devices Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisibleImplantedMedicalDevicesSection_validateVisibleImplantedMedicalDevicesSectionTemplateId(
			VisibleImplantedMedicalDevicesSection visibleImplantedMedicalDevicesSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return visibleImplantedMedicalDevicesSection.validateVisibleImplantedMedicalDevicesSectionTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateVisibleImplantedMedicalDevicesSectionCode constraint of '<em>Visible Implanted Medical Devices Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisibleImplantedMedicalDevicesSection_validateVisibleImplantedMedicalDevicesSectionCode(
			VisibleImplantedMedicalDevicesSection visibleImplantedMedicalDevicesSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return visibleImplantedMedicalDevicesSection.validateVisibleImplantedMedicalDevicesSectionCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateVisibleImplantedMedicalDevicesSectionProblemEntry constraint of '<em>Visible Implanted Medical Devices Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisibleImplantedMedicalDevicesSection_validateVisibleImplantedMedicalDevicesSectionProblemEntry(
			VisibleImplantedMedicalDevicesSection visibleImplantedMedicalDevicesSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return visibleImplantedMedicalDevicesSection.validateVisibleImplantedMedicalDevicesSectionProblemEntry(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIntegumentarySystemSection(IntegumentarySystemSection integumentarySystemSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(integumentarySystemSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(integumentarySystemSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(integumentarySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(integumentarySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(integumentarySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(integumentarySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(integumentarySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(integumentarySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(integumentarySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(integumentarySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIntegumentarySystemSection_validateIntegumentarySystemSectionTemplateId(
				integumentarySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIntegumentarySystemSection_validateIntegumentarySystemSectionCode(
				integumentarySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIntegumentarySystemSection_validateIntegumentarySystemSectionProblemEntry(
				integumentarySystemSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateIntegumentarySystemSectionTemplateId constraint of '<em>Integumentary System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIntegumentarySystemSection_validateIntegumentarySystemSectionTemplateId(
			IntegumentarySystemSection integumentarySystemSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return integumentarySystemSection.validateIntegumentarySystemSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateIntegumentarySystemSectionCode constraint of '<em>Integumentary System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIntegumentarySystemSection_validateIntegumentarySystemSectionCode(
			IntegumentarySystemSection integumentarySystemSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return integumentarySystemSection.validateIntegumentarySystemSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateIntegumentarySystemSectionProblemEntry constraint of '<em>Integumentary System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIntegumentarySystemSection_validateIntegumentarySystemSectionProblemEntry(
			IntegumentarySystemSection integumentarySystemSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return integumentarySystemSection.validateIntegumentarySystemSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHeadSection(HeadSection headSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(headSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(headSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(headSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(headSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(headSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(headSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(headSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(headSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(headSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(headSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHeadSection_validateHeadSectionTemplateId(headSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHeadSection_validateHeadSectionCode(headSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHeadSection_validateHeadSectionProblemEntry(headSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHeadSectionTemplateId constraint of '<em>Head Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHeadSection_validateHeadSectionTemplateId(HeadSection headSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return headSection.validateHeadSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHeadSectionCode constraint of '<em>Head Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHeadSection_validateHeadSectionCode(HeadSection headSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return headSection.validateHeadSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateHeadSectionProblemEntry constraint of '<em>Head Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHeadSection_validateHeadSectionProblemEntry(HeadSection headSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return headSection.validateHeadSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEyesSection(EyesSection eyesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(eyesSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(eyesSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(eyesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(eyesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(eyesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(eyesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(eyesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(eyesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(eyesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(eyesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEyesSection_validateEyesSectionTemplateId(eyesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEyesSection_validateEyesSectionCode(eyesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEyesSection_validateEyesSectionProblemEntry(eyesSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEyesSectionTemplateId constraint of '<em>Eyes Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEyesSection_validateEyesSectionTemplateId(EyesSection eyesSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eyesSection.validateEyesSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEyesSectionCode constraint of '<em>Eyes Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEyesSection_validateEyesSectionCode(EyesSection eyesSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return eyesSection.validateEyesSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateEyesSectionProblemEntry constraint of '<em>Eyes Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEyesSection_validateEyesSectionProblemEntry(EyesSection eyesSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eyesSection.validateEyesSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEarsNoseMouthThroatSection(EarsNoseMouthThroatSection earsNoseMouthThroatSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(earsNoseMouthThroatSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(earsNoseMouthThroatSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(earsNoseMouthThroatSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(earsNoseMouthThroatSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(earsNoseMouthThroatSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(earsNoseMouthThroatSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(earsNoseMouthThroatSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(earsNoseMouthThroatSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(earsNoseMouthThroatSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(earsNoseMouthThroatSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEarsNoseMouthThroatSection_validateEarsNoseMouthThroatSectionTemplateId(
				earsNoseMouthThroatSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEarsNoseMouthThroatSection_validateEarsNoseMouthThroatSectionCode(
				earsNoseMouthThroatSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEarsNoseMouthThroatSection_validateEarsNoseMouthThroatSectionProblemEntry(
				earsNoseMouthThroatSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEarsNoseMouthThroatSectionTemplateId constraint of '<em>Ears Nose Mouth Throat Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEarsNoseMouthThroatSection_validateEarsNoseMouthThroatSectionTemplateId(
			EarsNoseMouthThroatSection earsNoseMouthThroatSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return earsNoseMouthThroatSection.validateEarsNoseMouthThroatSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEarsNoseMouthThroatSectionCode constraint of '<em>Ears Nose Mouth Throat Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEarsNoseMouthThroatSection_validateEarsNoseMouthThroatSectionCode(
			EarsNoseMouthThroatSection earsNoseMouthThroatSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return earsNoseMouthThroatSection.validateEarsNoseMouthThroatSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateEarsNoseMouthThroatSectionProblemEntry constraint of '<em>Ears Nose Mouth Throat Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEarsNoseMouthThroatSection_validateEarsNoseMouthThroatSectionProblemEntry(
			EarsNoseMouthThroatSection earsNoseMouthThroatSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return earsNoseMouthThroatSection.validateEarsNoseMouthThroatSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEarsSection(EarsSection earsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(earsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(earsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(earsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(earsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(earsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(earsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(earsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(earsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(earsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(earsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEarsSection_validateEarsSectionTemplateId(earsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEarsSection_validateEarsSectionCode(earsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEarsSection_validateEarsSectionProblemEntry(earsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEarsSectionTemplateId constraint of '<em>Ears Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEarsSection_validateEarsSectionTemplateId(EarsSection earsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return earsSection.validateEarsSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEarsSectionCode constraint of '<em>Ears Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEarsSection_validateEarsSectionCode(EarsSection earsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return earsSection.validateEarsSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateEarsSectionProblemEntry constraint of '<em>Ears Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEarsSection_validateEarsSectionProblemEntry(EarsSection earsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return earsSection.validateEarsSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNoseSection(NoseSection noseSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(noseSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(noseSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(noseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(noseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(noseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(noseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(noseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(noseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(noseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(noseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNoseSection_validateNoseSectionTemplateId(noseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNoseSection_validateNoseSectionCode(noseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNoseSection_validateNoseSectionProblemEntry(noseSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateNoseSectionTemplateId constraint of '<em>Nose Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNoseSection_validateNoseSectionTemplateId(NoseSection noseSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return noseSection.validateNoseSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateNoseSectionCode constraint of '<em>Nose Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNoseSection_validateNoseSectionCode(NoseSection noseSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return noseSection.validateNoseSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateNoseSectionProblemEntry constraint of '<em>Nose Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNoseSection_validateNoseSectionProblemEntry(NoseSection noseSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return noseSection.validateNoseSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMouthThroatTeethSection(MouthThroatTeethSection mouthThroatTeethSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(mouthThroatTeethSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(mouthThroatTeethSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(mouthThroatTeethSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(mouthThroatTeethSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(mouthThroatTeethSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(mouthThroatTeethSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(mouthThroatTeethSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(mouthThroatTeethSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(mouthThroatTeethSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(mouthThroatTeethSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMouthThroatTeethSection_validateMouthThroatTeethSectionTemplateId(
				mouthThroatTeethSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMouthThroatTeethSection_validateMouthThroatTeethSectionCode(
				mouthThroatTeethSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMouthThroatTeethSection_validateMouthThroatTeethSectionProblemEntry(
				mouthThroatTeethSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMouthThroatTeethSectionTemplateId constraint of '<em>Mouth Throat Teeth Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMouthThroatTeethSection_validateMouthThroatTeethSectionTemplateId(
			MouthThroatTeethSection mouthThroatTeethSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return mouthThroatTeethSection.validateMouthThroatTeethSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMouthThroatTeethSectionCode constraint of '<em>Mouth Throat Teeth Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMouthThroatTeethSection_validateMouthThroatTeethSectionCode(
			MouthThroatTeethSection mouthThroatTeethSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return mouthThroatTeethSection.validateMouthThroatTeethSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateMouthThroatTeethSectionProblemEntry constraint of '<em>Mouth Throat Teeth Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMouthThroatTeethSection_validateMouthThroatTeethSectionProblemEntry(
			MouthThroatTeethSection mouthThroatTeethSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return mouthThroatTeethSection.validateMouthThroatTeethSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNeckSection(NeckSection neckSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(neckSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(neckSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(neckSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(neckSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(neckSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(neckSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(neckSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(neckSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(neckSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(neckSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNeckSection_validateNeckSectionTemplateId(neckSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNeckSection_validateNeckSectionCode(neckSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNeckSection_validateNeckSectionProblemEntry(neckSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateNeckSectionTemplateId constraint of '<em>Neck Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNeckSection_validateNeckSectionTemplateId(NeckSection neckSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return neckSection.validateNeckSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateNeckSectionCode constraint of '<em>Neck Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNeckSection_validateNeckSectionCode(NeckSection neckSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return neckSection.validateNeckSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateNeckSectionProblemEntry constraint of '<em>Neck Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNeckSection_validateNeckSectionProblemEntry(NeckSection neckSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return neckSection.validateNeckSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEndocrineSystemSection(EndocrineSystemSection endocrineSystemSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(endocrineSystemSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(endocrineSystemSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(endocrineSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(endocrineSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(endocrineSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(endocrineSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(endocrineSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(endocrineSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(endocrineSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(endocrineSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEndocrineSystemSection_validateEndocrineSystemSectionTemplateId(
				endocrineSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEndocrineSystemSection_validateEndocrineSystemSectionCode(
				endocrineSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateEndocrineSystemSection_validateEndocrineSystemSectionProblemEntry(
				endocrineSystemSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateEndocrineSystemSectionTemplateId constraint of '<em>Endocrine System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEndocrineSystemSection_validateEndocrineSystemSectionTemplateId(
			EndocrineSystemSection endocrineSystemSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return endocrineSystemSection.validateEndocrineSystemSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEndocrineSystemSectionCode constraint of '<em>Endocrine System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEndocrineSystemSection_validateEndocrineSystemSectionCode(
			EndocrineSystemSection endocrineSystemSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return endocrineSystemSection.validateEndocrineSystemSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateEndocrineSystemSectionProblemEntry constraint of '<em>Endocrine System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEndocrineSystemSection_validateEndocrineSystemSectionProblemEntry(
			EndocrineSystemSection endocrineSystemSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return endocrineSystemSection.validateEndocrineSystemSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateThoraxLungsSection(ThoraxLungsSection thoraxLungsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(thoraxLungsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(thoraxLungsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(thoraxLungsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(thoraxLungsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(thoraxLungsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(thoraxLungsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(thoraxLungsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(thoraxLungsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(thoraxLungsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(thoraxLungsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateThoraxLungsSection_validateThoraxLungsSectionTemplateId(
				thoraxLungsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateThoraxLungsSection_validateThoraxLungsSectionCode(
				thoraxLungsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateThoraxLungsSection_validateThoraxLungsSectionProblemEntry(
				thoraxLungsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateThoraxLungsSectionTemplateId constraint of '<em>Thorax Lungs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateThoraxLungsSection_validateThoraxLungsSectionTemplateId(
			ThoraxLungsSection thoraxLungsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return thoraxLungsSection.validateThoraxLungsSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateThoraxLungsSectionCode constraint of '<em>Thorax Lungs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateThoraxLungsSection_validateThoraxLungsSectionCode(ThoraxLungsSection thoraxLungsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return thoraxLungsSection.validateThoraxLungsSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateThoraxLungsSectionProblemEntry constraint of '<em>Thorax Lungs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateThoraxLungsSection_validateThoraxLungsSectionProblemEntry(
			ThoraxLungsSection thoraxLungsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return thoraxLungsSection.validateThoraxLungsSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChestWallSection(ChestWallSection chestWallSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(chestWallSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(chestWallSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(chestWallSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(chestWallSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(chestWallSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(chestWallSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(chestWallSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(chestWallSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(chestWallSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(chestWallSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChestWallSection_validateChestWallSectionTemplateId(
				chestWallSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChestWallSection_validateChestWallSectionCode(chestWallSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChestWallSection_validateChestWallSectionProblemEntry(
				chestWallSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateChestWallSectionTemplateId constraint of '<em>Chest Wall Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChestWallSection_validateChestWallSectionTemplateId(ChestWallSection chestWallSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return chestWallSection.validateChestWallSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateChestWallSectionCode constraint of '<em>Chest Wall Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChestWallSection_validateChestWallSectionCode(ChestWallSection chestWallSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return chestWallSection.validateChestWallSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateChestWallSectionProblemEntry constraint of '<em>Chest Wall Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChestWallSection_validateChestWallSectionProblemEntry(ChestWallSection chestWallSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return chestWallSection.validateChestWallSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBreastSection(BreastSection breastSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(breastSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(breastSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(breastSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(breastSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(breastSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(breastSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(breastSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(breastSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(breastSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(breastSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateBreastSection_validateBreastSectionTemplateId(breastSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateBreastSection_validateBreastSectionCode(breastSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateBreastSectionTemplateId constraint of '<em>Breast Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBreastSection_validateBreastSectionTemplateId(BreastSection breastSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return breastSection.validateBreastSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateBreastSectionCode constraint of '<em>Breast Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBreastSection_validateBreastSectionCode(BreastSection breastSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return breastSection.validateBreastSectionCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHeartSection(HeartSection heartSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(heartSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(heartSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(heartSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(heartSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(heartSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(heartSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(heartSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(heartSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(heartSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(heartSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHeartSection_validateHeartSectionTemplateId(heartSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHeartSection_validateHeartSectionCode(heartSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHeartSection_validateHeartSectionProblemEntry(heartSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHeartSectionTemplateId constraint of '<em>Heart Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHeartSection_validateHeartSectionTemplateId(HeartSection heartSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return heartSection.validateHeartSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHeartSectionCode constraint of '<em>Heart Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHeartSection_validateHeartSectionCode(HeartSection heartSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return heartSection.validateHeartSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateHeartSectionProblemEntry constraint of '<em>Heart Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHeartSection_validateHeartSectionProblemEntry(HeartSection heartSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return heartSection.validateHeartSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRespiratorySystemSection(RespiratorySystemSection respiratorySystemSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(respiratorySystemSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(respiratorySystemSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(respiratorySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(respiratorySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(respiratorySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(respiratorySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(respiratorySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(respiratorySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(respiratorySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(respiratorySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateRespiratorySystemSection_validateRespiratorySystemSectionTemplateId(
				respiratorySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateRespiratorySystemSection_validateRespiratorySystemSectionCode(
				respiratorySystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateRespiratorySystemSection_validateRespiratorySystemSectionProblemEntry(
				respiratorySystemSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateRespiratorySystemSectionTemplateId constraint of '<em>Respiratory System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRespiratorySystemSection_validateRespiratorySystemSectionTemplateId(
			RespiratorySystemSection respiratorySystemSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return respiratorySystemSection.validateRespiratorySystemSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateRespiratorySystemSectionCode constraint of '<em>Respiratory System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRespiratorySystemSection_validateRespiratorySystemSectionCode(
			RespiratorySystemSection respiratorySystemSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return respiratorySystemSection.validateRespiratorySystemSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateRespiratorySystemSectionProblemEntry constraint of '<em>Respiratory System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRespiratorySystemSection_validateRespiratorySystemSectionProblemEntry(
			RespiratorySystemSection respiratorySystemSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return respiratorySystemSection.validateRespiratorySystemSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAbdomenSection(AbdomenSection abdomenSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(abdomenSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(abdomenSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(abdomenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(abdomenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(abdomenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(abdomenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(abdomenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(abdomenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(abdomenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(abdomenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAbdomenSection_validateAbdomenSectionTemplateId(abdomenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAbdomenSection_validateAbdomenSectionCode(abdomenSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAbdomenSection_validateAbdomenSectionProblemEntry(abdomenSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAbdomenSectionTemplateId constraint of '<em>Abdomen Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAbdomenSection_validateAbdomenSectionTemplateId(AbdomenSection abdomenSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return abdomenSection.validateAbdomenSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAbdomenSectionCode constraint of '<em>Abdomen Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAbdomenSection_validateAbdomenSectionCode(AbdomenSection abdomenSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return abdomenSection.validateAbdomenSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateAbdomenSectionProblemEntry constraint of '<em>Abdomen Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAbdomenSection_validateAbdomenSectionProblemEntry(AbdomenSection abdomenSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return abdomenSection.validateAbdomenSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLymphaticSection(LymphaticSection lymphaticSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(lymphaticSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(lymphaticSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(lymphaticSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(lymphaticSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(lymphaticSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(lymphaticSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(lymphaticSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(lymphaticSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(lymphaticSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(lymphaticSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLymphaticSection_validateLymphaticSectionTemplateId(
				lymphaticSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLymphaticSection_validateLymphaticSectionCode(lymphaticSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLymphaticSection_validateLymphaticSectionProblemEntry(
				lymphaticSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateLymphaticSectionTemplateId constraint of '<em>Lymphatic Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLymphaticSection_validateLymphaticSectionTemplateId(LymphaticSection lymphaticSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return lymphaticSection.validateLymphaticSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateLymphaticSectionCode constraint of '<em>Lymphatic Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLymphaticSection_validateLymphaticSectionCode(LymphaticSection lymphaticSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return lymphaticSection.validateLymphaticSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateLymphaticSectionProblemEntry constraint of '<em>Lymphatic Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLymphaticSection_validateLymphaticSectionProblemEntry(LymphaticSection lymphaticSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return lymphaticSection.validateLymphaticSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVesselsSection(VesselsSection vesselsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(vesselsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(vesselsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(vesselsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(vesselsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(vesselsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(vesselsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(vesselsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(vesselsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(vesselsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(vesselsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVesselsSection_validateVesselsSectionTemplateId(vesselsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVesselsSection_validateVesselsSectionCode(vesselsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateVesselsSection_validateVesselsSectionProblemEntry(vesselsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateVesselsSectionTemplateId constraint of '<em>Vessels Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVesselsSection_validateVesselsSectionTemplateId(VesselsSection vesselsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vesselsSection.validateVesselsSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateVesselsSectionCode constraint of '<em>Vessels Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVesselsSection_validateVesselsSectionCode(VesselsSection vesselsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vesselsSection.validateVesselsSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateVesselsSectionProblemEntry constraint of '<em>Vessels Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVesselsSection_validateVesselsSectionProblemEntry(VesselsSection vesselsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vesselsSection.validateVesselsSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMusculoskeletalSystemSection(MusculoskeletalSystemSection musculoskeletalSystemSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(musculoskeletalSystemSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(musculoskeletalSystemSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(musculoskeletalSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(musculoskeletalSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(musculoskeletalSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(musculoskeletalSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(musculoskeletalSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(musculoskeletalSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(musculoskeletalSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(musculoskeletalSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMusculoskeletalSystemSection_validateMusculoskeletalSystemSectionTemplateId(
				musculoskeletalSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMusculoskeletalSystemSection_validateMusculoskeletalSystemSectionCode(
				musculoskeletalSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMusculoskeletalSystemSection_validateMusculoskeletalSystemSectionProblemEntry(
				musculoskeletalSystemSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMusculoskeletalSystemSectionTemplateId constraint of '<em>Musculoskeletal System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMusculoskeletalSystemSection_validateMusculoskeletalSystemSectionTemplateId(
			MusculoskeletalSystemSection musculoskeletalSystemSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return musculoskeletalSystemSection.validateMusculoskeletalSystemSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMusculoskeletalSystemSectionCode constraint of '<em>Musculoskeletal System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMusculoskeletalSystemSection_validateMusculoskeletalSystemSectionCode(
			MusculoskeletalSystemSection musculoskeletalSystemSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return musculoskeletalSystemSection.validateMusculoskeletalSystemSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateMusculoskeletalSystemSectionProblemEntry constraint of '<em>Musculoskeletal System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMusculoskeletalSystemSection_validateMusculoskeletalSystemSectionProblemEntry(
			MusculoskeletalSystemSection musculoskeletalSystemSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return musculoskeletalSystemSection.validateMusculoskeletalSystemSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNeurologicSystemSection(NeurologicSystemSection neurologicSystemSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(neurologicSystemSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(neurologicSystemSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(neurologicSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(neurologicSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(neurologicSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(neurologicSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(neurologicSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(neurologicSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(neurologicSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(neurologicSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNeurologicSystemSection_validateNeurologicSystemSectionTemplateId(
				neurologicSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNeurologicSystemSection_validateNeurologicSystemSectionCode(
				neurologicSystemSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateNeurologicSystemSection_validateNeurologicSystemSectionProblemEntry(
				neurologicSystemSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateNeurologicSystemSectionTemplateId constraint of '<em>Neurologic System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNeurologicSystemSection_validateNeurologicSystemSectionTemplateId(
			NeurologicSystemSection neurologicSystemSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return neurologicSystemSection.validateNeurologicSystemSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateNeurologicSystemSectionCode constraint of '<em>Neurologic System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNeurologicSystemSection_validateNeurologicSystemSectionCode(
			NeurologicSystemSection neurologicSystemSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return neurologicSystemSection.validateNeurologicSystemSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateNeurologicSystemSectionProblemEntry constraint of '<em>Neurologic System Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNeurologicSystemSection_validateNeurologicSystemSectionProblemEntry(
			NeurologicSystemSection neurologicSystemSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return neurologicSystemSection.validateNeurologicSystemSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGenitaliaSection(GenitaliaSection genitaliaSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(genitaliaSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(genitaliaSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(genitaliaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(genitaliaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(genitaliaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(genitaliaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(genitaliaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(genitaliaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(genitaliaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(genitaliaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGenitaliaSection_validateGenitaliaSectionTemplateId(
				genitaliaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGenitaliaSection_validateGenitaliaSectionCode(genitaliaSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGenitaliaSection_validateGenitaliaSectionProblemEntry(
				genitaliaSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateGenitaliaSectionTemplateId constraint of '<em>Genitalia Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGenitaliaSection_validateGenitaliaSectionTemplateId(GenitaliaSection genitaliaSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return genitaliaSection.validateGenitaliaSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateGenitaliaSectionCode constraint of '<em>Genitalia Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGenitaliaSection_validateGenitaliaSectionCode(GenitaliaSection genitaliaSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return genitaliaSection.validateGenitaliaSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateGenitaliaSectionProblemEntry constraint of '<em>Genitalia Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGenitaliaSection_validateGenitaliaSectionProblemEntry(GenitaliaSection genitaliaSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return genitaliaSection.validateGenitaliaSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRectumSection(RectumSection rectumSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(rectumSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(rectumSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(rectumSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(rectumSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(rectumSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(rectumSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(rectumSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(rectumSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(rectumSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(rectumSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateRectumSection_validateRectumSectionTemplateId(rectumSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateRectumSection_validateRectumSectionCode(rectumSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateRectumSection_validateRectumSectionProblemEntry(rectumSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateRectumSectionTemplateId constraint of '<em>Rectum Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRectumSection_validateRectumSectionTemplateId(RectumSection rectumSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return rectumSection.validateRectumSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateRectumSectionCode constraint of '<em>Rectum Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRectumSection_validateRectumSectionCode(RectumSection rectumSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return rectumSection.validateRectumSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateRectumSectionProblemEntry constraint of '<em>Rectum Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRectumSection_validateRectumSectionProblemEntry(RectumSection rectumSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return rectumSection.validateRectumSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExtremitiesSection(ExtremitiesSection extremitiesSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(extremitiesSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(extremitiesSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(extremitiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(extremitiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(extremitiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(extremitiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(extremitiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(extremitiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(extremitiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(extremitiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExtremitiesSection_validateExtremitiesSectionTemplateId(
				extremitiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExtremitiesSection_validateExtremitiesSectionCode(
				extremitiesSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateExtremitiesSection_validateExtremitiesSectionProblemEntry(
				extremitiesSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateExtremitiesSectionTemplateId constraint of '<em>Extremities Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExtremitiesSection_validateExtremitiesSectionTemplateId(
			ExtremitiesSection extremitiesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return extremitiesSection.validateExtremitiesSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateExtremitiesSectionCode constraint of '<em>Extremities Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExtremitiesSection_validateExtremitiesSectionCode(ExtremitiesSection extremitiesSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return extremitiesSection.validateExtremitiesSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateExtremitiesSectionProblemEntry constraint of '<em>Extremities Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExtremitiesSection_validateExtremitiesSectionProblemEntry(
			ExtremitiesSection extremitiesSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return extremitiesSection.validateExtremitiesSectionProblemEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReviewOfSystemsSection(ReviewOfSystemsSection reviewOfSystemsSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(reviewOfSystemsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(reviewOfSystemsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReviewOfSystemsSection_validateReviewOfSystemsSectionTemplateId(
				reviewOfSystemsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReviewOfSystemsSection_validateReviewOfSystemsSectionCode(
				reviewOfSystemsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateReviewOfSystemsSectionTemplateId constraint of '<em>Review Of Systems Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReviewOfSystemsSection_validateReviewOfSystemsSectionTemplateId(
			ReviewOfSystemsSection reviewOfSystemsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reviewOfSystemsSection.validateReviewOfSystemsSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateReviewOfSystemsSectionCode constraint of '<em>Review Of Systems Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReviewOfSystemsSection_validateReviewOfSystemsSectionCode(
			ReviewOfSystemsSection reviewOfSystemsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reviewOfSystemsSection.validateReviewOfSystemsSectionCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalCourseSection(HospitalCourseSection hospitalCourseSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalCourseSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(hospitalCourseSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalCourseSection_validateHospitalCourseSectionTemplateId(
				hospitalCourseSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalCourseSection_validateHospitalCourseSectionCode(
				hospitalCourseSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalCourseSectionTemplateId constraint of '<em>Hospital Course Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalCourseSection_validateHospitalCourseSectionTemplateId(
			HospitalCourseSection hospitalCourseSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return hospitalCourseSection.validateHospitalCourseSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHospitalCourseSectionCode constraint of '<em>Hospital Course Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalCourseSection_validateHospitalCourseSectionCode(
			HospitalCourseSection hospitalCourseSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return hospitalCourseSection.validateHospitalCourseSectionCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSection(AssessmentAndPlanSection assessmentAndPlanSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(assessmentAndPlanSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(assessmentAndPlanSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionTemplateId(
				assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionCode(
				assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionMedication(
				assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionImmunization(
				assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionEncounterEntry(
				assessmentAndPlanSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionProcedureEntry(
				assessmentAndPlanSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAssessmentAndPlanSectionTemplateId constraint of '<em>Assessment And Plan Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionTemplateId(
			AssessmentAndPlanSection assessmentAndPlanSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assessmentAndPlanSection.validateAssessmentAndPlanSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAssessmentAndPlanSectionCode constraint of '<em>Assessment And Plan Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionCode(
			AssessmentAndPlanSection assessmentAndPlanSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assessmentAndPlanSection.validateAssessmentAndPlanSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateAssessmentAndPlanSectionMedication constraint of '<em>Assessment And Plan Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionMedication(
			AssessmentAndPlanSection assessmentAndPlanSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assessmentAndPlanSection.validateAssessmentAndPlanSectionMedication(diagnostics, context);
	}

	/**
	 * Validates the validateAssessmentAndPlanSectionImmunization constraint of '<em>Assessment And Plan Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionImmunization(
			AssessmentAndPlanSection assessmentAndPlanSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assessmentAndPlanSection.validateAssessmentAndPlanSectionImmunization(diagnostics, context);
	}

	/**
	 * Validates the validateAssessmentAndPlanSectionEncounterEntry constraint of '<em>Assessment And Plan Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionEncounterEntry(
			AssessmentAndPlanSection assessmentAndPlanSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assessmentAndPlanSection.validateAssessmentAndPlanSectionEncounterEntry(diagnostics, context);
	}

	/**
	 * Validates the validateAssessmentAndPlanSectionProcedureEntry constraint of '<em>Assessment And Plan Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSection_validateAssessmentAndPlanSectionProcedureEntry(
			AssessmentAndPlanSection assessmentAndPlanSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assessmentAndPlanSection.validateAssessmentAndPlanSectionProcedureEntry(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLanguageSpoken(LanguageSpoken languageSpoken, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(languageSpoken, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(languageSpoken, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLanguageSpoken_validateLanguageSpokenNoProficiencyLevelCode(
				languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLanguageSpoken_validateLanguageSpokenTemplateId(languageSpoken, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLanguageSpoken_validateLanguageSpokenModeCode(languageSpoken, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateLanguageSpokenNoProficiencyLevelCode constraint of '<em>Language Spoken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLanguageSpoken_validateLanguageSpokenNoProficiencyLevelCode(LanguageSpoken languageSpoken,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return languageSpoken.validateLanguageSpokenNoProficiencyLevelCode(diagnostics, context);
	}

	/**
	 * Validates the validateLanguageSpokenTemplateId constraint of '<em>Language Spoken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLanguageSpoken_validateLanguageSpokenTemplateId(LanguageSpoken languageSpoken,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return languageSpoken.validateLanguageSpokenTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateLanguageSpokenModeCode constraint of '<em>Language Spoken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLanguageSpoken_validateLanguageSpokenModeCode(LanguageSpoken languageSpoken,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return languageSpoken.validateLanguageSpokenModeCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthcareProvider(HealthcareProvider healthcareProvider, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(healthcareProvider, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(healthcareProvider, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(healthcareProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(healthcareProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(healthcareProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(healthcareProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(healthcareProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(healthcareProvider, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHealthcareProvider_validateHealthcareProviderTemplateId(
				healthcareProvider, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHealthcareProviderTemplateId constraint of '<em>Healthcare Provider</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHealthcareProvider_validateHealthcareProviderTemplateId(
			HealthcareProvider healthcareProvider, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return healthcareProvider.validateHealthcareProviderTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose(MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationNormalDose, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationNormalDose, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSubstanceAdministration_validateClassCode(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMoodCode(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDoseQuantityOrRateQuantity(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasConsents(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationInformationSource(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasPreconditionCriterion(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasReason(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasReasonProblem(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasProduct(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDosing(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDosingRelationship(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDescriptionNoMedNotKnown(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationReasonClassMood(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasProductEntry(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIntructionsInversion(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductStrength(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductName(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationPreconditionReference(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasSupplyEntryInversion(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasFillNumber(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationFirstEffectiveTimeDatatype(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDoseUnits(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDeliveryMethodDescription(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasMedicationInformation(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasStatusOfMedication(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndication(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndicationNarrativeText(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndicationVocab(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasPatientInstructions(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasMedicationVehicle(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleType(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleClass(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCode(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleName(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCodedName(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCodedNameVocab(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationTemplateId(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationId(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationCode(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationStatusCode(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationEffectiveTime(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationRouteCode(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationApproachSiteCode(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDoseQuantity(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationRateQuantity(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMaxDoseQuantity(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationAdministrationUnitCode(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMedicationSeriesNumberObservation(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMedicationStatusObservation(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductInstance(medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseMoodCode(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseHasDoseQuantityOrRateQuantity(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseHasConsents(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseInformationSource(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseHasPreconditionCriterion(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseHasReason(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseHasReasonProblem(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseHasProduct(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseHasDosing(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseDosingRelationship(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseHasDescriptionNoMedNotKnown(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseReasonClassMood(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseHasProductEntry(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseHasIntructionsInversion(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseProductStrength(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseProductName(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDosePreconditionReference(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseHasSupplyEntryInversion(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseHasFillNumber(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseNoSubordinateSubstanceAdministration(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseId(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseCode(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseStatusCode(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseEffectiveTime(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseRouteCode(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseApproachSiteCode(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseDoseQuantity(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseRateQuantity(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseMaxDoseQuantity(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseAdministrationUnitCode(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseMedicationSeriesNumberObservation(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseMedicationStatusObservation(
				medicationNormalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationNormalDose_validateMedicationNormalDoseProductInstance(
				medicationNormalDose, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationNormalDoseMoodCode constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseMoodCode(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseHasDoseQuantityOrRateQuantity constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseHasDoseQuantityOrRateQuantity(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseHasDoseQuantityOrRateQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseHasConsents constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseHasConsents(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseHasConsents(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseInformationSource constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseInformationSource(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseHasPreconditionCriterion constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseHasPreconditionCriterion(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseHasPreconditionCriterion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseHasReason constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseHasReason(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseHasReason(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseHasReasonProblem constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseHasReasonProblem(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseHasReasonProblem(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseHasProduct constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseHasProduct(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseHasProduct(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseHasDosing constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseHasDosing(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseHasDosing(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseDosingRelationship constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseDosingRelationship(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseDosingRelationship(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseHasDescriptionNoMedNotKnown constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseHasDescriptionNoMedNotKnown(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseHasDescriptionNoMedNotKnown(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseReasonClassMood constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseReasonClassMood(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseReasonClassMood(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseHasProductEntry constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseHasProductEntry(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseHasProductEntry(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseHasIntructionsInversion constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseHasIntructionsInversion(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseHasIntructionsInversion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseProductStrength constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseProductStrength(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseProductStrength(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseProductName constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseProductName(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseProductName(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDosePreconditionReference constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDosePreconditionReference(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDosePreconditionReference(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseHasSupplyEntryInversion constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseHasSupplyEntryInversion(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseHasSupplyEntryInversion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseHasFillNumber constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseHasFillNumber(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseHasFillNumber(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseNoSubordinateSubstanceAdministration constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseNoSubordinateSubstanceAdministration(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseNoSubordinateSubstanceAdministration(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseId constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseId(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseCode constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseCode(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseStatusCode constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseStatusCode(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseEffectiveTime constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseEffectiveTime(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseRouteCode constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseRouteCode(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseApproachSiteCode constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseApproachSiteCode(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseApproachSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseDoseQuantity constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseDoseQuantity(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseRateQuantity constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseRateQuantity(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseRateQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseMaxDoseQuantity constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseMaxDoseQuantity(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseMaxDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseAdministrationUnitCode constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseAdministrationUnitCode(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseAdministrationUnitCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseMedicationSeriesNumberObservation constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseMedicationSeriesNumberObservation(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseMedicationSeriesNumberObservation(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseMedicationStatusObservation constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseMedicationStatusObservation(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseMedicationStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationNormalDoseProductInstance constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationNormalDoseProductInstance(
			MedicationNormalDose medicationNormalDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationNormalDoseProductInstance(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTemplateId constraint of '<em>Medication Normal Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationNormalDose_validateMedicationTemplateId(MedicationNormalDose medicationNormalDose,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationNormalDose.validateMedicationTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose(MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationSplitDose, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationSplitDose, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSubstanceAdministration_validateClassCode(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMoodCode(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDoseQuantityOrRateQuantity(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasConsents(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationInformationSource(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasPreconditionCriterion(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasReason(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasReasonProblem(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasProduct(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDosing(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDosingRelationship(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDescriptionNoMedNotKnown(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationReasonClassMood(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasProductEntry(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIntructionsInversion(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductStrength(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductName(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationPreconditionReference(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasSupplyEntryInversion(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasFillNumber(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationFirstEffectiveTimeDatatype(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDoseUnits(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDeliveryMethodDescription(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasMedicationInformation(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasStatusOfMedication(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndication(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndicationNarrativeText(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndicationVocab(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasPatientInstructions(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasMedicationVehicle(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleType(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleClass(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCode(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleName(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCodedName(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCodedNameVocab(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationTemplateId(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationId(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationCode(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationStatusCode(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationEffectiveTime(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationRouteCode(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationApproachSiteCode(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDoseQuantity(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationRateQuantity(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMaxDoseQuantity(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationAdministrationUnitCode(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMedicationSeriesNumberObservation(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMedicationStatusObservation(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductInstance(medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseMoodCode(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseHasDoseQuantityOrRateQuantity(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseHasConsents(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseInformationSource(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseHasPreconditionCriterion(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseHasReason(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseHasReasonProblem(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseHasProduct(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseHasDosing(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseDosingRelationship(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseHasDescriptionNoMedNotKnown(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseReasonClassMood(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseHasProductEntry(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseHasIntructionsInversion(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseProductStrength(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseProductName(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDosePreconditionReference(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseHasSupplyEntryInversion(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseHasFillNumber(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseSplitDosingSubstanceAdministration(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseId(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseCode(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseStatusCode(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseEffectiveTime(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseRouteCode(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseApproachSiteCode(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseDoseQuantity(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseRateQuantity(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseMaxDoseQuantity(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseAdministrationUnitCode(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseMedicationSeriesNumberObservation(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseMedicationStatusObservation(
				medicationSplitDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationSplitDose_validateMedicationSplitDoseProductInstance(
				medicationSplitDose, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationSplitDoseMoodCode constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseMoodCode(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseHasDoseQuantityOrRateQuantity constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseHasDoseQuantityOrRateQuantity(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseHasDoseQuantityOrRateQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseHasConsents constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseHasConsents(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseHasConsents(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseInformationSource constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseInformationSource(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseHasPreconditionCriterion constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseHasPreconditionCriterion(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseHasPreconditionCriterion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseHasReason constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseHasReason(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseHasReason(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseHasReasonProblem constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseHasReasonProblem(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseHasReasonProblem(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseHasProduct constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseHasProduct(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseHasProduct(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseHasDosing constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseHasDosing(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseHasDosing(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseDosingRelationship constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseDosingRelationship(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseDosingRelationship(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseHasDescriptionNoMedNotKnown constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseHasDescriptionNoMedNotKnown(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseHasDescriptionNoMedNotKnown(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseReasonClassMood constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseReasonClassMood(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseReasonClassMood(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseHasProductEntry constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseHasProductEntry(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseHasProductEntry(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseHasIntructionsInversion constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseHasIntructionsInversion(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseHasIntructionsInversion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseProductStrength constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseProductStrength(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseProductStrength(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseProductName constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseProductName(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseProductName(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDosePreconditionReference constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDosePreconditionReference(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDosePreconditionReference(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseHasSupplyEntryInversion constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseHasSupplyEntryInversion(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseHasSupplyEntryInversion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseHasFillNumber constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseHasFillNumber(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseHasFillNumber(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseSplitDosingSubstanceAdministration constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseSplitDosingSubstanceAdministration(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseSplitDosingSubstanceAdministration(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseId constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseId(MedicationSplitDose medicationSplitDose,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseCode constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseCode(MedicationSplitDose medicationSplitDose,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseStatusCode constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseStatusCode(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseEffectiveTime constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseEffectiveTime(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseRouteCode constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseRouteCode(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseApproachSiteCode constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseApproachSiteCode(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseApproachSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseDoseQuantity constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseDoseQuantity(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseRateQuantity constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseRateQuantity(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseRateQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseMaxDoseQuantity constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseMaxDoseQuantity(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseMaxDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseAdministrationUnitCode constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseAdministrationUnitCode(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseAdministrationUnitCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseMedicationSeriesNumberObservation constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseMedicationSeriesNumberObservation(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseMedicationSeriesNumberObservation(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseMedicationStatusObservation constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseMedicationStatusObservation(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseMedicationStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationSplitDoseProductInstance constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationSplitDoseProductInstance(
			MedicationSplitDose medicationSplitDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationSplitDoseProductInstance(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTemplateId constraint of '<em>Medication Split Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationSplitDose_validateMedicationTemplateId(MedicationSplitDose medicationSplitDose,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationSplitDose.validateMedicationTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose(MedicationTaperedDose medicationTaperedDose,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationTaperedDose, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationTaperedDose, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSubstanceAdministration_validateClassCode(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMoodCode(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDoseQuantityOrRateQuantity(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasConsents(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationInformationSource(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasPreconditionCriterion(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasReason(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasReasonProblem(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasProduct(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDosing(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDosingRelationship(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDescriptionNoMedNotKnown(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationReasonClassMood(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasProductEntry(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIntructionsInversion(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductStrength(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductName(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationPreconditionReference(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasSupplyEntryInversion(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasFillNumber(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationFirstEffectiveTimeDatatype(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDoseUnits(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDeliveryMethodDescription(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasMedicationInformation(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasStatusOfMedication(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndication(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndicationNarrativeText(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndicationVocab(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasPatientInstructions(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasMedicationVehicle(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleType(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleClass(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCode(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleName(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCodedName(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCodedNameVocab(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTemplateId(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationId(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationCode(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationStatusCode(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationEffectiveTime(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationRouteCode(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationApproachSiteCode(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDoseQuantity(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationRateQuantity(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMaxDoseQuantity(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationAdministrationUnitCode(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMedicationSeriesNumberObservation(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMedicationStatusObservation(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductInstance(medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseMoodCode(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseHasDoseQuantityOrRateQuantity(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseHasConsents(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseInformationSource(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseHasPreconditionCriterion(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseHasReason(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseHasReasonProblem(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseHasProduct(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseHasDosing(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseDosingRelationship(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseHasDescriptionNoMedNotKnown(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseReasonClassMood(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseHasProductEntry(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseHasIntructionsInversion(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseProductStrength(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseProductName(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDosePreconditionReference(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseHasSupplyEntryInversion(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseHasFillNumber(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseTaperedDosingSubstanceAdministration(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseId(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseCode(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseStatusCode(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseEffectiveTime(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseRouteCode(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseApproachSiteCode(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseDoseQuantity(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseRateQuantity(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseMaxDoseQuantity(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseAdministrationUnitCode(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseMedicationSeriesNumberObservation(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseMedicationStatusObservation(
				medicationTaperedDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationTaperedDose_validateMedicationTaperedDoseProductInstance(
				medicationTaperedDose, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationTaperedDoseMoodCode constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseMoodCode(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseHasDoseQuantityOrRateQuantity constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseHasDoseQuantityOrRateQuantity(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseHasDoseQuantityOrRateQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseHasConsents constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseHasConsents(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseHasConsents(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseInformationSource constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseInformationSource(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseHasPreconditionCriterion constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseHasPreconditionCriterion(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseHasPreconditionCriterion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseHasReason constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseHasReason(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseHasReason(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseHasReasonProblem constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseHasReasonProblem(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseHasReasonProblem(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseHasProduct constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseHasProduct(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseHasProduct(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseHasDosing constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseHasDosing(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseHasDosing(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseDosingRelationship constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseDosingRelationship(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseDosingRelationship(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseHasDescriptionNoMedNotKnown constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseHasDescriptionNoMedNotKnown(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseHasDescriptionNoMedNotKnown(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseReasonClassMood constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseReasonClassMood(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseReasonClassMood(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseHasProductEntry constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseHasProductEntry(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseHasProductEntry(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseHasIntructionsInversion constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseHasIntructionsInversion(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseHasIntructionsInversion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseProductStrength constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseProductStrength(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseProductStrength(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseProductName constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseProductName(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseProductName(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDosePreconditionReference constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDosePreconditionReference(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDosePreconditionReference(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseHasSupplyEntryInversion constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseHasSupplyEntryInversion(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseHasSupplyEntryInversion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseHasFillNumber constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseHasFillNumber(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseHasFillNumber(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseTaperedDosingSubstanceAdministration constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseTaperedDosingSubstanceAdministration(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseTaperedDosingSubstanceAdministration(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseId constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseId(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseCode constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseCode(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseStatusCode constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseStatusCode(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseEffectiveTime constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseEffectiveTime(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseRouteCode constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseRouteCode(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseApproachSiteCode constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseApproachSiteCode(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseApproachSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseDoseQuantity constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseDoseQuantity(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseRateQuantity constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseRateQuantity(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseRateQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseMaxDoseQuantity constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseMaxDoseQuantity(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseMaxDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseAdministrationUnitCode constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseAdministrationUnitCode(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseAdministrationUnitCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseMedicationSeriesNumberObservation constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseMedicationSeriesNumberObservation(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseMedicationSeriesNumberObservation(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseMedicationStatusObservation constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseMedicationStatusObservation(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseMedicationStatusObservation(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTaperedDoseProductInstance constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTaperedDoseProductInstance(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTaperedDoseProductInstance(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTemplateId constraint of '<em>Medication Tapered Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationTaperedDose_validateMedicationTemplateId(
			MedicationTaperedDose medicationTaperedDose, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationTaperedDose.validateMedicationTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose(MedicationConditionalDose medicationConditionalDose,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationConditionalDose, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationConditionalDose, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSubstanceAdministration_validateClassCode(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMoodCode(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDoseQuantityOrRateQuantity(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasConsents(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationInformationSource(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasPreconditionCriterion(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasReason(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasReasonProblem(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasProduct(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDosing(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDosingRelationship(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDescriptionNoMedNotKnown(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationReasonClassMood(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasProductEntry(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIntructionsInversion(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductStrength(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductName(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationPreconditionReference(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasSupplyEntryInversion(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasFillNumber(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationFirstEffectiveTimeDatatype(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDoseUnits(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDeliveryMethodDescription(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasMedicationInformation(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasStatusOfMedication(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndication(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndicationNarrativeText(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndicationVocab(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasPatientInstructions(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasMedicationVehicle(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleType(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleClass(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCode(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleName(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCodedName(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCodedNameVocab(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationTemplateId(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationId(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationCode(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationStatusCode(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationEffectiveTime(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationRouteCode(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationApproachSiteCode(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDoseQuantity(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationRateQuantity(medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMaxDoseQuantity(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationAdministrationUnitCode(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMedicationSeriesNumberObservation(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMedicationStatusObservation(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductInstance(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseMoodCode(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseHasDoseQuantityOrRateQuantity(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseHasConsents(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseInformationSource(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseHasPreconditionCriterion(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseHasReason(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseHasReasonProblem(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseHasProduct(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseHasDosing(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseDosingRelationship(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseHasDescriptionNoMedNotKnown(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseReasonClassMood(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseHasProductEntry(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseHasIntructionsInversion(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseProductStrength(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseProductName(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDosePreconditionReference(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseHasSupplyEntryInversion(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseHasFillNumber(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseConditionalDosingSubstanceAdministration(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseId(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseCode(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseStatusCode(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseEffectiveTime(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseRouteCode(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseApproachSiteCode(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseDoseQuantity(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseRateQuantity(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseMaxDoseQuantity(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseAdministrationUnitCode(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseMedicationSeriesNumberObservation(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseMedicationStatusObservation(
				medicationConditionalDose, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationConditionalDose_validateMedicationConditionalDoseProductInstance(
				medicationConditionalDose, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationConditionalDoseMoodCode constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseMoodCode(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseHasDoseQuantityOrRateQuantity constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseHasDoseQuantityOrRateQuantity(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseHasDoseQuantityOrRateQuantity(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseHasConsents constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseHasConsents(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseHasConsents(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseInformationSource constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseInformationSource(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseInformationSource(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseHasPreconditionCriterion constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseHasPreconditionCriterion(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseHasPreconditionCriterion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseHasReason constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseHasReason(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseHasReason(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseHasReasonProblem constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseHasReasonProblem(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseHasReasonProblem(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseHasProduct constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseHasProduct(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseHasProduct(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseHasDosing constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseHasDosing(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseHasDosing(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseDosingRelationship constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseDosingRelationship(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseDosingRelationship(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseHasDescriptionNoMedNotKnown constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseHasDescriptionNoMedNotKnown(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseHasDescriptionNoMedNotKnown(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseReasonClassMood constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseReasonClassMood(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseReasonClassMood(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseHasProductEntry constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseHasProductEntry(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseHasProductEntry(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseHasIntructionsInversion constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseHasIntructionsInversion(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseHasIntructionsInversion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseProductStrength constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseProductStrength(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseProductStrength(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseProductName constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseProductName(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseProductName(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDosePreconditionReference constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDosePreconditionReference(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDosePreconditionReference(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseHasSupplyEntryInversion constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseHasSupplyEntryInversion(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseHasSupplyEntryInversion(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseHasFillNumber constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseHasFillNumber(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseHasFillNumber(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseConditionalDosingSubstanceAdministration constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseConditionalDosingSubstanceAdministration(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseConditionalDosingSubstanceAdministration(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseId constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseId(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseCode constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseCode(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseStatusCode constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseStatusCode(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseEffectiveTime constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseEffectiveTime(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseRouteCode constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseRouteCode(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseApproachSiteCode constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseApproachSiteCode(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseApproachSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseDoseQuantity constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseDoseQuantity(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseRateQuantity constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseRateQuantity(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseRateQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseMaxDoseQuantity constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseMaxDoseQuantity(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseMaxDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseAdministrationUnitCode constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseAdministrationUnitCode(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseAdministrationUnitCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseMedicationSeriesNumberObservation constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseMedicationSeriesNumberObservation(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseMedicationSeriesNumberObservation(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseMedicationStatusObservation constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseMedicationStatusObservation(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseMedicationStatusObservation(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationConditionalDoseProductInstance constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationConditionalDoseProductInstance(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationConditionalDoseProductInstance(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTemplateId constraint of '<em>Medication Conditional Dose</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationConditionalDose_validateMedicationTemplateId(
			MedicationConditionalDose medicationConditionalDose, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationConditionalDose.validateMedicationTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationCombinationMedication, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationCombinationMedication, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSubstanceAdministration_validateClassCode(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMoodCode(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDoseQuantityOrRateQuantity(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasConsents(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationInformationSource(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasPreconditionCriterion(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasReason(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasReasonProblem(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasProduct(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDosing(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDosingRelationship(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasDescriptionNoMedNotKnown(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationReasonClassMood(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasProductEntry(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIntructionsInversion(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductStrength(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductName(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationPreconditionReference(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasSupplyEntryInversion(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasFillNumber(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationFirstEffectiveTimeDatatype(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDoseUnits(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDeliveryMethodDescription(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasMedicationInformation(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasStatusOfMedication(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndication(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndicationNarrativeText(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasIndicationVocab(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasPatientInstructions(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationHasMedicationVehicle(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleType(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleClass(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCode(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleName(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCodedName(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationVehicleCodedNameVocab(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationTemplateId(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationId(medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationCode(medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationStatusCode(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationEffectiveTime(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationRouteCode(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationApproachSiteCode(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationDoseQuantity(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationRateQuantity(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMaxDoseQuantity(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationAdministrationUnitCode(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMedicationSeriesNumberObservation(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationMedicationStatusObservation(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedication_validateMedicationProductInstance(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationMoodCode(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasDoseQuantityOrRateQuantity(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasConsents(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationInformationSource(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasPreconditionCriterion(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasReason(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasReasonProblem(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasProduct(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasDosing(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationDosingRelationship(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasDescriptionNoMedNotKnown(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationReasonClassMood(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasProductEntry(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasIntructionsInversion(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationProductStrength(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationProductName(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationPreconditionReference(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasSupplyEntryInversion(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasFillNumber(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationCombinationMedicationSubstanceAdministration(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationId(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationCode(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationStatusCode(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationEffectiveTime(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationRouteCode(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationApproachSiteCode(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationDoseQuantity(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationRateQuantity(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationMaxDoseQuantity(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationAdministrationUnitCode(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationMedicationSeriesNumberObservation(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationMedicationStatusObservation(
				medicationCombinationMedication, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationCombinationMedication_validateMedicationCombinationMedicationProductInstance(
				medicationCombinationMedication, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationCombinationMedicationMoodCode constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationMoodCode(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationHasDoseQuantityOrRateQuantity constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasDoseQuantityOrRateQuantity(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationHasDoseQuantityOrRateQuantity(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationHasConsents constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasConsents(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationHasConsents(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationInformationSource constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationInformationSource(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationInformationSource(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationHasPreconditionCriterion constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasPreconditionCriterion(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationHasPreconditionCriterion(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationHasReason constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasReason(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationHasReason(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationHasReasonProblem constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasReasonProblem(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationHasReasonProblem(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationHasProduct constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasProduct(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationHasProduct(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationHasDosing constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasDosing(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationHasDosing(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationDosingRelationship constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationDosingRelationship(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationDosingRelationship(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationHasDescriptionNoMedNotKnown constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasDescriptionNoMedNotKnown(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationHasDescriptionNoMedNotKnown(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationReasonClassMood constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationReasonClassMood(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationReasonClassMood(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationHasProductEntry constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasProductEntry(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationHasProductEntry(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationHasIntructionsInversion constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasIntructionsInversion(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationHasIntructionsInversion(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationProductStrength constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationProductStrength(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationProductStrength(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationProductName constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationProductName(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationProductName(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationPreconditionReference constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationPreconditionReference(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationPreconditionReference(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationHasSupplyEntryInversion constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasSupplyEntryInversion(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationHasSupplyEntryInversion(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationHasFillNumber constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationHasFillNumber(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationHasFillNumber(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationCombinationMedicationSubstanceAdministration constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationCombinationMedicationSubstanceAdministration(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationCombinationMedicationSubstanceAdministration(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationId constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationId(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationCode constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationCode(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationStatusCode constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationStatusCode(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationEffectiveTime constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationEffectiveTime(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationEffectiveTime(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationRouteCode constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationRouteCode(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationApproachSiteCode constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationApproachSiteCode(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationApproachSiteCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationDoseQuantity constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationDoseQuantity(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationRateQuantity constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationRateQuantity(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationRateQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationMaxDoseQuantity constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationMaxDoseQuantity(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationMaxDoseQuantity(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationAdministrationUnitCode constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationAdministrationUnitCode(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationAdministrationUnitCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationMedicationSeriesNumberObservation constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationMedicationSeriesNumberObservation(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationMedicationSeriesNumberObservation(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationMedicationStatusObservation constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationMedicationStatusObservation(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationMedicationStatusObservation(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationCombinationMedicationProductInstance constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationCombinationMedicationProductInstance(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationCombinationMedicationProductInstance(
			diagnostics, context);
	}

	/**
	 * Validates the validateMedicationTemplateId constraint of '<em>Medication Combination Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationCombinationMedication_validateMedicationTemplateId(
			MedicationCombinationMedication medicationCombinationMedication, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return medicationCombinationMedication.validateMedicationTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupportParticipant(SupportParticipant supportParticipant, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(supportParticipant, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(supportParticipant, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(supportParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(supportParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(supportParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(supportParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(supportParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(supportParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateParticipant1_validateContextControlCode(
				supportParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSupportParticipant_validateSupportParticipantTemplateId(
				supportParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSupportParticipant_validateSupportParticipantTypeCode(
				supportParticipant, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSupportParticipant_validateSupportParticipantTime(
				supportParticipant, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSupportParticipantTemplateId constraint of '<em>Support Participant</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupportParticipant_validateSupportParticipantTemplateId(
			SupportParticipant supportParticipant, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supportParticipant.validateSupportParticipantTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSupportParticipantTypeCode constraint of '<em>Support Participant</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupportParticipant_validateSupportParticipantTypeCode(SupportParticipant supportParticipant,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supportParticipant.validateSupportParticipantTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateSupportParticipantTime constraint of '<em>Support Participant</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupportParticipant_validateSupportParticipantTime(SupportParticipant supportParticipant,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supportParticipant.validateSupportParticipantTime(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument(UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(unstructuredDocument, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(unstructuredDocument, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentPersonHasName(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentRolesShallHaveAddrAndTelecom(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentRolesShouldHaveAddrAndTelecom(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentOrganizationsHaveContactInfo(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentTimePreciseToDay(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentTimePreciseToYear(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentTelephoneMatchesRegex(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasTelephoneDialingDigits(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentUnknownTelephoneUsesNullFlavor(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentTypeIdExtension(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentIdRootFormat(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentOidLength(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentLanguageCodeForm(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentSetIdAndVersionNumber(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentSetIdAndIdAreUnique(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentCopyTimeNotPresent(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasRecordTargetPatientRole(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasPatientBirthTime(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasAdministrativeGenderCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasProviderOrganization(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasAuthorTime(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasAssignedAuthorId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasAssignedAuthorPersonOrDevice(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasDataEntererAssignedPerson(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasDataEntererTime(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasInformant(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasInformantAssignedPersonOrRelatedPerson(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentLegalAuthenticatorHasAssignedPerson(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentAuthenticatorHasAssignedPerson(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentTimePreciseToSecond(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentTimePreciseToYearAndDay(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentTypeIdFixed(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasOneRecordTarget(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasAssignedAuthor(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentPatientRoleId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasPatientRoleAddress(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasPatientName(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasPatientGenderCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasPatientBirthYear(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasOriginalAuthor(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasScanningDevice(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasScanDataEnterer(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasRepresentedCustodianOrganizationName(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasRepresentedCustodianOrganizationAddr(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentLegalAuthenticatorAssignedEntityId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBody(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBodyBinaryText(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBodyTextMediaType(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBodyTextRepresentation(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentNoStructuredData(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentOnePatientPerDocument(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentTemplateId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentTypeId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentId(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentTitle(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentEffectiveTime(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentConfidentialityCode(
				unstructuredDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredDocument_validateUnstructuredDocumentLanguageCode(
				unstructuredDocument, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateUnstructuredDocumentPersonHasName constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentPersonHasName(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentPersonHasName(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentRolesShallHaveAddrAndTelecom constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentRolesShallHaveAddrAndTelecom(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentRolesShallHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentRolesShouldHaveAddrAndTelecom constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentRolesShouldHaveAddrAndTelecom(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentRolesShouldHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentOrganizationsHaveContactInfo constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentOrganizationsHaveContactInfo(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentOrganizationsHaveContactInfo(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentTimePreciseToDay constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentTimePreciseToDay(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentTimePreciseToDay(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentTimePreciseToYear constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentTimePreciseToYear(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentTimePreciseToYear(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentTelephoneMatchesRegex constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentTelephoneMatchesRegex(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentTelephoneMatchesRegex(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasTelephoneDialingDigits constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasTelephoneDialingDigits(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasTelephoneDialingDigits(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentUnknownTelephoneUsesNullFlavor constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentUnknownTelephoneUsesNullFlavor(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentUnknownTelephoneUsesNullFlavor(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentTypeIdExtension constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentTypeIdExtension(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentTypeIdExtension(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentIdRootFormat constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentIdRootFormat(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentIdRootFormat(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentOidLength constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentOidLength(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentOidLength(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentLanguageCodeForm constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentLanguageCodeForm(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentLanguageCodeForm(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentSetIdAndVersionNumber constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentSetIdAndVersionNumber(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentSetIdAndVersionNumber(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentSetIdAndIdAreUnique constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentSetIdAndIdAreUnique(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentSetIdAndIdAreUnique(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentCopyTimeNotPresent constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentCopyTimeNotPresent(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentCopyTimeNotPresent(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasRecordTargetPatientRole constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasRecordTargetPatientRole(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasRecordTargetPatientRole(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasPatientBirthTime constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasPatientBirthTime(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasPatientBirthTime(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasAdministrativeGenderCode constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasAdministrativeGenderCode(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasAdministrativeGenderCode(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasProviderOrganization constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasProviderOrganization(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasProviderOrganization(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasAuthorTime constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasAuthorTime(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasAuthorTime(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasAssignedAuthorId constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasAssignedAuthorId(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasAssignedAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasAssignedAuthorPersonOrDevice constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasAssignedAuthorPersonOrDevice(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasAssignedAuthorPersonOrDevice(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasDataEntererAssignedPerson constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasDataEntererAssignedPerson(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasDataEntererAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasDataEntererTime constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasDataEntererTime(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasDataEntererTime(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasInformant constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasInformant(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasInformant(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasInformantAssignedPersonOrRelatedPerson constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasInformantAssignedPersonOrRelatedPerson(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasInformantAssignedPersonOrRelatedPerson(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentLegalAuthenticatorHasAssignedPerson constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentLegalAuthenticatorHasAssignedPerson(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentLegalAuthenticatorHasAssignedPerson(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentAuthenticatorHasAssignedPerson constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentAuthenticatorHasAssignedPerson(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentAuthenticatorHasAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentTimePreciseToSecond constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentTimePreciseToSecond(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentTimePreciseToSecond(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentTimePreciseToYearAndDay constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentTimePreciseToYearAndDay(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentTimePreciseToYearAndDay(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentTypeIdFixed constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentTypeIdFixed(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentTypeIdFixed(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasOneRecordTarget constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasOneRecordTarget(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasOneRecordTarget(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasAssignedAuthor constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasAssignedAuthor(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasAssignedAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentPatientRoleId constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentPatientRoleId(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentPatientRoleId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasPatientRoleAddress constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasPatientRoleAddress(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasPatientRoleAddress(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasPatientName constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasPatientName(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasPatientName(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasPatientGenderCode constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasPatientGenderCode(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasPatientGenderCode(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasPatientBirthYear constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasPatientBirthYear(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasPatientBirthYear(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasOriginalAuthor constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasOriginalAuthor(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasOriginalAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasScanningDevice constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasScanningDevice(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasScanningDevice(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasScanDataEnterer constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasScanDataEnterer(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasScanDataEnterer(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasRepresentedCustodianOrganizationName constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasRepresentedCustodianOrganizationName(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasRepresentedCustodianOrganizationName(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasRepresentedCustodianOrganizationAddr constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasRepresentedCustodianOrganizationAddr(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasRepresentedCustodianOrganizationAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentLegalAuthenticatorAssignedEntityId constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentLegalAuthenticatorAssignedEntityId(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentLegalAuthenticatorAssignedEntityId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasNonXMLBody constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBody(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasNonXMLBody(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasNonXMLBodyBinaryText constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBodyBinaryText(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasNonXMLBodyBinaryText(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasNonXMLBodyTextMediaType constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBodyTextMediaType(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasNonXMLBodyTextMediaType(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentHasNonXMLBodyTextRepresentation constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentHasNonXMLBodyTextRepresentation(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentHasNonXMLBodyTextRepresentation(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentNoStructuredData constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentNoStructuredData(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentNoStructuredData(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentOnePatientPerDocument constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentOnePatientPerDocument(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentOnePatientPerDocument(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentTemplateId constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentTemplateId(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentTypeId constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentTypeId(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentTypeId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentId constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentId(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentCode constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentCode(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentCode(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentTitle constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentTitle(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentTitle(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentEffectiveTime constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentEffectiveTime(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentConfidentialityCode constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentConfidentialityCode(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentConfidentialityCode(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredDocumentLanguageCode constraint of '<em>Unstructured Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredDocument_validateUnstructuredDocumentLanguageCode(
			UnstructuredDocument unstructuredDocument, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return unstructuredDocument.validateUnstructuredDocumentLanguageCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanOriginalAuthor(ScanOriginalAuthor scanOriginalAuthor, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(scanOriginalAuthor, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(scanOriginalAuthor, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAuthor_validateTypeCode(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAuthor_validateContextControlCode(scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanOriginalAuthor_validateScanOriginalAuthorHasAssignedAuthorId(
				scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanOriginalAuthor_validateScanOriginalAuthorHasAssignedAuthorRepresentedOrganizationId(
				scanOriginalAuthor, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanOriginalAuthor_validateScanOriginalAuthorTemplateId(
				scanOriginalAuthor, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateScanOriginalAuthorHasAssignedAuthorId constraint of '<em>Scan Original Author</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanOriginalAuthor_validateScanOriginalAuthorHasAssignedAuthorId(
			ScanOriginalAuthor scanOriginalAuthor, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanOriginalAuthor.validateScanOriginalAuthorHasAssignedAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateScanOriginalAuthorHasAssignedAuthorRepresentedOrganizationId constraint of '<em>Scan Original Author</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanOriginalAuthor_validateScanOriginalAuthorHasAssignedAuthorRepresentedOrganizationId(
			ScanOriginalAuthor scanOriginalAuthor, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanOriginalAuthor.validateScanOriginalAuthorHasAssignedAuthorRepresentedOrganizationId(
			diagnostics, context);
	}

	/**
	 * Validates the validateScanOriginalAuthorTemplateId constraint of '<em>Scan Original Author</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanOriginalAuthor_validateScanOriginalAuthorTemplateId(
			ScanOriginalAuthor scanOriginalAuthor, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanOriginalAuthor.validateScanOriginalAuthorTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice(ScanningDevice scanningDevice, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(scanningDevice, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(scanningDevice, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAuthor_validateTypeCode(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateAuthor_validateContextControlCode(scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanningDevice_validateScanningDeviceTimeEqualsDocumentEffectiveTime(
				scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanningDevice_validateScanningDeviceHasAssignedAuthorId(
				scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanningDevice_validateScanningDeviceHasAssignedAuthoringDeviceCode(
				scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanningDevice_validateScanningDeviceHasDeviceManufacturerModelName(
				scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanningDevice_validateScanningDeviceHasDeviceSoftwareName(
				scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanningDevice_validateScanningDeviceHasAssignedAuthorRepresentedOrganizationId(
				scanningDevice, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanningDevice_validateScanningDeviceTemplateId(scanningDevice, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateScanningDeviceTimeEqualsDocumentEffectiveTime constraint of '<em>Scanning Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice_validateScanningDeviceTimeEqualsDocumentEffectiveTime(
			ScanningDevice scanningDevice, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanningDevice.validateScanningDeviceTimeEqualsDocumentEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateScanningDeviceHasAssignedAuthorId constraint of '<em>Scanning Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice_validateScanningDeviceHasAssignedAuthorId(ScanningDevice scanningDevice,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanningDevice.validateScanningDeviceHasAssignedAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateScanningDeviceHasAssignedAuthoringDeviceCode constraint of '<em>Scanning Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice_validateScanningDeviceHasAssignedAuthoringDeviceCode(
			ScanningDevice scanningDevice, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanningDevice.validateScanningDeviceHasAssignedAuthoringDeviceCode(diagnostics, context);
	}

	/**
	 * Validates the validateScanningDeviceHasDeviceManufacturerModelName constraint of '<em>Scanning Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice_validateScanningDeviceHasDeviceManufacturerModelName(
			ScanningDevice scanningDevice, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanningDevice.validateScanningDeviceHasDeviceManufacturerModelName(diagnostics, context);
	}

	/**
	 * Validates the validateScanningDeviceHasDeviceSoftwareName constraint of '<em>Scanning Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice_validateScanningDeviceHasDeviceSoftwareName(ScanningDevice scanningDevice,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanningDevice.validateScanningDeviceHasDeviceSoftwareName(diagnostics, context);
	}

	/**
	 * Validates the validateScanningDeviceHasAssignedAuthorRepresentedOrganizationId constraint of '<em>Scanning Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice_validateScanningDeviceHasAssignedAuthorRepresentedOrganizationId(
			ScanningDevice scanningDevice, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanningDevice.validateScanningDeviceHasAssignedAuthorRepresentedOrganizationId(diagnostics, context);
	}

	/**
	 * Validates the validateScanningDeviceTemplateId constraint of '<em>Scanning Device</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanningDevice_validateScanningDeviceTemplateId(ScanningDevice scanningDevice,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanningDevice.validateScanningDeviceTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanDataEnterer(ScanDataEnterer scanDataEnterer, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(scanDataEnterer, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(scanDataEnterer, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateDataEnterer_validateTypeCode(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateDataEnterer_validateContextControlCode(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanDataEnterer_validateScanDataEntererTimeEqualsDocumentEffectiveTime(
				scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanDataEnterer_validateScanDataEntererHasAssignedEntityId(
				scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanDataEnterer_validateScanDataEntererTemplateId(scanDataEnterer, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateScanDataEnterer_validateScanDataEntererTime(scanDataEnterer, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateScanDataEntererTimeEqualsDocumentEffectiveTime constraint of '<em>Scan Data Enterer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanDataEnterer_validateScanDataEntererTimeEqualsDocumentEffectiveTime(
			ScanDataEnterer scanDataEnterer, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanDataEnterer.validateScanDataEntererTimeEqualsDocumentEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateScanDataEntererHasAssignedEntityId constraint of '<em>Scan Data Enterer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanDataEnterer_validateScanDataEntererHasAssignedEntityId(ScanDataEnterer scanDataEnterer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanDataEnterer.validateScanDataEntererHasAssignedEntityId(diagnostics, context);
	}

	/**
	 * Validates the validateScanDataEntererTemplateId constraint of '<em>Scan Data Enterer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanDataEnterer_validateScanDataEntererTemplateId(ScanDataEnterer scanDataEnterer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanDataEnterer.validateScanDataEntererTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateScanDataEntererTime constraint of '<em>Scan Data Enterer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateScanDataEnterer_validateScanDataEntererTime(ScanDataEnterer scanDataEnterer,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return scanDataEnterer.validateScanDataEntererTime(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation(MedicationInformation medicationInformation,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicationInformation, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(medicationInformation, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateManufacturedProduct_validateManufacturedDrugOrOtherMaterial(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateManufacturedProduct_validateClassCode(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationHasMaterial(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationHasMaterialCode(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationHasMaterialCodeVocab(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationHasMaterialCodeOriginalText(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationHasMaterialName(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationMayHaveMaterialManufacturer(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationShouldHaveMaterialManufacturer(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationCodedProductName(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationCodedProductVocab(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationCodedDrugClassVocab(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationCodedIngredientVocab(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationCodedBrandName(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationCodedBrandNameVocab(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationFreeTextProductName(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationFreeTextBrandName(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationTemplateId(
				medicationInformation, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateMedicationInformation_validateMedicationInformationId(
				medicationInformation, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateMedicationInformationHasMaterial constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationHasMaterial(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationHasMaterial(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationHasMaterialCode constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationHasMaterialCode(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationHasMaterialCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationHasMaterialCodeVocab constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationHasMaterialCodeVocab(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationHasMaterialCodeVocab(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationHasMaterialCodeOriginalText constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationHasMaterialCodeOriginalText(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationHasMaterialCodeOriginalText(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationHasMaterialName constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationHasMaterialName(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationHasMaterialName(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationMayHaveMaterialManufacturer constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationMayHaveMaterialManufacturer(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationMayHaveMaterialManufacturer(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationShouldHaveMaterialManufacturer constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationShouldHaveMaterialManufacturer(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationShouldHaveMaterialManufacturer(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationCodedProductName constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationCodedProductName(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationCodedProductName(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationCodedProductVocab constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationCodedProductVocab(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationCodedProductVocab(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationCodedDrugClassVocab constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationCodedDrugClassVocab(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationCodedDrugClassVocab(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationCodedIngredientVocab constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationCodedIngredientVocab(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationCodedIngredientVocab(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationCodedBrandName constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationCodedBrandName(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationCodedBrandName(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationCodedBrandNameVocab constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationCodedBrandNameVocab(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationCodedBrandNameVocab(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationFreeTextProductName constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationFreeTextProductName(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationFreeTextProductName(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationFreeTextBrandName constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationFreeTextBrandName(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationFreeTextBrandName(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationTemplateId constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationTemplateId(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicationInformationId constraint of '<em>Medication Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicationInformation_validateMedicationInformationId(
			MedicationInformation medicationInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicationInformation.validateMedicationInformationId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument(UnstructuredOrScannedDocument unstructuredOrScannedDocument,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(unstructuredOrScannedDocument, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(unstructuredOrScannedDocument, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentPersonHasName(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentRolesShallHaveAddrAndTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentRolesShouldHaveAddrAndTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentOrganizationsHaveContactInfo(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTimePreciseToDay(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTimePreciseToYear(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTelephoneMatchesRegex(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasTelephoneDialingDigits(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentUnknownTelephoneUsesNullFlavor(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTypeIdExtension(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentIdRootFormat(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentOidLength(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLanguageCodeForm(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentSetIdAndVersionNumber(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentSetIdAndIdAreUnique(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentCopyTimeNotPresent(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRecordTargetPatientRole(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientBirthTime(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasAdministrativeGenderCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasProviderOrganization(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasAuthorTime(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasAssignedAuthorId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasAssignedAuthorPersonOrDevice(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasDataEntererAssignedPerson(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasDataEntererTime(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasInformant(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasInformantAssignedPersonOrRelatedPerson(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLegalAuthenticatorHasAssignedPerson(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentAuthenticatorHasAssignedPerson(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTimePreciseToSecond(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTimePreciseToYearAndDay(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTypeIdFixed(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasOneRecordTarget(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasAssignedAuthor(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentPatientRoleId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientRoleAddress(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientName(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientGenderCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientBirthYear(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasOriginalAuthor(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasScanningDevice(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasScanDataEnterer(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationName(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLegalAuthenticatorAssignedEntityId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBody(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyBinaryText(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyTextMediaType(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyTextRepresentation(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentNoStructuredData(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentOnePatientPerDocument(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentPatientRoleHasId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentAssignedAuthorHasAddr(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentAssignedAuthorHasTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganization(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationTelecom(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyText(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasTextReferenceOrRepresentation(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasTextMediaTypeValueSet(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTemplateId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentRealmCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTypeId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentId(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTitle(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentEffectiveTime(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLanguageCode(
				unstructuredOrScannedDocument, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentPersonHasName constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentPersonHasName(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentPersonHasName(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentRolesShallHaveAddrAndTelecom constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentRolesShallHaveAddrAndTelecom(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentRolesShallHaveAddrAndTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentRolesShouldHaveAddrAndTelecom constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentRolesShouldHaveAddrAndTelecom(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentRolesShouldHaveAddrAndTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentOrganizationsHaveContactInfo constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentOrganizationsHaveContactInfo(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentOrganizationsHaveContactInfo(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentTimePreciseToDay constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTimePreciseToDay(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentTimePreciseToDay(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentTimePreciseToYear constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTimePreciseToYear(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentTimePreciseToYear(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentTelephoneMatchesRegex constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTelephoneMatchesRegex(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentTelephoneMatchesRegex(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasTelephoneDialingDigits constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasTelephoneDialingDigits(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasTelephoneDialingDigits(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentUnknownTelephoneUsesNullFlavor constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentUnknownTelephoneUsesNullFlavor(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentUnknownTelephoneUsesNullFlavor(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentTypeIdExtension constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTypeIdExtension(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentTypeIdExtension(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentIdRootFormat constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentIdRootFormat(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentIdRootFormat(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentOidLength constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentOidLength(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentOidLength(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentLanguageCodeForm constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLanguageCodeForm(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentLanguageCodeForm(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentSetIdAndVersionNumber constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentSetIdAndVersionNumber(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentSetIdAndVersionNumber(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentSetIdAndIdAreUnique constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentSetIdAndIdAreUnique(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentSetIdAndIdAreUnique(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentCopyTimeNotPresent constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentCopyTimeNotPresent(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentCopyTimeNotPresent(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasRecordTargetPatientRole constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRecordTargetPatientRole(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasRecordTargetPatientRole(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasPatientBirthTime constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientBirthTime(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasPatientBirthTime(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasAdministrativeGenderCode constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasAdministrativeGenderCode(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasAdministrativeGenderCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasProviderOrganization constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasProviderOrganization(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasProviderOrganization(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasAuthorTime constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasAuthorTime(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasAuthorTime(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasAssignedAuthorId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasAssignedAuthorId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasAssignedAuthorId(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasAssignedAuthorPersonOrDevice constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasAssignedAuthorPersonOrDevice(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasAssignedAuthorPersonOrDevice(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasDataEntererAssignedPerson constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasDataEntererAssignedPerson(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasDataEntererAssignedPerson(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasDataEntererTime constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasDataEntererTime(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasDataEntererTime(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasInformant constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasInformant(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasInformant(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasInformantAssignedPersonOrRelatedPerson constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasInformantAssignedPersonOrRelatedPerson(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasInformantAssignedPersonOrRelatedPerson(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentLegalAuthenticatorHasAssignedPerson constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLegalAuthenticatorHasAssignedPerson(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentLegalAuthenticatorHasAssignedPerson(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentAuthenticatorHasAssignedPerson constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentAuthenticatorHasAssignedPerson(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentAuthenticatorHasAssignedPerson(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentTimePreciseToSecond constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTimePreciseToSecond(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentTimePreciseToSecond(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentTimePreciseToYearAndDay constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTimePreciseToYearAndDay(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentTimePreciseToYearAndDay(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentTypeIdFixed constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTypeIdFixed(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentTypeIdFixed(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasOneRecordTarget constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasOneRecordTarget(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasOneRecordTarget(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasAssignedAuthor constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasAssignedAuthor(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasAssignedAuthor(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentPatientRoleId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentPatientRoleId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentPatientRoleId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasPatientRoleAddress constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientRoleAddress(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasPatientRoleAddress(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasPatientName constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientName(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasPatientName(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasPatientGenderCode constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientGenderCode(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasPatientGenderCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasPatientBirthYear constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasPatientBirthYear(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasPatientBirthYear(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasOriginalAuthor constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasOriginalAuthor(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasOriginalAuthor(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasScanningDevice constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasScanningDevice(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasScanningDevice(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasScanDataEnterer constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasScanDataEnterer(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasScanDataEnterer(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationName constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationName(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationName(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationAddr constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationAddr(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentLegalAuthenticatorAssignedEntityId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLegalAuthenticatorAssignedEntityId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentLegalAuthenticatorAssignedEntityId(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasNonXMLBody constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBody(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasNonXMLBody(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasNonXMLBodyBinaryText constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyBinaryText(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasNonXMLBodyBinaryText(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasNonXMLBodyTextMediaType constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyTextMediaType(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasNonXMLBodyTextMediaType(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasNonXMLBodyTextRepresentation constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyTextRepresentation(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasNonXMLBodyTextRepresentation(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentNoStructuredData constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentNoStructuredData(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentNoStructuredData(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentOnePatientPerDocument constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentOnePatientPerDocument(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentOnePatientPerDocument(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentPatientRoleHasId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentPatientRoleHasId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentPatientRoleHasId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentAssignedAuthorHasAddr constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentAssignedAuthorHasAddr(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentAssignedAuthorHasAddr(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentAssignedAuthorHasTelecom constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentAssignedAuthorHasTelecom(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentAssignedAuthorHasTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganization constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganization(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganization(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationId(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationTelecom constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationTelecom(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationTelecom(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasNonXMLBodyText constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasNonXMLBodyText(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasNonXMLBodyText(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasTextReferenceOrRepresentation constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasTextReferenceOrRepresentation(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasTextReferenceOrRepresentation(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentHasTextMediaTypeValueSet constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentHasTextMediaTypeValueSet(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentHasTextMediaTypeValueSet(
			diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentTemplateId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTemplateId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentRealmCode constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentRealmCode(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentRealmCode(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentTypeId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTypeId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentTypeId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentId constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentId(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentId(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentCode constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentCode(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentCode(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentTitle constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentTitle(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentTitle(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentEffectiveTime constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentEffectiveTime(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateUnstructuredOrScannedDocumentLanguageCode constraint of '<em>Unstructured Or Scanned Document</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateUnstructuredOrScannedDocument_validateUnstructuredOrScannedDocumentLanguageCode(
			UnstructuredOrScannedDocument unstructuredOrScannedDocument, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return unstructuredOrScannedDocument.validateUnstructuredOrScannedDocumentLanguageCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary(ReferralSummary referralSummary, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(referralSummary, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(referralSummary, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryPersonHasName(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryRolesShallHaveAddrAndTelecom(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryRolesShouldHaveAddrAndTelecom(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryOrganizationsHaveContactInfo(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryTimePreciseToDay(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryTimePreciseToYear(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryTelephoneMatchesRegex(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryHasTelephoneDialingDigits(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryUnknownTelephoneUsesNullFlavor(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryTypeIdExtension(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryIdRootFormat(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryOidLength(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryLanguageCodeForm(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummarySetIdAndVersionNumber(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummarySetIdAndIdAreUnique(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryCopyTimeNotPresent(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryHasRecordTargetPatientRole(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryHasPatientBirthTime(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryHasAdministrativeGenderCode(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryHasProviderOrganization(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryHasAuthorTime(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryHasAssignedAuthorId(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryHasAssignedAuthorPersonOrDevice(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryHasDataEntererAssignedPerson(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryHasDataEntererTime(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryHasInformant(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryHasInformantAssignedPersonOrRelatedPerson(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryLegalAuthenticatorHasAssignedPerson(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryAuthenticatorHasAssignedPerson(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryTimePreciseToSecond(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryTimePreciseToYearAndDay(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryMedicalSummaryProblemConcernEntry(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryMedicalSummaryAllergyConcernEntry(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryMedicalSummaryMedications(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryTemplateId(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryRealmCode(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryTypeId(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryId(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryCode(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryTitle(referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryEffectiveTime(
				referralSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReferralSummary_validateReferralSummaryLanguageCode(referralSummary, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateReferralSummaryPersonHasName constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryPersonHasName(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryPersonHasName(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryRolesShallHaveAddrAndTelecom constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryRolesShallHaveAddrAndTelecom(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryRolesShallHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryRolesShouldHaveAddrAndTelecom constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryRolesShouldHaveAddrAndTelecom(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryRolesShouldHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryOrganizationsHaveContactInfo constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryOrganizationsHaveContactInfo(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryOrganizationsHaveContactInfo(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryTimePreciseToDay constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryTimePreciseToDay(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryTimePreciseToDay(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryTimePreciseToYear constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryTimePreciseToYear(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryTimePreciseToYear(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryTelephoneMatchesRegex constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryTelephoneMatchesRegex(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryTelephoneMatchesRegex(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryHasTelephoneDialingDigits constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryHasTelephoneDialingDigits(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryHasTelephoneDialingDigits(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryUnknownTelephoneUsesNullFlavor constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryUnknownTelephoneUsesNullFlavor(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryUnknownTelephoneUsesNullFlavor(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryTypeIdExtension constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryTypeIdExtension(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryTypeIdExtension(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryIdRootFormat constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryIdRootFormat(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryIdRootFormat(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryOidLength constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryOidLength(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryOidLength(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryLanguageCodeForm constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryLanguageCodeForm(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryLanguageCodeForm(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummarySetIdAndVersionNumber constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummarySetIdAndVersionNumber(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummarySetIdAndVersionNumber(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummarySetIdAndIdAreUnique constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummarySetIdAndIdAreUnique(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummarySetIdAndIdAreUnique(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryCopyTimeNotPresent constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryCopyTimeNotPresent(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryCopyTimeNotPresent(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryHasRecordTargetPatientRole constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryHasRecordTargetPatientRole(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryHasRecordTargetPatientRole(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryHasPatientBirthTime constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryHasPatientBirthTime(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryHasPatientBirthTime(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryHasAdministrativeGenderCode constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryHasAdministrativeGenderCode(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryHasAdministrativeGenderCode(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryHasProviderOrganization constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryHasProviderOrganization(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryHasProviderOrganization(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryHasAuthorTime constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryHasAuthorTime(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryHasAuthorTime(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryHasAssignedAuthorId constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryHasAssignedAuthorId(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryHasAssignedAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryHasAssignedAuthorPersonOrDevice constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryHasAssignedAuthorPersonOrDevice(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryHasAssignedAuthorPersonOrDevice(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryHasDataEntererAssignedPerson constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryHasDataEntererAssignedPerson(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryHasDataEntererAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryHasDataEntererTime constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryHasDataEntererTime(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryHasDataEntererTime(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryHasInformant constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryHasInformant(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryHasInformant(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryHasInformantAssignedPersonOrRelatedPerson constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryHasInformantAssignedPersonOrRelatedPerson(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryHasInformantAssignedPersonOrRelatedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryLegalAuthenticatorHasAssignedPerson constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryLegalAuthenticatorHasAssignedPerson(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryLegalAuthenticatorHasAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryAuthenticatorHasAssignedPerson constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryAuthenticatorHasAssignedPerson(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryAuthenticatorHasAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryTimePreciseToSecond constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryTimePreciseToSecond(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryTimePreciseToSecond(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryTimePreciseToYearAndDay constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryTimePreciseToYearAndDay(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryTimePreciseToYearAndDay(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryMedicalSummaryProblemConcernEntry constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryMedicalSummaryProblemConcernEntry(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryMedicalSummaryProblemConcernEntry(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryMedicalSummaryAllergyConcernEntry constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryMedicalSummaryAllergyConcernEntry(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryMedicalSummaryAllergyConcernEntry(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryMedicalSummaryMedications constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryMedicalSummaryMedications(
			ReferralSummary referralSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryMedicalSummaryMedications(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryTemplateId constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryTemplateId(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryRealmCode constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryRealmCode(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryRealmCode(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryTypeId constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryTypeId(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryTypeId(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryId constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryId(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryId(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryCode constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryCode(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryCode(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryTitle constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryTitle(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryTitle(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryEffectiveTime constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryEffectiveTime(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateReferralSummaryLanguageCode constraint of '<em>Referral Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferralSummary_validateReferralSummaryLanguageCode(ReferralSummary referralSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referralSummary.validateReferralSummaryLanguageCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary(DischargeSummary dischargeSummary, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(dischargeSummary, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(dischargeSummary, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryPersonHasName(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryRolesShallHaveAddrAndTelecom(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryRolesShouldHaveAddrAndTelecom(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryOrganizationsHaveContactInfo(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryTimePreciseToDay(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryTimePreciseToYear(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryTelephoneMatchesRegex(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHasTelephoneDialingDigits(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryUnknownTelephoneUsesNullFlavor(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryTypeIdExtension(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryIdRootFormat(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryOidLength(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryLanguageCodeForm(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummarySetIdAndVersionNumber(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummarySetIdAndIdAreUnique(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryCopyTimeNotPresent(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHasRecordTargetPatientRole(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHasPatientBirthTime(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHasAdministrativeGenderCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHasProviderOrganization(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHasAuthorTime(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHasAssignedAuthorId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHasAssignedAuthorPersonOrDevice(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHasDataEntererAssignedPerson(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHasDataEntererTime(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHasInformant(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHasInformantAssignedPersonOrRelatedPerson(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryLegalAuthenticatorHasAssignedPerson(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryAuthenticatorHasAssignedPerson(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryTimePreciseToSecond(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryTimePreciseToYearAndDay(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryMedicalSummaryProblemConcernEntry(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryMedicalSummaryAllergyConcernEntry(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryMedicalSummaryMedications(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryTemplateId(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryRealmCode(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryTypeId(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryId(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryCode(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryTitle(dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryEffectiveTime(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryLanguageCode(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryProblemListSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryAdmissionMedicationHistorySection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHospitalAdmissionDiagnosisSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryAdvanceDirectivesSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryAllergiesReactionsSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryDischargeDiagnosisSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryDischargeDiet(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHospitalDischargeMedicationsSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryDiagnosticResultsSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryFunctionalStatusSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHistoryOfPresentIllness(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHospitalCourseSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryMedicalEquipmentSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryPhysicalExamSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryPlanOfCareSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryHistoryOfPastIllnessSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryReviewOfSystemsSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryMedicationsAdministeredSection(
				dischargeSummary, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeSummary_validateDischargeSummaryVitalSignsSection(
				dischargeSummary, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateDischargeSummaryPersonHasName constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryPersonHasName(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryPersonHasName(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryRolesShallHaveAddrAndTelecom constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryRolesShallHaveAddrAndTelecom(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryRolesShallHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryRolesShouldHaveAddrAndTelecom constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryRolesShouldHaveAddrAndTelecom(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryRolesShouldHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryOrganizationsHaveContactInfo constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryOrganizationsHaveContactInfo(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryOrganizationsHaveContactInfo(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryTimePreciseToDay constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryTimePreciseToDay(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryTimePreciseToDay(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryTimePreciseToYear constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryTimePreciseToYear(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryTimePreciseToYear(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryTelephoneMatchesRegex constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryTelephoneMatchesRegex(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryTelephoneMatchesRegex(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHasTelephoneDialingDigits constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHasTelephoneDialingDigits(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHasTelephoneDialingDigits(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryUnknownTelephoneUsesNullFlavor constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryUnknownTelephoneUsesNullFlavor(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryUnknownTelephoneUsesNullFlavor(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryTypeIdExtension constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryTypeIdExtension(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryTypeIdExtension(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryIdRootFormat constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryIdRootFormat(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryIdRootFormat(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryOidLength constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryOidLength(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryOidLength(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryLanguageCodeForm constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryLanguageCodeForm(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryLanguageCodeForm(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummarySetIdAndVersionNumber constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummarySetIdAndVersionNumber(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummarySetIdAndVersionNumber(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummarySetIdAndIdAreUnique constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummarySetIdAndIdAreUnique(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummarySetIdAndIdAreUnique(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryCopyTimeNotPresent constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryCopyTimeNotPresent(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryCopyTimeNotPresent(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHasRecordTargetPatientRole constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHasRecordTargetPatientRole(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHasRecordTargetPatientRole(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHasPatientBirthTime constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHasPatientBirthTime(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHasPatientBirthTime(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHasAdministrativeGenderCode constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHasAdministrativeGenderCode(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHasAdministrativeGenderCode(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHasProviderOrganization constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHasProviderOrganization(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHasProviderOrganization(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHasAuthorTime constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHasAuthorTime(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHasAuthorTime(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHasAssignedAuthorId constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHasAssignedAuthorId(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHasAssignedAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHasAssignedAuthorPersonOrDevice constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHasAssignedAuthorPersonOrDevice(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHasAssignedAuthorPersonOrDevice(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHasDataEntererAssignedPerson constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHasDataEntererAssignedPerson(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHasDataEntererAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHasDataEntererTime constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHasDataEntererTime(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHasDataEntererTime(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHasInformant constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHasInformant(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHasInformant(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHasInformantAssignedPersonOrRelatedPerson constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHasInformantAssignedPersonOrRelatedPerson(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHasInformantAssignedPersonOrRelatedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryLegalAuthenticatorHasAssignedPerson constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryLegalAuthenticatorHasAssignedPerson(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryLegalAuthenticatorHasAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryAuthenticatorHasAssignedPerson constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryAuthenticatorHasAssignedPerson(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryAuthenticatorHasAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryTimePreciseToSecond constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryTimePreciseToSecond(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryTimePreciseToSecond(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryTimePreciseToYearAndDay constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryTimePreciseToYearAndDay(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryTimePreciseToYearAndDay(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryMedicalSummaryProblemConcernEntry constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryMedicalSummaryProblemConcernEntry(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryMedicalSummaryProblemConcernEntry(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryMedicalSummaryAllergyConcernEntry constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryMedicalSummaryAllergyConcernEntry(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryMedicalSummaryAllergyConcernEntry(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryMedicalSummaryMedications constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryMedicalSummaryMedications(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryMedicalSummaryMedications(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryTemplateId constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryTemplateId(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryRealmCode constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryRealmCode(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryRealmCode(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryTypeId constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryTypeId(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryTypeId(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryId constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryId(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryId(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryCode constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryCode(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryCode(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryTitle constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryTitle(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryTitle(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryEffectiveTime constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryEffectiveTime(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryLanguageCode constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryLanguageCode(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryLanguageCode(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryProblemListSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryProblemListSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryProblemListSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryAdmissionMedicationHistorySection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryAdmissionMedicationHistorySection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryAdmissionMedicationHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHospitalAdmissionDiagnosisSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHospitalAdmissionDiagnosisSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHospitalAdmissionDiagnosisSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryAdvanceDirectivesSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryAdvanceDirectivesSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryAdvanceDirectivesSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryAllergiesReactionsSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryAllergiesReactionsSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryAllergiesReactionsSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryDischargeDiagnosisSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryDischargeDiagnosisSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryDischargeDiagnosisSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryDischargeDiet constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryDischargeDiet(DischargeSummary dischargeSummary,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryDischargeDiet(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHospitalDischargeMedicationsSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHospitalDischargeMedicationsSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHospitalDischargeMedicationsSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryDiagnosticResultsSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryDiagnosticResultsSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryDiagnosticResultsSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryFunctionalStatusSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryFunctionalStatusSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryFunctionalStatusSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHistoryOfPresentIllness constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHistoryOfPresentIllness(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHistoryOfPresentIllness(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHospitalCourseSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHospitalCourseSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHospitalCourseSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryMedicalEquipmentSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryMedicalEquipmentSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryMedicalEquipmentSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryPhysicalExamSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryPhysicalExamSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryPhysicalExamSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryPlanOfCareSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryPlanOfCareSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryPlanOfCareSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryHistoryOfPastIllnessSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryHistoryOfPastIllnessSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryHistoryOfPastIllnessSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryReviewOfSystemsSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryReviewOfSystemsSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryReviewOfSystemsSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryMedicationsAdministeredSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryMedicationsAdministeredSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryMedicationsAdministeredSection(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeSummaryVitalSignsSection constraint of '<em>Discharge Summary</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeSummary_validateDischargeSummaryVitalSignsSection(
			DischargeSummary dischargeSummary, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeSummary.validateDischargeSummaryVitalSignsSection(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeDiet(DischargeDiet dischargeDiet, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(dischargeDiet, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(dischargeDiet, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(dischargeDiet, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(dischargeDiet, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(dischargeDiet, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(dischargeDiet, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(dischargeDiet, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(dischargeDiet, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(dischargeDiet, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(dischargeDiet, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeDiet_validateDischargeDietTemplateId(dischargeDiet, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDischargeDiet_validateDischargeDietCode(dischargeDiet, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateDischargeDietTemplateId constraint of '<em>Discharge Diet</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeDiet_validateDischargeDietTemplateId(DischargeDiet dischargeDiet,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeDiet.validateDischargeDietTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateDischargeDietCode constraint of '<em>Discharge Diet</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDischargeDiet_validateDischargeDietCode(DischargeDiet dischargeDiet,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dischargeDiet.validateDischargeDietCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical(HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(historyAndPhysical, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(historyAndPhysical, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalPersonHasName(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalRolesShallHaveAddrAndTelecom(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalRolesShouldHaveAddrAndTelecom(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalOrganizationsHaveContactInfo(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalTimePreciseToDay(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalTimePreciseToYear(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalTelephoneMatchesRegex(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalHasTelephoneDialingDigits(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalUnknownTelephoneUsesNullFlavor(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalTypeIdExtension(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalIdRootFormat(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalOidLength(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalLanguageCodeForm(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalSetIdAndVersionNumber(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalSetIdAndIdAreUnique(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalCopyTimeNotPresent(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalHasRecordTargetPatientRole(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalHasPatientBirthTime(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalHasAdministrativeGenderCode(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalHasProviderOrganization(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalHasAuthorTime(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalHasAssignedAuthorId(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalHasAssignedAuthorPersonOrDevice(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalHasDataEntererAssignedPerson(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalHasDataEntererTime(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalHasInformant(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalHasInformantAssignedPersonOrRelatedPerson(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalLegalAuthenticatorHasAssignedPerson(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalAuthenticatorHasAssignedPerson(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalTimePreciseToSecond(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalTimePreciseToYearAndDay(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalAssessmentAndPlan(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalBothAssessmentAndPlan(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalReasonForVisitAndChiefComplaint(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalBothReasonForVisitAndChiefComplaint(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalTemplateId(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalRealmCode(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalTypeId(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalId(historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalCode(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalTitle(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalEffectiveTime(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalLanguageCode(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalHistoryOfPresentIllness(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalPastMedicalHistorySection(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalMedicationsSection(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalAlertsSection(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalSocialHistorySection(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalFamilyHistorySection(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalReviewOfSystemsSection(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalPhysicalExaminationSection(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalVitalSignsSection(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalGeneralStatusSection(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalDiagnosticFindings(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalProblemSection(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalProceduresSection(
				historyAndPhysical, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHistoryAndPhysical_validateHistoryAndPhysicalImmunizationsSection(
				historyAndPhysical, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHistoryAndPhysicalPersonHasName constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalPersonHasName(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalPersonHasName(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalRolesShallHaveAddrAndTelecom constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalRolesShallHaveAddrAndTelecom(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalRolesShallHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalRolesShouldHaveAddrAndTelecom constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalRolesShouldHaveAddrAndTelecom(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalRolesShouldHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalOrganizationsHaveContactInfo constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalOrganizationsHaveContactInfo(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalOrganizationsHaveContactInfo(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalTimePreciseToDay constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalTimePreciseToDay(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalTimePreciseToDay(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalTimePreciseToYear constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalTimePreciseToYear(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalTimePreciseToYear(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalTelephoneMatchesRegex constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalTelephoneMatchesRegex(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalTelephoneMatchesRegex(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalHasTelephoneDialingDigits constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalHasTelephoneDialingDigits(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalHasTelephoneDialingDigits(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalUnknownTelephoneUsesNullFlavor constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalUnknownTelephoneUsesNullFlavor(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalUnknownTelephoneUsesNullFlavor(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalTypeIdExtension constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalTypeIdExtension(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalTypeIdExtension(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalIdRootFormat constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalIdRootFormat(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalIdRootFormat(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalOidLength constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalOidLength(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalOidLength(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalLanguageCodeForm constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalLanguageCodeForm(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalLanguageCodeForm(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalSetIdAndVersionNumber constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalSetIdAndVersionNumber(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalSetIdAndVersionNumber(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalSetIdAndIdAreUnique constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalSetIdAndIdAreUnique(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalSetIdAndIdAreUnique(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalCopyTimeNotPresent constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalCopyTimeNotPresent(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalCopyTimeNotPresent(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalHasRecordTargetPatientRole constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalHasRecordTargetPatientRole(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalHasRecordTargetPatientRole(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalHasPatientBirthTime constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalHasPatientBirthTime(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalHasPatientBirthTime(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalHasAdministrativeGenderCode constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalHasAdministrativeGenderCode(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalHasAdministrativeGenderCode(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalHasProviderOrganization constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalHasProviderOrganization(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalHasProviderOrganization(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalHasAuthorTime constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalHasAuthorTime(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalHasAuthorTime(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalHasAssignedAuthorId constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalHasAssignedAuthorId(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalHasAssignedAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalHasAssignedAuthorPersonOrDevice constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalHasAssignedAuthorPersonOrDevice(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalHasAssignedAuthorPersonOrDevice(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalHasDataEntererAssignedPerson constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalHasDataEntererAssignedPerson(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalHasDataEntererAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalHasDataEntererTime constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalHasDataEntererTime(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalHasDataEntererTime(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalHasInformant constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalHasInformant(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalHasInformant(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalHasInformantAssignedPersonOrRelatedPerson constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalHasInformantAssignedPersonOrRelatedPerson(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalHasInformantAssignedPersonOrRelatedPerson(
			diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalLegalAuthenticatorHasAssignedPerson constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalLegalAuthenticatorHasAssignedPerson(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalLegalAuthenticatorHasAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalAuthenticatorHasAssignedPerson constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalAuthenticatorHasAssignedPerson(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalAuthenticatorHasAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalTimePreciseToSecond constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalTimePreciseToSecond(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalTimePreciseToSecond(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalTimePreciseToYearAndDay constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalTimePreciseToYearAndDay(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalTimePreciseToYearAndDay(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalAssessmentAndPlan constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalAssessmentAndPlan(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalAssessmentAndPlan(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalBothAssessmentAndPlan constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalBothAssessmentAndPlan(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalBothAssessmentAndPlan(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalReasonForVisitAndChiefComplaint constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalReasonForVisitAndChiefComplaint(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalReasonForVisitAndChiefComplaint(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalBothReasonForVisitAndChiefComplaint constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalBothReasonForVisitAndChiefComplaint(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalBothReasonForVisitAndChiefComplaint(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalTemplateId constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalTemplateId(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalRealmCode constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalRealmCode(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalRealmCode(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalTypeId constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalTypeId(HistoryAndPhysical historyAndPhysical,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalTypeId(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalId constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalId(HistoryAndPhysical historyAndPhysical,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalId(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalCode constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalCode(HistoryAndPhysical historyAndPhysical,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalCode(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalTitle constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalTitle(HistoryAndPhysical historyAndPhysical,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalTitle(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalEffectiveTime constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalEffectiveTime(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalLanguageCode constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalLanguageCode(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalLanguageCode(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalHistoryOfPresentIllness constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalHistoryOfPresentIllness(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalHistoryOfPresentIllness(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalPastMedicalHistorySection constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalPastMedicalHistorySection(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalPastMedicalHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalMedicationsSection constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalMedicationsSection(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalMedicationsSection(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalAlertsSection constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalAlertsSection(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalAlertsSection(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalSocialHistorySection constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalSocialHistorySection(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalSocialHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalFamilyHistorySection constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalFamilyHistorySection(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalFamilyHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalReviewOfSystemsSection constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalReviewOfSystemsSection(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalReviewOfSystemsSection(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalPhysicalExaminationSection constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalPhysicalExaminationSection(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalPhysicalExaminationSection(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalVitalSignsSection constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalVitalSignsSection(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalVitalSignsSection(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalGeneralStatusSection constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalGeneralStatusSection(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalGeneralStatusSection(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalDiagnosticFindings constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalDiagnosticFindings(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalDiagnosticFindings(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalProblemSection constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalProblemSection(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalProblemSection(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalProceduresSection constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalProceduresSection(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalProceduresSection(diagnostics, context);
	}

	/**
	 * Validates the validateHistoryAndPhysicalImmunizationsSection constraint of '<em>History And Physical</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHistoryAndPhysical_validateHistoryAndPhysicalImmunizationsSection(
			HistoryAndPhysical historyAndPhysical, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return historyAndPhysical.validateHistoryAndPhysicalImmunizationsSection(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIHEHistoryOfPresentIllness(IHEHistoryOfPresentIllness iheHistoryOfPresentIllness,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(iheHistoryOfPresentIllness, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(iheHistoryOfPresentIllness, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(iheHistoryOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(iheHistoryOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(iheHistoryOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(iheHistoryOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(iheHistoryOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(iheHistoryOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(iheHistoryOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(iheHistoryOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIHEHistoryOfPresentIllness_validateIHEHistoryOfPresentIllnessTemplateId(
				iheHistoryOfPresentIllness, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateIHEHistoryOfPresentIllness_validateIHEHistoryOfPresentIllnessCode(
				iheHistoryOfPresentIllness, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateIHEHistoryOfPresentIllnessTemplateId constraint of '<em>IHE History Of Present Illness</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIHEHistoryOfPresentIllness_validateIHEHistoryOfPresentIllnessTemplateId(
			IHEHistoryOfPresentIllness iheHistoryOfPresentIllness, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return iheHistoryOfPresentIllness.validateIHEHistoryOfPresentIllnessTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateIHEHistoryOfPresentIllnessCode constraint of '<em>IHE History Of Present Illness</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIHEHistoryOfPresentIllness_validateIHEHistoryOfPresentIllnessCode(
			IHEHistoryOfPresentIllness iheHistoryOfPresentIllness, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return iheHistoryOfPresentIllness.validateIHEHistoryOfPresentIllnessCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReviewOfSystemsSectionIHE(ReviewOfSystemsSectionIHE reviewOfSystemsSectionIHE,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(reviewOfSystemsSectionIHE, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(reviewOfSystemsSectionIHE, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(reviewOfSystemsSectionIHE, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(reviewOfSystemsSectionIHE, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(reviewOfSystemsSectionIHE, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(reviewOfSystemsSectionIHE, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(reviewOfSystemsSectionIHE, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(reviewOfSystemsSectionIHE, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(reviewOfSystemsSectionIHE, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(reviewOfSystemsSectionIHE, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReviewOfSystemsSectionIHE_validateReviewOfSystemsSectionIHETemplateId(
				reviewOfSystemsSectionIHE, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReviewOfSystemsSectionIHE_validateReviewOfSystemsSectionIHECode(
				reviewOfSystemsSectionIHE, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateReviewOfSystemsSectionIHETemplateId constraint of '<em>Review Of Systems Section IHE</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReviewOfSystemsSectionIHE_validateReviewOfSystemsSectionIHETemplateId(
			ReviewOfSystemsSectionIHE reviewOfSystemsSectionIHE, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return reviewOfSystemsSectionIHE.validateReviewOfSystemsSectionIHETemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateReviewOfSystemsSectionIHECode constraint of '<em>Review Of Systems Section IHE</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReviewOfSystemsSectionIHE_validateReviewOfSystemsSectionIHECode(
			ReviewOfSystemsSectionIHE reviewOfSystemsSectionIHE, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return reviewOfSystemsSectionIHE.validateReviewOfSystemsSectionIHECode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCCDVitalSignsSection(CCDVitalSignsSection ccdVitalSignsSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(ccdVitalSignsSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(ccdVitalSignsSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(ccdVitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(ccdVitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(ccdVitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(ccdVitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(ccdVitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(ccdVitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(ccdVitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(ccdVitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCCDVitalSignsSection_validateCCDVitalSignsSectionClinicalStatements(
				ccdVitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCCDVitalSignsSection_validateCCDVitalSignsSectionTemplateId(
				ccdVitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCCDVitalSignsSection_validateCCDVitalSignsSectionCode(
				ccdVitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCCDVitalSignsSection_validateCCDVitalSignsSectionText(
				ccdVitalSignsSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateCCDVitalSignsSection_validateCCDVitalSignsSectionVitalSignsOrganizer(
				ccdVitalSignsSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateCCDVitalSignsSectionClinicalStatements constraint of '<em>CCD Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCCDVitalSignsSection_validateCCDVitalSignsSectionClinicalStatements(
			CCDVitalSignsSection ccdVitalSignsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ccdVitalSignsSection.validateCCDVitalSignsSectionClinicalStatements(diagnostics, context);
	}

	/**
	 * Validates the validateCCDVitalSignsSectionTemplateId constraint of '<em>CCD Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCCDVitalSignsSection_validateCCDVitalSignsSectionTemplateId(
			CCDVitalSignsSection ccdVitalSignsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ccdVitalSignsSection.validateCCDVitalSignsSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateCCDVitalSignsSectionCode constraint of '<em>CCD Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCCDVitalSignsSection_validateCCDVitalSignsSectionCode(
			CCDVitalSignsSection ccdVitalSignsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ccdVitalSignsSection.validateCCDVitalSignsSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateCCDVitalSignsSectionText constraint of '<em>CCD Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCCDVitalSignsSection_validateCCDVitalSignsSectionText(
			CCDVitalSignsSection ccdVitalSignsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ccdVitalSignsSection.validateCCDVitalSignsSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateCCDVitalSignsSectionVitalSignsOrganizer constraint of '<em>CCD Vital Signs Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCCDVitalSignsSection_validateCCDVitalSignsSectionVitalSignsOrganizer(
			CCDVitalSignsSection ccdVitalSignsSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ccdVitalSignsSection.validateCCDVitalSignsSectionVitalSignsOrganizer(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralStatusSection(GeneralStatusSection generalStatusSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(generalStatusSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(generalStatusSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralStatusSection_validateGeneralStatusSectionTemplateId(
				generalStatusSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateGeneralStatusSection_validateGeneralStatusSectionCode(
				generalStatusSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateGeneralStatusSectionTemplateId constraint of '<em>General Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralStatusSection_validateGeneralStatusSectionTemplateId(
			GeneralStatusSection generalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalStatusSection.validateGeneralStatusSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateGeneralStatusSectionCode constraint of '<em>General Status Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGeneralStatusSection_validateGeneralStatusSectionCode(
			GeneralStatusSection generalStatusSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return generalStatusSection.validateGeneralStatusSectionCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticFindings(DiagnosticFindings diagnosticFindings, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(diagnosticFindings, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(diagnosticFindings, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDiagnosticFindings_validateResultsSectionTemplateId(
				diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDiagnosticFindings_validateResultsSectionCode(diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSection_validateResultsSectionTitle(diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSection_validateResultsSectionText(diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateResultsSection_validateResultsSectionResultOrganizer(
				diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDiagnosticFindings_validateDiagnosticFindingsTitle(
				diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDiagnosticFindings_validateDiagnosticFindingsText(
				diagnosticFindings, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateDiagnosticFindings_validateDiagnosticFindingsResultOrganizer(
				diagnosticFindings, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateDiagnosticFindingsTitle constraint of '<em>Diagnostic Findings</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticFindings_validateDiagnosticFindingsTitle(DiagnosticFindings diagnosticFindings,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return diagnosticFindings.validateDiagnosticFindingsTitle(diagnostics, context);
	}

	/**
	 * Validates the validateDiagnosticFindingsText constraint of '<em>Diagnostic Findings</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticFindings_validateDiagnosticFindingsText(DiagnosticFindings diagnosticFindings,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return diagnosticFindings.validateDiagnosticFindingsText(diagnostics, context);
	}

	/**
	 * Validates the validateDiagnosticFindingsResultOrganizer constraint of '<em>Diagnostic Findings</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticFindings_validateDiagnosticFindingsResultOrganizer(
			DiagnosticFindings diagnosticFindings, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return diagnosticFindings.validateDiagnosticFindingsResultOrganizer(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionTemplateId constraint of '<em>Diagnostic Findings</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticFindings_validateResultsSectionTemplateId(DiagnosticFindings diagnosticFindings,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return diagnosticFindings.validateResultsSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateResultsSectionCode constraint of '<em>Diagnostic Findings</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDiagnosticFindings_validateResultsSectionCode(DiagnosticFindings diagnosticFindings,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return diagnosticFindings.validateResultsSectionCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote(ConsultationNote consultationNote, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(consultationNote, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(consultationNote, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNotePersonHasName(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteRolesShallHaveAddrAndTelecom(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteRolesShouldHaveAddrAndTelecom(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteOrganizationsHaveContactInfo(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteTimePreciseToDay(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteTimePreciseToYear(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteTelephoneMatchesRegex(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHasTelephoneDialingDigits(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteUnknownTelephoneUsesNullFlavor(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteTypeIdExtension(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteIdRootFormat(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteOidLength(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteLanguageCodeForm(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteSetIdAndVersionNumber(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteSetIdAndIdAreUnique(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteCopyTimeNotPresent(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHasRecordTargetPatientRole(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHasPatientBirthTime(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHasAdministrativeGenderCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHasProviderOrganization(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHasAuthorTime(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHasAssignedAuthorId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHasAssignedAuthorPersonOrDevice(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHasDataEntererAssignedPerson(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHasDataEntererTime(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHasInformant(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHasInformantAssignedPersonOrRelatedPerson(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteLegalAuthenticatorHasAssignedPerson(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteAuthenticatorHasAssignedPerson(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteTimePreciseToSecond(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteTimePreciseToYearAndDay(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteReferralOrVisit(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteTemplateId(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteRealmCode(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteTypeId(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteId(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteCode(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteTitle(consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteEffectiveTime(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteLanguageCode(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteHistoryOfPresentIllness(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNotePhysicalExamination(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteProblemSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteProceduresSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNotePastMedicalHistorySection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteImmunizationsSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteMedicationsSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteAlertsSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteSocialHistorySection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteFamilyHistorySection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteReviewOfSystemsSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteVitalSignsSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteGeneralStatusSection(
				consultationNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateConsultationNote_validateConsultationNoteDiagnosticFindings(
				consultationNote, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateConsultationNotePersonHasName constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNotePersonHasName(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNotePersonHasName(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteRolesShallHaveAddrAndTelecom constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteRolesShallHaveAddrAndTelecom(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteRolesShallHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteRolesShouldHaveAddrAndTelecom constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteRolesShouldHaveAddrAndTelecom(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteRolesShouldHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteOrganizationsHaveContactInfo constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteOrganizationsHaveContactInfo(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteOrganizationsHaveContactInfo(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteTimePreciseToDay constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteTimePreciseToDay(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteTimePreciseToDay(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteTimePreciseToYear constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteTimePreciseToYear(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteTimePreciseToYear(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteTelephoneMatchesRegex constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteTelephoneMatchesRegex(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteTelephoneMatchesRegex(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHasTelephoneDialingDigits constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHasTelephoneDialingDigits(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHasTelephoneDialingDigits(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteUnknownTelephoneUsesNullFlavor constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteUnknownTelephoneUsesNullFlavor(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteUnknownTelephoneUsesNullFlavor(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteTypeIdExtension constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteTypeIdExtension(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteTypeIdExtension(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteIdRootFormat constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteIdRootFormat(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteIdRootFormat(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteOidLength constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteOidLength(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteOidLength(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteLanguageCodeForm constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteLanguageCodeForm(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteLanguageCodeForm(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteSetIdAndVersionNumber constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteSetIdAndVersionNumber(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteSetIdAndVersionNumber(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteSetIdAndIdAreUnique constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteSetIdAndIdAreUnique(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteSetIdAndIdAreUnique(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteCopyTimeNotPresent constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteCopyTimeNotPresent(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteCopyTimeNotPresent(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHasRecordTargetPatientRole constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHasRecordTargetPatientRole(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHasRecordTargetPatientRole(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHasPatientBirthTime constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHasPatientBirthTime(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHasPatientBirthTime(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHasAdministrativeGenderCode constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHasAdministrativeGenderCode(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHasAdministrativeGenderCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHasProviderOrganization constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHasProviderOrganization(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHasProviderOrganization(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHasAuthorTime constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHasAuthorTime(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHasAuthorTime(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHasAssignedAuthorId constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHasAssignedAuthorId(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHasAssignedAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHasAssignedAuthorPersonOrDevice constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHasAssignedAuthorPersonOrDevice(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHasAssignedAuthorPersonOrDevice(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHasDataEntererAssignedPerson constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHasDataEntererAssignedPerson(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHasDataEntererAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHasDataEntererTime constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHasDataEntererTime(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHasDataEntererTime(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHasInformant constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHasInformant(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHasInformant(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHasInformantAssignedPersonOrRelatedPerson constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHasInformantAssignedPersonOrRelatedPerson(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHasInformantAssignedPersonOrRelatedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteLegalAuthenticatorHasAssignedPerson constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteLegalAuthenticatorHasAssignedPerson(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteLegalAuthenticatorHasAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteAuthenticatorHasAssignedPerson constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteAuthenticatorHasAssignedPerson(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteAuthenticatorHasAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteTimePreciseToSecond constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteTimePreciseToSecond(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteTimePreciseToSecond(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteTimePreciseToYearAndDay constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteTimePreciseToYearAndDay(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteTimePreciseToYearAndDay(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteReferralOrVisit constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteReferralOrVisit(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteReferralOrVisit(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteTemplateId constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteTemplateId(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteRealmCode constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteRealmCode(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteRealmCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteTypeId constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteTypeId(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteTypeId(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteId constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteId(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteId(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteCode constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteCode(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteTitle constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteTitle(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteTitle(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteEffectiveTime constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteEffectiveTime(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteLanguageCode constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteLanguageCode(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteLanguageCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteHistoryOfPresentIllness constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteHistoryOfPresentIllness(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteHistoryOfPresentIllness(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNotePhysicalExamination constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNotePhysicalExamination(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNotePhysicalExamination(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteProblemSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteProblemSection(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteProblemSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteProceduresSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteProceduresSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteProceduresSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNotePastMedicalHistorySection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNotePastMedicalHistorySection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNotePastMedicalHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteImmunizationsSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteImmunizationsSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteImmunizationsSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteMedicationsSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteMedicationsSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteMedicationsSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteAlertsSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteAlertsSection(ConsultationNote consultationNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteAlertsSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteSocialHistorySection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteSocialHistorySection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteSocialHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteFamilyHistorySection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteFamilyHistorySection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteFamilyHistorySection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteReviewOfSystemsSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteReviewOfSystemsSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteReviewOfSystemsSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteVitalSignsSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteVitalSignsSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteVitalSignsSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteGeneralStatusSection constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteGeneralStatusSection(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteGeneralStatusSection(diagnostics, context);
	}

	/**
	 * Validates the validateConsultationNoteDiagnosticFindings constraint of '<em>Consultation Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsultationNote_validateConsultationNoteDiagnosticFindings(
			ConsultationNote consultationNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consultationNote.validateConsultationNoteDiagnosticFindings(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePastMedicalHistorySectionConsult(
			PastMedicalHistorySectionConsult pastMedicalHistorySectionConsult, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(pastMedicalHistorySectionConsult, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(pastMedicalHistorySectionConsult, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(pastMedicalHistorySectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(pastMedicalHistorySectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(pastMedicalHistorySectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(pastMedicalHistorySectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(pastMedicalHistorySectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(pastMedicalHistorySectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				pastMedicalHistorySectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				pastMedicalHistorySectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePastMedicalHistorySectionConsult_validatePastMedicalHistorySectionConsultTemplateId(
				pastMedicalHistorySectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePastMedicalHistorySectionConsult_validatePastMedicalHistorySectionConsultCode(
				pastMedicalHistorySectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePastMedicalHistorySectionConsult_validatePastMedicalHistorySectionConsultText(
				pastMedicalHistorySectionConsult, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePastMedicalHistorySectionConsultTemplateId constraint of '<em>Past Medical History Section Consult</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePastMedicalHistorySectionConsult_validatePastMedicalHistorySectionConsultTemplateId(
			PastMedicalHistorySectionConsult pastMedicalHistorySectionConsult, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return pastMedicalHistorySectionConsult.validatePastMedicalHistorySectionConsultTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePastMedicalHistorySectionConsultCode constraint of '<em>Past Medical History Section Consult</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePastMedicalHistorySectionConsult_validatePastMedicalHistorySectionConsultCode(
			PastMedicalHistorySectionConsult pastMedicalHistorySectionConsult, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return pastMedicalHistorySectionConsult.validatePastMedicalHistorySectionConsultCode(diagnostics, context);
	}

	/**
	 * Validates the validatePastMedicalHistorySectionConsultText constraint of '<em>Past Medical History Section Consult</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePastMedicalHistorySectionConsult_validatePastMedicalHistorySectionConsultText(
			PastMedicalHistorySectionConsult pastMedicalHistorySectionConsult, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return pastMedicalHistorySectionConsult.validatePastMedicalHistorySectionConsultText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitSectionConsult(ReasonForVisitSectionConsult reasonForVisitSectionConsult,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(reasonForVisitSectionConsult, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(reasonForVisitSectionConsult, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(reasonForVisitSectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(reasonForVisitSectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(reasonForVisitSectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(reasonForVisitSectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(reasonForVisitSectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(reasonForVisitSectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(reasonForVisitSectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(reasonForVisitSectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForVisitSectionConsult_validateReasonForVisitSectionConsultTemplateId(
				reasonForVisitSectionConsult, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForVisitSectionConsult_validateReasonForVisitSectionConsultCode(
				reasonForVisitSectionConsult, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateReasonForVisitSectionConsultTemplateId constraint of '<em>Reason For Visit Section Consult</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitSectionConsult_validateReasonForVisitSectionConsultTemplateId(
			ReasonForVisitSectionConsult reasonForVisitSectionConsult, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return reasonForVisitSectionConsult.validateReasonForVisitSectionConsultTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateReasonForVisitSectionConsultCode constraint of '<em>Reason For Visit Section Consult</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitSectionConsult_validateReasonForVisitSectionConsultCode(
			ReasonForVisitSectionConsult reasonForVisitSectionConsult, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return reasonForVisitSectionConsult.validateReasonForVisitSectionConsultCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLevelOneConformance(LevelOneConformance levelOneConformance, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(levelOneConformance, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(levelOneConformance, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(levelOneConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(levelOneConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(levelOneConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(levelOneConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(levelOneConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(levelOneConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(levelOneConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(levelOneConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLevelOneConformance_validateLevelOneConformanceTemplateId(
				levelOneConformance, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateLevelOneConformanceTemplateId constraint of '<em>Level One Conformance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLevelOneConformance_validateLevelOneConformanceTemplateId(
			LevelOneConformance levelOneConformance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return levelOneConformance.validateLevelOneConformanceTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLevelTwoConformance(LevelTwoConformance levelTwoConformance, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(levelTwoConformance, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(levelTwoConformance, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(levelTwoConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(levelTwoConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(levelTwoConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(levelTwoConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(levelTwoConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(levelTwoConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(levelTwoConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(levelTwoConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLevelTwoConformance_validateLevelOneConformanceTemplateId(
				levelTwoConformance, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateLevelOneConformanceTemplateId constraint of '<em>Level Two Conformance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLevelTwoConformance_validateLevelOneConformanceTemplateId(
			LevelTwoConformance levelTwoConformance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return levelTwoConformance.validateLevelOneConformanceTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLevelThreeConformance(LevelThreeConformance levelThreeConformance,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(levelThreeConformance, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(levelThreeConformance, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(levelThreeConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(levelThreeConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(levelThreeConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(levelThreeConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(levelThreeConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(levelThreeConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(
				levelThreeConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(
				levelThreeConformance, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateLevelThreeConformance_validateLevelOneConformanceTemplateId(
				levelThreeConformance, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateLevelOneConformanceTemplateId constraint of '<em>Level Three Conformance</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateLevelThreeConformance_validateLevelOneConformanceTemplateId(
			LevelThreeConformance levelThreeConformance, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return levelThreeConformance.validateLevelOneConformanceTemplateId(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentSection(AssessmentSection assessmentSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(assessmentSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(assessmentSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentSection_validateAssessmentSectionTemplateId(
				assessmentSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentSection_validateAssessmentSectionCode(assessmentSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAssessmentSectionTemplateId constraint of '<em>Assessment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentSection_validateAssessmentSectionTemplateId(AssessmentSection assessmentSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assessmentSection.validateAssessmentSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAssessmentSectionCode constraint of '<em>Assessment Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentSection_validateAssessmentSectionCode(AssessmentSection assessmentSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assessmentSection.validateAssessmentSectionCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanSection(PlanSection planSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(planSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(planSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(planSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(planSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(planSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(planSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(planSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(planSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(planSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(planSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanSection_validatePlanSectionTemplateId(planSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validatePlanSection_validatePlanSectionCode(planSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validatePlanSectionTemplateId constraint of '<em>Plan Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanSection_validatePlanSectionTemplateId(PlanSection planSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return planSection.validatePlanSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlanSectionCode constraint of '<em>Plan Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlanSection_validatePlanSectionCode(PlanSection planSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return planSection.validatePlanSectionCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitSection(ReasonForVisitSection reasonForVisitSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(reasonForVisitSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(reasonForVisitSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForVisitSection_validateReasonForVisitSectionTemplateId(
				reasonForVisitSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForVisitSection_validateReasonForVisitSectionCode(
				reasonForVisitSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateReasonForVisitSectionTemplateId constraint of '<em>Reason For Visit Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitSection_validateReasonForVisitSectionTemplateId(
			ReasonForVisitSection reasonForVisitSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForVisitSection.validateReasonForVisitSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateReasonForVisitSectionCode constraint of '<em>Reason For Visit Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitSection_validateReasonForVisitSectionCode(
			ReasonForVisitSection reasonForVisitSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return reasonForVisitSection.validateReasonForVisitSectionCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitAndChiefComplaintSection(
			ReasonForVisitAndChiefComplaintSection reasonForVisitAndChiefComplaintSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(reasonForVisitAndChiefComplaintSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			reasonForVisitAndChiefComplaintSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(reasonForVisitAndChiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(reasonForVisitAndChiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(reasonForVisitAndChiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(reasonForVisitAndChiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(reasonForVisitAndChiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(reasonForVisitAndChiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				reasonForVisitAndChiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				reasonForVisitAndChiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForVisitAndChiefComplaintSection_validateReasonForVisitAndChiefComplaintSectionTemplateId(
				reasonForVisitAndChiefComplaintSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateReasonForVisitAndChiefComplaintSection_validateReasonForVisitAndChiefComplaintSectionCode(
				reasonForVisitAndChiefComplaintSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateReasonForVisitAndChiefComplaintSectionTemplateId constraint of '<em>Reason For Visit And Chief Complaint Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitAndChiefComplaintSection_validateReasonForVisitAndChiefComplaintSectionTemplateId(
			ReasonForVisitAndChiefComplaintSection reasonForVisitAndChiefComplaintSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return reasonForVisitAndChiefComplaintSection.validateReasonForVisitAndChiefComplaintSectionTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateReasonForVisitAndChiefComplaintSectionCode constraint of '<em>Reason For Visit And Chief Complaint Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReasonForVisitAndChiefComplaintSection_validateReasonForVisitAndChiefComplaintSectionCode(
			ReasonForVisitAndChiefComplaintSection reasonForVisitAndChiefComplaintSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return reasonForVisitAndChiefComplaintSection.validateReasonForVisitAndChiefComplaintSectionCode(
			diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote(ProgressNote progressNote, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(progressNote, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(progressNote, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateClassCode(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateClinicalDocument_validateMoodCode(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNotePersonHasName(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteRolesShallHaveAddrAndTelecom(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteRolesShouldHaveAddrAndTelecom(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteOrganizationsHaveContactInfo(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteTimePreciseToDay(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteTimePreciseToYear(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteTelephoneMatchesRegex(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasTelephoneDialingDigits(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteUnknownTelephoneUsesNullFlavor(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteTypeIdExtension(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteIdRootFormat(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteOidLength(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteLanguageCodeForm(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteSetIdAndVersionNumber(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteSetIdAndIdAreUnique(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteCopyTimeNotPresent(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasRecordTargetPatientRole(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasPatientBirthTime(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasAdministrativeGenderCode(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasProviderOrganization(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasAuthorTime(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasAssignedAuthorId(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasAssignedAuthorPersonOrDevice(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasDataEntererAssignedPerson(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasDataEntererTime(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasInformant(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasInformantAssignedPersonOrRelatedPerson(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteLegalAuthenticatorHasAssignedPerson(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteAuthenticatorHasAssignedPerson(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteTimePreciseToSecond(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteTimePreciseToYearAndDay(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteAssessmentAndPlan(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteBothAssessmentAndPlan(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasServiceEvent(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasServiceEventCode(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasServiceEventEffectiveTime(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasComponentOfElement(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasEncompassingEncounterId(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasEncompassingEncounterEffectiveTime(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasEncompassingEncounterEffectiveTimeLow(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteHasEncompassingEncounterFacilityId(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteTemplateId(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteRealmCode(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteTypeId(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteId(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteCode(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteTitle(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteEffectiveTime(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteLanguageCode(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteAlertsSection(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteChiefComplaintSection(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteMedicationsSection(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteObjectiveSection(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNotePhysicalExaminationSection(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteProblemSection(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteResultsSection(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteVitalSignsSection(progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteReviewOfSystemsSection(
				progressNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateProgressNote_validateProgressNoteSubjectiveSection(progressNote, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateProgressNotePersonHasName constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNotePersonHasName(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNotePersonHasName(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteRolesShallHaveAddrAndTelecom constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteRolesShallHaveAddrAndTelecom(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteRolesShallHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteRolesShouldHaveAddrAndTelecom constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteRolesShouldHaveAddrAndTelecom(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteRolesShouldHaveAddrAndTelecom(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteOrganizationsHaveContactInfo constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteOrganizationsHaveContactInfo(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteOrganizationsHaveContactInfo(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteTimePreciseToDay constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteTimePreciseToDay(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteTimePreciseToDay(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteTimePreciseToYear constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteTimePreciseToYear(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteTimePreciseToYear(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteTelephoneMatchesRegex constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteTelephoneMatchesRegex(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteTelephoneMatchesRegex(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasTelephoneDialingDigits constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasTelephoneDialingDigits(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasTelephoneDialingDigits(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteUnknownTelephoneUsesNullFlavor constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteUnknownTelephoneUsesNullFlavor(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteUnknownTelephoneUsesNullFlavor(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteTypeIdExtension constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteTypeIdExtension(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteTypeIdExtension(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteIdRootFormat constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteIdRootFormat(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteIdRootFormat(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteOidLength constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteOidLength(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteOidLength(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteLanguageCodeForm constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteLanguageCodeForm(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteLanguageCodeForm(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteSetIdAndVersionNumber constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteSetIdAndVersionNumber(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteSetIdAndVersionNumber(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteSetIdAndIdAreUnique constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteSetIdAndIdAreUnique(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteSetIdAndIdAreUnique(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteCopyTimeNotPresent constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteCopyTimeNotPresent(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteCopyTimeNotPresent(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasRecordTargetPatientRole constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasRecordTargetPatientRole(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasRecordTargetPatientRole(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasPatientBirthTime constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasPatientBirthTime(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasPatientBirthTime(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasAdministrativeGenderCode constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasAdministrativeGenderCode(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasAdministrativeGenderCode(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasProviderOrganization constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasProviderOrganization(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasProviderOrganization(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasAuthorTime constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasAuthorTime(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasAuthorTime(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasAssignedAuthorId constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasAssignedAuthorId(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasAssignedAuthorId(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasAssignedAuthorPersonOrDevice constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasAssignedAuthorPersonOrDevice(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasAssignedAuthorPersonOrDevice(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasDataEntererAssignedPerson constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasDataEntererAssignedPerson(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasDataEntererAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasDataEntererTime constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasDataEntererTime(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasDataEntererTime(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasInformant constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasInformant(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasInformant(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasInformantAssignedPersonOrRelatedPerson constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasInformantAssignedPersonOrRelatedPerson(
			ProgressNote progressNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasInformantAssignedPersonOrRelatedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteLegalAuthenticatorHasAssignedPerson constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteLegalAuthenticatorHasAssignedPerson(
			ProgressNote progressNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteLegalAuthenticatorHasAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteAuthenticatorHasAssignedPerson constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteAuthenticatorHasAssignedPerson(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteAuthenticatorHasAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteTimePreciseToSecond constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteTimePreciseToSecond(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteTimePreciseToSecond(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteTimePreciseToYearAndDay constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteTimePreciseToYearAndDay(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteTimePreciseToYearAndDay(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteAssessmentAndPlan constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteAssessmentAndPlan(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteAssessmentAndPlan(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteBothAssessmentAndPlan constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteBothAssessmentAndPlan(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteBothAssessmentAndPlan(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasServiceEvent constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasServiceEvent(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasServiceEvent(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasServiceEventCode constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasServiceEventCode(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasServiceEventCode(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasServiceEventEffectiveTime constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasServiceEventEffectiveTime(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasServiceEventEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasComponentOfElement constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasComponentOfElement(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasComponentOfElement(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasEncompassingEncounterId constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasEncompassingEncounterId(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasEncompassingEncounterId(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasEncompassingEncounterEffectiveTime constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasEncompassingEncounterEffectiveTime(
			ProgressNote progressNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasEncompassingEncounterEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasEncompassingEncounterEffectiveTimeLow constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasEncompassingEncounterEffectiveTimeLow(
			ProgressNote progressNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasEncompassingEncounterEffectiveTimeLow(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteHasEncompassingEncounterFacilityId constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteHasEncompassingEncounterFacilityId(
			ProgressNote progressNote, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteHasEncompassingEncounterFacilityId(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteTemplateId constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteTemplateId(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteRealmCode constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteRealmCode(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteRealmCode(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteTypeId constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteTypeId(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteTypeId(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteId constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteId(ProgressNote progressNote, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return progressNote.validateProgressNoteId(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteCode constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteCode(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteCode(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteTitle constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteTitle(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteTitle(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteEffectiveTime constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteEffectiveTime(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteLanguageCode constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteLanguageCode(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteLanguageCode(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteAlertsSection constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteAlertsSection(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteAlertsSection(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteChiefComplaintSection constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteChiefComplaintSection(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteChiefComplaintSection(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteMedicationsSection constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteMedicationsSection(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteMedicationsSection(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteObjectiveSection constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteObjectiveSection(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteObjectiveSection(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNotePhysicalExaminationSection constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNotePhysicalExaminationSection(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNotePhysicalExaminationSection(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteProblemSection constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteProblemSection(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteProblemSection(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteResultsSection constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteResultsSection(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteResultsSection(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteVitalSignsSection constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteVitalSignsSection(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteVitalSignsSection(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteReviewOfSystemsSection constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteReviewOfSystemsSection(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteReviewOfSystemsSection(diagnostics, context);
	}

	/**
	 * Validates the validateProgressNoteSubjectiveSection constraint of '<em>Progress Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProgressNote_validateProgressNoteSubjectiveSection(ProgressNote progressNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return progressNote.validateProgressNoteSubjectiveSection(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSectionProcNote(
			AssessmentAndPlanSectionProcNote assessmentAndPlanSectionProcNote, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(assessmentAndPlanSectionProcNote, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(assessmentAndPlanSectionProcNote, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(assessmentAndPlanSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(assessmentAndPlanSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(assessmentAndPlanSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(assessmentAndPlanSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(assessmentAndPlanSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(assessmentAndPlanSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				assessmentAndPlanSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				assessmentAndPlanSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentAndPlanSectionProcNote_validateAssessmentAndPlanSectionProcNoteTemplateId(
				assessmentAndPlanSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentAndPlanSectionProcNote_validateAssessmentAndPlanSectionProcNoteCode(
				assessmentAndPlanSectionProcNote, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAssessmentAndPlanSectionProcNoteTemplateId constraint of '<em>Assessment And Plan Section Proc Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSectionProcNote_validateAssessmentAndPlanSectionProcNoteTemplateId(
			AssessmentAndPlanSectionProcNote assessmentAndPlanSectionProcNote, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return assessmentAndPlanSectionProcNote.validateAssessmentAndPlanSectionProcNoteTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAssessmentAndPlanSectionProcNoteCode constraint of '<em>Assessment And Plan Section Proc Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentAndPlanSectionProcNote_validateAssessmentAndPlanSectionProcNoteCode(
			AssessmentAndPlanSectionProcNote assessmentAndPlanSectionProcNote, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return assessmentAndPlanSectionProcNote.validateAssessmentAndPlanSectionProcNoteCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentSectionProcNote(AssessmentSectionProcNote assessmentSectionProcNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(assessmentSectionProcNote, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(assessmentSectionProcNote, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(assessmentSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(assessmentSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(assessmentSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(assessmentSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(assessmentSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(assessmentSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(assessmentSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(assessmentSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentSectionProcNote_validateAssessmentSectionProcNoteTemplateId(
				assessmentSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateAssessmentSectionProcNote_validateAssessmentSectionProcNoteCode(
				assessmentSectionProcNote, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateAssessmentSectionProcNoteTemplateId constraint of '<em>Assessment Section Proc Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentSectionProcNote_validateAssessmentSectionProcNoteTemplateId(
			AssessmentSectionProcNote assessmentSectionProcNote, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return assessmentSectionProcNote.validateAssessmentSectionProcNoteTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAssessmentSectionProcNoteCode constraint of '<em>Assessment Section Proc Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssessmentSectionProcNote_validateAssessmentSectionProcNoteCode(
			AssessmentSectionProcNote assessmentSectionProcNote, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return assessmentSectionProcNote.validateAssessmentSectionProcNoteCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintSectionProcNote(ChiefComplaintSectionProcNote chiefComplaintSectionProcNote,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(chiefComplaintSectionProcNote, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(chiefComplaintSectionProcNote, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(chiefComplaintSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(chiefComplaintSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(chiefComplaintSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(chiefComplaintSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(chiefComplaintSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(chiefComplaintSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				chiefComplaintSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(chiefComplaintSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChiefComplaintSectionProcNote_validateChiefComplaintSectionProcNoteTemplateId(
				chiefComplaintSectionProcNote, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateChiefComplaintSectionProcNote_validateChiefComplaintSectionProcNoteCode(
				chiefComplaintSectionProcNote, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateChiefComplaintSectionProcNoteTemplateId constraint of '<em>Chief Complaint Section Proc Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintSectionProcNote_validateChiefComplaintSectionProcNoteTemplateId(
			ChiefComplaintSectionProcNote chiefComplaintSectionProcNote, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return chiefComplaintSectionProcNote.validateChiefComplaintSectionProcNoteTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateChiefComplaintSectionProcNoteCode constraint of '<em>Chief Complaint Section Proc Note</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateChiefComplaintSectionProcNote_validateChiefComplaintSectionProcNoteCode(
			ChiefComplaintSectionProcNote chiefComplaintSectionProcNote, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return chiefComplaintSectionProcNote.validateChiefComplaintSectionProcNoteCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateObjectiveSection(ObjectiveSection objectiveSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(objectiveSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(objectiveSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateObjectiveSection_validateObjectiveSectionHasClinicalStatements(
				objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateObjectiveSection_validateObjectiveSectionTemplateId(
				objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateObjectiveSection_validateObjectiveSectionCode(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateObjectiveSection_validateObjectiveSectionTitle(objectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateObjectiveSection_validateObjectiveSectionText(objectiveSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateObjectiveSectionHasClinicalStatements constraint of '<em>Objective Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateObjectiveSection_validateObjectiveSectionHasClinicalStatements(
			ObjectiveSection objectiveSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return objectiveSection.validateObjectiveSectionHasClinicalStatements(diagnostics, context);
	}

	/**
	 * Validates the validateObjectiveSectionTemplateId constraint of '<em>Objective Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateObjectiveSection_validateObjectiveSectionTemplateId(ObjectiveSection objectiveSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return objectiveSection.validateObjectiveSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateObjectiveSectionCode constraint of '<em>Objective Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateObjectiveSection_validateObjectiveSectionCode(ObjectiveSection objectiveSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return objectiveSection.validateObjectiveSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateObjectiveSectionTitle constraint of '<em>Objective Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateObjectiveSection_validateObjectiveSectionTitle(ObjectiveSection objectiveSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return objectiveSection.validateObjectiveSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateObjectiveSectionText constraint of '<em>Objective Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateObjectiveSection_validateObjectiveSectionText(ObjectiveSection objectiveSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return objectiveSection.validateObjectiveSectionText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectiveSection(SubjectiveSection subjectiveSection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(subjectiveSection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(subjectiveSection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSubjectiveSection_validateSubjectiveSectionHasClinicalStatements(
				subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSubjectiveSection_validateSubjectiveSectionTemplateId(
				subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSubjectiveSection_validateSubjectiveSectionCode(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSubjectiveSection_validateSubjectiveSectionTitle(subjectiveSection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateSubjectiveSection_validateSubjectiveSectionText(subjectiveSection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateSubjectiveSectionHasClinicalStatements constraint of '<em>Subjective Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectiveSection_validateSubjectiveSectionHasClinicalStatements(
			SubjectiveSection subjectiveSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectiveSection.validateSubjectiveSectionHasClinicalStatements(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectiveSectionTemplateId constraint of '<em>Subjective Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectiveSection_validateSubjectiveSectionTemplateId(SubjectiveSection subjectiveSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectiveSection.validateSubjectiveSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectiveSectionCode constraint of '<em>Subjective Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectiveSection_validateSubjectiveSectionCode(SubjectiveSection subjectiveSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectiveSection.validateSubjectiveSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectiveSectionTitle constraint of '<em>Subjective Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectiveSection_validateSubjectiveSectionTitle(SubjectiveSection subjectiveSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectiveSection.validateSubjectiveSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectiveSectionText constraint of '<em>Subjective Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectiveSection_validateSubjectiveSectionText(SubjectiveSection subjectiveSection,
			DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectiveSection.validateSubjectiveSectionText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeStudiesSummarySection(
			HospitalDischargeStudiesSummarySection hospitalDischargeStudiesSummarySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		if (!validate_NoCircularContainment(hospitalDischargeStudiesSummarySection, diagnostics, context)) {
			return false;
		}
		boolean result = validate_EveryMultiplicityConforms(
			hospitalDischargeStudiesSummarySection, diagnostics, context);
		if (result || diagnostics != null) {
			result &= validate_EveryDataValueConforms(hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryReferenceIsContained(hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryProxyResolves(hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_UniqueID(hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryKeyUnique(hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validate_EveryMapEntryUnique(hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateClassCode(
				hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= cdaValidator.validateSection_validateMoodCode(
				hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionTemplateId(
				hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionCode(
				hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		if (result || diagnostics != null) {
			result &= validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionTitle(
				hospitalDischargeStudiesSummarySection, diagnostics, context);
		}
		return result;
	}

	/**
	 * Validates the validateHospitalDischargeStudiesSummarySectionTemplateId constraint of '<em>Hospital Discharge Studies Summary Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionTemplateId(
			HospitalDischargeStudiesSummarySection hospitalDischargeStudiesSummarySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeStudiesSummarySection.validateHospitalDischargeStudiesSummarySectionTemplateId(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeStudiesSummarySectionCode constraint of '<em>Hospital Discharge Studies Summary Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionCode(
			HospitalDischargeStudiesSummarySection hospitalDischargeStudiesSummarySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeStudiesSummarySection.validateHospitalDischargeStudiesSummarySectionCode(
			diagnostics, context);
	}

	/**
	 * Validates the validateHospitalDischargeStudiesSummarySectionTitle constraint of '<em>Hospital Discharge Studies Summary Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHospitalDischargeStudiesSummarySection_validateHospitalDischargeStudiesSummarySectionTitle(
			HospitalDischargeStudiesSummarySection hospitalDischargeStudiesSummarySection, DiagnosticChain diagnostics,
			Map<Object, Object> context) {
		return hospitalDischargeStudiesSummarySection.validateHospitalDischargeStudiesSummarySectionTitle(
			diagnostics, context);
	}

	/**
	 * Returns the resource locator that will be used to fetch messages for this validator's diagnostics.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ResourceLocator getResourceLocator() {
		return ConsolPlugin.INSTANCE;
	}

} // ConsolValidator
