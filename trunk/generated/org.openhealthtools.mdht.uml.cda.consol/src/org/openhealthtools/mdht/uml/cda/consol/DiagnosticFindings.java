/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.openhealthtools.mdht.uml.cda.consol;

import java.util.Map;

import org.eclipse.emf.common.util.DiagnosticChain;
import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Diagnostic Findings</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * <p>This section contains the results of observations generated by laboratories, imaging
 * procedures, and other procedures. The scope includes hematology, chemistry, serology,
 * virology, toxicology, microbiology, plain x-ray, ultrasound, CT, MRI, angiography,
 * cardiac echo, nuclear medicine, pathology, and procedure observations. The section
 * usually includes notable results such as abnormal values or relevant trends, and may
 * contain all results for the period of time being documented.</p>
 * 
 * <p>In some situations, such in an emergency department diagnostic findings may not be
 * available when a Consultation Note is released. As explained in 4.1 Section Descriptions
 * above, a required section for which no content is available must contain some
 * indication of such.</p>
 * 
 * <p>Laboratory results are typically generated by laboratories providing analytic services in
 * areas such as chemistry, hematology, serology, histology, cytology, anatomic pathology,
 * microbiology, and/or virology. These observations are based on analysis of specimens
 * obtained from the patient and submitted to the laboratory.</p>
 * 
 * <p>Imaging results are typically generated by a clinician reviewing the output of an imaging
 * procedure, such as where a cardiologist reports the left ventricular ejection fraction
 * based on the review of a cardiac echo.</p>
 * 
 * <p>Procedure results are typically generated by a clinician wanting to provide more
 * granular information about component observations made during the performance of a
 * procedure, such as where a gastroenterologist reports the size of a polyp observed
 * during a colonoscopy.</p>
 * <!-- end-model-doc -->
 *
 *
 * @see org.openhealthtools.mdht.uml.cda.consol.ConsolPackage#getDiagnosticFindings()
 * @model annotation="http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Relevant diagnostic tests and/or laboratory data' templateId.root='2.16.840.1.113883.10.20.1.14' constraints.validation.error='DiagnosticFindingsTemplateId ResultsSectionCode DiagnosticFindingsTitle DiagnosticFindingsText' code.codeSystemName='LOINC' constraints.validation.warning='DiagnosticFindingsResultOrganizer' code.code='30954-2'"
 * @generated
 */
public interface DiagnosticFindings extends ResultsSection {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * (self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())
	 * @param diagnostics The chain of diagnostics to which problems are to be appended.
	 * @param context The cache of context-specific information.
	 * <!-- end-model-doc -->
	 * @model annotation="http://www.eclipse.org/uml2/1.1.0/GenModel body='(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())'"
	 * @generated
	 */
	boolean validateDiagnosticFindingsTitle(DiagnosticChain diagnostics, Map<Object, Object> context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * not self.text.oclIsUndefined()
	 * @param diagnostics The chain of diagnostics to which problems are to be appended.
	 * @param context The cache of context-specific information.
	 * <!-- end-model-doc -->
	 * @model annotation="http://www.eclipse.org/uml2/1.1.0/GenModel body='not self.text.oclIsUndefined()'"
	 * @generated
	 */
	boolean validateDiagnosticFindingsText(DiagnosticChain diagnostics, Map<Object, Object> context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::VitalSignsOrganizer))
	 * @param diagnostics The chain of diagnostics to which problems are to be appended.
	 * @param context The cache of context-specific information.
	 * <!-- end-model-doc -->
	 * @model annotation="http://www.eclipse.org/uml2/1.1.0/GenModel body='self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::VitalSignsOrganizer))'"
	 * @generated
	 */
	boolean validateDiagnosticFindingsResultOrganizer(DiagnosticChain diagnostics, Map<Object, Object> context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::VitalSignsOrganizer)).oclAsType(consol::VitalSignsOrganizer)
	 * <!-- end-model-doc -->
	 * @model required="true" ordered="false"
	 *        annotation="http://www.eclipse.org/uml2/1.1.0/GenModel body='self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::VitalSignsOrganizer)).oclAsType(consol::VitalSignsOrganizer)'"
	 * @generated
	 */
	EList<VitalSignsOrganizer> getnullResultOrganizers();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public DiagnosticFindings init();
} // DiagnosticFindings
