<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_2B30sBSVEeGGzu7fmW9pXw" name="consol">
    <packagedElement xmi:type="uml:Class" xmi:id="_2DNRcBSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraints">
      <ownedComment xmi:id="_2DNRcRSVEeGGzu7fmW9pXw" annotatedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <body>&lt;p>This section describes constraints that apply to the H and P Note and to other types of CDA&#xD;
documents defined for general exchange. The template defined here should be reused&#xD;
wherever these general header constraints are applied.&lt;/p>&#xD;
&lt;p>To support communication between the receiver of the document and the patient or any&#xD;
other person or organization mentioned within it, the elements representing them will&#xD;
be named.&lt;/p>&#xD;
&lt;p>When name, address, or telecom information is unknown and where these elements are&#xD;
required to be present, as with CDA conformance if the information is unknown, these&#xD;
elements will be represented using an appropriate value for the nullFlavor attribute on&#xD;
the element.&lt;/p>&#xD;
&lt;p>Events occurring at a single point in time that are represented in the Clinical Document&#xD;
header will in general be precise to the day. These point-in-time events are the time of&#xD;
creation of the document; the starting time of a participation by an author, data&#xD;
enterer, authenticator, or legal authenticator; or the starting and ending time of an&#xD;
encounter.&lt;/p>&#xD;
&lt;p>Within the specification, all telephone numbers are to be encoded using a grammar&#xD;
which is a restriction on the TEL data type and RFC 2806. It simplifies interchange between applications as&#xD;
it removes optional URL components found in RFC 2806 that applications typically do&#xD;
not know how to process, such as ISDN sub-address, phone context, or other dialing&#xD;
parameters.&lt;/p>&#xD;
&lt;p>Organizations that wish to use OIDs should properly register their OID root and ensure&#xD;
uniqueness of the OID roots used in identifiers. A large number of mechanisms exist&#xD;
for obtaining OID roots for free or for a reasonable fee. HL7 maintains an OID registry&#xD;
page from which organizations may request an OID root under the HL7 OID root. This&#xD;
page can be accessed at: http://www.hl7.org/oid.&lt;/p>&#xD;
&lt;p>Another useful resource lists the many ways to obtain a registered OID Root for free or&#xD;
a small fee anywhere in the world and is located at:&lt;/p>&#xD;
&lt;p>http://www.dclunie.com/medical-image-faq/html/part8.html#UIDRegistration.&lt;/p>&#xD;
&lt;p>The manner in which the OID root is obtained is not constrained by this DSTU.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2DNRchSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsPersonHasName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRcxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRdBSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsRolesShallHaveAddrAndTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRdRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRdhSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsRolesShouldHaveAddrAndTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRdxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNReBSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsOrganizationsHaveContactInfo" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2DNReRSVEeGGzu7fmW9pXw">
          <body>When name, address, or telecom information is unknown and where these elements are&#xD;
required to be present, as with CDA conformance if the information is unknown, these&#xD;
elements will be represented using an appropriate value for the nullFlavor attribute on&#xD;
the element. Legal values according to this specification come from the HL7 NullFlavor&#xD;
vocabulary.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRehSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRexSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsTimePreciseToDay" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRfBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRfRSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsTimePreciseToYear" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRfhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>cda::OrganizationPartOf.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject)-> union(  cda::MaintainedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union( cda::RelatedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::RelatedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::RelatedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::ServiceEvent.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::EncounterParticipant.allInstances()->select( time.oclIsUndefined()).oclAsType( ecore::EObject))->union(self.participant->select( time.oclIsUndefined()).oclAsType( ecore::EObject))->union(cda::OrganizationPartOf.allInstances().effectiveTime->union(cda::MaintainedEntity.allInstances().effectiveTime)->union( cda::RelatedEntity.allInstances().effectiveTime)->union(cda::RelatedEntity.allInstances().effectiveTime)->union(cda::RelatedEntity.allInstances().effectiveTime)->union(cda::ServiceEvent.allInstances().effectiveTime)->union(cda::EncounterParticipant.allInstances().time)->union(self.participant.time)->select(current : datatypes::IVL_TS  |  ((not current.low.oclIsUndefined()) and (current.low.value.oclIsUndefined() or current.low.value.size() &lt; 4)) or ((not current.center.oclIsUndefined()) and (current.center.value.oclIsUndefined() or current.center.value.size() &lt; 4)) or ((not current.high.oclIsUndefined()) and (current.high.value.oclIsUndefined() or current.high.value.size() &lt; 4)) or (current.low.oclIsUndefined() and current.center.oclIsUndefined() and current.high.oclIsUndefined()) ).oclAsType( ecore::EObject))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRfxSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsTelephoneMatchesRegex" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2DNRgBSVEeGGzu7fmW9pXw">
          <body>The telecom element is used to provide a contact telephone number for the various&#xD;
participants that require it. The value attribute ofthis elements is a URL that specifies&#xD;
the telephone number, as indicated by the TEL data type.</body>
        </ownedComment>
        <ownedComment xmi:id="_2DNRgRSVEeGGzu7fmW9pXw">
          <body>All telephone numbers are to be encoded using a restricted form of the tel: URL scheme. &#xD;
A telephone number used for voice calls begins with the URL scheme tel:. If the&#xD;
number is a global phone number, it starts with a plus (+) sign. The remaining number&#xD;
is made up of the dialing digits and an optional extension and may also contain visual&#xD;
separators.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRghSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRgxSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsHasTelephoneDialingDigits" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRhBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRhRSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsUnknownTelephoneUsesNullFlavor" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2DNRhhSVEeGGzu7fmW9pXw">
          <body>There is no way to distinguish between an unknown phone number and an unknown&#xD;
e-mail or other telecommunications address. Therefore, the following convention will be&#xD;
used: Any telecom element that uses a flavor of null (has a nullFlavor attribute) is&#xD;
assumed to be a telephone number, which is the only required telecommunications&#xD;
address element within this DSTU.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRhxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRiBSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsTypeIdExtension" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRiRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.typeId.extension = 'POCD_HD000040'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRihSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsIdRootFormat" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRixSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.id.matches('root','([0-2])(.([1-9][0-9]*|0))+') or self.id.matches('root','([A-Fa-f0-9]{8})(\\\\-[A-Fa-f0-9]{4}){3}(\\\\-[A-Fa-f0-9]{12})')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRkxSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsOidLength" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2DNRlBSVEeGGzu7fmW9pXw">
          <body>OIDs are limited by this specification to no more than 64 characters in length for&#xD;
compatibility with other standards and Implementation Guides.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRlRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.id->select((not id.root.oclIsUndefined()) and id.root.size() > 64 )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRlhSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsLanguageCodeForm" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRlxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.languageCode.matches('code','(([a-z]{2})(\\\\-[A-Z]{2})?)')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRnhSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsSetIdAndVersionNumber" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2DNRnxSVEeGGzu7fmW9pXw">
          <body>The ClinicalDocument/setId element uses the instance identifier (II) data type. The root&#xD;
attribute is a UUID or OID that uniquely identifies the scope of the identifier, and the&#xD;
extension attribute is a value that is unique within the scope of the root for the set of&#xD;
versions of the document. See Document Identification, Revisions, and Addenda in&#xD;
Section 4.2.3.1 of the CDA Specification for some examples showing the use of the setId&#xD;
element.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRoBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>(self.setId.oclIsUndefined() and self.versionNumber.oclIsUndefined())&#xD;&#xA;   xor (not self.setId.oclIsUndefined() and not self.versionNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRoRSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsSetIdAndIdAreUnique" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRohSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>(not self.setId.oclIsUndefined() and not self.id.oclIsUndefined())&#xD;&#xA;   implies (self.setId.root &lt;> self.id.root or self.setId.extension &lt;> self.id.extension)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRoxSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsCopyTimeNotPresent" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2DNRpBSVEeGGzu7fmW9pXw">
          <body>The ClinicalDocument/copyTime element has been deprecated in CDA R2.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRpRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.copyTime.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRphSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsHasRecordTargetPatientRole" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRpxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->size() > 0 and self.recordTarget->exists(target : cda::RecordTarget | not target.patientRole.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRqBSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsHasPatientBirthTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRqRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->forAll(target : cda::RecordTarget | not target.patientRole.oclIsUndefined()&#xD;&#xA;   implies (not target.patientRole.patient.birthTime.value.oclIsUndefined()&#xD;&#xA;      or not target.patientRole.patient.birthTime.nullFlavor.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRqhSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsHasAdministrativeGenderCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2DNRqxSVEeGGzu7fmW9pXw">
          <body>TODO: add OCL test for terminology</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRrBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->forAll(target : cda::RecordTarget | not target.patientRole.oclIsUndefined()&#xD;&#xA;   implies (not target.patientRole.patient.administrativeGenderCode.code.oclIsUndefined()&#xD;&#xA;      or not target.patientRole.patient.administrativeGenderCode.nullFlavor.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRshSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsHasProviderOrganization" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRsxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->exists(target : cda::RecordTarget | not target.patientRole.providerOrganization.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRtBSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsHasAuthorTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2DNRtRSVEeGGzu7fmW9pXw">
          <body>The author/time element represents the start time of the author's&#xD;
participation in the creation of the clinical document.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRthSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.author->forAll(author : cda::Author | not author.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRtxSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsHasAssignedAuthorId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRuBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.author->forAll(author : cda::Author | author.assignedAuthor.id->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRuRSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsHasAssignedAuthorPersonOrDevice" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRuhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.author->forAll(author : cda::Author | not author.assignedAuthor.assignedPerson.oclIsUndefined() &#xD;&#xA;   or not author.assignedAuthor.assignedAuthoringDevice.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRuxSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsHasDataEntererAssignedPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRvBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.dataEnterer.oclIsUndefined() implies not self.dataEnterer.assignedEntity.assignedPerson.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRvRSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsHasDataEntererTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRvhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.dataEnterer.oclIsUndefined() implies not self.dataEnterer.time.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRvxSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsHasInformant" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRwBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.informant->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNRwRSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsHasInformantAssignedPersonOrRelatedPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNRwhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.informant->forAll(i : cda::Informant12 | not i.assignedEntity.assignedPerson.oclIsUndefined()&#xD;&#xA;   or not i.relatedEntity.relatedPerson.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNR2hSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsLegalAuthenticatorHasAssignedPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNR2xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.legalAuthenticator.oclIsUndefined() implies not self.legalAuthenticator.assignedEntity.assignedPerson.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNR3BSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsAuthenticatorHasAssignedPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNR3RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.authenticator->forAll(auth : cda::Authenticator | auth.assignedEntity->forAll(entity : cda::AssignedEntity |&#xD;&#xA;   not entity.assignedPerson.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNR3hSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsTimePreciseToSecond" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2DNR3xSVEeGGzu7fmW9pXw">
          <body>Should portion of CON-HP-10 constraitn</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNR4BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2DNR4RSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraintsTimePreciseToYearAndDay" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2DNR4hSVEeGGzu7fmW9pXw">
          <body>Should portion of CON-HP-11 constraint</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2DNR4xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>cda::OrganizationPartOf.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject)-> union(  cda::MaintainedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union( cda::RelatedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::RelatedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::RelatedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::ServiceEvent.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::EncounterParticipant.allInstances()->select( time.oclIsUndefined()).oclAsType( ecore::EObject))->union(self.participant->select( time.oclIsUndefined()).oclAsType( ecore::EObject))->union(cda::OrganizationPartOf.allInstances().effectiveTime->union(cda::MaintainedEntity.allInstances().effectiveTime)->union( cda::RelatedEntity.allInstances().effectiveTime)->union(cda::RelatedEntity.allInstances().effectiveTime)->union(cda::RelatedEntity.allInstances().effectiveTime)->union(cda::ServiceEvent.allInstances().effectiveTime)->union(cda::EncounterParticipant.allInstances().time)->union(self.participant.time)->select(current : datatypes::IVL_TS  |  ((not current.low.oclIsUndefined()) and (current.low.value.oclIsUndefined() or current.low.value.size() &lt; 8)) or ((not current.center.oclIsUndefined()) and (current.center.value.oclIsUndefined() or current.center.value.size() &lt; 8)) or ((not current.high.oclIsUndefined()) and (current.high.value.oclIsUndefined() or current.high.value.size() &lt; 8)) or (current.low.oclIsUndefined() and current.center.oclIsUndefined() and current.high.oclIsUndefined()) ).oclAsType( ecore::EObject))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b9WgcR7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b9Wgch7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b-GHUB7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsRealmCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b-GHUR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.realmCode->isEmpty() or self.realmCode->exists(element | element.isNullFlavorUndefined())) implies (self.realmCode->size() = 1 and self.realmCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = element.oclAsType(datatypes::CS) in &#xD;&#xA;value.code = 'US'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b-GHUh7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsTypeId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b-GHUx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.typeId.oclIsUndefined() or self.typeId.isNullFlavorUndefined()) implies (not self.typeId.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b-P4UB7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b-P4UR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b-P4Uh7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b-P4Ux7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b-P4VB7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsTitle" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b-P4VR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b-P4Vh7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsEffectiveTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b-P4Vx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b-ZCQB7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsLanguageCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b-ZCQR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.languageCode.oclIsUndefined() or self.languageCode.isNullFlavorUndefined()) implies (not self.languageCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2D-tgBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_S9OzADxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2EAisBSVEeGGzu7fmW9pXw" name="AllergyProblemAct">
      <eAnnotations xmi:id="_2EAisRSVEeGGzu7fmW9pXw" source="uml2.alias">
        <details xmi:id="_2EAishSVEeGGzu7fmW9pXw" key="Allergies and Drug Sensitivities"/>
      </eAnnotations>
      <eAnnotations xmi:id="_2EAisxSVEeGGzu7fmW9pXw" source="uml2.alias">
        <details xmi:id="_2EAitBSVEeGGzu7fmW9pXw" key="Allergy and Drug Sensitivity"/>
      </eAnnotations>
      <ownedComment xmi:id="_2GDKEBSVEeGGzu7fmW9pXw" annotatedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <body>A problem is a clinical statement that a clinician is particularly concerned about and wants to track. It has important patient management use cases (e.g. health records often present the problem list as a way of summarizing a patient's medical history).</body>
      </ownedComment>
      <ownedComment xmi:id="_2GDKERSVEeGGzu7fmW9pXw" annotatedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
This event (moodCode='EVN') represents an act (act classCode='ACT') of being concerned&#xD;
about a problem, allergy or other issue. The &amp;lt;effectiveTime> element describes the period of&#xD;
concern. The subject of concern is one or more observations about related problems (see&#xD;
1.3.6.1.4.1.19376.1.5.3.1.4.5.2) or allergies and intolerances (see&#xD;
1.3.6.1.4.1.19376.1.5.3.1.4.5.3). Additional references can be provided having additional information related to the concern. The concern entry allows related acts to be grouped. This&#xD;
allows representing the history of a problem as a series of observation over time, for example.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
All concerns reflect the act of recording (&amp;lt;act classCode='ACT'>) the event (moodCode='EVN')&#xD;
of being concerned about a problem, allergy or other issue about the patient condition.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2GDKEhSVEeGGzu7fmW9pXw" annotatedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <body>This entry is a specialization of the Concern Entry, wherein the subject of the concern is focused on an allergy or intolerance.</body>
      </ownedComment>
      <ownedComment xmi:id="_2EAitRSVEeGGzu7fmW9pXw" annotatedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    This module contains the allergy or intolerance conditions and the associated adverse reactions suffered&#xD;
    by the patient. See the HL7 Continuity of Care Document Section 3.8 for constraints applicable to this module. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2F7OQBSVEeGGzu7fmW9pXw" name="AllergyProblemActEntryRelationshipRequired">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F7OQRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.entryRelationship->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F71URSVEeGGzu7fmW9pXw" name="AllergyProblemActSubjectOfTarget">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F71UhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SUBJ, cda::ClinicalStatement)->forAll(target : cda::ClinicalStatement | not target.oclIsUndefined() and &#xD;&#xA;  (target.oclIsKindOf(consol::ProblemObservation) or target.oclIsKindOf(consol::AlertObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F8cYRSVEeGGzu7fmW9pXw" name="AllergyProblemActContainsProblemObservation">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F8cYhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSection().oclIsKindOf(consol::ProblemSection) implies self.getObservations()&#xD;&#xA;   ->exists(obs : cda::Observation | obs.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F9DcBSVEeGGzu7fmW9pXw" name="AllergyProblemActContainsAlertObservation">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F9DcRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSection().oclIsKindOf(consol::AlertsSection) implies self.getObservations()&#xD;&#xA;   ->exists(obs : cda::Observation | obs.oclIsKindOf(consol::AlertObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F9qgBSVEeGGzu7fmW9pXw" name="AllergyProblemActContainsPatientAwareness">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F9qgRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->one(partic : cda::Participant2 | partic.oclIsKindOf(consol::PatientAwareness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F-RkBSVEeGGzu7fmW9pXw" name="AllergyProblemActEffectiveTimeLowHigh">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F-RkRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.effectiveTime.low.oclIsUndefined()&#xD;&#xA;   and ((self.statusCode.code = 'completed' or self.statusCode.code = 'aborted') implies not self.effectiveTime.high.oclIsUndefined())&#xD;&#xA;   and ((self.statusCode.code &lt;> 'completed' and self.statusCode.code &lt;> 'aborted') implies self.effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F-4oBSVEeGGzu7fmW9pXw" name="AllergyProblemActHasRelatedObservations">
        <ownedComment xmi:id="_2F-4oRSVEeGGzu7fmW9pXw">
          <body>Each concern is about one or more related problems or allergies. This is how a series of related observations can be grouped as a single concern.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F-4ohSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship.observation.templateId->exists(id : datatypes::II | id.root =  '1.3.6.1.4.1.19376.1.5.3.1.4.5') or self.entryRelationship.observation.templateId->exists(id : datatypes::II | id.root =  '1.3.6.1.4.1.19376.1.5.3.1.4.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F-4pBSVEeGGzu7fmW9pXw" name="AllergyProblemActRelatedObservationsTypeCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F-4pRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er|er.typeCode &lt;> vocab::x_ActRelationshipEntryRelationship::SUBJ)->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GAGwBSVEeGGzu7fmW9pXw" name="AllergyProblemActHasRelatedReferencesTypeCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GAGwRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.reference->forAll(r | r.typeCode = vocab::x_ActRelationshipExternalReference)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAithSVEeGGzu7fmW9pXw" name="AllergyProblemActAdverseEventDate" constrainedElement="_2EAivhSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2EAitxSVEeGGzu7fmW9pXw">
          <body>This is a date that expresses when this particular&#xD;
allergy or intolerance was known to be active for the&#xD;
patient</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAiuBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  not obs.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAiuRSVEeGGzu7fmW9pXw" name="AllergyProblemActAdverseEventType" constrainedElement="_2EAithSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2EAiuhSVEeGGzu7fmW9pXw">
          <body>Describes the type of product and intolerance suffered&#xD;
by the patient. The type of product shall be classified&#xD;
with respect to whether the adverse event occurs in&#xD;
relationship with a medication, food, or environmental&#xD;
or other product. The adverse event should also be&#xD;
classified more specifically as an allergy, non-allergy&#xD;
intolerance, or just adverse reaction if that level of&#xD;
detail is not known</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAiuxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  not obs.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAivBSVEeGGzu7fmW9pXw" name="AllergyProblemActAdverseEventTypeVocab" constrainedElement="_2EAiuRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAivRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  not obs.code.oclIsUndefined() and obs.code.codeSystem = '2.16.840.1.113883.6.96' and (obs.code.code = '420134006' or obs.code.code ='418038007' or obs.code.code='419511003' or obs.code.code='418471000' or obs.code.code='419199007' or obs.code.code='416098002' or obs.code.code='414285001' or obs.code.code='59037007' or obs.code.code='235719002'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAivhSVEeGGzu7fmW9pXw" name="AllergyProblemActAllergyProduct">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAivxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  &#xD;&#xA;obs.participant->exists( par : cda::Participant2 | not par.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAiwBSVEeGGzu7fmW9pXw" name="AllergyProblemActAllergyProductTypeCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAiwRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  &#xD;&#xA;obs.participant->exists( par : cda::Participant2 | not par.oclIsUndefined() implies par.typeCode = vocab::ParticipationType::CSM))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAiwhSVEeGGzu7fmW9pXw" name="AllergyProblemActProductDetailParticipantRole">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAiwxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  &#xD;&#xA;obs.participant->exists( par : cda::Participant2 | not par.oclIsUndefined() implies (par.typeCode = vocab::ParticipationType::CSM and par.participantRole->exists(prole : cda::ParticipantRole | not prole.oclIsUndefined()))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAixBSVEeGGzu7fmW9pXw" name="AllergyProblemActProductDetailParticipantRoleClassCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAixRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  &#xD;&#xA;obs.participant->exists( par : cda::Participant2 | not par.oclIsUndefined() implies (par.typeCode = vocab::ParticipationType::CSM and par.participantRole->exists(prole : cda::ParticipantRole | not prole.oclIsUndefined() and &#xD;&#xA;prole.classCode=vocab::RoleClassRoot::MANU))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAixhSVEeGGzu7fmW9pXw" name="AllergyProblemActProductDetailPlayingEntity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAixxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  &#xD;&#xA;obs.participant->exists( par : cda::Participant2 | not par.oclIsUndefined() implies (par.typeCode =vocab::ParticipationType::CSM and par.participantRole->exists(prole : cda::ParticipantRole | not prole.oclIsUndefined() and &#xD;&#xA;prole.classCode=vocab::RoleClassRoot::MANU and prole.playingEntity->exists( playe : cda::PlayingEntity | not playe.oclIsUndefined())))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAiyBSVEeGGzu7fmW9pXw" name="AllergyProblemActProductDetailPlayingEntityClassCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAiyRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  &#xD;&#xA;obs.participant->exists( par : cda::Participant2 | not par.oclIsUndefined() implies (par.typeCode =vocab::ParticipationType::CSM and par.participantRole->exists(prole : cda::ParticipantRole | not prole.oclIsUndefined() and &#xD;&#xA;prole.classCode=vocab::RoleClassRoot::MANU and prole.playingEntity->exists( playe : cda::PlayingEntity | not playe.oclIsUndefined() and playe.classCode =vocab::EntityClassRoot::MMAT )))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAiyhSVEeGGzu7fmW9pXw" name="AllergyProblemActProductDetailName" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2EAiyxSVEeGGzu7fmW9pXw">
          <body>This is the name or other description of the product or&#xD;
agent that causes the intolerance</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAizBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  &#xD;&#xA;obs.participant->exists( par : cda::Participant2 | not par.oclIsUndefined() implies (par.typeCode = vocab::ParticipationType::CSM and par.participantRole->exists(prole : cda::ParticipantRole | not prole.oclIsUndefined() and &#xD;&#xA;prole.classCode=vocab::RoleClassRoot::MANU and prole.playingEntity->exists( playe : cda::PlayingEntity | not playe.oclIsUndefined() and playe.classCode = vocab::EntityClassRoot::MMAT and playe.name->size() = 1)))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAizRSVEeGGzu7fmW9pXw" name="AllergyProblemActProductCode" constrainedElement="_2EAiyhSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2EAizhSVEeGGzu7fmW9pXw">
          <body>This value is a code describing the product</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAizxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  &#xD;&#xA;obs.participant->exists( par : cda::Participant2 | not par.oclIsUndefined() implies (par.typeCode = vocab::ParticipationType::CSM and par.participantRole->exists(prole : cda::ParticipantRole | not prole.oclIsUndefined() and &#xD;&#xA;prole.classCode=vocab::RoleClassRoot::MANU and prole.playingEntity->exists( playe : cda::PlayingEntity | not playe.oclIsUndefined() and playe.classCode = vocab::EntityClassRoot::MMAT and playe.code->size() = 1)))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAi0BSVEeGGzu7fmW9pXw" name="AllergyProblemActAllergyProductFoodVocab" constrainedElement="_2EAivhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAi0RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  &#xD;&#xA;obs.participant->exists( par : cda::Participant2 | not par.oclIsUndefined() implies (par.typeCode = vocab::ParticipationType::CSM and par.participantRole->exists(prole : cda::ParticipantRole | not prole.oclIsUndefined() and &#xD;&#xA;prole.classCode= vocab::RoleClassRoot::MANU and prole.playingEntity->exists( playe : cda::PlayingEntity | not playe.oclIsUndefined() and playe.classCode = vocab::EntityClassRoot::MMAT and playe.code->size() = 1 and (playe.code.codeSystem =&#xD;&#xA;'2.16.840.1.113883.4.9' or playe.code.codeSystem = '2.16.840.1.113883.3.26.1.5' or playe.code.codeSystem = '2.16.840.1.113883.6.88'))))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAi0hSVEeGGzu7fmW9pXw" name="AllergyProblemActAllergyProductMedClassVocab" constrainedElement="_2EAivhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAi0xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  &#xD;&#xA;obs.participant->exists( par : cda::Participant2 | not par.oclIsUndefined() implies (par.typeCode = vocab::ParticipationType::CSM and par.participantRole->exists(prole : cda::ParticipantRole | not prole.oclIsUndefined() and &#xD;&#xA;prole.classCode= vocab::RoleClassRoot::MANU and prole.playingEntity->exists( playe : cda::PlayingEntity | not playe.oclIsUndefined() and playe.classCode = vocab::EntityClassRoot::MMAT and playe.code->size() = 1 and (playe.code.codeSystem =&#xD;&#xA;'2.16.840.1.113883.4.9' or playe.code.codeSystem = '2.16.840.1.113883.3.26.1.5' or playe.code.codeSystem = '2.16.840.1.113883.6.88'))))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAi1BSVEeGGzu7fmW9pXw" name="AllergyProblemActAllergyProductSpecificMedVocab" constrainedElement="_2EAivhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAi1RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation |  &#xD;&#xA;obs.participant->exists( par : cda::Participant2 | not par.oclIsUndefined() implies (par.typeCode = vocab::ParticipationType::CSM and par.participantRole->exists(prole : cda::ParticipantRole | not prole.oclIsUndefined() and &#xD;&#xA;prole.classCode= vocab::RoleClassRoot::MANU and prole.playingEntity->exists( playe : cda::PlayingEntity | not playe.oclIsUndefined() and playe.classCode = vocab::EntityClassRoot::MMAT and playe.code->size() = 1 and (playe.code.codeSystem =&#xD;&#xA;'2.16.840.1.113883.4.9' or playe.code.codeSystem = '2.16.840.1.113883.3.26.1.5' or playe.code.codeSystem = '2.16.840.1.113883.6.88'))))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAi1hSVEeGGzu7fmW9pXw" name="AllergyProblemActReactionText" constrainedElement="_2EAizRSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2EAi1xSVEeGGzu7fmW9pXw">
          <body>This is the reaction that may be caused by the product&#xD;
or agent</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAi2BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->forAll(obs | obs.getObservations()->forAll( ro | (not ro.oclIsKindOf(consol::ReactionObservation)) or  (ro.oclIsKindOf(consol::ReactionObservation) and  not ro.text.oclIsUndefined()) )  )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAi2RSVEeGGzu7fmW9pXw" name="AllergyProblemActReactionCode" constrainedElement="_2EAi1hSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2EAi2hSVEeGGzu7fmW9pXw">
          <body>This value is a code describing the reaction</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAi2xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->forAll(obs | obs.getObservations()->forAll( ro | (not ro.oclIsKindOf(consol::ReactionObservation)) or  (ro.oclIsKindOf(consol::ReactionObservation) and  not ro.code.oclIsUndefined()) )  )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAi3BSVEeGGzu7fmW9pXw" name="AllergyProblemActReactionCodeVocab" constrainedElement="_2EAi2RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAi3RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->forAll(obs | obs.getObservations()->forAll( ro | (not ro.oclIsKindOf(consol::ReactionObservation)) or  (ro.oclIsKindOf(consol::ReactionObservation) and  not ro.code.oclIsUndefined()  and ro.code.codeSystem = '2.16.840.1.113883.6.96' and (ro.code.code = '404684003' or ro.code.code = '243796009')  ) )  )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAi3hSVEeGGzu7fmW9pXw" name="AllergyProblemActSeverityText" constrainedElement="_2EAi2RSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2EAi3xSVEeGGzu7fmW9pXw">
          <body>This is a description of the level of severity of the&#xD;
allergy or intolerance</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAi4BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->forAll(obs | obs.getObservations()->forAll( so | (not so.oclIsKindOf(consol::SeverityObservation)) or  (so.oclIsKindOf(consol::SeverityObservation) and  not so.text.oclIsUndefined()) )  )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAi4RSVEeGGzu7fmW9pXw" name="AllergyProblemActSeverityCode" constrainedElement="_2EAi3hSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2EAi4hSVEeGGzu7fmW9pXw">
          <body>This value is a code describing the level severity of&#xD;
the allergy or intolerance</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAi4xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->forAll(obs | obs.getObservations()->forAll( so | (not so.oclIsKindOf(consol::SeverityObservation)) or  (so.oclIsKindOf(consol::SeverityObservation) and  not so.code.oclIsUndefined()) )  )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EAi5BSVEeGGzu7fmW9pXw" name="AllergyProblemActSeverityCodeVocab" constrainedElement="_2EAi4RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EAi5RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->forAll(obs | obs.getObservations()->forAll( so | (not so.oclIsKindOf(consol::SeverityObservation)) or  (so.oclIsKindOf(consol::SeverityObservation) and  not so.code.oclIsUndefined() and so.code.codeSystem = '2.16.840.1.113883.6.96' and (so.code.code = '255604002' or so.code.code = '371923003' or so.code.code = '6736007' or so.code.code = '371924009' or so.code.code = '24484000' or so.code.code = '399166001')&#xA;) )  )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b-izQB7pEeGEaLkc3UAsAg" name="AllergyProblemActTemplateId" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b-izQR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.30')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b_IpIB7pEeGEaLkc3UAsAg" name="AllergyProblemActClassCode" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b_IpIR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b_IpIh7pEeGEaLkc3UAsAg" name="AllergyProblemActMoodCode" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b_IpIx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b_IpJB7pEeGEaLkc3UAsAg" name="AllergyProblemActId" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b_IpJR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b_SaIB7pEeGEaLkc3UAsAg" name="AllergyProblemActCode" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b_SaIR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b_SaIh7pEeGEaLkc3UAsAg" name="AllergyProblemActStatusCode" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b_SaIx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '55561003' or value.code = '73425007' or value.code = '90734009' or value.code = '7087005' or value.code = '255227004' or value.code = '415684004' or value.code = '410516002' or value.code = '413322009')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b_cLIB7pEeGEaLkc3UAsAg" name="AllergyProblemActEffectiveTime" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b_cLIR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cCthkB7pEeGEaLkc3UAsAg" name="AllergyProblemActAllergyObservation" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCthkR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AllergyObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2GDKExSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cCthkh7pEeGEaLkc3UAsAg" name="getAllergyObservations" isQuery="true" bodyCondition="_cCthlR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cCthlR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cCthkh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCthlh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation)).oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cCthkx7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cCthlB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2EQaUBSVEeGGzu7fmW9pXw" name="EpisodeObservation">
      <ownedComment xmi:id="_2EQaURSVEeGGzu7fmW9pXw" annotatedElement="_2EQaUBSVEeGGzu7fmW9pXw">
        <body>Episode observations are used to distinguish among multiple occurrences of a problem or social history item. An episode observation is used to indicate that a problem act represents a new episode, distinct from other episodes of a similar concern.</body>
      </ownedComment>
      <ownedRule xmi:id="_2EQaVRSVEeGGzu7fmW9pXw" name="EpisodeObservationOneEntryRelationshipSUBJ" constrainedElement="_2EQaUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EQaVhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SUBJ, consol::ProblemConcernAct)->size() = 1&#xD;&#xA;  or self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SUBJ, consol::SocialHistoryObservation)->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EQaVxSVEeGGzu7fmW9pXw" name="EpisodeObservationExistsEntryRelationshipSAS" constrainedElement="_2EQaUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EQaWBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SAS, consol::ProblemConcernAct)->size() >0&#xD;&#xA;  or self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SAS, consol::SocialHistoryObservation)->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b_cLIh7pEeGEaLkc3UAsAg" name="EpisodeObservationTemplateId" constrainedElement="_2EQaUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b_cLIx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.41')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b_cLJR7pEeGEaLkc3UAsAg" name="EpisodeObservationClassCode" constrainedElement="_2EQaUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b_cLJh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b_lVEB7pEeGEaLkc3UAsAg" name="EpisodeObservationMoodCode" constrainedElement="_2EQaUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b_lVER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b_lVEh7pEeGEaLkc3UAsAg" name="EpisodeObservationCode" constrainedElement="_2EQaUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b_lVEx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b_lVFB7pEeGEaLkc3UAsAg" name="EpisodeObservationStatusCode" constrainedElement="_2EQaUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b_lVFR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b_vGEB7pEeGEaLkc3UAsAg" name="EpisodeObservationValue" constrainedElement="_2EQaUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b_vGER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.code = '404684003' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2EYWIBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2EaLUBSVEeGGzu7fmW9pXw" name="AllergyObservation">
      <eAnnotations xmi:id="_2EaLURSVEeGGzu7fmW9pXw" source="uml2.alias">
        <details xmi:id="_2EaLUhSVEeGGzu7fmW9pXw" key="Allergies and Intolerances"/>
      </eAnnotations>
      <ownedComment xmi:id="_2F5ZEBSVEeGGzu7fmW9pXw" annotatedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <body>&lt;p>This section makes use of the linking, severity, clinical status and comment content specifications defined elsewhere in the technical framework. In HL7 RIM parlance, observations about a problem, complaint, symptom, finding, diagnosis, or functional limitation of a patient is the event (moodCode='EVN') of observing (&amp;lt;observation classCode='OBS'>) that problem. The &amp;lt;value> of the observation comes from a controlled vocabulary representing such things. The &amp;lt;code> contained within the &amp;lt;observation> describes the method of determination from yet another controlled vocabulary.&lt;/p>&#xD;
&#xD;
&lt;p>The basic pattern for reporting a problem uses the CDA &amp;lt;observation> element, setting the classCode='OBS' to represent that this is an observation of a problem, and the moodCode='EVN', to represent that this is an observation that has in fact taken place. The negationInd attribute, if true, specifies that the problem indicated was observed to not have occurred (which is subtly but importantly different from having not been observed). The value of negationInd should not normally be set to true. Instead, to record that there is &quot;no prior history of chicken pox&quot;, one would use a coded value indicated exactly that. However, it is not always possible to record problems in this manner, especially if using a controlled vocabulary that does not supply pre-coordinated negations , or which do not allow the negation to be recorded with post-coordinated coded terminology.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2EaLUxSVEeGGzu7fmW9pXw" annotatedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <body>Allergies and intolerances are special kinds of problems, and so are also recorded in the CDA&#xD;
&amp;lt;observation> element, with classCode='OBS'. They follow the same pattern as the problem&#xD;
entry, with exceptions noted below.</body>
      </ownedComment>
      <ownedRule xmi:id="_2F1usRSVEeGGzu7fmW9pXw" name="AllergyObservationInformationSource">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F1ushSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;&#xA;or not self.getSection().informant->isEmpty()&#xD;&#xA;or not self.getClinicalDocument().informant->isEmpty()&#xD;&#xA;or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;&#xA;or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;&#xA;   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;&#xA;   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F2VwBSVEeGGzu7fmW9pXw" name="AllergyObservationContainsPatientAwareness">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F2VwRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->one(partic : cda::Participant2 | partic.oclIsKindOf(consol::PatientAwareness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F280BSVEeGGzu7fmW9pXw" name="AllergyObservationHasTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F280RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F3j4BSVEeGGzu7fmW9pXw" name="AllergyObservationCommentInversionInd">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F3j4RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(rel : cda::EntryRelationship | (not rel.act.oclIsUndefined() and rel.act.oclIsKindOf(consol::Comment)) implies rel.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaLVxSVEeGGzu7fmW9pXw" name="AllergyObservationCodeCodeSystemRequired">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaLWBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not (code.code.oclIsUndefined() or code.codeSystem.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaLWRSVEeGGzu7fmW9pXw" name="AllergyObservationDisplayNameCodeName" constrainedElement="_2EaLVxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaLWhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not (code.displayName.oclIsUndefined() or code.codeSystemName.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaLXhSVEeGGzu7fmW9pXw" name="AllergyObservationAllergySubstance">
        <ownedComment xmi:id="_2EaLXxSVEeGGzu7fmW9pXw">
          <body>The substance that causes the allergy or intolerance may be specified in the &amp;lt;participant> element.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaLYBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaLYRSVEeGGzu7fmW9pXw" name="AllergyObservationAllergySubstanceTypeCode" constrainedElement="_2EaLYxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaLYhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->forAll(par : cda::Participant2 | par.typeCode = vocab::ParticipationType::CSM)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaLYxSVEeGGzu7fmW9pXw" name="AllergyObservationAllergySubstanceParticipantRole" constrainedElement="_2EaLXhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaLZBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaLZRSVEeGGzu7fmW9pXw" name="AllergyObservationAllergySubstanceParticipantRoleClassCode" constrainedElement="_2EaLYxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaLZhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole->one(pr : cda::ParticipantRole | pr.classCode = vocab::RoleClassRoot::MANU)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaLZxSVEeGGzu7fmW9pXw" name="AllergyObservationAllergySubstancePlayingEntity" constrainedElement="_2EaLYxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaLaBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole.playingEntity->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaLaRSVEeGGzu7fmW9pXw" name="AllergyObservationAllergySubstancePlayingEntityClassCode" constrainedElement="_2EaLYxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaLahSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole.playingEntity->one(pe : cda::PlayingEntity | pe.classCode = vocab::EntityClassRoot::MMAT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaLaxSVEeGGzu7fmW9pXw" name="AllergyObservationAllergySubstancePlayingEntityCode" constrainedElement="_2EaLXhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaLbBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole.playingEntity.code->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaLbRSVEeGGzu7fmW9pXw" name="AllergyObservationPlayingEntityCodeReference" constrainedElement="_2EaLaxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaLbhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole.playingEntity.code.originalText.reference->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_b_vGEh7pEeGEaLkc3UAsAg" name="AllergyObservationTemplateId" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_b_vGEx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cACBAB7pEeGEaLkc3UAsAg" name="AllergyObservationClassCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cACBAR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cACBAh7pEeGEaLkc3UAsAg" name="AllergyObservationMoodCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cACBAx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cALyAB7pEeGEaLkc3UAsAg" name="AllergyObservationId" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cALyAR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cALyAh7pEeGEaLkc3UAsAg" name="AllergyObservationCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cALyAx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cALyBB7pEeGEaLkc3UAsAg" name="AllergyObservationText" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cALyBR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cAU78B7pEeGEaLkc3UAsAg" name="AllergyObservationStatusCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAU78R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cAU78h7pEeGEaLkc3UAsAg" name="AllergyObservationEffectiveTime" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAU78x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cAU79B7pEeGEaLkc3UAsAg" name="AllergyObservationValue" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAU79R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cAU79h7pEeGEaLkc3UAsAg" name="AllergyObservationProblemEntryReactionObservationContainer" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAU79x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::MFST)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cAes9R7pEeGEaLkc3UAsAg" name="AllergyObservationSeverity" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAes9h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SeverityObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2F5ZERSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cAes8B7pEeGEaLkc3UAsAg" name="getProblemEntryReactionObservationContainers" isQuery="true" bodyCondition="_cAes8x7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cAes8x7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cAes8B7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAes9B7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation)).oclAsType(consol::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cAes8R7pEeGEaLkc3UAsAg" type="_2E_aIRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cAes8h7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cAes9x7pEeGEaLkc3UAsAg" name="getSeverity" isQuery="true" bodyCondition="_cAes-h7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cAes-h7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cAes9x7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAes-x7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SeverityObservation))->asSequence()->first().oclAsType(consol::SeverityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cAes-B7pEeGEaLkc3UAsAg" type="_2FGu4hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cAes-R7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cgqo8B7pEeGEaLkc3UAsAg" name="getAllergyStatusObservation" isQuery="true" bodyCondition="_cgqo8x7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cgqo8x7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cgqo8B7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgqo9B7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyStatusObservation))->asSequence()->first().oclAsType(consol::AllergyStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cgqo8R7pEeGEaLkc3UAsAg" type="_2FRuAhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cgqo8h7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2EqqABSVEeGGzu7fmW9pXw" name="AgeObservation">
      <ownedComment xmi:id="_2EqqARSVEeGGzu7fmW9pXw" annotatedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <body>A common scenario is that a patient will know the age of a relative when they had a certain condition or when they died, but will not know the actual year (e.g. &quot;grandpa died of a heart attack at the age of 50&quot;). Often times, neither precise dates nor ages are known (e.g. &quot;cousin died of congenital heart disease as an infant&quot;). In all cases, dates and times and ages can be expressed in narrative.</body>
      </ownedComment>
      <ownedRule xmi:id="_cAes_B7pEeGEaLkc3UAsAg" name="AgeObservationTemplateId" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAes_R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cAes_x7pEeGEaLkc3UAsAg" name="AgeObservationClassCode" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAetAB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cAetAR7pEeGEaLkc3UAsAg" name="AgeObservationMoodCode" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAetAh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cAod8B7pEeGEaLkc3UAsAg" name="AgeObservationCode" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAod8R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '397659008' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cAod8h7pEeGEaLkc3UAsAg" name="AgeObservationStatusCode" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAod8x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cAod9B7pEeGEaLkc3UAsAg" name="AgeObservationValue" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAod9R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2EvigBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2ExXsBSVEeGGzu7fmW9pXw" name="HealthStatusObservation">
      <ownedComment xmi:id="_2ExXsRSVEeGGzu7fmW9pXw" annotatedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <body>The health status observation records information about the current health status of the patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_2E4FYBSVEeGGzu7fmW9pXw" name="HealthStatusObservationTargetOfEntryRelationship">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2E4FYRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsKindOf(consol::StatusObservation))->exists(er1 : cda::EntryRelationship | er1.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2E5TgBSVEeGGzu7fmW9pXw" name="HealthStatusObservationNoAdditionalParticipants">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2E5TgRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2E5TgxSVEeGGzu7fmW9pXw" name="HealthStatusObservationNoAdditionalRelationships">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2E5ThBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er|not er.observation.oclIsUndefined())->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2ExXshSVEeGGzu7fmW9pXw" name="HealthStatusObservationHasTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2ExXsxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cAxn4B7pEeGEaLkc3UAsAg" name="HealthStatusObservationTemplateId" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAxn4R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cAxn4x7pEeGEaLkc3UAsAg" name="HealthStatusObservationClassCode" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cAxn5B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cA7Y4B7pEeGEaLkc3UAsAg" name="HealthStatusObservationMoodCode" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cA7Y4R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cA7Y4h7pEeGEaLkc3UAsAg" name="HealthStatusObservationCode" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cA7Y4x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '11323-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cA7Y5B7pEeGEaLkc3UAsAg" name="HealthStatusObservationText" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cA7Y5R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBEi0B7pEeGEaLkc3UAsAg" name="HealthStatusObservationStatusCode" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBEi0R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBEi0h7pEeGEaLkc3UAsAg" name="HealthStatusObservationValue" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBEi0x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '81323004' or value.code = '313386006' or value.code = '162467007' or value.code = '161901003' or value.code = '271593001' or value.code = '21134002' or value.code = '161045001' or value.code = '419099009')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2E56kRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2E_aIRSVEeGGzu7fmW9pXw" name="ReactionObservation">
      <ownedComment xmi:id="_j3HUIBraEeGo461UQq-B1g">
        <body>This clinical statement represents an undesired symptom, finding, etc., due to an administered or exposed substance. A reaction can be defined with respect to its severity, and can have been treated by one or more interventions.</body>
      </ownedComment>
      <ownedRule xmi:id="_cBEi1B7pEeGEaLkc3UAsAg" name="ReactionObservationTemplateId" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBEi1R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBOT0B7pEeGEaLkc3UAsAg" name="ReactionObservationClassCode" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBOT0R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBOT0h7pEeGEaLkc3UAsAg" name="ReactionObservationMoodCode" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBOT0x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBOT1B7pEeGEaLkc3UAsAg" name="ReactionObservationId" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBOT1R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBOT1h7pEeGEaLkc3UAsAg" name="ReactionObservationCode" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBOT1x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBYE0B7pEeGEaLkc3UAsAg" name="ReactionObservationText" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBYE0R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBYE0h7pEeGEaLkc3UAsAg" name="ReactionObservationStatusCode" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBYE0x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBYE1B7pEeGEaLkc3UAsAg" name="ReactionObservationEffectiveTime" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBYE1R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBhOwB7pEeGEaLkc3UAsAg" name="ReactionObservationValue" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBhOwR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cB0wxB7pEeGEaLkc3UAsAg" name="ReactionObservationSeverityObservation" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cB0wxR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SeverityObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ckPhYx7pEeGEaLkc3UAsAg" name="ReactionObservationProcedureActivityProcedure" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckPhZB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(consol::ProcedureActivityProcedure) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ckZSVR7pEeGEaLkc3UAsAg" name="ReactionObservationMedicationActivity" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckZSVh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2FwPIhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cB96sB7pEeGEaLkc3UAsAg" name="getSeverityObservation" isQuery="true" bodyCondition="_cB96sx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cB96sx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cB96sB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cB96tB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SeverityObservation))->asSequence()->first().oclAsType(consol::SeverityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cB96sR7pEeGEaLkc3UAsAg" type="_2FGu4hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cB96sh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ckZSUB7pEeGEaLkc3UAsAg" name="getProcedureActivityProcedure" isQuery="true" bodyCondition="_ckZSUx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ckZSUx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ckZSUB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckZSVB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure))->asSequence()->first().oclAsType(consol::ProcedureActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ckZSUR7pEeGEaLkc3UAsAg" type="_2OG58RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ckZSUh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ckZSVx7pEeGEaLkc3UAsAg" name="getMedicationActivity" isQuery="true" bodyCondition="_ckZSWh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ckZSWh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ckZSVx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckZSWx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity))->asSequence()->first().oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ckZSWB7pEeGEaLkc3UAsAg" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ckZSWR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2FGu4hSVEeGGzu7fmW9pXw" name="SeverityObservation">
      <ownedComment xmi:id="_2FGu4xSVEeGGzu7fmW9pXw" annotatedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <body>This specification models a severity observation as a separate observation from the condition. While this model is different from work presently underway by various organizations (i.e., SNOMED, HL7, TermInfo), it is not wholly incompatible with that work. In that work, qualifiers may be used to identify severity in the coded condition observation, and a separate severity observation is no longer necessary. The use of qualifiers is not precluded by this specification. However, to support semantic interoperability between EMR systems using different vocabularies, this specification does require that severity information also be provided in a separate observation. This ensures that all EMR systems have equal access to the information, regardless of the vocabularies they support.</body>
      </ownedComment>
      <ownedRule xmi:id="_2FGu5BSVEeGGzu7fmW9pXw" name="SeverityObservationHasTextReference" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FGu5RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBhOwh7pEeGEaLkc3UAsAg" name="SeverityObservationTemplateId" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBhOwx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBhOxR7pEeGEaLkc3UAsAg" name="SeverityObservationClassCode" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBhOxh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBq_wB7pEeGEaLkc3UAsAg" name="SeverityObservationMoodCode" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBq_wR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBq_wh7pEeGEaLkc3UAsAg" name="SeverityObservationCode" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBq_wx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'SEV' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cBq_xB7pEeGEaLkc3UAsAg" name="SeverityObservationText" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cBq_xR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cB0wwB7pEeGEaLkc3UAsAg" name="SeverityObservationStatusCode" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cB0wwR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cB0wwh7pEeGEaLkc3UAsAg" name="SeverityObservationValue" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cB0wwx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.1063' and (value.code = 'H' or value.code = 'M' or value.code = 'L')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2FODoBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2FRuAhSVEeGGzu7fmW9pXw" name="AllergyStatusObservation">
      <ownedComment xmi:id="_2FRuAxSVEeGGzu7fmW9pXw" annotatedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <body>This template represents the status of the allergy indicating whether it is active, no longer active, or is an historic allergy. There can be only one allergy status observation per alert observation.</body>
      </ownedComment>
      <ownedRule xmi:id="_2FZp0BSVEeGGzu7fmW9pXw" name="AllergyStatusObservationTargetOfEntryRelationship">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FZp0RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsKindOf(consol::StatusObservation))->exists(er1 : cda::EntryRelationship | er1.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FaQ4RSVEeGGzu7fmW9pXw" name="AllergyStatusObservationNoAdditionalParticipants">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FaQ4hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Fa38BSVEeGGzu7fmW9pXw" name="AllergyStatusObservationNoAdditionalRelationships">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Fa38RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er|not er.observation.oclIsUndefined())->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FRuBBSVEeGGzu7fmW9pXw" name="AllergyStatusObservationHasTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FRuBRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cB96tR7pEeGEaLkc3UAsAg" name="AllergyStatusObservationTemplateId" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cB96th7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.28')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cB96uB7pEeGEaLkc3UAsAg" name="AllergyStatusObservationClassCode" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cB96uR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cCHrsB7pEeGEaLkc3UAsAg" name="AllergyStatusObservationMoodCode" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCHrsR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cCHrsh7pEeGEaLkc3UAsAg" name="AllergyStatusObservationCode" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCHrsx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '33999-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cCHrtB7pEeGEaLkc3UAsAg" name="AllergyStatusObservationText" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCHrtR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cCQ1oB7pEeGEaLkc3UAsAg" name="AllergyStatusObservationStatusCode" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCQ1oR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cCQ1oh7pEeGEaLkc3UAsAg" name="AllergyStatusObservationValue" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCQ1ox7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '55561003' or value.code = '73425007' or value.code = '90734009' or value.code = '7087005' or value.code = '255227004' or value.code = '415684004' or value.code = '410516002' or value.code = '413322009')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2FbfABSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2FhloBSVEeGGzu7fmW9pXw" name="Comment">
      <ownedComment xmi:id="_2FrWoBSVEeGGzu7fmW9pXw" annotatedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <body>Used to contain comments associated with any of the data within the document.</body>
      </ownedComment>
      <ownedComment xmi:id="_2FrWoRSVEeGGzu7fmW9pXw" annotatedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <body>&lt;p>This entry allows for a comment to be supplied with each entry. For CDA this structure is usually included in the target act using the &amp;lt;entryRelationship> element defined in the CDA Schema, but can also be used in the &amp;lt;component> element when the comment appears within an &amp;lt;organizer>.&lt;/p>&#xD;
&#xD;
&lt;p>Any condition or allergy may be the subject of a comment.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2FhloRSVEeGGzu7fmW9pXw" annotatedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <body>This module contains a comment to be supplied for any other entry Content Modules.</body>
      </ownedComment>
      <ownedRule xmi:id="_2Fo6YRSVEeGGzu7fmW9pXw" name="CommentHasTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Fo6YhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FphcRSVEeGGzu7fmW9pXw" name="CommentEffectiveTimeWhenAuthorPresent">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FphchSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.author->isEmpty() implies not self.effectiveTime.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FqIgBSVEeGGzu7fmW9pXw" name="CommentHasAuthorId">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FqIgRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.author->isEmpty() implies (  self.author.assignedAuthor.id ->size() > 0 and self.author.assignedAuthor.addr ->size() > 0 and self.author.assignedAuthor.telecom ->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FqvkBSVEeGGzu7fmW9pXw" name="CommentHasAuthorOrganization">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FqvkRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.author->isEmpty() implies ( self.author->exists( a : cda::Author | ( (not a.assignedAuthor.assignedPerson.oclIsUndefined()) and not a.assignedAuthor.assignedPerson.name->isEmpty()) or (not a.assignedAuthor.representedOrganization.name->isEmpty())  ) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cCQ1pB7pEeGEaLkc3UAsAg" name="CommentTemplateId" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCQ1pR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.64')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cCamoB7pEeGEaLkc3UAsAg" name="CommentClassCode" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCamoR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cCamoh7pEeGEaLkc3UAsAg" name="CommentMoodCode" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCamox7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cCkXoB7pEeGEaLkc3UAsAg" name="CommentCode" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCkXoR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '48767-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cCkXoh7pEeGEaLkc3UAsAg" name="CommentText" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCkXox7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cCkXpB7pEeGEaLkc3UAsAg" name="CommentStatusCode" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCkXpR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2FrWohSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2GHbgBSVEeGGzu7fmW9pXw" name="MedicationActivity">
      <ownedComment xmi:id="_2H1SwBSVEeGGzu7fmW9pXw" annotatedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <body>&lt;p>A medication activity is used to describe what is administered.&lt;/p>&#xD;
&lt;p>An indication describes the rationale for a medication activity. The indication can be an existing problem or can be a criterion that if met would warrant the activity. Criteria are typically associated with PRN (from the Latin &quot;pro re nata&quot;, meaning &quot;as needed&quot;) medications (e.g. &quot;give Medication X as needed for nausea&quot;).&lt;/p>&#xD;
&lt;p>A reaction represents an adverse event due to an administered substance. Significant reactions are to be listed in the Alerts section. Reactions in the Medications section can be used to track reactions associated with individual substance administrations or to track routine follow up to an administration (e.g. &quot;no adverse reaction 30 minutes post administration&quot;).&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2H1SwRSVEeGGzu7fmW9pXw" annotatedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
This content module describes the general structure for a medication. All medication administration acts will be derived&#xD;
from this content module.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
The &amp;lt;substanceAdministration> element may contain subordinate&#xD;
&amp;lt;substanceAdministration> elements in a related component entry to deal with special cases (see&#xD;
the section below on Special Cases). These cases include split, tapered, or conditional dosing, or&#xD;
combination medications. The use of subordinate &amp;lt;substanceAdministration> elements to deal with these cases is optional. The comment field should always be used in these cases to provide&#xD;
the same information as free text in the top level &amp;lt;substanceAdministration> element.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2HpskRSVEeGGzu7fmW9pXw" name="MedicationActivityMoodCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HqToBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN or self.moodCode=vocab::x_DocumentSubstanceMood::INT </body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HqTohSVEeGGzu7fmW9pXw" name="MedicationActivityHasDoseQuantityOrRateQuantity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HqToxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.doseQuantity.oclIsUndefined() or not self.rateQuantity.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Hq6sBSVEeGGzu7fmW9pXw" name="MedicationActivityHasConsents">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Hq6sRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getClinicalDocument().authorization->size() > 0 and self.getClinicalDocument().authorization.consent->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HrhwBSVEeGGzu7fmW9pXw" name="MedicationActivityInformationSource">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HrhwRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;&#xA;or not self.getSection().informant->isEmpty()&#xD;&#xA;or not self.getClinicalDocument().informant->isEmpty()&#xD;&#xA;or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;&#xA;or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;&#xA;   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;&#xA;   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HsI0BSVEeGGzu7fmW9pXw" name="MedicationActivityHasPreconditionCriterion">
        <ownedComment xmi:id="_2HsI0RSVEeGGzu7fmW9pXw">
          <body>Indicates that the medication is administered only when the associated (coded or free text) criteria are met.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HsI0hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.precondition->exists(precondition : cda::Precondition | not precondition.criterion.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Hsv4BSVEeGGzu7fmW9pXw" name="MedicationActivityHasReason">
        <ownedComment xmi:id="_2Hsv4RSVEeGGzu7fmW9pXw">
          <body>The target of the relationship represents the indication for the activity.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Hsv4hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRel : cda::EntryRelationship | entryRel.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Hsv5BSVEeGGzu7fmW9pXw" name="MedicationActivityHasReasonProblem">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Hsv5RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::RSON, cda::ClinicalStatement)->forAll(target : &#xD;&#xD;&#xA;cda::ClinicalStatement | not target.oclIsUndefined() and &#xD;&#xA;  (target.oclIsKindOf(consol::ProblemConcernAct) or target.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HtW8RSVEeGGzu7fmW9pXw" name="MedicationActivityHasProduct">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HtW8hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.consumable.manufacturedProduct.oclIsKindOf(consol::Product)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ht-ABSVEeGGzu7fmW9pXw" name="MedicationActivityHasDosing">
        <ownedComment xmi:id="_2Ht-ARSVEeGGzu7fmW9pXw">
          <body>There are a variety of special cases for dosing that need to be accounted for. &#xD;
Most of these special cases involve changing the dosage or frequency over time, or based on&#xD;
some measurement. When the dosage changes, then additional entries are required for each differing dosage.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ht-AhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.7.1') xor self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.8') xor self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.9') xor self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.10') xor self.templateId->exists(id : datatypes::II | id.root =  '1.3.6.1.4.1.19376.1.5.3.1.4.11')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ht-AxSVEeGGzu7fmW9pXw" name="MedicationActivityDosingRelationship">
        <ownedComment xmi:id="_2Ht-BBSVEeGGzu7fmW9pXw">
          <body>n the first three cases, the subordinate components shall specify only the changed &amp;lt;frequency>&#xD;
and/or &amp;lt;doseAmount> elements. For conditional dosing, each subordinate component shall have&#xD;
a &amp;lt;precondition> element that specifies the &amp;lt;observation> that must be obtained before&#xD;
administration of the dose. The value of the &amp;lt;sequenceNumber> shall be an ordinal number,&#xD;
starting at 1 for the first component, and increasing by 1 for each subsequent component.&#xD;
Components shall be sent in &amp;lt;sequenceNumber> order.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ht-BRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.8') xor &#xA;self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.9') xor &#xA;self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.10') xor &#xA;self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.11') implies self.entryRelationship->exists(er | er.typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ht-BhSVEeGGzu7fmW9pXw" name="MedicationActivityHasDescriptionNoMedNotKnown">
        <ownedComment xmi:id="_2Ht-BxSVEeGGzu7fmW9pXw">
          <body>&lt;p>&#xD;
182904002 &quot;Drug Treatment Unknown&quot; (To indicate lack of knowledge about drug therapy)&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
182849000 &quot;No Drug Therapy Prescribed&quot; (To indicate the absense of any prescribed medications)&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
408350003 &quot;Patient Not On Self-Medications&quot; (To indicate no treatment)&#xD;
&lt;/p></body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ht-CBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HulERSVEeGGzu7fmW9pXw" name="MedicationActivityReasonClassMood">
        <ownedComment xmi:id="_2HulEhSVEeGGzu7fmW9pXw">
          <body>self.internalReference->exists(ir : consol::InternalReference | ar.classCode &amp;lt;> 'ACT' or ar.moodCode &amp;lt;> 'EVN')</body>
        </ownedComment>
        <ownedComment xmi:id="_2HulExSVEeGGzu7fmW9pXw">
          <body>OCL Issue - What is the internalReference relationship?  unable to get OCL to reference</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HulFBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HvMIBSVEeGGzu7fmW9pXw" name="MedicationActivityHasProductEntry">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HvMIRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.consumable.manufacturedProduct.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.7.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HvzMBSVEeGGzu7fmW9pXw" name="MedicationActivityHasIntructionsInversion">
        <ownedComment xmi:id="_2HvzMRSVEeGGzu7fmW9pXw">
          <body>OCL Issue - What is the patientInstructions relationship?  unable to get OCL to reference</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HvzMhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->forAll( er : cda::EntryRelationship | (not er.act.oclIsKindOf(consol::PatientMedicalInstructions)) or ( er.inversionInd = true and er.act.oclIsKindOf(consol::PatientMedicalInstructions))  )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HwaQBSVEeGGzu7fmW9pXw" name="MedicationActivityProductStrength">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HwaQRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.consumable.manufacturedProduct.manufacturedMaterial.code.oclIsUndefined() implies not self.consumable.manufacturedProduct.manufacturedMaterial.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HwaQxSVEeGGzu7fmW9pXw" name="MedicationActivityProductName">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HwaRBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.consumable.manufacturedProduct.manufacturedMaterial.name.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HxBURSVEeGGzu7fmW9pXw" name="MedicationActivityPreconditionReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HxBUhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.precondition.criterion.text->exists (t | t.reference.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HxoYBSVEeGGzu7fmW9pXw" name="MedicationActivityHasSupplyEntryInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HxoYRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.entryRelationship->exists(er : cda::EntryRelationship | (not er.supply->isEmpty()) and er.inversionInd&lt;>false )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HyPcBSVEeGGzu7fmW9pXw" name="MedicationActivityHasFillNumber">
        <ownedComment xmi:id="_2HyPcRSVEeGGzu7fmW9pXw">
          <body>The prescription activity may have a &amp;lt;sequenceNumber> element to indicate the fill number. A&#xD;
value of 1, 2 or N indicates that it is the first, second, or Nth fill respectively of a specific&#xD;
prescription.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HyPchSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.entryRelationship->exists(er| (not er.supply->isEmpty()) and er.sequenceNumber.value.oclIsUndefined() )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHbhxSVEeGGzu7fmW9pXw" name="MedicationActivityFirstEffectiveTimeDatatype" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbiBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.effectiveTime->exists (ef : datatypes::SXCM_TS | not ef.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHbkRSVEeGGzu7fmW9pXw" name="MedicationActivityDoseUnits">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbkhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.doseQuantity->exists(dq : datatypes::IVL_PQ | dq.unit='2.16.840.1.113883.3.88.12.80.29')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHblRSVEeGGzu7fmW9pXw" name="MedicationActivityDeliveryMethodDescription">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHblhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHblxSVEeGGzu7fmW9pXw" name="MedicationActivityHasMedicationInformation" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbmBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.consumable.manufacturedProduct->exists(mp : cda::ManufacturedProduct | mp.oclIsKindOf(consol::MedicationInformation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHbmRSVEeGGzu7fmW9pXw" name="MedicationActivityHasStatusOfMedication" constrainedElement="_2GHblxSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2GHbmhSVEeGGzu7fmW9pXw">
          <body>If the medication is Active, Discharged, Chronic,&#xD;
Acute, etc</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbmxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(po : cda::Observation |  po.oclIsKindOf(consol::MedicationStatusObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHbnBSVEeGGzu7fmW9pXw" name="MedicationActivityHasIndication" constrainedElement="_2GHbmRSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2GHbnRSVEeGGzu7fmW9pXw">
          <body>The medical condition or problem&#xD;
intended to be addressed by the ordered product. For&#xD;
example: for chest pain, for pain, for high blood&#xD;
pressure</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbnhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(po : cda::Observation | po.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHbnxSVEeGGzu7fmW9pXw" name="MedicationActivityHasIndicationNarrativeText" constrainedElement="_2GHbnBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHboBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(po : cda::Observation | po.oclIsKindOf(consol::ProblemObservation) and not po.text.reference.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHboRSVEeGGzu7fmW9pXw" name="MedicationActivityHasIndicationVocab" constrainedElement="_2GHbnBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbohSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(po : cda::Observation | po.oclIsKindOf(consol::ProblemObservation) and po.code.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHboxSVEeGGzu7fmW9pXw" name="MedicationActivityHasPatientInstructions" constrainedElement="_2GHboRSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2GHbpBSVEeGGzu7fmW9pXw">
          <body>&lt;p>&#xD;
Instructions to the patient that are not traditionally part&#xD;
of the Sig. For example, &quot;keep in the refrigerator.&quot;&#xD;
More extensive patient education materials can also&#xD;
be included&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
External patient educational materials can be referenced with an appropriate URL entry in the text/ reference/value.&#xD;
&lt;/p></body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbpRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->exists(po : cda::Act | po.oclIsKindOf(consol::PatientMedicalInstructions))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHbphSVEeGGzu7fmW9pXw" name="MedicationActivityHasMedicationVehicle" constrainedElement="_2GHboxSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2GHbpxSVEeGGzu7fmW9pXw">
          <body>Non-active ingredient(s), or&#xD;
substances not of therapeutic interest, in which the&#xD;
active ingredients are dispersed. Most often applied to&#xD;
liquid products where the major fluid component is&#xD;
considered the vehicle. For example: Normal Saline is&#xD;
the vehicle in &quot;Ampicillin 150mg in 50ml NS&quot;;&#xD;
Aquaphor is the vehicle in &quot;10% LCD in Aquaphor&quot;</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbqBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.participant.participantRole->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHbqRSVEeGGzu7fmW9pXw" name="MedicationActivityMedicationVehicleType" constrainedElement="_2GHbphSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbqhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.participant->size() > 0) implies self.getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.participant->exists(par : cda::Participant2 | par.typeCode = vocab::ParticipationType::CSM))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHbqxSVEeGGzu7fmW9pXw" name="MedicationActivityMedicationVehicleClass" constrainedElement="_2GHbqRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbrBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.participant.participantRole->size() > 0) implies self.getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.participant->exists(par : cda::Participant2 | par.typeCode = vocab::ParticipationType::CSM and par.participantRole->exists(pr : cda::ParticipantRole | pr.classCode = vocab::RoleClassRoot::MANU)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHbrRSVEeGGzu7fmW9pXw" name="MedicationActivityMedicationVehicleCode" constrainedElement="_2GHbqxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbrhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.participant.participantRole->size() > 0) implies self.getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.participant->exists(par : cda::Participant2 | par.typeCode = vocab::ParticipationType::CSM and par.participantRole->exists(pr : cda::ParticipantRole | pr.classCode = vocab::RoleClassRoot::MANU and pr.code.code = '412307009' and pr.code.codeSystem = '2.16.840.1.113883.6.96')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHbrxSVEeGGzu7fmW9pXw" name="MedicationActivityMedicationVehicleName" constrainedElement="_2GHbrRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbsBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.participant.participantRole->size() > 0) implies self.getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.participant->exists(par : cda::Participant2 | par.typeCode = vocab::ParticipationType::CSM and par.participantRole->exists(pr : cda::ParticipantRole | pr.classCode = vocab::RoleClassRoot::MANU and pr.code.code = '412307009' and pr.code.codeSystem = '2.16.840.1.113883.6.96' and pr.playingEntity.name->size() > 0)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHbsRSVEeGGzu7fmW9pXw" name="MedicationActivityMedicationVehicleCodedName" constrainedElement="_2GHbrxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbshSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.participant.participantRole->size() > 0) implies self.getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.participant->exists(par : cda::Participant2 | par.typeCode =vocab::ParticipationType::CSM and par.participantRole->exists(pr : cda::ParticipantRole | pr.classCode = vocab::RoleClassRoot::MANU and pr.code.code = '412307009' and pr.code.codeSystem = '2.16.840.1.113883.6.96' and pr.playingEntity.code->size() > 0)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GHbsxSVEeGGzu7fmW9pXw" name="MedicationActivityMedicationVehicleCodedNameVocab" constrainedElement="_2GHbsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GHbtBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.participant.participantRole->size() > 0) implies self.getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.participant->exists(par : cda::Participant2 | par.typeCode = vocab::ParticipationType::CSM and par.participantRole->exists(pr : cda::ParticipantRole | pr.classCode = vocab::RoleClassRoot::MANU and pr.code.code = '412307009' and pr.code.codeSystem = '2.16.840.1.113883.6.96' and pr.playingEntity.code->size() > 0 and pr.playingEntity.code.codeSystem = '2.16.840.1.113883.6.96')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cCthlx7pEeGEaLkc3UAsAg" name="MedicationActivityTemplateId" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cCthmB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.16')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cDdIcB7pEeGEaLkc3UAsAg" name="MedicationActivityId" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cDdIcR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cDdIch7pEeGEaLkc3UAsAg" name="MedicationActivityCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cDdIcx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cDdIdB7pEeGEaLkc3UAsAg" name="MedicationActivityStatusCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cDdIdR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cDm5cB7pEeGEaLkc3UAsAg" name="MedicationActivityEffectiveTime" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cDm5cR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty() and self.effectiveTime->forAll(element | element.oclIsTypeOf(datatypes::IVL_TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cDm5ch7pEeGEaLkc3UAsAg" name="MedicationActivityRouteCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cDm5cx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in (&#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cDm5dB7pEeGEaLkc3UAsAg" name="MedicationActivityApproachSiteCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cDm5dR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cDwqcB7pEeGEaLkc3UAsAg" name="MedicationActivityDoseQuantity" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cDwqcR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cDwqch7pEeGEaLkc3UAsAg" name="MedicationActivityRateQuantity" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cDwqcx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.rateQuantity.oclIsUndefined() or self.rateQuantity.isNullFlavorUndefined()) implies (not self.rateQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cDwqdB7pEeGEaLkc3UAsAg" name="MedicationActivityMaxDoseQuantity" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cDwqdR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.maxDoseQuantity.oclIsUndefined() or self.maxDoseQuantity.isNullFlavorUndefined()) implies (not self.maxDoseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cD50YB7pEeGEaLkc3UAsAg" name="MedicationActivityAdministrationUnitCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cD50YR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.administrationUnitCode.oclIsUndefined() or self.administrationUnitCode.isNullFlavorUndefined()) implies (not self.administrationUnitCode.oclIsUndefined() and self.administrationUnitCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.administrationUnitCode.oclAsType(datatypes::CE) in (&#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cD50Yh7pEeGEaLkc3UAsAg" name="MedicationActivityMedicationSupplyOrder" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cD50Yx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cE89QB7pEeGEaLkc3UAsAg" name="MedicationActivityInstructions" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cE89QR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cf7CAh7pEeGEaLkc3UAsAg" name="MedicationActivityIndication" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cf7CAx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cgXt9B7pEeGEaLkc3UAsAg" name="MedicationActivityMedicationDispense" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgXt9R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationDispense) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cgg34R7pEeGEaLkc3UAsAg" name="MedicationActivityDrugVehicle" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgg34h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::DrugVehicle))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2H1SwhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_cD50ZB7pEeGEaLkc3UAsAg" name="getMedicationSupplyOrders" isQuery="true" bodyCondition="_cD50Zx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cD50Zx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cD50ZB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cD50aB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity)).oclAsType(consol::NonMedicinalSupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cD50ZR7pEeGEaLkc3UAsAg" type="_2HIvMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cD50Zh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cD50aR7pEeGEaLkc3UAsAg" name="getReactionObservation" isQuery="true" bodyCondition="_cD50bB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cD50bB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cD50aR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cD50bR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation))->asSequence()->first().oclAsType(consol::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cD50ah7pEeGEaLkc3UAsAg" type="_2E_aIRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cD50ax7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cE89Qh7pEeGEaLkc3UAsAg" name="getInstructionss" isQuery="true" bodyCondition="_cE89RR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cE89RR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cE89Qh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cE89Rh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions)).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cE89Qx7pEeGEaLkc3UAsAg" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cE89RB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cf7CBB7pEeGEaLkc3UAsAg" name="getIndication" isQuery="true" bodyCondition="_cf7CBx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cf7CBx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cf7CBB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cf7CCB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication))->asSequence()->first().oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cf7CBR7pEeGEaLkc3UAsAg" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cf7CBh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cgXt9h7pEeGEaLkc3UAsAg" name="getMedicationDispense" isQuery="true" bodyCondition="_cgXt-R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cgXt-R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cgXt9h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgXt-h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationDispense))->asSequence()->first().oclAsType(consol::MedicationDispense)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cgXt9x7pEeGEaLkc3UAsAg" type="_DpoGkBUUEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cgXt-B7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cgg34x7pEeGEaLkc3UAsAg" name="getDrugVehicle" isQuery="true" bodyCondition="_cgg35h7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cgg35h7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cgg34x7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgg35x7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::DrugVehicle))->asSequence()->first().oclAsType(consol::DrugVehicle)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cgg35B7pEeGEaLkc3UAsAg" type="_VBXq8BUTEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cgg35R7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Gnx1RSVEeGGzu7fmW9pXw" name="MedicationSeriesNumberObservation">
      <ownedComment xmi:id="_2Gnx1hSVEeGGzu7fmW9pXw" annotatedElement="_2Gnx1RSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The medication series number observation can be used to indicate which in a series of administrations a&#xD;
    particular administration represents (e.g. &quot;hepatitis B vaccine number 2 was administered on Feb 07, 2004).&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cD50bh7pEeGEaLkc3UAsAg" name="MedicationSeriesNumberObservationTemplateId" constrainedElement="_2Gnx1RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cD50bx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.46')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEDlYB7pEeGEaLkc3UAsAg" name="MedicationSeriesNumberObservationClassCode" constrainedElement="_2Gnx1RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEDlYR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEDlYh7pEeGEaLkc3UAsAg" name="MedicationSeriesNumberObservationMoodCode" constrainedElement="_2Gnx1RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEDlYx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEDlZB7pEeGEaLkc3UAsAg" name="MedicationSeriesNumberObservationCode" constrainedElement="_2Gnx1RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEDlZR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '30973-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEDlZh7pEeGEaLkc3UAsAg" name="MedicationSeriesNumberObservationStatusCode" constrainedElement="_2Gnx1RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEDlZx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cENWYB7pEeGEaLkc3UAsAg" name="MedicationSeriesNumberObservationValue" constrainedElement="_2Gnx1RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cENWYR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2GsDQBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2GtRYxSVEeGGzu7fmW9pXw" name="MedicationStatusObservation">
      <ownedRule xmi:id="_2Gyw8BSVEeGGzu7fmW9pXw" name="MedicationStatusObservationTargetOfEntryRelationship">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Gyw8RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsKindOf(consol::StatusObservation))->exists(er1 : cda::EntryRelationship | er1.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GzYARSVEeGGzu7fmW9pXw" name="MedicationStatusObservationNoAdditionalParticipants">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GzYAhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Gz_EBSVEeGGzu7fmW9pXw" name="MedicationStatusObservationNoAdditionalRelationships">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Gz_ERSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er|not er.observation.oclIsUndefined())->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cENWYh7pEeGEaLkc3UAsAg" name="MedicationStatusObservationTemplateId" constrainedElement="_2GtRYxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cENWYx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.47')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEWgUB7pEeGEaLkc3UAsAg" name="MedicationStatusObservationClassCode" constrainedElement="_2GtRYxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEWgUR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEWgUh7pEeGEaLkc3UAsAg" name="MedicationStatusObservationMoodCode" constrainedElement="_2GtRYxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEWgUx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEWgVB7pEeGEaLkc3UAsAg" name="MedicationStatusObservationCode" constrainedElement="_2GtRYxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEWgVR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '33999-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEgRUB7pEeGEaLkc3UAsAg" name="MedicationStatusObservationStatusCode" constrainedElement="_2GtRYxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEgRUR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2G0mIBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2G2bUxSVEeGGzu7fmW9pXw" name="ProductInstance">
      <ownedComment xmi:id="_2G2bVBSVEeGGzu7fmW9pXw" annotatedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <body>identifes a particular product instance</body>
      </ownedComment>
      <ownedRule xmi:id="_2G2bVRSVEeGGzu7fmW9pXw" name="ProductInstanceHasScopingEntity" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2G2bVhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.id->size() > 0 implies self.scopingEntity->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEgRUh7pEeGEaLkc3UAsAg" name="ProductInstanceTemplateId" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEgRUx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.52')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEgRVR7pEeGEaLkc3UAsAg" name="ProductInstanceClassCode" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEgRVh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::RoleClassRoot::MANU</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2G43kBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2G5eoxSVEeGGzu7fmW9pXw" name="InternalReference">
      <ownedComment xmi:id="_2G5epBSVEeGGzu7fmW9pXw" annotatedElement="_2G5eoxSVEeGGzu7fmW9pXw">
        <body>&lt;p>CDA and HL7 Version 3 Entries may reference (point to) information contained in other entries&#xD;
within the same document or message&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
The act being referred to can be any CDA Clinical Statement element type (act, procedure,&#xD;
observation, substanceAdministration, supply, et cetera). For compatibility with the Clinical&#xD;
Statement model the internal reference shall always use the &amp;lt;act> class, regardless of the XML&#xD;
element type of the act it refers to.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cEpbQB7pEeGEaLkc3UAsAg" name="InternalReferenceId" constrainedElement="_2G5eoxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEpbQR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEpbQx7pEeGEaLkc3UAsAg" name="InternalReferenceCode" constrainedElement="_2G5eoxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEpbRB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2G764BSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2G8h9RSVEeGGzu7fmW9pXw" name="Instructions">
      <ownedComment xmi:id="_-HE7oB7lEeGEaLkc3UAsAg">
        <body>The Instructions template can be used in several ways, such as to record patient instructions within a Medication Activity or to record fill instructions within a supply order. The act/code defines the type of instruction.Though not defined in this template, a Vaccine Information Statement (VIS) document could be referenced through act/reference/externalDocument, and patient awareness of the instructions can be represented with the generic participant and the participant/awarenessCode.</body>
      </ownedComment>
      <ownedRule xmi:id="_cEpbRR7pEeGEaLkc3UAsAg" name="InstructionsTemplateId" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEpbRh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.20')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEpbSB7pEeGEaLkc3UAsAg" name="InstructionsClassCode" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEpbSR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEzMQB7pEeGEaLkc3UAsAg" name="InstructionsMoodCode" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEzMQR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEzMQh7pEeGEaLkc3UAsAg" name="InstructionsText" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEzMQx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cEzMRB7pEeGEaLkc3UAsAg" name="InstructionsStatusCode" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEzMRR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2HCBgRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2HCokhSVEeGGzu7fmW9pXw" name="MedicationType">
      <ownedComment xmi:id="_2HCokxSVEeGGzu7fmW9pXw" annotatedElement="_2HCokhSVEeGGzu7fmW9pXw">
        <body>A classification based on how the medication is&#xD;
marketed (e.g., prescription, over the counter drug)</body>
      </ownedComment>
      <ownedRule xmi:id="_cE89SB7pEeGEaLkc3UAsAg" name="MedicationTypeCode" constrainedElement="_2HCokhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cE89SR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '329505003' or value.code = '73639000')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2HFr4BSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2HIvMBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivity">
      <ownedComment xmi:id="_2HnQUBSVEeGGzu7fmW9pXw" annotatedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <body>a supply activity is used to describe what has been dispensed.</body>
      </ownedComment>
      <ownedComment xmi:id="_2HnQURSVEeGGzu7fmW9pXw" annotatedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <body>The supply entry describes a prescription activity. The moodCode attribute shall be INT to reflect that a&#xD;
medication has been prescribed, or EVN to indicate that the prescription has been filled.</body>
      </ownedComment>
      <ownedComment xmi:id="_2HIvMRSVEeGGzu7fmW9pXw" annotatedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <body>Order information may be recorded as part of the fulfillment history (moodcode = EVN) or as part of the administration information (moodcode = INT)</body>
      </ownedComment>
      <ownedRule xmi:id="_2HcRMBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityMoodCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HcRMRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN or self.moodCode=vocab::x_DocumentSubstanceMood::INT </body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Hc4QBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasAuthor">
        <ownedComment xmi:id="_2Hc4QRSVEeGGzu7fmW9pXw">
          <body>Indicates the prescriber.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Hc4QhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.author->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HdfUBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasPerformer">
        <ownedComment xmi:id="_2HdfURSVEeGGzu7fmW9pXw">
          <body>Indicates the person dispensing the product.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HdfUhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.performer->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HdfVBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasParticipantLocation">
        <ownedComment xmi:id="_2HdfVRSVEeGGzu7fmW9pXw">
          <body>Iindicates the supply location.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HdfVhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->one(part : cda::Participant2 | part.typeCode = vocab::ParticipationType::LOC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HeGYRSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityInformationSource">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HeGYhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;&#xA;or not self.getSection().informant->isEmpty()&#xD;&#xA;or not self.getClinicalDocument().informant->isEmpty()&#xD;&#xA;or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;&#xA;or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;&#xA;   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;&#xA;   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HetcBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasProduct">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HetcRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.product.oclIsUndefined() and self.product.oclIsKindOf(cda::Product)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Hf7kBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasIntentAuthor">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Hf7kRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>(self.classCode=vocab::ActClassSupply::SPLY and self.moodCode=vocab::x_DocumentSubstanceMood::INT) implies self.author->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HgioBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasAuthorTime">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HgioRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.author->isEmpty() implies self.author->forAll(author| author.time->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HgioxSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasAssignedAuthor">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HgipBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.author->isEmpty() implies  self.author->forAll(author| author.assignedAuthor->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HhJsRSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasAssignedAuthorID">
        <ownedComment xmi:id="_2HhJshSVEeGGzu7fmW9pXw">
          <body>These identifiers identify the author of the act.&#xD;
When the author is the prescribing physician they may include local identifiers or regional&#xD;
identifiers necessary for prescribing.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HhJsxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.author.assignedAuthor->isEmpty() implies self.author.assignedAuthor->forAll ( assignedAuthor | assignedAuthor.id->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HhwwBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasAssignedAuthorPersonOrOrg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HhwwRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.author.assignedAuthor->isEmpty() implies    (self.author.assignedAuthor.assignedPerson->size() > 0 and self.author.assignedAuthor.assignedPerson.name->size() > 0) or (self.author.assignedAuthor.representedOrganization->size() > 0 and self.author.assignedAuthor.representedOrganization.name->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HiX0BSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasPerformerTimeEvent">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HiX0RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>(not self.performer->isEmpty()) and self.moodCode = vocab::x_DocumentSubstanceMood::EVN implies self.performer->forAll(time->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Hi-4BSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasPerformerTimeIntent">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Hi-4RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>(not self.performer->isEmpty()) and self.moodCode = vocab::x_DocumentSubstanceMood::INT implies self.performer->forAll(time->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Hi-4xSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasPerformerAssignedEntity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Hi-5BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>(not self.performer->isEmpty()) implies self.performer->forAll(performer| not performer.assignedEntity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Hjl8RSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasPerformerAssignedEntityID">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Hjl8hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>(not self.performer.assignedEntity->isEmpty())  implies self.performer.assignedEntity->forAll(id->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HkNABSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasPerformerEntityPersonOrOrg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HkNARSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>(not self.performer.assignedEntity->isEmpty()) implies self.performer.assignedEntity->forAll(assignedEntity | (not assignedEntity.assignedPerson->isEmpty() and assignedEntity.assignedPerson->forAll( assignedPerson | not assignedPerson.name->isEmpty() ) ) or (not assignedEntity.representedOrganization->isEmpty() and  assignedEntity.representedOrganization->forAll(representedOrganization | not representedOrganization.name->isEmpty() ) )  )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Hk0EBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityQuantityHasValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Hk0ERSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.quantity->isEmpty() implies self.quantity.isDefined('value')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HIvMhSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityOrderNumber" constrainedElement="_2HIvOxSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2HIvMxSVEeGGzu7fmW9pXw">
          <body>The order identifier from the perspective of the&#xD;
ordering clinician. Also known as the 'placer number'&#xD;
versus the pharmacies prescription number (or 'filler&#xD;
number')</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HIvNBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentSubstanceMood::INT implies self.id->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HIvNRSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityOrderExpiration" constrainedElement="_2HIvMhSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2HIvNhSVEeGGzu7fmW9pXw">
          <body>The date, including time if applicable, when the order&#xD;
is no longer valid. Dispenses and administrations are&#xD;
not continued past this date for an order instance</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HIvNxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode =  vocab::x_DocumentSubstanceMood::INT implies not self.effectiveTime->select(et | et.value.oclIsUndefined())->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HIvOBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityQuantityOrdered" constrainedElement="_2HIvOxSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2HIvORSVEeGGzu7fmW9pXw">
          <body>The amount of product indicated by the ordering&#xD;
provider to be dispensed. For example, number of&#xD;
dosage units or volume of a liquid substance. Note:&#xD;
this is comprised of both a numeric value and a unit of&#xD;
measure</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HIvOhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.quantity.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HIvOxSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityQuantityUnit">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HIvPBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.quantity.unit.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HIvQRSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityPrescriptionNumber">
        <ownedComment xmi:id="_2HIvQhSVEeGGzu7fmW9pXw">
          <body>The prescription&#xD;
identifier assigned by the pharmacy</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HIvQxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentSubstanceMood::EVN implies not self.id->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HIvRBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityAssigningAuthority" constrainedElement="_2HIvQRSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2HIvRRSVEeGGzu7fmW9pXw">
          <body>determining the assigning authority is not feasible in all settings.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HIvRhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.id.root->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HIvSRSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityDispenseDate" constrainedElement="_2HIvVBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2HIvShSVEeGGzu7fmW9pXw">
          <body>The date of this&#xD;
dispense</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HIvSxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentSubstanceMood::EVN implies self.effectiveTime->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HIvTBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityDispensingPharmacyLocation">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HIvTRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode =  vocab::x_DocumentSubstanceMood::EVN  implies self.performer->select(p | p.assignedEntity.addr->isEmpty())->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HIvVBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityQuantityDispensed">
        <ownedComment xmi:id="_2HIvVRSVEeGGzu7fmW9pXw">
          <body>The actual quantity of&#xD;
product supplied in this dispense. Note: This is&#xD;
comprised of both a numeric value and a unit of&#xD;
measure</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HIvVhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentSubstanceMood::EVN implies not self.quantity.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HIvVxSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivityHasFillNumber" constrainedElement="_2HIvVBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2HIvWBSVEeGGzu7fmW9pXw">
          <body>The fill number for the&#xD;
history entry. The fill number identifies the supply (dispense) event as a distinct activities against the prescription.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HIvWRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er | er.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP and er.sequenceNumber.oclIsUndefined())->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cE89Sh7pEeGEaLkc3UAsAg" name="NonMedicinalSupplyActivityTemplateId" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cE89Sx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.8.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cFizIB7pEeGEaLkc3UAsAg" name="NonMedicinalSupplyActivityId" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cFizIR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cFskIB7pEeGEaLkc3UAsAg" name="NonMedicinalSupplyActivityStatusCode" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cFskIR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cFskIh7pEeGEaLkc3UAsAg" name="NonMedicinalSupplyActivityEffectiveTime" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cFskIx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (self.effectiveTime->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cFskJB7pEeGEaLkc3UAsAg" name="NonMedicinalSupplyActivityRepeatNumber" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cFskJR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cF1uEB7pEeGEaLkc3UAsAg" name="NonMedicinalSupplyActivityQuantity" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cF1uER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.quantity.oclIsUndefined() or self.quantity.isNullFlavorUndefined()) implies (not self.quantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cF1uEh7pEeGEaLkc3UAsAg" name="NonMedicinalSupplyActivityProductInstance" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cF1uEx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ProductInstance))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2HnQUhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_cF1uFB7pEeGEaLkc3UAsAg" name="getProductInstances" isQuery="true" bodyCondition="_cF1uFx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cF1uFx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cF1uFB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cF1uGB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ProductInstance)).oclAsType(consol::ProductInstance)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cF1uFR7pEeGEaLkc3UAsAg" type="_2G2bUxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cF1uFh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2HWKkBSVEeGGzu7fmW9pXw" name="MedicationFullfillmentInstructions">
      <ownedComment xmi:id="_2HbDEBSVEeGGzu7fmW9pXw" annotatedElement="_2HWKkBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    Fulfillment instructions are additional information provided to the dispensing party (e.g. &quot;label in&#xD;
    spanish&quot;).&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cF1uGh7pEeGEaLkc3UAsAg" name="MedicationFullfillmentInstructionsMoodCode" constrainedElement="_2HWKkBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cF1uGx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cF1uHB7pEeGEaLkc3UAsAg" name="MedicationFullfillmentInstructionsCode" constrainedElement="_2HWKkBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cF1uHR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'FINSTRUCT' and value.codeSystem = '1.3.6.1.4.1.19376.1.5.3.2'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cF_fEB7pEeGEaLkc3UAsAg" name="MedicationFullfillmentInstructionsText" constrainedElement="_2HWKkBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cF_fER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cF_fEh7pEeGEaLkc3UAsAg" name="MedicationFullfillmentInstructionsStatusCode" constrainedElement="_2HWKkBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cF_fEx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2HbDERSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2H6yUBSVEeGGzu7fmW9pXw" name="ProblemConcernAct">
      <ownedComment xmi:id="_2IINsBSVEeGGzu7fmW9pXw" annotatedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <body>A problem is a clinical statement that a clinician is particularly concerned about and wants to track. It has important patient management use cases (e.g. health records often present the problem list as a way of summarizing a patient's medical history).</body>
      </ownedComment>
      <ownedComment xmi:id="_2IINsRSVEeGGzu7fmW9pXw" annotatedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
This event (moodCode='EVN') represents an act (act classCode='ACT') of being concerned&#xD;
about a problem, allergy or other issue. The &amp;lt;effectiveTime> element describes the period of&#xD;
concern. The subject of concern is one or more observations about related problems (see&#xD;
1.3.6.1.4.1.19376.1.5.3.1.4.5.2) or allergies and intolerances (see&#xD;
1.3.6.1.4.1.19376.1.5.3.1.4.5.3). Additional references can be provided having additional information related to the concern. The concern entry allows related acts to be grouped. This&#xD;
allows representing the history of a problem as a series of observation over time, for example.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
All concerns reflect the act of recording (&amp;lt;act classCode='ACT'>) the event (moodCode='EVN')&#xD;
of being concerned about a problem, allergy or other issue about the patient condition.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2IINshSVEeGGzu7fmW9pXw" annotatedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <body>This entry is a specialization of the Concern Entry, wherein the subject of the concern is focused on a problem.</body>
      </ownedComment>
      <ownedComment xmi:id="_2H6yURSVEeGGzu7fmW9pXw" annotatedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <body>A condition is a clinical statement that a clinician is wants to track. It has important patient management use cases (e.g., health records often present the problem list as a way of summarizing a patient's medical history).</body>
      </ownedComment>
      <ownedRule xmi:id="_2ICHExSVEeGGzu7fmW9pXw" name="ProblemConcernActEntryRelationshipRequired">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2ICHFBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.entryRelationship->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IDVMBSVEeGGzu7fmW9pXw" name="ProblemConcernActSubjectOfTarget">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IDVMRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SUBJ, cda::ClinicalStatement)->forAll(target : cda::ClinicalStatement | not target.oclIsUndefined() and &#xD;&#xA;  (target.oclIsKindOf(consol::ProblemObservation) or target.oclIsKindOf(consol::AlertObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2ID8QBSVEeGGzu7fmW9pXw" name="ProblemConcernActContainsProblemObservation">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2ID8QRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSection().oclIsKindOf(consol::ProblemSection) implies self.getObservations()&#xD;&#xA;   ->exists(obs : cda::Observation | obs.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IEjUBSVEeGGzu7fmW9pXw" name="ProblemConcernActContainsAlertObservation">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IEjURSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSection().oclIsKindOf(consol::AlertsSection) implies self.getObservations()&#xD;&#xA;   ->exists(obs : cda::Observation | obs.oclIsKindOf(consol::AlertObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IFKYBSVEeGGzu7fmW9pXw" name="ProblemConcernActContainsPatientAwareness">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IFKYRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->one(partic : cda::Participant2 | partic.oclIsKindOf(consol::PatientAwareness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IFKYxSVEeGGzu7fmW9pXw" name="ProblemConcernActEffectiveTimeLowHigh">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IFKZBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.effectiveTime.low.oclIsUndefined()&#xD;&#xA;   and ((self.statusCode.code = 'completed' or self.statusCode.code = 'aborted') implies not self.effectiveTime.high.oclIsUndefined())&#xD;&#xA;   and ((self.statusCode.code &lt;> 'completed' and self.statusCode.code &lt;> 'aborted') implies self.effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IFxcRSVEeGGzu7fmW9pXw" name="ProblemConcernActHasRelatedObservations">
        <ownedComment xmi:id="_2IFxchSVEeGGzu7fmW9pXw">
          <body>Each concern is about one or more related problems or allergies. This is how a series of related observations can be grouped as a single concern.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IFxcxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship.observation.templateId->exists(id : datatypes::II | id.root =  '1.3.6.1.4.1.19376.1.5.3.1.4.5') or self.entryRelationship.observation.templateId->exists(id : datatypes::II | id.root =  '1.3.6.1.4.1.19376.1.5.3.1.4.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IGYgBSVEeGGzu7fmW9pXw" name="ProblemConcernActRelatedObservationsTypeCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IGYgRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er|er.typeCode &lt;> vocab::x_ActRelationshipEntryRelationship::SUBJ)->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IHmoBSVEeGGzu7fmW9pXw" name="ProblemConcernActHasRelatedReferencesTypeCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IHmoRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.reference->forAll(r | r.typeCode = vocab::x_ActRelationshipExternalReference)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2H6yUhSVEeGGzu7fmW9pXw" name="ProblemConcernActHasTreatingProvider" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2H6yUxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.performer->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2H6yVBSVEeGGzu7fmW9pXw" name="ProblemConcernActHasProviderId" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2H6yVRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.performer->exists(p : cda::Performer2 | p.assignedEntity.id->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2H6yVhSVEeGGzu7fmW9pXw" name="ProblemConcernActHasProviderTreatmentTime" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2H6yVxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.performer->exists(p : cda::Performer2 | p.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cF_fFB7pEeGEaLkc3UAsAg" name="ProblemConcernActTemplateId" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cF_fFR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cGSaAB7pEeGEaLkc3UAsAg" name="ProblemConcernActClassCode" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cGSaAR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cGSaAh7pEeGEaLkc3UAsAg" name="ProblemConcernActMoodCode" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cGSaAx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cGSaBB7pEeGEaLkc3UAsAg" name="ProblemConcernActId" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cGSaBR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cGSaBh7pEeGEaLkc3UAsAg" name="ProblemConcernActCodeNullFlavor" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cGSaBx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.nullFlavor = vocab::NullFlavor::NA)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cGcLAB7pEeGEaLkc3UAsAg" name="ProblemConcernActEffectiveTime" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cGcLAR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cg9j1x7pEeGEaLkc3UAsAg" name="ProblemConcernActProblemObservation" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg9j2B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2IINsxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cg9j2R7pEeGEaLkc3UAsAg" name="getProblemObservation" isQuery="true" bodyCondition="_cg9j3B7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cg9j3B7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cg9j2R7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg9j3R7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->first().oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cg9j2h7pEeGEaLkc3UAsAg" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cg9j2x7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2IJb0BSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocument">
      <ownedComment xmi:id="_2IJb0RSVEeGGzu7fmW9pXw" annotatedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <body>This Component describes the document content that summarizes a consumer's medical status for the purpose of health information exchange. While an EHR or PHR system can contain much more information, this Component only deals with the summary information to be exchanged between such systems as established as requirements described in AHIC Use Cases.</body>
      </ownedComment>
      <ownedRule xmi:id="_2PKCyBSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocumentServiceEventRequired">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2PKCyRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.documentationOf->one(doc : cda::DocumentationOf | not doc.serviceEvent.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2PKCyxSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocumentServiceEventClassCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2PKCzBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.documentationOf->one(doc : cda::DocumentationOf | doc.serviceEvent.classCode = vocab::ActClassRoot::PCPR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2PKCzhSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocumentServiceEventEffectiveTime">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2PKCzxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.documentationOf->one(doc : cda::DocumentationOf | &#xD;&#xA;   not doc.serviceEvent.effectiveTime.low.oclIsUndefined() and not doc.serviceEvent.effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2PKC0RSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocumentLanguageCodeFormat">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2PKC0hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.languageCode.matches('code','(([a-z]{2})(\\\\-[A-Z]{2})?)')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2PKC1BSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocumentNoTemplateIdExtension">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2PKC1RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.templateId->forAll(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1' implies id.extension.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2PKC1xSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocumentHasEffectiveTimeSeconds">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2PKC2BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.effectiveTime.value.size() >= 4</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2PKC2hSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocumentHasEffectiveTimeZone">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2PKC2xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.effectiveTime.value.size() >= 19</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2PKC3RSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocumentOneOrTwoRecordTarget">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2PKC3hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->size() = 1 or self.recordTarget->size() =2</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2PKC4BSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocumentHasAssignedAuthor">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2PKC4RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.assignedAuthor.assignedPerson.oclIsUndefined() &#xD;&#xA;   or not author.assignedAuthor.representedOrganization.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2PQJYBSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocumentHasAssignedAuthorNullFlavor">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2PQJYRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | (not author.assignedAuthor.representedOrganization.oclIsUndefined()&#xD;&#xA;      and author.assignedAuthor.assignedPerson.oclIsUndefined() and author.assignedAuthor.assignedAuthoringDevice.oclIsUndefined())&#xD;&#xA;   implies author.assignedAuthor.id->one(id : datatypes::II | id.nullFlavor = vocab::NullFlavor::NA))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2PQJYxSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocumentHasInformationRecipient">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2PQJZBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.informationRecipient->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IJb0hSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocumentHealthcareProvider" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IJb0xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.documentationOf.serviceEvent.performer->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cGcLAx7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cGcLBB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cGvF8B7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsCode" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cGvF8R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '34133-9' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cGvF8h7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentLanguageCode" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cGvF8x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.languageCode.oclIsUndefined() or self.languageCode.isNullFlavorUndefined()) implies (not self.languageCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cG428B7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentAdvanceDirectivesSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cG428R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cG429x7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentAllergiesSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cG42-B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cG42_h7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentEncountersSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cG42_x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cHCA4x7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentImmunizationsSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHCA5B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cHCA6h7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentPayersSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHCA6x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cHCA8R7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentMedicationsSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHCA8h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cHCA-B7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentPlanOfCareSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHCA-R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cHLx5R7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentProceduresSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHLx5h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cHLx7B7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentVitalSignsSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHLx7R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cIq_sB7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentFamilyHistorySection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cIq_sR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cJkXhB7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentSocialHistorySection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cJkXhR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKwqVB7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentResultsSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKwqVR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLDlRR7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentMedicalEquipmentSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLDlRh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLXHQh7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentFunctionalStatusSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLXHQx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chtKuR7pEeGEaLkc3UAsAg" name="ContinuityOfCareDocumentProblemSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chtKuh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PQJchSVEeGGzu7fmW9pXw" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_cG428h7pEeGEaLkc3UAsAg" name="getAdvanceDirectivesSection" isQuery="true" bodyCondition="_cG429R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cG429R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cG428h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cG429h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AdvanceDirectivesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cG428x7pEeGEaLkc3UAsAg" type="_1RZdIBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cG429B7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cG42-R7pEeGEaLkc3UAsAg" name="getAllergiesSection" isQuery="true" bodyCondition="_cG42_B7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cG42_B7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cG42-R7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cG42_R7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->first().oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cG42-h7pEeGEaLkc3UAsAg" type="_2LMIwBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cG42-x7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cG43AB7pEeGEaLkc3UAsAg" name="getEncountersSection" isQuery="true" bodyCondition="_cHCA4R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cHCA4R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cG43AB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHCA4h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSectionEntriesOptional))->asSequence()->first().oclAsType(consol::EncountersSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cG43AR7pEeGEaLkc3UAsAg" type="_4yj2wBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cHCA4B7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cHCA5R7pEeGEaLkc3UAsAg" name="getImmunizationsSection" isQuery="true" bodyCondition="_cHCA6B7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cHCA6B7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cHCA5R7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHCA6R7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cHCA5h7pEeGEaLkc3UAsAg" type="_EuPloBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cHCA5x7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cHCA7B7pEeGEaLkc3UAsAg" name="getPayersSection" isQuery="true" bodyCondition="_cHCA7x7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cHCA7x7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cHCA7B7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHCA8B7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection))->asSequence()->first().oclAsType(consol::PayersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cHCA7R7pEeGEaLkc3UAsAg" type="_2MV_UBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cHCA7h7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cHCA8x7pEeGEaLkc3UAsAg" name="getMedicationsSection" isQuery="true" bodyCondition="_cHCA9h7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cHCA9h7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cHCA8x7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHCA9x7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->first().oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cHCA9B7pEeGEaLkc3UAsAg" type="_2NIpgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cHCA9R7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cHLx4B7pEeGEaLkc3UAsAg" name="getPlanOfCareSection" isQuery="true" bodyCondition="_cHLx4x7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cHLx4x7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cHLx4B7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHLx5B7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cHLx4R7pEeGEaLkc3UAsAg" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cHLx4h7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cHLx5x7pEeGEaLkc3UAsAg" name="getProceduresSection" isQuery="true" bodyCondition="_cHLx6h7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cHLx6h7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cHLx5x7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHLx6x7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->first().oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cHLx6B7pEeGEaLkc3UAsAg" type="_2OAzQRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cHLx6R7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cHLx7h7pEeGEaLkc3UAsAg" name="getVitalSignsSection" isQuery="true" bodyCondition="_cHLx8R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cHLx8R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cHLx7h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHLx8h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cHLx7x7pEeGEaLkc3UAsAg" type="_bRH8sBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cHLx8B7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cI0woB7pEeGEaLkc3UAsAg" name="getFamilyHistorySection" isQuery="true" bodyCondition="_cI0wox7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cI0wox7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cI0woB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cI0wpB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->first().oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cI0woR7pEeGEaLkc3UAsAg" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cI0woh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cJkXhh7pEeGEaLkc3UAsAg" name="getSocialHistorySection" isQuery="true" bodyCondition="_cJuIgh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cJuIgh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cJkXhh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cJuIgx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->first().oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cJuIgB7pEeGEaLkc3UAsAg" type="_2JKvgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cJuIgR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cKwqVh7pEeGEaLkc3UAsAg" name="getResultsSection" isQuery="true" bodyCondition="_cKwqWR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cKwqWR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cKwqVh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKwqWh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->first().oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cKwqVx7pEeGEaLkc3UAsAg" type="_2Js7AxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cKwqWB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cLDlRx7pEeGEaLkc3UAsAg" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="_cLDlSh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cLDlSh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cLDlRx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLDlSx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))->asSequence()->first().oclAsType(consol::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cLDlSB7pEeGEaLkc3UAsAg" type="_2KEucBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cLDlSR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cLXHRB7pEeGEaLkc3UAsAg" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_cLXHRx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cLXHRx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cLXHRB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLXHSB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->first().oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cLXHRR7pEeGEaLkc3UAsAg" type="_2KKOBhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cLXHRh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_chtKux7pEeGEaLkc3UAsAg" name="getProblemSection" isQuery="true" bodyCondition="_chtKvh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_chtKvh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_chtKux7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_chtKvx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->first().oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_chtKvB7pEeGEaLkc3UAsAg" type="_2LSPYBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_chtKvR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2IWQIxSVEeGGzu7fmW9pXw" name="FamilyHistorySection">
      <ownedComment xmi:id="_2JJhYBSVEeGGzu7fmW9pXw" annotatedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <body>This section contains data defining the patient's genetic relatives in terms of possible or relevant health risk factors that have a potential impact on the patient's healthcare risk profile.</body>
      </ownedComment>
      <ownedComment xmi:id="_2JJhYRSVEeGGzu7fmW9pXw" annotatedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <body>The family history section shall contain a narrative description of the genetic family members, to the extent that they are&#xD;
known, the diseases they suffered from, their ages at death, and other relevant genetic information.</body>
      </ownedComment>
      <ownedComment xmi:id="_2IWQJBSVEeGGzu7fmW9pXw" annotatedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Family History Section contains information about the genetic family members, to the extent that&#xD;
    they are known, the diseases they suffered from, their ages at death, and other relevant genetic information. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2JITQBSVEeGGzu7fmW9pXw" name="FamilyHistorySectionFamilyHistoryObsOrgs">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JITQRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entry.observation->exists(obs : cda::Observation | obs.oclIsTypeOf(consol::FamilyHistoryObservation)) or self.entry.organizer->exists(org : cda::Organizer | org.oclIsTypeOf(consol::FamilyHistoryOrganizer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JI6UBSVEeGGzu7fmW9pXw" name="FamilyHistorySectionNoSubject">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JI6URSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.subject.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cHLx8x7pEeGEaLkc3UAsAg" name="FamilyHistorySectionTemplateId" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHLx9B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.15')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cHVi4B7pEeGEaLkc3UAsAg" name="FamilyHistorySectionCode" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHVi4R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10157-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cHVi4h7pEeGEaLkc3UAsAg" name="FamilyHistorySectionTitle" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHVi4x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cHVi5B7pEeGEaLkc3UAsAg" name="FamilyHistorySectionText" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHVi5R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cHes0B7pEeGEaLkc3UAsAg" name="FamilyHistorySectionFamilyHistory" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHes0R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FamilyHistoryOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2JJhYhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cHes0h7pEeGEaLkc3UAsAg" name="getFamilyHistories" isQuery="true" bodyCondition="_cHes1R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cHes1R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cHes0h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHes1h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::FamilyHistoryOrganizer)).oclAsType(consol::FamilyHistoryOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cHes0x7pEeGEaLkc3UAsAg" type="_2IbIoBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cHes1B7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2IbIoBSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizer">
      <ownedRule xmi:id="_2I6Q0xSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerHasComponent">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I6Q1BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.component->size() >= 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2I634RSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerHasFamilyHistoryObservation">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I634hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.component->exists (comp : cda::Component4 | comp.observation->exists(obs : cda::Observation | obs.oclIsKindOf(consol::FamilyHistoryObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2I7e8BSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerHasSubject">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I7e8RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.subject->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2I8GABSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerHasSubjectPatientRelationship">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I8GARSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.subject.relatedSubject->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2I8tEBSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerRelationshipValueCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I8tERSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.subject.relatedSubject.classCode = vocab::x_DocumentSubject::PRS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2I8tExSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerHasRelatedSubjectCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I8tFBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.subject.relatedSubject.code->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2I-iQBSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerHasRelatedSubjectSubject">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I-iQRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.subject.relatedSubject.subject->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2I_JUBSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerHasGenderCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I_JURSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.subject.relatedSubject.subject.administrativeGenderCode->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2I_JUxSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerRelatedSubjectBirthTime">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I_JVBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.subject.relatedSubject.subject.birthTime.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JCzsBSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerHasParticipant">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JCzsRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JCzsxSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerHasParticipantParticipantRole">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JCztBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole->one(pr : cda::ParticipantRole | pr.classCode = vocab::RoleClassRoot::PRS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JDawRSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerHasParticipantRoleCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JDawhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole.code->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JEB0BSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerHasParticipantRolePlayingEntity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JEB0RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole.playingEntity->one(pe : cda::PlayingEntity | pe.classCode = vocab::EntityClassRoot::PSN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IbIpxSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerRelatedSubjectCodeValueSet">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IbIqBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.subject.relatedSubject.code.codeSystem = '2.16.840.1.113883.5.111'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IbIrBSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerHasFamilyName">
        <ownedComment xmi:id="_2IbIrRSVEeGGzu7fmW9pXw">
          <body>The family member name need not be the actual name of the family member. It may be a string (such as aunt1 or aunt2) to help the patient and providers distinguish between different family members with the same relationship to the patient</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IbIrhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.subject.relatedSubject.subject.name->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IbIuRSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizerFamilyMemberCondition">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IbIuhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->exists(obs : cda::Observation | obs.oclIsKindOf(consol::FamilyHistoryObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cHes1x7pEeGEaLkc3UAsAg" name="FamilyHistoryOrganizerTemplateId" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cHes2B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cH7YwB7pEeGEaLkc3UAsAg" name="FamilyHistoryOrganizerClassCode" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cH7YwR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryOrganizer::CLUSTER</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cIFJwB7pEeGEaLkc3UAsAg" name="FamilyHistoryOrganizerMoodCode" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cIFJwR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cIFJwh7pEeGEaLkc3UAsAg" name="FamilyHistoryOrganizerCode" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cIFJwx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.111'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cIOTsB7pEeGEaLkc3UAsAg" name="FamilyHistoryOrganizerStatusCode" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cIOTsR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cIq_qR7pEeGEaLkc3UAsAg" name="FamilyHistoryOrganizerFamilyHistoryObservation" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cIq_qh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::FamilyHistoryObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2JHFIBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_cIq_qx7pEeGEaLkc3UAsAg" name="getFamilyHistoryObservations" isQuery="true" bodyCondition="_cIq_rh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cIq_rh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cIq_qx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cIq_rx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FamilyHistoryObservation)).oclAsType(consol::FamilyHistoryObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cIq_rB7pEeGEaLkc3UAsAg" type="_2IpyIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cIq_rR7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2IpyIxSVEeGGzu7fmW9pXw" name="FamilyHistoryObservation">
      <ownedComment xmi:id="_2I5CsBSVEeGGzu7fmW9pXw" annotatedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <body>The simple observation entry is meant to be an abstract representation of many of the observations used in this&#xD;
specification. It can be made concrete by the specification of a few additional constraints, namely the vocabulary used for&#xD;
codes, and the value representation. A simple observation may also inherit constraints from other specifications (e.g.,&#xD;
ASTM/HL7 Continuity of Care Document).</body>
      </ownedComment>
      <ownedRule xmi:id="_2IyVABSVEeGGzu7fmW9pXw" name="FamilyHistoryObservationHasSubjectPatientRelationship">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IyVARSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IyVAxSVEeGGzu7fmW9pXw" name="FamilyHistoryObservationRelationshipValueCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IyVBBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.classCode = vocab::x_DocumentSubject::PRS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Iy8ERSVEeGGzu7fmW9pXw" name="FamilyHistoryObservationHasRelatedSubjectCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Iy8EhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.code->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IzjIBSVEeGGzu7fmW9pXw" name="FamilyHistoryObservationRelatedSubjectCodeValueSet">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IzjIRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.code.codeSystem = '2.16.840.1.113883.5.111'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2I0xQBSVEeGGzu7fmW9pXw" name="FamilyHistoryObservationHasRelatedSubjectSubject">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I0xQRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.subject->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2I0xQxSVEeGGzu7fmW9pXw" name="FamilyHistoryObservationHasGenderCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I0xRBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.subject.administrativeGenderCode->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2I1YURSVEeGGzu7fmW9pXw" name="FamilyHistoryObservationRelatedSubjectBirthTime">
        <ownedComment xmi:id="_2I1YUhSVEeGGzu7fmW9pXw">
          <body>UNIMPLEMENTABLE</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I1YUxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.subject.relatedSubject.subject.birthTime->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cIOTsh7pEeGEaLkc3UAsAg" name="FamilyHistoryObservationTemplateId" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cIOTsx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.46')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cIh1sB7pEeGEaLkc3UAsAg" name="FamilyHistoryObservationId" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cIh1sR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cIh1sh7pEeGEaLkc3UAsAg" name="FamilyHistoryObservationCode" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cIh1sx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '404684003' or value.code = '409586006' or value.code = '282291009' or value.code = '64572001' or value.code = '248536006' or value.code = '418799008' or value.code = '55607006')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cIh1tB7pEeGEaLkc3UAsAg" name="FamilyHistoryObservationStatusCode" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cIh1tR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cIq_oB7pEeGEaLkc3UAsAg" name="FamilyHistoryObservationValue" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cIq_oR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cIq_oh7pEeGEaLkc3UAsAg" name="FamilyHistoryObservationAgeObservation" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cIq_ox7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2I5CsRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cIq_pB7pEeGEaLkc3UAsAg" name="getAgeObservation" isQuery="true" bodyCondition="_cIq_px7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cIq_px7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cIq_pB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cIq_qB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AgeObservation))->asSequence()->first().oclAsType(consol::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cIq_pR7pEeGEaLkc3UAsAg" type="_2EqqABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cIq_ph7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cg9j5R7pEeGEaLkc3UAsAg" name="getFamilyHistoryDeathObservation" isQuery="true" bodyCondition="_cg9j6B7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cg9j6B7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cg9j5R7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg9j6R7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FamilyHistoryDeathObservation))->asSequence()->first().oclAsType(consol::FamilyHistoryDeathObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cg9j5h7pEeGEaLkc3UAsAg" type="_2SC-sBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cg9j5x7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2JKvgBSVEeGGzu7fmW9pXw" name="SocialHistorySection">
      <ownedRule xmi:id="_cI0wpR7pEeGEaLkc3UAsAg" name="SocialHistorySectionTemplateId" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cI0wph7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cI0wqB7pEeGEaLkc3UAsAg" name="SocialHistorySectionCode" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cI0wqR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '29762-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cI0wqh7pEeGEaLkc3UAsAg" name="SocialHistorySectionTitle" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cI0wqx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cI0wrB7pEeGEaLkc3UAsAg" name="SocialHistorySectionText" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cI0wrR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cI-hoB7pEeGEaLkc3UAsAg" name="SocialHistorySectionSocialHistoryObservation" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cI-hoR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SocialHistoryObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chtKsh7pEeGEaLkc3UAsAg" name="SocialHistorySectionPregnancyObservation" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chtKsx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PregnancyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Jrs4hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cI-hoh7pEeGEaLkc3UAsAg" name="getSocialHistoryObservations" isQuery="true" bodyCondition="_cI-hpR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cI-hpR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cI-hoh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cI-hph7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SocialHistoryObservation)).oclAsType(consol::SocialHistoryObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cI-hox7pEeGEaLkc3UAsAg" type="_2JOZ4BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cI-hpB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_chtKtB7pEeGEaLkc3UAsAg" name="getPregnancyObservations" isQuery="true" bodyCondition="_chtKtx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_chtKtx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_chtKtB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_chtKuB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PregnancyObservation)).oclAsType(consol::PregnancyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_chtKtR7pEeGEaLkc3UAsAg" type="_2N6soBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_chtKth7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2JOZ4BSVEeGGzu7fmW9pXw" name="SocialHistoryObservation">
      <ownedRule xmi:id="_L9YKgBtsEeGT89b80j3MTg" name="SocialHistoryObservationOriginalText" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nzLzwBtsEeGT89b80j3MTg">
          <language>OCL</language>
          <body>not self.code->size() > 0 implies not self.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_4G8WIBtsEeGT89b80j3MTg" name="SocialHistoryObservationReference" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_79Cd8BtsEeGT89b80j3MTg">
          <language>OCL</language>
          <body>self.code.originalText->size() > 0 implies self.code.originalText.reference ->size() &lt;= 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_O-ANcBttEeGT89b80j3MTg" name="SocialHistoryObservationValue" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aUIYMBttEeGT89b80j3MTg">
          <language>OCL</language>
          <body>not self.getSection().text.getText(self.code.originalText.reference.value.substring(2, self.code.originalText.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cI-hpx7pEeGEaLkc3UAsAg" name="SocialHistoryObservationTemplateId" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cI-hqB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cI-hqh7pEeGEaLkc3UAsAg" name="SocialHistoryObservationClassCode" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cI-hqx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cJHrkB7pEeGEaLkc3UAsAg" name="SocialHistoryObservationMoodCode" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cJHrkR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cJHrkh7pEeGEaLkc3UAsAg" name="SocialHistoryObservationId" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cJHrkx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cJHrlB7pEeGEaLkc3UAsAg" name="SocialHistoryObservationCode" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cJHrlR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '160573003' or value.code = '363908000' or value.code = '364703007' or value.code = '256235009' or value.code = '228272008' or value.code = '364393001' or value.code = '229819007' or value.code = '425400000')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cJRckB7pEeGEaLkc3UAsAg" name="SocialHistoryObservationStatusCode" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cJRckR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Jii8hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2JVHkhSVEeGGzu7fmW9pXw" name="SocialHistoryStatusObservation">
      <ownedRule xmi:id="_2Jb1QBSVEeGGzu7fmW9pXw" name="SocialHistoryStatusObservationTargetOfEntryRelationship">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Jb1QRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsKindOf(consol::StatusObservation))->exists(er1 : cda::EntryRelationship | er1.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JccURSVEeGGzu7fmW9pXw" name="SocialHistoryStatusObservationNoAdditionalParticipants">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JccUhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JdDYBSVEeGGzu7fmW9pXw" name="SocialHistoryStatusObservationNoAdditionalRelationships">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JdDYRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er|not er.observation.oclIsUndefined())->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cJRckh7pEeGEaLkc3UAsAg" name="SocialHistoryStatusObservationTemplateId" constrainedElement="_2JVHkhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cJRckx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.56')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cJamgB7pEeGEaLkc3UAsAg" name="SocialHistoryStatusObservationClassCode" constrainedElement="_2JVHkhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cJamgR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cJamgh7pEeGEaLkc3UAsAg" name="SocialHistoryStatusObservationMoodCode" constrainedElement="_2JVHkhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cJamgx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cJamhB7pEeGEaLkc3UAsAg" name="SocialHistoryStatusObservationCode" constrainedElement="_2JVHkhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cJamhR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '33999-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cJkXgB7pEeGEaLkc3UAsAg" name="SocialHistoryStatusObservationStatusCode" constrainedElement="_2JVHkhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cJkXgR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cJkXgh7pEeGEaLkc3UAsAg" name="SocialHistoryStatusObservationValue" constrainedElement="_2JVHkhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cJkXgx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.1.11.20.17'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2JdqcBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Js7AxSVEeGGzu7fmW9pXw" name="ResultsSection">
      <ownedComment xmi:id="_2Js7BBSVEeGGzu7fmW9pXw" annotatedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    This section contains the results of observations generated by laboratories, imaging procedures, and&#xD;
    other procedures. The scope includes hematology, chemistry, serology, virology, toxicology, microbiology, plain x-ray,&#xD;
    ultrasound, CT, MRI, angiography, cardiac echo, nuclear medicine, pathology, and procedure observations. The section&#xD;
    may contain all results for the period of time being summarized, but should include notable results such as abnormal&#xD;
    values or relevant trends.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Lab results are typically generated by laboratories providing analytic services in areas such as&#xD;
    chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These&#xD;
    observations are based on analysis of specimens obtained from the patient, submitted to the lab.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Imaging results are typically generated by a clinician reviewing the output of an imaging procedure,&#xD;
    such as where a cardiologist reports the left ventricular ejection fraction based on the review of a cardiac&#xD;
    echo.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Procedure results are typically generated by a clinician wanting to provide more granular information&#xD;
    about component observations made during the performance of a procedure, such as where a gastroenterologist reports the&#xD;
    size of a polyp observed during a colonoscopy.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cJuIhR7pEeGEaLkc3UAsAg" name="ResultsSectionEntriesOptionalTemplateId" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cJuIhh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.3.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKBDcB7pEeGEaLkc3UAsAg" name="ResultsSectionTitle" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKBDcR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKBDch7pEeGEaLkc3UAsAg" name="ResultsSectionText" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKBDcx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ckZSYx7pEeGEaLkc3UAsAg" name="ResultsSectionResultOrganizer" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckZSZB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::ResultOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ksO6UBVgEeGQCvUGzi1kDQ" general="_xGqiEBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_ckZSZR7pEeGEaLkc3UAsAg" name="getConsolResultOrganizers" isQuery="true" bodyCondition="_ckZSaB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ckZSaB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ckZSZR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckZSaR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::ResultOrganizer)).oclAsType(consol::ResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ckZSZh7pEeGEaLkc3UAsAg" type="_2JxzgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ckZSZx7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2JxzgBSVEeGGzu7fmW9pXw" name="ResultOrganizer">
      <ownedRule xmi:id="_2J_O4BSVEeGGzu7fmW9pXw" name="ResultOrganizerCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2J_O4RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.1' xor self.code.codeSystem = '2.16.840.1.113883.6.96' xor self.code.codeSystem = '2.16.840.1.113883.6.12' xor self.code.codeSystem = '2.16.840.1.113883.1.11.20.16'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKBDdB7pEeGEaLkc3UAsAg" name="ResultOrganizerTemplateId" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKBDdR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKK0cB7pEeGEaLkc3UAsAg" name="ResultOrganizerId" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKK0cR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKK0ch7pEeGEaLkc3UAsAg" name="ResultOrganizerCode" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKK0cx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKT-YB7pEeGEaLkc3UAsAg" name="ResultOrganizerStatusCode" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKT-YR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKT-Yh7pEeGEaLkc3UAsAg" name="ResultOrganizerResultObservation" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKT-Yx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::ResultObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2KCSNBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_cKT-ZB7pEeGEaLkc3UAsAg" name="getResultObservations" isQuery="true" bodyCondition="_cKT-Zx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cKT-Zx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cKT-ZB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKT-aB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ResultObservation)).oclAsType(consol::ResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cKT-ZR7pEeGEaLkc3UAsAg" type="_2J1d4BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cKT-Zh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2J1d4BSVEeGGzu7fmW9pXw" name="ResultObservation">
      <ownedRule xmi:id="_2J69cBSVEeGGzu7fmW9pXw" name="ResultObservationCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2J69cRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.1' xor self.code.codeSystem = '2.16.840.1.113883.6.96' xor self.code.codeSystem = '2.16.840.1.113883.6.12'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKT-aR7pEeGEaLkc3UAsAg" name="ResultObservationTemplateId" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKT-ah7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKdvYB7pEeGEaLkc3UAsAg" name="ResultObservationId" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKdvYR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKdvYh7pEeGEaLkc3UAsAg" name="ResultObservationCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKdvYx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKm5UB7pEeGEaLkc3UAsAg" name="ResultObservationEffectiveTime" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKm5UR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKm5Uh7pEeGEaLkc3UAsAg" name="ResultObservationValue" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKm5Ux7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKm5VB7pEeGEaLkc3UAsAg" name="ResultObservationInterpretationCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKm5VR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKm5Vh7pEeGEaLkc3UAsAg" name="ResultObservationMethodCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKm5Vx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKwqUB7pEeGEaLkc3UAsAg" name="ResultObservationTargetSiteCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKwqUR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | element.oclIsTypeOf(datatypes::CE)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cKwqUh7pEeGEaLkc3UAsAg" name="ResultObservationAuthor" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKwqUx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.author->isEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2J-AwRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KEucBSVEeGGzu7fmW9pXw" name="MedicalEquipmentSection">
      <ownedComment xmi:id="_2KJm8BSVEeGGzu7fmW9pXw" annotatedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Medical Equipment section defines a patient's implanted and external medical devices and equipment&#xD;
    that their health status depends on, as well as any pertinent equipment or device history. This section is also used to&#xD;
    itemize any pertinent current or historical durable medical equipment (DME) used to help maintain the patient's health&#xD;
    status. All pertinent equipment relevant to the diagnosis, care, and treatment of a patient should be included.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2KJm8RSVEeGGzu7fmW9pXw" annotatedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <body>The medical devices section contains narrative text describing the patient history of medical device use.</body>
      </ownedComment>
      <ownedComment xmi:id="_2KEucRSVEeGGzu7fmW9pXw" annotatedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Medical Equipment section contains information describing a patient's implanted and external medical&#xD;
    devices and equipment that their health status depends on, as well as any pertinent equipment or device history. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cKwqWx7pEeGEaLkc3UAsAg" name="MedicalEquipmentSectionTemplateId" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cKwqXB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.23')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cK6bUB7pEeGEaLkc3UAsAg" name="MedicalEquipmentSectionCode" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cK6bUR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '46264-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cK6bUh7pEeGEaLkc3UAsAg" name="MedicalEquipmentSectionTitle" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cK6bUx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cK6bVB7pEeGEaLkc3UAsAg" name="MedicalEquipmentSectionText" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cK6bVR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cK6bVh7pEeGEaLkc3UAsAg" name="MedicalEquipmentSectionNonMedicinalSupplyActivity" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cK6bVx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2KJm8hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cLDlQB7pEeGEaLkc3UAsAg" name="getNonMedicinalSupplyActivities" isQuery="true" bodyCondition="_cLDlQx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cLDlQx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cLDlQB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLDlRB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity)).oclAsType(consol::NonMedicinalSupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cLDlQR7pEeGEaLkc3UAsAg" type="_2HIvMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cLDlQh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KKOBhSVEeGGzu7fmW9pXw" name="FunctionalStatusSection">
      <ownedComment xmi:id="_2KTX8xSVEeGGzu7fmW9pXw" annotatedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    &lt;i>Functional Status&lt;/i> describes the patient's status of normal functioning at the time the Care Record&#xD;
    was created. Functional statuses include information regarding the patient relative to:&#xD;
&lt;/p>&#xD;
&#xD;
    &lt;ul>&lt;li>Ambulatory ability&lt;/li>&#xD;
       &lt;li>Mental status or competency&lt;/li>&#xD;
        &lt;li>Activities of Daily Living (ADLs), including bathing, dressing, feeding, grooming&lt;/li>&#xD;
        &lt;li>Home / living situation having an effect on the health status of the patient&lt;/li>&#xD;
        &lt;li>Ability to care for self&lt;/li>&#xD;
        &lt;li>Social activity, including issues with social cognition, participation with&#xD;
        friends and acquaintances other than family members&lt;/li>&#xD;
       &lt;li>Occupation activity, including activities partly or directly related to working, housework or volunteering, family&#xD;
        and home responsibilities or activities related to home and family&lt;/li>&#xD;
      &lt;li>Communication ability, including issues with speech, writing or cognition required for communication&lt;/li>&#xD;
       &lt;li> Perception, including sight, hearing, taste, skin sensation, kinesthetic sense, proprioception, or&#xD;
        balance&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Any&#xD;
    deviation from normal function that the patient displays and is recorded in the record should be included. Of&#xD;
    particular interest are those limitations that would in any way interfere with self care or the medical therapeutic&#xD;
    process. In addition, an improvement, any change in or noting that the patient has normal functioning status is also&#xD;
    valid for inclusion.&#xD;
&lt;/p>&#xD;
&lt;p>Functional Statuses can be expressed in 3 different forms. They can occur as a Problem, a Result or as text. Text can be employed if and only if the Functional Status is neither a Problem nor a Result. Functional Statuses expressed as Problems include relevant clinical conditions, diagnoses, symptoms and findings. Results are the interpretation or conclusion derived from a clinical assessment or test battery, such as the Instrumental Activities of Daily Living (IADL) scale or the Functional Status Index (FSI).&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2KKOBxSVEeGGzu7fmW9pXw" annotatedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Functional Status Section provides information about the capability of the patient to perform acts&#xD;
    of daily living. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2KN4YBSVEeGGzu7fmW9pXw" name="FunctionalStatusSectionClinicalStatements">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KN4YRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getEntryTargets(consol::ProblemConcernAct)->size() > 0&#xD;&#xA;  or self.getEntryTargets(consol::ResultOrganizer)->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KOfcRSVEeGGzu7fmW9pXw" name="FunctionalStatusSectionObservationCode">
        <ownedComment xmi:id="_2KOfchSVEeGGzu7fmW9pXw">
          <body>UNIMPLEMENTABLE</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KOfcxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->select(obs : cda::Observation | obs.oclIsKindOf(consol::ProblemObservation) or obs.oclIsKindOf(consol::ResultObservation))->forAll(ob : cda::Observation| ob.code->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KPGgBSVEeGGzu7fmW9pXw" name="FunctionalStatusSectionObservationCodeValueSet">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KPGgRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->select(obs : cda::Observation | obs.oclIsKindOf(consol::ProblemObservation) or obs.oclIsKindOf(consol::ResultObservation))->forAll(ob : cda::Observation| ob.code.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KRiwRSVEeGGzu7fmW9pXw" name="FunctionalStatusSectionValueDatatype">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KRiwhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->select(o | o.value->select(v | v.oclIsKindOf(datatypes::CD)  or  v.oclIsKindOf(datatypes::CE) ) ->isEmpty())->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KSJ0BSVEeGGzu7fmW9pXw" name="FunctionalStatusSectionIcfCodeSystem">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KSJ0RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->select(o|o.code.codeSystem &lt;> '2.16.840.1.113883.6.254')->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KSw4BSVEeGGzu7fmW9pXw" name="FunctionalStatusSectionProblemStatusObservation">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KSw4RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->select(obs : cda::Observation | (obs.oclIsKindOf(consol::ResultObservation) or obs.oclIsKindOf(consol::ProblemObservation)))->forAll(ob : cda::Observation | ob.getObservations()->select(o: cda::Observation | o.oclIsKindOf(consol::FunctionalStatusObservation))->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KTX8BSVEeGGzu7fmW9pXw" name="FunctionalStatusSectionResultStatusObservation">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KTX8RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getObservations()->select(obs : cda::Observation | (obs.oclIsKindOf(consol::ResultObservation) or obs.oclIsKindOf(consol::ProblemObservation)))->&#xD;&#xA;forAll(ob : cda::Observation | ob.getObservations()->select(o: cda::Observation | o.oclIsKindOf(consol::FunctionalStatusObservation))->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLDlTB7pEeGEaLkc3UAsAg" name="FunctionalStatusSectionTemplateId" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLDlTR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLNWQB7pEeGEaLkc3UAsAg" name="FunctionalStatusSectionCode" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLNWQR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '47420-5' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLNWQh7pEeGEaLkc3UAsAg" name="FunctionalStatusSectionTitle" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLNWQx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLXHQB7pEeGEaLkc3UAsAg" name="FunctionalStatusSectionText" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLXHQR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2KT_ABSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cg9j6h7pEeGEaLkc3UAsAg" name="getProblemObservation" isQuery="true" bodyCondition="_cg9j7R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cg9j7R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cg9j6h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg9j7h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->first().oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cg9j6x7pEeGEaLkc3UAsAg" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cg9j7B7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cg9j7x7pEeGEaLkc3UAsAg" name="getResultObservation" isQuery="true" bodyCondition="_cg9j8h7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cg9j8h7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cg9j7x7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg9j8x7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ResultObservation))->asSequence()->first().oclAsType(consol::ResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cg9j8B7pEeGEaLkc3UAsAg" type="_2J1d4BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cg9j8R7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KVNIBSVEeGGzu7fmW9pXw" name="PurposeSection">
      <ownedComment xmi:id="_2KVNIRSVEeGGzu7fmW9pXw" annotatedElement="_2KVNIBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    Represents the specific reason for which the summarization was generated, such as in response to a&#xD;
    request.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The general use case does not require a purpose. Purpose should be utilized when the CCD has a specific&#xD;
    purpose such as a transfer, referral, or patient request.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cLXHSR7pEeGEaLkc3UAsAg" name="PurposeSectionTemplateId" constrainedElement="_2KVNIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLXHSh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLgRMB7pEeGEaLkc3UAsAg" name="PurposeSectionCode" constrainedElement="_2KVNIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLgRMR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '48764-5' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLgRMh7pEeGEaLkc3UAsAg" name="PurposeSectionTitle" constrainedElement="_2KVNIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLgRMx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLgRNB7pEeGEaLkc3UAsAg" name="PurposeSectionText" constrainedElement="_2KVNIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLgRNR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLgRNh7pEeGEaLkc3UAsAg" name="PurposeSectionPurposeActivity" constrainedElement="_2KVNIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLgRNx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PurposeActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2KflMBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cLqCMB7pEeGEaLkc3UAsAg" name="getPurposeActivities" isQuery="true" bodyCondition="_cLqCMx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cLqCMx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cLqCMB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLqCNB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PurposeActivity)).oclAsType(consol::PurposeActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cLqCMR7pEeGEaLkc3UAsAg" type="_2KZekBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cLqCMh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KZekBSVEeGGzu7fmW9pXw" name="PurposeActivity">
      <ownedComment xmi:id="_2KZekRSVEeGGzu7fmW9pXw" annotatedElement="_2KZekBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    CCD represents the ASTM CCR &amp;lt;Purpose&amp;gt; object as a relationship between two classes -- the source&#xD;
    represents the act of creating a summary document, the target is the reason for creating the document, and the&#xD;
    relationship type is &quot;RSON&quot; (has reason). The target act may be an Observation, Procedure, or some other kind of act,&#xD;
    and it may represent an order, an event, etc.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2KZekhSVEeGGzu7fmW9pXw" name="PurposeActivityHasReason" constrainedElement="_2KZekBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KZekxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | &#xD;&#xA;  entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KZelBSVEeGGzu7fmW9pXw" name="PurposeActivityReasonType" constrainedElement="_2KZekBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KZelRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(entryRelationship : cda::EntryRelationship |&#xD;&#xA;  entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON implies( &#xD;&#xA;  not (entryRelationship.act.oclIsUndefined() and entryRelationship.encounter.oclIsUndefined()&#xD;&#xA;       and entryRelationship.observation.oclIsUndefined() and entryRelationship.procedure.oclIsUndefined()&#xD;&#xA;       and entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.supply.oclIsUndefined())))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLqCNR7pEeGEaLkc3UAsAg" name="PurposeActivityTemplateId" constrainedElement="_2KZekBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLqCNh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.30')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLqCOB7pEeGEaLkc3UAsAg" name="PurposeActivityClassCode" constrainedElement="_2KZekBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLqCOR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLqCOh7pEeGEaLkc3UAsAg" name="PurposeActivityMoodCode" constrainedElement="_2KZekBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLqCOx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLzMIB7pEeGEaLkc3UAsAg" name="PurposeActivityCode" constrainedElement="_2KZekBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLzMIR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '23745001' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cLzMIh7pEeGEaLkc3UAsAg" name="PurposeActivityStatusCode" constrainedElement="_2KZekBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLzMIx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Ke-IBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KgzUBSVEeGGzu7fmW9pXw" name="AdvanceDirectivesSection">
      <ownedComment xmi:id="_2LLhsRSVEeGGzu7fmW9pXw" annotatedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <body>The advance directive section shall contain a narrative description of the list of documents that define the patient's&#xD;
expectations and requests for care along with the locations of the documents.</body>
      </ownedComment>
      <ownedComment xmi:id="_2KgzURSVEeGGzu7fmW9pXw" annotatedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Advance Directives Section contains information that defines the patient's expectations and requests&#xD;
    for care along with the locations of the documents. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cLzMJR7pEeGEaLkc3UAsAg" name="AdvanceDirectivesSectionEntriesOptionalTemplateId" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cLzMJh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.21')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cL89IB7pEeGEaLkc3UAsAg" name="AdvanceDirectivesSectionEntriesOptionalCode" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cL89IR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '42348-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cL89Ih7pEeGEaLkc3UAsAg" name="AdvanceDirectivesSectionTitle" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cL89Ix7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cL89JB7pEeGEaLkc3UAsAg" name="AdvanceDirectivesSectionText" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cL89JR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cL89Jh7pEeGEaLkc3UAsAg" name="AdvanceDirectivesSectionAdvanceDirectiveObservation" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cL89Jx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AdvanceDirectiveObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_8UhPsBVfEeGQCvUGzi1kDQ" general="_1RZdIBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_cMGuIB7pEeGEaLkc3UAsAg" name="getConsolAdvanceDirectiveObservations" isQuery="true" bodyCondition="_cMGuIx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cMGuIx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cMGuIB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMGuJB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AdvanceDirectiveObservation)).oclAsType(consol::AdvanceDirectiveObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cMGuIR7pEeGEaLkc3UAsAg" type="_2KlEwBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cMGuIh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KlEwBSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservation">
      <ownedComment xmi:id="_2LGpMBSVEeGGzu7fmW9pXw" annotatedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <body>The simple observation entry is meant to be an abstract representation of many of the observations used in this&#xD;
specification. It can be made concrete by the specification of a few additional constraints, namely the vocabulary used for&#xD;
codes, and the value representation. A simple observation may also inherit constraints from other specifications (e.g.,&#xD;
ASTM/HL7 Continuity of Care Document).</body>
      </ownedComment>
      <ownedComment xmi:id="_2KlEwRSVEeGGzu7fmW9pXw" annotatedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <body>This module contains data describing the patient's Advance Directives and any reference to supporting documentation. This section contains data such as the existence of living wills, healthcare proxies and CPR and resuscitation status. The custodian of these documents may be described.</body>
      </ownedComment>
      <ownedRule xmi:id="_2LCXwRSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationAdvDirectiveCodeValueSet">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LCXwhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2LC-0RSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationAdvDirectiveCodeCodeSystem">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LC-0hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.code.code = '304251008' and self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2LEM8BSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationHasExternalReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LEM8RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.reference->select(r | r.oclIsKindOf(consol::AdvanceDirectiveReference))->size() =1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KlExRSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationHasStartingTime" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KlExhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.effectiveTime.low.hasContent()  or self.effectiveTime.low.isNullFlavorDefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KlEyhSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationHasEndingTime" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KlEyxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.effectiveTime.high.hasContent() or self.effectiveTime.high.isNullFlavorDefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KlE0RSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationHasCustodian" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KlE0hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KlE0xSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationParticipantTypeCode" constrainedElement="_2KlE0RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KlE1BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->one(par : cda::Participant2 | par.typeCode = vocab::ParticipationType::CST)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KlE1RSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationParticipantRoleClassCode" constrainedElement="_2KlE0xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KlE1hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole->one(pr : cda::ParticipantRole | pr.classCode = vocab::RoleClassRoot::AGNT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KlE1xSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationHasAddress" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KlE2BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole.addr->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KlE2RSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationHasTelecom" constrainedElement="_2KlE1xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KlE2hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole.telecom->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KlE2xSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationHasNameOfAgent" constrainedElement="_2KlE2RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KlE3BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant.participantRole.playingEntity.name->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cMGuJR7pEeGEaLkc3UAsAg" name="AdvanceDirectiveObservationTemplateId" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMGuJh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.48')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cMP4EB7pEeGEaLkc3UAsAg" name="AdvanceDirectiveObservationClassCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMP4ER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cMZpEB7pEeGEaLkc3UAsAg" name="AdvanceDirectiveObservationMoodCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMZpER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cMZpEh7pEeGEaLkc3UAsAg" name="AdvanceDirectiveObservationId" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMZpEx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cMZpFB7pEeGEaLkc3UAsAg" name="AdvanceDirectiveObservationCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMZpFR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '281789004' or value.code = '89666000' or value.code = '225204009' or value.code = '52765003' or value.code = '78823007' or value.code = '304251008')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cMjaEB7pEeGEaLkc3UAsAg" name="AdvanceDirectiveObservationStatusCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMjaER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cMjaEh7pEeGEaLkc3UAsAg" name="AdvanceDirectiveObservationEffectiveTime" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMjaEx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cMjaFB7pEeGEaLkc3UAsAg" name="AdvanceDirectiveObservationRepeatNumber" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMjaFR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cMjaFh7pEeGEaLkc3UAsAg" name="AdvanceDirectiveObservationInterpretationCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMjaFx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cMskAB7pEeGEaLkc3UAsAg" name="AdvanceDirectiveObservationTargetSiteCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMskAR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2LGpMRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KxSABSVEeGGzu7fmW9pXw" name="AdvanceDirectiveVerification">
      <ownedRule xmi:id="_cMskAh7pEeGEaLkc3UAsAg" name="AdvanceDirectiveVerificationTemplateId" constrainedElement="_2KxSABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMskAx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.58')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cMskBR7pEeGEaLkc3UAsAg" name="AdvanceDirectiveVerificationTypeCode" constrainedElement="_2KxSABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMskBh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.typeCode=vocab::ParticipationType::VRF</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cMskBx7pEeGEaLkc3UAsAg" name="AdvanceDirectiveVerificationTime" constrainedElement="_2KxSABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMskCB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.time.oclIsUndefined() or self.time.isNullFlavorUndefined()) implies (not self.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2KzHMxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_51DLwEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2K0VUxSVEeGGzu7fmW9pXw" name="AdvanceDirectiveStatusObservation">
      <ownedRule xmi:id="_2K504BSVEeGGzu7fmW9pXw" name="AdvanceDirectiveStatusObservationTargetOfEntryRelationship">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2K504RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsKindOf(consol::StatusObservation))->exists(er1 : cda::EntryRelationship | er1.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2K6b8RSVEeGGzu7fmW9pXw" name="AdvanceDirectiveStatusObservationNoAdditionalParticipants">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2K6b8hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2K7DABSVEeGGzu7fmW9pXw" name="AdvanceDirectiveStatusObservationNoAdditionalRelationships">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2K7DARSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er|not er.observation.oclIsUndefined())->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cMskCR7pEeGEaLkc3UAsAg" name="AdvanceDirectiveStatusObservationTemplateId" constrainedElement="_2K0VUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cMskCh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.37')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cM2VAR7pEeGEaLkc3UAsAg" name="AdvanceDirectiveStatusObservationClassCode" constrainedElement="_2K0VUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cM2VAh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cM2VAx7pEeGEaLkc3UAsAg" name="AdvanceDirectiveStatusObservationMoodCode" constrainedElement="_2K0VUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cM2VBB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cM_e8B7pEeGEaLkc3UAsAg" name="AdvanceDirectiveStatusObservationCode" constrainedElement="_2K0VUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cM_e8R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '33999-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cM_e8h7pEeGEaLkc3UAsAg" name="AdvanceDirectiveStatusObservationStatusCode" constrainedElement="_2K0VUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cM_e8x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2K7qEBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2K9fQBSVEeGGzu7fmW9pXw" name="AdvanceDirectiveReference">
      <ownedRule xmi:id="_2K9fQRSVEeGGzu7fmW9pXw" name="AdvanceDirectiveReferenceHasURL" constrainedElement="_2K9fQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2K9fQhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.externalDocument.text.reference.hasContent()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2K9fQxSVEeGGzu7fmW9pXw" name="AdvanceDirectiveReferenceHasMIMEType" constrainedElement="_2K9fQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2K9fRBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.externalDocument.text.isDefined('mediaType')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2K9fSBSVEeGGzu7fmW9pXw" name="AdvanceDirectiveReferenceExternalDocumentHasId" constrainedElement="_2K9fQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2K9fSRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.externalDocument.id->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cM_e9B7pEeGEaLkc3UAsAg" name="AdvanceDirectiveReferenceTemplateId" constrainedElement="_2K9fQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cM_e9R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.36')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cNJP8B7pEeGEaLkc3UAsAg" name="AdvanceDirectiveReferenceTypeCode" constrainedElement="_2K9fQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNJP8R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('typeCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2LBwsBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_NDnXkEcIEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LMIwBSVEeGGzu7fmW9pXw" name="AllergiesSection">
      <ownedComment xmi:id="_2LRBQRSVEeGGzu7fmW9pXw" annotatedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <body>This section is used to list and describe any allergies, adverse reactions, and alerts that are pertinent to the patient's current or past medical history. At a minimum, currently active and any relevant historical allergies and adverse reactions should be listed.</body>
      </ownedComment>
      <ownedComment xmi:id="_2LRBQhSVEeGGzu7fmW9pXw" annotatedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <body>The adverse and other adverse reactions section shall contain a narrative description of the substance intolerances and the&#xD;
associated adverse reactions suffered by the patient.</body>
      </ownedComment>
      <ownedComment xmi:id="_2LMIwRSVEeGGzu7fmW9pXw" annotatedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Allergies and Other Adverse Reactions Section contains data on the substance intolerances and the&#xD;
    associated adverse reactions suffered by the patient. At a minimum, currently active and any relevant historical&#xD;
    allergies and adverse reactions shall be listed. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cNJP8x7pEeGEaLkc3UAsAg" name="AllergiesSectionEntriesOptionalTemplateId" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNJP9B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cNTA8B7pEeGEaLkc3UAsAg" name="AllergiesSectionEntriesOptionalCode" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNTA8R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cNTA8h7pEeGEaLkc3UAsAg" name="AllergiesSectionTitle" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNTA8x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cNTA9B7pEeGEaLkc3UAsAg" name="AllergiesSectionText" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNTA9R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cNTA9h7pEeGEaLkc3UAsAg" name="AllergiesSectionAllergyDrugSensitivity" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNTA9x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EEbhsBVgEeGQCvUGzi1kDQ" general="_bGzYgBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_cNcK4B7pEeGEaLkc3UAsAg" name="getConsolAllergyDrugSensitivities" isQuery="true" bodyCondition="_cNcK4x7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cNcK4x7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cNcK4B7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNcK5B7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AllergyProblemAct)).oclAsType(consol::AllergyProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cNcK4R7pEeGEaLkc3UAsAg" type="_2EAisBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cNcK4h7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LSPYBSVEeGGzu7fmW9pXw" name="ProblemSection">
      <ownedComment xmi:id="_2LV5wRSVEeGGzu7fmW9pXw" annotatedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <body>This section lists and describes all relevant clinical problems at the time the summary is generated. At a minimum, all pertinent current and historical problems should be listed. CDA R2 represents problems as Observations.</body>
      </ownedComment>
      <ownedComment xmi:id="_2LV5whSVEeGGzu7fmW9pXw" annotatedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <body>The active problem section shall contain a narrative description of the conditions currently being monitored for the patient. It shall include entries for patient conditions as described in the Entry Content Module.</body>
      </ownedComment>
      <ownedComment xmi:id="_2LSPYRSVEeGGzu7fmW9pXw" annotatedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <body>This section lists and describes all relevant clinical problems at the time the document is generated. At a minimum, all pertinent current and historical problems should be listed.</body>
      </ownedComment>
      <ownedRule xmi:id="_cNcK5h7pEeGEaLkc3UAsAg" name="ProblemSectionEntriesOptionalTemplateId" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNcK5x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.5.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cNcK6R7pEeGEaLkc3UAsAg" name="ProblemSectionEntriesOptionalCode" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNcK6h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11450-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cNcK6x7pEeGEaLkc3UAsAg" name="ProblemSectionTitle" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNcK7B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cNcK7R7pEeGEaLkc3UAsAg" name="ProblemSectionText" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNcK7h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cNl74B7pEeGEaLkc3UAsAg" name="ProblemSectionCondition" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNl74R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProblemConcernAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_blmF8BVgEeGQCvUGzi1kDQ" general="_naxrkBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_cNl74h7pEeGEaLkc3UAsAg" name="getConsolConditions" isQuery="true" bodyCondition="_cNl75R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cNl75R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cNl74h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNl75h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct)).oclAsType(consol::ProblemConcernAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cNl74x7pEeGEaLkc3UAsAg" type="_2H6yUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cNl75B7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LWg0BSVEeGGzu7fmW9pXw" name="EncountersSection">
      <ownedComment xmi:id="_2L7IkBSVEeGGzu7fmW9pXw" annotatedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    This section is used to list and describe any healthcare encounters pertinent to the patient's current&#xD;
    health status or historical health history. An Encounter is an interaction, regardless of the setting, between a&#xD;
    patient and a practitioner who is vested with primary responsibility for diagnosing, evaluating, or treating the&#xD;
    patient's condition. It may include visits, appointments, as well as non face-to-face interactions. It is also a&#xD;
    contact between a patient and a practitioner who has primary responsibility for assessing and treating the patient at a&#xD;
    given contact, exercising independent judgment. This section may contain all encounters for the time period being&#xD;
    summarized, but should include notable encounters.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2L7IkRSVEeGGzu7fmW9pXw" annotatedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The encounter history section contains coded entries describing the patient history of encounters.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2LWg0RSVEeGGzu7fmW9pXw" annotatedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Encounter Section contains information describing the patient history of encounters. At a minimum,&#xD;
    current and pertinent historical encounters should be included; a full encounter history may be included. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cNl76B7pEeGEaLkc3UAsAg" name="EncountersSectionEntriesOptionalTemplateId" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNl76R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.22')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cNl76x7pEeGEaLkc3UAsAg" name="EncountersSectionEntriesOptionalCode" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNl77B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '46240-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cNvs4B7pEeGEaLkc3UAsAg" name="EncountersSectionTitle" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNvs4R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cNvs4h7pEeGEaLkc3UAsAg" name="EncountersSectionText" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNvs4x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOLxwB7pEeGEaLkc3UAsAg" name="EncountersSectionEncountersActivity" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOLxwR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::EncountersActivites))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KVkvoBVgEeGQCvUGzi1kDQ" general="_4yj2wBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_cOLxwh7pEeGEaLkc3UAsAg" name="getConsolEncountersActivities" isQuery="true" bodyCondition="_cOLxxR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cOLxxR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cOLxwh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOLxxh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::EncountersActivites)).oclAsType(consol::EncountersActivites)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cOLxwx7pEeGEaLkc3UAsAg" type="_2LayQBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cOLxxB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LayQBSVEeGGzu7fmW9pXw" name="EncountersActivites">
      <ownedRule xmi:id="_2LayQRSVEeGGzu7fmW9pXw" name="EncountersActivitesHasIndications" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LayQhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(er : cda::EntryRelationship | er.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2LayQxSVEeGGzu7fmW9pXw" name="EncountersActivitesHasPractitioners" constrainedElement="_2LayQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LayRBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.performer->size() >= 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2LayRRSVEeGGzu7fmW9pXw" name="EncountersActivitesPractitionerRole" constrainedElement="_2LayQxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LayRhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.performer.assignedEntity.code->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cNvs5B7pEeGEaLkc3UAsAg" name="EncountersActivitesTemplateId" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNvs5R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.21')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cN420B7pEeGEaLkc3UAsAg" name="EncountersActivitesClassCode" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cN420R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::ENC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cN420h7pEeGEaLkc3UAsAg" name="EncountersActivitesMoodCode" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cN420x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentEncounterMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cN421B7pEeGEaLkc3UAsAg" name="EncountersActivitesId" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cN421R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cN421h7pEeGEaLkc3UAsAg" name="EncountersActivitesEffectiveTime" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cN421x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cg9j3h7pEeGEaLkc3UAsAg" name="EncountersActivitesIndication" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg9j3x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2LttMBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_cg9j4B7pEeGEaLkc3UAsAg" name="getIndication" isQuery="true" bodyCondition="_cg9j4x7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cg9j4x7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cg9j4B7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg9j5B7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication))->asSequence()->first().oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cg9j4R7pEeGEaLkc3UAsAg" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cg9j4h7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LiHABSVEeGGzu7fmW9pXw" name="ServiceDeliveryLocation">
      <ownedRule xmi:id="_2LiHARSVEeGGzu7fmW9pXw" name="ServiceDeliveryLocationHasParticipantRole">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LiHAhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participantRole->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2LiHAxSVEeGGzu7fmW9pXw" name="ServiceDeliveryLocationHasParticipantRoleLocation" constrainedElement="_2LiHARSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LiHBBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participantRole.classCode =  vocab::RoleClassRoot::SDLOC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2LiHBRSVEeGGzu7fmW9pXw" name="ServiceDeliveryLocationHasParticipantRoleCode" constrainedElement="_2LiHAxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LiHBhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participantRole.code->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2LiHBxSVEeGGzu7fmW9pXw" name="ServiceDeliveryLocationHasParticipantRoleCodeVocab" constrainedElement="_2LiHBRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LiHCBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participantRole.code.codeSystem = '2.16.840.1.113883.5.111'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2LiHCRSVEeGGzu7fmW9pXw" name="ServiceDeliveryLocationHasPlayingEntity" constrainedElement="_2LiHBxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LiHChSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participantRole.playingEntity->size()>0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2LiHCxSVEeGGzu7fmW9pXw" name="ServiceDeliveryLocationHasPlayingEntityPlace" constrainedElement="_2LiHCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LiHDBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participantRole.playingEntity.classCode = vocab::EntityClassRoot::PLC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOCn0B7pEeGEaLkc3UAsAg" name="ServiceDeliveryLocationTemplateId" constrainedElement="_2LiHABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOCn0R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOCn0x7pEeGEaLkc3UAsAg" name="ServiceDeliveryLocationTypeCode" constrainedElement="_2LiHABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOCn1B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.typeCode=vocab::ParticipationType::LOC</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2LtGIBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_51DLwEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Lu7UBSVEeGGzu7fmW9pXw" name="Encounter">
      <ownedComment xmi:id="_2Lu7URSVEeGGzu7fmW9pXw" annotatedElement="_2Lu7UBSVEeGGzu7fmW9pXw">
        <body>The encounter entry contains data describing the interactions between the patient and clinicians. Interaction includes both in-person and non-in-person encounters such as telephone and e-mail communication.</body>
      </ownedComment>
      <ownedRule xmi:id="_2Lu7UhSVEeGGzu7fmW9pXw" name="ConsolEncounterAdmissionSourceValueSet" constrainedElement="_2Lu7UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Lu7UxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->select( par : cda::Participant2 | par.typeCode = vocab::ParticipationType::ORG )->forAll( par : cda::Participant2 | par.participantRole->one(pr : cda::ParticipantRole | pr.code.codeSystem = '2.16.840.1.113883.3.88.12.80.33') )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOLxyB7pEeGEaLkc3UAsAg" name="ConsolEncounterClassCode" constrainedElement="_2Lu7UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOLxyR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::ENC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOViwB7pEeGEaLkc3UAsAg" name="ConsolEncounterId" constrainedElement="_2Lu7UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOViwR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOViwh7pEeGEaLkc3UAsAg" name="ConsolEncounterCode" constrainedElement="_2Lu7UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOViwx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.12' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOVixB7pEeGEaLkc3UAsAg" name="ConsolEncounterText" constrainedElement="_2Lu7UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOVixR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2L23IBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2L7voBSVEeGGzu7fmW9pXw" name="ImmunizationsSection">
      <ownedRule xmi:id="_cOVixx7pEeGEaLkc3UAsAg" name="ImmunizationsSectionEntriesOptionalTemplateId" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOViyB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.2.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOfTwR7pEeGEaLkc3UAsAg" name="ImmunizationsSectionEntriesOptionalCode" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOfTwh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11369-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOfTwx7pEeGEaLkc3UAsAg" name="ImmunizationsSectionTitle" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOfTxB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOfTxR7pEeGEaLkc3UAsAg" name="ImmunizationsSectionText" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOfTxh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOfTxx7pEeGEaLkc3UAsAg" name="ImmunizationsSectionImmunization" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOfTyB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::ImmunizationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QPw2IBVgEeGQCvUGzi1kDQ" general="_EuPloBVeEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_cOodsB7pEeGEaLkc3UAsAg" name="getConsolImmunizations" isQuery="true" bodyCondition="_cOodsx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cOodsx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cOodsB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOodtB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::ImmunizationActivity)).oclAsType(consol::ImmunizationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cOodsR7pEeGEaLkc3UAsAg" type="_2MAoIBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cOodsh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2MAoIBSVEeGGzu7fmW9pXw" name="ImmunizationActivity">
      <ownedComment xmi:id="_2MQfwhSVEeGGzu7fmW9pXw" annotatedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <body>&lt;p>An Immunization Activity describes immunization substance administrations that have actually occurred or are intended to occur. Immunization Activities in &quot;INT&quot; mood are reflections of immunizations a clinician intends a patient to receive. Immunization Activities in &quot;EVN&quot; mood reflect immunizations actually received.&lt;/p>

&lt;p>An Immunization Activity is very similar to a Medication Activity with some key differentiators. The drug code system is constrained to CVX codes. Administration timing is less complex. Patient refusal reasons should be captured. All vaccines administered should be fully documented in the patient's permanent medical record. Healthcare providers who administer vaccines covered by the National Childhood Vaccine Injury Act are required to ensure that the permanent medical record of the recipient indicates: &lt;/p>

&lt;ol>
&lt;li>Date of administration &lt;/li>
&lt;li>Vaccine manufacturer &lt;/li>
&lt;li>Vaccine lot number &lt;/li>
&lt;li>Name and title of the person who administered the vaccine and the address of the clinic or facility where the permanent record will reside &lt;/li>
&lt;li>Vaccine information statement (VIS) 
&lt;ol>
&lt;li>date printed on the VIS&lt;/li>
&lt;li>date VIS given to patient or parent/guardian.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol></body>
      </ownedComment>
      <ownedRule xmi:id="_cOodtR7pEeGEaLkc3UAsAg" name="ImmunizationActivityTemplateId" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOodth7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.52')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOoduB7pEeGEaLkc3UAsAg" name="ImmunizationActivityClassCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOoduR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOyOsB7pEeGEaLkc3UAsAg" name="ImmunizationActivityId" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOyOsR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOyOsh7pEeGEaLkc3UAsAg" name="ImmunizationActivityCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOyOsx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.12.292' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOyOtB7pEeGEaLkc3UAsAg" name="ImmunizationActivityStatusCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOyOtR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cOyOth7pEeGEaLkc3UAsAg" name="ImmunizationActivityEffectiveTime" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cOyOtx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (self.effectiveTime->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cO7_sB7pEeGEaLkc3UAsAg" name="ImmunizationActivityRouteCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cO7_sR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in (&#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cO7_sh7pEeGEaLkc3UAsAg" name="ImmunizationActivityApproachSiteCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cO7_sx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cO7_tB7pEeGEaLkc3UAsAg" name="ImmunizationActivityDoseQuantity" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cO7_tR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cPFJoB7pEeGEaLkc3UAsAg" name="ImmunizationActivityNegationInd" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cPFJoR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cPFJoh7pEeGEaLkc3UAsAg" name="ImmunizationActivityText" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cPFJox7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cPFJpB7pEeGEaLkc3UAsAg" name="ImmunizationActivityRepeatNumber" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cPFJpR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cPFJph7pEeGEaLkc3UAsAg" name="ImmunizationActivityAdministrationUnitCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cPFJpx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.administrationUnitCode.oclIsUndefined() or self.administrationUnitCode.isNullFlavorUndefined()) implies (not self.administrationUnitCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cg9j9B7pEeGEaLkc3UAsAg" name="ImmunizationActivityDrugVehicle" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg9j9R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::DrugVehicle))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chHU1R7pEeGEaLkc3UAsAg" name="ImmunizationActivityIndication" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chHU1h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chHU3B7pEeGEaLkc3UAsAg" name="ImmunizationActivityInstructions" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chHU3R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chHU4x7pEeGEaLkc3UAsAg" name="ImmunizationActivityMedicationDispense" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chHU5B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationDispense) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chQewB7pEeGEaLkc3UAsAg" name="ImmunizationActivityReactionObservation" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chQewR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chkAwB7pEeGEaLkc3UAsAg" name="ImmunizationActivityImmunizationRefusalReason" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chkAwR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ImmunizationRefusalReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ckZSah7pEeGEaLkc3UAsAg" name="ImmunizationActivityMedicationSupplyOrder" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckZSax7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationSupplyOrder) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2MQfwxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_chHU0B7pEeGEaLkc3UAsAg" name="getDrugVehicle" isQuery="true" bodyCondition="_chHU0x7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_chHU0x7pEeGEaLkc3UAsAg" name="body" constrainedElement="_chHU0B7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_chHU1B7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::DrugVehicle))->asSequence()->first().oclAsType(consol::DrugVehicle)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_chHU0R7pEeGEaLkc3UAsAg" type="_VBXq8BUTEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_chHU0h7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_chHU1x7pEeGEaLkc3UAsAg" name="getIndication" isQuery="true" bodyCondition="_chHU2h7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_chHU2h7pEeGEaLkc3UAsAg" name="body" constrainedElement="_chHU1x7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_chHU2x7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication))->asSequence()->first().oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_chHU2B7pEeGEaLkc3UAsAg" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_chHU2R7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_chHU3h7pEeGEaLkc3UAsAg" name="getInstructions" isQuery="true" bodyCondition="_chHU4R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_chHU4R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_chHU3h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_chHU4h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->first().oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_chHU3x7pEeGEaLkc3UAsAg" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_chHU4B7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_chHU5R7pEeGEaLkc3UAsAg" name="getMedicationDispense" isQuery="true" bodyCondition="_chHU6B7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_chHU6B7pEeGEaLkc3UAsAg" name="body" constrainedElement="_chHU5R7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_chHU6R7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationDispense))->asSequence()->first().oclAsType(consol::MedicationDispense)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_chHU5h7pEeGEaLkc3UAsAg" type="_DpoGkBUUEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_chHU5x7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_chQewh7pEeGEaLkc3UAsAg" name="getReactionObservation" isQuery="true" bodyCondition="_chQexR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_chQexR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_chQewh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_chQexh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation))->asSequence()->first().oclAsType(consol::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_chQewx7pEeGEaLkc3UAsAg" type="_2E_aIRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_chQexB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_chkAwh7pEeGEaLkc3UAsAg" name="getImmunizationRefusalReason" isQuery="true" bodyCondition="_chkAxR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_chkAxR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_chkAwh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_chkAxh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ImmunizationRefusalReason))->asSequence()->first().oclAsType(consol::ImmunizationRefusalReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_chkAwx7pEeGEaLkc3UAsAg" type="__qYdcBVNEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_chkAxB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ckicQB7pEeGEaLkc3UAsAg" name="getMedicationSupplyOrder" isQuery="true" bodyCondition="_ckicQx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ckicQx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ckicQB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckicRB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationSupplyOrder))->asSequence()->first().oclAsType(consol::MedicationSupplyOrder)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ckicQR7pEeGEaLkc3UAsAg" type="_j3aTQBrTEeGo461UQq-B1g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ckicQh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2MV_UBSVEeGGzu7fmW9pXw" name="PayersSection">
      <ownedComment xmi:id="_2NICcBSVEeGGzu7fmW9pXw" annotatedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    &lt;i>Payers&lt;/i> contains data on the patient's payers, whether a 'third party' insurance,&#xD;
    self-pay, other payer or guarantor, or some combination of payers, and is used to define which entity is the&#xD;
    responsible fiduciary for the financial aspects of a patient's care.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Each unique&#xD;
    instance of a payer and all the pertinent data needed to contact, bill to, and collect from that payer should be&#xD;
    included. Authorization information that can be used to define pertinent referral, authorization tracking number,&#xD;
    procedure, therapy, intervention, device, or similar authorizations for the patient or provider, or both should be&#xD;
    included. At a minimum, the patient's pertinent current payment sources should be listed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The CCD&#xD;
    represents the sources of payment as a coverage act, which identifies all of the insurance policies or government or&#xD;
    other programs that cover some or all of the patient's healthcare expenses. The policies or programs are sequenced by&#xD;
    order of preference. Each policy or program identifies the covered party with respect to the payer, so that the&#xD;
    identifiers can be recorded.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2NICcRSVEeGGzu7fmW9pXw" annotatedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <body>The Payers section contains data on the patient's payers, whether a 'third party' insurance, self-pay, other payer or&#xD;
guarantor, or some combination.</body>
      </ownedComment>
      <ownedComment xmi:id="_2MV_URSVEeGGzu7fmW9pXw" annotatedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Payers Section contains data on the patient's payers, whether a 'third party' insurance, self-pay,&#xD;
    other payer or guarantor, or some combination. At a minimum, the patient's pertinent current payment sources should be&#xD;
    listed. If no payment sources are supplied, the reason shall be supplied as free text in the narrative block (e.g., Not&#xD;
    Insured, Payer Unknown, Medicare Pending, et cetera). &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cPFJqB7pEeGEaLkc3UAsAg" name="PayersSectionTemplateId" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cPFJqR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cPO6oB7pEeGEaLkc3UAsAg" name="PayersSectionCode" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cPO6oR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '48768-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cPO6oh7pEeGEaLkc3UAsAg" name="PayersSectionTitle" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cPO6ox7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cPO6pB7pEeGEaLkc3UAsAg" name="PayersSectionText" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cPO6pR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NICchSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cgqo6x7pEeGEaLkc3UAsAg" name="getCoverageActivity" isQuery="true" bodyCondition="_cgqo7h7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cgqo7h7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cgqo6x7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgqo7x7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::CoverageActivity))->asSequence()->first().oclAsType(consol::CoverageActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cgqo7B7pEeGEaLkc3UAsAg" type="_Cg3pkBUmEeGvPruliC3crg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cgqo7R7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Ma30BSVEeGGzu7fmW9pXw" name="InsuranceProvider">
      <ownedRule xmi:id="_2NBUwxSVEeGGzu7fmW9pXw" name="InsuranceProviderInformationSource">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2NBUxBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;&#xA;  or not self.getSection().informant->isEmpty()&#xD;&#xA;  or not self.getClinicalDocument().informant->isEmpty()&#xD;&#xA;  or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;&#xA;  or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;&#xA;   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;&#xA;   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2NB70BSVEeGGzu7fmW9pXw" name="InsuranceProviderSequenceNumber">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2NB70RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(rel : cda::EntryRelationship | not rel.sequenceNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma30xSVEeGGzu7fmW9pXw" name="InsuranceProviderPaymentProviders">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma31BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->exists(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma31RSVEeGGzu7fmW9pXw" name="InsuranceProviderPayerEntryID">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma31hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | not a.id.root->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma31xSVEeGGzu7fmW9pXw" name="InsuranceProviderHealthInsuranceType" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma32BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.code.codeSystem = '2.16.840.1.113883.6.255.1336' and (a.code.code='12' or a.code.code='13' or a.code.code='14' or a.code.code='15' or a.code.code='16' or a.code.code='41' or a.code.code='42' or a.code.code='43' or a.code.code='47' or a.code.code='AP' or a.code.code='C1' or a.code.code='CO' or a.code.code='CP' or a.code.code='D' or a.code.code='DB' or a.code.code='EP' or a.code.code='FF' or a.code.code='GP' or a.code.code='HM' or a.code.code='HN' or a.code.code='HS' or a.code.code='IN' or a.code.code='IP' or a.code.code='LC' or a.code.code='LD' or a.code.code='LI' or a.code.code='LT' or a.code.code='MA' or a.code.code='MB' or a.code.code='MC' or a.code.code='MH' or a.code.code='MI' or a.code.code='MP' or a.code.code='OT' or a.code.code='PE' or a.code.code='PL' or a.code.code='PP' or a.code.code='PR' or a.code.code='PS' or a.code.code='QM' or a.code.code='RP' or a.code.code='SP' or a.code.code='TF' or a.code.code='WC' or a.code.code='WU'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma32RSVEeGGzu7fmW9pXw" name="InsuranceProviderInsuranceInformation" constrainedElement="_2Ma32xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma32hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.performer->exists (perm : cda::Performer2 | perm.typeCode = vocab::ParticipationPhysicalPerformer::PRF and perm.assignedEntity->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma32xSVEeGGzu7fmW9pXw" name="InsuranceProviderInsuranceInfoSourceID" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma33BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.performer->exists (perm : cda::Performer2 | perm.typeCode = vocab::ParticipationPhysicalPerformer::PRF and perm.assignedEntity.id->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma33RSVEeGGzu7fmW9pXw" name="InsuranceProviderInsuranceInfoSourceAddr" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma33hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.performer->exists (perm : cda::Performer2 | perm.typeCode = vocab::ParticipationPhysicalPerformer::PRF and perm.assignedEntity.addr->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma35RSVEeGGzu7fmW9pXw" name="InsuranceProviderHealthPlanCoverageStartTime" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma35hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.participant->exists (par : cda::Participant2 | par.typeCode = vocab::ParticipationType::COV and par.time.low->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma35xSVEeGGzu7fmW9pXw" name="InsuranceProviderHealthPlanCoverageStopTime" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma36BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.participant->exists (par : cda::Participant2 | par.typeCode = vocab::ParticipationType::COV and par.time.high->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma36RSVEeGGzu7fmW9pXw" name="InsuranceProviderPatientInformation">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma36hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.participant->exists (par : cda::Participant2 | par.typeCode = vocab::ParticipationType::COV and par.participantRole.classCode = vocab::RoleClassRoot::PAT))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma36xSVEeGGzu7fmW9pXw" name="InsuranceProviderMemberId" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma37BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.participant->exists (par : cda::Participant2 | par.typeCode = vocab::ParticipationType::COV and par.participantRole.classCode = vocab::RoleClassRoot::PAT and par.participantRole.id->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma37RSVEeGGzu7fmW9pXw" name="InsuranceProviderMemberIdRoot" constrainedElement="_2Ma36xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma37hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.participant->exists (par : cda::Participant2 | par.typeCode = vocab::ParticipationType::COV and par.participantRole.classCode = vocab::RoleClassRoot::PAT and par.participantRole.id.root->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma38xSVEeGGzu7fmW9pXw" name="InsuranceProviderRelationshipToSubscriber" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma39BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.participant->exists (par : cda::Participant2 | par.typeCode = vocab::ParticipationType::COV and par.participantRole.classCode = vocab::RoleClassRoot::PAT and par.participantRole.code->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma39RSVEeGGzu7fmW9pXw" name="InsuranceProviderRelationshipToSubscriberCodeSystem" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma39hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.participant->exists (par : cda::Participant2 | par.typeCode = vocab::ParticipationType::COV and par.participantRole.classCode = vocab::RoleClassRoot::PAT and par.participantRole.code.codeSystem = '2.16.840.1.113883.5.111' and (par.participantRole.code.code = 'FAMDEP' or par.participantRole.code.code='HANDIC' or par.participantRole.code.code ='INJ' or par.participantRole.code.code='SELF' or par.participantRole.code.code='SPON' or par.participantRole.code.code ='STUD' or par.participantRole.code.code='FSTUD' or par.participantRole.code.code='PSTUD')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma3_RSVEeGGzu7fmW9pXw" name="InsuranceProviderPatientName">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma3_hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.participant->exists (par : cda::Participant2 | par.typeCode = vocab::ParticipationType::COV and par.participantRole.classCode = vocab::RoleClassRoot::PAT and par.participantRole.playingEntity.name->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma4ARSVEeGGzu7fmW9pXw" name="InsuranceProviderSubscriberInformation" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma4AhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.participant->exists(par : cda::Participant2 | par.typeCode = vocab::ParticipationType::HLD))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma4BRSVEeGGzu7fmW9pXw" name="InsuranceProviderSubscriberId" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma4BhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.participant->exists(par : cda::Participant2 | par.typeCode = vocab::ParticipationType::HLD and par.participantRole.id->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma4BxSVEeGGzu7fmW9pXw" name="InsuranceProviderSubscriberIdRoot" constrainedElement="_2Ma4BRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma4CBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.participant->exists(par : cda::Participant2 | par.typeCode = vocab::ParticipationType::HLD and par.participantRole.id.root->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma4CRSVEeGGzu7fmW9pXw" name="InsuranceProviderSubscriberAddress" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma4ChSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.participant->exists(par : cda::Participant2 | par.typeCode = vocab::ParticipationType::HLD and par.participantRole.addr->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma4ExSVEeGGzu7fmW9pXw" name="InsuranceProviderFinancialResponsibilityPartyType" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma4FBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.performer->exists(per : cda::Performer2 | per.typeCode = vocab::ParticipationPhysicalPerformer::PRF and per.assignedEntity.code->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma4FRSVEeGGzu7fmW9pXw" name="InsuranceProviderFinancialResponsibilityPartyTypeCode" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma4FhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.performer->exists(per : cda::Performer2 | per.assignedEntity.code.codeSystem = '2.16.840.1.113883.5.110'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ma4GxSVEeGGzu7fmW9pXw" name="InsuranceProviderFinancialResponsibilityPartyAddress">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ma4HBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->select(act : cda::Act | act.oclIsKindOf(consol::PayerEntry))->forAll(a : cda::Act | a.performer->exists(per : cda::Performer2 | per.assignedEntity.addr->size() > 0))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cP0wgB7pEeGEaLkc3UAsAg" name="InsuranceProviderClassCode" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cP0wgR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cP0wgh7pEeGEaLkc3UAsAg" name="InsuranceProviderMoodCode" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cP0wgx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::DEF</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cP0whB7pEeGEaLkc3UAsAg" name="InsuranceProviderId" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cP0whR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cP0whh7pEeGEaLkc3UAsAg" name="InsuranceProviderCode" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cP0whx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '48768-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cP-hgB7pEeGEaLkc3UAsAg" name="InsuranceProviderStatusCode" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cP-hgR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQbNeB7pEeGEaLkc3UAsAg" name="InsuranceProviderPayerEntry" constrainedElement="_2Ma30BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQbNeR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(cda::Act) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NG0UBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cQbNeh7pEeGEaLkc3UAsAg" name="getPayerEntries" isQuery="true" bodyCondition="_cQbNfR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cQbNfR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cQbNeh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQbNfh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(cda::Act)).oclAsType(cda::Act)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cQbNex7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cQbNfB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2MyrQxSVEeGGzu7fmW9pXw" name="PayerEntry">
      <ownedComment xmi:id="_2NAGoRSVEeGGzu7fmW9pXw" annotatedElement="_2MyrQxSVEeGGzu7fmW9pXw">
        <body>A policy activity represents the policy or program providing the coverage. The person for whom payment is being provided (i.e. the patient) is the covered party. The subscriber of the policy or program is represented as a participant that is the holder the coverage. The payer is represented as the performer of the policy activity.</body>
      </ownedComment>
      <ownedRule xmi:id="_2M8cQBSVEeGGzu7fmW9pXw" name="PayerEntryPayerEntityIsRequired">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2M8cQRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.performer->one(perf : cda::Performer2 | perf.typeCode = vocab::ParticipationPhysicalPerformer::PRF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2M9DUBSVEeGGzu7fmW9pXw" name="PayerEntryCoveredPartyIsRequired">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2M9DURSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->one(part : cda::Participant2 | part.typeCode = vocab::ParticipationType::COV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2M9qYBSVEeGGzu7fmW9pXw" name="PayerEntryCoveredPartyTime">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2M9qYRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->one(part : cda::Participant2 | part.typeCode = vocab::ParticipationType::COV&#xD;&#xA;  implies not part.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2M-RcBSVEeGGzu7fmW9pXw" name="PayerEntrySubscriberIsAllowed">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2M-RcRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->one(part : cda::Participant2 | part.typeCode = vocab::ParticipationType::HLD)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2M-4gBSVEeGGzu7fmW9pXw" name="PayerEntrySubscriberTime">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2M-4gRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->one(part : cda::Participant2 | part.typeCode = vocab::ParticipationType::HLD&#xD;&#xA;  implies not part.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2M_fkBSVEeGGzu7fmW9pXw" name="PayerEntryEntryRelationshipREFR">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2M_fkRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(rel : cda::EntryRelationship | rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2M_fkxSVEeGGzu7fmW9pXw" name="PayerEntryEntryRelationshipTarget">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2M_flBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(rel : cda::EntryRelationship | rel.act.oclIsKindOf(consol::AuthorizationActivity)&#xD;&#xA;  or rel.act.oclIsKindOf(consol::CoveragePlanDescription))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQISgB7pEeGEaLkc3UAsAg" name="PayerEntryClassCode" constrainedElement="_2MyrQxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQISgR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQISgh7pEeGEaLkc3UAsAg" name="PayerEntryMoodCode" constrainedElement="_2MyrQxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQISgx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQIShB7pEeGEaLkc3UAsAg" name="PayerEntryId" constrainedElement="_2MyrQxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQIShR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQIShh7pEeGEaLkc3UAsAg" name="PayerEntryStatusCode" constrainedElement="_2MyrQxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQIShx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQRccB7pEeGEaLkc3UAsAg" name="PayerEntryPayerEntity" constrainedElement="_2MyrQxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQRccR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(cda::Act))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQRcfB7pEeGEaLkc3UAsAg" name="PayerEntryCoveredParty" constrainedElement="_2MyrQxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQRcfR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(cda::ParticipantRole))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQbNcR7pEeGEaLkc3UAsAg" name="PayerEntrySubscriber" constrainedElement="_2MyrQxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQbNch7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(cda::ParticipantRole))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NAGohSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cQRcch7pEeGEaLkc3UAsAg" name="getPayerEntity" isQuery="true" bodyCondition="_cQRcdR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cQRcdR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cQRcch7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQRcdh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(cda::Act))->asSequence()->first().oclAsType(cda::Act)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cQRccx7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cQRcdB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cQRcfh7pEeGEaLkc3UAsAg" name="getCoveredParty" isQuery="true" bodyCondition="_cQRcgR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cQRcgR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cQRcfh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQRcgh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole))->asSequence()->first().oclAsType(cda::ParticipantRole)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cQRcfx7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cQRcgB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cQbNcx7pEeGEaLkc3UAsAg" name="getSubscriber" isQuery="true" bodyCondition="_cQbNdh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cQbNdh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cQbNcx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQbNdx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole))->asSequence()->first().oclAsType(cda::ParticipantRole)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cQbNdB7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cQbNdR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2M4x4xSVEeGGzu7fmW9pXw" name="CoveredParty">
      <ownedRule xmi:id="_cQRcdx7pEeGEaLkc3UAsAg" name="CoveredPartyId" constrainedElement="_2M4x4xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQRceB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQRceh7pEeGEaLkc3UAsAg" name="CoveredPartyCode" constrainedElement="_2M4x4xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQRcex7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2M6AABSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2M7OIBSVEeGGzu7fmW9pXw" name="PolicySubscriber">
      <ownedRule xmi:id="_cQRcgx7pEeGEaLkc3UAsAg" name="PolicySubscriberId" constrainedElement="_2M7OIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQRchB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2M71MBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NIpgBSVEeGGzu7fmW9pXw" name="MedicationsSection">
      <ownedComment xmi:id="_2NP-QBSVEeGGzu7fmW9pXw" annotatedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Medications section defines a patient's current medications and pertinent medication&#xD;
    history. At a minimum, the currently active medications should be listed, with an entire medication history as an&#xD;
    option, particularly when the summary document is used for comprehensive data export. The section may also include a&#xD;
    patient's prescription history, and enables the determination of the source of a medication list (e.g. from a pharmacy&#xD;
    system vs. from the patient).&#xD;
&lt;/p>&#xD;
&lt;p>Reconciliation of conflicting medication information from various sources is enabled both by indicating the source of information and by indicating whether the source is reporting intended or actual medication use. For instance, a physician may intend for a patient to be on a particular dose, but the patient may actually be taking a different dose; a pharmacy may fill a prescription for a particular dose only to then have the patient's physician lower the dose without notifying the pharmacy. Therefore, medication and supply activities can be expressed in CCD in either the &quot;EVN&quot; (event) mood or the &quot;INT&quot; (intent) mood. Medication activities in &quot;INT&quot; mood are not orders (which are represented in the Plan of Care section), but rather are reflections of what a clinician intends a patient to be taking. Medication activities in &quot;EVN&quot; mood reflect actual use. A pharmacy system will typically report what was actually filled (supply event), along with intended use (substance administration intent). A physician will often report intended use (substance administration and supply intent). A patient or family member will typically report actual use (substance administration event).&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2NP-QRSVEeGGzu7fmW9pXw" annotatedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <body>The medications section shall contain a description of the relevant medications for the patient, e.g. an ambulatory&#xD;
prescription list. It shall include entries for medications as described in the Entry Content Module.</body>
      </ownedComment>
      <ownedComment xmi:id="_2NIpgRSVEeGGzu7fmW9pXw" annotatedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <body>The Medications Section contains information about the relevant medications for the patient. At a minimum, the currently active medications should be listed.</body>
      </ownedComment>
      <ownedRule xmi:id="_2NJ3shSVEeGGzu7fmW9pXw" name="MedicationsSectionHasMedicationOrSupplyActivity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2NJ3sxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSubstanceAdministrations()->exists(activity : cda::SubstanceAdministration | activity.oclIsKindOf(consol::MedicationActivity))&#xD;&#xA;   or self.getSupplies()->exists(activity : cda::Supply | activity.oclIsKindOf(consol::SupplyActivity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQbNgB7pEeGEaLkc3UAsAg" name="MedicationsSectionEntriesOptionalTemplateId" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQbNgR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQkXYB7pEeGEaLkc3UAsAg" name="MedicationsSectionEntriesOptionalCode" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQkXYR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10160-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQkXYh7pEeGEaLkc3UAsAg" name="MedicationsSectionTitle" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQkXYx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQkXZB7pEeGEaLkc3UAsAg" name="MedicationsSectionText" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQkXZR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQkXZh7pEeGEaLkc3UAsAg" name="MedicationsSectionMedication" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQkXZx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UeEpoBVgEeGQCvUGzi1kDQ" general="_iAoXEBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_cQuIYB7pEeGEaLkc3UAsAg" name="getConsolMedications" isQuery="true" bodyCondition="_cQuIYx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cQuIYx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cQuIYB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQuIZB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cQuIYR7pEeGEaLkc3UAsAg" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cQuIYh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NP-QxSVEeGGzu7fmW9pXw" name="PlanOfCareSection">
      <ownedComment xmi:id="_2N0mCRSVEeGGzu7fmW9pXw" annotatedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <body>&lt;p>The Assessment section (also called impression or diagnoses) represents the clinician's conclusions and working assumptions that will guide treatment of the patient. The assessment formulates a specific plan or set of recommendations. The assessment may be a list of specific disease entities or a narrative block.&lt;/p>&#xD;
&lt;p>The Plan section contains data that defines pending orders, interventions, encounters, services, and procedures for the patient. It is limited to prospective, unfulfilled, or incomplete orders and requests only. All active, incomplete, or pending orders, appointments, referrals, procedures, services, or any other pending event of clinical significance to the current care of the patient should be listed unless constrained due to privacy issues. The plan may also contain information about ongoing care of the patient and information regarding goals and clinical reminders. Clinical reminders are placed here to provide prompts for disease prevention and management, patient safety, and health-care quality improvements, including widely accepted performance measures. The plan may also indicate that patient education was given or will be provided.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2N0mChSVEeGGzu7fmW9pXw" annotatedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The plan of care section contains data defining pending orders, interventions, encounters, services, and&#xD;
    procedures for the patient. It is limited to prospective, unfulfilled, or incomplete orders and requests only. All&#xD;
    active, incomplete, or pending orders, appointments, referrals, procedures, services, or any other pending event of&#xD;
    clinical significance to the current and ongoing care of the patient should be listed, unless constrained due to issues&#xD;
    of privacy.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The plan of care section also contains information regarding goals and clinical reminders. Clinical&#xD;
    reminders are placed here for purposes of providing prompts that may be used for disease prevention, disease&#xD;
    management, patient safety, and healthcare quality improvements, including widely accepted performance measures.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2N0mCxSVEeGGzu7fmW9pXw" annotatedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <body>The care plan section shall contain a narrative description of the expectations for care including proposals, goals, and&#xD;
order requests for monitoring, tracking, or improving the condition of the patient.</body>
      </ownedComment>
      <ownedComment xmi:id="_2NP-RBSVEeGGzu7fmW9pXw" annotatedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Plan of Care Section contains information about the expectations for care to be provided including&#xD;
    proposed interventions and goals for improving the condition of the patient. &#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A plan of care section varies from the assessment and plan section defined above in that it does not&#xD;
    include a physician assessment of the patient condition. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cQuIZR7pEeGEaLkc3UAsAg" name="PlanOfCareSectionTemplateId" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQuIZh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQuIaB7pEeGEaLkc3UAsAg" name="PlanOfCareSectionCode" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQuIaR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '18776-5' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQuIah7pEeGEaLkc3UAsAg" name="PlanOfCareSectionTitle" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQuIax7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQ35YB7pEeGEaLkc3UAsAg" name="PlanOfCareSectionText" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQ35YR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRBDUB7pEeGEaLkc3UAsAg" name="PlanOfCareSectionPlanOfCareActivityAct" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRBDUR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PlanOfCareActivityAct))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRK0Uh7pEeGEaLkc3UAsAg" name="PlanOfCareSectionPlanOfCareActivityEncounter" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRK0Ux7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRUlUh7pEeGEaLkc3UAsAg" name="PlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRUlUx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRdvRB7pEeGEaLkc3UAsAg" name="PlanOfCareSectionPlanOfCareActivityProcedure" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRdvRR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRngRB7pEeGEaLkc3UAsAg" name="PlanOfCareSectionPlanOfCareActivitySubstanceAdministration" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRngRR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRwqNB7pEeGEaLkc3UAsAg" name="PlanOfCareSectionPlanOfCareActivitySupply" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRwqNR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(consol::PlanOfCareActivitySupply))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_h0yLgBnTEeGs5a462vYX5Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cRBDUh7pEeGEaLkc3UAsAg" name="getPlanOfCareActivityAct" isQuery="true" bodyCondition="_cRBDVR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cRBDVR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cRBDUh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRBDVh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlanOfCareActivityAct))->asSequence()->first().oclAsType(consol::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cRBDUx7pEeGEaLkc3UAsAg" type="_2NWE5xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cRBDVB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cRK0VB7pEeGEaLkc3UAsAg" name="getPlanOfCareActivityEncounter" isQuery="true" bodyCondition="_cRK0Vx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cRK0Vx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cRK0VB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRK0WB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter))->asSequence()->first().oclAsType(consol::PlanOfCareActivityEncounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cRK0VR7pEeGEaLkc3UAsAg" type="_2NWFBBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cRK0Vh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cRUlVB7pEeGEaLkc3UAsAg" name="getPlanOfCareActivityObservation" isQuery="true" bodyCondition="_cRUlVx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cRUlVx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cRUlVB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRUlWB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlanOfCareActivityObservation))->asSequence()->first().oclAsType(consol::PlanOfCareActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cRUlVR7pEeGEaLkc3UAsAg" type="_2NcLjhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cRUlVh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cRdvRh7pEeGEaLkc3UAsAg" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_cRdvSR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cRdvSR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cRdvRh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRdvSh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->first().oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cRdvRx7pEeGEaLkc3UAsAg" type="_2NiSKhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cRdvSB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cRngRh7pEeGEaLkc3UAsAg" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_cRngSR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cRngSR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cRngRh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRngSh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->first().oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cRngRx7pEeGEaLkc3UAsAg" type="_2NoYwxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cRngSB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cRwqNh7pEeGEaLkc3UAsAg" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_cRwqOR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cRwqOR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cRwqNh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRwqOh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->first().oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cRwqNx7pEeGEaLkc3UAsAg" type="_2NoY5BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cRwqOB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NWE5xSVEeGGzu7fmW9pXw" name="PlanOfCareActivityAct">
      <ownedRule xmi:id="_2NWE6BSVEeGGzu7fmW9pXw" name="PlanOfCareActivityActMoodCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2NWE6RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentActMood::INT or self.moodCode = vocab::x_DocumentActMood::ARQ&#xD;&#xA;  or self.moodCode = vocab::x_DocumentActMood::PRMS or self.moodCode = vocab::x_DocumentActMood::PRP&#xD;&#xA;  or self.moodCode = vocab::x_DocumentActMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQ35Yh7pEeGEaLkc3UAsAg" name="PlanOfCareActivityActTemplateId" constrainedElement="_2NWE5xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQ35Yx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQ35ZR7pEeGEaLkc3UAsAg" name="PlanOfCareActivityActMoodCode" constrainedElement="_2NWE5xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQ35Zh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cQ35Zx7pEeGEaLkc3UAsAg" name="PlanOfCareActivityActId" constrainedElement="_2NWE5xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cQ35aB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NWE_RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NWFBBSVEeGGzu7fmW9pXw" name="PlanOfCareActivityEncounter">
      <ownedRule xmi:id="_2NWFBRSVEeGGzu7fmW9pXw" name="PlanOfCareActivityEncounterMoodCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2NWFBhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentEncounterMood::INT or self.moodCode = vocab::x_DocumentEncounterMood::ARQ&#xD;&#xA;  or self.moodCode = vocab::x_DocumentEncounterMood::PRMS or self.moodCode = vocab::x_DocumentEncounterMood::PRP&#xD;&#xA;  or self.moodCode = vocab::x_DocumentEncounterMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRBDVx7pEeGEaLkc3UAsAg" name="PlanOfCareActivityEncounterTemplateId" constrainedElement="_2NWFBBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRBDWB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRBDWh7pEeGEaLkc3UAsAg" name="PlanOfCareActivityEncounterMoodCode" constrainedElement="_2NWFBBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRBDWx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRK0UB7pEeGEaLkc3UAsAg" name="PlanOfCareActivityEncounterId" constrainedElement="_2NWFBBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRK0UR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NcLhxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NcLjhSVEeGGzu7fmW9pXw" name="PlanOfCareActivityObservation">
      <ownedRule xmi:id="_2NcLjxSVEeGGzu7fmW9pXw" name="PlanOfCareActivityObservationMoodCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2NcLkBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_ActMoodDocumentObservation::INT or self.moodCode = vocab::x_ActMoodDocumentObservation::GOL&#xD;&#xA;  or self.moodCode = vocab::x_ActMoodDocumentObservation::PRMS or self.moodCode = vocab::x_ActMoodDocumentObservation::PRP&#xD;&#xA;  or self.moodCode = vocab::x_ActMoodDocumentObservation::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRK0WR7pEeGEaLkc3UAsAg" name="PlanOfCareActivityObservationTemplateId" constrainedElement="_2NcLjhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRK0Wh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRK0XB7pEeGEaLkc3UAsAg" name="PlanOfCareActivityObservationMoodCode" constrainedElement="_2NcLjhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRK0XR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRUlUB7pEeGEaLkc3UAsAg" name="PlanOfCareActivityObservationId" constrainedElement="_2NcLjhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRUlUR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NiSIxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NiSKhSVEeGGzu7fmW9pXw" name="PlanOfCareActivityProcedure">
      <ownedRule xmi:id="_2NiSKxSVEeGGzu7fmW9pXw" name="PlanOfCareActivityProcedureMoodCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2NiSLBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentProcedureMood::INT or self.moodCode = vocab::x_DocumentProcedureMood::ARQ&#xD;&#xA;  or self.moodCode = vocab::x_DocumentProcedureMood::PRMS or self.moodCode = vocab::x_DocumentProcedureMood::PRP&#xD;&#xA;  or self.moodCode = vocab::x_DocumentProcedureMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRUlWR7pEeGEaLkc3UAsAg" name="PlanOfCareActivityProcedureTemplateId" constrainedElement="_2NiSKhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRUlWh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRdvQB7pEeGEaLkc3UAsAg" name="PlanOfCareActivityProcedureMoodCode" constrainedElement="_2NiSKhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRdvQR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRdvQh7pEeGEaLkc3UAsAg" name="PlanOfCareActivityProcedureId" constrainedElement="_2NiSKhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRdvQx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NiSPhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NoYwxSVEeGGzu7fmW9pXw" name="PlanOfCareActivitySubstanceAdministration">
      <ownedRule xmi:id="_2NoYxBSVEeGGzu7fmW9pXw" name="PlanOfCareActivitySubstanceAdministrationMoodCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2NoYxRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentSubstanceMood::INT or self.moodCode = vocab::x_DocumentSubstanceMood::RQO&#xD;&#xA;  or self.moodCode = vocab::x_DocumentSubstanceMood::PRMS or self.moodCode = vocab::x_DocumentSubstanceMood::PRP</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRdvSx7pEeGEaLkc3UAsAg" name="PlanOfCareActivitySubstanceAdministrationTemplateId" constrainedElement="_2NoYwxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRdvTB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRngQB7pEeGEaLkc3UAsAg" name="PlanOfCareActivitySubstanceAdministrationMoodCode" constrainedElement="_2NoYwxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRngQR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRngQh7pEeGEaLkc3UAsAg" name="PlanOfCareActivitySubstanceAdministrationId" constrainedElement="_2NoYwxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRngQx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NoY3RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NoY5BSVEeGGzu7fmW9pXw" name="PlanOfCareActivitySupply">
      <ownedRule xmi:id="_2NoY5RSVEeGGzu7fmW9pXw" name="PlanOfCareActivitySupplyMoodCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2NoY5hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentSubstanceMood::INT or self.moodCode = vocab::x_DocumentSubstanceMood::RQO&#xD;&#xA;  or self.moodCode = vocab::x_DocumentSubstanceMood::PRMS or self.moodCode = vocab::x_DocumentSubstanceMood::PRP</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRngSx7pEeGEaLkc3UAsAg" name="PlanOfCareActivitySupplyTemplateId" constrainedElement="_2NoY5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRngTB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRwqMB7pEeGEaLkc3UAsAg" name="PlanOfCareActivitySupplyMoodCode" constrainedElement="_2NoY5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRwqMR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cRwqMh7pEeGEaLkc3UAsAg" name="PlanOfCareActivitySupplyId" constrainedElement="_2NoY5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cRwqMx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NufZhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2N0mDRSVEeGGzu7fmW9pXw" name="PregnancyHistorySection">
      <ownedComment xmi:id="_2N0mDhSVEeGGzu7fmW9pXw" annotatedElement="_2N0mDRSVEeGGzu7fmW9pXw">
        <body>The pregnancy history section contains coded entries describing the patient history of pregnancies.</body>
      </ownedComment>
      <ownedRule xmi:id="_cR6bMB7pEeGEaLkc3UAsAg" name="PregnancyHistorySectionCode" constrainedElement="_2N0mDRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cR6bMR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10162-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cR6bMh7pEeGEaLkc3UAsAg" name="PregnancyHistorySectionPregnancyObservation" constrainedElement="_2N0mDRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cR6bMx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PregnancyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2OAzQBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cR6bNB7pEeGEaLkc3UAsAg" name="getPregnancyObservations" isQuery="true" bodyCondition="_cR6bNx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cR6bNx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cR6bNB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cR6bOB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PregnancyObservation)).oclAsType(consol::PregnancyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cR6bNR7pEeGEaLkc3UAsAg" type="_2N6soBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cR6bNh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2N6soBSVEeGGzu7fmW9pXw" name="PregnancyObservation">
      <ownedRule xmi:id="_cR6bOR7pEeGEaLkc3UAsAg" name="PregnancyObservationTemplateId" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cR6bOh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cR6bPB7pEeGEaLkc3UAsAg" name="PregnancyObservationClassCode" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cR6bPR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cR6bPh7pEeGEaLkc3UAsAg" name="PregnancyObservationMoodCode" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cR6bPx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSEMMB7pEeGEaLkc3UAsAg" name="PregnancyObservationCode" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSEMMR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSEMMh7pEeGEaLkc3UAsAg" name="PregnancyObservationStatusCode" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSEMMx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSNWIB7pEeGEaLkc3UAsAg" name="PregnancyObservationValue" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSNWIR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.code = '77386006' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSNWIh7pEeGEaLkc3UAsAg" name="PregnancyObservationEffectiveTime" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSNWIx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cluvFB7pEeGEaLkc3UAsAg" name="PregnancyObservationEstimatedDateOfDelivery" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cluvFR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::EstimatedDateOfDelivery) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2N6sxxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cluvFh7pEeGEaLkc3UAsAg" name="getEstimatedDateOfDelivery" isQuery="true" bodyCondition="_cluvGR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cluvGR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cluvFh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cluvGh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::EstimatedDateOfDelivery))->asSequence()->first().oclAsType(consol::EstimatedDateOfDelivery)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cluvFx7pEeGEaLkc3UAsAg" type="_vBswQBtpEeGT89b80j3MTg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cluvGB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OAzQRSVEeGGzu7fmW9pXw" name="ProceduresSection">
      <ownedComment xmi:id="_2OfUahSVEeGGzu7fmW9pXw" annotatedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <body>This section defines all interventional, surgical, diagnostic, or therapeutic procedures or treatments pertinent to the patient historically at the time the document is generated. The section is intended to include notable procedures, but can contain all procedures for the period of time being summarized. The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore this section contains procedure templates represented with three RIM classes: Act. Observation, and Procedure. Procedure act is for procedures the alter that physical condition of a patient (Splenectomy). Observation act is for procedures that result in new information about a patient but do not cause physical alteration (EEG). Act is for all other types of procedures (dressing change).&#xD;
The length of an encounter is documented in the documentationOf/encompassingEncounter/effectiveTime and length of service in documentationOf/ServiceEvent/effectiveTime.</body>
      </ownedComment>
      <ownedRule xmi:id="_2OfUZxSVEeGGzu7fmW9pXw" name="ProceduresSectionHasProcedureActivity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2OfUaBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.entry->select(e | e.act.oclIsKindOf(consol::ProcedureActivity))->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSNWJR7pEeGEaLkc3UAsAg" name="ProceduresSectionEntriesOptionalTemplateId" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSNWJh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.7.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSXHIB7pEeGEaLkc3UAsAg" name="ProceduresSectionTitle" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSXHIR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'Procedures')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gNO_cBVgEeGQCvUGzi1kDQ" general="_s9Ig4BVdEeGQCvUGzi1kDQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OAzVhSVEeGGzu7fmW9pXw" name="ExternalReference">
      <ownedRule xmi:id="_2OAzVxSVEeGGzu7fmW9pXw" name="ExternalReferenceHasNoCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2OAzWBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined() implies self.code.nullFlavor = vocab::NullFlavor::NA</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2OAzWRSVEeGGzu7fmW9pXw" name="ExternalReferenceHasReference">
        <ownedComment xmi:id="_2OAzWhSVEeGGzu7fmW9pXw">
          <body>External references are listed as either supporting documentation (typeCode='SPRT') or simply&#xD;
reference material (typeCode='REFR') for the reader. If this distinction is not supported by the&#xD;
source EMR system, the value of typeCode should be REFR.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2OAzWxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.reference->select(r| r.typeCode &lt;> vocab::x_ActRelationshipExternalReference::REFR and r.typeCode &lt;> vocab::x_ActRelationshipExternalReference::SPRT)->size() = 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2OAzXBSVEeGGzu7fmW9pXw" name="ExternalReferenceHasReferenceExternalDocument">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2OAzXRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.reference.externalDocument->select(ed | ed.classCode =  vocab::ActClassDocument::DOC and ed.moodCode =  vocab::ActMood::EVN )->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2OAzXhSVEeGGzu7fmW9pXw" name="ExternalReferenceHasReferenceExternalDocumentID">
        <ownedComment xmi:id="_2OAzXxSVEeGGzu7fmW9pXw">
          <body>A link to the original document may be provided here. This shall be a URL where the referenced&#xD;
document can be located. For CDA, the link should also be present in the narrative inside the&#xD;
CDA Narrative in a &amp;lt;linkHTML> element.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2OAzYBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.reference->select(  r | r.externalDocument.id->isEmpty() )->size() = 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2OAzYRSVEeGGzu7fmW9pXw" name="ExternalReferenceHasReferenceExternalDocumentText">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2OAzYhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.reference->select(  r | r.externalDocument.text.oclIsUndefined()  )->size() = 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSXHIh7pEeGEaLkc3UAsAg" name="ExternalReferenceTemplateId" constrainedElement="_2OAzVhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSXHIx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSg4IB7pEeGEaLkc3UAsAg" name="ExternalReferenceClassCode" constrainedElement="_2OAzVhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSg4IR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSg4Ih7pEeGEaLkc3UAsAg" name="ExternalReferenceMoodCode" constrainedElement="_2OAzVhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSg4Ix7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSg4JB7pEeGEaLkc3UAsAg" name="ExternalReferenceId" constrainedElement="_2OAzVhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSg4JR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSg4Jh7pEeGEaLkc3UAsAg" name="ExternalReferenceText" constrainedElement="_2OAzVhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSg4Jx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2OG56hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OG58RSVEeGGzu7fmW9pXw" name="ProcedureActivityProcedure">
      <ownedComment xmi:id="_w6NZEBxxEeGXP8PxDYviDg">
        <body>The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore procedure templates can be represented with various RIM classes: act (e.g., dressing change), observation (e.g., EEG), procedure (e.g. splenectomy). &#xD;
This clinical statement represents procedures whose immediate and primary outcome (post-condition) is the alteration of the physical condition of the patient. Examples of these procedures are an appendectomy, hip replacement and a creation of a gastrostomy.</body>
      </ownedComment>
      <ownedRule xmi:id="_cSg4KB7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedureTemplateId" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSg4KR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSqCEB7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedureClassCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSqCER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSzzEB7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedureId" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSzzER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSzzEh7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedureCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSzzEx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cSzzFB7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedureStatusCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cSzzFR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.14' and (value.code = 'completed' or value.code = 'active' or value.code = 'aborted' or value.code = 'cancelled')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cS89AB7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedureEffectiveTime" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cS89AR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cS89Ah7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedurePriorityCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cS89Ax7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cS89BB7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedureMethodCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cS89BR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cS89Bh7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedureTargetSiteCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cS89Bx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTGuAB7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedureIndication" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTGuAR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTGuBx7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedureMedicationActivity" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTGuCB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTGuDh7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedurePatientInstruction" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTGuDx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ck_INx7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedureProcedureEncounter" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ck_IOB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.encounter.oclIsUndefined() and entryRelationship.encounter.oclIsKindOf(cda::Encounter) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_clI5NR7pEeGEaLkc3UAsAg" name="ProcedureActivityProcedureProductInstance" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_clI5Nh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ProductInstance))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2OZN6RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_cTGuAh7pEeGEaLkc3UAsAg" name="getIndications" isQuery="true" bodyCondition="_cTGuBR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cTGuBR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cTGuAh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTGuBh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cTGuAx7pEeGEaLkc3UAsAg" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cTGuBB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cTGuCR7pEeGEaLkc3UAsAg" name="getMedicationActivity" isQuery="true" bodyCondition="_cTGuDB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cTGuDB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cTGuCR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTGuDR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity))->asSequence()->first().oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cTGuCh7pEeGEaLkc3UAsAg" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cTGuCx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cTQfAB7pEeGEaLkc3UAsAg" name="getPatientInstruction" isQuery="true" bodyCondition="_cTQfAx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cTQfAx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cTQfAB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTQfBB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->first().oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cTQfAR7pEeGEaLkc3UAsAg" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cTQfAh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_clI5MB7pEeGEaLkc3UAsAg" name="getProcedureEncounters" isQuery="true" bodyCondition="_clI5Mx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_clI5Mx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_clI5MB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_clI5NB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).oclAsType(cda::Encounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_clI5MR7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_clI5Mh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_clI5Nx7pEeGEaLkc3UAsAg" name="getProductInstances" isQuery="true" bodyCondition="_clI5Oh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_clI5Oh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_clI5Nx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_clI5Ox7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ProductInstance)).oclAsType(consol::ProductInstance)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_clI5OB7pEeGEaLkc3UAsAg" type="_2G2bUxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_clI5OR7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OfUbhSVEeGGzu7fmW9pXw" name="Support">
      <ownedComment xmi:id="_2OfUchSVEeGGzu7fmW9pXw" annotatedElement="_2OfUbhSVEeGGzu7fmW9pXw">
        <body>&lt;p>Represents the patient's sources of support such as immediate family, relatives, and guardian at the time the summarization is generated. Support information also includes next of kin, caregivers, and support organizations. At a minimum, key support contacts relative to healthcare decisions, including next of kin, should be included.&lt;/p>&#xD;
&lt;p>CDA R2 represents a patient's guardian with the CDA Header Guardian class. Other Supporters are represented as participant participations in the CDA Header.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2OfUbxSVEeGGzu7fmW9pXw" annotatedElement="_2OfUbhSVEeGGzu7fmW9pXw">
        <body>At a minimum, key support contacts relative to healthcare decisions, including next of kin, should be included. If no healthcare providers are supplied, the reason should be supplied as free text in the narrative block (e.g., Unknown, etc).</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OfUcxSVEeGGzu7fmW9pXw" name="VitalSignsSection">
      <ownedRule xmi:id="_cTQfBh7pEeGEaLkc3UAsAg" name="VitalSignsSectionEntriesOptionalTemplateId" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTQfBx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.4.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTQfCR7pEeGEaLkc3UAsAg" name="VitalSignsSectionEntriesOptionalCode" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTQfCh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTQfCx7pEeGEaLkc3UAsAg" name="VitalSignsSectionText" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTQfDB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTZo8B7pEeGEaLkc3UAsAg" name="VitalSignsSectionTitle" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTZo8R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUJP1B7pEeGEaLkc3UAsAg" name="VitalSignsSectionVitalSignsOrganizer" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUJP1R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::VitalSignsOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_px07IBVgEeGQCvUGzi1kDQ" general="_bRH8sBVeEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_GRGhIBxREeG8X6LmnKJ43Q">
          <body>couple</body>
        </ownedComment>
      </generalization>
      <ownedOperation xmi:id="_cUJP1h7pEeGEaLkc3UAsAg" name="getConsolVitalSignsOrganizers" isQuery="true" bodyCondition="_cUJP2R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cUJP2R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cUJP1h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUJP2h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::VitalSignsOrganizer)).oclAsType(consol::VitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cUJP1x7pEeGEaLkc3UAsAg" type="_2OlbCRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cUJP2B7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OlbCRSVEeGGzu7fmW9pXw" name="VitalSignsOrganizer">
      <ownedComment xmi:id="_YFDPQBwiEeG_RY8fzJjtMw">
        <body>&lt;p>The Vital Signs Organizer groups vital signs, which is similar to the Result Organizer, but with further constraints. &lt;/p>

&lt;p>An appropriate nullFlavor can be used when a single result observation is contained in the organizer, and organizer/code or organizer/id is unknown.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cTZo8h7pEeGEaLkc3UAsAg" name="VitalSignsOrganizerTemplateId" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTZo8x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.26')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTZo9R7pEeGEaLkc3UAsAg" name="VitalSignsOrganizerClassCode" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTZo9h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryOrganizer::CLUSTER</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTZo9x7pEeGEaLkc3UAsAg" name="VitalSignsOrganizerMoodCode" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTZo-B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTZo-R7pEeGEaLkc3UAsAg" name="VitalSignsOrganizerId" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTZo-h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTjZ8B7pEeGEaLkc3UAsAg" name="VitalSignsOrganizerCode" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTjZ8R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '46680005' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTjZ8h7pEeGEaLkc3UAsAg" name="VitalSignsOrganizerStatusCode" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTjZ8x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTjZ9B7pEeGEaLkc3UAsAg" name="VitalSignsOrganizerEffectiveTime" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTjZ9R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTtK8B7pEeGEaLkc3UAsAg" name="VitalSignsOrganizerVitalSignObservation" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTtK8R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::VitalSignObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2O91oRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_cTtK8h7pEeGEaLkc3UAsAg" name="getVitalSignObservations" isQuery="true" bodyCondition="_cTtK9R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cTtK9R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cTtK8h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTtK9h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::VitalSignObservation)).oclAsType(consol::VitalSignObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cTtK8x7pEeGEaLkc3UAsAg" type="_2OrhsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cTtK9B7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OrhsRSVEeGGzu7fmW9pXw" name="VitalSignObservation">
      <ownedComment xmi:id="_y1fL4BwiEeG_RY8fzJjtMw">
        <body>Vital signs are represented as are other results, with additional vocabulary constraints.</body>
      </ownedComment>
      <ownedRule xmi:id="_cTtK9x7pEeGEaLkc3UAsAg" name="VitalSignObservationTemplateId" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTtK-B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.27')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTtK-h7pEeGEaLkc3UAsAg" name="VitalSignObservationClassCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTtK-x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cTtK_B7pEeGEaLkc3UAsAg" name="VitalSignObservationMoodCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cTtK_R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cT2U4B7pEeGEaLkc3UAsAg" name="VitalSignObservationId" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cT2U4R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cT2U4h7pEeGEaLkc3UAsAg" name="VitalSignObservationCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cT2U4x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '8310-5' or value.code = '8462-4' or value.code = '8480-6' or value.code = '8287-5' or value.code = '8867-4' or value.code = '8302-2' or value.code = '8306-3' or value.code = '2710-2' or value.code = '9279-1' or value.code = '3141-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cT2U5B7pEeGEaLkc3UAsAg" name="VitalSignObservationStatusCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cT2U5R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUAF4B7pEeGEaLkc3UAsAg" name="VitalSignObservationEffectiveTime" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUAF4R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUAF4h7pEeGEaLkc3UAsAg" name="VitalSignObservationValue" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUAF4x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUAF5B7pEeGEaLkc3UAsAg" name="VitalSignObservationInterpretationCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUAF5R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUAF5h7pEeGEaLkc3UAsAg" name="VitalSignObservationMethodCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUAF5x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUJP0B7pEeGEaLkc3UAsAg" name="VitalSignObservationTargetSiteCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUJP0R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUJP0h7pEeGEaLkc3UAsAg" name="VitalSignObservationText" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUJP0x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2O3u6BSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PD8KxSVEeGGzu7fmW9pXw" name="DiagnosticResultsSection">
      <ownedComment xmi:id="_2PKCxhSVEeGGzu7fmW9pXw" annotatedElement="_2PD8KxSVEeGGzu7fmW9pXw">
        <body>The results section shall contain a narrative description of the relevant diagnostic procedures the patient received in the&#xD;
past. It shall include entries for procedures and references to procedure reports when known as described in the Entry&#xD;
Content Modules.</body>
      </ownedComment>
      <ownedComment xmi:id="_2PD8LBSVEeGGzu7fmW9pXw" annotatedElement="_2PD8KxSVEeGGzu7fmW9pXw">
        <body>&lt;p>The Results section contains the results of observations generated by laboratories, imaging procedures, and other procedures. The scope includes hematology, chemistry, serology, virology, toxicology, microbiology, plain x-ray, ultrasound, CT, MRI, angiography, echocardiography, nuclear medicine, pathology, and procedure observations. The section often includes notable results such as abnormal values or relevant trends, and could contain all results for the period of time being documented.&lt;/p>&#xD;
&#xD;
&lt;p>Laboratory results are typically generated by laboratories providing analytic services in areas such as chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These observations are based on analysis of specimens obtained from the patient and submitted to the laboratory.&lt;/p>&#xD;
&#xD;
&lt;p>Imaging results are typically generated by a clinician reviewing the output of an imaging procedure, such as where a cardiologist reports the left ventricular ejection fraction based on the review of a cardiac echocardiogram.&lt;/p>&#xD;
&#xD;
&lt;p>Procedure results are typically generated by a clinician to provide more granular information about component observations made during  a procedure, such as where a gastroenterologist reports the size of a polyp observed during a colonoscopy.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2PD8LRSVEeGGzu7fmW9pXw" name="DiagnosticResultsSectionHasResult" constrainedElement="_2PD8KxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2PD8LhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | entry.observation.oclIsKindOf(consol::Result)) or self.entry->exists(entry : cda::Entry | entry.organizer.oclIsKindOf(consol::ResultOrganizer) and entry.organizer.component.observation->exists(obs : cda::Observation | obs.oclIsKindOf(consol::Result)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUJP2x7pEeGEaLkc3UAsAg" name="DiagnosticResultsSectionTemplateId" constrainedElement="_2PD8KxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUJP3B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.122')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUTA0B7pEeGEaLkc3UAsAg" name="DiagnosticResultsSectionCode" constrainedElement="_2PD8KxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUTA0R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '30954-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUTA0h7pEeGEaLkc3UAsAg" name="DiagnosticResultsSectionDiagnosticProcedure" constrainedElement="_2PD8KxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUTA0x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(cda::Procedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUTA2R7pEeGEaLkc3UAsAg" name="DiagnosticResultsSectionResult" constrainedElement="_2PD8KxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUTA2h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ResultObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUcx0B7pEeGEaLkc3UAsAg" name="DiagnosticResultsSectionResultOrganizer" constrainedElement="_2PD8KxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUcx0R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::ResultOrganizer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUcx1x7pEeGEaLkc3UAsAg" name="DiagnosticResultsSectionExternalReference" constrainedElement="_2PD8KxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUcx2B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ExternalReference))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PKCxxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cUTA1B7pEeGEaLkc3UAsAg" name="getDiagnosticProcedures" isQuery="true" bodyCondition="_cUTA1x7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cUTA1x7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cUTA1B7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUTA2B7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(cda::Procedure)).oclAsType(cda::Procedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cUTA1R7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cUTA1h7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cUTA2x7pEeGEaLkc3UAsAg" name="getResults" isQuery="true" bodyCondition="_cUTA3h7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cUTA3h7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cUTA2x7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUTA3x7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ResultObservation)).oclAsType(consol::ResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cUTA3B7pEeGEaLkc3UAsAg" type="_2J1d4BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cUTA3R7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cUcx0h7pEeGEaLkc3UAsAg" name="getResultOrganizers" isQuery="true" bodyCondition="_cUcx1R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cUcx1R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cUcx0h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUcx1h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::ResultOrganizer)).oclAsType(consol::ResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cUcx0x7pEeGEaLkc3UAsAg" type="_2JxzgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cUcx1B7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cUcx2R7pEeGEaLkc3UAsAg" name="getExternalReferences" isQuery="true" bodyCondition="_cUcx3B7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cUcx3B7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cUcx2R7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUcx3R7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ExternalReference)).oclAsType(consol::ExternalReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cUcx2h7pEeGEaLkc3UAsAg" type="_2OAzVhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cUcx2x7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PQJcxSVEeGGzu7fmW9pXw" name="HistoryOfPastIllnessSection">
      <ownedComment xmi:id="_2PWQBRSVEeGGzu7fmW9pXw" annotatedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <body>This section describes the past medical history for the patient. It may contain&#xD;
information about past procedures or other illnesses that might have a bearing on the&#xD;
patient's current illness. Since past medical history can include past surgical history&#xD;
and other procedures, the Procedure History section may be included under the Past&#xD;
Medical History section or it may stand alone as its own section. By the same token,&#xD;
problems can be recorded in a standalone Problems section or in a nested Problems&#xD;
section. Wherever used, procedures and problems should conform to the CCD template&#xD;
for CDA entries cited in the respective sections.</body>
      </ownedComment>
      <ownedComment xmi:id="_2PWQBhSVEeGGzu7fmW9pXw" annotatedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <body>The History of Past Illness section shall contain a narrative description of the conditions the patient suffered in the&#xD;
past. It shall include entries for problems as described in the Entry Content Modules.</body>
      </ownedComment>
      <ownedComment xmi:id="_2PQJdBSVEeGGzu7fmW9pXw" annotatedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The History of Past Illness Section contains data about problems the patient suffered in the&#xD;
    past. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2PWQAhSVEeGGzu7fmW9pXw" name="HistoryOfPastIllnessSectionHasClinicalStatements">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2PWQAxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.entry->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUcx3h7pEeGEaLkc3UAsAg" name="HistoryOfPastIllnessSectionTemplateId" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUcx3x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.20')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUcx4R7pEeGEaLkc3UAsAg" name="HistoryOfPastIllnessSectionCode" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUcx4h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11348-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUl7wB7pEeGEaLkc3UAsAg" name="HistoryOfPastIllnessSectionCondition" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUl7wR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProblemConcernAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PWQBxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cUl7wh7pEeGEaLkc3UAsAg" name="getCondition" isQuery="true" bodyCondition="_cUl7xR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cUl7xR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cUl7wh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUl7xh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct))->asSequence()->first().oclAsType(consol::ProblemConcernAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cUl7wx7pEeGEaLkc3UAsAg" type="_2H6yUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cUl7xB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PWQCBSVEeGGzu7fmW9pXw" name="ChiefComplaintSection">
      <ownedComment xmi:id="_2PWQFRSVEeGGzu7fmW9pXw" annotatedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <body>This contains a narrative description of the patient's chief complaint.</body>
      </ownedComment>
      <ownedComment xmi:id="_2PWQCRSVEeGGzu7fmW9pXw" annotatedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Chief Complaint Section contains information about the patient's chief complaint. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cUl7xx7pEeGEaLkc3UAsAg" name="ChiefComplaintSectionTemplateId" constrainedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUl7yB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.1.13.2.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUl7yh7pEeGEaLkc3UAsAg" name="ChiefComplaintSectionCode" constrainedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUl7yx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10154-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUvswB7pEeGEaLkc3UAsAg" name="ChiefComplaintSectionCondition" constrainedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUvswR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProblemConcernAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PWQFhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cUvswh7pEeGEaLkc3UAsAg" name="getCondition" isQuery="true" bodyCondition="_cUvsxR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cUvsxR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cUvswh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUvsxh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct))->asSequence()->first().oclAsType(consol::ProblemConcernAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cUvswx7pEeGEaLkc3UAsAg" type="_2H6yUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cUvsxB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PWQFxSVEeGGzu7fmW9pXw" name="ReasonForReferralSection">
      <ownedComment xmi:id="_2PcWrxSVEeGGzu7fmW9pXw" annotatedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <body>The reason for referral section shall contain a narrative description of the reason that the patient is being referred.</body>
      </ownedComment>
      <ownedComment xmi:id="_2PWQGBSVEeGGzu7fmW9pXw" annotatedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Reason for Referral Section contains information about the reason that the patient is being&#xD;
    referred. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cUvsxx7pEeGEaLkc3UAsAg" name="ReasonForReferralSectionTemplateId" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUvsyB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUvsyh7pEeGEaLkc3UAsAg" name="ReasonForReferralSectionCode" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUvsyx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '42349-1' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cUvszB7pEeGEaLkc3UAsAg" name="ReasonForReferralSectionCondition" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cUvszR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProblemConcernAct))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cU5dxR7pEeGEaLkc3UAsAg" name="ReasonForReferralSectionResult" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cU5dxh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ResultObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cU5dzB7pEeGEaLkc3UAsAg" name="ReasonForReferralSectionProblemEntry" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cU5dzR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PcWsBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cU5dwB7pEeGEaLkc3UAsAg" name="getConditions" isQuery="true" bodyCondition="_cU5dwx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cU5dwx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cU5dwB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cU5dxB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct)).oclAsType(consol::ProblemConcernAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cU5dwR7pEeGEaLkc3UAsAg" type="_2H6yUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cU5dwh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cU5dxx7pEeGEaLkc3UAsAg" name="getResults" isQuery="true" bodyCondition="_cU5dyh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cU5dyh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cU5dxx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cU5dyx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ResultObservation)).oclAsType(consol::ResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cU5dyB7pEeGEaLkc3UAsAg" type="_2J1d4BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cU5dyR7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cU5dzh7pEeGEaLkc3UAsAg" name="getProblemEntries" isQuery="true" bodyCondition="_cU5d0R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cU5d0R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cU5dzh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cU5d0h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation)).oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cU5dzx7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cU5d0B7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PcWsRSVEeGGzu7fmW9pXw" name="HistoryOfPresentIllness">
      <ownedComment xmi:id="_2PidQBSVEeGGzu7fmW9pXw" annotatedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <body>The history of present illness section shall contain a narrative description of the sequence of events preceding the&#xD;
patient's current complaints.</body>
      </ownedComment>
      <ownedComment xmi:id="_2PcWshSVEeGGzu7fmW9pXw" annotatedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The History of Present Illness Section contains information about the sequence of events preceding the&#xD;
    patient's current complaints. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cU5d0x7pEeGEaLkc3UAsAg" name="HistoryOfPresentIllnessTemplateId" constrainedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cU5d1B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cU5d1h7pEeGEaLkc3UAsAg" name="HistoryOfPresentIllnessCode" constrainedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cU5d1x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10164-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PidQRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PidQhSVEeGGzu7fmW9pXw" name="HospitalAdmissionDiagnosisSection">
      <ownedComment xmi:id="_2PidTxSVEeGGzu7fmW9pXw" annotatedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <body>The hospital admitting diagnosis section shall contain a narrative description of the primary reason for admission to a&#xD;
hospital facility. It shall include entries for observations as described in the Entry Content Modules.</body>
      </ownedComment>
      <ownedComment xmi:id="_2PidQxSVEeGGzu7fmW9pXw" annotatedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Hospital Admitting Diagnosis Section contains information about the primary reason for admission to&#xD;
    a hospital facility. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cVCnsB7pEeGEaLkc3UAsAg" name="HospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVCnsR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cVCnsx7pEeGEaLkc3UAsAg" name="HospitalAdmissionDiagnosisSectionCode" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVCntB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '46241-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cVCntR7pEeGEaLkc3UAsAg" name="HospitalAdmissionDiagnosisSectionCondition" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVCnth7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProblemConcernAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PidUBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cVCntx7pEeGEaLkc3UAsAg" name="getCondition" isQuery="true" bodyCondition="_cVMYsh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cVMYsh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cVCntx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVMYsx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct))->asSequence()->first().oclAsType(consol::ProblemConcernAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cVMYsB7pEeGEaLkc3UAsAg" type="_2H6yUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cVMYsR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PidURSVEeGGzu7fmW9pXw" name="HospitalDischargeDiagnosisSection">
      <ownedComment xmi:id="_2Poj4hSVEeGGzu7fmW9pXw" annotatedElement="_2PidURSVEeGGzu7fmW9pXw">
        <body>The discharge diagnosis section shall contain a narrative description of the conditions that need to be monitored after&#xD;
discharge from the hospital and those that were resolved during the hospital course. It shall include entries for patient&#xD;
conditions as described in the Entry Content Module.</body>
      </ownedComment>
      <ownedComment xmi:id="_2PidUhSVEeGGzu7fmW9pXw" annotatedElement="_2PidURSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Discharge Diagnosis Section contains information about the conditions identified during the hospital&#xD;
    stay that either need to be monitored after discharge from the hospital and/or where resolved during the hospital&#xD;
    course. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cVMYtB7pEeGEaLkc3UAsAg" name="HospitalDischargeDiagnosisSectionTemplateId" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVMYtR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.24')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cVMYtx7pEeGEaLkc3UAsAg" name="HospitalDischargeDiagnosisSectionCode" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVMYuB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11535-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cVMYuR7pEeGEaLkc3UAsAg" name="HospitalDischargeDiagnosisSectionCondition" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVMYuh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProblemConcernAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Poj4xSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cVMYux7pEeGEaLkc3UAsAg" name="getCondition" isQuery="true" bodyCondition="_cVMYvh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cVMYvh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cVMYux7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVMYvx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct))->asSequence()->first().oclAsType(consol::ProblemConcernAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cVMYvB7pEeGEaLkc3UAsAg" type="_2H6yUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cVMYvR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Poj5BSVEeGGzu7fmW9pXw" name="Hospital AdmissionMedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_2Poj6xSVEeGGzu7fmW9pXw" annotatedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <body>The admission medication history section shall contain a narrative description of the relevant medications administered to&#xD;
a patient prior to admission to a facility. It shall include entries for medication administration as described in the&#xD;
Entry Content Module.</body>
      </ownedComment>
      <ownedComment xmi:id="_2Poj5RSVEeGGzu7fmW9pXw" annotatedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Admission Medication Section contains information about the relevant medications of a patient prior&#xD;
    to admission to a facility. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cVMYwB7pEeGEaLkc3UAsAg" name="Hospital AdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVMYwR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cVVioB7pEeGEaLkc3UAsAg" name="Hospital AdmissionMedicationsSectionEntriesOptionalCode" constrainedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVVioR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '42346-7' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Poj7BSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Poj7RSVEeGGzu7fmW9pXw" name="HospitalDischargeMedicationsSection">
      <ownedComment xmi:id="_2Poj-hSVEeGGzu7fmW9pXw" annotatedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <body>The hospital discharge medications section shall contain a narrative description of the medications requested&#xD;
            (ordered) to be administered to the patient after discharge from the hospital. It shall include entries for&#xD;
            medication requests as described in the Entry Content Module.</body>
      </ownedComment>
      <ownedComment xmi:id="_2Poj7hSVEeGGzu7fmW9pXw" annotatedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Hospital Discharge Medications Section contains information about the relevant medications of the&#xD;
    medications ordered for the patient for use after discharge from the hospital. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cVVioh7pEeGEaLkc3UAsAg" name="HospitalDischargeMedicationsSectionTemplateId" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVViox7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.11')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cVVipR7pEeGEaLkc3UAsAg" name="HospitalDischargeMedicationsSectionCode" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVViph7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10183-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cVfToB7pEeGEaLkc3UAsAg" name="HospitalDischargeMedicationsSectionMedication" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVfToR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Poj-xSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cVfToh7pEeGEaLkc3UAsAg" name="getMedication" isQuery="true" bodyCondition="_cVfTpR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cVfTpR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cVfToh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVfTph7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity))->asSequence()->first().oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cVfTox7pEeGEaLkc3UAsAg" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cVfTpB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Poj_BSVEeGGzu7fmW9pXw" name="MedicationsAdministeredSection">
      <ownedComment xmi:id="_2Pxt0BSVEeGGzu7fmW9pXw" annotatedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <body>The medications administered section shall contain a narrative description of the relevant medications administered to a&#xD;
patient during the course of an encounter. It shall include entries for medication administration as described in the Entry&#xD;
Content Module.</body>
      </ownedComment>
      <ownedComment xmi:id="_2Poj_RSVEeGGzu7fmW9pXw" annotatedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Medications Administered Section contains information about the relevant medications administered to&#xD;
    a patient during the course of an encounter. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cVfTpx7pEeGEaLkc3UAsAg" name="MedicationsAdministeredSectionTemplateId" constrainedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVfTqB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.115')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cVfTqh7pEeGEaLkc3UAsAg" name="MedicationsAdministeredSectionCode" constrainedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVfTqx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '18610-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Pxt0RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Pxt0hSVEeGGzu7fmW9pXw" name="PhysicalExamSection">
      <ownedComment xmi:id="_2RkdqBSVEeGGzu7fmW9pXw" annotatedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <body>&lt;p>The Physical Examination section includes direct observations made by the clinician.&#xD;
The examination may include the use of simple instruments and may also describe&#xD;
simple maneuvers performed directly on the patient's body. This section only includes&#xD;
observations made by the examining clinician using inspection, palpation, auscultation,&#xD;
and percussion; it does not include laboratory or imaging findings. The exam may be&#xD;
limited to pertinent body systems based on the patient's chief complaint or it may&#xD;
include a comprehensive examination. The examination may be reported as a collection&#xD;
of random clinical statements or it may be reported categorically. Categorical report&#xD;
formats may be divided into multiple subsections, including Vital Signs, General Status,&#xD;
and any of the subsections listed in Appendix D: List of Additional Physical&#xD;
Examination Subsections. Note that Vital Signs can be a top-level section or subsection&#xD;
of Physical Exam.&lt;/p>&#xD;
&#xD;
&lt;p>The physical findings included in this section describe direct observations made by the&#xD;
clinician divided by organ or body system and may be included under appropriate&#xD;
subsections to Physical Exam. Systems are typically listed cephalic to caudal (i.e.,&#xD;
starting with the head) and may include all body systems or only those pertinent to the&#xD;
chief complaint. The head, eyes, ears, nose, throat, mouth, and teeth may be described&#xD;
separately or combined into a single subsection labeled &quot;HEENT.&quot; Other subsections&#xD;
may include Skin, Neck, Lymph Nodes, Thorax (Chest) and Lungs, Cardiovascular,&#xD;
Breasts, Abdomen, Pelvic, Genitourinary, Musculoskeletal, Extremities including&#xD;
Peripheral Vascular, and Neurologic. A detailed Mental Status Examination may be&#xD;
included when pertinent.&lt;/p>&#xD;
&#xD;
&lt;p>The Physical Examination section may contain multiple nested subsections: Vital Signs,&#xD;
General Status, and those listed in Appendix D: List of Additional Physical&#xD;
Examination Subsections.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2RkdqRSVEeGGzu7fmW9pXw" annotatedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <body>The physical exam section shall contain a narrative description of the patient's physical findings.</body>
      </ownedComment>
      <ownedComment xmi:id="_2RkdqhSVEeGGzu7fmW9pXw" annotatedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <body>The physical exam section shall contain only the required and optional subsections performed.</body>
      </ownedComment>
      <ownedComment xmi:id="_2Pxt0xSVEeGGzu7fmW9pXw" annotatedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Physical Examination Section contains information describing the physical findings. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cVfTrB7pEeGEaLkc3UAsAg" name="PhysicalExamSectionTemplateId" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVfTrR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.2.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cVpEoB7pEeGEaLkc3UAsAg" name="PhysicalExamSectionCode" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVpEoR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '29545-1' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cVpEoh7pEeGEaLkc3UAsAg" name="PhysicalExamSectionCondition" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVpEox7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProblemConcernAct))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cVyOkB7pEeGEaLkc3UAsAg" name="PhysicalExamSectionVitalSignsSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVyOkR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cV7_lR7pEeGEaLkc3UAsAg" name="PhysicalExamSectionGeneralAppearanceSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cV7_lh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cV7_ph7pEeGEaLkc3UAsAg" name="PhysicalExamSectionVisibleImplantedMedicalDevicesSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cV7_px7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWFwnx7pEeGEaLkc3UAsAg" name="PhysicalExamSectionIntegumentarySystemSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWFwoB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWO6ih7pEeGEaLkc3UAsAg" name="PhysicalExamSectionHeadSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWO6ix7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWYrhx7pEeGEaLkc3UAsAg" name="PhysicalExamSectionEyesSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWYriB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWh1dR7pEeGEaLkc3UAsAg" name="PhysicalExamSectionEarsNoseMouthThroatSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWh1dh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWh1hh7pEeGEaLkc3UAsAg" name="PhysicalExamSectionEarsSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWh1hx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWrmfx7pEeGEaLkc3UAsAg" name="PhysicalExamSectionNoseSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWrmgB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cW1XeR7pEeGEaLkc3UAsAg" name="PhysicalExamSectionMouthThroatTeethSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW1Xeh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cW-hZx7pEeGEaLkc3UAsAg" name="PhysicalExamSectionNeckSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW-haB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cW-heB7pEeGEaLkc3UAsAg" name="PhysicalExamSectionEndocrineSystemSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW-heR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cXISbx7pEeGEaLkc3UAsAg" name="PhysicalExamSectionThoraxLungsSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXIScB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cXSDaR7pEeGEaLkc3UAsAg" name="PhysicalExamSectionChestWallSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXSDah7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cXSDcx7pEeGEaLkc3UAsAg" name="PhysicalExamSectionBreastSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXSDdB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cXbNXx7pEeGEaLkc3UAsAg" name="PhysicalExamSectionHeartSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXbNYB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cXk-Wh7pEeGEaLkc3UAsAg" name="PhysicalExamSectionRespiratorySystemSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXk-Wx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cXuIRx7pEeGEaLkc3UAsAg" name="PhysicalExamSectionAbdomenSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXuISB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cX35QB7pEeGEaLkc3UAsAg" name="PhysicalExamSectionLymphaticSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cX35QR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cX35UR7pEeGEaLkc3UAsAg" name="PhysicalExamSectionVesselsSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cX35Uh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYBqSh7pEeGEaLkc3UAsAg" name="PhysicalExamSectionMusculoskeletalSystemSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYBqSx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYK0Nx7pEeGEaLkc3UAsAg" name="PhysicalExamSectionNeurologicSystemSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYK0OB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYUlNB7pEeGEaLkc3UAsAg" name="PhysicalExamSectionGenitaliaSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYUlNR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYUlRR7pEeGEaLkc3UAsAg" name="PhysicalExamSectionRectumSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYUlRh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYeWPh7pEeGEaLkc3UAsAg" name="PhysicalExamSectionExtremitiesSection" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYeWPx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RkdqxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cVpEpB7pEeGEaLkc3UAsAg" name="getConditions" isQuery="true" bodyCondition="_cVpEpx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cVpEpx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cVpEpB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVpEqB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct)).oclAsType(consol::ProblemConcernAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cVpEpR7pEeGEaLkc3UAsAg" type="_2H6yUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cVpEph7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cVyOkh7pEeGEaLkc3UAsAg" name="getVitalSignsSection" isQuery="true" bodyCondition="_cVyOlR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cVyOlR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cVyOkh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVyOlh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->first().oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cVyOkx7pEeGEaLkc3UAsAg" type="_2OfUcxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cVyOlB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cV7_lx7pEeGEaLkc3UAsAg" name="getGeneralAppearanceSection" isQuery="true" bodyCondition="_cV7_mh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cV7_mh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cV7_lx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cV7_mx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))->asSequence()->first().oclAsType(consol::GeneralStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cV7_mB7pEeGEaLkc3UAsAg" type="_2Pxt6xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cV7_mR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cWFwkB7pEeGEaLkc3UAsAg" name="getVisibleImplantedMedicalDevicesSection" isQuery="true" bodyCondition="_cWFwkx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cWFwkx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cWFwkB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWFwlB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cWFwkR7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cWFwkh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cWFwoR7pEeGEaLkc3UAsAg" name="getIntegumentarySystemSection" isQuery="true" bodyCondition="_cWFwpB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cWFwpB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cWFwoR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWFwpR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cWFwoh7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cWFwox7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cWO6jB7pEeGEaLkc3UAsAg" name="getHeadSection" isQuery="true" bodyCondition="_cWO6jx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cWO6jx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cWO6jB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWO6kB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cWO6jR7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cWO6jh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cWYriR7pEeGEaLkc3UAsAg" name="getEyesSection" isQuery="true" bodyCondition="_cWYrjB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cWYrjB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cWYriR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWYrjR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cWYrih7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cWYrix7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cWh1dx7pEeGEaLkc3UAsAg" name="getEarsNoseMouthThroatSection" isQuery="true" bodyCondition="_cWh1eh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cWh1eh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cWh1dx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWh1ex7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cWh1eB7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cWh1eR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cWrmcB7pEeGEaLkc3UAsAg" name="getEarsSection" isQuery="true" bodyCondition="_cWrmcx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cWrmcx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cWrmcB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWrmdB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cWrmcR7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cWrmch7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cWrmgR7pEeGEaLkc3UAsAg" name="getNoseSection" isQuery="true" bodyCondition="_cWrmhB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cWrmhB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cWrmgR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWrmhR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cWrmgh7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cWrmgx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cW1Xex7pEeGEaLkc3UAsAg" name="getMouthThroatTeethSection" isQuery="true" bodyCondition="_cW1Xfh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cW1Xfh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cW1Xex7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW1Xfx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cW1XfB7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cW1XfR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cW-haR7pEeGEaLkc3UAsAg" name="getNeckSection" isQuery="true" bodyCondition="_cW-hbB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cW-hbB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cW-haR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW-hbR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cW-hah7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cW-hax7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cXISYB7pEeGEaLkc3UAsAg" name="getEndocrineSystemSection" isQuery="true" bodyCondition="_cXISYx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cXISYx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cXISYB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXISZB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cXISYR7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXISYh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cXIScR7pEeGEaLkc3UAsAg" name="getThoraxLungsSection" isQuery="true" bodyCondition="_cXISdB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cXISdB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cXIScR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXISdR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cXISch7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXIScx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cXSDax7pEeGEaLkc3UAsAg" name="getChestWallSection" isQuery="true" bodyCondition="_cXSDbh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cXSDbh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cXSDax7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXSDbx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cXSDbB7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXSDbR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cXbNUB7pEeGEaLkc3UAsAg" name="getBreastSection" isQuery="true" bodyCondition="_cXbNUx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cXbNUx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cXbNUB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXbNVB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cXbNUR7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXbNUh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cXbNYR7pEeGEaLkc3UAsAg" name="getHeartSection" isQuery="true" bodyCondition="_cXbNZB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cXbNZB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cXbNYR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXbNZR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cXbNYh7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXbNYx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cXk-XB7pEeGEaLkc3UAsAg" name="getRespiratorySystemSection" isQuery="true" bodyCondition="_cXk-Xx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cXk-Xx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cXk-XB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXk-YB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cXk-XR7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXk-Xh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cXuISR7pEeGEaLkc3UAsAg" name="getAbdomenSection" isQuery="true" bodyCondition="_cXuITB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cXuITB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cXuISR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXuITR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cXuISh7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXuISx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cX35Qh7pEeGEaLkc3UAsAg" name="getLymphaticSection" isQuery="true" bodyCondition="_cX35RR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cX35RR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cX35Qh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cX35Rh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cX35Qx7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cX35RB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cX35Ux7pEeGEaLkc3UAsAg" name="getVesselsSection" isQuery="true" bodyCondition="_cX35Vh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cX35Vh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cX35Ux7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cX35Vx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cX35VB7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cX35VR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cYBqTB7pEeGEaLkc3UAsAg" name="getMusculoskeletalSystemSection" isQuery="true" bodyCondition="_cYBqTx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cYBqTx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cYBqTB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYBqUB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cYBqTR7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cYBqTh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cYK0OR7pEeGEaLkc3UAsAg" name="getNeurologicSystemSection" isQuery="true" bodyCondition="_cYK0PB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cYK0PB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cYK0OR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYK0PR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cYK0Oh7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cYK0Ox7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cYUlNh7pEeGEaLkc3UAsAg" name="getGenitaliaSection" isQuery="true" bodyCondition="_cYUlOR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cYUlOR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cYUlNh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYUlOh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cYUlNx7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cYUlOB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cYUlRx7pEeGEaLkc3UAsAg" name="getRectumSection" isQuery="true" bodyCondition="_cYeWMh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cYeWMh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cYUlRx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYeWMx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cYeWMB7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cYeWMR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cYeWQB7pEeGEaLkc3UAsAg" name="getExtremitiesSection" isQuery="true" bodyCondition="_cYeWQx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cYeWQx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cYeWQB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYeWRB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section))->asSequence()->first().oclAsType(cda::Section)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cYeWQR7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cYeWQh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Pxt6xSVEeGGzu7fmW9pXw" name="GeneralStatusSection">
      <ownedComment xmi:id="_2Pxt7BSVEeGGzu7fmW9pXw" annotatedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <body>The General Status section describes general observations and readily observable attributes of the patient, including affect and demeanor, apparent age compared to actual age, gender, ethnicity, nutritional status based on appearance, body build and habitus (e.g., muscular, cachectic, obese), developmental or other deformities, gait and mobility, personal hygiene, evidence of distress, and voice quality and speech.</body>
      </ownedComment>
      <ownedRule xmi:id="_cVyOlx7pEeGEaLkc3UAsAg" name="GeneralStatusSectionTemplateId" constrainedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVyOmB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.2.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cVyOmh7pEeGEaLkc3UAsAg" name="GeneralStatusSectionCode" constrainedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVyOmx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10210-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cVyOnB7pEeGEaLkc3UAsAg" name="GeneralStatusSectionProblemEntry" constrainedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cVyOnR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2P7e0BSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cV7_kB7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cV7_kx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cV7_kx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cV7_kB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cV7_lB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cV7_kR7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cV7_kh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2P7e1hSVEeGGzu7fmW9pXw" name="VisibleImplantedMedicalDevicesSection">
      <ownedComment xmi:id="_2P7e1xSVEeGGzu7fmW9pXw" annotatedElement="_2P7e1hSVEeGGzu7fmW9pXw">
        <body>The visible implanted medical devices section shall contain a description of the medical&#xD;
devices apparent on physical exam that have been inserted into the patient, whether&#xD;
internal or partially external.</body>
      </ownedComment>
      <ownedRule xmi:id="_cV7_nR7pEeGEaLkc3UAsAg" name="VisibleImplantedMedicalDevicesSectionCode" constrainedElement="_2P7e1hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cV7_nh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = 'XX-VisibleImplantedDevices' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cV7_nx7pEeGEaLkc3UAsAg" name="VisibleImplantedMedicalDevicesSectionProblemEntry" constrainedElement="_2P7e1hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cV7_oB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2P7e5RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cV7_oR7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cV7_pB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cV7_pB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cV7_oR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cV7_pR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cV7_oh7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cV7_ox7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2P7e6xSVEeGGzu7fmW9pXw" name="IntegumentarySystemSection">
      <ownedComment xmi:id="_2P7e7BSVEeGGzu7fmW9pXw" annotatedElement="_2P7e6xSVEeGGzu7fmW9pXw">
        <body>The integumentary system section shall contain a description of any type of integumentary&#xD;
system exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cWFwlh7pEeGEaLkc3UAsAg" name="IntegumentarySystemSectionCode" constrainedElement="_2P7e6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWFwlx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '29302-7' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWFwmB7pEeGEaLkc3UAsAg" name="IntegumentarySystemSectionProblemEntry" constrainedElement="_2P7e6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWFwmR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2QEoxBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cWFwmh7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cWFwnR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cWFwnR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cWFwmh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWFwnh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cWFwmx7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cWFwnB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2QEoyhSVEeGGzu7fmW9pXw" name="HeadSection">
      <ownedComment xmi:id="_2QEoyxSVEeGGzu7fmW9pXw" annotatedElement="_2QEoyhSVEeGGzu7fmW9pXw">
        <body>The head section shall contain a description of any type of head exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cWO6gR7pEeGEaLkc3UAsAg" name="HeadSectionCode" constrainedElement="_2QEoyhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWO6gh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10199-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWO6gx7pEeGEaLkc3UAsAg" name="HeadSectionProblemEntry" constrainedElement="_2QEoyhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWO6hB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2QEo2RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cWO6hR7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cWO6iB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cWO6iB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cWO6hR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWO6iR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cWO6hh7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cWO6hx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2QEo3xSVEeGGzu7fmW9pXw" name="EyesSection">
      <ownedRule xmi:id="_cWO6kh7pEeGEaLkc3UAsAg" name="EyesSectionCode" constrainedElement="_2QEo3xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWO6kx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10197-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWYrgB7pEeGEaLkc3UAsAg" name="EyesSectionProblemEntry" constrainedElement="_2QEo3xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWYrgR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2QOZxBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cWYrgh7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cWYrhR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cWYrhR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cWYrgh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWYrhh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cWYrgx7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cWYrhB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2QOZyhSVEeGGzu7fmW9pXw" name="EarsNoseMouthThroatSection">
      <ownedComment xmi:id="_2QOZyxSVEeGGzu7fmW9pXw" annotatedElement="_2QOZyhSVEeGGzu7fmW9pXw">
        <body>The ears, nose, mouth, and throat section shall contain a description of any type of ears,&#xD;
nose, mouth, or throat exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cWYrjx7pEeGEaLkc3UAsAg" name="EarsNoseMouthThroatSectionCode" constrainedElement="_2QOZyhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWYrkB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11393-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWYrkR7pEeGEaLkc3UAsAg" name="EarsNoseMouthThroatSectionProblemEntry" constrainedElement="_2QOZyhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWYrkh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2QOZ2RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cWh1cB7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cWh1cx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cWh1cx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cWh1cB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWh1dB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cWh1cR7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cWh1ch7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2QOZ3xSVEeGGzu7fmW9pXw" name="EarsSection">
      <ownedComment xmi:id="_2QOZ4BSVEeGGzu7fmW9pXw" annotatedElement="_2QOZ3xSVEeGGzu7fmW9pXw">
        <body>The ears section shall contain a description of any type of ear exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cWh1fR7pEeGEaLkc3UAsAg" name="EarsSectionCode" constrainedElement="_2QOZ3xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWh1fh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10195-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWh1fx7pEeGEaLkc3UAsAg" name="EarsSectionProblemEntry" constrainedElement="_2QOZ3xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWh1gB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2QYKxBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cWh1gR7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cWh1hB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cWh1hB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cWh1gR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWh1hR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cWh1gh7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cWh1gx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2QYKyhSVEeGGzu7fmW9pXw" name="NoseSection">
      <ownedComment xmi:id="_2QYKyxSVEeGGzu7fmW9pXw" annotatedElement="_2QYKyhSVEeGGzu7fmW9pXw">
        <body>The nose section shall contain a description of any type of nose exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cWrmdh7pEeGEaLkc3UAsAg" name="NoseSectionCode" constrainedElement="_2QYKyhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWrmdx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10203-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWrmeB7pEeGEaLkc3UAsAg" name="NoseSectionProblemEntry" constrainedElement="_2QYKyhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWrmeR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2QYK2RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cWrmeh7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cWrmfR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cWrmfR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cWrmeh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cWrmfh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cWrmex7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cWrmfB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2QYK3xSVEeGGzu7fmW9pXw" name="MouthThroatTeethSection">
      <ownedComment xmi:id="_2QYK4BSVEeGGzu7fmW9pXw" annotatedElement="_2QYK3xSVEeGGzu7fmW9pXw">
        <body>The mouth, throat, and teeth section shall contain a description of any type of mouth,&#xD;
throat, or teeth exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cW1XcB7pEeGEaLkc3UAsAg" name="MouthThroatTeethSectionCode" constrainedElement="_2QYK3xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW1XcR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10201-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cW1Xch7pEeGEaLkc3UAsAg" name="MouthThroatTeethSectionProblemEntry" constrainedElement="_2QYK3xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW1Xcx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2QhUtRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cW1XdB7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cW1Xdx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cW1Xdx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cW1XdB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW1XeB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cW1XdR7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cW1Xdh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2QhUuxSVEeGGzu7fmW9pXw" name="NeckSection">
      <ownedComment xmi:id="_2QhUvBSVEeGGzu7fmW9pXw" annotatedElement="_2QhUuxSVEeGGzu7fmW9pXw">
        <body>Description The neck section shall contain a description of any type of neck exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cW1XgR7pEeGEaLkc3UAsAg" name="NeckSectionCode" constrainedElement="_2QhUuxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW1Xgh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11411-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cW-hYB7pEeGEaLkc3UAsAg" name="NeckSectionProblemEntry" constrainedElement="_2QhUuxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW-hYR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2QnbUBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cW-hYh7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cW-hZR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cW-hZR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cW-hYh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW-hZh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cW-hYx7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cW-hZB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2QnbVhSVEeGGzu7fmW9pXw" name="EndocrineSystemSection">
      <ownedComment xmi:id="_2QnbVxSVEeGGzu7fmW9pXw" annotatedElement="_2QnbVhSVEeGGzu7fmW9pXw">
        <body>The endocrine system section shall contain a description of any type of endocrine&#xD;
system exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cW-hbx7pEeGEaLkc3UAsAg" name="EndocrineSystemSectionCode" constrainedElement="_2QnbVhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW-hcB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '29307-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cW-hcR7pEeGEaLkc3UAsAg" name="EndocrineSystemSectionProblemEntry" constrainedElement="_2QnbVhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW-hch7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2QnbZBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cW-hcx7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cW-hdh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cW-hdh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cW-hcx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cW-hdx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cW-hdB7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cW-hdR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2QnbahSVEeGGzu7fmW9pXw" name="ThoraxLungsSection">
      <ownedComment xmi:id="_2QnbaxSVEeGGzu7fmW9pXw" annotatedElement="_2QnbahSVEeGGzu7fmW9pXw">
        <body>The thorax and lungs section shall contain a description of any type of thoracic or lung&#xD;
exams.</body>
      </ownedComment>
      <ownedRule xmi:id="_cXISZh7pEeGEaLkc3UAsAg" name="ThoraxLungsSectionCode" constrainedElement="_2QnbahSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXISZx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10207-9' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cXISaB7pEeGEaLkc3UAsAg" name="ThoraxLungsSectionProblemEntry" constrainedElement="_2QnbahSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXISaR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Qth9hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cXISah7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cXISbR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cXISbR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cXISah7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXISbh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cXISax7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXISbB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Qth_BSVEeGGzu7fmW9pXw" name="ChestWallSection">
      <ownedComment xmi:id="_2Qth_RSVEeGGzu7fmW9pXw" annotatedElement="_2Qth_BSVEeGGzu7fmW9pXw">
        <body>The chest wall section shall contain a description of any type of chest wall exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cXSDYB7pEeGEaLkc3UAsAg" name="ChestWallSectionCode" constrainedElement="_2Qth_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXSDYR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11392-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cXSDYh7pEeGEaLkc3UAsAg" name="ChestWallSectionProblemEntry" constrainedElement="_2Qth_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXSDYx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2QzolBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cXSDZB7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cXSDZx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cXSDZx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cXSDZB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXSDaB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cXSDZR7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXSDZh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2QzomhSVEeGGzu7fmW9pXw" name="BreastSection">
      <ownedComment xmi:id="_2QzomxSVEeGGzu7fmW9pXw" annotatedElement="_2QzomhSVEeGGzu7fmW9pXw">
        <body>The breast section shall contain a description of any type of breast exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cXSDcR7pEeGEaLkc3UAsAg" name="BreastSectionCode" constrainedElement="_2QzomhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXSDch7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10193-1' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2QzooxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2QzoqRSVEeGGzu7fmW9pXw" name="HeartSection">
      <ownedComment xmi:id="_2QzoqhSVEeGGzu7fmW9pXw" annotatedElement="_2QzoqRSVEeGGzu7fmW9pXw">
        <body>The heart section shall contain a description of any type of heart exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cXbNVh7pEeGEaLkc3UAsAg" name="HeartSectionCode" constrainedElement="_2QzoqRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXbNVx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10200-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cXbNWB7pEeGEaLkc3UAsAg" name="HeartSectionProblemEntry" constrainedElement="_2QzoqRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXbNWR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Q5vNRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cXbNWh7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cXbNXR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cXbNXR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cXbNWh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXbNXh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cXbNWx7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXbNXB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Q5vOxSVEeGGzu7fmW9pXw" name="RespiratorySystemSection">
      <ownedComment xmi:id="_2Q5vPBSVEeGGzu7fmW9pXw" annotatedElement="_2Q5vOxSVEeGGzu7fmW9pXw">
        <body>The respiratory system section shall contain a description of any type of respiratory&#xD;
exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cXk-UR7pEeGEaLkc3UAsAg" name="RespiratorySystemSectionCode" constrainedElement="_2Q5vOxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXk-Uh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11412-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cXk-Ux7pEeGEaLkc3UAsAg" name="RespiratorySystemSectionProblemEntry" constrainedElement="_2Q5vOxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXk-VB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RF8cBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cXk-VR7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cXk-WB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cXk-WB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cXk-VR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXk-WR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cXk-Vh7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXk-Vx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2RF8dhSVEeGGzu7fmW9pXw" name="AbdomenSection">
      <ownedComment xmi:id="_2RF8dxSVEeGGzu7fmW9pXw" annotatedElement="_2RF8dhSVEeGGzu7fmW9pXw">
        <body>The abdomen system section shall contain a description of any type of abdominal exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cXk-Yh7pEeGEaLkc3UAsAg" name="AbdomenSectionCode" constrainedElement="_2RF8dhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXk-Yx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10191-5' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cXuIQB7pEeGEaLkc3UAsAg" name="AbdomenSectionProblemEntry" constrainedElement="_2RF8dhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXuIQR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RF8hBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cXuIQh7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cXuIRR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cXuIRR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cXuIQh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXuIRh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cXuIQx7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXuIRB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2RMDEBSVEeGGzu7fmW9pXw" name="LymphaticSection">
      <ownedComment xmi:id="_2RMDERSVEeGGzu7fmW9pXw" annotatedElement="_2RMDEBSVEeGGzu7fmW9pXw">
        <body>The lymphatic system section shall contain a description of any type of lymphatic exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cXuITx7pEeGEaLkc3UAsAg" name="LymphaticSectionCode" constrainedElement="_2RMDEBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXuIUB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11447-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cXuIUR7pEeGEaLkc3UAsAg" name="LymphaticSectionProblemEntry" constrainedElement="_2RMDEBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXuIUh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RMDHhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cXuIUx7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cXuIVh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cXuIVh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cXuIUx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cXuIVx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cXuIVB7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXuIVR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2RMDJBSVEeGGzu7fmW9pXw" name="VesselsSection">
      <ownedComment xmi:id="_2RMDJRSVEeGGzu7fmW9pXw" annotatedElement="_2RMDJBSVEeGGzu7fmW9pXw">
        <body>The vessels section shall contain a description of any type of vessels exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cX35SB7pEeGEaLkc3UAsAg" name="VesselsSectionCode" constrainedElement="_2RMDJBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cX35SR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10208-7' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cX35Sh7pEeGEaLkc3UAsAg" name="VesselsSectionProblemEntry" constrainedElement="_2RMDJBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cX35Sx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RSJtBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cX35TB7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cX35Tx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cX35Tx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cX35TB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cX35UB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cX35TR7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cX35Th7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2RSJuhSVEeGGzu7fmW9pXw" name="MusculoskeletalSystemSection">
      <ownedComment xmi:id="_2RSJuxSVEeGGzu7fmW9pXw" annotatedElement="_2RSJuhSVEeGGzu7fmW9pXw">
        <body>The musculoskeletal system section shall contain a description of any type of&#xD;
musculoskeletal exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cYBqQR7pEeGEaLkc3UAsAg" name="MusculoskeletalSystemSectionCode" constrainedElement="_2RSJuhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYBqQh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11410-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYBqQx7pEeGEaLkc3UAsAg" name="MusculoskeletalSystemSectionProblemEntry" constrainedElement="_2RSJuhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYBqRB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RSJyBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cYBqRR7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cYBqSB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cYBqSB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cYBqRR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYBqSR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cYBqRh7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cYBqRx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2RYQUhSVEeGGzu7fmW9pXw" name="NeurologicSystemSection">
      <ownedComment xmi:id="_2RYQUxSVEeGGzu7fmW9pXw" annotatedElement="_2RYQUhSVEeGGzu7fmW9pXw">
        <body>The neurologic system section shall contain a description of any type of neurologic&#xD;
exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cYBqUh7pEeGEaLkc3UAsAg" name="NeurologicSystemSectionCode" constrainedElement="_2RYQUhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYBqUx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10202-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYK0MB7pEeGEaLkc3UAsAg" name="NeurologicSystemSectionProblemEntry" constrainedElement="_2RYQUhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYK0MR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RYQYBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cYK0Mh7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cYK0NR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cYK0NR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cYK0Mh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYK0Nh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cYK0Mx7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cYK0NB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2RYQZhSVEeGGzu7fmW9pXw" name="GenitaliaSection">
      <ownedComment xmi:id="_2RYQZxSVEeGGzu7fmW9pXw" annotatedElement="_2RYQZhSVEeGGzu7fmW9pXw">
        <body>The genitalia section shall contain a description of any type of genital exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cYK0Px7pEeGEaLkc3UAsAg" name="GenitaliaSectionCode" constrainedElement="_2RYQZhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYK0QB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11400-9' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYK0QR7pEeGEaLkc3UAsAg" name="GenitaliaSectionProblemEntry" constrainedElement="_2RYQZhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYK0Qh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2ReW9BSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cYK0Qx7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cYUlMh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cYUlMh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cYK0Qx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYUlMx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cYUlMB7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cYUlMR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2ReW-hSVEeGGzu7fmW9pXw" name="RectumSection">
      <ownedComment xmi:id="_2ReW-xSVEeGGzu7fmW9pXw" annotatedElement="_2ReW-hSVEeGGzu7fmW9pXw">
        <body>The rectum section shall contain a description of any type of rectal exam.</body>
      </ownedComment>
      <ownedRule xmi:id="_cYUlPB7pEeGEaLkc3UAsAg" name="RectumSectionCode" constrainedElement="_2ReW-hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYUlPR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10205-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYUlPh7pEeGEaLkc3UAsAg" name="RectumSectionProblemEntry" constrainedElement="_2ReW-hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYUlPx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RkdkBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cYUlQB7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cYUlQx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cYUlQx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cYUlQB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYUlRB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cYUlQR7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cYUlQh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2RkdlhSVEeGGzu7fmW9pXw" name="ExtremitiesSection">
      <ownedComment xmi:id="_2RkdlxSVEeGGzu7fmW9pXw" annotatedElement="_2RkdlhSVEeGGzu7fmW9pXw">
        <body>The Extremities section SHALL contain a description of any type of exam on the&#xD;
patient's extremities.</body>
      </ownedComment>
      <ownedRule xmi:id="_cYeWNR7pEeGEaLkc3UAsAg" name="ExtremitiesSectionCode" constrainedElement="_2RkdlhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYeWNh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10196-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYeWNx7pEeGEaLkc3UAsAg" name="ExtremitiesSectionProblemEntry" constrainedElement="_2RkdlhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYeWOB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RkdpBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cYeWOR7pEeGEaLkc3UAsAg" name="getProblemEntry" isQuery="true" bodyCondition="_cYeWPB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cYeWPB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cYeWOR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYeWPR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation))->asSequence()->first().oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cYeWOh7pEeGEaLkc3UAsAg" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cYeWOx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2RqkMBSVEeGGzu7fmW9pXw" name="ReviewOfSystemsSection">
      <ownedComment xmi:id="_2RqkOBSVEeGGzu7fmW9pXw" annotatedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <body>The review of systems is a relevant collection of symptoms and functions systematically&#xD;
gathered by a clinician. It includes symptoms the patient is currently experiencing,&#xD;
some of which were not elicited during the history of present illness, as well as a&#xD;
potentially large number of pertinent negatives, e.g., symptoms that the patient was&#xD;
specifically asked if they had experienced or were currently experiencing, but had&#xD;
denied experiencing.</body>
      </ownedComment>
      <ownedComment xmi:id="_2RqkORSVEeGGzu7fmW9pXw" annotatedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <body>The review of systems section shall contain a narrative description of the responses the patient gave to a set of routine&#xD;
questions on the functions of each anatomic body system.</body>
      </ownedComment>
      <ownedComment xmi:id="_2RqkMRSVEeGGzu7fmW9pXw" annotatedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Review of Systems Section contains information describing patient responses to questions about the&#xD;
    function of various body systems. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cYeWRR7pEeGEaLkc3UAsAg" name="ReviewOfSystemsSectionTemplateId" constrainedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYeWRh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYngIB7pEeGEaLkc3UAsAg" name="ReviewOfSystemsSectionCode" constrainedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYngIR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10187-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RqkOhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2RqkOxSVEeGGzu7fmW9pXw" name="HospitalCourseSection">
      <ownedComment xmi:id="_2RqkQhSVEeGGzu7fmW9pXw" annotatedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <body>The hospital course section shall contain a narrative description of the sequence of events from admission to discharge in&#xD;
a hospital facility.</body>
      </ownedComment>
      <ownedComment xmi:id="_2RqkPBSVEeGGzu7fmW9pXw" annotatedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Hospital Course Section contains information about of the sequence of events from admission to&#xD;
    discharge in a hospital facility. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cYngIh7pEeGEaLkc3UAsAg" name="HospitalCourseSectionTemplateId" constrainedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYngIx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYngJR7pEeGEaLkc3UAsAg" name="HospitalCourseSectionCode" constrainedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYngJh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '8648-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RqkQxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Rwq0BSVEeGGzu7fmW9pXw" name="AssessmentAndPlanSection">
      <ownedComment xmi:id="_2Rwq8BSVEeGGzu7fmW9pXw" annotatedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <body>&lt;p>The Assessment section (also called impression or diagnoses) represents the clinician's conclusions and working assumptions that will guide treatment of the patient. The assessment formulates a specific plan or set of recommendations. The assessment may be a list of specific disease entities or a narrative block.&lt;/p>&#xD;
&lt;p>The Plan section contains data that defines pending orders, interventions, encounters, services, and procedures for the patient. It is limited to prospective, unfulfilled, or incomplete orders and requests only. All active, incomplete, or pending orders, appointments, referrals, procedures, services, or any other pending event of clinical significance to the current care of the patient should be listed unless constrained due to privacy issues. The plan may also contain information about ongoing care of the patient and information regarding goals and clinical reminders. Clinical reminders are placed here to provide prompts for disease prevention and management, patient safety, and health-care quality improvements, including widely accepted performance measures. The plan may also indicate that patient education was given or will be provided.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2Rwq8RSVEeGGzu7fmW9pXw" annotatedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <body>The assessment and plan section shall contain a narrative description of the assessment of the patient condition and&#xD;
expectations for care including proposals, goals, and order requests for monitoring, tracking, or improving the condition&#xD;
of the patient.</body>
      </ownedComment>
      <ownedComment xmi:id="_2Rwq0RSVEeGGzu7fmW9pXw" annotatedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    The Assessment and Plan Section contains information about the assessment of the patient's condition and&#xD;
    expectations for care including proposals, goals, and order requests for monitoring, tracking, or improving the&#xD;
    condition of the patient. &#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An assessment and plan section varies from the plan of care section defined later in that it includes a&#xD;
    physician assessment of the patient condition. &#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>NOTE &lt;/b>:&#xD;
    The assessments described in this section are physician assessments of the patient's current condition, and do not&#xD;
    include assessments of functional status, or other assessments typically used in nursing. In Implementation Guides&#xD;
    currently selected, when both the assessment and plan are documented, they are included together in a single section&#xD;
    documenting both. When the physician assessment is not present, only the plan of care section appears. There are no&#xD;
    cases where a physician assessment is provided without a plan.   &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cYngJx7pEeGEaLkc3UAsAg" name="AssessmentAndPlanSectionTemplateId" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYngKB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYxRIR7pEeGEaLkc3UAsAg" name="AssessmentAndPlanSectionCode" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYxRIh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '51847-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYxRIx7pEeGEaLkc3UAsAg" name="AssessmentAndPlanSectionMedication" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYxRJB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cYxRKh7pEeGEaLkc3UAsAg" name="AssessmentAndPlanSectionImmunization" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYxRKx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::ImmunizationActivity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cY6bFR7pEeGEaLkc3UAsAg" name="AssessmentAndPlanSectionEncounterEntry" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cY6bFh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(cda::Encounter))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cY6bHB7pEeGEaLkc3UAsAg" name="AssessmentAndPlanSectionProcedureEntry" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cY6bHR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(cda::Procedure))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Rwq8hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cYxRJR7pEeGEaLkc3UAsAg" name="getMedications" isQuery="true" bodyCondition="_cYxRKB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cYxRKB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cYxRJR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cYxRKR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cYxRJh7pEeGEaLkc3UAsAg" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cYxRJx7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cY6bEB7pEeGEaLkc3UAsAg" name="getImmunizations" isQuery="true" bodyCondition="_cY6bEx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cY6bEx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cY6bEB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cY6bFB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::ImmunizationActivity)).oclAsType(consol::ImmunizationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cY6bER7pEeGEaLkc3UAsAg" type="_2MAoIBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cY6bEh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cY6bFx7pEeGEaLkc3UAsAg" name="getEncounterEntries" isQuery="true" bodyCondition="_cY6bGh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cY6bGh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cY6bFx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cY6bGx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).oclAsType(cda::Encounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cY6bGB7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cY6bGR7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cY6bHh7pEeGEaLkc3UAsAg" name="getProcedureEntries" isQuery="true" bodyCondition="_cY6bIR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cY6bIR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cY6bHh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cY6bIh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(cda::Procedure)).oclAsType(cda::Procedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cY6bHx7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cY6bIB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2R2xcBSVEeGGzu7fmW9pXw" name="ConditionEntry">
      <ownedComment xmi:id="_2SPMDRSVEeGGzu7fmW9pXw" annotatedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <body>&lt;p>This section makes use of the linking, severity, clinical status and comment content specifications defined elsewhere in the technical framework. In HL7 RIM parlance, observations about a problem, complaint, symptom, finding, diagnosis, or functional limitation of a patient is the event (moodCode='EVN') of observing (&amp;lt;observation classCode='OBS'>) that problem. The &amp;lt;value> of the observation comes from a controlled vocabulary representing such things. The &amp;lt;code> contained within the &amp;lt;observation> describes the method of determination from yet another controlled vocabulary.&lt;/p>&#xD;
&#xD;
&lt;p>The basic pattern for reporting a problem uses the CDA &amp;lt;observation> element, setting the classCode='OBS' to represent that this is an observation of a problem, and the moodCode='EVN', to represent that this is an observation that has in fact taken place. The negationInd attribute, if true, specifies that the problem indicated was observed to not have occurred (which is subtly but importantly different from having not been observed). The value of negationInd should not normally be set to true. Instead, to record that there is &quot;no prior history of chicken pox&quot;, one would use a coded value indicated exactly that. However, it is not always possible to record problems in this manner, especially if using a controlled vocabulary that does not supply pre-coordinated negations , or which do not allow the negation to be recorded with post-coordinated coded terminology.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2R2xcRSVEeGGzu7fmW9pXw" annotatedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <body>&lt;p>This section makes use of the linking, severity, clinical status and comment content specifications defined elsewhere in the technical framework. In HL7 RIM parlance, observations about a problem, complaint, symptom, finding, diagnosis, or functional limitation of a patient is the event (moodCode='EVN') of observing (&amp;lt;observation classCode='OBS'>) that problem. The &amp;lt;value> of the observation comes from a controlled vocabulary representing such things. The &amp;lt;code> contained within the &amp;lt;observation> describes the method of determination from yet another controlled vocabulary.&lt;/p>&#xD;
&#xD;
&lt;p>The basic pattern for reporting a problem uses the CDA &amp;lt;observation> element, setting the classCode='OBS' to represent that this is an observation of a problem, and the moodCode='EVN', to represent that this is an observation that has in fact taken place. The negationInd attribute, if true, specifies that the problem indicated was observed to not have occurred (which is subtly but importantly different from having not been observed). The value of negationInd should not normally be set to true. Instead, to record that there is &quot;no prior history of chicken pox&quot;, one would use a coded value indicated exactly that. However, it is not always possible to record problems in this manner, especially if using a controlled vocabulary that does not supply pre-coordinated negations , or which do not allow the negation to be recorded with post-coordinated coded terminology.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2SPMARSVEeGGzu7fmW9pXw" name="ConditionEntryInformationSource">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SPMAhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;&#xA;or not self.getSection().informant->isEmpty()&#xD;&#xA;or not self.getClinicalDocument().informant->isEmpty()&#xD;&#xA;or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;&#xA;or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;&#xA;   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;&#xA;   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2SPMBBSVEeGGzu7fmW9pXw" name="ConditionEntryContainsPatientAwareness">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SPMBRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.participant->one(partic : cda::Participant2 | partic.oclIsKindOf(consol::PatientAwareness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2SPMBxSVEeGGzu7fmW9pXw" name="ConditionEntryHasTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SPMCBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2SPMChSVEeGGzu7fmW9pXw" name="ConditionEntryCommentInversionInd">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SPMCxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(rel : cda::EntryRelationship | (not rel.act.oclIsUndefined() and rel.act.oclIsKindOf(consol::Comment)) implies rel.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2R2xchSVEeGGzu7fmW9pXw" name="ConditionEntryHasOnsetDate" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2R2xcxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2R2xdBSVEeGGzu7fmW9pXw" name="ConditionEntryHasResolutionDate" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2R2xdRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2R2xdhSVEeGGzu7fmW9pXw" name="ConditionEntryHasUnknownResolutionDate" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2R2xdxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cY6bIx7pEeGEaLkc3UAsAg" name="ConditionEntryTemplateId" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cY6bJB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZEMEB7pEeGEaLkc3UAsAg" name="ConditionEntryMoodCode" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZEMER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZEMEh7pEeGEaLkc3UAsAg" name="ConditionEntryId" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZEMEx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZN9EB7pEeGEaLkc3UAsAg" name="ConditionEntryCode" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZN9ER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '404684003' or value.code = '409586006' or value.code = '282291009' or value.code = '64572001' or value.code = '248536006' or value.code = '418799008' or value.code = '55607006')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZN9Eh7pEeGEaLkc3UAsAg" name="ConditionEntryText" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZN9Ex7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZN9FB7pEeGEaLkc3UAsAg" name="ConditionEntryStatusCode" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZN9FR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZXHAB7pEeGEaLkc3UAsAg" name="ConditionEntryEffectiveTime" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZXHAR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZXHAh7pEeGEaLkc3UAsAg" name="ConditionEntryValue" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZXHAx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZXHBB7pEeGEaLkc3UAsAg" name="ConditionEntryAgeObservation" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZXHBR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZXHCx7pEeGEaLkc3UAsAg" name="ConditionEntryCauseOfDeathObservation" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZXHDB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::FamilyHistoryDeathObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZg4BR7pEeGEaLkc3UAsAg" name="ConditionEntryProblemStatusObservation" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZg4Bh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AllergyStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZg4DB7pEeGEaLkc3UAsAg" name="ConditionEntrySeverity" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZg4DR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SeverityObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZg4Ex7pEeGEaLkc3UAsAg" name="ConditionEntryHealthStatusObservation" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZg4FB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::HealthStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZqpAB7pEeGEaLkc3UAsAg" name="ConditionEntryComment" constrainedElement="_2R2xcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZqpAR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2SPMDhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cZXHBh7pEeGEaLkc3UAsAg" name="getAgeObservation" isQuery="true" bodyCondition="_cZXHCR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cZXHCR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cZXHBh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZXHCh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AgeObservation))->asSequence()->first().oclAsType(consol::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cZXHBx7pEeGEaLkc3UAsAg" type="_2EqqABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cZXHCB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cZg4AB7pEeGEaLkc3UAsAg" name="getCauseOfDeathObservation" isQuery="true" bodyCondition="_cZg4Ax7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cZg4Ax7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cZg4AB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZg4BB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FamilyHistoryDeathObservation))->asSequence()->first().oclAsType(consol::FamilyHistoryDeathObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cZg4AR7pEeGEaLkc3UAsAg" type="_2SC-sBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cZg4Ah7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cZg4Bx7pEeGEaLkc3UAsAg" name="getProblemStatusObservation" isQuery="true" bodyCondition="_cZg4Ch7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cZg4Ch7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cZg4Bx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZg4Cx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyStatusObservation))->asSequence()->first().oclAsType(consol::AllergyStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cZg4CB7pEeGEaLkc3UAsAg" type="_2FRuAhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cZg4CR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cZg4Dh7pEeGEaLkc3UAsAg" name="getSeverity" isQuery="true" bodyCondition="_cZg4ER7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cZg4ER7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cZg4Dh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZg4Eh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SeverityObservation))->asSequence()->first().oclAsType(consol::SeverityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cZg4Dx7pEeGEaLkc3UAsAg" type="_2FGu4hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cZg4EB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cZg4FR7pEeGEaLkc3UAsAg" name="getHealthStatusObservation" isQuery="true" bodyCondition="_cZg4GB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cZg4GB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cZg4FR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZg4GR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HealthStatusObservation))->asSequence()->first().oclAsType(consol::HealthStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cZg4Fh7pEeGEaLkc3UAsAg" type="_2ExXsBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cZg4Fx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cZqpAh7pEeGEaLkc3UAsAg" name="getComments" isQuery="true" bodyCondition="_cZqpBR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cZqpBR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cZqpAh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZqpBh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Comment)).oclAsType(consol::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cZqpAx7pEeGEaLkc3UAsAg" type="_2FhloBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cZqpBB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2SC-sBSVEeGGzu7fmW9pXw" name="FamilyHistoryDeathObservation">
      <ownedRule xmi:id="_2SJFWBSVEeGGzu7fmW9pXw" name="FamilyHistoryDeathObservationHasSubjectPatientRelationship">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SJFWRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2SJFWxSVEeGGzu7fmW9pXw" name="FamilyHistoryDeathObservationRelationshipValueCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SJFXBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.classCode = vocab::x_DocumentSubject::PRS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2SJFXhSVEeGGzu7fmW9pXw" name="FamilyHistoryDeathObservationHasRelatedSubjectCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SJFXxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.code->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2SJFYRSVEeGGzu7fmW9pXw" name="FamilyHistoryDeathObservationRelatedSubjectCodeValueSet">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SJFYhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.code.codeSystem = '2.16.840.1.113883.5.111'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2SJFaBSVEeGGzu7fmW9pXw" name="FamilyHistoryDeathObservationHasRelatedSubjectSubject">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SJFaRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.subject->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2SJFaxSVEeGGzu7fmW9pXw" name="FamilyHistoryDeathObservationHasGenderCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SJFbBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.subject.administrativeGenderCode->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2SJFbhSVEeGGzu7fmW9pXw" name="FamilyHistoryDeathObservationRelatedSubjectBirthTime">
        <ownedComment xmi:id="_2SJFbxSVEeGGzu7fmW9pXw">
          <body>UNIMPLEMENTABLE</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SJFcBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.subject.relatedSubject.subject.birthTime->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZqpBx7pEeGEaLkc3UAsAg" name="FamilyHistoryDeathObservationTemplateId" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZqpCB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.42')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZ9j8B7pEeGEaLkc3UAsAg" name="FamilyHistoryDeathObservationMoodCode" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZ9j8R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cZ9j8h7pEeGEaLkc3UAsAg" name="FamilyHistoryDeathObservationId" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cZ9j8x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_caGt4B7pEeGEaLkc3UAsAg" name="FamilyHistoryDeathObservationStatusCode" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_caGt4R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_caGt4h7pEeGEaLkc3UAsAg" name="FamilyHistoryDeathObservationEffectiveTime" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_caGt4x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_caGt5B7pEeGEaLkc3UAsAg" name="FamilyHistoryDeathObservationProblemStatusObservation" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_caGt5R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AllergyStatusObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2SPMABSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_caGt5h7pEeGEaLkc3UAsAg" name="getProblemStatusObservation" isQuery="true" bodyCondition="_caGt6R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_caGt6R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_caGt5h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_caGt6h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyStatusObservation))->asSequence()->first().oclAsType(consol::AllergyStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_caGt5x7pEeGEaLkc3UAsAg" type="_2FRuAhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_caGt6B7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2SVSlBSVEeGGzu7fmW9pXw" name="LanguageSpoken">
      <ownedRule xmi:id="_2SVSmRSVEeGGzu7fmW9pXw" name="LanguageSpokenNoProficiencyLevelCode" constrainedElement="_2SVSlBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2SVSmhSVEeGGzu7fmW9pXw">
          <body>Judgments about language proficiency are subjective, and could have a negative impact on consumers.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SVSmxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.proficiencyLevelCode.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_caQe4R7pEeGEaLkc3UAsAg" name="LanguageSpokenModeCode" constrainedElement="_2SVSlBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_caQe4h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.modeCode.oclIsUndefined() or self.modeCode.isNullFlavorUndefined()) implies (self.modeCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.modeCode.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.60' and (value.code = 'ESGN' or value.code = 'ESP' or value.code = 'EWR' or value.code = 'RSGN' or value.code = 'RSP' or value.code = 'RWR')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2SbZMxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_cHD44EcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Shf0xSVEeGGzu7fmW9pXw" name="HealthcareProvider">
      <generalization xmi:id="_2Shf3xSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_FvF74EcaEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Shf4BSVEeGGzu7fmW9pXw" name="MedicationNormalDose">
      <ownedComment xmi:id="_2Shf5xSVEeGGzu7fmW9pXw" annotatedElement="_2Shf4BSVEeGGzu7fmW9pXw">
        <body>This template identifier is used to identify medication administration events that do not require&#xD;
any special processing.</body>
      </ownedComment>
      <ownedRule xmi:id="_2Shf5BSVEeGGzu7fmW9pXw" name="MedicationNormalDoseNoSubordinateSubstanceAdministration">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Shf5RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship.substanceAdministration->isEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Shf6BSVEeGGzu7fmW9pXw" general="_2GHbgBSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Shf6hSVEeGGzu7fmW9pXw" name="MedicationSplitDose">
      <ownedComment xmi:id="_2SnmcBSVEeGGzu7fmW9pXw" annotatedElement="_2Shf6hSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
This template identifier is used to identify medication administration events that require special&#xD;
processing to handle split dosing. The parent template is 1.3.6.1.4.1.19376.1.5.3.1.4.7. A split&#xD;
dose is often used when different dosages are given at different times (e.g., at different times of day, or on different days). This may be to account for different metabolism rates at different&#xD;
times of day, or to simply address drug packaging deficiencies (e.g., and order for Coumadin&#xD;
2mg on even days, 2.5mg on odd days is used because Coumadin does not come in a 2.25mg&#xD;
dose form).&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2Shf7hSVEeGGzu7fmW9pXw" name="MedicationSplitDoseSplitDosingSubstanceAdministration">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Shf7xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.entryRelationship.substanceAdministration->isEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2SnmcRSVEeGGzu7fmW9pXw" general="_2GHbgBSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2SnmcxSVEeGGzu7fmW9pXw" name="MedicationTaperedDose">
      <ownedComment xmi:id="_2SnmexSVEeGGzu7fmW9pXw" annotatedElement="_2SnmcxSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    This template identifier is used to identify medication administration events that require special processing to handle&#xD;
    tapered dosing. The parent template is 1.3.6.1.4.1.19376.1.5.3.1.4.7. A tapered dose is often used for certain&#xD;
    medications where abrupt termination of the medication can have negative consequences. Tapered dosages may be done by&#xD;
    adjusting the dose frequency, the dose amount, or both.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When merely the dose frequency is adjusted, (e.g., Prednisone 5mg b.i.d. for three days, then 5mg. daily for three&#xD;
    days, and then 5mg every other day), then only one medication entry is needed, multiple frequency specifications&#xD;
    recorded in &amp;lt;effectiveTime&amp;gt; elements. When the dose varies (eg. Prednisone 15mg daily for three days, then 10 mg&#xD;
    daily for three days, the 5 mg daily for three days), subordinate medication entries should be created for each&#xD;
    distinct dosage.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2SnmeBSVEeGGzu7fmW9pXw" name="MedicationTaperedDoseTaperedDosingSubstanceAdministration">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SnmeRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship.substanceAdministration->exists( substanceAdministration  | substanceAdministration.oclIsKindOf( consol::Medication) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_caaP4x7pEeGEaLkc3UAsAg" name="MedicationActivityTemplateId" constrainedElement="_2SnmcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_caaP5B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = 'null')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2SnmfBSVEeGGzu7fmW9pXw" general="_2GHbgBSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2SnmfRSVEeGGzu7fmW9pXw" name="MedicationConditionalDose">
      <ownedComment xmi:id="_2S56fRSVEeGGzu7fmW9pXw" annotatedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <body>&lt;p>A medication activity is used to describe what is administered.&lt;/p>&#xD;
&lt;p>An indication describes the rationale for a medication activity. The indication can be an existing problem or can be a criterion that if met would warrant the activity. Criteria are typically associated with PRN (from the Latin &quot;pro re nata&quot;, meaning &quot;as needed&quot;) medications (e.g. &quot;give Medication X as needed for nausea&quot;).&lt;/p>&#xD;
&lt;p>A reaction represents an adverse event due to an administered substance. Significant reactions are to be listed in the Alerts section. Reactions in the Medications section can be used to track reactions associated with individual substance administrations or to track routine follow up to an administration (e.g. &quot;no adverse reaction 30 minutes post administration&quot;).&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2S56fhSVEeGGzu7fmW9pXw" annotatedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
This content module describes the general structure for a medication. All medication administration acts will be derived&#xD;
from this content module.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
The &amp;lt;substanceAdministration> element may contain subordinate&#xD;
&amp;lt;substanceAdministration> elements in a related component entry to deal with special cases (see&#xD;
the section below on Special Cases). These cases include split, tapered, or conditional dosing, or&#xD;
combination medications. The use of subordinate &amp;lt;substanceAdministration> elements to deal with these cases is optional. The comment field should always be used in these cases to provide&#xD;
the same information as free text in the top level &amp;lt;substanceAdministration> element.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2S56fxSVEeGGzu7fmW9pXw" annotatedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
This template identifier is used to identify medication administration events that require special&#xD;
processing to handle conditional dosing. The parent template is 1.3.6.1.4.1.19376.1.5.3.1.4.7. A&#xD;
conditional dose is often used when the dose amount differs based on some measurement (e.g.,&#xD;
an insulin sliding scale dose based on blood sugar level).&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2SzzzhSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseMoodCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2SzzzxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN or self.moodCode=vocab::x_DocumentSubstanceMood::INT </body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Szz0RSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseHasDoseQuantityOrRateQuantity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Szz0hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.doseQuantity.oclIsUndefined() or not self.rateQuantity.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Szz1BSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseHasConsents">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Szz1RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getClinicalDocument().authorization->size() > 0 and self.getClinicalDocument().authorization.consent->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Szz1xSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseInformationSource">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Szz2BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;&#xA;or not self.getSection().informant->isEmpty()&#xD;&#xA;or not self.getClinicalDocument().informant->isEmpty()&#xD;&#xA;or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;&#xA;or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;&#xA;   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;&#xA;   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Szz2hSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseHasPreconditionCriterion">
        <ownedComment xmi:id="_2Szz2xSVEeGGzu7fmW9pXw">
          <body>Indicates that the medication is administered only when the associated (coded or free text) criteria are met.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Szz3BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.precondition->exists(precondition : cda::Precondition | not precondition.criterion.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Szz3hSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseHasReason">
        <ownedComment xmi:id="_2Szz3xSVEeGGzu7fmW9pXw">
          <body>The target of the relationship represents the indication for the activity.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Szz4BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRel : cda::EntryRelationship | entryRel.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Szz4hSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseHasReasonProblem">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Szz4xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::RSON, cda::ClinicalStatement)->forAll(target : &#xD;&#xD;&#xA;cda::ClinicalStatement | not target.oclIsUndefined() and &#xD;&#xA;  (target.oclIsKindOf(consol::ProblemConcernAct) or target.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2S56URSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseHasProduct">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2S56UhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.consumable.manufacturedProduct.oclIsKindOf(consol::Product)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2S56VBSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseHasDosing">
        <ownedComment xmi:id="_2S56VRSVEeGGzu7fmW9pXw">
          <body>There are a variety of special cases for dosing that need to be accounted for. &#xD;
Most of these special cases involve changing the dosage or frequency over time, or based on&#xD;
some measurement. When the dosage changes, then additional entries are required for each differing dosage.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2S56VhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.7.1') xor self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.8') xor self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.9') xor self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.10') xor self.templateId->exists(id : datatypes::II | id.root =  '1.3.6.1.4.1.19376.1.5.3.1.4.11')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2S56VxSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseDosingRelationship">
        <ownedComment xmi:id="_2S56WBSVEeGGzu7fmW9pXw">
          <body>n the first three cases, the subordinate components shall specify only the changed &amp;lt;frequency>&#xD;
and/or &amp;lt;doseAmount> elements. For conditional dosing, each subordinate component shall have&#xD;
a &amp;lt;precondition> element that specifies the &amp;lt;observation> that must be obtained before&#xD;
administration of the dose. The value of the &amp;lt;sequenceNumber> shall be an ordinal number,&#xD;
starting at 1 for the first component, and increasing by 1 for each subsequent component.&#xD;
Components shall be sent in &amp;lt;sequenceNumber> order.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2S56WRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.8') xor &#xA;self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.9') xor &#xA;self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.10') xor &#xA;self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.11') implies self.entryRelationship->exists(er | er.typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2S56WhSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseHasDescriptionNoMedNotKnown">
        <ownedComment xmi:id="_2S56WxSVEeGGzu7fmW9pXw">
          <body>&lt;p>&#xD;
182904002 &quot;Drug Treatment Unknown&quot; (To indicate lack of knowledge about drug therapy)&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
182849000 &quot;No Drug Therapy Prescribed&quot; (To indicate the absense of any prescribed medications)&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
408350003 &quot;Patient Not On Self-Medications&quot; (To indicate no treatment)&#xD;
&lt;/p></body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2S56XBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2S56XhSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseReasonClassMood">
        <ownedComment xmi:id="_2S56XxSVEeGGzu7fmW9pXw">
          <body>self.internalReference->exists(ir : consol::InternalReference | ar.classCode &amp;lt;> 'ACT' or ar.moodCode &amp;lt;> 'EVN')</body>
        </ownedComment>
        <ownedComment xmi:id="_2S56YBSVEeGGzu7fmW9pXw">
          <body>OCL Issue - What is the internalReference relationship?  unable to get OCL to reference</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2S56YRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2S56YxSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseHasProductEntry">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2S56ZBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.consumable.manufacturedProduct.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.7.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2S56ZhSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseHasIntructionsInversion">
        <ownedComment xmi:id="_2S56ZxSVEeGGzu7fmW9pXw">
          <body>OCL Issue - What is the patientInstructions relationship?  unable to get OCL to reference</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2S56aBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->forAll( er : cda::EntryRelationship | (not er.act.oclIsKindOf(consol::PatientMedicalInstructions)) or ( er.inversionInd = true and er.act.oclIsKindOf(consol::PatientMedicalInstructions))  )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2S56ahSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseProductStrength">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2S56axSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.consumable.manufacturedProduct.manufacturedMaterial.code.oclIsUndefined() implies not self.consumable.manufacturedProduct.manufacturedMaterial.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2S56bRSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseProductName">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2S56bhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.consumable.manufacturedProduct.manufacturedMaterial.name.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2S56cBSVEeGGzu7fmW9pXw" name="MedicationConditionalDosePreconditionReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2S56cRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.precondition.criterion.text->exists (t | t.reference.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2S56cxSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseHasSupplyEntryInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2S56dBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.entryRelationship->exists(er : cda::EntryRelationship | (not er.supply->isEmpty()) and er.inversionInd&lt;>false )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2S56dhSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseHasFillNumber">
        <ownedComment xmi:id="_2S56dxSVEeGGzu7fmW9pXw">
          <body>The prescription activity may have a &amp;lt;sequenceNumber> element to indicate the fill number. A&#xD;
value of 1, 2 or N indicates that it is the first, second, or Nth fill respectively of a specific&#xD;
prescription.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2S56eBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.entryRelationship->exists(er| (not er.supply->isEmpty()) and er.sequenceNumber.value.oclIsUndefined() )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2S56ehSVEeGGzu7fmW9pXw" name="MedicationConditionalDoseConditionalDosingSubstanceAdministration">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2S56exSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.entryRelationship.substanceAdministration->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_catK0B7pEeGEaLkc3UAsAg" name="MedicationConditionalDoseId" constrainedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_catK0R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_catK0h7pEeGEaLkc3UAsAg" name="MedicationActivityCode" constrainedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_catK0x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ca270B7pEeGEaLkc3UAsAg" name="MedicationConditionalDoseStatusCode" constrainedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ca270R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ca270h7pEeGEaLkc3UAsAg" name="MedicationConditionalDoseEffectiveTime" constrainedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ca270x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ca271B7pEeGEaLkc3UAsAg" name="MedicationConditionalDoseRouteCode" constrainedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ca271R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.112'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cbAFwB7pEeGEaLkc3UAsAg" name="MedicationConditionalDoseApproachSiteCode" constrainedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbAFwR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.approachSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cbAFwh7pEeGEaLkc3UAsAg" name="MedicationConditionalDoseDoseQuantity" constrainedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbAFwx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cbAFxB7pEeGEaLkc3UAsAg" name="MedicationConditionalDoseRateQuantity" constrainedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbAFxR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.rateQuantity.oclIsUndefined() or self.rateQuantity.isNullFlavorUndefined()) implies (not self.rateQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cbAFxh7pEeGEaLkc3UAsAg" name="MedicationConditionalDoseMaxDoseQuantity" constrainedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbAFxx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.maxDoseQuantity.oclIsUndefined() or self.maxDoseQuantity.isNullFlavorUndefined()) implies (not self.maxDoseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cbJ2wB7pEeGEaLkc3UAsAg" name="MedicationConditionalDoseMedicationSeriesNumberObservation" constrainedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbJ2wR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::MedicationSeriesNumberObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cbJ2xx7pEeGEaLkc3UAsAg" name="MedicationConditionalDoseMedicationStatusObservation" constrainedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbJ2yB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::MedicationStatusObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cbJ2zh7pEeGEaLkc3UAsAg" name="MedicationConditionalDoseReactionObservation" constrainedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbJ2zx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cbTAsB7pEeGEaLkc3UAsAg" name="MedicationConditionalDoseProductInstance" constrainedElement="_2SnmfRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbTAsR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ProductInstance))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2S56gBSVEeGGzu7fmW9pXw" general="_2GHbgBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_cbJ2wh7pEeGEaLkc3UAsAg" name="getMedicationSeriesNumberObservation" isQuery="true" bodyCondition="_cbJ2xR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cbJ2xR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cbJ2wh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbJ2xh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::MedicationSeriesNumberObservation))->asSequence()->first().oclAsType(consol::MedicationSeriesNumberObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cbJ2wx7pEeGEaLkc3UAsAg" type="_2Gnx1RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cbJ2xB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cbJ2yR7pEeGEaLkc3UAsAg" name="getMedicationStatusObservation" isQuery="true" bodyCondition="_cbJ2zB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cbJ2zB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cbJ2yR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbJ2zR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::MedicationStatusObservation))->asSequence()->first().oclAsType(consol::MedicationStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cbJ2yh7pEeGEaLkc3UAsAg" type="_2GtRYxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cbJ2yx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cbJ20B7pEeGEaLkc3UAsAg" name="getConsolReactionObservations" isQuery="true" bodyCondition="_cbJ20x7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cbJ20x7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cbJ20B7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbJ21B7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation)).oclAsType(consol::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cbJ20R7pEeGEaLkc3UAsAg" type="_2E_aIRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cbJ20h7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cbTAsh7pEeGEaLkc3UAsAg" name="getProductInstances" isQuery="true" bodyCondition="_cbTAtR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cbTAtR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cbTAsh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbTAth7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ProductInstance)).oclAsType(consol::ProductInstance)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cbTAsx7pEeGEaLkc3UAsAg" type="_2G2bUxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cbTAtB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cbTAtx7pEeGEaLkc3UAsAg" name="getInternalReferences" isQuery="true" bodyCondition="_cbTAuh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cbTAuh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cbTAtx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbTAux7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(cda::Act)).oclAsType(cda::Act)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cbTAuB7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cbTAuR7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cbTAvB7pEeGEaLkc3UAsAg" name="getPatientMedicalInstructionss" isQuery="true" bodyCondition="_cbTAvx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cbTAvx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cbTAvB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbTAwB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions)).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cbTAvR7pEeGEaLkc3UAsAg" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cbTAvh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cbTAwR7pEeGEaLkc3UAsAg" name="getSupplyEntry" isQuery="true" bodyCondition="_cbTAxB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cbTAxB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cbTAwR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbTAxR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity))->asSequence()->first().oclAsType(consol::NonMedicinalSupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cbTAwh7pEeGEaLkc3UAsAg" type="_2HIvMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cbTAwx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2TAA8RSVEeGGzu7fmW9pXw" name="MedicationCombinationMedication">
      <ownedComment xmi:id="_2TSU7xSVEeGGzu7fmW9pXw" annotatedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <body>&lt;p>A medication activity is used to describe what is administered.&lt;/p>&#xD;
&lt;p>An indication describes the rationale for a medication activity. The indication can be an existing problem or can be a criterion that if met would warrant the activity. Criteria are typically associated with PRN (from the Latin &quot;pro re nata&quot;, meaning &quot;as needed&quot;) medications (e.g. &quot;give Medication X as needed for nausea&quot;).&lt;/p>&#xD;
&lt;p>A reaction represents an adverse event due to an administered substance. Significant reactions are to be listed in the Alerts section. Reactions in the Medications section can be used to track reactions associated with individual substance administrations or to track routine follow up to an administration (e.g. &quot;no adverse reaction 30 minutes post administration&quot;).&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2TSU8BSVEeGGzu7fmW9pXw" annotatedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
This content module describes the general structure for a medication. All medication administration acts will be derived&#xD;
from this content module.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
The &amp;lt;substanceAdministration> element may contain subordinate&#xD;
&amp;lt;substanceAdministration> elements in a related component entry to deal with special cases (see&#xD;
the section below on Special Cases). These cases include split, tapered, or conditional dosing, or&#xD;
combination medications. The use of subordinate &amp;lt;substanceAdministration> elements to deal with these cases is optional. The comment field should always be used in these cases to provide&#xD;
the same information as free text in the top level &amp;lt;substanceAdministration> element.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2TSU8RSVEeGGzu7fmW9pXw" annotatedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
This template identifier is used to identify medication administration events that require special&#xD;
processing to handle combination medications. The parent template is&#xD;
1.3.6.1.4.1.19376.1.5.3.1.4.7. A combination medication is made up of two or more other&#xD;
medications. These may be prepackaged, such as Percocet, which is a combination of&#xD;
Acetaminophen and oxycodone in predefined ratios, or prepared by a pharmacist, such as a GI&#xD;
cocktail.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
In the case of the prepackaged combination, it is sufficient to supply the name of the&#xD;
combination drug product, and its strength designation in a single &amp;lt;substanceAdministation>&#xD;
entry. The dosing information should then be recorded as simply a count of administration units.&#xD;
In the latter case of a prepared mixture, the description of the mixture should be provided as the&#xD;
product name (e.g., &quot;GI Cocktail&quot;) , in the &amp;lt;substanceAdministration> entry. That entry may, but&#xD;
is not required, to have subordinate &amp;lt;substanceAdministration> entries included beneath it to record the components of the mixture.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2TMORRSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationMoodCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TMORhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN or self.moodCode=vocab::x_DocumentSubstanceMood::INT </body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TMOSBSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationHasDoseQuantityOrRateQuantity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TMOSRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.doseQuantity.oclIsUndefined() or not self.rateQuantity.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TMOSxSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationHasConsents">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TMOTBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getClinicalDocument().authorization->size() > 0 and self.getClinicalDocument().authorization.consent->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TMOThSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationInformationSource">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TMOTxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;&#xA;or not self.getSection().informant->isEmpty()&#xD;&#xA;or not self.getClinicalDocument().informant->isEmpty()&#xD;&#xA;or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;&#xA;or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;&#xA;   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;&#xA;   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TMOURSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationHasPreconditionCriterion">
        <ownedComment xmi:id="_2TMOUhSVEeGGzu7fmW9pXw">
          <body>Indicates that the medication is administered only when the associated (coded or free text) criteria are met.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TMOUxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.precondition->exists(precondition : cda::Precondition | not precondition.criterion.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TMOVRSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationHasReason">
        <ownedComment xmi:id="_2TMOVhSVEeGGzu7fmW9pXw">
          <body>The target of the relationship represents the indication for the activity.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TMOVxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRel : cda::EntryRelationship | entryRel.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TMOWRSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationHasReasonProblem">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TMOWhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::RSON, cda::ClinicalStatement)->forAll(target : &#xD;&#xD;&#xA;cda::ClinicalStatement | not target.oclIsUndefined() and &#xD;&#xA;  (target.oclIsKindOf(consol::ProblemConcernAct) or target.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TMOXBSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationHasProduct">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TMOXRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.consumable.manufacturedProduct.oclIsKindOf(consol::Product)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TMOXxSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationHasDosing">
        <ownedComment xmi:id="_2TMOYBSVEeGGzu7fmW9pXw">
          <body>There are a variety of special cases for dosing that need to be accounted for. &#xD;
Most of these special cases involve changing the dosage or frequency over time, or based on&#xD;
some measurement. When the dosage changes, then additional entries are required for each differing dosage.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TMOYRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.7.1') xor self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.8') xor self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.9') xor self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.10') xor self.templateId->exists(id : datatypes::II | id.root =  '1.3.6.1.4.1.19376.1.5.3.1.4.11')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TMOYhSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationDosingRelationship">
        <ownedComment xmi:id="_2TMOYxSVEeGGzu7fmW9pXw">
          <body>n the first three cases, the subordinate components shall specify only the changed &amp;lt;frequency>&#xD;
and/or &amp;lt;doseAmount> elements. For conditional dosing, each subordinate component shall have&#xD;
a &amp;lt;precondition> element that specifies the &amp;lt;observation> that must be obtained before&#xD;
administration of the dose. The value of the &amp;lt;sequenceNumber> shall be an ordinal number,&#xD;
starting at 1 for the first component, and increasing by 1 for each subsequent component.&#xD;
Components shall be sent in &amp;lt;sequenceNumber> order.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TMOZBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.8') xor &#xA;self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.9') xor &#xA;self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.10') xor &#xA;self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.11') implies self.entryRelationship->exists(er | er.typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TMOZRSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationHasDescriptionNoMedNotKnown">
        <ownedComment xmi:id="_2TMOZhSVEeGGzu7fmW9pXw">
          <body>&lt;p>&#xD;
182904002 &quot;Drug Treatment Unknown&quot; (To indicate lack of knowledge about drug therapy)&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
182849000 &quot;No Drug Therapy Prescribed&quot; (To indicate the absense of any prescribed medications)&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
408350003 &quot;Patient Not On Self-Medications&quot; (To indicate no treatment)&#xD;
&lt;/p></body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TMOZxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TSU0RSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationReasonClassMood">
        <ownedComment xmi:id="_2TSU0hSVEeGGzu7fmW9pXw">
          <body>self.internalReference->exists(ir : consol::InternalReference | ar.classCode &amp;lt;> 'ACT' or ar.moodCode &amp;lt;> 'EVN')</body>
        </ownedComment>
        <ownedComment xmi:id="_2TSU0xSVEeGGzu7fmW9pXw">
          <body>OCL Issue - What is the internalReference relationship?  unable to get OCL to reference</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TSU1BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TSU1hSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationHasProductEntry">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TSU1xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.consumable.manufacturedProduct.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.7.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TSU2RSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationHasIntructionsInversion">
        <ownedComment xmi:id="_2TSU2hSVEeGGzu7fmW9pXw">
          <body>OCL Issue - What is the patientInstructions relationship?  unable to get OCL to reference</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TSU2xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->forAll( er : cda::EntryRelationship | (not er.act.oclIsKindOf(consol::PatientMedicalInstructions)) or ( er.inversionInd = true and er.act.oclIsKindOf(consol::PatientMedicalInstructions))  )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TSU3RSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationProductStrength">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TSU3hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.consumable.manufacturedProduct.manufacturedMaterial.code.oclIsUndefined() implies not self.consumable.manufacturedProduct.manufacturedMaterial.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TSU4BSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationProductName">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TSU4RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.consumable.manufacturedProduct.manufacturedMaterial.name.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TSU4xSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationPreconditionReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TSU5BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.precondition.criterion.text->exists (t | t.reference.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TSU5hSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationHasSupplyEntryInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TSU5xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.entryRelationship->exists(er : cda::EntryRelationship | (not er.supply->isEmpty()) and er.inversionInd&lt;>false )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TSU6RSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationHasFillNumber">
        <ownedComment xmi:id="_2TSU6hSVEeGGzu7fmW9pXw">
          <body>The prescription activity may have a &amp;lt;sequenceNumber> element to indicate the fill number. A&#xD;
value of 1, 2 or N indicates that it is the first, second, or Nth fill respectively of a specific&#xD;
prescription.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TSU6xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.entryRelationship->exists(er| (not er.supply->isEmpty()) and er.sequenceNumber.value.oclIsUndefined() )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TSU7RSVEeGGzu7fmW9pXw" name="MedicationCombinationMedicationCombinationMedicationSubstanceAdministration">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TSU7hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.entryRelationship.substanceAdministration->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cbmisB7pEeGEaLkc3UAsAg" name="MedicationCombinationMedicationId" constrainedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbmisR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cbmish7pEeGEaLkc3UAsAg" name="MedicationActivityCode" constrainedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbmisx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cbvsoB7pEeGEaLkc3UAsAg" name="MedicationCombinationMedicationStatusCode" constrainedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbvsoR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cbvsoh7pEeGEaLkc3UAsAg" name="MedicationCombinationMedicationEffectiveTime" constrainedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbvsox7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cbvspB7pEeGEaLkc3UAsAg" name="MedicationCombinationMedicationRouteCode" constrainedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbvspR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.112'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cb5doB7pEeGEaLkc3UAsAg" name="MedicationCombinationMedicationApproachSiteCode" constrainedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cb5doR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.approachSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cb5doh7pEeGEaLkc3UAsAg" name="MedicationCombinationMedicationDoseQuantity" constrainedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cb5dox7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cb5dpB7pEeGEaLkc3UAsAg" name="MedicationCombinationMedicationRateQuantity" constrainedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cb5dpR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.rateQuantity.oclIsUndefined() or self.rateQuantity.isNullFlavorUndefined()) implies (not self.rateQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cb5dph7pEeGEaLkc3UAsAg" name="MedicationCombinationMedicationMaxDoseQuantity" constrainedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cb5dpx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.maxDoseQuantity.oclIsUndefined() or self.maxDoseQuantity.isNullFlavorUndefined()) implies (not self.maxDoseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ccDOoB7pEeGEaLkc3UAsAg" name="MedicationCombinationMedicationMedicationSeriesNumberObservation" constrainedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccDOoR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::MedicationSeriesNumberObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ccDOpx7pEeGEaLkc3UAsAg" name="MedicationCombinationMedicationMedicationStatusObservation" constrainedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccDOqB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::MedicationStatusObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ccDOrh7pEeGEaLkc3UAsAg" name="MedicationCombinationMedicationReactionObservation" constrainedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccDOrx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ccMYkR7pEeGEaLkc3UAsAg" name="MedicationCombinationMedicationProductInstance" constrainedElement="_2TAA8RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccMYkh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ProductInstance))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2TSU8hSVEeGGzu7fmW9pXw" general="_2GHbgBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_ccDOoh7pEeGEaLkc3UAsAg" name="getMedicationSeriesNumberObservation" isQuery="true" bodyCondition="_ccDOpR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ccDOpR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ccDOoh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccDOph7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::MedicationSeriesNumberObservation))->asSequence()->first().oclAsType(consol::MedicationSeriesNumberObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ccDOox7pEeGEaLkc3UAsAg" type="_2Gnx1RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ccDOpB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ccDOqR7pEeGEaLkc3UAsAg" name="getMedicationStatusObservation" isQuery="true" bodyCondition="_ccDOrB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ccDOrB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ccDOqR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccDOrR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::MedicationStatusObservation))->asSequence()->first().oclAsType(consol::MedicationStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ccDOqh7pEeGEaLkc3UAsAg" type="_2GtRYxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ccDOqx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ccDOsB7pEeGEaLkc3UAsAg" name="getConsolReactionObservations" isQuery="true" bodyCondition="_ccDOsx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ccDOsx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ccDOsB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccMYkB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation)).oclAsType(consol::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ccDOsR7pEeGEaLkc3UAsAg" type="_2E_aIRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ccDOsh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ccMYkx7pEeGEaLkc3UAsAg" name="getProductInstances" isQuery="true" bodyCondition="_ccMYlh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ccMYlh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ccMYkx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccMYlx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ProductInstance)).oclAsType(consol::ProductInstance)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ccMYlB7pEeGEaLkc3UAsAg" type="_2G2bUxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ccMYlR7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ccMYmB7pEeGEaLkc3UAsAg" name="getInternalReferences" isQuery="true" bodyCondition="_ccMYmx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ccMYmx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ccMYmB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccMYnB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(cda::Act)).oclAsType(cda::Act)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ccMYmR7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ccMYmh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ccMYnR7pEeGEaLkc3UAsAg" name="getPatientMedicalInstructionss" isQuery="true" bodyCondition="_ccMYoB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ccMYoB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ccMYnR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccMYoR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions)).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ccMYnh7pEeGEaLkc3UAsAg" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ccMYnx7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ccMYoh7pEeGEaLkc3UAsAg" name="getSupplyEntry" isQuery="true" bodyCondition="_ccMYpR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ccMYpR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ccMYoh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccMYph7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity))->asSequence()->first().oclAsType(consol::NonMedicinalSupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ccMYox7pEeGEaLkc3UAsAg" type="_2HIvMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ccMYpB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2TYbcBSVEeGGzu7fmW9pXw" name="SupportGuardian">
      <ownedComment xmi:id="_2TYbiBSVEeGGzu7fmW9pXw" annotatedElement="_2TYbcBSVEeGGzu7fmW9pXw">
        <body>&lt;p>Represents the patient's sources of support such as immediate family, relatives, and guardian at the time the summarization is generated. Support information also includes next of kin, caregivers, and support organizations. At a minimum, key support contacts relative to healthcare decisions, including next of kin, should be included.&lt;/p>&#xD;
&lt;p>CDA R2 represents a patient's guardian with the CDA Header Guardian class. Other Supporters are represented as participant participations in the CDA Header.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2TYbiRSVEeGGzu7fmW9pXw" annotatedElement="_2TYbcBSVEeGGzu7fmW9pXw">
        <body>&lt;p>Represents the patient's sources of support such as immediate family, relatives, and guardian at the time the summarization is generated. Support information also includes next of kin, caregivers, and support organizations. At a minimum, key support contacts relative to healthcare decisions, including next of kin, should be included.&lt;/p>&#xD;
&lt;p>CDA R2 represents a patient's guardian with the CDA Header Guardian class. Other Supporters are represented as participant participations in the CDA Header.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2TYbcRSVEeGGzu7fmW9pXw" annotatedElement="_2TYbcBSVEeGGzu7fmW9pXw">
        <body>At a minimum, key support contacts relative to healthcare decisions, including next of kin, should be included. If no healthcare providers are supplied, the reason should be supplied as free text in the narrative block (e.g., Unknown, etc).</body>
      </ownedComment>
      <generalization xmi:id="_2TYbihSVEeGGzu7fmW9pXw" general="_2OfUbhSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2TYbixSVEeGGzu7fmW9pXw" name="SupportParticipant">
      <ownedComment xmi:id="_2TeiHhSVEeGGzu7fmW9pXw" annotatedElement="_2TYbixSVEeGGzu7fmW9pXw">
        <body>&lt;p>Represents the patient's sources of support such as immediate family, relatives, and guardian at the time the summarization is generated. Support information also includes next of kin, caregivers, and support organizations. At a minimum, key support contacts relative to healthcare decisions, including next of kin, should be included.&lt;/p>&#xD;
&lt;p>CDA R2 represents a patient's guardian with the CDA Header Guardian class. Other Supporters are represented as participant participations in the CDA Header.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2TeiHxSVEeGGzu7fmW9pXw" annotatedElement="_2TYbixSVEeGGzu7fmW9pXw">
        <body>&lt;p>Represents the patient's sources of support such as immediate family, relatives, and guardian at the time the summarization is generated. Support information also includes next of kin, caregivers, and support organizations. At a minimum, key support contacts relative to healthcare decisions, including next of kin, should be included.&lt;/p>&#xD;
&lt;p>CDA R2 represents a patient's guardian with the CDA Header Guardian class. Other Supporters are represented as participant participations in the CDA Header.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2TYbjBSVEeGGzu7fmW9pXw" annotatedElement="_2TYbixSVEeGGzu7fmW9pXw">
        <body>At a minimum, key support contacts relative to healthcare decisions, including next of kin, should be included. If no healthcare providers are supplied, the reason should be supplied as free text in the narrative block (e.g., Unknown, etc).</body>
      </ownedComment>
      <generalization xmi:id="_2TeiIBSVEeGGzu7fmW9pXw" general="_2OfUbhSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2TeiIRSVEeGGzu7fmW9pXw" name="UnstructuredDocument">
      <ownedComment xmi:id="_2T9DPhSVEeGGzu7fmW9pXw" annotatedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <body>A variety of legacy paper, film, electronic and scanner outputted formats are used to store and exchange clinical documents. These formats are not designed for healthcare documentation, and furthermore, do not have a uniform mechanism to store healthcare metadata associated with the documents, including patient identifiers, demographics, encounter, order or service information. The association of structured, healthcare metadata with this kind of document is important to maintain the integrity of the patient health record as managed by the source system. It is necessary to provide a mechanism that allows such source metadata to be stored with the document.</body>
      </ownedComment>
      <ownedComment xmi:id="_2TeiIhSVEeGGzu7fmW9pXw" annotatedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <body>&lt;b>IMPORTANT NOTE:&lt;/b> &lt;i>The HITSP C62 specification does not include a templateId for this doument type. The id 2.16.840.1.113883.3.88.11.62.1 is included in this model to support instance validation, but we are designing a solution to allow removal of this Id.&lt;/i></body>
      </ownedComment>
      <ownedRule xmi:id="_2Tw2CBSVEeGGzu7fmW9pXw" name="UnstructuredDocumentTypeIdFixed">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tw2CRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.typeId.root = '2.16.840.1.113883.1.3' and self.typeId.extension = 'POCD_HD000040'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Tw2CxSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasOneRecordTarget">
        <ownedComment xmi:id="_2Tw2DBSVEeGGzu7fmW9pXw">
          <body>Contains identifying information about the patient concerned in the original content. In many cases this will have to be supplied by the operator.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tw2DRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T28kBSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasAssignedAuthor">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T28kRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.assignedAuthor.assignedPerson.oclIsUndefined() &#xD;&#xA;   or not author.assignedAuthor.representedOrganization.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T28kxSVEeGGzu7fmW9pXw" name="UnstructuredDocumentPatientRoleId">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T28lBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->forAll(target : cda::RecordTarget | not target.patientRole.oclIsUndefined()&#xD;&#xA;   and target.patientRole.id->forAll(roleId : datatypes::II | not roleId.root.oclIsUndefined()&#xD;&#xA;   and not roleId.extension.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T28lhSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasPatientRoleAddress">
        <ownedComment xmi:id="_2T28lxSVEeGGzu7fmW9pXw">
          <body>The addr element has an unbounded upper limit on occurrences. It can, and should, be replicated to include additional addresses for a patient, each minimally specified by the country sub element.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T28mBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->exists(target : cda::RecordTarget | not target.patientRole.oclIsUndefined()&#xD;&#xA;   and target.patientRole.addr->exists(address : datatypes::AD | address.country->exists(c : datatypes::ADXP |&#xD;&#xA;   not c.oclIsUndefined() and c.getText().size() > 0)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T28mhSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasPatientName">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T28mxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->exists(target : cda::RecordTarget | not target.patientRole.patient.oclIsUndefined()&#xD;&#xA;   and target.patientRole.patient.name->exists(name: datatypes::PN |&#xD;&#xA;      not name.given->isEmpty() and not name.family->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T28nRSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasPatientGenderCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T28nhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->one(target : cda::RecordTarget |&#xD;&#xA;   not target.patientRole.patient.administrativeGenderCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T28oBSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasPatientBirthYear">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T28oRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->one(target : cda::RecordTarget |&#xD;&#xA;   not target.patientRole.patient.birthTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T28oxSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasOriginalAuthor">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T28pBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::ScanOriginalAuthor))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T28phSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasScanningDevice">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T28pxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::ScanningDevice))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T28qRSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasScanDataEnterer">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T28qhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.dataEnterer.oclIsUndefined() and self.dataEnterer.oclIsKindOf(consol::ScanDataEnterer)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T28rBSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasRepresentedCustodianOrganizationName">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T28rRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.custodian.assignedCustodian.representedCustodianOrganization.name.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T28rxSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasRepresentedCustodianOrganizationAddr">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T28sBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.custodian.assignedCustodian.representedCustodianOrganization.addr.oclIsUndefined()&#xD;&#xA;   and self.custodian.assignedCustodian.representedCustodianOrganization.addr.country->exists(c : datatypes::ADXP |&#xD;&#xA;      not c.oclIsUndefined() and c.getText().size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T28shSVEeGGzu7fmW9pXw" name="UnstructuredDocumentLegalAuthenticatorAssignedEntityId">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T28sxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.legalAuthenticator.assignedEntity.id->size() > 0 implies (&#xD;&#xA;   self.legalAuthenticator.assignedEntity.id->forAll(ident : datatypes::II |&#xD;&#xA;      not ident.root.oclIsUndefined() and not ident.extension.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T28tRSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasNonXMLBody">
        <ownedComment xmi:id="_2T28thSVEeGGzu7fmW9pXw">
          <body>Used to wrap the scanned content. The nonXMLBody element is guaranteed to be unique; thus the x-path to recover the scanned content is essentially fixed.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T28txSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.component.nonXMLBody.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T9DNBSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasNonXMLBodyBinaryText">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T9DNRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.component.nonXMLBody.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T9DNxSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasNonXMLBodyTextMediaType">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T9DOBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.component.nonXMLBody.text.mediaType = 'application/pdf' or self.component.nonXMLBody.text.mediaType = 'text/plain'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T9DOhSVEeGGzu7fmW9pXw" name="UnstructuredDocumentHasNonXMLBodyTextRepresentation">
        <ownedComment xmi:id="_2T9DOxSVEeGGzu7fmW9pXw">
          <body>The @representation for both PDF and plaintext scanned content will be &quot;B64&quot;, because this profile requires the base-64 encoding of both formats.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T9DPBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.component.nonXMLBody.text.representation = datatypes::BinaryDataEncoding::B64</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TeiIxSVEeGGzu7fmW9pXw" name="UnstructuredDocumentNoStructuredData" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TeiJBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.component.structuredBody.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TeiJRSVEeGGzu7fmW9pXw" name="UnstructuredDocumentOnePatientPerDocument" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TeiJhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->one(record : cda::RecordTarget | not record.patientRole.oclIsUndefined() and not record.patientRole.patient.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ccWJkR7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccWJkh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.62.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ccy1gB7pEeGEaLkc3UAsAg" name="UnstructuredDocumentCode" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccy1gR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ccy1gh7pEeGEaLkc3UAsAg" name="UnstructuredDocumentConfidentialityCode" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccy1gx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.confidentialityCode.oclIsUndefined() or self.confidentialityCode.isNullFlavorUndefined()) implies (not self.confidentialityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ccy1hB7pEeGEaLkc3UAsAg" name="UnstructuredDocumentEffectiveTime" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccy1hR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ccy1hh7pEeGEaLkc3UAsAg" name="UnstructuredDocumentId" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ccy1hx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cc7_cB7pEeGEaLkc3UAsAg" name="UnstructuredDocumentLanguageCode" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cc7_cR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.languageCode.oclIsUndefined() or self.languageCode.isNullFlavorUndefined()) implies (not self.languageCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cc7_ch7pEeGEaLkc3UAsAg" name="UnstructuredDocumentTitle" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cc7_cx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cc7_dB7pEeGEaLkc3UAsAg" name="UnstructuredDocumentTypeId" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cc7_dR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.typeId.oclIsUndefined() or self.typeId.isNullFlavorUndefined()) implies (not self.typeId.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2T9DPxSVEeGGzu7fmW9pXw" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2TkovBSVEeGGzu7fmW9pXw" name="ScanOriginalAuthor">
      <ownedComment xmi:id="_2TkovRSVEeGGzu7fmW9pXw" annotatedElement="_2TkovBSVEeGGzu7fmW9pXw">
        <body>Represents the author of the original content. It additionally can encode the original author‟s institution in the subelement representedOrganization. Information regarding the original author and his/her institution shall be included, if it is known. In many cases this will have to be supplied by the operator.</body>
      </ownedComment>
      <ownedRule xmi:id="_2TkovhSVEeGGzu7fmW9pXw" name="ScanOriginalAuthorHasAssignedAuthorId">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TkovxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.assignedAuthor.id->forAll(ident : datatypes::II |&#xD;&#xA;   not ident.root.oclIsUndefined() and not ident.extension.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TkowBSVEeGGzu7fmW9pXw" name="ScanOriginalAuthorHasAssignedAuthorRepresentedOrganizationId">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TkowRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.assignedAuthor.representedOrganization.id->forAll(ident : datatypes::II |&#xD;&#xA;   not ident.root.oclIsUndefined() and not ident.extension.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2TkozxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ChEisEcEEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Tko1hSVEeGGzu7fmW9pXw" name="ScanningDevice">
      <ownedComment xmi:id="_2Tko1xSVEeGGzu7fmW9pXw" annotatedElement="_2Tko1hSVEeGGzu7fmW9pXw">
        <body>Represents the scanning device and software used to produce the scanned content.</body>
      </ownedComment>
      <ownedRule xmi:id="_2Tko2BSVEeGGzu7fmW9pXw" name="ScanningDeviceTimeEqualsDocumentEffectiveTime">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tko2RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.time.value = self.getClinicalDocument().effectiveTime.value</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Tko2hSVEeGGzu7fmW9pXw" name="ScanningDeviceHasAssignedAuthorId">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tko2xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.assignedAuthor.id->forAll(ident : datatypes::II | not ident.root.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Tko3BSVEeGGzu7fmW9pXw" name="ScanningDeviceHasAssignedAuthoringDeviceCode" constrainedElement="_2Tko1hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tko3RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.assignedAuthor.assignedAuthoringDevice.code.codeSystem = '1.2.840.10008.2.16.4'&#xD;&#xA;   and not self.assignedAuthor.assignedAuthoringDevice.code.code.oclIsUndefined()&#xD;&#xA;   and not self.assignedAuthor.assignedAuthoringDevice.code.displayName.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Tko3hSVEeGGzu7fmW9pXw" name="ScanningDeviceHasDeviceManufacturerModelName" constrainedElement="_2Tko1hSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2Tko3xSVEeGGzu7fmW9pXw">
          <body>The mixed content shall contain string information that specifies the scanner product name and model number. From this information, features like bit depth and resolution can be inferred. In the case of virtually scanned documents (for example, print to PDF), the manufactureModelName referenced here refers to the makers of the technology that was used to produce the embedded content.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tko4BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.assignedAuthor.assignedAuthoringDevice.manufacturerModelName.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Tko4RSVEeGGzu7fmW9pXw" name="ScanningDeviceHasDeviceSoftwareName" constrainedElement="_2Tko1hSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2Tko4hSVEeGGzu7fmW9pXw">
          <body>The mixed content shall contain string information that specifies the scanning software name and version. In the case of virtually scanned documents, the softwareName referenced here refers to the technology that was used to produce the embedded content.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tko4xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.assignedAuthor.assignedAuthoringDevice.softwareName.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Tko5BSVEeGGzu7fmW9pXw" name="ScanningDeviceHasAssignedAuthorRepresentedOrganizationId">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tko5RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.assignedAuthor.representedOrganization.id->forAll(ident : datatypes::II | not ident.root.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2TqvXRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ChEisEcEEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2TqvZBSVEeGGzu7fmW9pXw" name="ScanDataEnterer">
      <ownedComment xmi:id="_2TqvZRSVEeGGzu7fmW9pXw" annotatedElement="_2TqvZBSVEeGGzu7fmW9pXw">
        <body>Represents the scanner operator who produced the scanned content.</body>
      </ownedComment>
      <ownedRule xmi:id="_2TqvZhSVEeGGzu7fmW9pXw" name="ScanDataEntererTimeEqualsDocumentEffectiveTime">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TqvZxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.time.value = self.getClinicalDocument().effectiveTime.value</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2TqvaBSVEeGGzu7fmW9pXw" name="ScanDataEntererHasAssignedEntityId">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TqvaRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.assignedEntity.id->forAll(ident : datatypes::II | not ident.root.oclIsUndefined() and not ident.extension.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cdPhcR7pEeGEaLkc3UAsAg" name="ScanDataEntererTime" constrainedElement="_2TqvZBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cdPhch7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.time.oclIsUndefined() or self.time.isNullFlavorUndefined()) implies (not self.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Tw1-hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_twqZYEcEEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2T9DQBSVEeGGzu7fmW9pXw" name="MedicationInformation">
      <ownedComment xmi:id="_2UJQdhSVEeGGzu7fmW9pXw" annotatedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
The product entry describes a medication or immunization used in a 'substanceAdministration'&#xD;
or 'supply' act&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
In a CDA document, the name and strength of the medication are specified in the elements under&#xD;
the 'manufacturedMaterial' element.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
The 'code' element of the 'manufacturedMaterial' describes the medication. This may be&#xD;
coded using a controlled vocabulary, such as RxNorm, First Databank, or other vocabulary&#xD;
system for medications, and should be the code that represents the generic medication name and&#xD;
strength (e.g., acetaminophen and oxycodone -5/325), or just the generic medication name alone&#xD;
if strength is not relevant (Acetaminophen).&#xD;
In a CDA document, the &amp;lt;originalText> shall contain a 'reference' whose URI value points to&#xD;
the generic name and strength of the medication, or just the generic name alone if strength is not&#xD;
relevant.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2T9DQRSVEeGGzu7fmW9pXw" annotatedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <body>The product concentration is determined from the coded product or brand name using knowledge base information in the vocabularies specified for these fields, and therefore this information is not explicitly included.</body>
      </ownedComment>
      <ownedRule xmi:id="_2UDJ2hSVEeGGzu7fmW9pXw" name="MedicationInformationHasMaterial">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UDJ2xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.manufacturedMaterial.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UDJ3RSVEeGGzu7fmW9pXw" name="MedicationInformationHasMaterialCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UDJ3hSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.manufacturedMaterial.code.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UDJ4BSVEeGGzu7fmW9pXw" name="MedicationInformationHasMaterialCodeVocab">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UDJ4RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.manufacturedMaterial.code.codeSystem = '2.16.840.1.113883.6.88' or self.manufacturedMaterial.code.codeSystem='2.16.840.1.113883.6.59' or self.manufacturedMaterial.code.codeSystem='2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UDJ7xSVEeGGzu7fmW9pXw" name="MedicationInformationHasMaterialCodeOriginalText">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UDJ8BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.manufacturedMaterial.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UDJ8hSVEeGGzu7fmW9pXw" name="MedicationInformationHasMaterialName">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UDJ8xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.manufacturedMaterial.name.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UJQcBSVEeGGzu7fmW9pXw" name="MedicationInformationMayHaveMaterialManufacturer">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UJQcRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.manufacturerOrganization->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UJQcxSVEeGGzu7fmW9pXw" name="MedicationInformationShouldHaveMaterialManufacturer">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UJQdBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.id->size() > 0 implies self.manufacturerOrganization->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T9DQhSVEeGGzu7fmW9pXw" name="MedicationInformationCodedProductName" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2T9DQxSVEeGGzu7fmW9pXw">
          <body>A code describing the product from a controlled&#xD;
vocabulary</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T9DRBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.manufacturedMaterial.code.code.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T9DRxSVEeGGzu7fmW9pXw" name="MedicationInformationCodedProductVocab">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T9DSBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.manufacturedMaterial.code.codeSystem = '2.16.840.1.113883.6.88'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T9DSxSVEeGGzu7fmW9pXw" name="MedicationInformationCodedIngredientVocab">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T9DTBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.manufacturedMaterial.code.codeSystem = '2.16.840.1.113883.4.9'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T9DTRSVEeGGzu7fmW9pXw" name="MedicationInformationCodedBrandName" constrainedElement="_2T9DSxSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2T9DThSVEeGGzu7fmW9pXw">
          <body>A code describing the product as a branded or&#xD;
trademarked entity from a controlled vocabulary</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T9DTxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.manufacturedMaterial.code.translation->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T9DUBSVEeGGzu7fmW9pXw" name="MedicationInformationCodedBrandNameVocab" constrainedElement="_2T9DTRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T9DURSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.manufacturedMaterial.code.codeSystem = '2.16.840.1.113883.6.88' or self.manufacturedMaterial.code.codeSystem = '2.16.840.1.113883.6.69'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T9DUhSVEeGGzu7fmW9pXw" name="MedicationInformationFreeTextProductName" constrainedElement="_2T9DUBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2T9DUxSVEeGGzu7fmW9pXw">
          <body>The name of the substance or product without&#xD;
reference to a specific vendor (e.g., generic or other&#xD;
non-proprietary name). If a Coded Product Name is&#xD;
present, this is the text associated with the coded&#xD;
concept</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T9DVBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.manufacturedMaterial.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2T9DVRSVEeGGzu7fmW9pXw" name="MedicationInformationFreeTextBrandName" constrainedElement="_2T9DUhSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2T9DVhSVEeGGzu7fmW9pXw">
          <body>The branded or trademarked name of the substance&#xD;
or product. If a Coded Brand Name is present, this is&#xD;
the text associated with the coded concept</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2T9DVxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.manufacturedMaterial.name.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cdPhcx7pEeGEaLkc3UAsAg" name="MedicationInformationTemplateId" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cdPhdB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.23')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cdicYB7pEeGEaLkc3UAsAg" name="MedicationInformationId" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cdicYR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2UJQdxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_p6Zs8EcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2UJQeBSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocument">
      <ownedComment xmi:id="_2Uhq-RSVEeGGzu7fmW9pXw" annotatedElement="_2UJQeBSVEeGGzu7fmW9pXw">
        <body>A variety of legacy paper, film, electronic and scanner outputted formats are used to store and exchange clinical documents. These formats are not designed for healthcare documentation, and furthermore, do not have a uniform mechanism to store healthcare metadata associated with the documents, including patient identifiers, demographics, encounter, order or service information. The association of structured, healthcare metadata with this kind of document is important to maintain the integrity of the patient health record as managed by the source system. It is necessary to provide a mechanism that allows such source metadata to be stored with the document.</body>
      </ownedComment>
      <ownedComment xmi:id="_2Uhq-hSVEeGGzu7fmW9pXw" annotatedElement="_2UJQeBSVEeGGzu7fmW9pXw">
        <body>&lt;b>IMPORTANT NOTE:&lt;/b> &lt;i>The HITSP C62 specification does not include a templateId for this doument type. The id 2.16.840.1.113883.3.88.11.62.1 is included in this model to support instance validation, but we are designing a solution to allow removal of this Id.&lt;/i></body>
      </ownedComment>
      <ownedComment xmi:id="_2Uhq-xSVEeGGzu7fmW9pXw" annotatedElement="_2UJQeBSVEeGGzu7fmW9pXw">
        <body>This document type is not intended to be a replacement for IHE's XDS-SD (Cross-Transaction Specifications and Content Specifications, Scanned Documents Module) profile. Rather, it serves a more generic use case. XDS-SD is specifically for scanned documents, and limits content to PDF-A or text. This Unstructured Documents implementation guide is applicable not only for scanned documents in non-PDF formats, but also for clinical documents produced through word processing applications, etc.</body>
      </ownedComment>
      <ownedComment xmi:id="_2UJQeRSVEeGGzu7fmW9pXw" annotatedElement="_2UJQeBSVEeGGzu7fmW9pXw">
        <body>Used for documents that implement both HL7 Unstructured Documents and HITSP C62 based on IHE Scanned Documents.</body>
      </ownedComment>
      <ownedRule xmi:id="_2UPXMxSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentTypeIdFixed">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UPXNBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.typeId.root = '2.16.840.1.113883.1.3' and self.typeId.extension = 'POCD_HD000040'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UPXNhSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasOneRecordTarget">
        <ownedComment xmi:id="_2UPXNxSVEeGGzu7fmW9pXw">
          <body>Contains identifying information about the patient concerned in the original content. In many cases this will have to be supplied by the operator.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UPXOBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UPXOhSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasAssignedAuthor">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UPXOxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.assignedAuthor.assignedPerson.oclIsUndefined() &#xD;&#xA;   or not author.assignedAuthor.representedOrganization.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UVdsBSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentPatientRoleId">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UVdsRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->forAll(target : cda::RecordTarget | not target.patientRole.oclIsUndefined()&#xD;&#xA;   and target.patientRole.id->forAll(roleId : datatypes::II | not roleId.root.oclIsUndefined()&#xD;&#xA;   and not roleId.extension.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UVdsxSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasPatientRoleAddress">
        <ownedComment xmi:id="_2UVdtBSVEeGGzu7fmW9pXw">
          <body>The addr element has an unbounded upper limit on occurrences. It can, and should, be replicated to include additional addresses for a patient, each minimally specified by the country sub element.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UVdtRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->exists(target : cda::RecordTarget | not target.patientRole.oclIsUndefined()&#xD;&#xA;   and target.patientRole.addr->exists(address : datatypes::AD | address.country->exists(c : datatypes::ADXP |&#xD;&#xA;   not c.oclIsUndefined() and c.getText().size() > 0)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UVdtxSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasPatientName">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UVduBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->exists(target : cda::RecordTarget | not target.patientRole.patient.oclIsUndefined()&#xD;&#xA;   and target.patientRole.patient.name->exists(name: datatypes::PN |&#xD;&#xA;      not name.given->isEmpty() and not name.family->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UVduhSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasPatientGenderCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UVduxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->one(target : cda::RecordTarget |&#xD;&#xA;   not target.patientRole.patient.administrativeGenderCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UVdvRSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasPatientBirthYear">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UVdvhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->one(target : cda::RecordTarget |&#xD;&#xA;   not target.patientRole.patient.birthTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UVdwBSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasOriginalAuthor">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UVdwRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::ScanOriginalAuthor))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UVdwxSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasScanningDevice">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UVdxBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::ScanningDevice))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UVdxhSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasScanDataEnterer">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UVdxxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.dataEnterer.oclIsUndefined() and self.dataEnterer.oclIsKindOf(consol::ScanDataEnterer)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UVdzxSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentLegalAuthenticatorAssignedEntityId">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UVd0BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.legalAuthenticator.assignedEntity.id->size() > 0 implies (&#xD;&#xA;   self.legalAuthenticator.assignedEntity.id->forAll(ident : datatypes::II |&#xD;&#xA;      not ident.root.oclIsUndefined() and not ident.extension.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UVd0hSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasNonXMLBody">
        <ownedComment xmi:id="_2UVd0xSVEeGGzu7fmW9pXw">
          <body>Used to wrap the scanned content. The nonXMLBody element is guaranteed to be unique; thus the x-path to recover the scanned content is essentially fixed.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UVd1BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.component.nonXMLBody.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UbkUBSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasNonXMLBodyBinaryText">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UbkURSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.component.nonXMLBody.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UbkUxSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasNonXMLBodyTextMediaType">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UbkVBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.component.nonXMLBody.text.mediaType = 'application/pdf' or self.component.nonXMLBody.text.mediaType = 'text/plain'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UbkVhSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasNonXMLBodyTextRepresentation">
        <ownedComment xmi:id="_2UbkVxSVEeGGzu7fmW9pXw">
          <body>The @representation for both PDF and plaintext scanned content will be &quot;B64&quot;, because this profile requires the base-64 encoding of both formats.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UbkWBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.component.nonXMLBody.text.representation = datatypes::BinaryDataEncoding::B64</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UbkWhSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentNoStructuredData">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UbkWxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.component.structuredBody.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UbkXRSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentOnePatientPerDocument">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UbkXhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.recordTarget->one(record : cda::RecordTarget | not record.patientRole.oclIsUndefined() and not record.patientRole.patient.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UbkYBSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentPatientRoleHasId">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UbkYRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not recordTarget.patientRole.id->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UbkYxSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentAssignedAuthorHasAddr">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UbkZBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not author.assignedAuthor.addr->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UbkZhSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentAssignedAuthorHasTelecom">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UbkZxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not author.assignedAuthor.telecom->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UbkaRSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasRepresentedCustodianOrganization">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UbkahSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not custodian.assignedCustodian.representedCustodianOrganization.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UbkbBSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationId">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UbkbRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not custodian.assignedCustodian.representedCustodianOrganization.id->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UbkbxSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationName">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UbkcBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not custodian.assignedCustodian.representedCustodianOrganization.name.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UbkchSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationTelecom">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UbkcxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not custodian.assignedCustodian.representedCustodianOrganization.telecom.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UbkdRSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationAddr">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UbkdhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not custodian.assignedCustodian.representedCustodianOrganization.addr.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Uhq8BSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasNonXMLBodyText">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Uhq8RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.component.nonXMLBody.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Uhq8xSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasTextReferenceOrRepresentation">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Uhq9BSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>(not self.component.nonXMLBody.text.reference.oclIsUndefined() and self.component.nonXMLBody.text.reference.isDefined('value')) or (self.component.nonXMLBody.text.representation = datatypes::BinaryDataEncoding::B64 and self.component.nonXMLBody.text.isDefined('mediaType') and self.component.nonXMLBody.text.getText().size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Uhq9hSVEeGGzu7fmW9pXw" name="UnstructuredOrScannedDocumentHasTextMediaTypeValueSet">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Uhq9xSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.component.nonXMLBody.text.isDefined('mediaType') implies (self.component.nonXMLBody.text.mediaType = 'application/msword' or self.component.nonXMLBody.text.mediaType = 'application/pdf' or self.component.nonXMLBody.text.mediaType = 'text/plain' or self.component.nonXMLBody.text.mediaType = 'text/rtf' or self.component.nonXMLBody.text.mediaType = 'text/html' or self.component.nonXMLBody.text.mediaType = 'image/gif' or self.component.nonXMLBody.text.mediaType = 'image/tiff' or self.component.nonXMLBody.text.mediaType = 'image/jpeg' or self.component.nonXMLBody.text.mediaType = 'image/png')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cdrmUB7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2UJQeBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cdrmUR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.19.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ceISQB7pEeGEaLkc3UAsAg" name="UnstructuredOrScannedDocumentCode" constrainedElement="_2UJQeBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ceISQR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ceSDQB7pEeGEaLkc3UAsAg" name="UnstructuredOrScannedDocumentEffectiveTime" constrainedElement="_2UJQeBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ceSDQR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ceSDQh7pEeGEaLkc3UAsAg" name="UnstructuredOrScannedDocumentId" constrainedElement="_2UJQeBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ceSDQx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ceSDRB7pEeGEaLkc3UAsAg" name="UnstructuredOrScannedDocumentLanguageCode" constrainedElement="_2UJQeBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ceSDRR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.languageCode.oclIsUndefined() or self.languageCode.isNullFlavorUndefined()) implies (not self.languageCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ceb0QB7pEeGEaLkc3UAsAg" name="UnstructuredOrScannedDocumentTitle" constrainedElement="_2UJQeBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ceb0QR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ceb0Qh7pEeGEaLkc3UAsAg" name="UnstructuredOrScannedDocumentTypeId" constrainedElement="_2UJQeBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ceb0Qx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.typeId.oclIsUndefined() or self.typeId.isNullFlavorUndefined()) implies (not self.typeId.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Uhq_BSVEeGGzu7fmW9pXw" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Uhq_hSVEeGGzu7fmW9pXw" name="ReferralSummary">
      <ownedRule xmi:id="_2UhrBhSVEeGGzu7fmW9pXw" name="ReferralSummaryMedicalSummaryProblemConcernEntry">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UhrBxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSections()->exists(sect : cda::Section | sect.getActs()->exists(act : cda::Act | act.oclIsKindOf(consol::ProblemConcernEntry)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UhrCRSVEeGGzu7fmW9pXw" name="ReferralSummaryMedicalSummaryAllergyConcernEntry">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UhrChSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSections()->exists(sect : cda::Section | sect.getActs()->exists(act : cda::Act | act.oclIsKindOf(consol::AllergyIntoleranceConcern)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2UhrDBSVEeGGzu7fmW9pXw" name="ReferralSummaryMedicalSummaryMedications">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UhrDRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSections()->exists(sect : cda::Section | sect.getSubstanceAdministrations()->exists(sub : cda::SubstanceAdministration | sub.oclIsKindOf(consol::Medication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cek-MR7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2Uhq_hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cek-Mh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.48.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cek-NB7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsCode" constrainedElement="_2Uhq_hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cek-NR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2UnxkBSVEeGGzu7fmW9pXw" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2UnxkRSVEeGGzu7fmW9pXw" name="DischargeSummary">
      <ownedRule xmi:id="_2U6FcxSVEeGGzu7fmW9pXw" name="DischargeSummaryMedicalSummaryProblemConcernEntry">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2U6FdBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSections()->exists(sect : cda::Section | sect.getActs()->exists(act : cda::Act | act.oclIsKindOf(consol::ProblemConcernEntry)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2U6FdhSVEeGGzu7fmW9pXw" name="DischargeSummaryMedicalSummaryAllergyConcernEntry">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2U6FdxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSections()->exists(sect : cda::Section | sect.getActs()->exists(act : cda::Act | act.oclIsKindOf(consol::AllergyIntoleranceConcern)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2U6FeRSVEeGGzu7fmW9pXw" name="DischargeSummaryMedicalSummaryMedications">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2U6FehSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getSections()->exists(sect : cda::Section | sect.getSubstanceAdministrations()->exists(sub : cda::SubstanceAdministration | sub.oclIsKindOf(consol::Medication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ceuvMR7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ceuvMh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ceuvNB7pEeGEaLkc3UAsAg" name="GeneralHeaderConstraintsCode" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ceuvNR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ce35IB7pEeGEaLkc3UAsAg" name="DischargeSummaryAdmissionMedicationHistorySection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ce35IR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::Hospital AdmissionMedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ce35Jx7pEeGEaLkc3UAsAg" name="DischargeSummaryHospitalAdmissionDiagnosisSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ce35KB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ce35Lh7pEeGEaLkc3UAsAg" name="DischargeSummaryAdvanceDirectivesSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ce35Lx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ce35NR7pEeGEaLkc3UAsAg" name="DischargeSummaryAllergiesReactionsSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ce35Nh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfBqJR7pEeGEaLkc3UAsAg" name="DischargeSummaryDischargeDiagnosisSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfBqJh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfBqLB7pEeGEaLkc3UAsAg" name="DischargeSummaryDischargeDiet" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfBqLR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DischargeDietSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfBqMx7pEeGEaLkc3UAsAg" name="DischargeSummaryHospitalDischargeMedicationsSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfBqNB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfLbIB7pEeGEaLkc3UAsAg" name="DischargeSummaryFunctionalStatusSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfLbIR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfLbJx7pEeGEaLkc3UAsAg" name="DischargeSummaryHistoryOfPresentIllness" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfLbKB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfLbLh7pEeGEaLkc3UAsAg" name="DischargeSummaryHospitalCourseSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfLbLx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalCourseSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfLbNR7pEeGEaLkc3UAsAg" name="DischargeSummaryMedicalEquipmentSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfLbNh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfUlEB7pEeGEaLkc3UAsAg" name="DischargeSummaryPhysicalExamSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfUlER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfUlFx7pEeGEaLkc3UAsAg" name="DischargeSummaryPlanOfCareSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfUlGB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfUlHh7pEeGEaLkc3UAsAg" name="DischargeSummaryHistoryOfPastIllnessSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfUlHx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfUlJR7pEeGEaLkc3UAsAg" name="DischargeSummaryReviewOfSystemsSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfUlJh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfeWEB7pEeGEaLkc3UAsAg" name="DischargeSummaryMedicationsAdministeredSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfeWER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfeWFx7pEeGEaLkc3UAsAg" name="DischargeSummaryVitalSignsSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfeWGB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2U6FfBSVEeGGzu7fmW9pXw" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_ce35Ih7pEeGEaLkc3UAsAg" name="getAdmissionMedicationHistorySection" isQuery="true" bodyCondition="_ce35JR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ce35JR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ce35Ih7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ce35Jh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::Hospital AdmissionMedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::Hospital AdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ce35Ix7pEeGEaLkc3UAsAg" type="_2Poj5BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ce35JB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ce35KR7pEeGEaLkc3UAsAg" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_ce35LB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ce35LB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ce35KR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ce35LR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))->asSequence()->first().oclAsType(consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ce35Kh7pEeGEaLkc3UAsAg" type="_2PidQhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ce35Kx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ce35MB7pEeGEaLkc3UAsAg" name="getAdvanceDirectivesSection" isQuery="true" bodyCondition="_ce35Mx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ce35Mx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ce35MB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ce35NB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSection))->asSequence()->first().oclAsType(consol::AdvanceDirectivesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ce35MR7pEeGEaLkc3UAsAg" type="_2KgzUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ce35Mh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfBqIB7pEeGEaLkc3UAsAg" name="getAllergiesReactionsSection" isQuery="true" bodyCondition="_cfBqIx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfBqIx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfBqIB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfBqJB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->first().oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfBqIR7pEeGEaLkc3UAsAg" type="_2LMIwBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfBqIh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfBqJx7pEeGEaLkc3UAsAg" name="getDischargeDiagnosisSection" isQuery="true" bodyCondition="_cfBqKh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfBqKh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfBqJx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfBqKx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeDiagnosisSection))->asSequence()->first().oclAsType(consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfBqKB7pEeGEaLkc3UAsAg" type="_2PidURSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfBqKR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfBqLh7pEeGEaLkc3UAsAg" name="getDischargeDiet" isQuery="true" bodyCondition="_cfBqMR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfBqMR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfBqLh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfBqMh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DischargeDietSection))->asSequence()->first().oclAsType(consol::DischargeDietSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfBqLx7pEeGEaLkc3UAsAg" type="_2Uz-4xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfBqMB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfBqNR7pEeGEaLkc3UAsAg" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_cfBqOB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfBqOB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfBqNR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfBqOR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->first().oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfBqNh7pEeGEaLkc3UAsAg" type="_2Poj7RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfBqNx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfLbIh7pEeGEaLkc3UAsAg" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_cfLbJR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfLbJR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfLbIh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfLbJh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->first().oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfLbIx7pEeGEaLkc3UAsAg" type="_2KKOBhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfLbJB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfLbKR7pEeGEaLkc3UAsAg" name="getHistoryOfPresentIllness" isQuery="true" bodyCondition="_cfLbLB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfLbLB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfLbKR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfLbLR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllness))->asSequence()->first().oclAsType(consol::HistoryOfPresentIllness)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfLbKh7pEeGEaLkc3UAsAg" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfLbKx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfLbMB7pEeGEaLkc3UAsAg" name="getHospitalCourseSection" isQuery="true" bodyCondition="_cfLbMx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfLbMx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfLbMB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfLbNB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalCourseSection))->asSequence()->first().oclAsType(consol::HospitalCourseSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfLbMR7pEeGEaLkc3UAsAg" type="_2RqkOxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfLbMh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfLbNx7pEeGEaLkc3UAsAg" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="_cfLbOh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfLbOh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfLbNx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfLbOx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))->asSequence()->first().oclAsType(consol::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfLbOB7pEeGEaLkc3UAsAg" type="_2KEucBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfLbOR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfUlEh7pEeGEaLkc3UAsAg" name="getPhysicalExamSection" isQuery="true" bodyCondition="_cfUlFR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfUlFR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfUlEh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfUlFh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))->asSequence()->first().oclAsType(consol::PhysicalExamSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfUlEx7pEeGEaLkc3UAsAg" type="_2Pxt0hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfUlFB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfUlGR7pEeGEaLkc3UAsAg" name="getPlanOfCareSection" isQuery="true" bodyCondition="_cfUlHB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfUlHB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfUlGR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfUlHR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfUlGh7pEeGEaLkc3UAsAg" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfUlGx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfUlIB7pEeGEaLkc3UAsAg" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_cfUlIx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfUlIx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfUlIB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfUlJB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfUlIR7pEeGEaLkc3UAsAg" type="_2PQJcxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfUlIh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfUlJx7pEeGEaLkc3UAsAg" name="getReviewOfSystemsSection" isQuery="true" bodyCondition="_cfUlKh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfUlKh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfUlJx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfUlKx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->first().oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfUlKB7pEeGEaLkc3UAsAg" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfUlKR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfeWEh7pEeGEaLkc3UAsAg" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_cfeWFR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfeWFR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfeWEh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfeWFh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection))->asSequence()->first().oclAsType(consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfeWEx7pEeGEaLkc3UAsAg" type="_2Poj_BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfeWFB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cfeWGR7pEeGEaLkc3UAsAg" name="getVitalSignsSection" isQuery="true" bodyCondition="_cfeWHB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cfeWHB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cfeWGR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfeWHR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->first().oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cfeWGh7pEeGEaLkc3UAsAg" type="_2OfUcxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfeWGx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Uz-4xSVEeGGzu7fmW9pXw" name="DischargeDietSection">
      <ownedComment xmi:id="_2Uz-5BSVEeGGzu7fmW9pXw" annotatedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <body>This section records a narrative description of the expectations for diet, including proposals, goals, and order requests for monitoring, tracking, or improving the dietary control of the patient, used in a discharge from a facility such as an emergency department, hospital, or nursing home.</body>
      </ownedComment>
      <ownedRule xmi:id="_cfeWHh7pEeGEaLkc3UAsAg" name="DischargeDietSectionTemplateId" constrainedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfeWHx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.33')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfeWIR7pEeGEaLkc3UAsAg" name="DischargeDietSectionCode" constrainedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfeWIh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '42344-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2U6FchSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sHrUoBUSEeG6PvUxSTZnaw" name="Indication">
      <ownedRule xmi:id="_cfoHEB7pEeGEaLkc3UAsAg" name="IndicationTemplateId" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfoHER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.19')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfoHEx7pEeGEaLkc3UAsAg" name="IndicationClassCode" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfoHFB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfoHFR7pEeGEaLkc3UAsAg" name="IndicationCode" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfoHFh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '404684003' or value.code = '409586006' or value.code = '282291009' or value.code = '64572001' or value.code = '248536006' or value.code = '418799008' or value.code = '55607006')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfxRAB7pEeGEaLkc3UAsAg" name="IndicationEffectiveTime" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfxRAR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfxRAh7pEeGEaLkc3UAsAg" name="IndicationId" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfxRAx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfxRBB7pEeGEaLkc3UAsAg" name="IndicationMoodCode" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfxRBR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfxRBh7pEeGEaLkc3UAsAg" name="IndicationStatusCode" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cfxRBx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cf7CAB7pEeGEaLkc3UAsAg" name="IndicationValue" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cf7CAR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sHrUoRUSEeG6PvUxSTZnaw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VBXq8BUTEeG6PvUxSTZnaw" name="DrugVehicle">
      <ownedRule xmi:id="_G1AaMBq2EeGo461UQq-B1g" name="DrugVehiclePlayingEntityCode" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_IGiTgBq2EeGo461UQq-B1g">
          <language>OCL</language>
          <body>not self.playingEntity.oclIsUndefined() implies self.playingEntity</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cf7CCR7pEeGEaLkc3UAsAg" name="DrugVehicleTemplateId" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cf7CCh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.24')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cgEL8B7pEeGEaLkc3UAsAg" name="DrugVehicleClassCode" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgEL8R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cgEL8h7pEeGEaLkc3UAsAg" name="DrugVehicleCode" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgEL8x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '412307009' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VBXq8RUTEeG6PvUxSTZnaw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DpoGkBUUEeG6PvUxSTZnaw" name="MedicationDispense">
      <ownedRule xmi:id="_cgEL9B7pEeGEaLkc3UAsAg" name="MedicationDispenseTemplateId" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgEL9R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cgN88R7pEeGEaLkc3UAsAg" name="MedicationDispenseClassCode" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgN88h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cgN88x7pEeGEaLkc3UAsAg" name="MedicationDispenseEffectiveTime" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgN89B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cgN89R7pEeGEaLkc3UAsAg" name="MedicationDispenseId" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgN89h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cgN89x7pEeGEaLkc3UAsAg" name="MedicationDispenseMoodCode" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgN8-B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cgXt8B7pEeGEaLkc3UAsAg" name="MedicationDispenseRepeatNumber" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgXt8R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cgXt8h7pEeGEaLkc3UAsAg" name="MedicationDispenseStatusCode" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgXt8x7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.14' and (value.code = 'aborted' or value.code = 'completed')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ckPhVR7pEeGEaLkc3UAsAg" name="MedicationDispenseAssignedEntity" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckPhVh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.assignedEntity.oclIsUndefined() and performer.assignedEntity.oclIsKindOf(rim::Role))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ckPhXB7pEeGEaLkc3UAsAg" name="MedicationDispenseMedicationSupplyOrder" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckPhXR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationSupplyOrder) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DpoGkRUUEeG6PvUxSTZnaw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_ckPhVx7pEeGEaLkc3UAsAg" name="getAssignedEntity" isQuery="true" bodyCondition="_ckPhWh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ckPhWh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ckPhVx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckPhWx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getAssignedEntities()->select(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role))->asSequence()->first().oclAsType(rim::Role)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ckPhWB7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.hl7.rim/model/rim.uml#_eITxUIVfEd-9G7Mk0NuIMg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ckPhWR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ckPhXh7pEeGEaLkc3UAsAg" name="getMedicationSupplyOrder" isQuery="true" bodyCondition="_ckPhYR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ckPhYR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ckPhXh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckPhYh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationSupplyOrder))->asSequence()->first().oclAsType(consol::MedicationSupplyOrder)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ckPhXx7pEeGEaLkc3UAsAg" type="_j3aTQBrTEeGo461UQq-B1g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ckPhYB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_chEhQBUUEeG6PvUxSTZnaw" name="PreconditionForSubstanceAdministration">
      <ownedRule xmi:id="_pHR7UBrcEeGo461UQq-B1g" name="PreconditionForSubstanceAdministrationCriterionCode" constrainedElement="_chEhQBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rVPAoBrcEeGo461UQq-B1g">
          <language>OCL</language>
          <body>not self.criterion.oclIsUndefined() implies not self.criterion.code.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZn6QBrcEeGo461UQq-B1g" name="PreconditionForSubstanceAdministrationCriterionText" constrainedElement="_chEhQBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_08wUgBrcEeGo461UQq-B1g">
          <language>OCL</language>
          <body>not self.criterion.oclIsUndefined() implies not self.criterion.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vY4cQBrcEeGo461UQq-B1g" name="PreconditionForSubstanceAdministrationCriterionValue" constrainedElement="_chEhQBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2wfjABrcEeGo461UQq-B1g">
          <language>OCL</language>
          <body>(self.criterion.value.oclIsUndefined() or self.criterion.value.isNullFlavorUndefined()) implies (self.criterion.value.oclIsTypeOf(datatypes::CD))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cgXt-x7pEeGEaLkc3UAsAg" name="PreconditionForSubstanceAdministrationTemplateId" constrainedElement="_chEhQBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgXt_B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.25')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_chEhQRUUEeG6PvUxSTZnaw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_OJn4MEcaEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_PZBdMBUlEeGvPruliC3crg" name="PolicyActivity">
      <ownedRule xmi:id="_cgg36B7pEeGEaLkc3UAsAg" name="PolicyActivityTemplateId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgg36R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.60')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjy1YR7pEeGEaLkc3UAsAg" name="PolicyActivityAuthorizationActivity" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjy1Yh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::AuthorizationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PZBdMRUlEeGvPruliC3crg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cjy1Yx7pEeGEaLkc3UAsAg" name="getAuthorizationActivity" isQuery="true" bodyCondition="_cjy1Zh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cjy1Zh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cjy1Yx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjy1Zx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AuthorizationActivity))->asSequence()->first().oclAsType(consol::AuthorizationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cjy1ZB7pEeGEaLkc3UAsAg" type="_XUoXwBnZEeGs5a462vYX5Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cjy1ZR7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Cg3pkBUmEeGvPruliC3crg" name="CoverageActivity">
      <ownedRule xmi:id="_cgqo4R7pEeGEaLkc3UAsAg" name="CoverageActivityTemplateId" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgqo4h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.60')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cgqo5B7pEeGEaLkc3UAsAg" name="CoverageActivityPolicyActivity" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgqo5R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::PolicyActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Cg3pkRUmEeGvPruliC3crg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cgqo5h7pEeGEaLkc3UAsAg" name="getPolicyActivity" isQuery="true" bodyCondition="_cgqo6R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cgqo6R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cgqo5h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgqo6h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PolicyActivity))->asSequence()->first().oclAsType(consol::PolicyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cgqo5x7pEeGEaLkc3UAsAg" type="_PZBdMBUlEeGvPruliC3crg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cgqo6B7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5Ha7ABUyEeGbmN_W114JUw" name="ProblemObservation">
      <ownedRule xmi:id="_cgqo9R7pEeGEaLkc3UAsAg" name="ProblemObservationTemplateId" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cgqo9h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cg0Z4R7pEeGEaLkc3UAsAg" name="ProblemObservationAgeObservation" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg0Z4h7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AgeObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cg0Z6B7pEeGEaLkc3UAsAg" name="ProblemObservationHealthStatusObservation" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg0Z6R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::HealthStatusObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cg9j0B7pEeGEaLkc3UAsAg" name="ProblemObservationProblemStatus" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg9j0R7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemStatus))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5Ha7ARUyEeGbmN_W114JUw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_cg0Z4x7pEeGEaLkc3UAsAg" name="getAgeObservation" isQuery="true" bodyCondition="_cg0Z5h7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cg0Z5h7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cg0Z4x7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg0Z5x7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AgeObservation))->asSequence()->first().oclAsType(consol::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cg0Z5B7pEeGEaLkc3UAsAg" type="_2EqqABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cg0Z5R7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cg0Z6h7pEeGEaLkc3UAsAg" name="getHealthStatusObservation" isQuery="true" bodyCondition="_cg0Z7R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cg0Z7R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cg0Z6h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg0Z7h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HealthStatusObservation))->asSequence()->first().oclAsType(consol::HealthStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cg0Z6x7pEeGEaLkc3UAsAg" type="_2ExXsBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cg0Z7B7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_cg9j0h7pEeGEaLkc3UAsAg" name="getProblemStatus" isQuery="true" bodyCondition="_cg9j1R7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_cg9j1R7pEeGEaLkc3UAsAg" name="body" constrainedElement="_cg9j0h7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg9j1h7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemStatus))->asSequence()->first().oclAsType(consol::ProblemStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_cg9j0x7pEeGEaLkc3UAsAg" type="_SjN_8BUzEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cg9j1B7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SjN_8BUzEeGbmN_W114JUw" name="ProblemStatus">
      <ownedRule xmi:id="_cg0Z7x7pEeGEaLkc3UAsAg" name="ProblemStatusTemplateId" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cg0Z8B7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.6')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_SjN_8RUzEeGbmN_W114JUw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__qYdcBVNEeGbmN_W114JUw" name="ImmunizationRefusalReason">
      <ownedRule xmi:id="_chQexx7pEeGEaLkc3UAsAg" name="ImmunizationRefusalReasonTemplateId" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chQeyB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.53')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chQeyh7pEeGEaLkc3UAsAg" name="ImmunizationRefusalReasonClassCode" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chQeyx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chaPwB7pEeGEaLkc3UAsAg" name="ImmunizationRefusalReasonCode" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chaPwR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.8' and (value.code = 'IMMUNE' or value.code = 'MEDPREC' or value.code = 'OSTOCK' or value.code = 'PATOBJ' or value.code = 'PHILISOP' or value.code = 'RELIG' or value.code = 'VACEFF' or value.code = 'VACSAF')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chaPwh7pEeGEaLkc3UAsAg" name="ImmunizationRefusalReasonId" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chaPwx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chaPxB7pEeGEaLkc3UAsAg" name="ImmunizationRefusalReasonMoodCode" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chaPxR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chaPxh7pEeGEaLkc3UAsAg" name="ImmunizationRefusalReasonStatusCode" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chaPxx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__qr_cBVNEeGbmN_W114JUw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_daTqABVOEeGbmN_W114JUw" name="ImmunizationMedicationInformation">
      <ownedComment xmi:id="_JOE1QBq0EeGo461UQq-B1g">
        <body>The Immunization Medication Information represents product information about the immunization substance. The vaccine manufacturer and vaccine lot number are typically recorded in the medical record and should be included if known.</body>
      </ownedComment>
      <ownedRule xmi:id="_chkAxx7pEeGEaLkc3UAsAg" name="ImmunizationMedicationInformationTemplateId" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chkAyB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.54')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chkAyh7pEeGEaLkc3UAsAg" name="ImmunizationMedicationInformationClassCode" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chkAyx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_chtKsB7pEeGEaLkc3UAsAg" name="ImmunizationMedicationInformationId" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_chtKsR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_daTqARVOEeGbmN_W114JUw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_p6Zs8EcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bGzYgBVdEeGQCvUGzi1kDQ" name="AllergiesSectionEntriesOptional">
      <ownedComment xmi:id="_bGzYgRVdEeGQCvUGzi1kDQ" annotatedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <body>This section is used to list and describe any allergies, adverse reactions, and alerts that are pertinent to the patient's current or past medical history. At a minimum, currently active and any relevant historical allergies and adverse reactions should be listed.</body>
      </ownedComment>
      <ownedComment xmi:id="_bGzYghVdEeGQCvUGzi1kDQ" annotatedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <body>The adverse and other adverse reactions section shall contain a narrative description of the substance intolerances and the associated adverse reactions suffered by the patient.</body>
      </ownedComment>
      <ownedComment xmi:id="_bGzYgxVdEeGQCvUGzi1kDQ" annotatedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <body>&lt;p>&#xD;
    The Allergies and Other Adverse Reactions Section contains data on the substance intolerances and the&#xD;
    associated adverse reactions suffered by the patient. At a minimum, currently active and any relevant historical&#xD;
    allergies and adverse reactions shall be listed. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_chtKwB7pEeGEaLkc3UAsAg" name="AllergiesSectionEntriesOptionalTemplateId" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ch27sB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ch27sh7pEeGEaLkc3UAsAg" name="AllergiesSectionEntriesOptionalCode" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ch27sx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ch27tB7pEeGEaLkc3UAsAg" name="AllergiesSectionEntriesOptionalTitle" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ch27tR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ch27th7pEeGEaLkc3UAsAg" name="AllergiesSectionEntriesOptionalText" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciAssB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FHCOMBVgEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iAoXEBVdEeGQCvUGzi1kDQ" name="MedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_iAoXERVdEeGQCvUGzi1kDQ" annotatedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <body>&lt;p>&#xD;
    The Medications section defines a patient's current medications and pertinent medication&#xD;
    history. At a minimum, the currently active medications should be listed, with an entire medication history as an&#xD;
    option, particularly when the summary document is used for comprehensive data export. The section may also include a&#xD;
    patient's prescription history, and enables the determination of the source of a medication list (e.g. from a pharmacy&#xD;
    system vs. from the patient).&#xD;
&lt;/p>&#xD;
&lt;p>Reconciliation of conflicting medication information from various sources is enabled both by indicating the source of information and by indicating whether the source is reporting intended or actual medication use. For instance, a physician may intend for a patient to be on a particular dose, but the patient may actually be taking a different dose; a pharmacy may fill a prescription for a particular dose only to then have the patient's physician lower the dose without notifying the pharmacy. Therefore, medication and supply activities can be expressed in CCD in either the &quot;EVN&quot; (event) mood or the &quot;INT&quot; (intent) mood. Medication activities in &quot;INT&quot; mood are not orders (which are represented in the Plan of Care section), but rather are reflections of what a clinician intends a patient to be taking. Medication activities in &quot;EVN&quot; mood reflect actual use. A pharmacy system will typically report what was actually filled (supply event), along with intended use (substance administration intent). A physician will often report intended use (substance administration and supply intent). A patient or family member will typically report actual use (substance administration event).&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_iAoXEhVdEeGQCvUGzi1kDQ" annotatedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <body>The medications section shall contain a description of the relevant medications for the patient, e.g. an ambulatory&#xD;
prescription list. It shall include entries for medications as described in the Entry Content Module.</body>
      </ownedComment>
      <ownedComment xmi:id="_iAoXExVdEeGQCvUGzi1kDQ" annotatedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <body>The Medications Section contains information about the relevant medications for the patient. At a minimum, the currently active medications should be listed.</body>
      </ownedComment>
      <ownedRule xmi:id="_iAoXFBVdEeGQCvUGzi1kDQ" name="MedicationsSectionEntriesOptionalHasMedicationOrSupplyActivity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iAoXFRVdEeGQCvUGzi1kDQ">
          <language>OCL</language>
          <body>self.getSubstanceAdministrations()->exists(activity : cda::SubstanceAdministration | activity.oclIsKindOf(consol::MedicationActivity))&#xD;&#xA;   or self.getSupplies()->exists(activity : cda::Supply | activity.oclIsKindOf(consol::SupplyActivity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ciAssR7pEeGEaLkc3UAsAg" name="MedicationsSectionEntriesOptionalTemplateId" constrainedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciAssh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iAoXIhVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_naxrkBVdEeGQCvUGzi1kDQ" name="ProblemSectionEntriesOptional">
      <ownedComment xmi:id="_naxrkRVdEeGQCvUGzi1kDQ" annotatedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <body>This section lists and describes all relevant clinical problems at the time the summary is generated. At a minimum, all pertinent current and historical problems should be listed. CDA R2 represents problems as Observations.</body>
      </ownedComment>
      <ownedComment xmi:id="_naxrkhVdEeGQCvUGzi1kDQ" annotatedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <body>The active problem section shall contain a narrative description of the conditions currently being monitored for the patient. It shall include entries for patient conditions as described in the Entry Content Module.</body>
      </ownedComment>
      <ownedComment xmi:id="_naxrkxVdEeGQCvUGzi1kDQ" annotatedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <body>This section lists and describes all relevant clinical problems at the time the document is generated. At a minimum, all pertinent current and historical problems should be listed.</body>
      </ownedComment>
      <ownedRule xmi:id="_ciAstB7pEeGEaLkc3UAsAg" name="ProblemSectionEntriesOptionalTemplateId" constrainedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciAstR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.5')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_naxrlxVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_s9Ig4BVdEeGQCvUGzi1kDQ" name="ProceduresSectionEntriesOptional">
      <ownedComment xmi:id="_s9Ig4RVdEeGQCvUGzi1kDQ" annotatedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <body>This section defines all interventional, surgical, diagnostic, or therapeutic procedures or treatments pertinent to the patient historically at the time the document is generated. The section is intended to include notable procedures, but can contain all procedures for the period of time being summarized. The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore this section contains procedure templates represented with three RIM classes: Act. Observation, and Procedure. Procedure act is for procedures the alter that physical condition of a patient (Splenectomy). Observation act is for procedures that result in new information about a patient but do not cause physical alteration (EEG). Act is for all other types of procedures (dressing change).&#xD;
The length of an encounter is documented in the documentationOf/encompassingEncounter/effectiveTime and length of service in documentationOf/ServiceEvent/effectiveTime.</body>
      </ownedComment>
      <ownedRule xmi:id="_ciJ2oB7pEeGEaLkc3UAsAg" name="ProceduresSectionEntriesOptionalTemplateId" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciJ2oR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ciJ2ox7pEeGEaLkc3UAsAg" name="ProceduresSectionEntriesOptionalCode" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciJ2pB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '47519-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ciJ2pR7pEeGEaLkc3UAsAg" name="ProceduresSectionEntriesOptionalText" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciJ2ph7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ckicRR7pEeGEaLkc3UAsAg" name="ProceduresSectionEntriesOptionalProcedureActivityProcedure" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckicRh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::ProcedureActivityProcedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ckicTB7pEeGEaLkc3UAsAg" name="ProceduresSectionEntriesOptionalProcedureAcivityObservation" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckicTR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProcedureAcivityObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ckicUx7pEeGEaLkc3UAsAg" name="ProceduresSectionEntriesOptionalProcedureActivityAct" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckicVB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProcedureActivityAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_s9Ig6RVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_ckicRx7pEeGEaLkc3UAsAg" name="getProcedureActivityProcedures" isQuery="true" bodyCondition="_ckicSh7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ckicSh7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ckicRx7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckicSx7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure)).oclAsType(consol::ProcedureActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ckicSB7pEeGEaLkc3UAsAg" type="_2OG58RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ckicSR7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ckicTh7pEeGEaLkc3UAsAg" name="getProcedureAcivityObservations" isQuery="true" bodyCondition="_ckicUR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ckicUR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ckicTh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckicUh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProcedureAcivityObservation)).oclAsType(consol::ProcedureAcivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ckicTx7pEeGEaLkc3UAsAg" type="_Aj7JkBg4EeGs5a462vYX5Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ckicUB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ckicVR7pEeGEaLkc3UAsAg" name="getProcedureActivityActs" isQuery="true" bodyCondition="_ckicWB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ckicWB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ckicVR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckicWR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProcedureActivityAct)).oclAsType(consol::ProcedureActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ckicVh7pEeGEaLkc3UAsAg" type="_awdH4Bg4EeGs5a462vYX5Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ckicVx7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xGqiEBVdEeGQCvUGzi1kDQ" name="ResultsSectionEntriesOptional">
      <ownedComment xmi:id="_xGqiERVdEeGQCvUGzi1kDQ" annotatedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <body>&lt;p>&#xD;
    This section contains the results of observations generated by laboratories, imaging procedures, and&#xD;
    other procedures. The scope includes hematology, chemistry, serology, virology, toxicology, microbiology, plain x-ray,&#xD;
    ultrasound, CT, MRI, angiography, cardiac echo, nuclear medicine, pathology, and procedure observations. The section&#xD;
    may contain all results for the period of time being summarized, but should include notable results such as abnormal&#xD;
    values or relevant trends.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Lab results are typically generated by laboratories providing analytic services in areas such as&#xD;
    chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These&#xD;
    observations are based on analysis of specimens obtained from the patient, submitted to the lab.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Imaging results are typically generated by a clinician reviewing the output of an imaging procedure,&#xD;
    such as where a cardiologist reports the left ventricular ejection fraction based on the review of a cardiac&#xD;
    echo.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Procedure results are typically generated by a clinician wanting to provide more granular information&#xD;
    about component observations made during the performance of a procedure, such as where a gastroenterologist reports the&#xD;
    size of a polyp observed during a colonoscopy.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_ciJ2px7pEeGEaLkc3UAsAg" name="ResultsSectionEntriesOptionalTemplateId" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciJ2qB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ciTnoR7pEeGEaLkc3UAsAg" name="ResultsSectionEntriesOptionalCode" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciTnoh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '30954-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ciTnox7pEeGEaLkc3UAsAg" name="ResultsSectionEntriesOptionalTitle" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciTnpB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ciTnpR7pEeGEaLkc3UAsAg" name="ResultsSectionEntriesOptionalText" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciTnph7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ckZSXB7pEeGEaLkc3UAsAg" name="ResultsSectionEntriesOptionalResultOrganizer" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckZSXR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::ResultOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xGqiFRVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_ckZSXh7pEeGEaLkc3UAsAg" name="getResultOrganizers" isQuery="true" bodyCondition="_ckZSYR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ckZSYR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ckZSXh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckZSYh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::ResultOrganizer)).oclAsType(consol::ResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ckZSXx7pEeGEaLkc3UAsAg" type="_2JxzgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ckZSYB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1RZdIBVdEeGQCvUGzi1kDQ" name="AdvanceDirectivesSectionEntriesOptional">
      <ownedComment xmi:id="_1RZdIRVdEeGQCvUGzi1kDQ" annotatedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <body>The advance directive section shall contain a narrative description of the list of documents that define the patient's&#xD;
expectations and requests for care along with the locations of the documents.</body>
      </ownedComment>
      <ownedComment xmi:id="_1RZdIhVdEeGQCvUGzi1kDQ" annotatedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <body>&lt;p>&#xD;
    The Advance Directives Section contains information that defines the patient's expectations and requests&#xD;
    for care along with the locations of the documents. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cicxkB7pEeGEaLkc3UAsAg" name="AdvanceDirectivesSectionEntriesOptionalTemplateId" constrainedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cicxkR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.21')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1RZdJhVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4yj2wBVdEeGQCvUGzi1kDQ" name="EncountersSectionEntriesOptional">
      <ownedComment xmi:id="_4yj2wRVdEeGQCvUGzi1kDQ" annotatedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <body>&lt;p>&#xD;
    This section is used to list and describe any healthcare encounters pertinent to the patient's current&#xD;
    health status or historical health history. An Encounter is an interaction, regardless of the setting, between a&#xD;
    patient and a practitioner who is vested with primary responsibility for diagnosing, evaluating, or treating the&#xD;
    patient's condition. It may include visits, appointments, as well as non face-to-face interactions. It is also a&#xD;
    contact between a patient and a practitioner who has primary responsibility for assessing and treating the patient at a&#xD;
    given contact, exercising independent judgment. This section may contain all encounters for the time period being&#xD;
    summarized, but should include notable encounters.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_4yj2whVdEeGQCvUGzi1kDQ" annotatedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <body>&lt;p>&#xD;
    The encounter history section contains coded entries describing the patient history of encounters.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_4yj2wxVdEeGQCvUGzi1kDQ" annotatedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <body>&lt;p>&#xD;
    The Encounter Section contains information describing the patient history of encounters. At a minimum,&#xD;
    current and pertinent historical encounters should be included; a full encounter history may be included. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cicxkx7pEeGEaLkc3UAsAg" name="EncountersSectionEntriesOptionalTemplateId" constrainedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cicxlB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.22')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4yj2xxVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EuPloBVeEeGQCvUGzi1kDQ" name="ImmunizationsSectionEntriesOptional">
      <ownedComment xmi:id="_eb3_0BqgEeGo461UQq-B1g">
        <body>The Immunizations section defines a patient's current immunization status and pertinent immunization history. The primary use case for the Immunization section is to enable communication of a patient's immunization status. The section should include current immunization status, and may contain the entire immunization history that is relevant to the period of time being summarized.</body>
      </ownedComment>
      <ownedRule xmi:id="_cicxlh7pEeGEaLkc3UAsAg" name="ImmunizationsSectionEntriesOptionalTemplateId" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cicxlx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cimikB7pEeGEaLkc3UAsAg" name="ImmunizationsSectionEntriesOptionalCode" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cimikR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11369-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cimikh7pEeGEaLkc3UAsAg" name="ImmunizationsSectionEntriesOptionalTitle" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cimikx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cimilB7pEeGEaLkc3UAsAg" name="ImmunizationsSectionEntriesOptionalText" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cimilR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EuPlsBVeEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bRH8sBVeEeGQCvUGzi1kDQ" name="VitalSignsSectionEntriesOptional">
      <ownedComment xmi:id="_LjYecBwiEeG_RY8fzJjtMw">
        <body>&lt;p>The Vital Signs section contains relevant vital signs for the context and use case of the document type, such as blood pressure, heart rate, respiratory rate, height, weight, body mass index, head circumference, and pulse oximetry. The section should include notable vital signs such as the most recent, maximum and/or minimum, baseline, or relevant trends.&lt;/p>

&lt;p>Vital signs are represented in the same way as other results, but are aggregated into their own section to follow clinical conventions.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_cimilh7pEeGEaLkc3UAsAg" name="VitalSignsSectionEntriesOptionalTemplateId" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciwTkB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ciwTkh7pEeGEaLkc3UAsAg" name="VitalSignsSectionEntriesOptionalCode" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciwTkx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ciwTlB7pEeGEaLkc3UAsAg" name="VitalSignsSectionEntriesOptionalText" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciwTlR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ciwTlh7pEeGEaLkc3UAsAg" name="VitalSignsSectionEntriesOptionalTitle" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ciwTlx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ck1XMB7pEeGEaLkc3UAsAg" name="VitalSignsSectionEntriesOptionalVitalSignsOrganizer" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ck1XMR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::VitalSignsOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_bRH8uhVeEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_sTsugBxREeG8X6LmnKJ43Q">
          <body>skip</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_ck1XMh7pEeGEaLkc3UAsAg" name="getVitalSignsOrganizers" isQuery="true" bodyCondition="_ck1XNR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ck1XNR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ck1XMh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ck1XNh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::VitalSignsOrganizer)).oclAsType(consol::VitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ck1XMx7pEeGEaLkc3UAsAg" type="_2OlbCRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ck1XNB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Aj7JkBg4EeGs5a462vYX5Q" name="ProcedureAcivityObservation">
      <ownedComment xmi:id="_RlVIQBxuEeGXP8PxDYviDg">
        <body>The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore procedure templates can be represented with various RIM classes: act (e.g., dressing change), observation (e.g., EEG), procedure (e.g. splenectomy). &#xD;
This clinical statement represents procedures that result in new information about the patient that cannot be classified as a procedure according to the HL7 RIM. Examples of these procedures are diagnostic imaging procedures, EEGs and EKGs.</body>
      </ownedComment>
      <ownedRule xmi:id="_ci5dgB7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationTemplateId" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ci5dgR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ci5dgx7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationClassCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ci5dhB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjDOgB7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationId" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjDOgR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjDOgh7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjDOgx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjDOhB7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationStatusCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjDOhR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.14' and (value.code = 'completed' or value.code = 'active' or value.code = 'aborted' or value.code = 'cancelled')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjM_gB7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationValue" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjM_gR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjM_gh7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationEffectiveTime" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjM_gx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjM_hB7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationPriorityCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjM_hR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjM_hh7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationMethodCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjM_hx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjWJcB7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationTargetSiteCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjWJcR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_clSDLh7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationProcedureEncounter" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_clSDLx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.encounter.oclIsUndefined() and entryRelationship.encounter.oclIsKindOf(cda::Encounter) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_clb0IB7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationInstructions" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_clb0IR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_clb0Jx7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationIndication" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_clb0KB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_clb0Lh7pEeGEaLkc3UAsAg" name="ProcedureAcivityObservationMedicationActivity" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_clb0Lx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Aj7JkRg4EeGs5a462vYX5Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_clSDMB7pEeGEaLkc3UAsAg" name="getProcedureEncounters" isQuery="true" bodyCondition="_clSDMx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_clSDMx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_clSDMB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_clSDNB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).oclAsType(cda::Encounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_clSDMR7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_clSDMh7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_clb0Ih7pEeGEaLkc3UAsAg" name="getInstructions" isQuery="true" bodyCondition="_clb0JR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_clb0JR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_clb0Ih7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_clb0Jh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->first().oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_clb0Ix7pEeGEaLkc3UAsAg" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_clb0JB7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_clb0KR7pEeGEaLkc3UAsAg" name="getIndications" isQuery="true" bodyCondition="_clb0LB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_clb0LB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_clb0KR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_clb0LR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_clb0Kh7pEeGEaLkc3UAsAg" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_clb0Kx7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_clb0MB7pEeGEaLkc3UAsAg" name="getMedicationActivity" isQuery="true" bodyCondition="_clb0Mx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_clb0Mx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_clb0MB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_clb0NB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity))->asSequence()->first().oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_clb0MR7pEeGEaLkc3UAsAg" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_clb0Mh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_awdH4Bg4EeGs5a462vYX5Q" name="ProcedureActivityAct">
      <ownedComment xmi:id="_95KuYBxnEeGXP8PxDYviDg">
        <body>The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore procedure templates can be represented with various RIM classes: act (e.g., dressing change), observation (e.g., EEG), procedure (e.g. splenectomy). &#xD;
This clinical statement represents any procedure that cannot be classified as an observation or a procedure according to the HL7 RIM. Examples of these procedures are a dressing change, teaching or feeding a patient or providing comfort measures.</body>
      </ownedComment>
      <ownedRule xmi:id="_cjWJch7pEeGEaLkc3UAsAg" name="ProcedureActivityActTemplateId" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjWJcx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjf6cB7pEeGEaLkc3UAsAg" name="ProcedureActivityActClassCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjf6cR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjf6ch7pEeGEaLkc3UAsAg" name="ProcedureActivityActId" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjf6cx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjf6dB7pEeGEaLkc3UAsAg" name="ProcedureActivityActCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjf6dR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjpEYB7pEeGEaLkc3UAsAg" name="ProcedureActivityActStatusCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjpEYR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.14' and (value.code = 'completed' or value.code = 'active' or value.code = 'aborted' or value.code = 'cancelled')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjpEYh7pEeGEaLkc3UAsAg" name="ProcedureActivityActEffectiveTime" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjpEYx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjpEZB7pEeGEaLkc3UAsAg" name="ProcedureActivityActPriorityCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjpEZR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_clI5PB7pEeGEaLkc3UAsAg" name="ProcedureActivityActProcedureEncounter" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_clI5PR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.encounter.oclIsUndefined() and entryRelationship.encounter.oclIsKindOf(cda::Encounter) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_clI5Qx7pEeGEaLkc3UAsAg" name="ProcedureActivityActInstructions" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_clI5RB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_clSDIB7pEeGEaLkc3UAsAg" name="ProcedureActivityActIndication" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_clSDIR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_clSDJx7pEeGEaLkc3UAsAg" name="ProcedureActivityActMedicationActivity" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_clSDKB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_awdH4Rg4EeGs5a462vYX5Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_clI5Ph7pEeGEaLkc3UAsAg" name="getProcedureEncounters" isQuery="true" bodyCondition="_clI5QR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_clI5QR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_clI5Ph7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_clI5Qh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).oclAsType(cda::Encounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_clI5Px7pEeGEaLkc3UAsAg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_clI5QB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_clI5RR7pEeGEaLkc3UAsAg" name="getInstructions" isQuery="true" bodyCondition="_clI5SB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_clI5SB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_clI5RR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_clI5SR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->first().oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_clI5Rh7pEeGEaLkc3UAsAg" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_clI5Rx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_clSDIh7pEeGEaLkc3UAsAg" name="getIndications" isQuery="true" bodyCondition="_clSDJR7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_clSDJR7pEeGEaLkc3UAsAg" name="body" constrainedElement="_clSDIh7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_clSDJh7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_clSDIx7pEeGEaLkc3UAsAg" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_clSDJB7pEeGEaLkc3UAsAg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_clSDKR7pEeGEaLkc3UAsAg" name="getMedicationActivity" isQuery="true" bodyCondition="_clSDLB7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_clSDLB7pEeGEaLkc3UAsAg" name="body" constrainedElement="_clSDKR7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_clSDLR7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity))->asSequence()->first().oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_clSDKh7pEeGEaLkc3UAsAg" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_clSDKx7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_XUoXwBnZEeGs5a462vYX5Q" name="AuthorizationActivity">
      <ownedRule xmi:id="_cjpEZh7pEeGEaLkc3UAsAg" name="AuthorizationActivityTemplateId" constrainedElement="_XUoXwBnZEeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjpEZx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.19')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XUoXwRnZEeGs5a462vYX5Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_j3aTQBrTEeGo461UQq-B1g" name="MedicationSupplyOrder">
      <ownedRule xmi:id="_cjy1aB7pEeGEaLkc3UAsAg" name="MedicationSupplyOrderTemplateId" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cjy1aR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cj8mYB7pEeGEaLkc3UAsAg" name="MedicationSupplyOrderClassCode" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cj8mYR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cj8mYh7pEeGEaLkc3UAsAg" name="MedicationSupplyOrderEffectiveTime" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cj8mYx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cj8mZB7pEeGEaLkc3UAsAg" name="MedicationSupplyOrderMoodCode" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cj8mZR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cj8mZh7pEeGEaLkc3UAsAg" name="MedicationSupplyOrderQuantity" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cj8mZx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.quantity.oclIsUndefined() or self.quantity.isNullFlavorUndefined()) implies (not self.quantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cj8maB7pEeGEaLkc3UAsAg" name="MedicationSupplyOrderRepeatNumber" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cj8maR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ckFwUB7pEeGEaLkc3UAsAg" name="MedicationSupplyOrderStatusCode" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckFwUR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ckFwUh7pEeGEaLkc3UAsAg" name="MedicationSupplyOrderId" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckFwUx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ckFwVB7pEeGEaLkc3UAsAg" name="MedicationSupplyOrderInstructions" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckFwVR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_j3aTQRrTEeGo461UQq-B1g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_ckPhUB7pEeGEaLkc3UAsAg" name="getInstructions" isQuery="true" bodyCondition="_ckPhUx7pEeGEaLkc3UAsAg">
        <ownedRule xmi:id="_ckPhUx7pEeGEaLkc3UAsAg" name="body" constrainedElement="_ckPhUB7pEeGEaLkc3UAsAg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ckPhVB7pEeGEaLkc3UAsAg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->first().oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ckPhUR7pEeGEaLkc3UAsAg" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ckPhUh7pEeGEaLkc3UAsAg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NufahSVEeGGzu7fmW9pXw" name="Procedure">
      <ownedComment xmi:id="_2NufaxSVEeGGzu7fmW9pXw" annotatedElement="_2NufahSVEeGGzu7fmW9pXw">
        <body>Defines a coded entry describing a procedure performed on a patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_2NufbBSVEeGGzu7fmW9pXw" name="ConsolProcedureHasCodeOriginalText" constrainedElement="_2NufahSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2NufbRSVEeGGzu7fmW9pXw">
          <body>Free text describing the Procedure</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2NufbhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.code.originalText.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2NufbxSVEeGGzu7fmW9pXw" name="ConsolProcedurePerformerAssignedEntity" constrainedElement="_2NufahSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_2NufcBSVEeGGzu7fmW9pXw">
          <body>Name and other information for the person or&#xD;
organization performed or hosted the Procedure</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2NufcRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.performer->forAll(perf : cda::Performer2 | not perf.oclIsUndefined() and perf.assignedEntity->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cksNQR7pEeGEaLkc3UAsAg" name="ConsolProcedureCode" constrainedElement="_2NufahSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cksNQh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cksNQx7pEeGEaLkc3UAsAg" name="ConsolProcedureTargetSiteCode" constrainedElement="_2NufahSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cksNRB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2N0mBBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JIc0oBxEEeGIELeDlfT77A" name="ProcedureSpecimen">
      <ownedComment xmi:id="_Z47QwBxbEeGXP8PxDYviDg">
        <body>This specimen is for representing specimens obtained from a procedure</body>
      </ownedComment>
      <ownedRule xmi:id="_ck1XNx7pEeGEaLkc3UAsAg" name="ProcedureSpecimenTemplateId" constrainedElement="_JIc0oBxEEeGIELeDlfT77A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ck1XOB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = 'null')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_JIyy4BxEEeGIELeDlfT77A">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_mdwKcEcaEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nbpGUBxEEeGIELeDlfT77A" name="ProcedurePerformer">
      <generalization xmi:id="_nbptYBxEEeGIELeDlfT77A">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_HP8qoEcaEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qeLqQBxEEeGIELeDlfT77A" name="ProcedureEncounter">
      <ownedRule xmi:id="_ck_IMR7pEeGEaLkc3UAsAg" name="ProcedureEncounterClassCode" constrainedElement="_qeLqQBxEEeGIELeDlfT77A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ck_IMh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ck_IMx7pEeGEaLkc3UAsAg" name="ProcedureEncounterMoodCode" constrainedElement="_qeLqQBxEEeGIELeDlfT77A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ck_INB7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ck_INR7pEeGEaLkc3UAsAg" name="ProcedureEncounterId" constrainedElement="_qeLqQBxEEeGIELeDlfT77A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ck_INh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_qeMRUBxEEeGIELeDlfT77A">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vBswQBtpEeGT89b80j3MTg" name="EstimatedDateOfDelivery">
      <ownedRule xmi:id="_clb0NR7pEeGEaLkc3UAsAg" name="EstimatedDateOfDeliveryTemplateId" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_clb0Nh7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_clllIB7pEeGEaLkc3UAsAg" name="EstimatedDateOfDeliveryClassCode" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_clllIR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_clllIh7pEeGEaLkc3UAsAg" name="EstimatedDateOfDeliveryCode" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_clllIx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '11778-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_clllJB7pEeGEaLkc3UAsAg" name="EstimatedDateOfDeliveryMoodCode" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_clllJR7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cluvEB7pEeGEaLkc3UAsAg" name="EstimatedDateOfDeliveryStatusCode" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cluvER7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cluvEh7pEeGEaLkc3UAsAg" name="EstimatedDateOfDeliveryValue" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cluvEx7pEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vBvzkBtpEeGT89b80j3MTg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <profileApplication xmi:id="_2B97UBSVEeGGzu7fmW9pXw">
      <eAnnotations xmi:id="_2B97URSVEeGGzu7fmW9pXw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_2B97UhSVEeGGzu7fmW9pXw">
      <eAnnotations xmi:id="_2B97UxSVEeGGzu7fmW9pXw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:AssociationValidation xmi:id="_2EY9MhSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-168</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2ElKchSVEeGGzu7fmW9pXw" severity="INFO" typeCode="REFR"/>
  <CDA:EntryRelationship xmi:id="_2ElxghSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ"/>
  <CDA:EntryRelationship xmi:id="_2EwwoRSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-160</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_2E_aIBSVEeGGzu7fmW9pXw" severity="INFO" typeCode="REFR"/>
  <CDA:EntryRelationship xmi:id="_2FGH1RSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-160</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_2FgXgBSVEeGGzu7fmW9pXw" severity="INFO" typeCode="REFR"/>
  <CDA:EntryRelationship xmi:id="_2Fg-kBSVEeGGzu7fmW9pXw" severity="INFO" typeCode="REFR"/>
  <CDA:EntryRelationship xmi:id="_2Fr9shSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ"/>
  <CDA:EntryRelationship xmi:id="_2GsqUhSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-338</ruleId>
    <ruleId>CONF-339</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_2G1NMhSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-350</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2G43kxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-368</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2HU8dRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-351</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2HbqIhSVEeGGzu7fmW9pXw" message="An entry relationship may be present to provide the fulfillment instructions. When present, this entry relationship shall contain a Medication Fulfillment Instructions entry." severity="INFO" typeCode="SUBJ"/>
  <CDA:ConstraintValidation xmi:id="_2IezABSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2Ik5oxSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:AssociationValidation xmi:id="_2Iwf0hSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-207</ruleId>
  </CDA:AssociationValidation>
  <CDA:ConstraintValidation xmi:id="_2I9UIxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-215</ruleId>
  </CDA:ConstraintValidation>
  <CDA:AssociationValidation xmi:id="_2JeRghSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-246</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2Je4lBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-249</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2KIY1RSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2KzuQhSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-93</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2K8RIhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-98</ruleId>
  </CDA:AssociationValidation>
  <CDA:ActRelationship xmi:id="_2K84MBSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2LBwsxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-102</ruleId>
    <ruleId>CONF-103</ruleId>
  </CDA:AssociationValidation>
  <CDA:ActRelationship xmi:id="_2LCXwBSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2LXu8xSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2LfqwxSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:EntryRelationship xmi:id="_2LgR0hSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ"/>
  <CDA:AssociationValidation xmi:id="_2MABERSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-298</ruleId>
  </CDA:AssociationValidation>
  <Ecore:EReference xmi:id="_2MH84xSVEeGGzu7fmW9pXw" xmlNamespace="##targetNamespace"/>
  <CDA:EntryRelationship xmi:id="_2MIj9xSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-338</ruleId>
    <ruleId>CONF-339</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_2MJLBRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-350</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2MJyFRSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-330</ruleId>
    <ruleId>CONF-333</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_2MKZJRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-313</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2MLANRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-348</ruleId>
    <ruleId>CONF-349</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_2MLnRRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-368</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2MXNcBSVEeGGzu7fmW9pXw" message="This section SHALL include entries from the Insurance Provider module when this information is known.">
    <ruleId>C83-[CT-101-2]</ruleId>
  </CDA:AssociationValidation>
  <CDA:PropertyValidation xmi:id="_2M3jxRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-57</ruleId>
  </CDA:PropertyValidation>
  <CDA:AssociationValidation xmi:id="_2NJ3sRSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-298</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2NP-UxSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2NP-VhSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2NP-WRSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2NP-XBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2OG57RSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2OfUZhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-426</ruleId>
  </CDA:ConstraintValidation>
  <CDA:AssociationValidation xmi:id="_2OrhpxSVEeGGzu7fmW9pXw">
    <ruleId>6.3.4.21.8</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2OrhsBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-399</ruleId>
  </CDA:AssociationValidation>
  <CDA:ConstraintValidation xmi:id="_2O91mxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-406</ruleId>
  </CDA:ConstraintValidation>
  <CDA:EntryRelationship xmi:id="_2SC-yRSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-224</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_sGVWMBUlEeGvPruliC3crg" severity="WARNING"/>
  <Ecore:EAttribute xmi:id="_R8N9QRUmEeGvPruliC3crg" isUnsettable="true"/>
  <Ecore:EReference xmi:id="_R8N9QxUmEeGvPruliC3crg" xmlNamespace="##targetNamespace"/>
  <Ecore:EReference xmi:id="_R8N9RxUmEeGvPruliC3crg" xmlNamespace="##targetNamespace"/>
  <Ecore:EAttribute xmi:id="_R8N9SRUmEeGvPruliC3crg" isUnsettable="true"/>
  <CDA:PropertyValidation xmi:id="_vAJFABVeEeGQCvUGzi1kDQ" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_UCT-cBq1EeGo461UQq-B1g" base_Association="_NdMEkRq1EeGo461UQq-B1g"/>
  <CDA:EntryRelationship xmi:id="_hDPtEBrUEeGo461UQq-B1g" severity="INFO" base_Association="_eLHCUhrUEeGo461UQq-B1g" typeCode="REFR"/>
  <Ecore:EReference xmi:id="_ZoAakBuEEeGnMahsPjlwOw" xmlNamespace="##targetNamespace"/>
  <CDA:CDATemplate xmi:id="_qzhEUBuEEeGnMahsPjlwOw" templateId="11111"/>
  <CDA:PropertyValidation xmi:id="_r4qugBuEEeGnMahsPjlwOw"/>
  <CDA:AssociationValidation xmi:id="_4Kb30BrkEeGJ_KU17uNyeA">
    <ruleId>CONF-458</ruleId>
  </CDA:AssociationValidation>
  <CDA:CodegenSupport xmi:id="_6C87UBwmEeG_RY8fzJjtMw" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/consol" packageName="consol" prefix="Consol" base_Namespace="_2B30sBSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_4Kb30BrkEeGJ_KU17uNyeA">
    <ruleId>CONF-458</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_2DNSDxSVEeGGzu7fmW9pXw" base_Class="_2DNRcBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.3">
    <ruleId>CONF-HP-1</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2DTYFRSVEeGGzu7fmW9pXw" base_Constraint="_2DNRchSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-6</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DZesBSVEeGGzu7fmW9pXw" base_Constraint="_2DNRdBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-7</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DZesRSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2DNRdhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-8</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DZeshSVEeGGzu7fmW9pXw" base_Constraint="_2DNReBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-9</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DZesxSVEeGGzu7fmW9pXw" base_Constraint="_2DNRexSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-10</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DZetBSVEeGGzu7fmW9pXw" base_Constraint="_2DNRfRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-11</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DZetRSVEeGGzu7fmW9pXw" base_Constraint="_2DNRfxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-12</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DZethSVEeGGzu7fmW9pXw" base_Constraint="_2DNRgxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-13</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DZetxSVEeGGzu7fmW9pXw" base_Constraint="_2DNRhRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-14</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DflUBSVEeGGzu7fmW9pXw" base_Constraint="_2DNRiBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-16</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DflURSVEeGGzu7fmW9pXw" base_Constraint="_2DNRihSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-17</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DflVBSVEeGGzu7fmW9pXw" base_Constraint="_2DNRkxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-20</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DflVRSVEeGGzu7fmW9pXw" base_Constraint="_2DNRlhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-25</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Dlr8RSVEeGGzu7fmW9pXw" base_Constraint="_2DNRnhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-28</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Dlr8hSVEeGGzu7fmW9pXw" base_Constraint="_2DNRoRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-29</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Dlr8xSVEeGGzu7fmW9pXw" base_Constraint="_2DNRoxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-30</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Dlr9BSVEeGGzu7fmW9pXw" base_Constraint="_2DNRphSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-31</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Dlr9RSVEeGGzu7fmW9pXw" base_Constraint="_2DNRqBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-32</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Dlr9hSVEeGGzu7fmW9pXw" base_Constraint="_2DNRqhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-33</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Dlr-RSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2DNRshSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-36</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Dlr-hSVEeGGzu7fmW9pXw" base_Constraint="_2DNRtBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-37</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Dlr-xSVEeGGzu7fmW9pXw" base_Constraint="_2DNRtxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-38</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Dlr_BSVEeGGzu7fmW9pXw" base_Constraint="_2DNRuRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-39</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DrykBSVEeGGzu7fmW9pXw" base_Constraint="_2DNRuxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-40</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DrykRSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2DNRvRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-41</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DrykhSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2DNRvxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-42</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DrykxSVEeGGzu7fmW9pXw" base_Constraint="_2DNRwRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-43</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DrymxSVEeGGzu7fmW9pXw" base_Constraint="_2DNR2hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-51</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DrynBSVEeGGzu7fmW9pXw" base_Constraint="_2DNR3BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-52</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DrynRSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2DNR3hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-10</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2DygQBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2DNR4RSVEeGGzu7fmW9pXw">
    <ruleId>CONF-HP-11</ruleId>
  </CDA:ConstraintValidation>
  <uml:Association xmi:id="_2UnxyBSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2Ut4OBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2UnxxhSVEeGGzu7fmW9pXw" base_Class="_2UnxkRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.1.8"/>
  <CDA:ConstraintValidation xmi:id="_2U6FdRSVEeGGzu7fmW9pXw" base_Constraint="_2U6FcxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2U6FeBSVEeGGzu7fmW9pXw" base_Constraint="_2U6FdhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2U6FexSVEeGGzu7fmW9pXw" base_Constraint="_2U6FeRSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2UnxyhSVEeGGzu7fmW9pXw" base_Association="_2UnxyBSVEeGGzu7fmW9pXw">
    <ruleId>C48-[CT2-1]</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2Ut4OhSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2Ut4OBSVEeGGzu7fmW9pXw">
    <ruleId>C48-[CT2-9]</ruleId>
  </CDA:AssociationValidation>
  <uml:Association xmi:id="_2KgMQBSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2INGMxSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2INtQhSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2IQwkBSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2IRXoxSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2ISlwBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2IKC4BSVEeGGzu7fmW9pXw" base_Class="_2IJb0BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.1.2" assigningAuthorityName="HITSP C32">
    <ruleId>C32-[CT1-19]</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2PKCyhSVEeGGzu7fmW9pXw" base_Constraint="_2PKCyBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-2</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2PKCzRSVEeGGzu7fmW9pXw" base_Constraint="_2PKCyxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-3</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2PKC0BSVEeGGzu7fmW9pXw" base_Constraint="_2PKCzhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-4</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2PKC0xSVEeGGzu7fmW9pXw" base_Constraint="_2PKC0RSVEeGGzu7fmW9pXw">
    <ruleId>CONF-6</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2PKC1hSVEeGGzu7fmW9pXw" base_Constraint="_2PKC1BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-8</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2PKC2RSVEeGGzu7fmW9pXw" base_Constraint="_2PKC1xSVEeGGzu7fmW9pXw">
    <ruleId>CONF-9</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2PKC3BSVEeGGzu7fmW9pXw" base_Constraint="_2PKC2hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-10</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2PKC3xSVEeGGzu7fmW9pXw" base_Constraint="_2PKC3RSVEeGGzu7fmW9pXw">
    <ruleId>CONF-11</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2PKC4hSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2PKC4BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-12</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2PQJYhSVEeGGzu7fmW9pXw" base_Constraint="_2PQJYBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-13</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2PQJZRSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2PQJYxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-14</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2IKp8BSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2IJb0hSVEeGGzu7fmW9pXw">
    <ruleId>C32-[CT1-6]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:AssociationValidation xmi:id="_2KgMQhSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2KgMQBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-15</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2INtQRSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2INGMxSVEeGGzu7fmW9pXw">
    <ruleId>C32-[CT1-3]</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2INtRBSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2INtQhSVEeGGzu7fmW9pXw">
    <ruleId>C32-[CT1-4]</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2IQwkhSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2IQwkBSVEeGGzu7fmW9pXw">
    <ruleId>C32-[CT1-14]</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2IR-sRSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2IRXoxSVEeGGzu7fmW9pXw">
    <ruleId>C32-[CT1-16]</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2ISlwhSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2ISlwBSVEeGGzu7fmW9pXw">
    <ruleId>C32-[CT1-18]</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_2UhrABSVEeGGzu7fmW9pXw" base_Class="_2Uhq_hSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.3.88.11.48.1"/>
  <CDA:ConstraintValidation xmi:id="_2UhrCBSVEeGGzu7fmW9pXw" base_Constraint="_2UhrBhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UhrCxSVEeGGzu7fmW9pXw" base_Constraint="_2UhrCRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UhrDhSVEeGGzu7fmW9pXw" base_Constraint="_2UhrDBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2TeiKRSVEeGGzu7fmW9pXw" base_Class="_2TeiIRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.3.88.11.62.1"/>
  <CDA:ConstraintValidation xmi:id="_2Tw2ChSVEeGGzu7fmW9pXw" base_Constraint="_2Tw2CBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Tw2DhSVEeGGzu7fmW9pXw" base_Constraint="_2Tw2CxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T28khSVEeGGzu7fmW9pXw" base_Constraint="_2T28kBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T28lRSVEeGGzu7fmW9pXw" base_Constraint="_2T28kxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T28mRSVEeGGzu7fmW9pXw" base_Constraint="_2T28lhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T28nBSVEeGGzu7fmW9pXw" base_Constraint="_2T28mhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T28nxSVEeGGzu7fmW9pXw" base_Constraint="_2T28nRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T28ohSVEeGGzu7fmW9pXw" base_Constraint="_2T28oBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T28pRSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2T28oxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T28qBSVEeGGzu7fmW9pXw" base_Constraint="_2T28phSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T28qxSVEeGGzu7fmW9pXw" base_Constraint="_2T28qRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T28rhSVEeGGzu7fmW9pXw" base_Constraint="_2T28rBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T28sRSVEeGGzu7fmW9pXw" base_Constraint="_2T28rxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T28tBSVEeGGzu7fmW9pXw" base_Constraint="_2T28shSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T28uBSVEeGGzu7fmW9pXw" base_Constraint="_2T28tRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T9DNhSVEeGGzu7fmW9pXw" base_Constraint="_2T9DNBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T9DORSVEeGGzu7fmW9pXw" base_Constraint="_2T9DNxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2T9DPRSVEeGGzu7fmW9pXw" base_Constraint="_2T9DOhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TeiKhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2TeiIxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TeiKxSVEeGGzu7fmW9pXw" base_Constraint="_2TeiJRSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2Uhq_RSVEeGGzu7fmW9pXw" base_Class="_2UJQeBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.19.1"/>
  <CDA:ConstraintValidation xmi:id="_2UPXNRSVEeGGzu7fmW9pXw" base_Constraint="_2UPXMxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UPXORSVEeGGzu7fmW9pXw" base_Constraint="_2UPXNhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UPXPBSVEeGGzu7fmW9pXw" base_Constraint="_2UPXOhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVdshSVEeGGzu7fmW9pXw" base_Constraint="_2UVdsBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVdthSVEeGGzu7fmW9pXw" base_Constraint="_2UVdsxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVduRSVEeGGzu7fmW9pXw" base_Constraint="_2UVdtxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVdvBSVEeGGzu7fmW9pXw" base_Constraint="_2UVduhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVdvxSVEeGGzu7fmW9pXw" base_Constraint="_2UVdvRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVdwhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2UVdwBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVdxRSVEeGGzu7fmW9pXw" base_Constraint="_2UVdwxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVdyBSVEeGGzu7fmW9pXw" base_Constraint="_2UVdxhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVdyxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVdzhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVd0RSVEeGGzu7fmW9pXw" base_Constraint="_2UVdzxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVd1RSVEeGGzu7fmW9pXw" base_Constraint="_2UVd0hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UbkUhSVEeGGzu7fmW9pXw" base_Constraint="_2UbkUBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UbkVRSVEeGGzu7fmW9pXw" base_Constraint="_2UbkUxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UbkWRSVEeGGzu7fmW9pXw" base_Constraint="_2UbkVhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UbkXBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2UbkWhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UbkXxSVEeGGzu7fmW9pXw" base_Constraint="_2UbkXRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UbkYhSVEeGGzu7fmW9pXw" base_Constraint="_2UbkYBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-UD-17</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UbkZRSVEeGGzu7fmW9pXw" base_Constraint="_2UbkYxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-UD-25</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UbkaBSVEeGGzu7fmW9pXw" base_Constraint="_2UbkZhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-UD-26</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UbkaxSVEeGGzu7fmW9pXw" base_Constraint="_2UbkaRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-UD-28</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UbkbhSVEeGGzu7fmW9pXw" base_Constraint="_2UbkbBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-UD-29</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UbkcRSVEeGGzu7fmW9pXw" base_Constraint="_2UbkbxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-UD-30</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UbkdBSVEeGGzu7fmW9pXw" base_Constraint="_2UbkchSVEeGGzu7fmW9pXw">
    <ruleId>CONF-UD-31</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UbkdxSVEeGGzu7fmW9pXw" base_Constraint="_2UbkdRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-UD-32</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Uhq8hSVEeGGzu7fmW9pXw" base_Constraint="_2Uhq8BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-UD-34</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Uhq9RSVEeGGzu7fmW9pXw" base_Constraint="_2Uhq8xSVEeGGzu7fmW9pXw">
    <ruleId>CONF-UD-35</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Uhq-BSVEeGGzu7fmW9pXw" base_Constraint="_2Uhq9hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-UD-36</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2LMv0BSVEeGGzu7fmW9pXw" base_Class="_2LMIwBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.6.1">
    <ruleId>CONF:7527</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_45wiEBkaEeGs5a462vYX5Q" base_Class="_bGzYgBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.6">
    <ruleId>CONF:7800</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_96YgEBnaEeGs5a462vYX5Q" base_Class="_2EaLUBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.7">
    <ruleId>CONF:7381</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2F1usxSVEeGGzu7fmW9pXw" base_Constraint="_2F1usRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-161</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2F2VwhSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2F2VwBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-180</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2F280hSVEeGGzu7fmW9pXw" base_Constraint="_2F280BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2F3j4hSVEeGGzu7fmW9pXw" base_Constraint="_2F3j4BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Ed1sBSVEeGGzu7fmW9pXw" base_Constraint="_2EaLVxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EecwBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2EaLWRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Efq4BSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2EaLXhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Efq4RSVEeGGzu7fmW9pXw" base_Constraint="_2EaLYRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EgR8BSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2EaLYxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Eg5ABSVEeGGzu7fmW9pXw" base_Constraint="_2EaLZRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EhgEBSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2EaLZxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EhgERSVEeGGzu7fmW9pXw" base_Constraint="_2EaLaRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EiHIBSVEeGGzu7fmW9pXw" base_Constraint="_2EaLaxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EiuMBSVEeGGzu7fmW9pXw" base_Constraint="_2EaLbRSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_09uuIBnaEeGs5a462vYX5Q" base_Class="_2EAisBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.30"/>
  <CDA:ConstraintValidation xmi:id="_2F7OQhSVEeGGzu7fmW9pXw" base_Constraint="_2F7OQBSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7509</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2F8cYBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2F71URSVEeGGzu7fmW9pXw">
    <ruleId>CONF-153</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2F8cYxSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2F8cYRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-140</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2F9DchSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2F9DcBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-256</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2F9qghSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2F9qgBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-179</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2F-RkhSVEeGGzu7fmW9pXw" base_Constraint="_2F-RkBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2F-4oxSVEeGGzu7fmW9pXw" base_Constraint="_2F-4oBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2F_fsBSVEeGGzu7fmW9pXw" base_Constraint="_2F-4pBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2GAGwhSVEeGGzu7fmW9pXw" base_Constraint="_2GAGwBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EBw0BSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2EAithSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2ECX4BSVEeGGzu7fmW9pXw" base_Constraint="_2EAiuRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EC-8BSVEeGGzu7fmW9pXw" base_Constraint="_2EAivBSVEeGGzu7fmW9pXw">
    <ruleId>C154-[DE-6.02-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EC-8RSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2EAivhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EDmABSVEeGGzu7fmW9pXw" base_Constraint="_2EAiwBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EENEBSVEeGGzu7fmW9pXw" base_Constraint="_2EAiwhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EE0IBSVEeGGzu7fmW9pXw" base_Constraint="_2EAixBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EE0IRSVEeGGzu7fmW9pXw" base_Constraint="_2EAixhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EFbMBSVEeGGzu7fmW9pXw" base_Constraint="_2EAiyBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EGCQBSVEeGGzu7fmW9pXw" base_Constraint="_2EAiyhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EGpUBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2EAizRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EGpURSVEeGGzu7fmW9pXw" base_Constraint="_2EAi0BSVEeGGzu7fmW9pXw">
    <ruleId>C154-[DE-6.04-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EHQYBSVEeGGzu7fmW9pXw" base_Constraint="_2EAi0hSVEeGGzu7fmW9pXw">
    <ruleId>C154-[DE-6.04-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EH3cBSVEeGGzu7fmW9pXw" base_Constraint="_2EAi1BSVEeGGzu7fmW9pXw">
    <ruleId>C154-[DE-6.04-3]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EIegBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2EAi1hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EJFkBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2EAi2RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EJFkRSVEeGGzu7fmW9pXw" base_Constraint="_2EAi3BSVEeGGzu7fmW9pXw">
    <ruleId>C154-[DE-6.06-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EJsoBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2EAi3hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EKTsBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2EAi4RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EK6wBSVEeGGzu7fmW9pXw" base_Constraint="_2EAi5BSVEeGGzu7fmW9pXw">
    <ruleId>C154-[DE-6.08-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_cAAIcBneEeGs5a462vYX5Q" base_Class="_2FGu4hSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.8"/>
  <CDA:ConstraintValidation xmi:id="_2FJyMBSVEeGGzu7fmW9pXw" base_Constraint="_2FGu5BSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_kdmRwBncEeGs5a462vYX5Q" base_Class="_2E_aIRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.9">
    <ruleId>CONF:7323</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2FskwhSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-280</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2FtL0hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-296</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Fty4hSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-297</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2FuZ8hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-161</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2FvBABSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-180</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2FvBAxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2FvoEhSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2LSPZhSVEeGGzu7fmW9pXw" base_Class="_2LSPYBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.5.1" assigningAuthorityName="HITSP C83"/>
  <uml:Association xmi:id="_2ICHEBSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2H9OkRSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2H7ZYBSVEeGGzu7fmW9pXw" base_Class="_2H6yUBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.3.88.11.83.7">
    <ruleId>C83-[DE-7-CDA-1]</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2ICuIBSVEeGGzu7fmW9pXw" base_Constraint="_2ICHExSVEeGGzu7fmW9pXw">
    <ruleId>CONF-151</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2IDVMhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2IDVMBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-153</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2ID8QhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2ID8QBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-140</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2IEjUhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2IEjUBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-256</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2IFKYhSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2IFKYBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-179</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2IFxcBSVEeGGzu7fmW9pXw" base_Constraint="_2IFKYxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IFxdBSVEeGGzu7fmW9pXw" base_Constraint="_2IFxcRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IGYghSVEeGGzu7fmW9pXw" base_Constraint="_2IGYgBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IHmohSVEeGGzu7fmW9pXw" base_Constraint="_2IHmoBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2H8AcBSVEeGGzu7fmW9pXw" base_Constraint="_2H6yUhSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-7.05-CDA-3]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2H8AcRSVEeGGzu7fmW9pXw" base_Constraint="_2H6yVBSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-7.05-CDA-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2H8ngBSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2H6yVhSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-7.05-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:AssociationValidation xmi:id="_2ICHEhSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2ICHEBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-168</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2H9OkxSVEeGGzu7fmW9pXw" base_Association="_2H9OkRSVEeGGzu7fmW9pXw" typeCode="SUBJ"/>
  <CDA:CDATemplate xmi:id="_2SVSkxSVEeGGzu7fmW9pXw" base_Class="_2R2xcBSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
  <CDA:ConstraintValidation xmi:id="_2SPMAxSVEeGGzu7fmW9pXw" base_Constraint="_2SPMARSVEeGGzu7fmW9pXw">
    <ruleId>CONF-161</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2SPMBhSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2SPMBBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-180</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2SPMCRSVEeGGzu7fmW9pXw" base_Constraint="_2SPMBxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2SPMDBSVEeGGzu7fmW9pXw" base_Constraint="_2SPMChSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2R2xiRSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2R2xchSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-7.01-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2R2xihSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2R2xdBSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-7.01-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2R2xixSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2R2xdhSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-7.01-3]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2FZp0hSVEeGGzu7fmW9pXw" base_Constraint="_2FZp0BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-509</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2FaQ4xSVEeGGzu7fmW9pXw" base_Constraint="_2FaQ4RSVEeGGzu7fmW9pXw">
    <ruleId>CONF-518</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Fa38hSVEeGGzu7fmW9pXw" base_Constraint="_2Fa38BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-519</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2FUxUBSVEeGGzu7fmW9pXw" base_Constraint="_2FRuBBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2E4FYhSVEeGGzu7fmW9pXw" base_Constraint="_2E4FYBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-509</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2E5TghSVEeGGzu7fmW9pXw" base_Constraint="_2E5TgBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-518</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2E56kBSVEeGGzu7fmW9pXw" base_Constraint="_2E5TgxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-519</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Ezz8BSVEeGGzu7fmW9pXw" base_Constraint="_2ExXshSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_52DvABnaEeGs5a462vYX5Q" base_Class="_2FRuAhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.28">
    <ruleId>CONF:7317</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_p4UDcBnbEeGs5a462vYX5Q" base_Class="_2ExXsBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.5"/>
  <CDA:CDATemplate xmi:id="_8A93ABVeEeGQCvUGzi1kDQ" base_Class="_naxrkBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.5"/>
  <CDA:CDATemplate xmi:id="_YpxugBUzEeGbmN_W114JUw" base_Class="_SjN_8BUzEeGbmN_W114JUw" templateId="2.16.840.1.113883.10.20.22.4.6"/>
  <CDA:CDATemplate xmi:id="_GYVXcBUzEeGbmN_W114JUw" base_Class="_5Ha7ABUyEeGbmN_W114JUw" templateId="2.16.840.1.113883.10.20.22.4.4"/>
  <CDA:CDATemplate xmi:id="_2EqqDxSVEeGGzu7fmW9pXw" base_Class="_2EqqABSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.38" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_2EQaYxSVEeGGzu7fmW9pXw" base_Class="_2EQaUBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.41" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_2EV54BSVEeGGzu7fmW9pXw" base_Constraint="_2EQaVRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-176</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EWg8BSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2EQaVxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-177</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_r3b7QBkaEeGs5a462vYX5Q" base_Class="_2Rwq0BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.9"/>
  <CDA:CDATemplate xmi:id="_JcLykBkbEeGs5a462vYX5Q" base_Class="_2PWQCBSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.1.13.2.1"/>
  <CDA:CDATemplate xmi:id="_JkL0wBnbEeGs5a462vYX5Q" base_Class="_2FhloBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.64"/>
  <CDA:ConstraintValidation xmi:id="_2FphcBSVEeGGzu7fmW9pXw" base_Constraint="_2Fo6YRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-6.3.4.6.7</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2FphcxSVEeGGzu7fmW9pXw" base_Constraint="_2FphcRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-6.3.4.6.10</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2FqIghSVEeGGzu7fmW9pXw" base_Constraint="_2FqIgBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-6.3.4.6.11</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2FqvkhSVEeGGzu7fmW9pXw" base_Constraint="_2FqvkBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-6.3.4.6.12</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_yJUwEBkaEeGs5a462vYX5Q" base_Class="_2Uz-4xSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.33"/>
  <CDA:CDATemplate xmi:id="_2KK1EBSVEeGGzu7fmW9pXw" base_Class="_2KKOBhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.14"/>
  <CDA:ConstraintValidation xmi:id="_2KN4YhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2KN4YBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-123</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KOfdBSVEeGGzu7fmW9pXw" base_Constraint="_2KOfcRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-128</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KPGghSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2KPGgBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-129</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KRiwxSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2KRiwRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-134</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KSJ0hSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2KSJ0BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-135</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KSw4hSVEeGGzu7fmW9pXw" base_Constraint="_2KSw4BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-136</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KTX8hSVEeGGzu7fmW9pXw" base_Constraint="_2KTX8BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-137</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_g8kmkBnSEeGs5a462vYX5Q" base_Class="_2PQJcxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.20"/>
  <CDA:ConstraintValidation xmi:id="_2PWQBBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2PWQAhSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_n3vB4BnSEeGs5a462vYX5Q" base_Class="_2PcWsRSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.4"/>
  <CDA:CDATemplate xmi:id="_uFmSUBnSEeGs5a462vYX5Q" base_Class="_2PidQhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.43"/>
  <CDA:CDATemplate xmi:id="_55YpcBnSEeGs5a462vYX5Q" base_Class="_2RqkOxSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.5"/>
  <CDA:CDATemplate xmi:id="_41cG4BnXEeGs5a462vYX5Q" base_Class="_2PidURSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.24"/>
  <CDA:CDATemplate xmi:id="_4MwQEBUSEeG6PvUxSTZnaw" base_Class="_sHrUoBUSEeG6PvUxSTZnaw" templateId="2.16.840.1.113883.10.20.22.4.19">
    <ruleId>CONF:7482</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_3iHhABnbEeGs5a462vYX5Q" base_Class="_2G8h9RSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.20">
    <ruleId>CONF:7393</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2SbZMRSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2SVSmRSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-2.01-CDA-5]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2KZenRSVEeGGzu7fmW9pXw" base_Class="_2KZekBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.30" assigningAuthorityName="CCD">
    <ruleId>CONF-20</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2KdI8BSVEeGGzu7fmW9pXw" base_Constraint="_2KZekhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-26</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KdwABSVEeGGzu7fmW9pXw" base_Constraint="_2KZelBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-27</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2KVNLhSVEeGGzu7fmW9pXw" base_Class="_2KVNIBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.13" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_LeTcQBnUEeGs5a462vYX5Q" base_Class="_2PWQFxSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.1"/>
  <CDA:ConstraintValidation xmi:id="_2Tw18RSVEeGGzu7fmW9pXw" base_Constraint="_2TqvZhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Tw18hSVEeGGzu7fmW9pXw" base_Constraint="_2TqvaBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TqvUBSVEeGGzu7fmW9pXw" base_Constraint="_2Tko2BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TqvURSVEeGGzu7fmW9pXw" base_Constraint="_2Tko2hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TqvUhSVEeGGzu7fmW9pXw" base_Constraint="_2Tko3BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TqvUxSVEeGGzu7fmW9pXw" base_Constraint="_2Tko3hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TqvVBSVEeGGzu7fmW9pXw" base_Constraint="_2Tko4RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TqvVRSVEeGGzu7fmW9pXw" base_Constraint="_2Tko5BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TkoxhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2TkovhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TkoxxSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2TkowBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2LiuEBSVEeGGzu7fmW9pXw" base_Class="_2LiHABSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.45" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_2LjVIRSVEeGGzu7fmW9pXw" base_Constraint="_2LiHARSVEeGGzu7fmW9pXw">
    <ruleId>CONF-474</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Lj8MBSVEeGGzu7fmW9pXw" base_Constraint="_2LiHAxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-475</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2LpbwBSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2LiHBRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-476</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2LqC0BSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2LiHBxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-477</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Lqp4BSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2LiHCRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-478</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2LrQ8BSVEeGGzu7fmW9pXw" base_Constraint="_2LiHCxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-479</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NIphhSVEeGGzu7fmW9pXw" base_Class="_2NIpgBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.1.1"/>
  <CDA:ConstraintValidation xmi:id="_2NJ3tBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2NJ3shSVEeGGzu7fmW9pXw">
    <ruleId>CONF-298</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_-vKWgBnbEeGs5a462vYX5Q" base_Class="_2GHbgBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.16"/>
  <CDA:ConstraintValidation xmi:id="_2HqToRSVEeGGzu7fmW9pXw" base_Constraint="_2HpskRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-305</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HqTpBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2HqTohSVEeGGzu7fmW9pXw">
    <ruleId>CONF-311</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Hq6shSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2Hq6sBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-314</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HrhwhSVEeGGzu7fmW9pXw" base_Constraint="_2HrhwBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-315</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HsI0xSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2HsI0BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-327</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Hsv4xSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2Hsv4BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-328</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HtW8BSVEeGGzu7fmW9pXw" base_Constraint="_2Hsv5BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-329</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HtW8xSVEeGGzu7fmW9pXw" base_Constraint="_2HtW8RSVEeGGzu7fmW9pXw">
    <ruleId>CONF-354</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HulEBSVEeGGzu7fmW9pXw" base_Constraint="_2Ht-BhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HulFRSVEeGGzu7fmW9pXw" base_Constraint="_2HulERSVEeGGzu7fmW9pXw">
    <ruleId>6.3.4.16.22</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HvMIhSVEeGGzu7fmW9pXw" base_Constraint="_2HvMIBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HvzMxSVEeGGzu7fmW9pXw" base_Constraint="_2HvzMBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HwaQhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2HwaQBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HxBUBSVEeGGzu7fmW9pXw" base_Constraint="_2HwaQxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HxBUxSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2HxBURSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HxoYhSVEeGGzu7fmW9pXw" base_Constraint="_2HxoYBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HyPcxSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2HyPcBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2GaWcBSVEeGGzu7fmW9pXw" base_Constraint="_2GHbhxSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8-CDA-3]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2GcLoBSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2GHbkRSVEeGGzu7fmW9pXw">
    <ruleId>C154-[DE-8.08-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2GcysRSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2GHblRSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.12-CDA-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2GdZwBSVEeGGzu7fmW9pXw" base_Constraint="_2GHblxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2GeA0BSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2GHbmRSVEeGGzu7fmW9pXw">
    <ruleId>C154-[DE-8.20-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Gen4BSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2GHbnBSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.20-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Gen4RSVEeGGzu7fmW9pXw" base_Constraint="_2GHbnxSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.20-CDA-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2GfO8BSVEeGGzu7fmW9pXw" base_Constraint="_2GHboRSVEeGGzu7fmW9pXw">
    <ruleId>C154-[DE-8.20-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Gf2ABSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2GHboxSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.22-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2GgdEBSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2GHbphSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.24-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2GgdERSVEeGGzu7fmW9pXw" base_Constraint="_2GHbqRSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.24-CDA-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2GhEIBSVEeGGzu7fmW9pXw" base_Constraint="_2GHbqxSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.24-CDA-3]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2GhrMBSVEeGGzu7fmW9pXw" base_Constraint="_2GHbrRSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.24-CDA-4]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2GhrMRSVEeGGzu7fmW9pXw" base_Constraint="_2GHbrxSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.24-CDA-5]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2GiSQBSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2GHbsRSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.24-CDA-6]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Gi5UBSVEeGGzu7fmW9pXw" base_Constraint="_2GHbsxSVEeGGzu7fmW9pXw">
    <ruleId>C154-[DE-8.24-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2TMORxSVEeGGzu7fmW9pXw" base_Constraint="_2TMORRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-305</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2TMOShSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2TMOSBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-311</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2TMOTRSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2TMOSxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-314</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2TMOUBSVEeGGzu7fmW9pXw" base_Constraint="_2TMOThSVEeGGzu7fmW9pXw">
    <ruleId>CONF-315</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2TMOVBSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2TMOURSVEeGGzu7fmW9pXw">
    <ruleId>CONF-327</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2TMOWBSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2TMOVRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-328</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2TMOWxSVEeGGzu7fmW9pXw" base_Constraint="_2TMOWRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-329</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2TMOXhSVEeGGzu7fmW9pXw" base_Constraint="_2TMOXBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-354</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2TSU0BSVEeGGzu7fmW9pXw" base_Constraint="_2TMOZRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TSU1RSVEeGGzu7fmW9pXw" base_Constraint="_2TSU0RSVEeGGzu7fmW9pXw">
    <ruleId>6.3.4.16.22</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2TSU2BSVEeGGzu7fmW9pXw" base_Constraint="_2TSU1hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TSU3BSVEeGGzu7fmW9pXw" base_Constraint="_2TSU2RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TSU3xSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2TSU3RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TSU4hSVEeGGzu7fmW9pXw" base_Constraint="_2TSU4BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TSU5RSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2TSU4xSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TSU6BSVEeGGzu7fmW9pXw" base_Constraint="_2TSU5hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TSU7BSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2TSU6RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Szz0BSVEeGGzu7fmW9pXw" base_Constraint="_2SzzzhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-305</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Szz0xSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2Szz0RSVEeGGzu7fmW9pXw">
    <ruleId>CONF-311</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Szz1hSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2Szz1BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-314</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Szz2RSVEeGGzu7fmW9pXw" base_Constraint="_2Szz1xSVEeGGzu7fmW9pXw">
    <ruleId>CONF-315</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Szz3RSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2Szz2hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-327</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Szz4RSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2Szz3hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-328</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2S56UBSVEeGGzu7fmW9pXw" base_Constraint="_2Szz4hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-329</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2S56UxSVEeGGzu7fmW9pXw" base_Constraint="_2S56URSVEeGGzu7fmW9pXw">
    <ruleId>CONF-354</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2S56XRSVEeGGzu7fmW9pXw" base_Constraint="_2S56WhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2S56YhSVEeGGzu7fmW9pXw" base_Constraint="_2S56XhSVEeGGzu7fmW9pXw">
    <ruleId>6.3.4.16.22</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2S56ZRSVEeGGzu7fmW9pXw" base_Constraint="_2S56YxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2S56aRSVEeGGzu7fmW9pXw" base_Constraint="_2S56ZhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2S56bBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2S56ahSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2S56bxSVEeGGzu7fmW9pXw" base_Constraint="_2S56bRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2S56chSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2S56cBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2S56dRSVEeGGzu7fmW9pXw" base_Constraint="_2S56cxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2S56eRSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2S56dhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2S56fBSVEeGGzu7fmW9pXw" base_Constraint="_2S56ehSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_HlZ-cBncEeGs5a462vYX5Q" base_Class="_DpoGkBUUEeG6PvUxSTZnaw" templateId="2.16.840.1.113883.10.20.22.4.18">
    <ruleId>CONF:7454</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_LKvGYBncEeGs5a462vYX5Q" base_Class="_2T9DQBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.23"/>
  <CDA:ConstraintValidation xmi:id="_2UDJ3BSVEeGGzu7fmW9pXw" base_Constraint="_2UDJ2hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-357</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UDJ3xSVEeGGzu7fmW9pXw" base_Constraint="_2UDJ3RSVEeGGzu7fmW9pXw">
    <ruleId>CONF-358</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UDJ4hSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2UDJ4BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-359</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UDJ8RSVEeGGzu7fmW9pXw" base_Constraint="_2UDJ7xSVEeGGzu7fmW9pXw">
    <ruleId>CONF-363</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UDJ9BSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2UDJ8hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-364</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UJQchSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2UJQcBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-365</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UJQdRSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2UJQcxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-367</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2T9DWhSVEeGGzu7fmW9pXw" base_Constraint="_2T9DQhSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.13-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2T9DXBSVEeGGzu7fmW9pXw" base_Constraint="_2T9DRxSVEeGGzu7fmW9pXw">
    <ruleId>C154-[DE-8.13-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2T9DXhSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2T9DSxSVEeGGzu7fmW9pXw">
    <ruleId>C154-[DE-8.13-3]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UDJ0BSVEeGGzu7fmW9pXw" base_Constraint="_2T9DTRSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.14-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UDJ0RSVEeGGzu7fmW9pXw" base_Constraint="_2T9DUBSVEeGGzu7fmW9pXw">
    <ruleId>C154-[DE-8.14-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UDJ0hSVEeGGzu7fmW9pXw" base_Constraint="_2T9DUhSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.15-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2UDJ0xSVEeGGzu7fmW9pXw" base_Constraint="_2T9DVRSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.14-CDA-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Shf5hSVEeGGzu7fmW9pXw" base_Constraint="_2Shf5BSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2Poj_xSVEeGGzu7fmW9pXw" base_Class="_2Poj_BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.3.88.11.83.115" assigningAuthorityName="HITSP C83"/>
  <CDA:CDATemplate xmi:id="_2Gnx3xSVEeGGzu7fmW9pXw" base_Class="_2Gnx1RSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.46" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_2Shf8BSVEeGGzu7fmW9pXw" base_Constraint="_2Shf7hSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_nvOcIBVeEeGQCvUGzi1kDQ" base_Class="_iAoXEBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.1"/>
  <CDA:CDATemplate xmi:id="_2GtRZhSVEeGGzu7fmW9pXw" base_Class="_2GtRYxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.47" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_2Gyw8hSVEeGGzu7fmW9pXw" base_Constraint="_2Gyw8BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-509</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2GzYAxSVEeGGzu7fmW9pXw" base_Constraint="_2GzYARSVEeGGzu7fmW9pXw">
    <ruleId>CONF-518</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Gz_EhSVEeGGzu7fmW9pXw" base_Constraint="_2Gz_EBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-519</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2SnmdhSVEeGGzu7fmW9pXw" base_Class="_2SnmcxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2SnmehSVEeGGzu7fmW9pXw" base_Constraint="_2SnmeBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2KEucxSVEeGGzu7fmW9pXw" base_Class="_2KEucBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.23"/>
  <CDA:CDATemplate xmi:id="_2HIvYRSVEeGGzu7fmW9pXw" base_Class="_2HIvMBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.3.88.11.83.8.3">
    <ruleId>C83-[DE-8-CDA-6]</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2HcRMhSVEeGGzu7fmW9pXw" base_Constraint="_2HcRMBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-317</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Hc4QxSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2Hc4QBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-323</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HdfUxSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2HdfUBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-324</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HeGYBSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2HdfVBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-325</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HeGYxSVEeGGzu7fmW9pXw" base_Constraint="_2HeGYRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-326</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HetchSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2HetcBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-355</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Hf7khSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2Hf7kBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HgiohSVEeGGzu7fmW9pXw" base_Constraint="_2HgioBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HhJsBSVEeGGzu7fmW9pXw" base_Constraint="_2HgioxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HhJtBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2HhJsRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HhwwhSVEeGGzu7fmW9pXw" base_Constraint="_2HhwwBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HiX0hSVEeGGzu7fmW9pXw" base_Constraint="_2HiX0BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Hi-4hSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2Hi-4BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Hjl8BSVEeGGzu7fmW9pXw" base_Constraint="_2Hi-4xSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Hjl8xSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2Hjl8RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HkNAhSVEeGGzu7fmW9pXw" base_Constraint="_2HkNABSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Hk0EhSVEeGGzu7fmW9pXw" base_Constraint="_2Hk0EBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HLLcBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2HIvMhSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.26-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HLygBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2HIvNRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HMZkBSVEeGGzu7fmW9pXw" base_Constraint="_2HIvOBSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.26-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HMZkRSVEeGGzu7fmW9pXw" base_Constraint="_2HIvOxSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.26-CDA-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HOOwBSVEeGGzu7fmW9pXw" base_Constraint="_2HIvQRSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.34-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HOOwRSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2HIvRBSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.34-CDA-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HPc4BSVEeGGzu7fmW9pXw" base_Constraint="_2HIvSRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HPc4RSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2HIvTBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HRSERSVEeGGzu7fmW9pXw" base_Constraint="_2HIvVBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HR5IBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2HIvVxSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-8.39-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2G3CYBSVEeGGzu7fmW9pXw" base_Class="_2G2bUxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.52" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_2G3pcRSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2G2bVRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-451</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_gOTA8BUUEeG6PvUxSTZnaw" base_Class="_chEhQBUUEeG6PvUxSTZnaw" templateId="2.16.840.1.113883.10.20.22.4.25">
    <ruleId>CONF:7372</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_a3-5ABUTEeG6PvUxSTZnaw" base_Class="_VBXq8BUTEeG6PvUxSTZnaw" templateId="2.16.840.1.113883.10.20.22.4.24">
    <ruleId>CONF:7495</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IYW3oBnXEeGs5a462vYX5Q" base_Class="_2Poj5BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.44"/>
  <CDA:CDATemplate xmi:id="__7eHsBnSEeGs5a462vYX5Q" base_Class="_2Poj7RSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.11"/>
  <CDA:ConstraintValidation xmi:id="_HhcpcBq2EeGo461UQq-B1g" base_Constraint="_G1AaMBq2EeGo461UQq-B1g">
    <ruleId>CONF:7493</ruleId>
    <ruleId>CONF:10086</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Sw0r8Bq2EeGo461UQq-B1g"/>
  <CDA:ConstraintValidation xmi:id="_xlA8oBrcEeGo461UQq-B1g" severity="WARNING" base_Constraint="_pHR7UBrcEeGo461UQq-B1g">
    <ruleId>CONF:7367</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_zB2uEBrcEeGo461UQq-B1g" severity="INFO" base_Constraint="_tZn6QBrcEeGo461UQq-B1g">
    <ruleId>CONF:7373</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_uFl-gBrTEeGo461UQq-B1g" base_Class="_j3aTQBrTEeGo461UQq-B1g" templateId="2.16.840.1.113883.10.20.22.4.17">
    <ruleId>CONF:7429</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_CGugsB7pEeGEaLkc3UAsAg" severity="WARNING" base_Constraint="_vY4cQBrcEeGo461UQq-B1g">
    <ruleId>CONF:7369</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2SC-shSVEeGGzu7fmW9pXw" base_Class="_2SC-sBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.42" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_2SJFWhSVEeGGzu7fmW9pXw" base_Constraint="_2SJFWBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2SJFXRSVEeGGzu7fmW9pXw" base_Constraint="_2SJFWxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2SJFYBSVEeGGzu7fmW9pXw" base_Constraint="_2SJFXhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-214</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2SJFYxSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2SJFYRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2SJFahSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2SJFaBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2SJFbRSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2SJFaxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2SJFcRSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2SJFbhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-219</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_hWyHQBnbEeGs5a462vYX5Q" base_Class="_2IpyIxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.46"/>
  <CDA:ConstraintValidation xmi:id="_2IyVAhSVEeGGzu7fmW9pXw" base_Constraint="_2IyVABSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Iy8EBSVEeGGzu7fmW9pXw" base_Constraint="_2IyVAxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Iy8ExSVEeGGzu7fmW9pXw" base_Constraint="_2Iy8ERSVEeGGzu7fmW9pXw">
    <ruleId>CONF-214</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2IzjIhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2IzjIBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2I0xQhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2I0xQBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2I1YUBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2I0xQxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2I1YVBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2I1YURSVEeGGzu7fmW9pXw">
    <ruleId>CONF-219</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_kKyf8BnbEeGs5a462vYX5Q" base_Class="_2IbIoBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.45"/>
  <CDA:ConstraintValidation xmi:id="_2I634BSVEeGGzu7fmW9pXw" base_Constraint="_2I6Q0xSVEeGGzu7fmW9pXw">
    <ruleId>CONF-205</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2I634xSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2I634RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2I7e8hSVEeGGzu7fmW9pXw" base_Constraint="_2I7e8BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-208</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2I8GAhSVEeGGzu7fmW9pXw" base_Constraint="_2I8GABSVEeGGzu7fmW9pXw">
    <ruleId>CONF-212</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2I8tEhSVEeGGzu7fmW9pXw" base_Constraint="_2I8tEBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-213</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2I9UIBSVEeGGzu7fmW9pXw" base_Constraint="_2I8tExSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2I-iQhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2I-iQBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-217</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2I_JUhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2I_JUBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-218</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2I_wYBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2I_JUxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-219</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2JCzshSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2JCzsBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2JDawBSVEeGGzu7fmW9pXw" base_Constraint="_2JCzsxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2JDawxSVEeGGzu7fmW9pXw" base_Constraint="_2JDawRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2JEB0hSVEeGGzu7fmW9pXw" base_Constraint="_2JEB0BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Idk4BSVEeGGzu7fmW9pXw" base_Constraint="_2IbIpxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IeL8BSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2IbIrBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IgoMRSVEeGGzu7fmW9pXw" base_Constraint="_2IbIuRSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2IWQLRSVEeGGzu7fmW9pXw" base_Class="_2IWQIxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.15"/>
  <CDA:ConstraintValidation xmi:id="_2JITQhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2JITQBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-184</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2JI6UhSVEeGGzu7fmW9pXw" base_Constraint="_2JI6UBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-189</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2JKvhhSVEeGGzu7fmW9pXw" base_Class="_2JKvgBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.17">
    <ruleId>CONF-7936</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2JoCgxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-236</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2JopkhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-250</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2JpQohSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-251</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Jp3shSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-252</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2JqewhSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-253</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2JrF0BSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-254</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2JrF0xSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-255</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2JOZ6xSVEeGGzu7fmW9pXw" base_Class="_2JOZ4BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.38">
    <ruleId>CONF-8550</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2JffohSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-243</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2JgGsBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-244</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2JgGtBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-245</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2JgtwhSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2JhU0hSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2Jh74hSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2Jii8BSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:TextValue xmi:id="_2JRdMBSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2JQ2IBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_2JVHlRSVEeGGzu7fmW9pXw" base_Class="_2JVHkhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.56" assigningAuthorityName="HL7"/>
  <CDA:ConstraintValidation xmi:id="_2Jb1QhSVEeGGzu7fmW9pXw" base_Constraint="_2Jb1QBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-509</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2JccUxSVEeGGzu7fmW9pXw" base_Constraint="_2JccURSVEeGGzu7fmW9pXw">
    <ruleId>CONF-518</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2JdDYhSVEeGGzu7fmW9pXw" base_Constraint="_2JdDYBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-519</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_aXMCcBncEeGs5a462vYX5Q" base_Class="_2N6soBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.15.3.8"/>
  <CDA:PropertyValidation xmi:id="_2N6swxSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2N6suBSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2N6sthSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2N6stxSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2N6suRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_oW16cBtsEeGT89b80j3MTg" severity="WARNING" base_Constraint="_L9YKgBtsEeGT89b80j3MTg">
    <ruleId>CONF-8893</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_BbV5sBttEeGT89b80j3MTg" severity="WARNING" base_Constraint="_4G8WIBtsEeGT89b80j3MTg">
    <ruleId>CONF-8894</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_DA2mUBtqEeGT89b80j3MTg" base_Class="_vBswQBtpEeGT89b80j3MTg" templateId="2.16.840.1.113883.10.20.15.3.1"/>
  <CDA:CDATemplate xmi:id="_2PD8ORSVEeGGzu7fmW9pXw" base_Class="_2PD8KxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.3.88.11.83.122" assigningAuthorityName="HITSP C83"/>
  <CDA:ConstraintValidation xmi:id="_2PD8OhSVEeGGzu7fmW9pXw" base_Constraint="_2PD8LRSVEeGGzu7fmW9pXw">
    <ruleId>C83-[CT-122-2]</ruleId>
  </CDA:ConstraintValidation>
  <uml:Association xmi:id="_2J0PxBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2KC5QBSVEeGGzu7fmW9pXw" base_Class="_2JxzgBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.1"/>
  <CDA:ConstraintValidation xmi:id="_2J_O4hSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2J_O4BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-7164</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J_18BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-400</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J_19BSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-401</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KAdAhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-402</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KBEExSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-403</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KBrIxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-404</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KCSMhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-406</ruleId>
  </CDA:ConstraintValidation>
  <CDA:AssociationValidation xmi:id="_2J020BSVEeGGzu7fmW9pXw" severity="WARNING" base_Association="_2J0PxBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-399</ruleId>
  </CDA:AssociationValidation>
  <CDA:ConstraintValidation xmi:id="_2J69chSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2J69cBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-7166</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J7kgxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-415</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J8LkxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-417</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J8LlhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-419</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J8yohSVEeGGzu7fmW9pXw">
    <ruleId>CONF-420</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J9ZshSVEeGGzu7fmW9pXw">
    <ruleId>CONF-421</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J2sARSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>C154-[DE-15.03-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J3TEBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>C154-[DE-15.03-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J36IBSVEeGGzu7fmW9pXw">
    <ruleId>C83-[DE-15.05-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2OAzbhSVEeGGzu7fmW9pXw" base_Class="_2OAzVhSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.4.4"/>
  <CDA:ConstraintValidation xmi:id="_2OG54hSVEeGGzu7fmW9pXw" base_Constraint="_2OAzVxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2OG54xSVEeGGzu7fmW9pXw" base_Constraint="_2OAzWRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2OG55BSVEeGGzu7fmW9pXw" base_Constraint="_2OAzXBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2OG55RSVEeGGzu7fmW9pXw" base_Constraint="_2OAzXhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2OG55hSVEeGGzu7fmW9pXw" base_Constraint="_2OAzYRSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_TIHhwBneEeGs5a462vYX5Q" base_Class="_2J1d4BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.2"/>
  <uml:Association xmi:id="_2JwlYRSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2JtiEBSVEeGGzu7fmW9pXw" base_Class="_2Js7AxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.3.1"/>
  <CDA:ConstraintValidation xmi:id="_2Jv-URSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-392</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CodeSystemConstraint xmi:id="_2JuJIBSVEeGGzu7fmW9pXw" code="30954-2" displayName="Relevant diagnostic tests and/or laboratory data">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF-389</ruleId>
    <ruleId>CONF-390</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:AssociationValidation xmi:id="_2JwlYxSVEeGGzu7fmW9pXw" severity="WARNING" base_Association="_2JwlYRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-388</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_OydAEBVfEeGQCvUGzi1kDQ" base_Class="_xGqiEBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.3"/>
  <CDA:CDATemplate xmi:id="_u5G5QBnaEeGs5a462vYX5Q" base_Class="_2KlEwBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.48"/>
  <CDA:ConstraintValidation xmi:id="_2LC-0BSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2LCXwRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-90</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2LC-0xSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2LC-0RSVEeGGzu7fmW9pXw">
    <ruleId>CONF-91</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2LEM8hSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2LEM8BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KoIEBSVEeGGzu7fmW9pXw" base_Constraint="_2KlExRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KovIRSVEeGGzu7fmW9pXw" base_Constraint="_2KlEyhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Kp9QRSVEeGGzu7fmW9pXw" base_Constraint="_2KlE0RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KqkUBSVEeGGzu7fmW9pXw" base_Constraint="_2KlE0xSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KrLYBSVEeGGzu7fmW9pXw" base_Constraint="_2KlE1RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KrLYRSVEeGGzu7fmW9pXw" base_Constraint="_2KlE1xSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KrycBSVEeGGzu7fmW9pXw" base_Constraint="_2KlE2RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KsZgBSVEeGGzu7fmW9pXw" base_Constraint="_2KlE2xSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2K9fUBSVEeGGzu7fmW9pXw" base_Class="_2K9fQBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.36">
    <ruleId>CONF-101</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2K-tYBSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2K9fQRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-106</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2K-tYRSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2K9fQxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-107</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2K_7gBSVEeGGzu7fmW9pXw" base_Constraint="_2K9fSBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-105</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2KgzVhSVEeGGzu7fmW9pXw" base_Class="_2KgzUBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.21"/>
  <CDA:CDATemplate xmi:id="_VLe-sBVfEeGQCvUGzi1kDQ" base_Class="_1RZdIBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.21"/>
  <CDA:CDATemplate xmi:id="_2K0VVhSVEeGGzu7fmW9pXw" base_Class="_2K0VUxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.37" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_2K504hSVEeGGzu7fmW9pXw" base_Constraint="_2K504BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-509</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2K6b8xSVEeGGzu7fmW9pXw" base_Constraint="_2K6b8RSVEeGGzu7fmW9pXw">
    <ruleId>CONF-518</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2K7DAhSVEeGGzu7fmW9pXw" base_Constraint="_2K7DABSVEeGGzu7fmW9pXw">
    <ruleId>CONF-519</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2KxSBxSVEeGGzu7fmW9pXw" base_Class="_2KxSABSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.58" assigningAuthorityName="CCD">
    <ruleId>CONF-92</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2LXH4BSVEeGGzu7fmW9pXw" base_Class="_2LWg0BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.22"/>
  <CDA:CDATemplate xmi:id="_aJLnwBVfEeGQCvUGzi1kDQ" base_Class="_4yj2wBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.22"/>
  <CDA:ConstraintValidation xmi:id="_2Lx-oBSVEeGGzu7fmW9pXw" base_Constraint="_2Lu7UhSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2LayXhSVEeGGzu7fmW9pXw" base_Class="_2LayQBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.21" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_2Ld1kBSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2LayQRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2LecoBSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2LayQxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2LecoRSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2LayRRSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_i7iGohU9EeGbmN_W114JUw"/>
  <CDA:CDATemplate xmi:id="_zh-FUBnbEeGs5a462vYX5Q" base_Class="_2MAoIBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.52"/>
  <CDA:ConstraintValidation xmi:id="_2MMOUhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-305</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MM1YhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-311</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MNccBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-314</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MNccxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-315</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MODgxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-327</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MOqkxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-328</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MPRohSVEeGGzu7fmW9pXw">
    <ruleId>CONF-329</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MP4shSVEeGGzu7fmW9pXw">
    <ruleId>CONF-354</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MB2QBSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2MHV4BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-312</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_k-AE8BVOEeGbmN_W114JUw" base_Class="_daTqABVOEeGbmN_W114JUw" templateId="2.16.840.1.113883.10.20.22.4.54">
    <ruleId>CONF:9004</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_FsB20BVOEeGbmN_W114JUw" base_Class="__qYdcBVNEeGbmN_W114JUw" templateId="2.16.840.1.113883.10.20.22.4.53">
    <ruleId>CONF:8993</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2L7vphSVEeGGzu7fmW9pXw" base_Class="_2L7voBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.2.1">
    <ruleId>CONF:9015</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2MS8AhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-298</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MTjExSVEeGGzu7fmW9pXw">
    <ruleId>CONF-299</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MUKIBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-303</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MUxMBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>3.</ruleId>
    <ruleId>CONF:7967</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_npcu0BVfEeGQCvUGzi1kDQ" base_Class="_EuPloBVeEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.2">
    <ruleId>CONF:7965</ruleId>
  </CDA:CDATemplate>
  <CDA:EntryRelationship xmi:id="_LhcR8BqnEeGo461UQq-B1g" severity="INFO" base_Association="_i7iGohU9EeGbmN_W114JUw" typeCode="REFR"/>
  <uml:Class xmi:id="_rlOroBq0EeGo461UQq-B1g" name="ImmunizationMedicationInformationMaterial">
    <ownedRule xmi:id="_D431sBq1EeGo461UQq-B1g" name="originalText" constrainedElement="_rlOroBq0EeGo461UQq-B1g">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_FjHxABq1EeGo461UQq-B1g">
        <language>Analysis</language>
        <body>i. This code SHOULD contain zero or one [0..1] originalText (CONF:9008). &#xA;1. This originalText, if present, SHOULD contain zero or one [0..1] reference/@value (CONF:9009). &#xA;a. This reference/@value SHALL begin with a '#' and SHALL point to its corresponding narrative (using the approach defined in CDA Release 2, section 4.3.5.1) (CONF:9010).</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_JPlbsBq1EeGo461UQq-B1g" name="translation" constrainedElement="_rlOroBq0EeGo461UQq-B1g">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_Kf5NABq1EeGo461UQq-B1g">
        <language>Analysis</language>
        <body>ii. This code MAY contain zero or more [0..*] translation (CONF:9011). &#xA;1. Translations can be used to represent generic product name, packaged product code, etc. (CONF:9013).</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_rlOroRq0EeGo461UQq-B1g">
      <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_rFzJEEcZEd6besF9iFIJkQ"/>
    </generalization>
    <ownedAttribute xmi:id="_wCmO0Bq0EeGo461UQq-B1g" name="code" visibility="private" aggregation="composite">
      <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_Z1EGIDxaEd6JwqSGecoePg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCmO0Rq0EeGo461UQq-B1g" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wCmO0hq0EeGo461UQq-B1g"/>
      <redefinedProperty href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qgWpsEo6Ed6c3qsAxlFHaQ"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_wCnc8Bq0EeGo461UQq-B1g" name="lotNumberText" visibility="private" aggregation="composite">
      <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_EaTNsDxaEd6JwqSGecoePg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCnc8Rq0EeGo461UQq-B1g" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wCnc8hq0EeGo461UQq-B1g"/>
      <redefinedProperty href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_vsf-cEo6Ed6c3qsAxlFHaQ"/>
    </ownedAttribute>
  </uml:Class>
  <CDA:ConstraintValidation xmi:id="_EjBl8Bq1EeGo461UQq-B1g" severity="WARNING" base_Constraint="_D431sBq1EeGo461UQq-B1g"/>
  <Ecore:EReference xmi:id="_wCm14Bq0EeGo461UQq-B1g" xmlNamespace="##targetNamespace" base_Property="_wCmO0Bq0EeGo461UQq-B1g"/>
  <CDA:PropertyValidation xmi:id="_x5Bk8Bq0EeGo461UQq-B1g" base_Property="_wCmO0Bq0EeGo461UQq-B1g"/>
  <CDA:ValueSetConstraint xmi:id="_0ogC8Bq0EeGo461UQq-B1g" base_Property="_wCmO0Bq0EeGo461UQq-B1g">
    <reference href="../../org.openhealthtools.mdht.uml.cda.consol.model/model/consol-vocab.uml#_2MRG0BSVEeGGzu7fmW9pXw"/>
  </CDA:ValueSetConstraint>
  <Ecore:EReference xmi:id="_wCnc8xq0EeGo461UQq-B1g" xmlNamespace="##targetNamespace" base_Property="_wCnc8Bq0EeGo461UQq-B1g"/>
  <CDA:TextValue xmi:id="_ywWOgBq0EeGo461UQq-B1g" severity="WARNING" base_Property="_wCnc8Bq0EeGo461UQq-B1g"/>
  <uml:Association xmi:id="_NdMEkRq1EeGo461UQq-B1g"/>
  <uml:Association xmi:id="_eLHCUhrUEeGo461UQq-B1g" memberEnd="_eLHCUxrUEeGo461UQq-B1g">
    <ownedEnd xmi:id="_eLHCUxrUEeGo461UQq-B1g" type="_2MAoIBSVEeGGzu7fmW9pXw" association="_eLHCUhrUEeGo461UQq-B1g"/>
  </uml:Association>
  <CDA:CDATemplate xmi:id="_2MV_VhSVEeGGzu7fmW9pXw" message="This section SHALL include entries from the Insurance Provider module when this information is known." base_Class="_2MV_UBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.18">
    <ruleId>C83-[CT-101-1]</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2M8cQhSVEeGGzu7fmW9pXw" base_Constraint="_2M8cQBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-56</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2M9DUhSVEeGGzu7fmW9pXw" base_Constraint="_2M9DUBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-58</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2M9qYhSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2M9qYBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-62</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2M-RchSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2M-RcBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-63</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2M-4ghSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2M-4gBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-65</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2M_fkhSVEeGGzu7fmW9pXw" base_Constraint="_2M_fkBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-66</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2NAGoBSVEeGGzu7fmW9pXw" base_Constraint="_2M_fkxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-67</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_WCTeUBUlEeGvPruliC3crg" base_Class="_PZBdMBUlEeGvPruliC3crg" templateId="2.16.840.1.113883.10.20.22.4.60"/>
  <CDA:CDATemplate xmi:id="_HyrhcBUmEeGvPruliC3crg" base_Class="_Cg3pkBUmEeGvPruliC3crg" templateId="2.16.840.1.113883.10.20.22.4.60"/>
  <CDA:CDATemplate xmi:id="_cVJrUBnZEeGs5a462vYX5Q" base_Class="_XUoXwBnZEeGs5a462vYX5Q" templateId="2.16.840.1.113883.10.20.1.19"/>
  <CDA:ConstraintValidation xmi:id="_2NBUxRSVEeGGzu7fmW9pXw" base_Constraint="_2NBUwxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-47</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2NB70hSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2NB70BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-44</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MfJQBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2Ma31RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MfJQRSVEeGGzu7fmW9pXw" base_Constraint="_2Ma31xSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MfwUBSVEeGGzu7fmW9pXw" base_Constraint="_2Ma32RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MgXYBSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2Ma32xSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MgXYRSVEeGGzu7fmW9pXw" severity="INFO" base_Constraint="_2Ma33RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MiMkRSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2Ma35RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MizoBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2Ma35xSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MjasBSVEeGGzu7fmW9pXw" base_Constraint="_2Ma36RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MjasRSVEeGGzu7fmW9pXw" base_Constraint="_2Ma36xSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MkBwBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2Ma37RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MlP4RSVEeGGzu7fmW9pXw" base_Constraint="_2Ma38xSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Ml28BSVEeGGzu7fmW9pXw" base_Constraint="_2Ma39RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MnsIBSVEeGGzu7fmW9pXw" base_Constraint="_2Ma3_RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MoTMBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2Ma4ARSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Mo6QRSVEeGGzu7fmW9pXw" base_Constraint="_2Ma4BRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MphUBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2Ma4BxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MqIYBSVEeGGzu7fmW9pXw" base_Constraint="_2Ma4CRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Mr9kRSVEeGGzu7fmW9pXw" base_Constraint="_2Ma4ExSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MskoBSVEeGGzu7fmW9pXw" base_Constraint="_2Ma4FRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2MtywBSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2Ma4GxSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_jeR44BnTEeGs5a462vYX5Q" base_Class="_2NP-QxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.10"/>
  <CDA:CDATemplate xmi:id="_2NWE8xSVEeGGzu7fmW9pXw" base_Class="_2NWE5xSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.25" assigningAuthorityName="CCD" contextDependent="true">
    <ruleId>CONF-485</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NWE9hSVEeGGzu7fmW9pXw" base_Constraint="_2NWE6BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-488</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NWFEhSVEeGGzu7fmW9pXw" base_Class="_2NWFBBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.25" contextDependent="true">
    <ruleId>CONF-485</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NcLghSVEeGGzu7fmW9pXw" base_Constraint="_2NWFBRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-488</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NcLmhSVEeGGzu7fmW9pXw" base_Class="_2NcLjhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.25" assigningAuthorityName="" contextDependent="true">
    <ruleId>CONF-485</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NcLnRSVEeGGzu7fmW9pXw" base_Constraint="_2NcLjxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-490</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NiSNhSVEeGGzu7fmW9pXw" base_Class="_2NiSKhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.25" assigningAuthorityName="" contextDependent="true">
    <ruleId>CONF-485</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NiSORSVEeGGzu7fmW9pXw" base_Constraint="_2NiSKxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-488</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NoYzxSVEeGGzu7fmW9pXw" base_Class="_2NoYwxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.25" contextDependent="true">
    <ruleId>CONF-485</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NoY0hSVEeGGzu7fmW9pXw" base_Constraint="_2NoYxBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-489</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NoY8BSVEeGGzu7fmW9pXw" base_Class="_2NoY5BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.25" contextDependent="true">
    <ruleId>CONF-485</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NufYBSVEeGGzu7fmW9pXw" base_Constraint="_2NoY5RSVEeGGzu7fmW9pXw">
    <ruleId>CONF-489</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2OAzRhSVEeGGzu7fmW9pXw" base_Class="_2OAzQRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.7.1"/>
  <CDA:ConstraintValidation xmi:id="_2OfUaRSVEeGGzu7fmW9pXw" base_Constraint="_2OfUZxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:8021</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CodeSystemConstraint xmi:id="_2OAzTBSVEeGGzu7fmW9pXw" code="47519-4" displayName="History of procedures">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF-423</ruleId>
    <ruleId>CONF-424</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_2OAzUhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-422</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_LbH34BVfEeGQCvUGzi1kDQ" base_Class="_s9Ig4BVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.7" assigningAuthorityName="HL7">
    <ruleId>CONF:6271</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NuffRSVEeGGzu7fmW9pXw" base_Constraint="_2NufbBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2NuffhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2NufbxSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_PlWhYBg4EeGs5a462vYX5Q" base_Class="_Aj7JkBg4EeGs5a462vYX5Q" templateId="2.16.840.1.113883.10.20.22.4.13"/>
  <CDA:CDATemplate xmi:id="_kpdNUBg4EeGs5a462vYX5Q" base_Class="_awdH4Bg4EeGs5a462vYX5Q" templateId="2.16.840.1.113883.10.20.22.4.12"/>
  <uml:Association xmi:id="_2OTHRBSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2OZNwhSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2OZNxxSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2ONAjBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2ONAgBSVEeGGzu7fmW9pXw" base_Class="_2OG58RSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.14" assigningAuthorityName="IHE PCC" contextDependent="true">
    <ruleId>CONF:7654</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2OZN2BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-442</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OZN3BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-447</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OZN4BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-435</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OZN5BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-436</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OZN6BSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-444</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2ONAhhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2ONAhxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2ONAiBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2ONAiRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2ONAihSVEeGGzu7fmW9pXw"/>
  <CDA:TextValue xmi:id="_2ONAghSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2ONAhRSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:EntryRelationship xmi:id="_2OTHRhSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2OTHRBSVEeGGzu7fmW9pXw" typeCode="RSON"/>
  <CDA:EntryRelationship xmi:id="_2OZNxBSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2OZNwhSVEeGGzu7fmW9pXw" typeCode="RSON"/>
  <CDA:EntryRelationship xmi:id="_2OZNyRSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2OZNxxSVEeGGzu7fmW9pXw" typeCode="SUBJ"/>
  <CDA:EntryRelationship xmi:id="_2ONAjhSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2ONAjBSVEeGGzu7fmW9pXw" typeCode="COMP"/>
  <CDA:CDATemplate xmi:id="_6lQbgBxEEeGIELeDlfT77A" base_Class="_JIc0oBxEEeGIELeDlfT77A"/>
  <CDA:CDATemplate xmi:id="_2OfUeBSVEeGGzu7fmW9pXw" base_Class="_2OfUcxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.4.1">
    <ruleId>CONF:7273</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2PD8JhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-385</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OfUeRSVEeGGzu7fmW9pXw">
    <ruleId>C83-[CT-119-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:TextValue xmi:id="_2OlbARSVEeGGzu7fmW9pXw">
    <ruleId>CONF-384</ruleId>
  </CDA:TextValue>
  <CDA:CDATemplate xmi:id="_4L3_UBVfEeGQCvUGzi1kDQ" base_Class="_bRH8sBVeEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.4">
    <ruleId>CONF:7268</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_shioIBneEeGs5a462vYX5Q" base_Class="_2OrhsRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.27"/>
  <CDA:ConstraintValidation xmi:id="_2OxoZRSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-413</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OxoaRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-415</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OxobRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-417</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OxocBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-419</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O3u4hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-420</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O3u5RSVEeGGzu7fmW9pXw">
    <ruleId>CONF-421</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OxoQBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_vIk70BneEeGs5a462vYX5Q" base_Class="_2OlbCRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.26"/>
  <CDA:ConstraintValidation xmi:id="_2O91hRSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-398</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91iRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-400</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91jRSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-401</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91kBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-402</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91lBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-403</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91mBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-404</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91nxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-387</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OrhoBSVEeGGzu7fmW9pXw">
    <ruleId>6.3.4.21.3</ruleId>
  </CDA:ConstraintValidation>
  <CDA:TextValue xmi:id="__bdqYBwhEeG_RY8fzJjtMw"/>
  <CDA:PropertyValidation xmi:id="_BKszYBwiEeG_RY8fzJjtMw" severity="WARNING">
    <ruleId>CONF:7271</ruleId>
    <ruleId>CONF:7272</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_2Pxt8xSVEeGGzu7fmW9pXw" base_Class="_2Pxt6xSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.2.5" assigningAuthorityName="IHE PCC"/>
  <CDA:CDATemplate xmi:id="_ZHedIBnTEeGs5a462vYX5Q" base_Class="_2Pxt0hSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.2.10"/>
  <CDA:CDATemplate xmi:id="_TYymkBnUEeGs5a462vYX5Q" base_Class="_2RqkMBSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.18"/>
  <Ecore:EPackage xmi:id="_b9WgcB7pEeGEaLkc3UAsAg" base_Package="_2B30sBSVEeGGzu7fmW9pXw" packageName="consol" nsPrefix="consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/consol" basePackage="org.openhealthtools.mdht.uml.cda" prefix="Consol"/>
  <Ecore:EClass xmi:id="_b9Wgcx7pEeGEaLkc3UAsAg" base_Class="_2DNRcBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.3' constraints.validation.error='GeneralHeaderConstraintsTemplateId GeneralHeaderConstraintsPersonHasName GeneralHeaderConstraintsRolesShallHaveAddrAndTelecom GeneralHeaderConstraintsOrganizationsHaveContactInfo GeneralHeaderConstraintsTimePreciseToDay GeneralHeaderConstraintsTimePreciseToYear GeneralHeaderConstraintsTelephoneMatchesRegex GeneralHeaderConstraintsHasTelephoneDialingDigits GeneralHeaderConstraintsUnknownTelephoneUsesNullFlavor GeneralHeaderConstraintsTypeIdExtension GeneralHeaderConstraintsIdRootFormat GeneralHeaderConstraintsOidLength GeneralHeaderConstraintsLanguageCodeForm GeneralHeaderConstraintsSetIdAndVersionNumber GeneralHeaderConstraintsSetIdAndIdAreUnique GeneralHeaderConstraintsCopyTimeNotPresent GeneralHeaderConstraintsHasRecordTargetPatientRole GeneralHeaderConstraintsHasPatientBirthTime GeneralHeaderConstraintsHasAdministrativeGenderCode GeneralHeaderConstraintsHasAuthorTime GeneralHeaderConstraintsHasAssignedAuthorId GeneralHeaderConstraintsHasAssignedAuthorPersonOrDevice GeneralHeaderConstraintsHasDataEntererAssignedPerson GeneralHeaderConstraintsHasInformantAssignedPersonOrRelatedPerson GeneralHeaderConstraintsLegalAuthenticatorHasAssignedPerson GeneralHeaderConstraintsAuthenticatorHasAssignedPerson GeneralHeaderConstraintsRealmCode GeneralHeaderConstraintsTypeId GeneralHeaderConstraintsId GeneralHeaderConstraintsCode GeneralHeaderConstraintsTitle GeneralHeaderConstraintsEffectiveTime GeneralHeaderConstraintsLanguageCode' constraints.validation.warning='GeneralHeaderConstraintsRolesShouldHaveAddrAndTelecom GeneralHeaderConstraintsTimePreciseToSecond GeneralHeaderConstraintsTimePreciseToYearAndDay' realmCode.code='US' constraints.validation.info='GeneralHeaderConstraintsHasProviderOrganization GeneralHeaderConstraintsHasDataEntererTime GeneralHeaderConstraintsHasInformant'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_b-izQh7pEeGEaLkc3UAsAg" base_Class="_2EAisBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Allergies, adverse reactions, alerts' templateId.root='2.16.840.1.113883.10.20.22.4.30' constraints.validation.error='AllergyProblemActTemplateId AllergyProblemActEntryRelationshipRequired AllergyProblemActEffectiveTimeLowHigh AllergyProblemActHasRelatedObservations AllergyProblemActRelatedObservationsTypeCode AllergyProblemActHasRelatedReferencesTypeCode AllergyProblemActAdverseEventType AllergyProblemActAdverseEventTypeVocab AllergyProblemActAllergyProductTypeCode AllergyProblemActProductDetailParticipantRole AllergyProblemActProductDetailParticipantRoleClassCode AllergyProblemActProductDetailPlayingEntity AllergyProblemActProductDetailPlayingEntityClassCode AllergyProblemActProductDetailName AllergyProblemActAllergyProductFoodVocab AllergyProblemActAllergyProductMedClassVocab AllergyProblemActAllergyProductSpecificMedVocab AllergyProblemActReactionCodeVocab AllergyProblemActSeverityCodeVocab AllergyProblemActClassCode AllergyProblemActMoodCode AllergyProblemActId AllergyProblemActCode AllergyProblemActStatusCode AllergyProblemActEffectiveTime AllergyProblemActAllergyObservation' code.codeSystemName='LOINC' constraints.validation.warning='AllergyProblemActSubjectOfTarget AllergyProblemActContainsProblemObservation AllergyProblemActContainsAlertObservation AllergyProblemActAdverseEventDate AllergyProblemActAllergyProduct AllergyProblemActProductCode AllergyProblemActReactionText AllergyProblemActReactionCode AllergyProblemActSeverityText AllergyProblemActSeverityCode' classCode='ACT' code.code='48765-2' constraints.validation.info='AllergyProblemActContainsPatientAwareness' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_b_cLJB7pEeGEaLkc3UAsAg" base_Class="_2EQaUBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.5.4' templateId.root='2.16.840.1.113883.10.20.1.41' constraints.validation.error='EpisodeObservationTemplateId EpisodeObservationOneEntryRelationshipSUBJ EpisodeObservationClassCode EpisodeObservationMoodCode EpisodeObservationStatusCode' code.code='ASSERTION' constraints.validation.info='EpisodeObservationExistsEntryRelationshipSAS' value.displayName='Clinical finding' statusCode.code='completed' value.code='404684003' code.codeSystemName='HL7ActCode' constraints.validation.warning='EpisodeObservationCode EpisodeObservationValue' classCode='OBS' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_b_vGFB7pEeGEaLkc3UAsAg" base_Class="_2EaLUBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.5.4' templateId.root='2.16.840.1.113883.10.20.22.4.7' constraints.validation.error='AllergyObservationTemplateId AllergyObservationInformationSource AllergyObservationHasTextReference AllergyObservationCommentInversionInd AllergyObservationCodeCodeSystemRequired AllergyObservationAllergySubstanceTypeCode AllergyObservationAllergySubstanceParticipantRoleClassCode AllergyObservationAllergySubstancePlayingEntityClassCode AllergyObservationAllergySubstancePlayingEntityCode AllergyObservationPlayingEntityCodeReference AllergyObservationClassCode AllergyObservationMoodCode AllergyObservationId AllergyObservationCode AllergyObservationText AllergyObservationStatusCode AllergyObservationEffectiveTime AllergyObservationValue' code.codeSystemName='HL7ActCode' constraints.validation.warning='AllergyObservationDisplayNameCodeName' classCode='OBS' code.code='ASSERTION' constraints.validation.info='AllergyObservationContainsPatientAwareness AllergyObservationAllergySubstance AllergyObservationAllergySubstanceParticipantRole AllergyObservationAllergySubstancePlayingEntity AllergyObservationProblemEntryReactionObservationContainer AllergyObservationSeverity' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cAes_h7pEeGEaLkc3UAsAg" base_Class="_2EqqABSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' code.displayName='Age' templateId.root='2.16.840.1.113883.10.20.1.38' constraints.validation.error='AgeObservationTemplateId AgeObservationClassCode AgeObservationMoodCode AgeObservationCode AgeObservationStatusCode AgeObservationValue' code.codeSystemName='SNOMEDCT' classCode='OBS' code.code='397659008' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cAxn4h7pEeGEaLkc3UAsAg" base_Class="_2ExXsBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Health status' templateId.root='2.16.840.1.113883.10.20.22.4.5' constraints.validation.error='HealthStatusObservationTemplateId HealthStatusObservationTargetOfEntryRelationship HealthStatusObservationNoAdditionalParticipants HealthStatusObservationNoAdditionalRelationships HealthStatusObservationHasTextReference HealthStatusObservationClassCode HealthStatusObservationMoodCode HealthStatusObservationCode HealthStatusObservationText HealthStatusObservationStatusCode HealthStatusObservationValue' code.codeSystemName='LOINC' classCode='OBS' code.code='11323-3' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cBEi1h7pEeGEaLkc3UAsAg" base_Class="_2E_aIRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.9' constraints.validation.error='ReactionObservationTemplateId ReactionObservationClassCode ReactionObservationMoodCode ReactionObservationId ReactionObservationText ReactionObservationStatusCode ReactionObservationValue' code.codeSystemName='SNOMEDCT' classCode='OBS' constraints.validation.warning='ReactionObservationCode ReactionObservationEffectiveTime' constraints.validation.info='ReactionObservationSeverityObservation ReactionObservationProcedureActivityProcedure ReactionObservationMedicationActivity' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cBhOxB7pEeGEaLkc3UAsAg" base_Class="_2FGu4hSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SeverityObservation' code.codeSystem='2.16.840.1.113883.5.4' code.displayName='Severity observation' templateId.root='2.16.840.1.113883.10.20.22.4.8' constraints.validation.error='SeverityObservationTemplateId SeverityObservationHasTextReference SeverityObservationClassCode SeverityObservationMoodCode SeverityObservationCode SeverityObservationText SeverityObservationStatusCode SeverityObservationValue' code.codeSystemName='HL7ActCode' classCode='OBS' code.code='SEV' moodCode='EVN' value.codeSystem='2.16.840.1.113883.5.1063'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cB96tx7pEeGEaLkc3UAsAg" base_Class="_2FRuAhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Status' templateId.root='2.16.840.1.113883.10.20.22.4.28' constraints.validation.error='AllergyStatusObservationTemplateId AllergyStatusObservationTargetOfEntryRelationship AllergyStatusObservationNoAdditionalParticipants AllergyStatusObservationNoAdditionalRelationships AllergyStatusObservationHasTextReference AllergyStatusObservationClassCode AllergyStatusObservationMoodCode AllergyStatusObservationCode AllergyStatusObservationText AllergyStatusObservationStatusCode AllergyStatusObservationValue' code.codeSystemName='LOINC' classCode='OBS' code.code='33999-4' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cCQ1ph7pEeGEaLkc3UAsAg" base_Class="_2FhloBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Annotation comment' templateId.root='2.16.840.1.113883.10.20.22.4.64' constraints.validation.error='CommentTemplateId CommentHasTextReference CommentEffectiveTimeWhenAuthorPresent CommentHasAuthorId CommentHasAuthorOrganization CommentClassCode CommentMoodCode CommentCode CommentText CommentStatusCode' code.codeSystemName='LOINC' classCode='ACT' code.code='48767-8' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cCthmR7pEeGEaLkc3UAsAg" base_Class="_2GHbgBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.16' constraints.validation.error='MedicationActivityTemplateId MedicationActivityMoodCode MedicationActivityInformationSource MedicationActivityHasReasonProblem MedicationActivityHasProduct MedicationActivityHasDosing MedicationActivityDosingRelationship MedicationActivityHasDescriptionNoMedNotKnown MedicationActivityReasonClassMood MedicationActivityHasProductEntry MedicationActivityHasIntructionsInversion MedicationActivityProductName MedicationActivityHasSupplyEntryInversion MedicationActivityFirstEffectiveTimeDatatype MedicationActivityHasMedicationInformation MedicationActivityHasIndicationNarrativeText MedicationActivityHasIndicationVocab MedicationActivityMedicationVehicleType MedicationActivityMedicationVehicleClass MedicationActivityMedicationVehicleCode MedicationActivityMedicationVehicleName MedicationActivityMedicationVehicleCodedNameVocab MedicationActivityId MedicationActivityStatusCode' constraints.validation.warning='MedicationActivityHasDoseQuantityOrRateQuantity MedicationActivityProductStrength MedicationActivityHasFillNumber MedicationActivityRateQuantity' classCode='SBADM' constraints.validation.info='MedicationActivityHasConsents MedicationActivityHasPreconditionCriterion MedicationActivityHasReason MedicationActivityPreconditionReference MedicationActivityDoseUnits MedicationActivityDeliveryMethodDescription MedicationActivityHasStatusOfMedication MedicationActivityHasIndication MedicationActivityHasPatientInstructions MedicationActivityHasMedicationVehicle MedicationActivityMedicationVehicleCodedName MedicationActivityCode MedicationActivityEffectiveTime MedicationActivityRouteCode MedicationActivityApproachSiteCode MedicationActivityDoseQuantity MedicationActivityMaxDoseQuantity MedicationActivityAdministrationUnitCode MedicationActivityMedicationSupplyOrder MedicationActivityInstructions MedicationActivityIndication MedicationActivityMedicationDispense MedicationActivityDrugVehicle'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cD50cB7pEeGEaLkc3UAsAg" base_Class="_2Gnx1RSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.1.46' code.displayName='Dose number' constraints.validation.error='MedicationSeriesNumberObservationTemplateId MedicationSeriesNumberObservationClassCode MedicationSeriesNumberObservationMoodCode MedicationSeriesNumberObservationCode MedicationSeriesNumberObservationStatusCode MedicationSeriesNumberObservationValue' code.codeSystemName='LOINC' classCode='OBS' code.code='30973-2' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cENWZB7pEeGEaLkc3UAsAg" base_Class="_2GtRYxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.1.47' code.displayName='Status' constraints.validation.error='MedicationStatusObservationTemplateId MedicationStatusObservationTargetOfEntryRelationship MedicationStatusObservationNoAdditionalParticipants MedicationStatusObservationNoAdditionalRelationships MedicationStatusObservationClassCode MedicationStatusObservationMoodCode MedicationStatusObservationCode MedicationStatusObservationStatusCode' code.codeSystemName='LOINC' classCode='OBS' code.code='33999-4' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cEgRVB7pEeGEaLkc3UAsAg" base_Class="_2G2bUxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.1.52' constraints.validation.error='ProductInstanceTemplateId ProductInstanceClassCode' constraints.validation.warning='ProductInstanceHasScopingEntity' classCode='MANU'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cEpbQh7pEeGEaLkc3UAsAg" base_Class="_2G5eoxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InternalReferenceId InternalReferenceCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cEpbRx7pEeGEaLkc3UAsAg" base_Class="_2G8h9RSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' templateId.root='2.16.840.1.113883.10.20.22.4.20' constraints.validation.error='InstructionsTemplateId InstructionsClassCode InstructionsMoodCode InstructionsStatusCode' constraints.validation.warning='InstructionsText' classCode='ACT' moodCode='INT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cE89Rx7pEeGEaLkc3UAsAg" base_Class="_2HCokhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.96' constraints.validation.error='MedicationTypeCode' code.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cE89TB7pEeGEaLkc3UAsAg" base_Class="_2HIvMBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.88.11.83.8.3' constraints.validation.error='NonMedicinalSupplyActivityTemplateId NonMedicinalSupplyActivityMoodCode NonMedicinalSupplyActivityInformationSource NonMedicinalSupplyActivityHasAuthorTime NonMedicinalSupplyActivityHasAssignedAuthor NonMedicinalSupplyActivityHasAssignedAuthorPersonOrOrg NonMedicinalSupplyActivityHasPerformerTimeEvent NonMedicinalSupplyActivityHasPerformerAssignedEntity NonMedicinalSupplyActivityHasPerformerEntityPersonOrOrg NonMedicinalSupplyActivityQuantityHasValue NonMedicinalSupplyActivityQuantityOrdered NonMedicinalSupplyActivityQuantityUnit NonMedicinalSupplyActivityPrescriptionNumber NonMedicinalSupplyActivityDispenseDate NonMedicinalSupplyActivityQuantityDispensed NonMedicinalSupplyActivityId' classCode='SPLY' constraints.validation.warning='NonMedicinalSupplyActivityHasAssignedAuthorID NonMedicinalSupplyActivityHasPerformerTimeIntent NonMedicinalSupplyActivityHasPerformerAssignedEntityID NonMedicinalSupplyActivityOrderNumber NonMedicinalSupplyActivityOrderExpiration NonMedicinalSupplyActivityAssigningAuthority NonMedicinalSupplyActivityHasFillNumber NonMedicinalSupplyActivityEffectiveTime NonMedicinalSupplyActivityQuantity' constraints.validation.info='NonMedicinalSupplyActivityHasAuthor NonMedicinalSupplyActivityHasPerformer NonMedicinalSupplyActivityHasParticipantLocation NonMedicinalSupplyActivityHasProduct NonMedicinalSupplyActivityHasIntentAuthor NonMedicinalSupplyActivityDispensingPharmacyLocation NonMedicinalSupplyActivityStatusCode NonMedicinalSupplyActivityRepeatNumber NonMedicinalSupplyActivityProductInstance'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cF1uGR7pEeGEaLkc3UAsAg" base_Class="_2HWKkBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='1.3.6.1.4.1.19376.1.5.3.2' constraints.validation.error='MedicationFullfillmentInstructionsMoodCode MedicationFullfillmentInstructionsCode MedicationFullfillmentInstructionsText MedicationFullfillmentInstructionsStatusCode' code.codeSystemName='IHEActCode' code.code='FINSTRUCT' moodCode='INT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cF_fFh7pEeGEaLkc3UAsAg" base_Class="_2H6yUBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.88.11.83.7' constraints.validation.error='ProblemConcernActTemplateId ProblemConcernActEntryRelationshipRequired ProblemConcernActEffectiveTimeLowHigh ProblemConcernActHasRelatedObservations ProblemConcernActRelatedObservationsTypeCode ProblemConcernActHasRelatedReferencesTypeCode ProblemConcernActHasTreatingProvider ProblemConcernActHasProviderId ProblemConcernActClassCode ProblemConcernActMoodCode ProblemConcernActId ProblemConcernActCodeNullFlavor ProblemConcernActEffectiveTime ProblemConcernActProblemObservation' code.nullFlavor='NA' classCode='ACT' constraints.validation.warning='ProblemConcernActSubjectOfTarget ProblemConcernActContainsProblemObservation ProblemConcernActContainsAlertObservation' moodCode='EVN' constraints.validation.info='ProblemConcernActContainsPatientAwareness ProblemConcernActHasProviderTreatmentTime'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_cGcLAh7pEeGEaLkc3UAsAg" base_Generalization="_2PQJchSVEeGGzu7fmW9pXw"/>
  <Ecore:EClass xmi:id="_cGcLBR7pEeGEaLkc3UAsAg" base_Class="_2IJb0BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.1.2' code.displayName='Summarization of episode note' constraints.validation.error='ContinuityOfCareDocumentTemplateId ContinuityOfCareDocumentServiceEventRequired ContinuityOfCareDocumentServiceEventClassCode ContinuityOfCareDocumentServiceEventEffectiveTime ContinuityOfCareDocumentLanguageCodeFormat ContinuityOfCareDocumentNoTemplateIdExtension ContinuityOfCareDocumentHasEffectiveTimeSeconds ContinuityOfCareDocumentHasEffectiveTimeZone ContinuityOfCareDocumentOneOrTwoRecordTarget ContinuityOfCareDocumentHasAssignedAuthorNullFlavor GeneralHeaderConstraintsCode ContinuityOfCareDocumentLanguageCode ContinuityOfCareDocumentAllergiesSection ContinuityOfCareDocumentMedicationsSection ContinuityOfCareDocumentResultsSection ContinuityOfCareDocumentProblemSection' code.codeSystemName='LOINC' constraints.validation.warning='ContinuityOfCareDocumentHasAssignedAuthor ContinuityOfCareDocumentProceduresSection' code.code='34133-9' constraints.validation.info='ContinuityOfCareDocumentHasInformationRecipient ContinuityOfCareDocumentHealthcareProvider ContinuityOfCareDocumentAdvanceDirectivesSection ContinuityOfCareDocumentEncountersSection ContinuityOfCareDocumentImmunizationsSection ContinuityOfCareDocumentPayersSection ContinuityOfCareDocumentPlanOfCareSection ContinuityOfCareDocumentVitalSignsSection ContinuityOfCareDocumentFamilyHistorySection ContinuityOfCareDocumentSocialHistorySection ContinuityOfCareDocumentMedicalEquipmentSection ContinuityOfCareDocumentFunctionalStatusSection'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cHLx9R7pEeGEaLkc3UAsAg" base_Class="_2IWQIxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='History of family member diseases' templateId.root='2.16.840.1.113883.10.20.22.2.15' constraints.validation.error='FamilyHistorySectionTemplateId FamilyHistorySectionNoSubject FamilyHistorySectionCode FamilyHistorySectionTitle FamilyHistorySectionText FamilyHistorySectionFamilyHistory' code.codeSystemName='LOINC' constraints.validation.warning='FamilyHistorySectionFamilyHistoryObsOrgs' code.code='10157-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cHes2R7pEeGEaLkc3UAsAg" base_Class="_2IbIoBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.5.111' templateId.root='2.16.840.1.113883.10.20.22.4.45' constraints.validation.error='FamilyHistoryOrganizerTemplateId FamilyHistoryOrganizerHasComponent FamilyHistoryOrganizerHasSubject FamilyHistoryOrganizerHasSubjectPatientRelationship FamilyHistoryOrganizerRelationshipValueCode FamilyHistoryOrganizerHasRelatedSubjectCode FamilyHistoryOrganizerHasParticipantParticipantRole FamilyHistoryOrganizerHasParticipantRoleCode FamilyHistoryOrganizerHasParticipantRolePlayingEntity FamilyHistoryOrganizerRelatedSubjectCodeValueSet FamilyHistoryOrganizerFamilyMemberCondition FamilyHistoryOrganizerClassCode FamilyHistoryOrganizerMoodCode FamilyHistoryOrganizerCode FamilyHistoryOrganizerStatusCode FamilyHistoryOrganizerFamilyHistoryObservation' code.codeSystemName='RoleCode' classCode='CLUSTER' constraints.validation.warning='FamilyHistoryOrganizerHasFamilyHistoryObservation FamilyHistoryOrganizerHasRelatedSubjectSubject FamilyHistoryOrganizerHasGenderCode FamilyHistoryOrganizerRelatedSubjectBirthTime FamilyHistoryOrganizerHasFamilyName' moodCode='EVN' constraints.validation.info='FamilyHistoryOrganizerHasParticipant'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cIOTtB7pEeGEaLkc3UAsAg" base_Class="_2IpyIxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.46' constraints.validation.error='FamilyHistoryObservationTemplateId FamilyHistoryObservationHasSubjectPatientRelationship FamilyHistoryObservationRelationshipValueCode FamilyHistoryObservationHasRelatedSubjectCode FamilyHistoryObservationId FamilyHistoryObservationCode FamilyHistoryObservationStatusCode FamilyHistoryObservationValue' code.codeSystemName='SNOMEDCT' constraints.validation.warning='FamilyHistoryObservationRelatedSubjectCodeValueSet FamilyHistoryObservationHasRelatedSubjectSubject FamilyHistoryObservationHasGenderCode FamilyHistoryObservationRelatedSubjectBirthTime' constraints.validation.info='FamilyHistoryObservationAgeObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cI0wpx7pEeGEaLkc3UAsAg" base_Class="_2JKvgBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.17' code.displayName='Social history' constraints.validation.error='SocialHistorySectionTemplateId SocialHistorySectionCode SocialHistorySectionTitle SocialHistorySectionText' code.codeSystemName='LOINC' code.code='29762-2' constraints.validation.info='SocialHistorySectionSocialHistoryObservation SocialHistorySectionPregnancyObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cI-hqR7pEeGEaLkc3UAsAg" base_Class="_2JOZ4BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.38' constraints.validation.error='SocialHistoryObservationTemplateId SocialHistoryObservationValue SocialHistoryObservationClassCode SocialHistoryObservationMoodCode SocialHistoryObservationId SocialHistoryObservationStatusCode' code.codeSystemName='SNOMEDCT' constraints.validation.warning='SocialHistoryObservationOriginalText SocialHistoryObservationReference SocialHistoryObservationCode SocialHistoryObservationValue' classCode='OBS' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cJRclB7pEeGEaLkc3UAsAg" base_Class="_2JVHkhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SocialHistoryStatusCode' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.1.56' code.displayName='Status' constraints.validation.error='SocialHistoryStatusObservationTemplateId SocialHistoryStatusObservationTargetOfEntryRelationship SocialHistoryStatusObservationNoAdditionalParticipants SocialHistoryStatusObservationNoAdditionalRelationships SocialHistoryStatusObservationClassCode SocialHistoryStatusObservationMoodCode SocialHistoryStatusObservationCode SocialHistoryStatusObservationStatusCode SocialHistoryStatusObservationValue' code.codeSystemName='LOINC' classCode='OBS' code.code='33999-4' moodCode='EVN' value.codeSystem='2.16.840.1.113883.1.11.20.17'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_cJuIhB7pEeGEaLkc3UAsAg" base_Generalization="_ksO6UBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_cJuIhx7pEeGEaLkc3UAsAg" base_Class="_2Js7AxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.2.3.1' constraints.validation.error='ResultsSectionTemplateId ResultsSectionTitle ResultsSectionText ResultsSectionResultOrganizer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cKBDdh7pEeGEaLkc3UAsAg" base_Class="_2JxzgBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' moodCode.displayName='Event' templateId.root='2.16.840.1.113883.10.20.22.4.1' constraints.validation.error='ResultOrganizerTemplateId ResultOrganizerId ResultOrganizerCode ResultOrganizerStatusCode ResultOrganizerResultObservation' moodCode.code='EVN' classCode.codeSystem='2.16.840.1.113883.5.6' constraints.validation.warning='ResultOrganizerCodeValue' classCode.codeSystemName='HL7ActClass' moodCode.codeSystem='2.16.840.1.113883.5.1001' classCode.code='' moodCode.codeSystemName='HL7ActMood'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cKT-ax7pEeGEaLkc3UAsAg" base_Class="_2J1d4BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation moodCode.displayName='Event' templateId.root='2.16.840.1.113883.10.20.22.4.2' classCode.displayName='Observation' moodCode.code='EVN' constraints.validation.error='ResultObservationTemplateId ResultObservationId ResultObservationCode ResultObservationEffectiveTime ResultObservationValue' classCode.codeSystem='2.16.840.1.113883.5.6' constraints.validation.warning='ResultObservationCodeValue ResultObservationInterpretationCode' classCode.codeSystemName='HL7ActClass' moodCode.codeSystem='2.16.840.1.113883.5.1001' classCode.code='OBS' constraints.validation.info='ResultObservationMethodCode ResultObservationTargetSiteCode ResultObservationAuthor' moodCode.codeSystemName='HL7ActMood'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cKwqXR7pEeGEaLkc3UAsAg" base_Class="_2KEucBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='History of medical device use' templateId.root='2.16.840.1.113883.10.20.22.2.23' constraints.validation.error='MedicalEquipmentSectionTemplateId MedicalEquipmentSectionCode MedicalEquipmentSectionTitle MedicalEquipmentSectionText' code.codeSystemName='LOINC' constraints.validation.warning='MedicalEquipmentSectionNonMedicinalSupplyActivity' code.code='46264-8'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cLDlTh7pEeGEaLkc3UAsAg" base_Class="_2KKOBhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.14' code.displayName='Functional status assessment' constraints.validation.error='FunctionalStatusSectionTemplateId FunctionalStatusSectionObservationCode FunctionalStatusSectionProblemStatusObservation FunctionalStatusSectionResultStatusObservation FunctionalStatusSectionCode FunctionalStatusSectionTitle FunctionalStatusSectionText' code.codeSystemName='LOINC' constraints.validation.warning='FunctionalStatusSectionClinicalStatements' code.code='47420-5' constraints.validation.info='FunctionalStatusSectionObservationCodeValueSet FunctionalStatusSectionValueDatatype FunctionalStatusSectionIcfCodeSystem'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cLXHSx7pEeGEaLkc3UAsAg" base_Class="_2KVNIBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Summary purpose' templateId.root='2.16.840.1.113883.10.20.1.13' constraints.validation.error='PurposeSectionTemplateId PurposeSectionCode PurposeSectionTitle PurposeSectionText' code.codeSystemName='LOINC' constraints.validation.warning='PurposeSectionPurposeActivity' code.code='48764-5'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cLqCNx7pEeGEaLkc3UAsAg" base_Class="_2KZekBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.1.30' code.displayName='Documentation procedure' constraints.validation.error='PurposeActivityTemplateId PurposeActivityHasReason PurposeActivityReasonType PurposeActivityClassCode PurposeActivityMoodCode PurposeActivityCode PurposeActivityStatusCode' code.codeSystemName='SNOMEDCT' classCode='ACT' code.code='23745001' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_cLzMJB7pEeGEaLkc3UAsAg" base_Generalization="_8UhPsBVfEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_cLzMJx7pEeGEaLkc3UAsAg" base_Class="_2KgzUBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Advance directives' templateId.root='2.16.840.1.113883.10.20.22.2.21' constraints.validation.error='AdvanceDirectivesSectionTemplateId AdvanceDirectivesSectionEntriesOptionalCode AdvanceDirectivesSectionTitle AdvanceDirectivesSectionText AdvanceDirectivesSectionAdvanceDirectiveObservation' code.codeSystemName='LOINC' code.code='42348-3'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cMGuJx7pEeGEaLkc3UAsAg" base_Class="_2KlEwBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.48' constraints.validation.error='AdvanceDirectiveObservationTemplateId AdvanceDirectiveObservationHasStartingTime AdvanceDirectiveObservationHasEndingTime AdvanceDirectiveObservationHasCustodian AdvanceDirectiveObservationParticipantTypeCode AdvanceDirectiveObservationParticipantRoleClassCode AdvanceDirectiveObservationHasAddress AdvanceDirectiveObservationHasTelecom AdvanceDirectiveObservationHasNameOfAgent AdvanceDirectiveObservationClassCode AdvanceDirectiveObservationMoodCode AdvanceDirectiveObservationId AdvanceDirectiveObservationCode AdvanceDirectiveObservationStatusCode AdvanceDirectiveObservationEffectiveTime AdvanceDirectiveObservationRepeatNumber AdvanceDirectiveObservationInterpretationCode AdvanceDirectiveObservationTargetSiteCode' code.codeSystemName='SNOMEDCT' classCode='OBS' constraints.validation.warning='AdvanceDirectiveObservationAdvDirectiveCodeCodeSystem' moodCode='EVN' constraints.validation.info='AdvanceDirectiveObservationAdvDirectiveCodeValueSet AdvanceDirectiveObservationHasExternalReference'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cMskBB7pEeGEaLkc3UAsAg" base_Class="_2KxSABSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.1.58' constraints.validation.error='AdvanceDirectiveVerificationTemplateId AdvanceDirectiveVerificationTypeCode' constraints.validation.warning='AdvanceDirectiveVerificationTime' typeCode='VRF'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cM2VAB7pEeGEaLkc3UAsAg" base_Class="_2K0VUxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.1.37' code.displayName='Status' constraints.validation.error='AdvanceDirectiveStatusObservationTemplateId AdvanceDirectiveStatusObservationTargetOfEntryRelationship AdvanceDirectiveStatusObservationNoAdditionalParticipants AdvanceDirectiveStatusObservationNoAdditionalRelationships AdvanceDirectiveStatusObservationClassCode AdvanceDirectiveStatusObservationMoodCode AdvanceDirectiveStatusObservationCode AdvanceDirectiveStatusObservationStatusCode' code.codeSystemName='LOINC' classCode='OBS' code.code='33999-4' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cM_e9h7pEeGEaLkc3UAsAg" base_Class="_2K9fQBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.1.36' constraints.validation.error='AdvanceDirectiveReferenceTemplateId AdvanceDirectiveReferenceExternalDocumentHasId AdvanceDirectiveReferenceTypeCode' typeCode='REFR' constraints.validation.info='AdvanceDirectiveReferenceHasURL AdvanceDirectiveReferenceHasMIMEType'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_cNJP8h7pEeGEaLkc3UAsAg" base_Generalization="_EEbhsBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_cNJP9R7pEeGEaLkc3UAsAg" base_Class="_2LMIwBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Allergies, adverse reactions, alerts' templateId.root='2.16.840.1.113883.10.20.22.2.6.1' constraints.validation.error='AllergiesSectionTemplateId AllergiesSectionEntriesOptionalCode AllergiesSectionTitle AllergiesSectionText AllergiesSectionAllergyDrugSensitivity' code.codeSystemName='LOINC' code.code='48765-2'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_cNcK5R7pEeGEaLkc3UAsAg" base_Generalization="_blmF8BVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_cNcK6B7pEeGEaLkc3UAsAg" base_Class="_2LSPYBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Problem list' templateId.root='2.16.840.1.113883.10.20.22.2.5.1' constraints.validation.error='ProblemSectionTemplateId ProblemSectionEntriesOptionalCode ProblemSectionTitle ProblemSectionText ProblemSectionCondition' code.codeSystemName='LOINC' code.code='11450-4'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_cNl75x7pEeGEaLkc3UAsAg" base_Generalization="_KVkvoBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_cNl76h7pEeGEaLkc3UAsAg" base_Class="_2LWg0BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='History of encounters' templateId.root='2.16.840.1.113883.10.20.22.2.22' constraints.validation.error='EncountersSectionTemplateId EncountersSectionEntriesOptionalCode EncountersSectionTitle EncountersSectionText' code.codeSystemName='LOINC' constraints.validation.warning='EncountersSectionEncountersActivity' code.code='46240-8'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cNvs5h7pEeGEaLkc3UAsAg" base_Class="_2LayQBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.1.21' constraints.validation.error='EncountersActivitesTemplateId EncountersActivitesClassCode EncountersActivitesMoodCode EncountersActivitesId' classCode='ENC' moodCode='EVN' constraints.validation.info='EncountersActivitesHasIndications EncountersActivitesHasPractitioners EncountersActivitesPractitionerRole EncountersActivitesEffectiveTime EncountersActivitesIndication'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cOCn0h7pEeGEaLkc3UAsAg" base_Class="_2LiHABSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.1.45' constraints.validation.error='ServiceDeliveryLocationTemplateId ServiceDeliveryLocationHasParticipantRole ServiceDeliveryLocationHasParticipantRoleLocation ServiceDeliveryLocationHasPlayingEntityPlace ServiceDeliveryLocationTypeCode' constraints.validation.warning='ServiceDeliveryLocationHasParticipantRoleCodeVocab' typeCode='LOC' constraints.validation.info='ServiceDeliveryLocationHasParticipantRoleCode ServiceDeliveryLocationHasPlayingEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cOLxxx7pEeGEaLkc3UAsAg" base_Class="_2Lu7UBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.12' constraints.validation.error='ConsolEncounterAdmissionSourceValueSet ConsolEncounterClassCode ConsolEncounterId ConsolEncounterText' code.codeSystemName='CPT-4' classCode='ENC' constraints.validation.warning='ConsolEncounterCode'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_cOVixh7pEeGEaLkc3UAsAg" base_Generalization="_QPw2IBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_cOfTwB7pEeGEaLkc3UAsAg" base_Class="_2L7voBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.2.1' constraints.validation.error='ImmunizationsSectionTemplateId ImmunizationsSectionEntriesOptionalCode ImmunizationsSectionTitle ImmunizationsSectionText ImmunizationsSectionImmunization' code.codeSystemName='LOINC' code.code='11369-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cOodtx7pEeGEaLkc3UAsAg" base_Class="_2MAoIBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.12.292' templateId.root='2.16.840.1.113883.10.20.22.4.52' constraints.validation.error='ImmunizationActivityTemplateId ImmunizationActivityClassCode ImmunizationActivityId ImmunizationActivityCode ImmunizationActivityStatusCode ImmunizationActivityEffectiveTime ImmunizationActivityNegationInd' code.codeSystemName='Vaccines administered (CVX)' constraints.validation.warning='ImmunizationActivityDoseQuantity ImmunizationActivityText' classCode='SBADM' moodCode.codeSystem='2.16.840.1.113883.5.1001' constraints.validation.info='ImmunizationActivityRouteCode ImmunizationActivityApproachSiteCode ImmunizationActivityRepeatNumber ImmunizationActivityAdministrationUnitCode ImmunizationActivityDrugVehicle ImmunizationActivityIndication ImmunizationActivityInstructions ImmunizationActivityMedicationDispense ImmunizationActivityReactionObservation ImmunizationActivityImmunizationRefusalReason ImmunizationActivityMedicationSupplyOrder' negationInd='false' moodCode.codeSystemName='HL7ActMood'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cPFJqh7pEeGEaLkc3UAsAg" base_Class="_2MV_UBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.18' code.displayName='Payment sources' constraints.validation.error='PayersSectionTemplateId PayersSectionCode PayersSectionTitle PayersSectionText' code.codeSystemName='LOINC' code.code='48768-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cPYEkB7pEeGEaLkc3UAsAg" base_Class="_2Ma30BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Payment sources' constraints.validation.error='InsuranceProviderInformationSource InsuranceProviderPaymentProviders InsuranceProviderHealthInsuranceType InsuranceProviderInsuranceInformation InsuranceProviderPatientInformation InsuranceProviderMemberId InsuranceProviderRelationshipToSubscriber InsuranceProviderRelationshipToSubscriberCodeSystem InsuranceProviderPatientName InsuranceProviderSubscriberId InsuranceProviderSubscriberAddress InsuranceProviderFinancialResponsibilityPartyType InsuranceProviderFinancialResponsibilityPartyTypeCode InsuranceProviderClassCode InsuranceProviderMoodCode InsuranceProviderId InsuranceProviderCode InsuranceProviderStatusCode InsuranceProviderPayerEntry' code.codeSystemName='LOINC' constraints.validation.warning='InsuranceProviderPayerEntryID InsuranceProviderHealthPlanCoverageStartTime InsuranceProviderHealthPlanCoverageStopTime InsuranceProviderMemberIdRoot InsuranceProviderSubscriberInformation InsuranceProviderSubscriberIdRoot InsuranceProviderFinancialResponsibilityPartyAddress' classCode='ACT' code.code='48768-6' constraints.validation.info='InsuranceProviderSequenceNumber InsuranceProviderInsuranceInfoSourceID InsuranceProviderInsuranceInfoSourceAddr' moodCode='DEF'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cP-hgh7pEeGEaLkc3UAsAg" base_Class="_2MyrQxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' constraints.validation.error='PayerEntryPayerEntityIsRequired PayerEntryCoveredPartyIsRequired PayerEntryEntryRelationshipREFR PayerEntryEntryRelationshipTarget PayerEntryClassCode PayerEntryMoodCode PayerEntryId PayerEntryStatusCode PayerEntryPayerEntity PayerEntryCoveredParty' classCode='ACT' constraints.validation.info='PayerEntryCoveredPartyTime PayerEntrySubscriberIsAllowed PayerEntrySubscriberTime PayerEntrySubscriber' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cQRceR7pEeGEaLkc3UAsAg" base_Class="_2M4x4xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.warning='CoveredPartyId CoveredPartyCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cQbNcB7pEeGEaLkc3UAsAg" base_Class="_2M7OIBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.warning='PolicySubscriberId'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_cQbNfx7pEeGEaLkc3UAsAg" base_Generalization="_UeEpoBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_cQbNgh7pEeGEaLkc3UAsAg" base_Class="_2NIpgBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='History of medication use' templateId.root='2.16.840.1.113883.10.20.22.2.1.1' constraints.validation.error='MedicationsSectionTemplateId MedicationsSectionEntriesOptionalCode MedicationsSectionTitle MedicationsSectionText MedicationsSectionMedication' code.codeSystemName='LOINC' constraints.validation.warning='MedicationsSectionHasMedicationOrSupplyActivity' code.code='10160-0'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cQuIZx7pEeGEaLkc3UAsAg" base_Class="_2NP-QxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.10' code.displayName='Treatment plan' constraints.validation.error='PlanOfCareSectionTemplateId PlanOfCareSectionCode PlanOfCareSectionTitle PlanOfCareSectionText' code.codeSystemName='LOINC' code.code='18776-5' constraints.validation.info='PlanOfCareSectionPlanOfCareActivityAct PlanOfCareSectionPlanOfCareActivityEncounter PlanOfCareSectionPlanOfCareActivityObservation PlanOfCareSectionPlanOfCareActivityProcedure PlanOfCareSectionPlanOfCareActivitySubstanceAdministration PlanOfCareSectionPlanOfCareActivitySupply'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cQ35ZB7pEeGEaLkc3UAsAg" base_Class="_2NWE5xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation contextDependent='true' templateId.root='2.16.840.1.113883.10.20.1.25' constraints.validation.error='PlanOfCareActivityActTemplateId PlanOfCareActivityActMoodCodeValue PlanOfCareActivityActMoodCode PlanOfCareActivityActId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cRBDWR7pEeGEaLkc3UAsAg" base_Class="_2NWFBBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation contextDependent='true' templateId.root='2.16.840.1.113883.10.20.1.25' constraints.validation.error='PlanOfCareActivityEncounterTemplateId PlanOfCareActivityEncounterMoodCodeValue PlanOfCareActivityEncounterMoodCode PlanOfCareActivityEncounterId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cRK0Wx7pEeGEaLkc3UAsAg" base_Class="_2NcLjhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation contextDependent='true' templateId.root='2.16.840.1.113883.10.20.1.25' constraints.validation.error='PlanOfCareActivityObservationTemplateId PlanOfCareActivityObservationMoodCodeValue PlanOfCareActivityObservationMoodCode PlanOfCareActivityObservationId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cRUlWx7pEeGEaLkc3UAsAg" base_Class="_2NiSKhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation contextDependent='true' templateId.root='2.16.840.1.113883.10.20.1.25' constraints.validation.error='PlanOfCareActivityProcedureTemplateId PlanOfCareActivityProcedureMoodCodeValue PlanOfCareActivityProcedureMoodCode PlanOfCareActivityProcedureId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cRdvTR7pEeGEaLkc3UAsAg" base_Class="_2NoYwxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation contextDependent='true' templateId.root='2.16.840.1.113883.10.20.1.25' constraints.validation.error='PlanOfCareActivitySubstanceAdministrationTemplateId PlanOfCareActivitySubstanceAdministrationMoodCodeValue PlanOfCareActivitySubstanceAdministrationMoodCode PlanOfCareActivitySubstanceAdministrationId' classCode='SBADM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cRngTR7pEeGEaLkc3UAsAg" base_Class="_2NoY5BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation contextDependent='true' templateId.root='2.16.840.1.113883.10.20.1.25' constraints.validation.error='PlanOfCareActivitySupplyTemplateId PlanOfCareActivitySupplyMoodCodeValue PlanOfCareActivitySupplyMoodCode PlanOfCareActivitySupplyId' classCode='SPLY'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cRwqOx7pEeGEaLkc3UAsAg" base_Class="_2N0mDRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='HISTORY OF PREGNANCIES' constraints.validation.error='PregnancyHistorySectionCode PregnancyHistorySectionPregnancyObservation' code.codeSystemName='LOINC' code.code='10162-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cR6bOx7pEeGEaLkc3UAsAg" base_Class="_2N6soBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.5.4' templateId.root='2.16.840.1.113883.10.20.15.3.8' code.displayName='Assertion' constraints.validation.error='PregnancyObservationTemplateId PregnancyObservationClassCode PregnancyObservationMoodCode PregnancyObservationCode PregnancyObservationStatusCode PregnancyObservationValue PregnancyObservationEstimatedDateOfDelivery' code.code='ASSERTION' value.displayName='Pregnant' statusCode.code='completed' value.code='77386006' code.codeSystemName='HL7ActCode' constraints.validation.warning='PregnancyObservationEffectiveTime' classCode='OBS' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_cSNWJB7pEeGEaLkc3UAsAg" base_Generalization="_gNO_cBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_cSNWJx7pEeGEaLkc3UAsAg" base_Class="_2OAzQRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation title.mixed='Procedures' templateId.root='2.16.840.1.113883.10.20.22.2.7.1' constraints.validation.error='ProceduresSectionTemplateId ProceduresSectionHasProcedureActivity ProceduresSectionTitle'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cSXHJB7pEeGEaLkc3UAsAg" base_Class="_2OAzVhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='1.3.6.1.4.1.19376.1.5.3.1.4.4' constraints.validation.error='ExternalReferenceTemplateId ExternalReferenceHasNoCode ExternalReferenceHasReference ExternalReferenceHasReferenceExternalDocument ExternalReferenceHasReferenceExternalDocumentID ExternalReferenceHasReferenceExternalDocumentText ExternalReferenceClassCode ExternalReferenceMoodCode ExternalReferenceId ExternalReferenceText' classCode='ACT' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cSg4Kh7pEeGEaLkc3UAsAg" base_Class="_2OG58RSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation contextDependent='true' templateId.root='2.16.840.1.113883.10.20.22.4.14' constraints.validation.error='ProcedureActivityProcedureTemplateId ProcedureActivityProcedureClassCode ProcedureActivityProcedureId ProcedureActivityProcedureCode ProcedureActivityProcedureStatusCode' targetSiteCode.codeSystem='2.16.840.1.113883.6.96' classCode='PROC' constraints.validation.warning='ProcedureActivityProcedureEffectiveTime ProcedureActivityProcedureTargetSiteCode' moodCode.codeSystem='2.16.840.1.113883.5.1001' constraints.validation.info='ProcedureActivityProcedurePriorityCode ProcedureActivityProcedureMethodCode ProcedureActivityProcedureIndication ProcedureActivityProcedureMedicationActivity ProcedureActivityProcedurePatientInstruction ProcedureActivityProcedureProcedureEncounter ProcedureActivityProcedureProductInstance' moodCode.codeSystemName='HL7ActMood' targetSiteCode.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_cTQfBR7pEeGEaLkc3UAsAg" base_Generalization="_px07IBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_cTQfCB7pEeGEaLkc3UAsAg" base_Class="_2OfUcxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.4.1' constraints.validation.error='VitalSignsSectionTemplateId VitalSignsSectionEntriesOptionalCode VitalSignsSectionText VitalSignsSectionTitle VitalSignsSectionVitalSignsOrganizer' code.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cTZo9B7pEeGEaLkc3UAsAg" base_Class="_2OlbCRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.26' code.displayName='Vital signs' constraints.validation.error='VitalSignsOrganizerTemplateId VitalSignsOrganizerClassCode VitalSignsOrganizerMoodCode VitalSignsOrganizerId VitalSignsOrganizerCode VitalSignsOrganizerStatusCode VitalSignsOrganizerEffectiveTime VitalSignsOrganizerVitalSignObservation' code.codeSystemName='SNOMEDCT' classCode='CLUSTER' code.code='46680005' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cTtK-R7pEeGEaLkc3UAsAg" base_Class="_2OrhsRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.4.27' constraints.validation.error='VitalSignObservationTemplateId VitalSignObservationClassCode VitalSignObservationMoodCode VitalSignObservationId VitalSignObservationCode VitalSignObservationStatusCode VitalSignObservationEffectiveTime VitalSignObservationValue' code.codeSystemName='LOINC' constraints.validation.warning='VitalSignObservationText' classCode='OBS' moodCode='EVN' constraints.validation.info='VitalSignObservationInterpretationCode VitalSignObservationMethodCode VitalSignObservationTargetSiteCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cUJP3R7pEeGEaLkc3UAsAg" base_Class="_2PD8KxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.3.88.11.83.122' code.displayName='STUDIES SUMMARY' constraints.validation.error='DiagnosticResultsSectionTemplateId DiagnosticResultsSectionHasResult DiagnosticResultsSectionCode DiagnosticResultsSectionDiagnosticProcedure' code.codeSystemName='LOINC' constraints.validation.warning='DiagnosticResultsSectionExternalReference' code.code='30954-2' constraints.validation.info='DiagnosticResultsSectionResult DiagnosticResultsSectionResultOrganizer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cUcx4B7pEeGEaLkc3UAsAg" base_Class="_2PQJcxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='HISTORY OF PAST ILLNESS' templateId.root='2.16.840.1.113883.10.20.22.2.20' constraints.validation.error='HistoryOfPastIllnessSectionTemplateId HistoryOfPastIllnessSectionCode HistoryOfPastIllnessSectionCondition' code.codeSystemName='LOINC' constraints.validation.warning='HistoryOfPastIllnessSectionHasClinicalStatements' code.code='11348-0'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cUl7yR7pEeGEaLkc3UAsAg" base_Class="_2PWQCBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='CHIEF COMPLAINT' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.1.13.2.1' constraints.validation.error='ChiefComplaintSectionTemplateId ChiefComplaintSectionCode' code.codeSystemName='LOINC' code.code='10154-3' constraints.validation.info='ChiefComplaintSectionCondition'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cUvsyR7pEeGEaLkc3UAsAg" base_Class="_2PWQFxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='REASON FOR REFERRAL' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.1' constraints.validation.error='ReasonForReferralSectionTemplateId ReasonForReferralSectionCode ReasonForReferralSectionProblemEntry' code.codeSystemName='LOINC' code.code='42349-1' constraints.validation.info='ReasonForReferralSectionCondition ReasonForReferralSectionResult'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cU5d1R7pEeGEaLkc3UAsAg" base_Class="_2PcWsRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.4' code.displayName='HISTORY OF PRESENT ILLNESS' constraints.validation.error='HistoryOfPresentIllnessTemplateId HistoryOfPresentIllnessCode' code.codeSystemName='LOINC' code.code='10164-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cVCnsh7pEeGEaLkc3UAsAg" base_Class="_2PidQhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='HOSPITAL ADMISSION DX' templateId.root='2.16.840.1.113883.10.20.22.2.43' constraints.validation.error='HospitalAdmissionDiagnosisSectionTemplateId HospitalAdmissionDiagnosisSectionCode HospitalAdmissionDiagnosisSectionCondition' code.codeSystemName='LOINC' code.code='46241-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cVMYth7pEeGEaLkc3UAsAg" base_Class="_2PidURSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='HOSPITAL DISCHARGE DX' templateId.root='2.16.840.1.113883.10.20.22.2.24' constraints.validation.error='HospitalDischargeDiagnosisSectionTemplateId HospitalDischargeDiagnosisSectionCode HospitalDischargeDiagnosisSectionCondition' code.codeSystemName='LOINC' code.code='11535-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cVMYwh7pEeGEaLkc3UAsAg" base_Class="_2Poj5BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.44' code.displayName='MEDICATIONS ON ADMISSION' constraints.validation.error='Hospital AdmissionMedicationsSectionEntriesOptionalTemplateId Hospital AdmissionMedicationsSectionEntriesOptionalCode' code.codeSystemName='LOINC' code.code='42346-7'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cVVipB7pEeGEaLkc3UAsAg" base_Class="_2Poj7RSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='HOSPITAL DISCHARGE MEDICATIONS' templateId.root='2.16.840.1.113883.10.20.22.2.11' constraints.validation.error='HospitalDischargeMedicationsSectionTemplateId HospitalDischargeMedicationsSectionCode HospitalDischargeMedicationsSectionMedication' code.codeSystemName='LOINC' code.code='10183-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cVfTqR7pEeGEaLkc3UAsAg" base_Class="_2Poj_BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.3.88.11.83.115' code.displayName='MEDICATION ADMINISTERED' constraints.validation.error='MedicationsAdministeredSectionTemplateId MedicationsAdministeredSectionCode' code.codeSystemName='LOINC' code.code='18610-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cVfTrh7pEeGEaLkc3UAsAg" base_Class="_2Pxt0hSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.2.10' code.displayName='PHYSICAL EXAMINATION' constraints.validation.error='PhysicalExamSectionTemplateId PhysicalExamSectionCode PhysicalExamSectionCondition' code.codeSystemName='LOINC' code.code='29545-1' constraints.validation.info='PhysicalExamSectionVitalSignsSection PhysicalExamSectionGeneralAppearanceSection PhysicalExamSectionVisibleImplantedMedicalDevicesSection PhysicalExamSectionIntegumentarySystemSection PhysicalExamSectionHeadSection PhysicalExamSectionEyesSection PhysicalExamSectionEarsNoseMouthThroatSection PhysicalExamSectionEarsSection PhysicalExamSectionNoseSection PhysicalExamSectionMouthThroatTeethSection PhysicalExamSectionNeckSection PhysicalExamSectionEndocrineSystemSection PhysicalExamSectionThoraxLungsSection PhysicalExamSectionChestWallSection PhysicalExamSectionBreastSection PhysicalExamSectionHeartSection PhysicalExamSectionRespiratorySystemSection PhysicalExamSectionAbdomenSection PhysicalExamSectionLymphaticSection PhysicalExamSectionVesselsSection PhysicalExamSectionMusculoskeletalSystemSection PhysicalExamSectionNeurologicSystemSection PhysicalExamSectionGenitaliaSection PhysicalExamSectionRectumSection PhysicalExamSectionExtremitiesSection'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cVyOmR7pEeGEaLkc3UAsAg" base_Class="_2Pxt6xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='GENERAL STATUS' templateId.root='2.16.840.1.113883.10.20.2.5' constraints.validation.error='GeneralStatusSectionTemplateId GeneralStatusSectionCode' code.codeSystemName='LOINC' code.code='10210-3' constraints.validation.info='GeneralStatusSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cV7_nB7pEeGEaLkc3UAsAg" base_Class="_2P7e1hSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Visible implanted medical devices' constraints.validation.error='VisibleImplantedMedicalDevicesSectionCode' code.codeSystemName='LOINC' code.code='XX-VisibleImplantedDevices' constraints.validation.info='VisibleImplantedMedicalDevicesSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cWFwlR7pEeGEaLkc3UAsAg" base_Class="_2P7e6xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='INTEGUMENTARY SYSTEM' constraints.validation.error='IntegumentarySystemSectionCode' code.codeSystemName='LOINC' code.code='29302-7' constraints.validation.info='IntegumentarySystemSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cWO6gB7pEeGEaLkc3UAsAg" base_Class="_2QEoyhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='HEAD' constraints.validation.error='HeadSectionCode' code.codeSystemName='LOINC' code.code='10199-8' constraints.validation.info='HeadSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cWO6kR7pEeGEaLkc3UAsAg" base_Class="_2QEo3xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='EYE' constraints.validation.error='EyesSectionCode' code.codeSystemName='LOINC' code.code='10197-2' constraints.validation.info='EyesSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cWYrjh7pEeGEaLkc3UAsAg" base_Class="_2QOZyhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='EARS and NOSE and MOUTH and THROAT' constraints.validation.error='EarsNoseMouthThroatSectionCode' code.codeSystemName='LOINC' code.code='11393-6' constraints.validation.info='EarsNoseMouthThroatSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cWh1fB7pEeGEaLkc3UAsAg" base_Class="_2QOZ3xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='EAR' constraints.validation.error='EarsSectionCode' code.codeSystemName='LOINC' code.code='10195-6' constraints.validation.info='EarsSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cWrmdR7pEeGEaLkc3UAsAg" base_Class="_2QYKyhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='NOSE' constraints.validation.error='NoseSectionCode' code.codeSystemName='LOINC' code.code='10203-8' constraints.validation.info='NoseSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cWrmhh7pEeGEaLkc3UAsAg" base_Class="_2QYK3xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='MOUTH and THROAT and TEETH' constraints.validation.error='MouthThroatTeethSectionCode' code.codeSystemName='LOINC' code.code='10201-2' constraints.validation.info='MouthThroatTeethSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cW1XgB7pEeGEaLkc3UAsAg" base_Class="_2QhUuxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='NECK' constraints.validation.error='NeckSectionCode' code.codeSystemName='LOINC' code.code='11411-6' constraints.validation.info='NeckSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cW-hbh7pEeGEaLkc3UAsAg" base_Class="_2QnbVhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='ENDOCRINE SYSTEM' constraints.validation.error='EndocrineSystemSectionCode' code.codeSystemName='LOINC' code.code='29307-6' constraints.validation.info='EndocrineSystemSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cXISZR7pEeGEaLkc3UAsAg" base_Class="_2QnbahSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='THORAX+LUNGS' constraints.validation.error='ThoraxLungsSectionCode' code.codeSystemName='LOINC' code.code='10207-9' constraints.validation.info='ThoraxLungsSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cXISdh7pEeGEaLkc3UAsAg" base_Class="_2Qth_BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='CHEST WALL' constraints.validation.error='ChestWallSectionCode' code.codeSystemName='LOINC' code.code='11392-8' constraints.validation.info='ChestWallSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cXSDcB7pEeGEaLkc3UAsAg" base_Class="_2QzomhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='BREASTS' constraints.validation.error='BreastSectionCode' code.codeSystemName='LOINC' code.code='10193-1'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cXbNVR7pEeGEaLkc3UAsAg" base_Class="_2QzoqRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='HEART' constraints.validation.error='HeartSectionCode' code.codeSystemName='LOINC' code.code='10200-4' constraints.validation.info='HeartSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cXk-UB7pEeGEaLkc3UAsAg" base_Class="_2Q5vOxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='RESPIRATORY SYSTEM' constraints.validation.error='RespiratorySystemSectionCode' code.codeSystemName='LOINC' code.code='11412-4' constraints.validation.info='RespiratorySystemSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cXk-YR7pEeGEaLkc3UAsAg" base_Class="_2RF8dhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='ABDOMEN' constraints.validation.error='AbdomenSectionCode' code.codeSystemName='LOINC' code.code='10191-5' constraints.validation.info='AbdomenSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cXuITh7pEeGEaLkc3UAsAg" base_Class="_2RMDEBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='HEMATOLOGIC+LYMPHATIC+IMMUNOLOGIC SYSTEM' constraints.validation.error='LymphaticSectionCode' code.codeSystemName='LOINC' code.code='11447-0' constraints.validation.info='LymphaticSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cX35Rx7pEeGEaLkc3UAsAg" base_Class="_2RMDJBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='VESSELS' constraints.validation.error='VesselsSectionCode' code.codeSystemName='LOINC' code.code='10208-7' constraints.validation.info='VesselsSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cYBqQB7pEeGEaLkc3UAsAg" base_Class="_2RSJuhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='MUSCULOSKELETAL SYSTEM' constraints.validation.error='MusculoskeletalSystemSectionCode' code.codeSystemName='LOINC' code.code='11410-8' constraints.validation.info='MusculoskeletalSystemSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cYBqUR7pEeGEaLkc3UAsAg" base_Class="_2RYQUhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='NEUROLOGIC SYSTEM' constraints.validation.error='NeurologicSystemSectionCode' code.codeSystemName='LOINC' code.code='10202-0' constraints.validation.info='NeurologicSystemSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cYK0Ph7pEeGEaLkc3UAsAg" base_Class="_2RYQZhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='GENITALIA' constraints.validation.error='GenitaliaSectionCode' code.codeSystemName='LOINC' code.code='11400-9' constraints.validation.info='GenitaliaSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cYUlOx7pEeGEaLkc3UAsAg" base_Class="_2ReW-hSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='RECTUM' constraints.validation.error='RectumSectionCode' code.codeSystemName='LOINC' code.code='10205-3' constraints.validation.info='RectumSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cYeWNB7pEeGEaLkc3UAsAg" base_Class="_2RkdlhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='EXTREMITIES' constraints.validation.error='ExtremitiesSectionCode' code.codeSystemName='LOINC' code.code='10196-4' constraints.validation.info='ExtremitiesSectionProblemEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cYeWRx7pEeGEaLkc3UAsAg" base_Class="_2RqkMBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.18' code.displayName='REVIEW OF SYSTEMS' constraints.validation.error='ReviewOfSystemsSectionTemplateId ReviewOfSystemsSectionCode' code.codeSystemName='LOINC' code.code='10187-3'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cYngJB7pEeGEaLkc3UAsAg" base_Class="_2RqkOxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.5' code.displayName='HOSPITAL COURSE' constraints.validation.error='HospitalCourseSectionTemplateId HospitalCourseSectionCode' code.codeSystemName='LOINC' code.code='8648-8'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cYxRIB7pEeGEaLkc3UAsAg" base_Class="_2Rwq0BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.9' code.displayName='ASSESSMENT AND PLAN' constraints.validation.error='AssessmentAndPlanSectionTemplateId AssessmentAndPlanSectionCode' code.codeSystemName='LOINC' code.code='51847-2' constraints.validation.info='AssessmentAndPlanSectionMedication AssessmentAndPlanSectionImmunization AssessmentAndPlanSectionEncounterEntry AssessmentAndPlanSectionProcedureEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cY6bJR7pEeGEaLkc3UAsAg" base_Class="_2R2xcBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.4.5' constraints.validation.error='ConditionEntryTemplateId ConditionEntryInformationSource ConditionEntryHasTextReference ConditionEntryCommentInversionInd ConditionEntryMoodCode ConditionEntryId ConditionEntryText ConditionEntryStatusCode ConditionEntryValue' code.codeSystemName='SNOMEDCT' constraints.validation.warning='ConditionEntryHasOnsetDate ConditionEntryHasResolutionDate ConditionEntryHasUnknownResolutionDate ConditionEntryCode ConditionEntryEffectiveTime' classCode='OBS' moodCode='EVN' constraints.validation.info='ConditionEntryContainsPatientAwareness ConditionEntryAgeObservation ConditionEntryCauseOfDeathObservation ConditionEntryProblemStatusObservation ConditionEntrySeverity ConditionEntryHealthStatusObservation ConditionEntryComment' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cZqpCR7pEeGEaLkc3UAsAg" base_Class="_2SC-sBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' templateId.root='2.16.840.1.113883.10.20.1.42' constraints.validation.error='FamilyHistoryDeathObservationTemplateId FamilyHistoryDeathObservationHasSubjectPatientRelationship FamilyHistoryDeathObservationRelationshipValueCode FamilyHistoryDeathObservationHasRelatedSubjectCode FamilyHistoryDeathObservationMoodCode FamilyHistoryDeathObservationId FamilyHistoryDeathObservationStatusCode' constraints.validation.warning='FamilyHistoryDeathObservationRelatedSubjectCodeValueSet FamilyHistoryDeathObservationHasRelatedSubjectSubject FamilyHistoryDeathObservationHasGenderCode FamilyHistoryDeathObservationRelatedSubjectBirthTime FamilyHistoryDeathObservationEffectiveTime' constraints.validation.info='FamilyHistoryDeathObservationProblemStatusObservation' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_caQe4B7pEeGEaLkc3UAsAg" base_Class="_2SVSlBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LanguageSpokenModeCode' constraints.validation.warning='LanguageSpokenNoProficiencyLevelCode' modeCode.codeSystem='2.16.840.1.113883.5.60' modeCode.codeSystemName='LanguageAbilityMode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_caaP4B7pEeGEaLkc3UAsAg" base_Class="_2Shf4BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationNormalDoseNoSubordinateSubstanceAdministration'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_caaP4R7pEeGEaLkc3UAsAg" base_Class="_2Shf6hSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationSplitDoseSplitDosingSubstanceAdministration'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_caaP4h7pEeGEaLkc3UAsAg" base_Generalization="_2SnmfBSVEeGGzu7fmW9pXw"/>
  <Ecore:EClass xmi:id="_caaP5R7pEeGEaLkc3UAsAg" base_Class="_2SnmcxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='null' constraints.validation.error='MedicationTaperedDoseTemplateId MedicationTaperedDoseTaperedDosingSubstanceAdministration'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_caaP5h7pEeGEaLkc3UAsAg" base_Class="_2SnmfRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.96' constraints.validation.error='MedicationConditionalDoseMoodCode MedicationConditionalDoseInformationSource MedicationConditionalDoseHasReasonProblem MedicationConditionalDoseHasProduct MedicationConditionalDoseHasDosing MedicationConditionalDoseDosingRelationship MedicationConditionalDoseHasDescriptionNoMedNotKnown MedicationConditionalDoseReasonClassMood MedicationConditionalDoseHasProductEntry MedicationConditionalDoseHasIntructionsInversion MedicationConditionalDoseProductName MedicationConditionalDoseHasSupplyEntryInversion MedicationConditionalDoseConditionalDosingSubstanceAdministration MedicationConditionalDoseId MedicationActivityCode MedicationConditionalDoseStatusCode MedicationConditionalDoseEffectiveTime' code.codeSystemName='SNOMEDCT' routeCode.codeSystem='2.16.840.1.113883.5.112' constraints.validation.warning='MedicationConditionalDoseHasDoseQuantityOrRateQuantity MedicationConditionalDoseProductStrength MedicationConditionalDoseHasFillNumber MedicationConditionalDoseRouteCode MedicationConditionalDoseDoseQuantity MedicationConditionalDoseRateQuantity' classCode='SBADM' routeCode.codeSystemName='HL7 RouteOfAdministration' constraints.validation.info='MedicationConditionalDoseHasConsents MedicationConditionalDoseHasPreconditionCriterion MedicationConditionalDoseHasReason MedicationConditionalDosePreconditionReference MedicationConditionalDoseApproachSiteCode MedicationConditionalDoseMaxDoseQuantity MedicationConditionalDoseMedicationSeriesNumberObservation MedicationConditionalDoseMedicationStatusObservation MedicationConditionalDoseReactionObservation MedicationConditionalDoseProductInstance'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cbTAxh7pEeGEaLkc3UAsAg" base_Class="_2TAA8RSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.96' constraints.validation.error='MedicationCombinationMedicationMoodCode MedicationCombinationMedicationInformationSource MedicationCombinationMedicationHasReasonProblem MedicationCombinationMedicationHasProduct MedicationCombinationMedicationHasDosing MedicationCombinationMedicationDosingRelationship MedicationCombinationMedicationHasDescriptionNoMedNotKnown MedicationCombinationMedicationReasonClassMood MedicationCombinationMedicationHasProductEntry MedicationCombinationMedicationHasIntructionsInversion MedicationCombinationMedicationProductName MedicationCombinationMedicationHasSupplyEntryInversion MedicationCombinationMedicationCombinationMedicationSubstanceAdministration MedicationCombinationMedicationId MedicationActivityCode MedicationCombinationMedicationStatusCode MedicationCombinationMedicationEffectiveTime' code.codeSystemName='SNOMEDCT' routeCode.codeSystem='2.16.840.1.113883.5.112' constraints.validation.warning='MedicationCombinationMedicationHasDoseQuantityOrRateQuantity MedicationCombinationMedicationProductStrength MedicationCombinationMedicationHasFillNumber MedicationCombinationMedicationRouteCode MedicationCombinationMedicationDoseQuantity MedicationCombinationMedicationRateQuantity' classCode='SBADM' routeCode.codeSystemName='HL7 RouteOfAdministration' constraints.validation.info='MedicationCombinationMedicationHasConsents MedicationCombinationMedicationHasPreconditionCriterion MedicationCombinationMedicationHasReason MedicationCombinationMedicationPreconditionReference MedicationCombinationMedicationApproachSiteCode MedicationCombinationMedicationMaxDoseQuantity MedicationCombinationMedicationMedicationSeriesNumberObservation MedicationCombinationMedicationMedicationStatusObservation MedicationCombinationMedicationReactionObservation MedicationCombinationMedicationProductInstance'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ccMYpx7pEeGEaLkc3UAsAg" base_Class="_2TYbcBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_ccWJkB7pEeGEaLkc3UAsAg" base_Generalization="_2T9DPxSVEeGGzu7fmW9pXw"/>
  <Ecore:EClass xmi:id="_ccWJkx7pEeGEaLkc3UAsAg" base_Class="_2TeiIRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.88.11.62.1' constraints.validation.error='UnstructuredDocumentTemplateId UnstructuredDocumentTypeIdFixed UnstructuredDocumentHasOneRecordTarget UnstructuredDocumentHasAssignedAuthor UnstructuredDocumentPatientRoleId UnstructuredDocumentHasPatientRoleAddress UnstructuredDocumentHasPatientName UnstructuredDocumentHasPatientGenderCode UnstructuredDocumentHasPatientBirthYear UnstructuredDocumentHasScanningDevice UnstructuredDocumentHasScanDataEnterer UnstructuredDocumentHasRepresentedCustodianOrganizationName UnstructuredDocumentHasRepresentedCustodianOrganizationAddr UnstructuredDocumentLegalAuthenticatorAssignedEntityId UnstructuredDocumentHasNonXMLBody UnstructuredDocumentHasNonXMLBodyBinaryText UnstructuredDocumentHasNonXMLBodyTextMediaType UnstructuredDocumentHasNonXMLBodyTextRepresentation UnstructuredDocumentOnePatientPerDocument UnstructuredDocumentCode UnstructuredDocumentConfidentialityCode UnstructuredDocumentEffectiveTime UnstructuredDocumentId UnstructuredDocumentLanguageCode UnstructuredDocumentTypeId' constraints.validation.warning='UnstructuredDocumentHasOriginalAuthor UnstructuredDocumentNoStructuredData UnstructuredDocumentTitle'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cc7_dh7pEeGEaLkc3UAsAg" base_Class="_2TkovBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.warning='ScanOriginalAuthorHasAssignedAuthorId ScanOriginalAuthorHasAssignedAuthorRepresentedOrganizationId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cdFwcB7pEeGEaLkc3UAsAg" base_Class="_2Tko1hSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ScanningDeviceTimeEqualsDocumentEffectiveTime ScanningDeviceHasAssignedAuthorId ScanningDeviceHasAssignedAuthoringDeviceCode ScanningDeviceHasDeviceManufacturerModelName ScanningDeviceHasDeviceSoftwareName ScanningDeviceHasAssignedAuthorRepresentedOrganizationId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cdPhcB7pEeGEaLkc3UAsAg" base_Class="_2TqvZBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ScanDataEntererTimeEqualsDocumentEffectiveTime ScanDataEntererHasAssignedEntityId ScanDataEntererTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cdPhdR7pEeGEaLkc3UAsAg" base_Class="_2T9DQBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.23' constraints.validation.error='MedicationInformationTemplateId MedicationInformationHasMaterial MedicationInformationHasMaterialCode MedicationInformationHasMaterialCodeOriginalText MedicationInformationCodedProductName MedicationInformationCodedProductVocab MedicationInformationCodedBrandName MedicationInformationCodedBrandNameVocab MedicationInformationFreeTextProductName MedicationInformationFreeTextBrandName' constraints.validation.warning='MedicationInformationHasMaterialCodeVocab MedicationInformationShouldHaveMaterialManufacturer' constraints.validation.info='MedicationInformationHasMaterialName MedicationInformationMayHaveMaterialManufacturer MedicationInformationCodedIngredientVocab MedicationInformationId'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_cdicYh7pEeGEaLkc3UAsAg" base_Generalization="_2Uhq_BSVEeGGzu7fmW9pXw"/>
  <Ecore:EClass xmi:id="_cdrmUh7pEeGEaLkc3UAsAg" base_Class="_2UJQeBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.19.1' constraints.validation.error='UnstructuredOrScannedDocumentTemplateId UnstructuredOrScannedDocumentTypeIdFixed UnstructuredOrScannedDocumentHasOneRecordTarget UnstructuredOrScannedDocumentHasAssignedAuthor UnstructuredOrScannedDocumentPatientRoleId UnstructuredOrScannedDocumentHasPatientRoleAddress UnstructuredOrScannedDocumentHasPatientName UnstructuredOrScannedDocumentHasPatientGenderCode UnstructuredOrScannedDocumentHasPatientBirthYear UnstructuredOrScannedDocumentHasScanningDevice UnstructuredOrScannedDocumentHasScanDataEnterer UnstructuredOrScannedDocumentLegalAuthenticatorAssignedEntityId UnstructuredOrScannedDocumentHasNonXMLBody UnstructuredOrScannedDocumentHasNonXMLBodyBinaryText UnstructuredOrScannedDocumentHasNonXMLBodyTextMediaType UnstructuredOrScannedDocumentHasNonXMLBodyTextRepresentation UnstructuredOrScannedDocumentOnePatientPerDocument UnstructuredOrScannedDocumentPatientRoleHasId UnstructuredOrScannedDocumentAssignedAuthorHasAddr UnstructuredOrScannedDocumentAssignedAuthorHasTelecom UnstructuredOrScannedDocumentHasRepresentedCustodianOrganization UnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationId UnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationName UnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationTelecom UnstructuredOrScannedDocumentHasRepresentedCustodianOrganizationAddr UnstructuredOrScannedDocumentHasNonXMLBodyText UnstructuredOrScannedDocumentHasTextReferenceOrRepresentation UnstructuredOrScannedDocumentHasTextMediaTypeValueSet UnstructuredOrScannedDocumentCode UnstructuredOrScannedDocumentEffectiveTime UnstructuredOrScannedDocumentId UnstructuredOrScannedDocumentLanguageCode UnstructuredOrScannedDocumentTypeId' constraints.validation.warning='UnstructuredOrScannedDocumentHasOriginalAuthor UnstructuredOrScannedDocumentNoStructuredData UnstructuredOrScannedDocumentTitle'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_cek-MB7pEeGEaLkc3UAsAg" base_Generalization="_2UnxkBSVEeGGzu7fmW9pXw"/>
  <Ecore:EClass xmi:id="_cek-Mx7pEeGEaLkc3UAsAg" base_Class="_2Uhq_hSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.3.88.11.48.1' constraints.validation.error='ReferralSummaryTemplateId ReferralSummaryMedicalSummaryProblemConcernEntry ReferralSummaryMedicalSummaryAllergyConcernEntry ReferralSummaryMedicalSummaryMedications GeneralHeaderConstraintsCode' code.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_ceuvMB7pEeGEaLkc3UAsAg" base_Generalization="_2U6FfBSVEeGGzu7fmW9pXw"/>
  <Ecore:EClass xmi:id="_ceuvMx7pEeGEaLkc3UAsAg" base_Class="_2UnxkRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.1.8' constraints.validation.error='DischargeSummaryTemplateId DischargeSummaryMedicalSummaryProblemConcernEntry DischargeSummaryMedicalSummaryAllergyConcernEntry DischargeSummaryMedicalSummaryMedications GeneralHeaderConstraintsCode DischargeSummaryHospitalAdmissionDiagnosisSection DischargeSummaryAllergiesReactionsSection DischargeSummaryDischargeDiagnosisSection DischargeSummaryHospitalDischargeMedicationsSection DischargeSummaryHospitalCourseSection DischargeSummaryPlanOfCareSection DischargeSummaryHistoryOfPastIllnessSection' code.codeSystemName='LOINC' constraints.validation.warning='DischargeSummaryAdmissionMedicationHistorySection DischargeSummaryHistoryOfPresentIllness DischargeSummaryMedicalEquipmentSection DischargeSummaryMedicationsAdministeredSection DischargeSummaryVitalSignsSection' constraints.validation.info='DischargeSummaryAdvanceDirectivesSection DischargeSummaryDischargeDiet DischargeSummaryFunctionalStatusSection DischargeSummaryPhysicalExamSection DischargeSummaryReviewOfSystemsSection'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cfeWIB7pEeGEaLkc3UAsAg" base_Class="_2Uz-4xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.33' code.displayName='Discharge Diet' constraints.validation.error='DischargeDietSectionTemplateId DischargeDietSectionCode' code.codeSystemName='LOINC' code.code='42344-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cfoHEh7pEeGEaLkc3UAsAg" base_Class="_sHrUoBUSEeG6PvUxSTZnaw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.19' constraints.validation.error='IndicationTemplateId IndicationClassCode IndicationCode IndicationId IndicationMoodCode IndicationStatusCode' code.codeSystemName='SNOMEDCT' classCode='OBS' constraints.validation.warning='IndicationEffectiveTime IndicationValue' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cf7CCx7pEeGEaLkc3UAsAg" base_Class="_VBXq8BUTEeG6PvUxSTZnaw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.24' constraints.validation.error='DrugVehicleTemplateId DrugVehiclePlayingEntityCode DrugVehicleClassCode DrugVehicleCode' code.codeSystemName='SNOMEDCT' classCode='MANU' code.code='412307009'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cgN88B7pEeGEaLkc3UAsAg" base_Class="_DpoGkBUUEeG6PvUxSTZnaw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.18' constraints.validation.error='MedicationDispenseTemplateId MedicationDispenseClassCode MedicationDispenseId MedicationDispenseMoodCode MedicationDispenseStatusCode MedicationDispenseAssignedEntity' classCode='SPLY' constraints.validation.warning='MedicationDispenseEffectiveTime MedicationDispenseRepeatNumber' constraints.validation.info='MedicationDispenseMedicationSupplyOrder' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cgg34B7pEeGEaLkc3UAsAg" base_Class="_chEhQBUUEeG6PvUxSTZnaw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.25' constraints.validation.error='PreconditionForSubstanceAdministrationTemplateId' constraints.validation.warning='PreconditionForSubstanceAdministrationCriterionCode PreconditionForSubstanceAdministrationCriterionValue' constraints.validation.info='PreconditionForSubstanceAdministrationCriterionText'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cgqo4B7pEeGEaLkc3UAsAg" base_Class="_PZBdMBUlEeGvPruliC3crg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.60' constraints.validation.error='PolicyActivityTemplateId PolicyActivityAuthorizationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cgqo4x7pEeGEaLkc3UAsAg" base_Class="_Cg3pkBUmEeGvPruliC3crg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.60' constraints.validation.error='CoverageActivityTemplateId CoverageActivityPolicyActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cg0Z4B7pEeGEaLkc3UAsAg" base_Class="_5Ha7ABUyEeGbmN_W114JUw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.4' constraints.validation.error='ProblemObservationTemplateId' constraints.validation.info='ProblemObservationAgeObservation ProblemObservationHealthStatusObservation ProblemObservationProblemStatus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cg0Z8R7pEeGEaLkc3UAsAg" base_Class="_SjN_8BUzEeGbmN_W114JUw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.6' constraints.validation.error='ProblemStatusTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_chQeyR7pEeGEaLkc3UAsAg" base_Class="__qYdcBVNEeGbmN_W114JUw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.5.8' templateId.root='2.16.840.1.113883.10.20.22.4.53' constraints.validation.error='ImmunizationRefusalReasonTemplateId ImmunizationRefusalReasonClassCode ImmunizationRefusalReasonCode ImmunizationRefusalReasonId ImmunizationRefusalReasonMoodCode ImmunizationRefusalReasonStatusCode' code.codeSystemName='ActReason' classCode='OBS' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_chkAyR7pEeGEaLkc3UAsAg" base_Class="_daTqABVOEeGbmN_W114JUw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.54' constraints.validation.error='ImmunizationMedicationInformationTemplateId ImmunizationMedicationInformationClassCode' classCode='MANU' constraints.validation.info='ImmunizationMedicationInformationId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ch27sR7pEeGEaLkc3UAsAg" base_Class="_bGzYgBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.6' code.displayName='Allergies, adverse reactions, alerts' constraints.validation.error='AllergiesSectionEntriesOptionalTemplateId AllergiesSectionEntriesOptionalCode AllergiesSectionEntriesOptionalTitle AllergiesSectionEntriesOptionalText' code.codeSystemName='LOINC' code.code='48765-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ciAssx7pEeGEaLkc3UAsAg" base_Class="_iAoXEBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.2.1' constraints.validation.error='MedicationsSectionEntriesOptionalTemplateId MedicationsSectionEntriesOptionalHasMedicationOrSupplyActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ciAsth7pEeGEaLkc3UAsAg" base_Class="_naxrkBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.2.5' constraints.validation.error='ProblemSectionEntriesOptionalTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ciJ2oh7pEeGEaLkc3UAsAg" base_Class="_s9Ig4BVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.7' code.displayName='History of procedures' constraints.validation.error='ProceduresSectionEntriesOptionalTemplateId ProceduresSectionEntriesOptionalCode ProceduresSectionEntriesOptionalText' code.codeSystemName='LOINC' code.code='47519-4' constraints.validation.info='ProceduresSectionEntriesOptionalProcedureActivityProcedure ProceduresSectionEntriesOptionalProcedureAcivityObservation ProceduresSectionEntriesOptionalProcedureActivityAct'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ciTnoB7pEeGEaLkc3UAsAg" base_Class="_xGqiEBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Relevant diagnostic tests and/or laboratory data' templateId.root='2.16.840.1.113883.10.20.22.2.3' constraints.validation.error='ResultsSectionEntriesOptionalTemplateId ResultsSectionEntriesOptionalCode ResultsSectionEntriesOptionalTitle ResultsSectionEntriesOptionalText' code.codeSystemName='LOINC' constraints.validation.warning='ResultsSectionEntriesOptionalResultOrganizer' code.code='30954-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cicxkh7pEeGEaLkc3UAsAg" base_Class="_1RZdIBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.2.21' constraints.validation.error='AdvanceDirectivesSectionEntriesOptionalTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cicxlR7pEeGEaLkc3UAsAg" base_Class="_4yj2wBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.2.22' constraints.validation.error='EncountersSectionEntriesOptionalTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cicxmB7pEeGEaLkc3UAsAg" base_Class="_EuPloBVeEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.2' constraints.validation.error='ImmunizationsSectionEntriesOptionalTemplateId ImmunizationsSectionEntriesOptionalCode ImmunizationsSectionEntriesOptionalTitle ImmunizationsSectionEntriesOptionalText' code.codeSystemName='LOINC' code.code='11369-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ciwTkR7pEeGEaLkc3UAsAg" base_Class="_bRH8sBVeEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.4' constraints.validation.error='VitalSignsSectionEntriesOptionalTemplateId VitalSignsSectionEntriesOptionalCode VitalSignsSectionEntriesOptionalText VitalSignsSectionEntriesOptionalTitle VitalSignsSectionEntriesOptionalVitalSignsOrganizer' code.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ci5dgh7pEeGEaLkc3UAsAg" base_Class="_Aj7JkBg4EeGs5a462vYX5Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.13' constraints.validation.error='ProcedureAcivityObservationTemplateId ProcedureAcivityObservationClassCode ProcedureAcivityObservationId ProcedureAcivityObservationCode ProcedureAcivityObservationStatusCode ProcedureAcivityObservationValue' constraints.validation.warning='ProcedureAcivityObservationEffectiveTime ProcedureAcivityObservationTargetSiteCode' classCode='OBS' targetSiteCode.codeSystem='2.16.840.1.113883.6.96' moodCode.codeSystem='2.16.840.1.113883.5.1001' constraints.validation.info='ProcedureAcivityObservationPriorityCode ProcedureAcivityObservationMethodCode ProcedureAcivityObservationProcedureEncounter ProcedureAcivityObservationInstructions ProcedureAcivityObservationIndication ProcedureAcivityObservationMedicationActivity' moodCode.codeSystemName='HL7ActMood' targetSiteCode.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cjWJdB7pEeGEaLkc3UAsAg" base_Class="_awdH4Bg4EeGs5a462vYX5Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.12' constraints.validation.error='ProcedureActivityActTemplateId ProcedureActivityActClassCode ProcedureActivityActId ProcedureActivityActCode ProcedureActivityActStatusCode' classCode='ACT' constraints.validation.warning='ProcedureActivityActEffectiveTime' moodCode.codeSystem='2.16.840.1.113883.5.1001' constraints.validation.info='ProcedureActivityActPriorityCode ProcedureActivityActProcedureEncounter ProcedureActivityActInstructions ProcedureActivityActIndication ProcedureActivityActMedicationActivity' moodCode.codeSystemName='HL7ActMood'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cjy1YB7pEeGEaLkc3UAsAg" base_Class="_XUoXwBnZEeGs5a462vYX5Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.1.19' constraints.validation.error='AuthorizationActivityTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cjy1ah7pEeGEaLkc3UAsAg" base_Class="_j3aTQBrTEeGo461UQq-B1g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.17' constraints.validation.error='MedicationSupplyOrderTemplateId MedicationSupplyOrderClassCode MedicationSupplyOrderMoodCode MedicationSupplyOrderStatusCode MedicationSupplyOrderId' classCode='SPLY' constraints.validation.warning='MedicationSupplyOrderEffectiveTime MedicationSupplyOrderQuantity MedicationSupplyOrderRepeatNumber' constraints.validation.info='MedicationSupplyOrderInstructions' moodCode='INT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_cksNQB7pEeGEaLkc3UAsAg" base_Class="_2NufahSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ConsolProcedureHasCodeOriginalText' constraints.validation.warning='ConsolProcedurePerformerAssignedEntity ConsolProcedureCode ConsolProcedureTargetSiteCode' targetSiteCode.codeSystem='2.16.840.1.113883.6.96' targetSiteCode.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ck1XOR7pEeGEaLkc3UAsAg" base_Class="_JIc0oBxEEeGIELeDlfT77A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='null' constraints.validation.error='ProcedureSpecimenTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ck_IMB7pEeGEaLkc3UAsAg" base_Class="_qeLqQBxEEeGIELeDlfT77A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureEncounterClassCode ProcedureEncounterMoodCode ProcedureEncounterId' classCode='ENC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_clb0Nx7pEeGEaLkc3UAsAg" base_Class="_vBswQBtpEeGT89b80j3MTg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.15.3.1' constraints.validation.error='EstimatedDateOfDeliveryTemplateId EstimatedDateOfDeliveryClassCode EstimatedDateOfDeliveryCode EstimatedDateOfDeliveryMoodCode EstimatedDateOfDeliveryStatusCode EstimatedDateOfDeliveryValue' code.codeSystemName='LOINC' classCode='OBS' code.code='11778-8' moodCode='EVN'</annotation>
  </Ecore:EClass>
</xmi:XMI>
