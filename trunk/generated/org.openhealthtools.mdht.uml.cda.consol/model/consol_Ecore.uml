<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_2B30sBSVEeGGzu7fmW9pXw" name="consol">
    <packageImport xmi:id="_PKZrwE3jEeGVaJScxwOy7g">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_2DNRcBSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraints">
      <ownedComment xmi:id="_2DNRcRSVEeGGzu7fmW9pXw" annotatedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <body>This section describes constraints that apply to the header for all documents within the scope of this implementation guide. Header constraints specific to each document type are described in the appropriate document-specific section below

Document Type Codes
CDA R2 states that LOINC is the preferred vocabulary for document type codes, which specify the type of document being exchanged (e.g., History and Physical). Each document type in this guide recommends a single preferred clinicalDocument/code, with further specification provided by author or performer, setting, or specialty</body>
      </ownedComment>
      <ownedRule xmi:id="_Fz5m8FcZEeGCdLgBm6VHOQ" name="GeneralHeaderConstraintsUSRealmAddress" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_eXOy0FcZEeGCdLgBm6VHOQ">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ms0mkFcZEeGCdLgBm6VHOQ">
          <language>OCL</language>
          <body>datatypes::AD.allInstances()->reject(&#xD;&#xA;    addr : datatypes::AD | &#xD;&#xA;    not addr.use->isEmpty() and&#xD;&#xA;    addr.use->forAll(&#xD;&#xA;        use : vocab::PostalAddressUse |&#xD;&#xA;        use=vocab::PostalAddressUse::BAD or&#xD;&#xA;        use=vocab::PostalAddressUse::DIR or&#xD;&#xA;        use=vocab::PostalAddressUse::H or&#xD;&#xA;        use=vocab::PostalAddressUse::HP or&#xD;&#xA;        use=vocab::PostalAddressUse::HV or&#xD;&#xA;        use=vocab::PostalAddressUse::PHYS or&#xD;&#xA;        use=vocab::PostalAddressUse::PST or&#xD;&#xA;        use=vocab::PostalAddressUse::PUB or&#xD;&#xA;        use=vocab::PostalAddressUse::TMP or&#xD;&#xA;        use=vocab::PostalAddressUse::WP&#xD;&#xA;    ) and&#xD;&#xA;    addr.streetAddressLine->size() >= 1 and&#xD;&#xA;    addr.streetAddressLine->size() &lt;= 4 and&#xD;&#xA;    addr.city->size() = 1 and&#xD;&#xA;    addr.country->size() &lt;= 1 and&#xD;&#xA;    (&#xD;&#xA;        (&#xD;&#xA;            addr.country->size() = 0 or&#xD;&#xA;            (&#xD;&#xA;                addr.country->size() = 1 and addr.country->asSequence()->first().getText()='US'&#xD;&#xA;            )&#xD;&#xA;        ) implies addr.state->size() = 1 and addr.postalCode->size() = 1&#xD;&#xA;    )&#xD;&#xA;)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WnwW8FcfEeGCdLgBm6VHOQ" name="GeneralHeaderConstraintsUSRealmPatientName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_klYIYFcfEeGCdLgBm6VHOQ">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_c0bUkFcfEeGCdLgBm6VHOQ">
          <language>OCL</language>
          <body>datatypes::PN.allInstances()->reject(&#xD;&#xA;    name : datatypes::PN |&#xD;&#xA;    name.use->forAll(&#xD;&#xA;        use : vocab::EntityNameUse |&#xD;&#xA;        use=vocab::EntityNameUse::A or&#xD;&#xA;        use=vocab::EntityNameUse::ABC or&#xD;&#xA;        use=vocab::EntityNameUse::ASGN or&#xD;&#xA;        use=vocab::EntityNameUse::C or&#xD;&#xA;        use=vocab::EntityNameUse::I or&#xD;&#xA;        use=vocab::EntityNameUse::IDE or&#xD;&#xA;        use=vocab::EntityNameUse::L or&#xD;&#xA;        use=vocab::EntityNameUse::P or&#xD;&#xA;        use=vocab::EntityNameUse::PHON or&#xD;&#xA;        use=vocab::EntityNameUse::R or&#xD;&#xA;        use=vocab::EntityNameUse::SNDX or&#xD;&#xA;        use=vocab::EntityNameUse::SRCH or&#xD;&#xA;        use=vocab::EntityNameUse::SYL&#xD;&#xA;    ) and&#xD;&#xA;    name.prefix->forAll(&#xD;&#xA;        prefix : datatypes::ENXP |&#xD;&#xA;        prefix.qualifier->forAll(&#xD;&#xA;            qualifier : vocab::EntityNamePartQualifier |&#xD;&#xA;            qualifier=vocab::EntityNamePartQualifier::AC or&#xD;&#xA;            qualifier=vocab::EntityNamePartQualifier::AD or&#xD;&#xA;            qualifier=vocab::EntityNamePartQualifier::BR or&#xD;&#xA;            qualifier=vocab::EntityNamePartQualifier::CL or&#xD;&#xA;            qualifier=vocab::EntityNamePartQualifier::IN or&#xD;&#xA;            qualifier=vocab::EntityNamePartQualifier::NB or&#xD;&#xA;            qualifier=vocab::EntityNamePartQualifier::PR or&#xD;&#xA;            qualifier=vocab::EntityNamePartQualifier::SP or&#xD;&#xA;            qualifier=vocab::EntityNamePartQualifier::TITLE or&#xD;&#xA;            qualifier=vocab::EntityNamePartQualifier::VV&#xD;&#xA;        )&#xD;&#xA;    ) and&#xD;&#xA;    name.given->size() >= 1 and&#xD;&#xA;    name.given->forAll(&#xD;&#xA;        given : datatypes::ENXP |&#xD;&#xA;        given.qualifier->forAll(&#xD;&#xA;            qualifier : vocab::EntityNamePartQualifier |&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::AC or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::AD or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::BR or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::CL or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::IN or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::NB or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::PR or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::SP or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::TITLE or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::VV&#xD;&#xA;        )&#xD;&#xA;    ) and&#xD;&#xA;    name.family->size() = 1 and&#xD;&#xA;    name.family->forAll(&#xD;&#xA;        family : datatypes::ENXP |&#xD;&#xA;        family.qualifier->forAll(&#xD;&#xA;            qualifier : vocab::EntityNamePartQualifier |&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::AC or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::AD or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::BR or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::CL or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::IN or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::NB or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::PR or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::SP or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::TITLE or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::VV&#xD;&#xA;        )&#xD;&#xA;    ) and&#xD;&#xA;    name.suffix->size() &lt;= 1 and&#xD;&#xA;    name.suffix->forAll(&#xD;&#xA;        suffix : datatypes::ENXP |&#xD;&#xA;        suffix.qualifier->forAll(&#xD;&#xA;            qualifier : vocab::EntityNamePartQualifier |&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::AC or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::AD or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::BR or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::CL or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::IN or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::NB or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::PR or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::SP or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::TITLE or&#xD;&#xA;&#x9;    qualifier=vocab::EntityNamePartQualifier::VV&#xD;&#xA;        )&#xD;&#xA;    )&#xD;&#xA;)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o73G8GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o73G8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o78mgGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRealmCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o79NkGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.realmCode->isEmpty() or self.realmCode->exists(element | element.isNullFlavorUndefined())) implies (self.realmCode->size() = 1 and self.realmCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = element.oclAsType(datatypes::CS) in &#xD;&#xA;value.code = 'US'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o7-bsGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsTypeId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o7-bsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.typeId.oclIsUndefined() or self.typeId.isNullFlavorUndefined()) implies (not self.typeId.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o7_p0GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o7_p0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8A38GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8A38WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8CGEGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsTitle" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8CGEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8DUMGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsEffectiveTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8DUMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8FJYGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsConfidentialityCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8FJYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.confidentialityCode.oclIsUndefined() or self.confidentialityCode.isNullFlavorUndefined()) implies (not self.confidentialityCode.oclIsUndefined() and self.confidentialityCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.confidentialityCode.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.25' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8HloGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsLanguageCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8HloWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.languageCode.oclIsUndefined() or self.languageCode.isNullFlavorUndefined()) implies (not self.languageCode.oclIsUndefined() and self.languageCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.languageCode.oclAsType(datatypes::CS) in (&#xD;&#xA;not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8Ja0GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsSetId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8Ja0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.setId.oclIsUndefined() or self.setId.isNullFlavorUndefined()) implies (not self.setId.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8Ko8GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsVersionNumber" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8Ko8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.versionNumber.oclIsUndefined() or self.versionNumber.isNullFlavorUndefined()) implies (not self.versionNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o9hT0WknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthor" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o9hT0mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o9jJAGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsDataEnterer" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o9jJAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.dataEnterer->one(dataEnterer : cda::DataEnterer | not dataEnterer.oclIsUndefined() and dataEnterer.oclIsKindOf(cda::DataEnterer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o9kXIGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCustodian" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o9kXIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.custodian->one(custodian : cda::Custodian | not custodian.oclIsUndefined() and custodian.oclIsKindOf(cda::Custodian))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o9mMUGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformationRecipient" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o9mMUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.informationRecipient->exists(informationRecipient : cda::InformationRecipient | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(cda::InformationRecipient))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o9nacGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsLegalAuthenticator" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o9nacWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.legalAuthenticator->one(legalAuthenticator : cda::LegalAuthenticator | not legalAuthenticator.oclIsUndefined() and legalAuthenticator.oclIsKindOf(cda::LegalAuthenticator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o9p2sGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthenticator" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o9p2sWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.authenticator->exists(authenticator : cda::Authenticator | not authenticator.oclIsUndefined() and authenticator.oclIsKindOf(cda::Authenticator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o9rE0GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTarget" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o9rE0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.recordTarget->exists(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o9s6AGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsComponentOf" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o9s6AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQ0qUGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformant" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQ0qUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.informant->one(informant : cda::Informant12 | not informant.oclIsUndefined() and informant.oclIsKindOf(cda::Informant12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQ7YAGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsSupportParticipant" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQ7YAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQ8mIGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInFulfillmentOf" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQ8mIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.inFulfillmentOf->exists(inFulfillmentOf : cda::InFulfillmentOf | not inFulfillmentOf.oclIsUndefined() and inFulfillmentOf.oclIsKindOf(cda::InFulfillmentOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbVRMGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbVRMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.author->exists(not oclIsUndefined()) and self.author.assignedAuthor->exists(not oclIsUndefined()) and self.author.assignedAuthor.assignedAuthoringDevice->exists(not oclIsUndefined()) then self.author.assignedAuthor.assignedAuthoringDevice->forAll((manufacturerModelName.oclIsUndefined() or manufacturerModelName.isNullFlavorUndefined()) implies (not manufacturerModelName.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbV4QGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbV4QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.author->exists(not oclIsUndefined()) and self.author.assignedAuthor->exists(not oclIsUndefined()) and self.author.assignedAuthor.assignedAuthoringDevice->exists(not oclIsUndefined()) then self.author.assignedAuthor.assignedAuthoringDevice->forAll((softwareName.oclIsUndefined() or softwareName.isNullFlavorUndefined()) implies (not softwareName.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbXGYGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthorAssignedAuthorPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbXGYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.author->exists(not oclIsUndefined()) and self.author.assignedAuthor->exists(not oclIsUndefined()) and self.author.assignedAuthor.assignedPerson->exists(not oclIsUndefined()) then self.author.assignedAuthor.assignedPerson->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbXtcGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthorAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbXtcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.author->exists(not oclIsUndefined()) and self.author.assignedAuthor->exists(not oclIsUndefined()) then self.author.assignedAuthor->forAll(assignedPerson.oclIsUndefined() xor assignedAuthoringDevice.oclIsUndefined()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbY7kGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbY7kWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.author->exists(not oclIsUndefined()) and self.author.assignedAuthor->exists(not oclIsUndefined()) then self.author.assignedAuthor->forAll(id->exists( root='2.16.840.1.113883.4.6' )) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbZioGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthorAssignedAuthorAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbZioWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.author->exists(not oclIsUndefined()) and self.author.assignedAuthor->exists(not oclIsUndefined()) then self.author.assignedAuthor->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbaJsGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthorAssignedAuthorCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbaJsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.author->exists(not oclIsUndefined()) and self.author.assignedAuthor->exists(not oclIsUndefined()) then self.author.assignedAuthor->forAll((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbawwGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthorAssignedAuthorId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbawwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.author->exists(not oclIsUndefined()) and self.author.assignedAuthor->exists(not oclIsUndefined()) then self.author.assignedAuthor->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbbX0GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthorAssignedAuthorTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbbX0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.author->exists(not oclIsUndefined()) and self.author.assignedAuthor->exists(not oclIsUndefined()) then self.author.assignedAuthor->forAll((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbcl8GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthorAssignedAuthor" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbcl8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.author->exists(not oclIsUndefined()) then self.author->forAll(assignedAuthor->one(assignedAuthor : cda::AssignedAuthor | not assignedAuthor.oclIsUndefined() and assignedAuthor.oclIsKindOf(cda::AssignedAuthor))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbfCMGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsDataEntererAssignedEntityPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbfCMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.dataEnterer->exists(not oclIsUndefined()) and self.dataEnterer.assignedEntity->exists(not oclIsUndefined()) and self.dataEnterer.assignedEntity.assignedPerson->exists(not oclIsUndefined()) then self.dataEnterer.assignedEntity.assignedPerson->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbfpQGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbfpQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.dataEnterer->exists(not oclIsUndefined()) and self.dataEnterer.assignedEntity->exists(not oclIsUndefined()) then self.dataEnterer.assignedEntity->forAll(id->exists( root='2.16.840.1.113883.4.6' )) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbg3YGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsDataEntererAssignedEntityAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbg3YWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.dataEnterer->exists(not oclIsUndefined()) and self.dataEnterer.assignedEntity->exists(not oclIsUndefined()) then self.dataEnterer.assignedEntity->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbhecGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsDataEntererAssignedEntityCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbhecWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.dataEnterer->exists(not oclIsUndefined()) and self.dataEnterer.assignedEntity->exists(not oclIsUndefined()) then self.dataEnterer.assignedEntity->forAll((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.101'))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbiFgGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsDataEntererAssignedEntityId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbiFgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.dataEnterer->exists(not oclIsUndefined()) and self.dataEnterer.assignedEntity->exists(not oclIsUndefined()) then self.dataEnterer.assignedEntity->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbjToGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsDataEntererAssignedEntityTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbjToWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.dataEnterer->exists(not oclIsUndefined()) and self.dataEnterer.assignedEntity->exists(not oclIsUndefined()) then self.dataEnterer.assignedEntity->forAll((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbj6sGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbj6sWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.dataEnterer->exists(not oclIsUndefined()) and self.dataEnterer.assignedEntity->exists(not oclIsUndefined()) then self.dataEnterer.assignedEntity->forAll(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(cda::Person))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pblI0GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsDataEntererAssignedEntity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pblI0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.dataEnterer->exists(not oclIsUndefined()) then self.dataEnterer->forAll(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pboMIGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pboMIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.custodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian.representedCustodianOrganization->exists(not oclIsUndefined()) then self.custodian.assignedCustodian.representedCustodianOrganization->forAll(id->exists( root='2.16.840.1.113883.4.6' )) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbpaQGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbpaQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.custodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian.representedCustodianOrganization->exists(not oclIsUndefined()) then self.custodian.assignedCustodian.representedCustodianOrganization->forAll((addr.oclIsUndefined() or addr.isNullFlavorUndefined()) implies (not addr.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbqBUGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbqBUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.custodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian.representedCustodianOrganization->exists(not oclIsUndefined()) then self.custodian.assignedCustodian.representedCustodianOrganization->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbrPcGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbrPcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.custodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian.representedCustodianOrganization->exists(not oclIsUndefined()) then self.custodian.assignedCustodian.representedCustodianOrganization->forAll((name.oclIsUndefined() or name.isNullFlavorUndefined()) implies (not name.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbr2gGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbr2gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.custodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian.representedCustodianOrganization->exists(not oclIsUndefined()) then self.custodian.assignedCustodian.representedCustodianOrganization->forAll((telecom.oclIsUndefined() or telecom.isNullFlavorUndefined()) implies (not telecom.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbtEoGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbtEoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.custodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian->exists(not oclIsUndefined()) then self.custodian.assignedCustodian->forAll(representedCustodianOrganization->one(representedCustodianOrganization : cda::CustodianOrganization | not representedCustodianOrganization.oclIsUndefined() and representedCustodianOrganization.oclIsKindOf(cda::CustodianOrganization))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbuSwGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCustodianAssignedCustodian" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbuSwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.custodian->exists(not oclIsUndefined()) then self.custodian->forAll(assignedCustodian->one(assignedCustodian : cda::AssignedCustodian | not assignedCustodian.oclIsUndefined() and assignedCustodian.oclIsKindOf(cda::AssignedCustodian))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbwvAGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbwvAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informationRecipient->exists(not oclIsUndefined()) and self.informationRecipient.intendedRecipient->exists(not oclIsUndefined()) and self.informationRecipient.intendedRecipient.receivedOrganization->exists(not oclIsUndefined()) then self.informationRecipient.intendedRecipient.receivedOrganization->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbykMGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformationRecipientIntendedRecipientPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbykMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informationRecipient->exists(not oclIsUndefined()) and self.informationRecipient.intendedRecipient->exists(not oclIsUndefined()) and self.informationRecipient.intendedRecipient.informationRecipient->exists(not oclIsUndefined()) then self.informationRecipient.intendedRecipient.informationRecipient->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbzyUGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbzyUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informationRecipient->exists(not oclIsUndefined()) and self.informationRecipient.intendedRecipient->exists(not oclIsUndefined()) then self.informationRecipient.intendedRecipient->forAll(informationRecipient->one(informationRecipient : cda::Person | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(cda::Person))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pb1AcGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pb1AcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informationRecipient->exists(not oclIsUndefined()) and self.informationRecipient.intendedRecipient->exists(not oclIsUndefined()) then self.informationRecipient.intendedRecipient->forAll(receivedOrganization->one(receivedOrganization : cda::Organization | not receivedOrganization.oclIsUndefined() and receivedOrganization.oclIsKindOf(cda::Organization))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pb1ngGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformationRecipientIntendedRecipient" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pb1ngWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informationRecipient->exists(not oclIsUndefined()) then self.informationRecipient->forAll(intendedRecipient->one(intendedRecipient : cda::IntendedRecipient | not intendedRecipient.oclIsUndefined() and intendedRecipient.oclIsKindOf(cda::IntendedRecipient))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pb4q0GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pb4q0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.legalAuthenticator->exists(not oclIsUndefined()) and self.legalAuthenticator.assignedEntity->exists(not oclIsUndefined()) and self.legalAuthenticator.assignedEntity.assignedPerson->exists(not oclIsUndefined()) then self.legalAuthenticator.assignedEntity.assignedPerson->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pb548GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pb548WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.legalAuthenticator->exists(not oclIsUndefined()) and self.legalAuthenticator.assignedEntity->exists(not oclIsUndefined()) then self.legalAuthenticator.assignedEntity->forAll(id->exists( root='2.16.840.1.113883.4.6' )) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pb7HEGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pb7HEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.legalAuthenticator->exists(not oclIsUndefined()) and self.legalAuthenticator.assignedEntity->exists(not oclIsUndefined()) then self.legalAuthenticator.assignedEntity->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pb8VMGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pb8VMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.legalAuthenticator->exists(not oclIsUndefined()) and self.legalAuthenticator.assignedEntity->exists(not oclIsUndefined()) then self.legalAuthenticator.assignedEntity->forAll((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.101'))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pb9jUGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pb9jUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.legalAuthenticator->exists(not oclIsUndefined()) and self.legalAuthenticator.assignedEntity->exists(not oclIsUndefined()) then self.legalAuthenticator.assignedEntity->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pb-xcGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pb-xcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.legalAuthenticator->exists(not oclIsUndefined()) and self.legalAuthenticator.assignedEntity->exists(not oclIsUndefined()) then self.legalAuthenticator.assignedEntity->forAll((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pb__kGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pb__kWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.legalAuthenticator->exists(not oclIsUndefined()) and self.legalAuthenticator.assignedEntity->exists(not oclIsUndefined()) then self.legalAuthenticator.assignedEntity->forAll(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(cda::Person))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcBNsGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsLegalAuthenticatorTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcBNsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.legalAuthenticator->exists(not oclIsUndefined()) then self.legalAuthenticator->forAll((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcCb0GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsLegalAuthenticatorSignatureCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcCb0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.legalAuthenticator->exists(not oclIsUndefined()) then self.legalAuthenticator->forAll((signatureCode.oclIsUndefined() or signatureCode.isNullFlavorUndefined()) implies (not signatureCode.oclIsUndefined() and signatureCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = signatureCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'S'))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcE4EGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcFfIGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.authenticator->exists(not oclIsUndefined()) and self.authenticator.assignedEntity->exists(not oclIsUndefined()) and self.authenticator.assignedEntity.assignedPerson->exists(not oclIsUndefined()) then self.authenticator.assignedEntity.assignedPerson->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcGtQGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcGtQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.authenticator->exists(not oclIsUndefined()) and self.authenticator.assignedEntity->exists(not oclIsUndefined()) then self.authenticator.assignedEntity->forAll(id->exists( root='2.16.840.1.113883.4.6' )) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcH7YGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcH7YWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.authenticator->exists(not oclIsUndefined()) and self.authenticator.assignedEntity->exists(not oclIsUndefined()) then self.authenticator.assignedEntity->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcJJgGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcJJgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.authenticator->exists(not oclIsUndefined()) and self.authenticator.assignedEntity->exists(not oclIsUndefined()) then self.authenticator.assignedEntity->forAll((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcKXoGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcKXoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.authenticator->exists(not oclIsUndefined()) and self.authenticator.assignedEntity->exists(not oclIsUndefined()) then self.authenticator.assignedEntity->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcLlwGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcLlwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.authenticator->exists(not oclIsUndefined()) and self.authenticator.assignedEntity->exists(not oclIsUndefined()) then self.authenticator.assignedEntity->forAll((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcMz4GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthenticatorTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcMz4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.authenticator->exists(not oclIsUndefined()) then self.authenticator->forAll((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcOpEGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthenticatorSignatureCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcOpEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.authenticator->exists(not oclIsUndefined()) then self.authenticator->forAll((signatureCode.oclIsUndefined() or signatureCode.isNullFlavorUndefined()) implies (not signatureCode.oclIsUndefined() and signatureCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = signatureCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'S'))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcP3MGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsAuthenticatorAssignedEntity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcP3MWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.authenticator->exists(not oclIsUndefined()) then self.authenticator->forAll(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcS6gGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcS6gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.providerOrganization->exists(not oclIsUndefined()) then self.recordTarget.patientRole.providerOrganization->forAll(id->exists( root='2.16.840.1.113883.4.6' )) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcUIoGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcUIoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.providerOrganization->exists(not oclIsUndefined()) then self.recordTarget.patientRole.providerOrganization->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcV90GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcV90WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.providerOrganization->exists(not oclIsUndefined()) then self.recordTarget.patientRole.providerOrganization->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcXL8GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcXL8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.providerOrganization->exists(not oclIsUndefined()) then self.recordTarget.patientRole.providerOrganization->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcZBIGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcZBIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.providerOrganization->exists(not oclIsUndefined()) then self.recordTarget.patientRole.providerOrganization->forAll((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcbdYGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcbdYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient.languageCommunication->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient.languageCommunication->forAll((languageCode.oclIsUndefined() or languageCode.isNullFlavorUndefined()) implies (not languageCode.oclIsUndefined() and languageCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = languageCode.oclAsType(datatypes::CS) in (&#xD;&#xA;not value.code.oclIsUndefined()))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcdSkGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcdSkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient.languageCommunication->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient.languageCommunication->forAll((preferenceInd.oclIsUndefined() or preferenceInd.isNullFlavorUndefined()) implies (not preferenceInd.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcegsGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcegsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient.languageCommunication->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient.languageCommunication->forAll((proficiencyLevelCode.oclIsUndefined() or proficiencyLevelCode.isNullFlavorUndefined()) implies (proficiencyLevelCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = proficiencyLevelCode.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.61' and (value.code = 'E' or value.code = 'F' or value.code = 'G' or value.code = 'P')))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcgV4GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcgV4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient.languageCommunication->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient.languageCommunication->forAll((modeCode.oclIsUndefined() or modeCode.isNullFlavorUndefined()) implies (modeCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = modeCode.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.60' and (value.code = 'ESGN' or value.code = 'ESP' or value.code = 'EWR' or value.code = 'RSGN' or value.code = 'RSP' or value.code = 'RWR')))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pciyIGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pciyIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient.birthplace->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient.birthplace.place->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient.birthplace.place->forAll((addr.oclIsUndefined() or addr.isNullFlavorUndefined()) implies (not addr.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcknUGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcknUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient.birthplace->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient.birthplace->forAll(place->one(place : cda::Place | not place.oclIsUndefined() and place.oclIsKindOf(cda::Place))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcnqoGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcnqoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient.guardian->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient.guardian.guardianPerson->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient.guardian.guardianPerson->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcpf0GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcpf0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient.guardian->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient.guardian->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcqt8GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcqt8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient.guardian->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient.guardian->forAll((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.111' and not value.code.oclIsUndefined()))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcsjIGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcsjIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient.guardian->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient.guardian->forAll((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pctxQGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pctxQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient.guardian->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient.guardian->forAll(guardianPerson->one(guardianPerson : cda::Person | not guardianPerson.oclIsUndefined() and guardianPerson.oclIsKindOf(cda::Person))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcvmcGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToYear" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcvmcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient->forAll(birthTime.value.size() >= 4) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pcxboGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToDay" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pcxboWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient->forAll(birthTime.value.size() >= 6) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pczQ0GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pczQ0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient->forAll((birthTime.oclIsUndefined() or birthTime.isNullFlavorUndefined()) implies (not birthTime.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pc0e8GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pc0e8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient->forAll((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pc2UIGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pc2UIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient->forAll((maritalStatusCode.oclIsUndefined() or maritalStatusCode.isNullFlavorUndefined()) implies (maritalStatusCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = maritalStatusCode.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.2' and (value.code = 'A' or value.code = 'D' or value.code = 'T' or value.code = 'I' or value.code = 'L' or value.code = 'M' or value.code = 'S' or value.code = 'P' or value.code = 'W')))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pc4JUGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pc4JUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1)) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pc5-gGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pc5-gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient->forAll((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (raceCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = raceCode.oclAsType(datatypes::CE) in (&#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pc7zsGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pc7zsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient->forAll((religiousAffiliationCode.oclIsUndefined() or religiousAffiliationCode.isNullFlavorUndefined()) implies (religiousAffiliationCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = religiousAffiliationCode.oclAsType(datatypes::CE) in (&#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pc9o4GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pc9o4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient->forAll(guardian->exists(guardian : cda::Guardian | not guardian.oclIsUndefined() and guardian.oclIsKindOf(cda::Guardian))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pc-3AGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pc_eEGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient->forAll(birthplace->one(birthplace : cda::Birthplace | not birthplace.oclIsUndefined() and birthplace.oclIsKindOf(cda::Birthplace))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdAsMGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdAsMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) and self.recordTarget.patientRole.patient->exists(not oclIsUndefined()) then self.recordTarget.patientRole.patient->forAll(languageCommunication->one(languageCommunication : cda::LanguageCommunication | not languageCommunication.oclIsUndefined() and languageCommunication.oclIsKindOf(cda::LanguageCommunication))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdDIcGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRoleAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdDIcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) then self.recordTarget.patientRole->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdE9oGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRoleId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdE9oWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) then self.recordTarget.patientRole->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdGy0GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRoleTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdGy0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) then self.recordTarget.patientRole->forAll((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdIoAGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatient" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdIoAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) then self.recordTarget.patientRole->forAll(patient->one(patient : cda::Patient | not patient.oclIsUndefined() and patient.oclIsKindOf(cda::Patient))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdLEQGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsRecordTargetPatientRole" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdLEQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) then self.recordTarget->forAll(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdOHkGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdOHkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdP8wGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsComponentOfEncompassingEncounterId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdP8wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdRx8GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsComponentOfEncompassingEncounter" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdRx8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) then self.componentOf->forAll(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdplYGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformantRelatedEntityPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdplYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informant->exists(not oclIsUndefined()) and self.informant.relatedEntity->exists(not oclIsUndefined()) and self.informant.relatedEntity.relatedPerson->exists(not oclIsUndefined()) then self.informant.relatedEntity.relatedPerson->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdrakGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformantRelatedEntityAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdrakWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informant->exists(not oclIsUndefined()) and self.informant.relatedEntity->exists(not oclIsUndefined()) then self.informant.relatedEntity->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdtPwGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformantRelatedEntityPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdtPwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informant->exists(not oclIsUndefined()) and self.informant.relatedEntity->exists(not oclIsUndefined()) then self.informant.relatedEntity->forAll(relatedPerson->one(relatedPerson : cda::Person | not relatedPerson.oclIsUndefined() and relatedPerson.oclIsKindOf(cda::Person))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdwTEGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformantAssignedEntityPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdwTEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informant->exists(not oclIsUndefined()) and self.informant.assignedEntity->exists(not oclIsUndefined()) and self.informant.assignedEntity.assignedPerson->exists(not oclIsUndefined()) then self.informant.assignedEntity.assignedPerson->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdyvUGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdyvUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informant->exists(not oclIsUndefined()) and self.informant.assignedEntity->exists(not oclIsUndefined()) then self.informant.assignedEntity->forAll(id->exists( root='2.16.840.1.113883.4.6' )) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pd0kgGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformantAssignedEntityAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pd0kgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informant->exists(not oclIsUndefined()) and self.informant.assignedEntity->exists(not oclIsUndefined()) then self.informant.assignedEntity->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pd3AwGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformantAssignedEntityCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pd3AwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informant->exists(not oclIsUndefined()) and self.informant.assignedEntity->exists(not oclIsUndefined()) then self.informant.assignedEntity->forAll((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.101'))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pd418GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformantAssignedEntityId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pd418WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informant->exists(not oclIsUndefined()) and self.informant.assignedEntity->exists(not oclIsUndefined()) then self.informant.assignedEntity->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pd6rIGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformantAssignedEntityPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pd6rIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informant->exists(not oclIsUndefined()) and self.informant.assignedEntity->exists(not oclIsUndefined()) then self.informant.assignedEntity->forAll(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(cda::Person))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pd9HYGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pd9HYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.informant->exists(not oclIsUndefined()) then self.informant->forAll(assignedEntity.oclIsUndefined() xor relatedEntity.oclIsUndefined()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peAKsGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peAKsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->forAll(associatedEntity.associatedPerson.oclIsUndefined() xor associatedEntity.scopingOrganization.oclIsUndefined()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peB_4GknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsParticipantSupportTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peB_4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->forAll((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peFDMGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInFulfillmentOfOrderId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peFDMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.inFulfillmentOf->exists(not oclIsUndefined()) and self.inFulfillmentOf.order->exists(not oclIsUndefined()) then self.inFulfillmentOf.order->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peHfcGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsInFulfillmentOfOrder" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peHfcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.inFulfillmentOf->exists(not oclIsUndefined()) then self.inFulfillmentOf->forAll(order->one(order : cda::Order | not order.oclIsUndefined() and order.oclIsKindOf(cda::Order))) else true endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2D-tgBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_S9OzADxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2EAisBSVEeGGzu7fmW9pXw" name="AllergyProblemAct">
      <eAnnotations xmi:id="_2EAisRSVEeGGzu7fmW9pXw" source="uml2.alias">
        <details xmi:id="_2EAishSVEeGGzu7fmW9pXw" key="Allergies and Drug Sensitivities"/>
      </eAnnotations>
      <eAnnotations xmi:id="_2EAisxSVEeGGzu7fmW9pXw" source="uml2.alias">
        <details xmi:id="_2EAitBSVEeGGzu7fmW9pXw" key="Allergy and Drug Sensitivity"/>
      </eAnnotations>
      <ownedComment xmi:id="_2GDKEBSVEeGGzu7fmW9pXw" annotatedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <body>This clinical statement act represents a concern relating to a patient's allergies or adverse events. A concern is a term used when referring to patient's problems that are related to one another. Observations of problems or other clinical statements captured at a point in time are wrapped in a Allergy Problem Act, or &quot;Concern&quot; act, which represents the ongoing process tracked over time. This outer Allergy Problem Act (representing the &quot;Concern&quot;) can contain nested problem observations or other nested clinical statements relevant to the allergy concern.</body>
      </ownedComment>
      <ownedRule xmi:id="_L5MNcCWFEeGWfpmyutaqOA" name="AllergyProblemActEffectiveTimeLow" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_UD7aQCWFEeGWfpmyutaqOA">
          <language>OCL</language>
          <body>(self.statusCode.code = '55561003') implies not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F-RkBSVEeGGzu7fmW9pXw" name="AllergyProblemActEffectiveTimeHigh">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F-RkRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>(self.statusCode.code = '413322009') implies not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o9uIIGknEeGCCOsAP2C6Nw" name="AllergyProblemActTemplateId" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o9uIIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.30')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o9xLcGknEeGCCOsAP2C6Nw" name="AllergyProblemActClassCode" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o9xLcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o9yZkGknEeGCCOsAP2C6Nw" name="AllergyProblemActMoodCode" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o9yZkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o9znsGknEeGCCOsAP2C6Nw" name="AllergyProblemActId" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o90OwGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o92D8GknEeGCCOsAP2C6Nw" name="AllergyProblemActCode" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o92D8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o935IGknEeGCCOsAP2C6Nw" name="AllergyProblemActStatusCode" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o935IWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = '55561003' or value.code = '73425007' or value.code = '413322009'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o95uUGknEeGCCOsAP2C6Nw" name="AllergyProblemActEffectiveTime" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o95uUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_m-gGknEeGCCOsAP2C6Nw" name="AllergyProblemActAllergyObservation" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_m-gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AllergyObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2GDKExSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_o_oMoGknEeGCCOsAP2C6Nw" name="getAllergyObservations" isQuery="true" bodyCondition="_o_oMo2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_o_oMo2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_o_oMoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_oMpGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation)).oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_o_oMoWknEeGCCOsAP2C6Nw" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o_oMomknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2EaLUBSVEeGGzu7fmW9pXw" name="AllergyObservation">
      <eAnnotations xmi:id="_2EaLURSVEeGGzu7fmW9pXw" source="uml2.alias">
        <details xmi:id="_2EaLUhSVEeGGzu7fmW9pXw" key="Allergies and Intolerances"/>
      </eAnnotations>
      <ownedComment xmi:id="_2F5ZEBSVEeGGzu7fmW9pXw" annotatedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <body>This clinical statement represents that an allergy or adverse reaction exists or does not exist. The agent that is the cause of the allergy or adverse reaction is represented as a manufactured material participant playing entity in the allergy observation. While the agent is often implicit in the alert observation (e.g. &quot;allergy to penicillin&quot;), it should also be asserted explicitly as an entity. The manufactured material participant is used to represent natural and non-natural occuring substances.&#xD;
NOTE: The agent responsible for an allergy or adverse reaction is not always a manufactured material (for example, food allergies), nor is it necessarily consumed. The following constraints reflect limitations in the base CDA R2 specification, and should be used to represent any type of responsible agent.</body>
      </ownedComment>
      <ownedRule xmi:id="_8gb1UCFTEeG9m6LRl9ardQ" name="AllergyObservationAllergyStatusInversionIndicator" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_L6csQCFUEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsKindOf(consol::AllergyStatusObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VBabUCFVEeG9m6LRl9ardQ" name="AllergyObservationReactionInversionIndicator" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_f5vPwCFVEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsKindOf(consol::ReactionObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaLbxSVEeGGzu7fmW9pXw" name="AllergyObservationSeverityInversionIndicator">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaLcBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsKindOf(consol::SeverityObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o968cGknEeGCCOsAP2C6Nw" name="AllergyObservationTemplateId" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o968cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o9_08GknEeGCCOsAP2C6Nw" name="AllergyObservationClassCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o9_08WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-BqIGknEeGCCOsAP2C6Nw" name="AllergyObservationMoodCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-BqIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-CRMGknEeGCCOsAP2C6Nw" name="AllergyObservationId" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-CRMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-EtcGknEeGCCOsAP2C6Nw" name="AllergyObservationCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-EtcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-HJsGknEeGCCOsAP2C6Nw" name="AllergyObservationStatusCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-HJsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-IX0GknEeGCCOsAP2C6Nw" name="AllergyObservationEffectiveTime" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-IX0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-K0EGknEeGCCOsAP2C6Nw" name="AllergyObservationValue" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-K0EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '420134006' or value.code = '418038007' or value.code = '419511003' or value.code = '418471000' or value.code = '419199007' or value.code = '416098002' or value.code = '414285001' or value.code = '59037007' or value.code = '235719002')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-MpQGknEeGCCOsAP2C6Nw" name="AllergyObservationProblemEntryReactionObservationContainer" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-MpQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::MFST)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-OecGknEeGCCOsAP2C6Nw" name="AllergyObservationSeverity" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-OecWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SeverityObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLAWMWknEeGCCOsAP2C6Nw" name="AllergyObservationAllergyStatusObservation" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLAWMmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AllergyStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRPhEGknEeGCCOsAP2C6Nw" name="AllergyObservationParticipant" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRPhEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2F5ZERSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_o-N3YGknEeGCCOsAP2C6Nw" name="getProblemEntryReactionObservationContainers" isQuery="true" bodyCondition="_o-N3Y2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_o-N3Y2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_o-N3YGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-N3ZGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation)).oclAsType(consol::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_o-N3YWknEeGCCOsAP2C6Nw" type="_2E_aIRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o-N3YmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_o-PskGknEeGCCOsAP2C6Nw" name="getSeverity" isQuery="true" bodyCondition="_o-Psk2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_o-Psk2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_o-PskGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-PslGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SeverityObservation))->asSequence()->first().oclAsType(consol::SeverityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_o-PskWknEeGCCOsAP2C6Nw" type="_2FGu4hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o-PskmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pLBkUGknEeGCCOsAP2C6Nw" name="getAllergyStatusObservation" isQuery="true" bodyCondition="_pLBkU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pLBkU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pLBkUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLBkVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyStatusObservation))->asSequence()->first().oclAsType(consol::AllergyStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pLBkUWknEeGCCOsAP2C6Nw" type="_2FRuAhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pLBkUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2EqqABSVEeGGzu7fmW9pXw" name="AgeObservation">
      <ownedComment xmi:id="_2EqqARSVEeGGzu7fmW9pXw" annotatedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <body>This Age Observation represents the subject's age at onset of an event or observation. The age of a relative in a Family History Observation at the time of that observation could also be inferred by comparing RelatedSubject/subject/birthTime with Observation/effectiveTime. However, a common scenario is that a patient will know the age of a relative when the relative had a certain condition or when the relative died, but will not know the actual year (e.g., &quot;grandpa died of a heart attack at the age of 50&quot;). Often times, neither precise dates nor ages are known (e.g. &quot;cousin died of congenital heart disease as an infant&quot;).</body>
      </ownedComment>
      <ownedRule xmi:id="_o-PslWknEeGCCOsAP2C6Nw" name="AgeObservationTemplateId" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-PslmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.31')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-SI0GknEeGCCOsAP2C6Nw" name="AgeObservationClassCode" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-SI0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-TW8GknEeGCCOsAP2C6Nw" name="AgeObservationMoodCode" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-TW8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-VMIGknEeGCCOsAP2C6Nw" name="AgeObservationCode" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-VMIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '445518008' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-XoYGknEeGCCOsAP2C6Nw" name="AgeObservationStatusCode" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-XoYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-Y2gGknEeGCCOsAP2C6Nw" name="AgeObservationValue" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-Y2gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2EvigBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2ExXsBSVEeGGzu7fmW9pXw" name="HealthStatusObservation">
      <ownedComment xmi:id="_2ExXsRSVEeGGzu7fmW9pXw" annotatedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <body>The Health Status Observation records information about the current health status of the patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_2ExXshSVEeGGzu7fmW9pXw" name="HealthStatusObservationHasTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2ExXsxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_QEznYCf4EeGO5_JBy9h6BA" name="HealthStatusObservationHasTextReferenceValue" constrainedElement="_2ExXshSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLltsCf4EeGO5_JBy9h6BA">
          <language>OCL</language>
          <body>not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-aEoGknEeGCCOsAP2C6Nw" name="HealthStatusObservationTemplateId" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-aEoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-dH8GknEeGCCOsAP2C6Nw" name="HealthStatusObservationClassCode" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-dH8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-eWEGknEeGCCOsAP2C6Nw" name="HealthStatusObservationMoodCode" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-eWEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-gyUGknEeGCCOsAP2C6Nw" name="HealthStatusObservationCode" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-gyUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '11323-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-iAcGknEeGCCOsAP2C6Nw" name="HealthStatusObservationText" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-iAcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-kcsGknEeGCCOsAP2C6Nw" name="HealthStatusObservationStatusCode" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-kcsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-m48GknEeGCCOsAP2C6Nw" name="HealthStatusObservationValue" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-m48WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '55561003' or value.code = '73425007' or value.code = '413322009')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2E56kRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2E_aIRSVEeGGzu7fmW9pXw" name="ReactionObservation">
      <ownedComment xmi:id="_j3HUIBraEeGo461UQq-B1g">
        <body>This clinical statement represents an undesired symptom, finding, etc., due to an administered or exposed substance. A reaction can be defined with respect to its severity, and can have been treated by one or more interventions.</body>
      </ownedComment>
      <ownedRule xmi:id="_gBlYICKdEeG9m6LRl9ardQ" name="ReactionObservationTextReference" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sG9OgCKdEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies not self.text.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_0eDcUCKdEeG9m6LRl9ardQ" name="ReactionObservationReferenceValue" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3rGAECKdEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1SPc4CKeEeG9m6LRl9ardQ" name="ReactionObservationEffectiveTimeLow" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_7fXGcCKeEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_3qPPACKeEeG9m6LRl9ardQ" name="ReactionObservationEffectiveTimeHigh" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_8rNOgCKeEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jm2UICYKEeGWfpmyutaqOA" name="ReactionObservationSeverityObservationInversionInd" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qNTDsCYKEeGWfpmyutaqOA">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsKindOf(consol::SeverityObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_IvIIQBrcEeGo461UQq-B1g" name="ReactionObservationProcedureActivityProcedureInversionInd" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_XcWKoBrcEeGo461UQq-B1g">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.procedure.oclIsKindOf(consol::ProcedureActivityProcedure))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_P3TE0BrcEeGo461UQq-B1g" name="ReactionObservationMedicationActivityInversionInd" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_U-Q-oBrcEeGo461UQq-B1g">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.substanceAdministration.oclIsKindOf(consol::MedicationActivity))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-oHEGknEeGCCOsAP2C6Nw" name="ReactionObservationTemplateId" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-oHEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-u0wGknEeGCCOsAP2C6Nw" name="ReactionObservationClassCode" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-u0wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-wC4GknEeGCCOsAP2C6Nw" name="ReactionObservationMoodCode" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-wC4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-xRAGknEeGCCOsAP2C6Nw" name="ReactionObservationId" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-x4EGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-yfIGknEeGCCOsAP2C6Nw" name="ReactionObservationCode" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-yfIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-ztQGknEeGCCOsAP2C6Nw" name="ReactionObservationText" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-ztQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-1icGknEeGCCOsAP2C6Nw" name="ReactionObservationStatusCode" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-1icWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-3XoGknEeGCCOsAP2C6Nw" name="ReactionObservationEffectiveTime" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-3XoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-5M0GknEeGCCOsAP2C6Nw" name="ReactionObservationValue" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-5M0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_K5oGknEeGCCOsAP2C6Nw" name="ReactionObservationSeverityObservation" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_K5oWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SeverityObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pN8VcGknEeGCCOsAP2C6Nw" name="ReactionObservationProcedureActivityProcedure" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pN8VcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(consol::ProcedureActivityProcedure) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pN9jlWknEeGCCOsAP2C6Nw" name="ReactionObservationMedicationActivity" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pN9jlmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2FwPIhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_o_MHwGknEeGCCOsAP2C6Nw" name="getSeverityObservation" isQuery="true" bodyCondition="_o_MHw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_o_MHw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_o_MHwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_MHxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SeverityObservation))->asSequence()->first().oclAsType(consol::SeverityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_o_MHwWknEeGCCOsAP2C6Nw" type="_2FGu4hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o_MHwmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pN9jkGknEeGCCOsAP2C6Nw" name="getProcedureActivityProcedures" isQuery="true" bodyCondition="_pN9jk2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pN9jk2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pN9jkGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pN9jlGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure)).oclAsType(consol::ProcedureActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pN9jkWknEeGCCOsAP2C6Nw" type="_2OG58RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pN9jkmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pN-xsGknEeGCCOsAP2C6Nw" name="getMedicationActivities" isQuery="true" bodyCondition="_pN-xs2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pN-xs2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pN-xsGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pN-xtGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pN-xsWknEeGCCOsAP2C6Nw" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pN-xsmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2FGu4hSVEeGGzu7fmW9pXw" name="SeverityObservation">
      <ownedComment xmi:id="_2FGu4xSVEeGGzu7fmW9pXw" annotatedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <body>This clinical statement represents the gravity of the problem, such as allergy or reaction, in terms of its actual or potential impact on the patient. The Severity Observation can be associated with an Allergy Obervation, Reaction Observation or both. When the Severity Observation is associated directly with an Allergy it characterizes the Allergy. When the Severity Observation is associated with a Reaction Observation it characterizes a Reaction. A person may manifest many symptoms in a reaction to a single substance, and each reaction to the substance can be represented. However, each reaction observation can have only one severity observation associated with it. For example, someone may have a rash reaction observation as well as an itching reaction observation, but each can have only one level of severity</body>
      </ownedComment>
      <ownedRule xmi:id="_sBN0ECK3EeG9m6LRl9ardQ" name="SeverityObservationTextReference" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wsR1ACK3EeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies not self.text.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_0IXhYCK3EeG9m6LRl9ardQ" name="SeverityObservationReferenceValue" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3NEBcCK3EeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-7pEGknEeGCCOsAP2C6Nw" name="SeverityObservationTemplateId" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-7pEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o--FUGknEeGCCOsAP2C6Nw" name="SeverityObservationClassCode" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o--FUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-_6gGknEeGCCOsAP2C6Nw" name="SeverityObservationMoodCode" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-_6gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_BvsGknEeGCCOsAP2C6Nw" name="SeverityObservationCode" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_BvsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'SEV' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_C90GknEeGCCOsAP2C6Nw" name="SeverityObservationText" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_C90WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_FaEGknEeGCCOsAP2C6Nw" name="SeverityObservationStatusCode" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_FaEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_IdYGknEeGCCOsAP2C6Nw" name="SeverityObservationValue" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_IdYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '255604002' or value.code = '371923003' or value.code = '6736007' or value.code = '371924009' or value.code = '24484000' or value.code = '399166001')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2FODoBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2FRuAhSVEeGGzu7fmW9pXw" name="AllergyStatusObservation">
      <ownedComment xmi:id="_2FRuAxSVEeGGzu7fmW9pXw" annotatedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <body>This template represents the status of the allergy indicating whether it is active, no longer active, or is an historic allergy. There can be only one allergy status observation per alert observation.</body>
      </ownedComment>
      <ownedRule xmi:id="_o_MHxWknEeGCCOsAP2C6Nw" name="AllergyStatusObservationTemplateId" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_Mu0GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.28')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_N88GknEeGCCOsAP2C6Nw" name="AllergyStatusObservationClassCode" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_N88WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_PLEGknEeGCCOsAP2C6Nw" name="AllergyStatusObservationMoodCode" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_PLEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_RAQGknEeGCCOsAP2C6Nw" name="AllergyStatusObservationCode" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_RAQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '33999-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_TcgGknEeGCCOsAP2C6Nw" name="AllergyStatusObservationStatusCode" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_TcgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_V4wGknEeGCCOsAP2C6Nw" name="AllergyStatusObservationValue" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_V4wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '55561003' or value.code = '73425007' or value.code = '413322009')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2FbfABSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2FhloBSVEeGGzu7fmW9pXw" name="CommentActivity">
      <ownedComment xmi:id="_2FrWoBSVEeGGzu7fmW9pXw" annotatedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <body>Used to contain comments associated with any of the data within the document.</body>
      </ownedComment>
      <ownedComment xmi:id="_2FrWoRSVEeGGzu7fmW9pXw" annotatedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <body>&lt;p>This entry allows for a comment to be supplied with each entry. For CDA this structure is usually included in the target act using the &amp;lt;entryRelationship> element defined in the CDA Schema, but can also be used in the &amp;lt;component> element when the comment appears within an &amp;lt;organizer>.&lt;/p>&#xD;
&#xD;
&lt;p>Any condition or allergy may be the subject of a comment.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_2FhloRSVEeGGzu7fmW9pXw" annotatedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <body>This module contains a comment to be supplied for any other entry Content Modules.</body>
      </ownedComment>
      <ownedRule xmi:id="_2Fo6YRSVEeGGzu7fmW9pXw" name="CommentActivityHasTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Fo6YhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FphcRSVEeGGzu7fmW9pXw" name="CommentActivityEffectiveTimeWhenAuthorPresent">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FphchSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.author->isEmpty() implies not self.effectiveTime.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FqIgBSVEeGGzu7fmW9pXw" name="CommentActivityHasAuthorId">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FqIgRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.author->isEmpty() implies (  self.author.assignedAuthor.id ->size() > 0 and self.author.assignedAuthor.addr ->size() > 0 and self.author.assignedAuthor.telecom ->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FqvkBSVEeGGzu7fmW9pXw" name="CommentActivityHasAuthorOrganization">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FqvkRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.author->isEmpty() implies ( self.author->exists( a : cda::Author | ( (not a.assignedAuthor.assignedPerson.oclIsUndefined()) and not a.assignedAuthor.assignedPerson.name->isEmpty()) or (not a.assignedAuthor.representedOrganization.name->isEmpty())  ) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_XG4GknEeGCCOsAP2C6Nw" name="CommentActivityTemplateId" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_XG4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.64')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_b_YGknEeGCCOsAP2C6Nw" name="CommentActivityClassCode" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_b_YWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_dNgGknEeGCCOsAP2C6Nw" name="CommentActivityMoodCode" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_dNgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_gQ0GknEeGCCOsAP2C6Nw" name="CommentActivityCode" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_gQ0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '48767-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_iGAGknEeGCCOsAP2C6Nw" name="CommentActivityText" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_iGAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_kiQGknEeGCCOsAP2C6Nw" name="CommentActivityStatusCode" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_kiQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_lwYGknEeGCCOsAP2C6Nw" name="CommentActivityAuthor" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_lwYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2FrWohSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2GHbgBSVEeGGzu7fmW9pXw" name="MedicationActivity">
      <ownedComment xmi:id="_NWhH8B-vEeGKirKJsFylGA">
        <body>A medication activity describes substance administrations that have actually occurred (e.g. pills ingested or injections given) or are intended to occur (e.g. &quot;take 2 tablets twice a day for the next 10 days&quot;). Medication activities in &quot;INT&quot; mood are reflections of what a clinician intends a patient to be taking. Medication activities in &quot;EVN&quot; mood reflect actual use.&#xD;
Medication timing is complex. This template requires that there be a substanceAdministration/effectiveTime valued with a time interval, representing the start and stop dates. Additional effectiveTime elements are optional, and can be used to represent frequency and other aspects of more detailed dosing regimens.</body>
      </ownedComment>
      <ownedRule xmi:id="_K_ZiwB-zEeGKirKJsFylGA" name="MedicationActivityDoseQuantityorrateQuantity" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_PVv38B-zEeGKirKJsFylGA">
          <language>OCL</language>
          <body>self.doseQuantity->size() = 1 xor self.rateQuantity->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nSTKYEFiEeG2TLeVPbv7pg" name="MedicationActivityTextReference" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qEPtkEFiEeG2TLeVPbv7pg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies not self.text.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_5BnBgEIiEeG4bZAl2IGXmQ" name="MedicationActivityEffectiveTimeIVLTS">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_BbXhwEIjEeG4bZAl2IGXmQ">
          <language>OCL</language>
          <body>self.effectiveTime->exists(ef : datatypes::SXCM_TS | ef.oclIsTypeOf(datatypes::IVL_TS))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_0bGJYEIiEeG4bZAl2IGXmQ" name="MedicationActivityEffectiveTimePIVLTS">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jd8REEIjEeG4bZAl2IGXmQ">
          <language>OCL</language>
          <body>self.effectiveTime->exists(ef : datatypes::SXCM_TS | ef.oclIsTypeOf(datatypes::PIVL_TS) xor ef.oclIsTypeOf(datatypes::EIVL_TS))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWfuoEInEeG4bZAl2IGXmQ" name="MedicationActivityDoseQuantityUnit">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ffCM4EInEeG4bZAl2IGXmQ">
          <language>OCL</language>
          <body>not self.doseQuantity.oclIsUndefined() implies not self.doseQuantity.unit.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1smJUEIpEeG4bZAl2IGXmQ" name="MedicationActivityDrugVehicleTypeCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FEb2AEIqEeG4bZAl2IGXmQ">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::DrugVehicle))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::CSM)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_L0emcEIqEeG4bZAl2IGXmQ" name="MedicationActivityInstructionsInversionInd" constrainedElement="_1smJUEIpEeG4bZAl2IGXmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_QiVcsEIqEeG4bZAl2IGXmQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsKindOf(consol::Instructions))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Mu_RcEIrEeG4bZAl2IGXmQ" name="MedicationActivityPreconditionSubstanceAdmTypeCode" constrainedElement="_L0emcEIqEeG4bZAl2IGXmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_TUKOoEIrEeG4bZAl2IGXmQ">
          <language>OCL</language>
          <body>self.precondition->select(par : cda::Precondition | par.oclIsKindOf(consol::PreconditionForSubstanceAdministration))->forAll(p : cda::Precondition | p.typeCode=vocab::ActRelationshipType::PRCN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_oMpWknEeGCCOsAP2C6Nw" name="MedicationActivityTemplateId" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_oMpmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.16')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_wIcGknEeGCCOsAP2C6Nw" name="MedicationActivityClassCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_wIcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_zLwGknEeGCCOsAP2C6Nw" name="MedicationActivityId" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_zLwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_0Z4GknEeGCCOsAP2C6Nw" name="MedicationActivityCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_0Z4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_1oAGknEeGCCOsAP2C6Nw" name="MedicationActivityStatusCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_1oAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_3dMGknEeGCCOsAP2C6Nw" name="MedicationActivityRouteCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_3dMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in (&#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_55cGknEeGCCOsAP2C6Nw" name="MedicationActivityApproachSiteCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_55cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_7HkGknEeGCCOsAP2C6Nw" name="MedicationActivityDoseQuantity" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_7HkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_8VsGknEeGCCOsAP2C6Nw" name="MedicationActivityRateQuantity" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_8VsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.rateQuantity.oclIsUndefined() or self.rateQuantity.isNullFlavorUndefined()) implies (not self.rateQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_9j0GknEeGCCOsAP2C6Nw" name="MedicationActivityMaxDoseQuantity" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_9j0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.maxDoseQuantity.oclIsUndefined() or self.maxDoseQuantity.isNullFlavorUndefined()) implies (not self.maxDoseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o__ZAGknEeGCCOsAP2C6Nw" name="MedicationActivityAdministrationUnitCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o__ZAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.administrationUnitCode.oclIsUndefined() or self.administrationUnitCode.isNullFlavorUndefined()) implies (self.administrationUnitCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.administrationUnitCode.oclAsType(datatypes::CE) in (&#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAB1QGknEeGCCOsAP2C6Nw" name="MedicationActivityText" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAB1QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pADDYGknEeGCCOsAP2C6Nw" name="MedicationActivityRepeatNumber" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pADDYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAERgGknEeGCCOsAP2C6Nw" name="MedicationActivityMedicationSupplyOrder" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAERgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationSupplyOrder) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAGGsGknEeGCCOsAP2C6Nw" name="MedicationActivityReactionObservation" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAGGsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAHU1WknEeGCCOsAP2C6Nw" name="MedicationActivityPerformer" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAHU1mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAYakGknEeGCCOsAP2C6Nw" name="MedicationActivityInstructions" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAYakWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJ1RgGknEeGCCOsAP2C6Nw" name="MedicationActivityIndication" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJ1RgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKHlYGknEeGCCOsAP2C6Nw" name="MedicationActivityMedicationDispense" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKHlYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationDispense) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKNE8GknEeGCCOsAP2C6Nw" name="MedicationActivityPrecondition" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKNE8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.precondition->exists(precondition : cda::Precondition | not precondition.oclIsUndefined() and precondition.oclIsKindOf(consol::PreconditionForSubstanceAdministration))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKOTEGknEeGCCOsAP2C6Nw" name="MedicationActivityDrugVehicle" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKOTEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::DrugVehicle))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZI40GknEeGCCOsAP2C6Nw" name="MedicationActivityConsumable" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZI40WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(consol::MedicationInformation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2H1SwhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_pAFfoGknEeGCCOsAP2C6Nw" name="getMedicationSupplyOrders" isQuery="true" bodyCondition="_pAFfo2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pAFfo2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pAFfoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAFfpGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationSupplyOrder)).oclAsType(consol::MedicationSupplyOrder)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pAFfoWknEeGCCOsAP2C6Nw" type="_j3aTQBrTEeGo461UQq-B1g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pAFfomknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pAHU0GknEeGCCOsAP2C6Nw" name="getReactionObservation" isQuery="true" bodyCondition="_pAHU02knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pAHU02knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pAHU0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAHU1GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation))->asSequence()->first().oclAsType(consol::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pAHU0WknEeGCCOsAP2C6Nw" type="_2E_aIRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pAHU0mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pAZBoGknEeGCCOsAP2C6Nw" name="getInstructions" isQuery="true" bodyCondition="_pAZosWknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pAZosWknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pAZBoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAZosmknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->first().oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pAZBoWknEeGCCOsAP2C6Nw" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pAZosGknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJ14kGknEeGCCOsAP2C6Nw" name="getIndications" isQuery="true" bodyCondition="_pJ2foWknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJ2foWknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJ14kGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJ2fomknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJ14kWknEeGCCOsAP2C6Nw" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJ2foGknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pKIzgGknEeGCCOsAP2C6Nw" name="getMedicationDispense" isQuery="true" bodyCondition="_pKIzg2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pKIzg2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pKIzgGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKIzhGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationDispense))->asSequence()->first().oclAsType(consol::MedicationDispense)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pKIzgWknEeGCCOsAP2C6Nw" type="_DpoGkBUUEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pKIzgmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pKPhMGknEeGCCOsAP2C6Nw" name="getDrugVehicles" isQuery="true" bodyCondition="_pKQIQGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pKQIQGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pKPhMGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKQIQWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::DrugVehicle)).oclAsType(consol::DrugVehicle)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pKPhMWknEeGCCOsAP2C6Nw" type="_VBXq8BUTEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pKPhMmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2G2bUxSVEeGGzu7fmW9pXw" name="ProductInstance">
      <ownedComment xmi:id="_2G2bVBSVEeGGzu7fmW9pXw" annotatedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <body>This clinical statement represents a particular device that was placed in or used as part of a procedure or other act. This provides a record of the identifier and other details about the given product that was used. For example, it is important to have a record that indicates not just that a hip prostheses was placed in a patient but that it was a particular hip prostheses number with a unique identifier.&#xD;
The FDA Amendments Act specifies the creation of a Unique Device Identification (UDI) System that requires the label of devices to bear a unique identifier that will standardize device identification and identify the device through distribution and use.  &#xD;
The UDI should be sent in the participantRole/id.</body>
      </ownedComment>
      <ownedRule xmi:id="_pAIi8GknEeGCCOsAP2C6Nw" name="ProductInstanceTemplateId" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAIi8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.37')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAKYIGknEeGCCOsAP2C6Nw" name="ProductInstanceClassCode" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAKYIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pALmQGknEeGCCOsAP2C6Nw" name="ProductInstanceId" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pALmQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVdSs2knEeGCCOsAP2C6Nw" name="ProductInstanceScopingEntity" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVdStGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.scopingEntity->one(scopingEntity : cda::Entity | not scopingEntity.oclIsUndefined() and scopingEntity.oclIsKindOf(cda::Entity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVeg0GknEeGCCOsAP2C6Nw" name="ProductInstancePlayingDevice" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVeg0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.playingDevice->one(playingDevice : cda::Device | not playingDevice.oclIsUndefined() and playingDevice.oclIsKindOf(cda::Device))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pevxkGknEeGCCOsAP2C6Nw" name="ProductInstanceScopingEntityId" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pevxkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.scopingEntity->exists(not oclIsUndefined()) then self.scopingEntity->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pew_sGknEeGCCOsAP2C6Nw" name="ProductInstancePlayingDeviceCode" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pew_sWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.playingDevice->exists(not oclIsUndefined()) then self.playingDevice->forAll((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2G43kBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2G8h9RSVEeGGzu7fmW9pXw" name="Instructions">
      <ownedComment xmi:id="_-HE7oB7lEeGEaLkc3UAsAg">
        <body>The Instructions template can be used in several ways, such as to record patient instructions within a Medication Activity or to record fill instructions within a supply order. The act/code defines the type of instruction.Though not defined in this template, a Vaccine Information Statement (VIS) document could be referenced through act/reference/externalDocument, and patient awareness of the instructions can be represented with the generic participant and the participant/awarenessCode.</body>
      </ownedComment>
      <ownedRule xmi:id="_VsoLUBueEeGnMahsPjlwOw" name="InstructionsTextReference" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y-ZeEBueEeGnMahsPjlwOw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies not self.text.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_8FmGoB-WEeGtfPlBCjHWkw" name="InstructionsTextReferenceValue" constrainedElement="_VsoLUBueEeGnMahsPjlwOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__GkkUB-WEeGtfPlBCjHWkw">
          <language>OCL</language>
          <body>not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAOpkWknEeGCCOsAP2C6Nw" name="InstructionsTemplateId" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAOpkmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.20')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pARs4GknEeGCCOsAP2C6Nw" name="InstructionsClassCode" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pARs4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAS7AGknEeGCCOsAP2C6Nw" name="InstructionsMoodCode" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAS7AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAUwMGknEeGCCOsAP2C6Nw" name="InstructionsText" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAUwMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAWlYGknEeGCCOsAP2C6Nw" name="InstructionsStatusCode" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAWlYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2HCBgRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2HIvMBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivity">
      <ownedComment xmi:id="_kXIeEDiAEeGSytqLITd2FA">
        <body>This template records non-medicinal supplies provided, such as medical equipment</body>
      </ownedComment>
      <ownedRule xmi:id="_fELj4Ea8EeG75M7WNoZ4Xg" name="NonMedicinalSupplyActivityProductInstanceTypeCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kenzUEa8EeG75M7WNoZ4Xg">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::ProductInstance))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::PRD)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAZos2knEeGCCOsAP2C6Nw" name="NonMedicinalSupplyActivityTemplateId" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAZotGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.50')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAcE8GknEeGCCOsAP2C6Nw" name="NonMedicinalSupplyActivityClassCode" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAcE8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAfvUGknEeGCCOsAP2C6Nw" name="NonMedicinalSupplyActivityId" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAfvUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAg9cGknEeGCCOsAP2C6Nw" name="NonMedicinalSupplyActivityStatusCode" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAg9cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAiLkGknEeGCCOsAP2C6Nw" name="NonMedicinalSupplyActivityEffectiveTime" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAiLkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAjZsGknEeGCCOsAP2C6Nw" name="NonMedicinalSupplyActivityQuantity" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAjZsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.quantity.oclIsUndefined() or self.quantity.isNullFlavorUndefined()) implies (not self.quantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAkn0GknEeGCCOsAP2C6Nw" name="NonMedicinalSupplyActivityProductInstance" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAkn0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ProductInstance))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2HnQUhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_pAl18GknEeGCCOsAP2C6Nw" name="getProductInstance" isQuery="true" bodyCondition="_pAl182knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pAl182knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pAl18GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAl19GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ProductInstance))->asSequence()->first().oclAsType(consol::ProductInstance)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pAl18WknEeGCCOsAP2C6Nw" type="_2G2bUxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pAl18mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2H6yUBSVEeGGzu7fmW9pXw" name="ProblemConcernAct">
      <ownedComment xmi:id="_KPRpwCApEeGetMjKLkqR8g">
        <body>Observations of problems or other clinical statements captured at a point in time are wrapped in a &quot;Concern&quot; act, which represents the ongoing process tracked over time. This allows for binding related observations of problems. For example, the observation of &quot;Acute MI&quot; in 2004 can be related to the observation of &quot;History of MI&quot; in 2006 because they are the same concern. The conformance statements in this section define an outer &quot;problem act&quot; (representing the &quot;Concern&quot;) that can contain a nested &quot;problem observation&quot; or other nested clinical statements.</body>
      </ownedComment>
      <ownedRule xmi:id="_2IFKYxSVEeGGzu7fmW9pXw" name="ProblemConcernActEffectiveTimeLow">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IFKZBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_SxxO0Cf2EeGO5_JBy9h6BA" name="ProblemConcernActEffectiveTimeHigh" constrainedElement="_2IFKYxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8yiMCf2EeGO5_JBy9h6BA">
          <language>OCL</language>
          <body>not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAmdAGknEeGCCOsAP2C6Nw" name="ProblemConcernActTemplateId" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAmdAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAo5QGknEeGCCOsAP2C6Nw" name="ProblemConcernActClassCode" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAo5QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAqHYGknEeGCCOsAP2C6Nw" name="ProblemConcernActMoodCode" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAqucGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pArVgGknEeGCCOsAP2C6Nw" name="ProblemConcernActId" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pArVgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAtKsGknEeGCCOsAP2C6Nw" name="ProblemConcernActCode" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAtKsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'CONC' and value.codeSystem = '2.16.840.1.113883.5.6'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAvm8GknEeGCCOsAP2C6Nw" name="ProblemConcernActStatusCode" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAvm8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'active' or value.code = 'suspended' or value.code = 'aborted' or value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAw1EGknEeGCCOsAP2C6Nw" name="ProblemConcernActEffectiveTime" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAw1EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLpPYGknEeGCCOsAP2C6Nw" name="ProblemConcernActProblemObservation" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLpPYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2IINsxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pLp2cGknEeGCCOsAP2C6Nw" name="getProblemObservations" isQuery="true" bodyCondition="_pLp2c2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pLp2c2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pLp2cGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLp2dGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pLp2cWknEeGCCOsAP2C6Nw" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pLp2cmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2IJb0BSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocument">
      <ownedComment xmi:id="_2IJb0RSVEeGGzu7fmW9pXw" annotatedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <body>This section—Continuity of Care Document (CCD) Release 1.1—describes CDA constraints  in accordance with Stage 1 Meaningful Use. The CCD requirements in this guide supersede CCD Release 1; in the near future, this guide could supersede HITSP C32 .&#xD;
&#xD;
The CCD is a core data set of the most relevant administrative, demographic, and clinical information facts about a patient's healthcare, covering one or more healthcare encounters. It provides a means for one healthcare practitioner, system, or setting to aggregate all of the pertinent data about a patient and forward it to another practitioner, system, or setting to support the continuity of care. The primary use case for the CCD is to provide a snapshot in time containing the pertinent clinical, demographic, and administrative data for a specific patient . More specific use cases, such as a Discharge Summary or Progress Note, are available as alternative documents in this guide.</body>
      </ownedComment>
      <ownedRule xmi:id="_pAyqQGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAyqQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pA1GgGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCode" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pA1GgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '34133-9' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pA2UoGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentLanguageCode" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pA2UoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.languageCode.oclIsUndefined() or self.languageCode.isNullFlavorUndefined()) implies (not self.languageCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYpwoGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentDocumentationOf" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYpwoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYsM4GknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentAuthor" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYsM4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYuCEGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentAllergiesSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYuCEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYvQNGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentMedicationsSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYvQNWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYxFYGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentProblemSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYxFYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYyTgGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentProceduresSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYyTgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYzhpGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentResultsSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYzhpWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pY1W0GknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentAdvanceDirectivesSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY1W0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pY3MAGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentEncountersSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY3MAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pY4aIGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentFamilyHistorySection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY5BMGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pY6PUGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentFunctionalStatusSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY6PUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pY7ddWknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentImmunizationsSectionEntriesOptional" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY7ddmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pY9SoGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentMedicalEquipmentSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY9SoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pY-gxWknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentPayersSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY-gxmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZAV8GknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentPlanOfCareSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZAV8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZBkFWknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentSocialHistorySection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZCLIGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZDZQmknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentVitalSignsSectionEntriesOptional" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZDZQ2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfZR0GknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentDocumentationOfServiceEvent3PerformerAssignedEntityHasNationalProviderIdentifier" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfZR0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent.performer->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent.performer.assignedEntity->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent.performer.assignedEntity->forAll(id->exists(root='2.16.840.1.113883.4.6')) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfZ44GknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentDocumentationOfServiceEvent3PerformerAssignedEntityCode" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfZ44WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent.performer->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent.performer.assignedEntity->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent.performer.assignedEntity->forAll((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = code.oclAsType(datatypes::CE) in (&#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfaf8GknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentDocumentationOfServiceEvent3PerformerAssignedEntityId" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfaf8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent.performer->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent.performer.assignedEntity->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent.performer.assignedEntity->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfbHAGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentDocumentationOfServiceEvent3PerformerTypeCode" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfbuEGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent.performer->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent.performer->forAll(typeCode=vocab::x_ServiceEventPerformer::PRF) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfcVIGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentDocumentationOfServiceEvent3PerformerAssignedEntity" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfcVIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent.performer->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent.performer->forAll(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfc8MGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentDocumentationOfServiceEvent3EffectiveTimeLow" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfc8MWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll(not effectiveTime.low.oclIsUndefined()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfdjQGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentDocumentationOfServiceEvent3EffectiveTimeHigh" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfdjQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll(not effectiveTime.high.oclIsUndefined()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfeKUGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentDocumentationOfServiceEvent3ClassCode" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfeKUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll(classCode=vocab::ActClassRoot::PCPR) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfexYGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentDocumentationOfServiceEvent3EffectiveTime" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfexYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pffYcGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentDocumentationOfServiceEvent3Performer" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pffYcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfgmkGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentDocumentationOfServiceEvent" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfgmkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) then self.documentationOf->forAll(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfibwGknEeGCCOsAP2C6Nw" name="ContinuityOfCareDocumentAuthorAssignedAuthor3" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfibwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.author->exists(not oclIsUndefined()) then self.author->forAll(assignedAuthor->one(assignedAuthor : cda::AssignedAuthor | not assignedAuthor.oclIsUndefined() and assignedAuthor.oclIsKindOf(cda::AssignedAuthor))) else true endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PQJchSVEeGGzu7fmW9pXw" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_pYupIGknEeGCCOsAP2C6Nw" name="getAllergiesSection" isQuery="true" bodyCondition="_pYvQMmknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pYvQMmknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pYupIGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYvQM2knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->first().oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pYvQMGknEeGCCOsAP2C6Nw" type="_2LMIwBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pYvQMWknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pYweUGknEeGCCOsAP2C6Nw" name="getMedicationsSection" isQuery="true" bodyCondition="_pYweU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pYweU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pYweUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYweVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->first().oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pYweUWknEeGCCOsAP2C6Nw" type="_2NIpgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pYweUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pYxscGknEeGCCOsAP2C6Nw" name="getProblemSection" isQuery="true" bodyCondition="_pYxsc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pYxsc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pYxscGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYxsdGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->first().oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pYxscWknEeGCCOsAP2C6Nw" type="_2LSPYBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pYxscmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pYy6kGknEeGCCOsAP2C6Nw" name="getProceduresSection" isQuery="true" bodyCondition="_pYzhomknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pYzhomknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pYy6kGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYzho2knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->first().oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pYzhoGknEeGCCOsAP2C6Nw" type="_2OAzQRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pYzhoWknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pY0vwGknEeGCCOsAP2C6Nw" name="getResultsSection" isQuery="true" bodyCondition="_pY0vw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pY0vw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pY0vwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY0vxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->first().oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pY0vwWknEeGCCOsAP2C6Nw" type="_2Js7AxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pY0vwmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pY2k8GknEeGCCOsAP2C6Nw" name="getAdvanceDirectivesSection" isQuery="true" bodyCondition="_pY2k82knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pY2k82knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pY2k8GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY2k9GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSection))->asSequence()->first().oclAsType(consol::AdvanceDirectivesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pY2k8WknEeGCCOsAP2C6Nw" type="_2KgzUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pY2k8mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pY3zEGknEeGCCOsAP2C6Nw" name="getEncountersSection" isQuery="true" bodyCondition="_pY3zE2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pY3zE2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pY3zEGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY3zFGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection))->asSequence()->first().oclAsType(consol::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pY3zEWknEeGCCOsAP2C6Nw" type="_2LWg0BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pY3zEmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pY5oQGknEeGCCOsAP2C6Nw" name="getFamilyHistorySection" isQuery="true" bodyCondition="_pY5oQ2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pY5oQ2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pY5oQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY5oRGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->first().oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pY5oQWknEeGCCOsAP2C6Nw" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pY5oQmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pY7dcGknEeGCCOsAP2C6Nw" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_pY7dc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pY7dc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pY7dcGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY7ddGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->first().oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pY7dcWknEeGCCOsAP2C6Nw" type="_2KKOBhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pY7dcmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pY8rkGknEeGCCOsAP2C6Nw" name="getImmunizationsSectionEntriesOptional" isQuery="true" bodyCondition="_pY8rk2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pY8rk2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pY8rkGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY8rlGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pY8rkWknEeGCCOsAP2C6Nw" type="_EuPloBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pY8rkmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pY-gwGknEeGCCOsAP2C6Nw" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="_pY-gw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pY-gw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pY-gwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY-gxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))->asSequence()->first().oclAsType(consol::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pY-gwWknEeGCCOsAP2C6Nw" type="_2KEucBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pY-gwmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pY_u4GknEeGCCOsAP2C6Nw" name="getPayersSection" isQuery="true" bodyCondition="_pY_u42knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pY_u42knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pY_u4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pY_u5GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection))->asSequence()->first().oclAsType(consol::PayersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pY_u4WknEeGCCOsAP2C6Nw" type="_2MV_UBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pY_u4mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pZBkEGknEeGCCOsAP2C6Nw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_pZBkE2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pZBkE2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pZBkEGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZBkFGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pZBkEWknEeGCCOsAP2C6Nw" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pZBkEmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pZCyMGknEeGCCOsAP2C6Nw" name="getSocialHistorySection" isQuery="true" bodyCondition="_pZDZQGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pZDZQGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pZCyMGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZDZQWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->first().oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pZCyMWknEeGCCOsAP2C6Nw" type="_2JKvgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pZCyMmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pZEnYGknEeGCCOsAP2C6Nw" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_pZEnY2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pZEnY2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pZEnYGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZEnZGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pZEnYWknEeGCCOsAP2C6Nw" type="_bRH8sBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pZEnYmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2IWQIxSVEeGGzu7fmW9pXw" name="FamilyHistorySection">
      <ownedComment xmi:id="_2JJhYBSVEeGGzu7fmW9pXw" annotatedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <body>This section contains data defining the patient's genetic relatives in terms of possible or relevant health risk factors that have a potential impact on the patient's healthcare risk profile.</body>
      </ownedComment>
      <ownedRule xmi:id="_pBBTwWknEeGCCOsAP2C6Nw" name="FamilyHistorySectionTemplateId" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBBTwmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.15')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBDI8GknEeGCCOsAP2C6Nw" name="FamilyHistorySectionCode" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBDI8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10157-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBE-IGknEeGCCOsAP2C6Nw" name="FamilyHistorySectionTitle" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBE-IWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBFlMGknEeGCCOsAP2C6Nw" name="FamilyHistorySectionText" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBFlMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBGzUGknEeGCCOsAP2C6Nw" name="FamilyHistorySectionFamilyHistory" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBGzUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FamilyHistoryOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2JJhYhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pBIBcGknEeGCCOsAP2C6Nw" name="getFamilyHistories" isQuery="true" bodyCondition="_pBIBc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pBIBc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pBIBcGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBIBdGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::FamilyHistoryOrganizer)).oclAsType(consol::FamilyHistoryOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pBIBcWknEeGCCOsAP2C6Nw" type="_2IbIoBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pBIBcmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2IbIoBSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizer">
      <ownedComment xmi:id="_nxLqwCEhEeGCQOQgxKvcXw">
        <body>The Family History Oranizer associates a set of observations with a family member. For example, the Family History Organizer can group a set of observations about the patient's father.</body>
      </ownedComment>
      <ownedRule xmi:id="_pBIBdWknEeGCCOsAP2C6Nw" name="FamilyHistoryOrganizerTemplateId" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBIogGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBJ2oGknEeGCCOsAP2C6Nw" name="FamilyHistoryOrganizerClassCode" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBJ2oWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryOrganizer::CLUSTER</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBLEwGknEeGCCOsAP2C6Nw" name="FamilyHistoryOrganizerMoodCode" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBLEwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBcKgGknEeGCCOsAP2C6Nw" name="FamilyHistoryOrganizerFamilyHistoryObservation" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBcKgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::FamilyHistoryObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPPV8GknEeGCCOsAP2C6Nw" name="FamilyHistoryOrganizerSubject" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPP9AGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.subject->one(subject : cda::Subject | not subject.oclIsUndefined() and subject.oclIsKindOf(cda::Subject))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2JHFIBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_pBcxkGknEeGCCOsAP2C6Nw" name="getFamilyHistoryObservations" isQuery="true" bodyCondition="_pBdYomknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pBdYomknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pBcxkGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBdYo2knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FamilyHistoryObservation)).oclAsType(consol::FamilyHistoryObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pBdYoGknEeGCCOsAP2C6Nw" type="_2IpyIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pBdYoWknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2IpyIxSVEeGGzu7fmW9pXw" name="FamilyHistoryObservation">
      <ownedComment xmi:id="_nCE7QCHgEeGFLIX-2_sWzA">
        <body>Family History Observations related to a particular family member are contained within a Family History Organizer. The effectiveTime in the Family History Observation is the biologically or clinically relevant time of the observation. The biologically or clinically relevant time is the time at which the observation holds (is effective) for the family member (the subject of the observation).</body>
      </ownedComment>
      <ownedRule xmi:id="_web2ECHiEeGFLIX-2_sWzA" name="FamilyHistoryObservationAgeObservationInversion" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_663_wCHiEeGFLIX-2_sWzA">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsKindOf(consol::AgeObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBMS4GknEeGCCOsAP2C6Nw" name="FamilyHistoryObservationTemplateId" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBMS4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.46')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBOvIGknEeGCCOsAP2C6Nw" name="FamilyHistoryObservationClassCode" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBOvIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBP9QGknEeGCCOsAP2C6Nw" name="FamilyHistoryObservationMoodCode" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBP9QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBRLYGknEeGCCOsAP2C6Nw" name="FamilyHistoryObservationId" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBRLYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBTAkGknEeGCCOsAP2C6Nw" name="FamilyHistoryObservationCode" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBTAkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '404684003' or value.code = '409586006' or value.code = '282291009' or value.code = '64572001' or value.code = '248536006' or value.code = '418799008' or value.code = '55607006')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBVc0GknEeGCCOsAP2C6Nw" name="FamilyHistoryObservationStatusCode" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBVc0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBWq8GknEeGCCOsAP2C6Nw" name="FamilyHistoryObservationEffectiveTime" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBWq8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBZHMGknEeGCCOsAP2C6Nw" name="FamilyHistoryObservationValue" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBZHMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBa8YGknEeGCCOsAP2C6Nw" name="FamilyHistoryObservationAgeObservation" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBa8YWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLrrpWknEeGCCOsAP2C6Nw" name="FamilyHistoryObservationFamilyHistoryDeathObservation" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLrrpmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::FamilyHistoryDeathObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2I5CsRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pBbjcGknEeGCCOsAP2C6Nw" name="getAgeObservation" isQuery="true" bodyCondition="_pBbjc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pBbjc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pBbjcGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBbjdGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AgeObservation))->asSequence()->first().oclAsType(consol::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pBbjcWknEeGCCOsAP2C6Nw" type="_2EqqABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pBbjcmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pLs5wGknEeGCCOsAP2C6Nw" name="getFamilyHistoryDeathObservation" isQuery="true" bodyCondition="_pLs5w2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pLs5w2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pLs5wGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLs5xGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FamilyHistoryDeathObservation))->asSequence()->first().oclAsType(consol::FamilyHistoryDeathObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pLs5wWknEeGCCOsAP2C6Nw" type="_2SC-sBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pLs5wmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2JKvgBSVEeGGzu7fmW9pXw" name="SocialHistorySection">
      <ownedComment xmi:id="_LJ4sMDyWEeGOm9opnDhYAQ">
        <body>This section contains data defining the patient's occupational, personal (e.g. lifestyle), social, and environmental history and health risk factors, as well as administrative data such as marital status, race, ethnicity and religious affiliation. Social history can have significant influence on a patient's physical, psychological and emotional health and wellbeing so should be considered in the development of a complete record.</body>
      </ownedComment>
      <ownedRule xmi:id="_pBdYpGknEeGCCOsAP2C6Nw" name="SocialHistorySectionTemplateId" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBdYpWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBf04GknEeGCCOsAP2C6Nw" name="SocialHistorySectionCode" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBf04WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '29762-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBhDAGknEeGCCOsAP2C6Nw" name="SocialHistorySectionTitle" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBhDAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBiRIGknEeGCCOsAP2C6Nw" name="SocialHistorySectionText" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBiRIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBjfQGknEeGCCOsAP2C6Nw" name="SocialHistorySectionSocialHistoryObservation" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBjfQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SocialHistoryObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMJlsGknEeGCCOsAP2C6Nw" name="SocialHistorySectionPregnancyObservation" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMJlsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PregnancyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Jrs4hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pBktYGknEeGCCOsAP2C6Nw" name="getSocialHistoryObservations" isQuery="true" bodyCondition="_pBktY2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pBktY2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pBktYGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBktZGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SocialHistoryObservation)).oclAsType(consol::SocialHistoryObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pBktYWknEeGCCOsAP2C6Nw" type="_2JOZ4BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pBktYmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pMKz0GknEeGCCOsAP2C6Nw" name="getPregnancyObservations" isQuery="true" bodyCondition="_pMKz02knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pMKz02knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pMKz0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMKz1GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PregnancyObservation)).oclAsType(consol::PregnancyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pMKz0WknEeGCCOsAP2C6Nw" type="_2N6soBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pMKz0mknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2JOZ4BSVEeGGzu7fmW9pXw" name="SocialHistoryObservation">
      <ownedComment xmi:id="_fG0UsDyWEeGOm9opnDhYAQ">
        <body>This Social History Observation defines the patient's occupational, personal (e.g., lifestyle), social, and environmental history and health risk factors, as well as administrative data such as marital status, race, ethnicity, and religious affiliation.</body>
      </ownedComment>
      <ownedRule xmi:id="_L9YKgBtsEeGT89b80j3MTg" name="SocialHistoryObservationOriginalText" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nzLzwBtsEeGT89b80j3MTg">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined() implies not self.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_4G8WIBtsEeGT89b80j3MTg" name="SocialHistoryObservationReference" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_79Cd8BtsEeGT89b80j3MTg">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined() implies not self.code.originalText.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_O-ANcBttEeGT89b80j3MTg" name="SocialHistoryObservationReferenceValue" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aUIYMBttEeGT89b80j3MTg">
          <language>OCL</language>
          <body>not self.getSection().text.getText(self.code.originalText.reference.value.substring(2, self.code.originalText.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBktZWknEeGCCOsAP2C6Nw" name="SocialHistoryObservationTemplateId" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBktZmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBoXwGknEeGCCOsAP2C6Nw" name="SocialHistoryObservationClassCode" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBoXwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBpl4GknEeGCCOsAP2C6Nw" name="SocialHistoryObservationMoodCode" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBpl4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBq0AGknEeGCCOsAP2C6Nw" name="SocialHistoryObservationId" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBq0AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBspMGknEeGCCOsAP2C6Nw" name="SocialHistoryObservationCode" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBspMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '160573003' or value.code = '363908000' or value.code = '364703007' or value.code = '256235009' or value.code = '228272008' or value.code = '364393001' or value.code = '229819007' or value.code = '425400000')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pCzccGknEeGCCOsAP2C6Nw" name="SocialHistoryObservationStatusCode" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pCzccWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pC0qkGknEeGCCOsAP2C6Nw" name="SocialHistoryObservationValue" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pC1RoGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Jii8hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Js7AxSVEeGGzu7fmW9pXw" name="ResultsSection">
      <ownedComment xmi:id="_XjcvMDr8EeGVevaNZNc6DA">
        <body>The Results section contains the results of observations generated by laboratories, imaging procedures, and other procedures. The scope includes observations such as hematology, chemistry, serology, virology, toxicology, microbiology, plain x-ray, ultrasound, CT, MRI, angiography, echocardiography, nuclear medicine, pathology, and procedure observations. The section often includes notable results such as abnormal values or relevant trends, and could contain all results for the period of time being documented.&#xD;
Laboratory results are typically generated by laboratories providing analytic services in areas such as chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These observations are based on analysis of specimens obtained from the patient and submitted to the laboratory.&#xD;
Imaging results are typically generated by a clinician reviewing the output of an imaging procedure, such as where a cardiologist reports the left ventricular ejection fraction based on the review of a cardiac echocardiogram.&#xD;
Procedure results are typically generated by a clinician to provide more granular information about component observations made during  a procedure, such as where a gastroenterologist reports the size of a polyp observed during a colonoscopy.</body>
      </ownedComment>
      <ownedRule xmi:id="_pC2fwGknEeGCCOsAP2C6Nw" name="ResultsSectionEntriesOptionalTemplateId" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pC2fwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.3.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pC4U8GknEeGCCOsAP2C6Nw" name="ResultsSectionEntriesOptionalCode" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pC4U8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '30954-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pC6KIGknEeGCCOsAP2C6Nw" name="ResultsSectionTitle" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pC6KIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pC7YQGknEeGCCOsAP2C6Nw" name="ResultsSectionText" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pC7YQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPJPUGknEeGCCOsAP2C6Nw" name="ResultsSectionResultOrganizer" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPJPUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::ResultOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ksO6UBVgEeGQCvUGzi1kDQ" general="_xGqiEBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_pPKdcGknEeGCCOsAP2C6Nw" name="getConsolResultOrganizers" isQuery="true" bodyCondition="_pPKdc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pPKdc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pPKdcGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPKddGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::ResultOrganizer)).oclAsType(consol::ResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pPKdcWknEeGCCOsAP2C6Nw" type="_2JxzgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pPKdcmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2JxzgBSVEeGGzu7fmW9pXw" name="ResultOrganizer">
      <ownedComment xmi:id="_MrZPsCvWEeGz1sWhj323cg">
        <body>&lt;p>
This clinical statement identifies set of result observations. It contains information applicable to all of the contained result observations. Result type codes categorize a result into one of several commonly accepted values (e.g., &quot;Hematology&quot;, &quot;Chemistry&quot;, &quot;Nuclear Medicine&quot;). These values are often implicit in the Organizer/code (e.g., an Organizer/code of &quot;complete blood count&quot; implies a ResultTypeCode of &quot;Hematology&quot;). This template requires Organizer/code to include a ResultTypeCode either directly or as a translation of a code from some other code system.
&lt;/p>

&lt;p>
An appropriate nullFlavor can be used when a single result observation is contained in the organizer, and organizer/code or organizer/id is unknown.
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2J_O4BSVEeGGzu7fmW9pXw" name="ResultOrganizerCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2J_O4RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.1' xor self.code.codeSystem = '2.16.840.1.113883.6.96' xor self.code.codeSystem = '2.16.840.1.113883.6.12'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1dxCgBtuEeG4C_iCHrZZ9w" name="ResultOrganizerClassCodeValue" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kVC0BtuEeG4C_iCHrZZ9w">
          <language>OCL</language>
          <body>self.isClassCodeDefined() and (self.classCode = vocab::x_ActClassDocumentEntryOrganizer::CLUSTER or self.classCode = vocab::x_ActClassDocumentEntryOrganizer::BATTERY)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pC8mYGknEeGCCOsAP2C6Nw" name="ResultOrganizerTemplateId" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pC8mYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDCF8GknEeGCCOsAP2C6Nw" name="ResultOrganizerId" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDCF8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDD7IGknEeGCCOsAP2C6Nw" name="ResultOrganizerStatusCode" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDEiMGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDFwUGknEeGCCOsAP2C6Nw" name="ResultOrganizerCode" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDFwUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDG-cGknEeGCCOsAP2C6Nw" name="ResultOrganizerResultObservation" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDG-cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::ResultObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2KCSNBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_pDHlgGknEeGCCOsAP2C6Nw" name="getResultObservations" isQuery="true" bodyCondition="_pDIMkmknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pDIMkmknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pDHlgGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDIMk2knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ResultObservation)).oclAsType(consol::ResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pDIMkGknEeGCCOsAP2C6Nw" type="_2J1d4BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pDIMkWknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2J1d4BSVEeGGzu7fmW9pXw" name="ResultObservation">
      <ownedComment xmi:id="_JIcp4CXiEeGmGonM_wRfcQ">
        <body>This clinical statement represents details of a lab, radiology, or other study performed on a patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_tjUmsB7rEeGaOZtrEokzNQ" name="ResultObservationTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1j5x8B7rEeGaOZtrEokzNQ">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies not self.text.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_sq16gDsOEeGVevaNZNc6DA" name="ResultObservationTextReferenceValue" constrainedElement="_tjUmsB7rEeGaOZtrEokzNQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wwPCkDsOEeGVevaNZNc6DA">
          <language>OCL</language>
          <body>not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2J69cBSVEeGGzu7fmW9pXw" name="ResultObservationCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2J69cRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.1' xor self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXJw0B7vEeGDhvvzMMgVgQ" name="ResultObservationNoObservationRangeCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2eEXUB7vEeGDhvvzMMgVgQ">
          <language>OCL</language>
          <body>self.referenceRange->forAll(range : cda::ReferenceRange | range.observationRange.code.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OYDHUB-4EeGZsIzHpWxp_Q" name="ResultObservationAuthorMultiplicity" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_UtV1cB-4EeGZsIzHpWxp_Q">
          <language>OCL</language>
          <body>self.author->size()&lt;2</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDIMlGknEeGCCOsAP2C6Nw" name="ResultObservationTemplateId" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDIMlWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDQIYGknEeGCCOsAP2C6Nw" name="ResultObservationId" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDQIYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDRWgGknEeGCCOsAP2C6Nw" name="ResultObservationCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDRWgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDSkoGknEeGCCOsAP2C6Nw" name="ResultObservationText" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDSkoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDVA4GknEeGCCOsAP2C6Nw" name="ResultObservationStatusCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDVA4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDWPAGknEeGCCOsAP2C6Nw" name="ResultObservationEffectiveTime" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDWPAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDXdIGknEeGCCOsAP2C6Nw" name="ResultObservationValue" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDXdIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDYrQGknEeGCCOsAP2C6Nw" name="ResultObservationInterpretationCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDYrQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDZ5YGknEeGCCOsAP2C6Nw" name="ResultObservationMethodCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDZ5YWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDbHgGknEeGCCOsAP2C6Nw" name="ResultObservationTargetSiteCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDbHgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | element.oclIsTypeOf(datatypes::CE)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2J-AwRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KEucBSVEeGGzu7fmW9pXw" name="MedicalEquipmentSection">
      <ownedComment xmi:id="_6K0pUDh_EeGSytqLITd2FA">
        <body>The Medical Equipment section defines a patient's implanted and external medical devices and equipment that their health status depends on, as well as any pertinent equipment or device history. This section is also used to itemize any pertinent current or historical durable medical equipment (DME) used to help maintain the patient's health status. All pertinent equipment relevant to the diagnosis, care, and treatment of a patient should be included.</body>
      </ownedComment>
      <ownedRule xmi:id="_pDcVoGknEeGCCOsAP2C6Nw" name="MedicalEquipmentSectionTemplateId" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDcVoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.23')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDeK0GknEeGCCOsAP2C6Nw" name="MedicalEquipmentSectionCode" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDeK0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '46264-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDgAAGknEeGCCOsAP2C6Nw" name="MedicalEquipmentSectionTitle" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDgAAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDhOIGknEeGCCOsAP2C6Nw" name="MedicalEquipmentSectionText" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDhOIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDicQGknEeGCCOsAP2C6Nw" name="MedicalEquipmentSectionNonMedicinalSupplyActivity" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDicQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2KJm8hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pDjqYGknEeGCCOsAP2C6Nw" name="getNonMedicinalSupplyActivities" isQuery="true" bodyCondition="_pDjqY2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pDjqY2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pDjqYGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDjqZGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity)).oclAsType(consol::NonMedicinalSupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pDjqYWknEeGCCOsAP2C6Nw" type="_2HIvMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pDjqYmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KKOBhSVEeGGzu7fmW9pXw" name="FunctionalStatusSection">
      <ownedComment xmi:id="_2KTX8xSVEeGGzu7fmW9pXw" annotatedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
    &lt;i>Functional Status&lt;/i> describes the patient's status of normal functioning at the time the Care Record&#xD;
    was created. Functional statuses include information regarding the patient relative to:&#xD;
&lt;/p>&#xD;
&#xD;
    &lt;ul>&lt;li>Ambulatory ability&lt;/li>&#xD;
       &lt;li>Mental status or competency&lt;/li>&#xD;
        &lt;li>Activities of Daily Living (ADLs), including bathing, dressing, feeding, grooming&lt;/li>&#xD;
        &lt;li>Home / living situation having an effect on the health status of the patient&lt;/li>&#xD;
        &lt;li>Ability to care for self&lt;/li>&#xD;
        &lt;li>Social activity, including issues with social cognition, participation with&#xD;
        friends and acquaintances other than family members&lt;/li>&#xD;
       &lt;li>Occupation activity, including activities partly or directly related to working, housework or volunteering, family&#xD;
        and home responsibilities or activities related to home and family&lt;/li>&#xD;
      &lt;li>Communication ability, including issues with speech, writing or cognition required for communication&lt;/li>&#xD;
       &lt;li> Perception, including sight, hearing, taste, skin sensation, kinesthetic sense, proprioception, or&#xD;
        balance&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Any&#xD;
    deviation from normal function that the patient displays and is recorded in the record should be included. Of&#xD;
    particular interest are those limitations that would in any way interfere with self care or the medical therapeutic&#xD;
    process. In addition, an improvement, any change in or noting that the patient has normal functioning status is also&#xD;
    valid for inclusion.&#xD;
&lt;/p>&#xD;
&lt;p>Functional Statuses can be expressed in 3 different forms. They can occur as a Problem, a Result or as text. Text can be employed if and only if the Functional Status is neither a Problem nor a Result. Functional Statuses expressed as Problems include relevant clinical conditions, diagnoses, symptoms and findings. Results are the interpretation or conclusion derived from a clinical assessment or test battery, such as the Instrumental Activities of Daily Living (IADL) scale or the Functional Status Index (FSI).&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_pDjqZWknEeGCCOsAP2C6Nw" name="FunctionalStatusSectionTemplateId" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDjqZmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDmGoGknEeGCCOsAP2C6Nw" name="FunctionalStatusSectionCode" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDmGoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '47420-5' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDnUwGknEeGCCOsAP2C6Nw" name="FunctionalStatusSectionTitle" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDnUwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDoi4GknEeGCCOsAP2C6Nw" name="FunctionalStatusSectionText" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDoi4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLtg0GknEeGCCOsAP2C6Nw" name="FunctionalStatusSectionProblemObservation" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLtg0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLuu8GknEeGCCOsAP2C6Nw" name="FunctionalStatusSectionResultObservation" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLuu8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ResultObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2KT_ABSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pLuH4GknEeGCCOsAP2C6Nw" name="getProblemObservations" isQuery="true" bodyCondition="_pLuH42knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pLuH42knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pLuH4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLuH5GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pLuH4WknEeGCCOsAP2C6Nw" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pLuH4mknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pLv9EGknEeGCCOsAP2C6Nw" name="getResultObservations" isQuery="true" bodyCondition="_pLv9E2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pLv9E2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pLv9EGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLv9FGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ResultObservation)).oclAsType(consol::ResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pLv9EWknEeGCCOsAP2C6Nw" type="_2J1d4BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pLv9EmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KgzUBSVEeGGzu7fmW9pXw" name="AdvanceDirectivesSection">
      <ownedRule xmi:id="_pDpxAWknEeGCCOsAP2C6Nw" name="AdvanceDirectivesSectionEntriesOptionalTemplateId" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDqYEGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.21.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDs0UGknEeGCCOsAP2C6Nw" name="AdvanceDirectivesSectionEntriesOptionalCode" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDs0UWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '42348-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDuCcGknEeGCCOsAP2C6Nw" name="AdvanceDirectivesSectionTitle" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDuCcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDvQkGknEeGCCOsAP2C6Nw" name="AdvanceDirectivesSectionText" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDvQkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDwesGknEeGCCOsAP2C6Nw" name="AdvanceDirectivesSectionAdvanceDirectiveObservation" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDwesWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AdvanceDirectiveObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_8UhPsBVfEeGQCvUGzi1kDQ" general="_1RZdIBVdEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_94HnEEFqEeGleIzZ12qTpQ">
          <body>couple</body>
        </ownedComment>
      </generalization>
      <ownedOperation xmi:id="_pDxs0GknEeGCCOsAP2C6Nw" name="getConsolAdvanceDirectiveObservations" isQuery="true" bodyCondition="_pDxs02knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pDxs02knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pDxs0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDxs1GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AdvanceDirectiveObservation)).oclAsType(consol::AdvanceDirectiveObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pDxs0WknEeGCCOsAP2C6Nw" type="_2KlEwBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pDxs0mknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KlEwBSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservation">
      <ownedComment xmi:id="_N7l9YCwEEeGs-ue-ukBpXg">
        <body>Advance Directives Observatations assert findings (e.g., &quot;resuscitation status is Full Code&quot;) rather than orders, and should not be considered legal documents. A legal document can be referenced using the reference/externalReference construct.</body>
      </ownedComment>
      <ownedRule xmi:id="_2KlExRSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationHasStartingTime" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KlExhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.effectiveTime.low.hasContent()  or self.effectiveTime.low.isNullFlavorDefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KlEyhSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationHasEndingTime" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KlEyxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.effectiveTime.high.hasContent() or self.effectiveTime.high.isNullFlavorDefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDxs1WknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationTemplateId" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDxs1mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.48')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pD0wIGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationClassCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pD0wIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pD2lUGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationMoodCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pD2lUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pD3MYGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationId" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pD3MYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pD5ooGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pD5ooWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '281789004' or value.code = '89666000' or value.code = '225204009' or value.code = '52765003' or value.code = '78823007' or value.code = '304251008')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pD7d0GknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationStatusCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pD8E4GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pD9TAGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationEffectiveTime" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pD9TAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQO0cGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationVerifier" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQO0cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQR3wGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationCustodian" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQR3wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQTF4GknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationReference" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQTF4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.reference->exists(reference : cda::Reference | not reference.oclIsUndefined() and reference.oclIsKindOf(cda::Reference))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdcxEGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationVerifierTime" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdcxEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::VRF)->forAll((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pddYIGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationVerifierTypeCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pddYIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::VRF)->forAll(isDefined('typeCode')) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdd_MGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationVerifierParticipantRole" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdd_MWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::VRF)->forAll(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(rim::Role))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdgbcGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdgbcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) and self.participant.participantRole->exists(not oclIsUndefined()) and self.participant.participantRole.playingEntity->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::CST).participantRole.playingEntity->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdgbcmknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationCustodianCustodianRoleAddr" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdgbc2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) and self.participant.participantRole->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::CST).participantRole->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdhCgGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationCustodianCustodianRoleClassCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdhCgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) and self.participant.participantRole->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::CST).participantRole->forAll(classCode=vocab::RoleClassRoot::ROL) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdhpkGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationCustodianCustodianRoleTelecom" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdhpkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) and self.participant.participantRole->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::CST).participantRole->forAll((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdiQoGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationCustodianCustodianRolePlayingEntity" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdiQoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) and self.participant.participantRole->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::CST).participantRole->forAll(playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(cda::PlayingEntity))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdi3sGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationCustodianTypeCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdi3sWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::CST)->forAll(typeCode=vocab::ParticipationType::CST) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdjewGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationCustodianAdvanceDirectiveObservationCustodianRole" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdjewWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::CST)->forAll(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdlT8GknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationReferenceExternalDocumentId" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdlT8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.reference->exists(not oclIsUndefined()) and self.reference.externalDocument->exists(not oclIsUndefined()) then self.reference.externalDocument->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdl7AGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationReferenceExternalDocumentText" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdl7AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.reference->exists(not oclIsUndefined()) and self.reference.externalDocument->exists(not oclIsUndefined()) then self.reference.externalDocument->forAll((text.oclIsUndefined() or text.isNullFlavorUndefined()) implies (not text.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pdmiEGknEeGCCOsAP2C6Nw" name="AdvanceDirectiveObservationReferenceExternalDocument" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pdmiEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.reference->exists(not oclIsUndefined()) then self.reference->forAll(externalDocument->one(externalDocument : cda::ExternalDocument | not externalDocument.oclIsUndefined() and externalDocument.oclIsKindOf(cda::ExternalDocument))) else true endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2LGpMRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LMIwBSVEeGGzu7fmW9pXw" name="AllergiesSection">
      <ownedComment xmi:id="_2LRBQRSVEeGGzu7fmW9pXw" annotatedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <body>This section lists and describes any medication allergies, adverse reactions, idiosyncratic reactions, anaphylaxis/anaphylactoid reactions to food items, and metabolic variations or adverse reactions/allergies to other substances (such as latex, iodine, tape adhesives) used to assure the safety of health care delivery. At a minimum, it should list currently active and any relevant historical allergies and adverse reactions.</body>
      </ownedComment>
      <ownedRule xmi:id="_pEL8gWknEeGCCOsAP2C6Nw" name="AllergiesSectionEntriesOptionalTemplateId" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEL8gmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEOYwGknEeGCCOsAP2C6Nw" name="AllergiesSectionEntriesOptionalCode" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEOYwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEQN8GknEeGCCOsAP2C6Nw" name="AllergiesSectionTitle" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEQN8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEQ1AGknEeGCCOsAP2C6Nw" name="AllergiesSectionText" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEQ1AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pESDIGknEeGCCOsAP2C6Nw" name="AllergiesSectionAllergyProblemAct" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pESDIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EEbhsBVgEeGQCvUGzi1kDQ" general="_bGzYgBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_pETRQGknEeGCCOsAP2C6Nw" name="getConsolAllergyProblemActs" isQuery="true" bodyCondition="_pETRQ2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pETRQ2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pETRQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pETRRGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AllergyProblemAct)).oclAsType(consol::AllergyProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pETRQWknEeGCCOsAP2C6Nw" type="_2EAisBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pETRQmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LSPYBSVEeGGzu7fmW9pXw" name="ProblemSection">
      <ownedComment xmi:id="_hb8PkCAnEeGetMjKLkqR8g">
        <body>This section lists and describes all relevant clinical problems at the time the document is generated. At a minimum, all pertinent current and historical problems should be listed.</body>
      </ownedComment>
      <ownedRule xmi:id="_pET4UWknEeGCCOsAP2C6Nw" name="ProblemSectionEntriesOptionalTemplateId" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pET4UmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.5.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEWUkGknEeGCCOsAP2C6Nw" name="ProblemSectionEntriesOptionalCode" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEWUkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11450-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEXisGknEeGCCOsAP2C6Nw" name="ProblemSectionText" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEXisWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEYw0GknEeGCCOsAP2C6Nw" name="ProblemSectionTitle" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEYw0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLW7gWknEeGCCOsAP2C6Nw" name="ProblemSectionProblemConcern" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLW7gmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProblemConcernAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_blmF8BVgEeGQCvUGzi1kDQ" general="_naxrkBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_pLYJoGknEeGCCOsAP2C6Nw" name="getConsolProblemConcerns" isQuery="true" bodyCondition="_pLYJo2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pLYJo2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pLYJoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLYJpGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct)).oclAsType(consol::ProblemConcernAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pLYJoWknEeGCCOsAP2C6Nw" type="_2H6yUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pLYJomknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LWg0BSVEeGGzu7fmW9pXw" name="EncountersSection">
      <ownedComment xmi:id="_2L7IkBSVEeGGzu7fmW9pXw" annotatedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <body>This section lists and describes any healthcare encounters pertinent to the patient's current health status or historical health history. An Encounter is an interaction, regardless of the setting, between a patient and a practitioner who is vested with primary responsibility for diagnosing, evaluating, or treating the patient's condition. It may include visits, appointments, as well as non face-to-face interactions. It is also a contact between a patient and a practitioner who has primary responsibility for assessing and treating the patient at a given contact, exercising independent judgment. This section may contain all encounters for the time period being summarized, but should include notable encounters.</body>
      </ownedComment>
      <ownedRule xmi:id="_pEZ-8WknEeGCCOsAP2C6Nw" name="EncountersSectionEntriesOptionalTemplateId" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEZ-8mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.22.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEcbMGknEeGCCOsAP2C6Nw" name="EncountersSectionEntriesOptionalCode" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEcbMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '46240-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEdpUGknEeGCCOsAP2C6Nw" name="EncountersSectionText" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEeQYGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEfegGknEeGCCOsAP2C6Nw" name="EncountersSectionTitle" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEfegWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRDT0GknEeGCCOsAP2C6Nw" name="EncountersSectionEncounterActivities" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRDT0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::EncounterActivities))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KVkvoBVgEeGQCvUGzi1kDQ" general="_4yj2wBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_pRD64GknEeGCCOsAP2C6Nw" name="getConsolEncounterActivitiess" isQuery="true" bodyCondition="_pREh8GknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pREh8GknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pRD64GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pREh8WknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::EncounterActivities)).oclAsType(consol::EncounterActivities)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pRD64WknEeGCCOsAP2C6Nw" type="_2LayQBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pRD64mknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LayQBSVEeGGzu7fmW9pXw" name="EncounterActivities">
      <ownedComment xmi:id="_PZy1MCwOEeGKLc4ckmfDag">
        <body>This clinical statement describes the interactions between the patient and clinicians. Interactions include in-person encounters, telephone conversations, and email exchanges.</body>
      </ownedComment>
      <ownedRule xmi:id="_a_2b4CwaEeGKLc4ckmfDag" name="EncounterActivitiesCodeOriginalText" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_dbyS0CwaEeGKLc4ckmfDag">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fTZ7wCwaEeGKLc4ckmfDag" name="EncounterActivitiesCodeOriginalTextReference" constrainedElement="_a_2b4CwaEeGKLc4ckmfDag">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h1T30CwaEeGKLc4ckmfDag">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined() implies not self.code.originalText.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ktatYCwaEeGKLc4ckmfDag" name="EncounterActivitiesCodeOriginalTextReferenceValue" constrainedElement="_fTZ7wCwaEeGKLc4ckmfDag">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m7qtoCwaEeGKLc4ckmfDag">
          <language>OCL</language>
          <body>not self.getSection().text.getText(self.code.originalText.reference.value.substring(2, self.code.originalText.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EywuoCwaEeGKLc4ckmfDag" name="EncounterActivitiesServiceDeliveryTypeCode" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JwPVQCwaEeGKLc4ckmfDag">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::LOC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEgsoGknEeGCCOsAP2C6Nw" name="EncounterActivitiesTemplateId" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEhTsGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.49')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEllIGknEeGCCOsAP2C6Nw" name="EncounterActivitiesClassCode" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEllIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::ENC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEmzQGknEeGCCOsAP2C6Nw" name="EncounterActivitiesMoodCode" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEmzQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentEncounterMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEoBYGknEeGCCOsAP2C6Nw" name="EncounterActivitiesId" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEoBYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEp2kGknEeGCCOsAP2C6Nw" name="EncounterActivitiesCode" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEp2kWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.12' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pErrwGknEeGCCOsAP2C6Nw" name="EncounterActivitiesEffectiveTime" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pErrwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEs54GknEeGCCOsAP2C6Nw" name="EncounterActivitiesServiceDeliveryLocation" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEs54WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLqdgGknEeGCCOsAP2C6Nw" name="EncounterActivitiesIndication" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLqdgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2LttMBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_pEuIAGknEeGCCOsAP2C6Nw" name="getServiceDeliveryLocations" isQuery="true" bodyCondition="_pEuIA2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pEuIA2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pEuIAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEuIBGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ServiceDeliveryLocation)).oclAsType(consol::ServiceDeliveryLocation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pEuIAWknEeGCCOsAP2C6Nw" type="_2LiHABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pEuIAmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pLrroGknEeGCCOsAP2C6Nw" name="getIndications" isQuery="true" bodyCondition="_pLrro2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pLrro2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pLrroGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLrrpGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pLrroWknEeGCCOsAP2C6Nw" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pLrromknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LiHABSVEeGGzu7fmW9pXw" name="ServiceDeliveryLocation">
      <ownedRule xmi:id="_U1PlUB-ZEeGtfPlBCjHWkw" name="ServiceDeliveryLocationHasPlayingEntity" constrainedElement="_2LiHABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aYMQgB-ZEeGtfPlBCjHWkw">
          <language>OCL</language>
          <body>self.playingEntity->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_W3fw8B-ZEeGtfPlBCjHWkw" name="ServiceDeliveryLocationHasPlayingEntityClassCode" constrainedElement="_U1PlUB-ZEeGtfPlBCjHWkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_digQYB-ZEeGtfPlBCjHWkw">
          <language>OCL</language>
          <body>self.playingEntity->size()>0 implies self.playingEntity.classCode=vocab::EntityClassRoot::PLC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEuvEGknEeGCCOsAP2C6Nw" name="ServiceDeliveryLocationTemplateId" constrainedElement="_2LiHABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEuvEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.32')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pE01sGknEeGCCOsAP2C6Nw" name="ServiceDeliveryLocationCode" constrainedElement="_2LiHABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pE01sWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pE2q4GknEeGCCOsAP2C6Nw" name="ServiceDeliveryLocationAddr" constrainedElement="_2LiHABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pE2q4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.addr->isEmpty() or self.addr->exists(element | element.isNullFlavorUndefined())) implies (not self.addr->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pE35AGknEeGCCOsAP2C6Nw" name="ServiceDeliveryLocationTelecom" constrainedElement="_2LiHABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pE35AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.telecom->isEmpty() or self.telecom->exists(element | element.isNullFlavorUndefined())) implies (not self.telecom->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_c7QfoB-YEeGtfPlBCjHWkw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2L7voBSVEeGGzu7fmW9pXw" name="ImmunizationsSection">
      <ownedRule xmi:id="_pE5HIGknEeGCCOsAP2C6Nw" name="ImmunizationsSectionEntriesOptionalTemplateId" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pE5HIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.2.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pE68UGknEeGCCOsAP2C6Nw" name="ImmunizationsSectionEntriesOptionalCode" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pE68UWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11369-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pE8xgGknEeGCCOsAP2C6Nw" name="ImmunizationsSectionTitle" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pE8xgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pE9_oGknEeGCCOsAP2C6Nw" name="ImmunizationsSectionText" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pE9_oWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pE_NwGknEeGCCOsAP2C6Nw" name="ImmunizationsSectionImmunization" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pE_NwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::ImmunizationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QPw2IBVgEeGQCvUGzi1kDQ" general="_EuPloBVeEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_pE_00GknEeGCCOsAP2C6Nw" name="getImmunizations" isQuery="true" bodyCondition="_pE_002knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pE_002knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pE_00GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFAb4GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::ImmunizationActivity)).oclAsType(consol::ImmunizationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pE_00WknEeGCCOsAP2C6Nw" type="_2MAoIBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pE_00mknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2MAoIBSVEeGGzu7fmW9pXw" name="ImmunizationActivity">
      <ownedComment xmi:id="_2MQfwhSVEeGGzu7fmW9pXw" annotatedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <body>&lt;p>An Immunization Activity describes immunization substance administrations that have actually occurred or are intended to occur. Immunization Activities in &quot;INT&quot; mood are reflections of immunizations a clinician intends a patient to receive. Immunization Activities in &quot;EVN&quot; mood reflect immunizations actually received.&lt;/p>

&lt;p>An Immunization Activity is very similar to a Medication Activity with some key differentiators. The drug code system is constrained to CVX codes. Administration timing is less complex. Patient refusal reasons should be captured. All vaccines administered should be fully documented in the patient's permanent medical record. Healthcare providers who administer vaccines covered by the National Childhood Vaccine Injury Act are required to ensure that the permanent medical record of the recipient indicates: &lt;/p>

&lt;ol>
&lt;li>Date of administration &lt;/li>
&lt;li>Vaccine manufacturer &lt;/li>
&lt;li>Vaccine lot number &lt;/li>
&lt;li>Name and title of the person who administered the vaccine and the address of the clinic or facility where the permanent record will reside &lt;/li>
&lt;li>Vaccine information statement (VIS) 
&lt;ol>
&lt;li>date printed on the VIS&lt;/li>
&lt;li>date VIS given to patient or parent/guardian.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol></body>
      </ownedComment>
      <ownedRule xmi:id="_2MP4sxSVEeGGzu7fmW9pXw" name="ImmunizationActivityTextReference">
        <ownedComment xmi:id="_2MP4tBSVEeGGzu7fmW9pXw">
          <body>In a CDA document, the URI given in the value attribute of the 'reference' element points to an element in the narrative content that contains the complete text describing the immunization activity. In an HL7 message, the content of the text element shall contain the complete text describing the immunization activity.</body>
        </ownedComment>
        <ownedComment xmi:id="_2MP4tRSVEeGGzu7fmW9pXw">
          <body>UNIMPLEMENTABLE</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2MP4thSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies not self.text.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_COIeUEX7EeG6e5lG0YsSyQ" name="ImmunizationActivityDoseQuantityUnit" constrainedElement="_aXWsMCQ9EeG4DdjGPr5_Vg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FOScoEX7EeG6e5lG0YsSyQ">
          <language>OCL</language>
          <body>not self.doseQuantity.oclIsUndefined() implies not self.doseQuantity.unit.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aXWsMCQ9EeG4DdjGPr5_Vg" name="ImmunizationActivityInstructionInversion" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i2pMsCQ9EeG4DdjGPr5_Vg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | not er.act.oclIsUndefined() and er.act.oclIsKindOf(consol::Instructions))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_bnbB0EX7EeG6e5lG0YsSyQ" name="ImmunizationActivityDrugVehicleTypeCode" constrainedElement="_aXWsMCQ9EeG4DdjGPr5_Vg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hB9-8EX7EeG6e5lG0YsSyQ">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::DrugVehicle))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::CSM)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjGGEEX7EeG6e5lG0YsSyQ" name="ImmunizationActivityPreconditionTypeCode" constrainedElement="_bnbB0EX7EeG6e5lG0YsSyQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1H5LYEX7EeG6e5lG0YsSyQ">
          <language>OCL</language>
          <body>self.precondition->select(par : cda::Precondition | par.oclIsKindOf(consol::PreconditionForSubstanceAdministration))->forAll(p : cda::Precondition | p.typeCode=vocab::ActRelationshipType::PRCN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFAb4WknEeGCCOsAP2C6Nw" name="ImmunizationActivityTemplateId" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFAb4mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.52')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFFUYGknEeGCCOsAP2C6Nw" name="ImmunizationActivityClassCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFFUYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFIXsGknEeGCCOsAP2C6Nw" name="ImmunizationActivityId" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFI-wGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFKM4GknEeGCCOsAP2C6Nw" name="ImmunizationActivityCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFKM4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFKz8GknEeGCCOsAP2C6Nw" name="ImmunizationActivityStatusCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFLbAGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFMCEGknEeGCCOsAP2C6Nw" name="ImmunizationActivityEffectiveTime" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFMCEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (self.effectiveTime->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFN3QGknEeGCCOsAP2C6Nw" name="ImmunizationActivityRouteCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFN3QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in (&#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFPscGknEeGCCOsAP2C6Nw" name="ImmunizationActivityApproachSiteCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFPscWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFRhoGknEeGCCOsAP2C6Nw" name="ImmunizationActivityDoseQuantity" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFRhoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFT94GknEeGCCOsAP2C6Nw" name="ImmunizationActivityNegationInd" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFT94WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFVMAGknEeGCCOsAP2C6Nw" name="ImmunizationActivityText" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFVMAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFWaIGknEeGCCOsAP2C6Nw" name="ImmunizationActivityRepeatNumber" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFWaIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFYPUGknEeGCCOsAP2C6Nw" name="ImmunizationActivityAdministrationUnitCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFYPUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.administrationUnitCode.oclIsUndefined() or self.administrationUnitCode.isNullFlavorUndefined()) implies (self.administrationUnitCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.administrationUnitCode.oclAsType(datatypes::CE) in (&#xD;&#xA;not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLv9FWknEeGCCOsAP2C6Nw" name="ImmunizationActivityDrugVehicle" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLv9FmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::DrugVehicle))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLxyQGknEeGCCOsAP2C6Nw" name="ImmunizationActivityIndication" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLxyQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLzAZWknEeGCCOsAP2C6Nw" name="ImmunizationActivityInstructions" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLzAZmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pL01kGknEeGCCOsAP2C6Nw" name="ImmunizationActivityMedicationDispense" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pL01kWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationDispense) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pL2DtWknEeGCCOsAP2C6Nw" name="ImmunizationActivityReactionObservation" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pL2DtmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pL344GknEeGCCOsAP2C6Nw" name="ImmunizationActivityPrecondition" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pL344WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.precondition->one(precondition : cda::Precondition | not precondition.oclIsUndefined() and precondition.oclIsKindOf(consol::PreconditionForSubstanceAdministration))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMC4AGknEeGCCOsAP2C6Nw" name="ImmunizationActivityImmunizationRefusalReason" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMC4AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ImmunizationRefusalReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMIXkGknEeGCCOsAP2C6Nw" name="ImmunizationActivityConsumable" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMIXkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(consol::ImmunizationMedicationInformation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNpahWknEeGCCOsAP2C6Nw" name="ImmunizationActivityPerformer" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNpahmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pN_YwGknEeGCCOsAP2C6Nw" name="ImmunizationActivityMedicationSupplyOrder" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pN_YwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationSupplyOrder) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2MQfwxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_pLxLMGknEeGCCOsAP2C6Nw" name="getDrugVehicle" isQuery="true" bodyCondition="_pLxLM2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pLxLM2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pLxLMGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLxLNGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::DrugVehicle))->asSequence()->first().oclAsType(consol::DrugVehicle)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pLxLMWknEeGCCOsAP2C6Nw" type="_VBXq8BUTEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pLxLMmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pLzAYGknEeGCCOsAP2C6Nw" name="getIndication" isQuery="true" bodyCondition="_pLzAY2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pLzAY2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pLzAYGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLzAZGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication))->asSequence()->first().oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pLzAYWknEeGCCOsAP2C6Nw" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pLzAYmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pL0OgGknEeGCCOsAP2C6Nw" name="getInstructions" isQuery="true" bodyCondition="_pL0Og2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pL0Og2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pL0OgGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pL0OhGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->first().oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pL0OgWknEeGCCOsAP2C6Nw" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pL0OgmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pL2DsGknEeGCCOsAP2C6Nw" name="getMedicationDispense" isQuery="true" bodyCondition="_pL2Ds2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pL2Ds2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pL2DsGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pL2DtGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationDispense))->asSequence()->first().oclAsType(consol::MedicationDispense)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pL2DsWknEeGCCOsAP2C6Nw" type="_DpoGkBUUEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pL2DsmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pL3R0GknEeGCCOsAP2C6Nw" name="getReactionObservation" isQuery="true" bodyCondition="_pL3R02knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pL3R02knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pL3R0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pL3R1GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation))->asSequence()->first().oclAsType(consol::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pL3R0WknEeGCCOsAP2C6Nw" type="_2E_aIRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pL3R0mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pMEGIGknEeGCCOsAP2C6Nw" name="getImmunizationRefusalReason" isQuery="true" bodyCondition="_pMEGI2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pMEGI2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pMEGIGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMEGJGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ImmunizationRefusalReason))->asSequence()->first().oclAsType(consol::ImmunizationRefusalReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pMEGIWknEeGCCOsAP2C6Nw" type="__qYdcBVNEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pMEGImknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pOAm4GknEeGCCOsAP2C6Nw" name="getMedicationSupplyOrder" isQuery="true" bodyCondition="_pOAm42knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOAm42knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOAm4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOAm5GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationSupplyOrder))->asSequence()->first().oclAsType(consol::MedicationSupplyOrder)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOAm4WknEeGCCOsAP2C6Nw" type="_j3aTQBrTEeGo461UQq-B1g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOAm4mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2MV_UBSVEeGGzu7fmW9pXw" name="PayersSection">
      <ownedComment xmi:id="_2NICcBSVEeGGzu7fmW9pXw" annotatedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
The Payers section contains data on the patient s payers, whether a  third party  insurance, self-pay, &#xD;
other payer or guarantor, or some combination of payers, and is used to define which entity is the&#xD;
 responsible fiduciary for the financial aspects of a patient s care.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
Each unique instance of a payer and all the pertinent data needed to contact, bill to, and collect from&#xD;
 that payer should be included. Authorization information that can be used to define pertinent referral, &#xD;
authorization tracking number, procedure, therapy, intervention, device, or similar authorizations for &#xD;
the patient or provider, or both should be included. At a minimum, the patient s pertinent current &#xD;
payment sources should be listed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
The sources of payment are represented as a Coverage Activity, which identifies all of the insurance &#xD;
policies or government or other programs that cover some or all of the patient s healthcare expenses. &#xD;
The policies or programs are sequenced by preference. The Coverage Activity has a sequence number &#xD;
that represents the preference order. Each policy or program identifies the covered party &#xD;
with respect to the payer, so that the identifiers can be recorded.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_pFZdcGknEeGCCOsAP2C6Nw" name="PayersSectionTemplateId" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFaEgGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFb5sGknEeGCCOsAP2C6Nw" name="PayersSectionCode" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFb5sWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '48768-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFdH0GknEeGCCOsAP2C6Nw" name="PayersSectionTitle" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFdH0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFeV8GknEeGCCOsAP2C6Nw" name="PayersSectionText" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFeV8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pK_IEGknEeGCCOsAP2C6Nw" name="PayersSectionCoverageActivity" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pK_IEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::CoverageActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NICchSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pK_vIGknEeGCCOsAP2C6Nw" name="getCoverageActivities" isQuery="true" bodyCondition="_pK_vI2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pK_vI2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pK_vIGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLAWMGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::CoverageActivity)).oclAsType(consol::CoverageActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pK_vIWknEeGCCOsAP2C6Nw" type="_Cg3pkBUmEeGvPruliC3crg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pK_vImknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NIpgBSVEeGGzu7fmW9pXw" name="MedicationsSection">
      <ownedRule xmi:id="_pFfkEWknEeGCCOsAP2C6Nw" name="MedicationsSectionEntriesOptionalTemplateId" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFgLIGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFiAUGknEeGCCOsAP2C6Nw" name="MedicationsSectionEntriesOptionalCode" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFiAUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10160-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFkckGknEeGCCOsAP2C6Nw" name="MedicationsSectionTitle" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFkckWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'Medications')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFlqsGknEeGCCOsAP2C6Nw" name="MedicationsSectionText" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFlqsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFm40GknEeGCCOsAP2C6Nw" name="MedicationsSectionMedication" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFm40WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UeEpoBVgEeGQCvUGzi1kDQ" general="_iAoXEBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_pFnf4GknEeGCCOsAP2C6Nw" name="getMedications" isQuery="true" bodyCondition="_pFoG8GknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pFoG8GknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pFnf4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFoG8WknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pFnf4WknEeGCCOsAP2C6Nw" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pFnf4mknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NP-QxSVEeGGzu7fmW9pXw" name="PlanOfCareSection">
      <ownedComment xmi:id="_2N0mCRSVEeGGzu7fmW9pXw" annotatedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <body>The Plan of Care section contains data that defines pending orders, interventions, encounters, services, and procedures for the patient. It is limited to prospective, unfulfilled, or incomplete orders and requests only, which are indicated by the @moodCode of the entries within this section. All active, incomplete, or pending orders, appointments, referrals, procedures, services, or any other pending event of clinical significance to the current care of the patient should be listed unless constrained due to privacy issues. The plan may also contain information about ongoing care of the patient and information regarding goals and clinical reminders. Clinical reminders are placed here to provide prompts for disease prevention and management, patient safety, and health-care quality improvements, including widely accepted performance measures. The plan may also indicate that patient education was given or will be provided.</body>
      </ownedComment>
      <ownedRule xmi:id="_pFoG8mknEeGCCOsAP2C6Nw" name="PlanOfCareSectionTemplateId" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFoG82knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFp8IGknEeGCCOsAP2C6Nw" name="PlanOfCareSectionCode" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFp8IWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '18776-5' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFrKQGknEeGCCOsAP2C6Nw" name="PlanOfCareSectionText" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFrxUGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFyfAGknEeGCCOsAP2C6Nw" name="PlanOfCareSectionPlanOfCareActivityAct" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFyfAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PlanOfCareActivityAct))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pF4loGknEeGCCOsAP2C6Nw" name="PlanOfCareSectionPlanOfCareActivityEncounter" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pF4loWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pF-sQGknEeGCCOsAP2C6Nw" name="PlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pF-sQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGEy4GknEeGCCOsAP2C6Nw" name="PlanOfCareSectionPlanOfCareActivityProcedure" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGEy4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGK5gGknEeGCCOsAP2C6Nw" name="PlanOfCareSectionPlanOfCareActivitySubstanceAdministration" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGK5gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGRAIGknEeGCCOsAP2C6Nw" name="PlanOfCareSectionPlanOfCareActivitySupply" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGRAIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(consol::PlanOfCareActivitySupply))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_h0yLgBnTEeGs5a462vYX5Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pFzGEGknEeGCCOsAP2C6Nw" name="getPlanOfCareActivityAct" isQuery="true" bodyCondition="_pFztIWknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pFztIWknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pFzGEGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFztImknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlanOfCareActivityAct))->asSequence()->first().oclAsType(consol::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pFzGEWknEeGCCOsAP2C6Nw" type="_2NWE5xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pFztIGknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pF5MsGknEeGCCOsAP2C6Nw" name="getPlanOfCareActivityEncounter" isQuery="true" bodyCondition="_pF5zwWknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pF5zwWknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pF5MsGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pF5zwmknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter))->asSequence()->first().oclAsType(consol::PlanOfCareActivityEncounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pF5MsWknEeGCCOsAP2C6Nw" type="_2NWFBBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pF5zwGknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pF_TUGknEeGCCOsAP2C6Nw" name="getPlanOfCareActivityObservation" isQuery="true" bodyCondition="_pF_6YGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pF_6YGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pF_TUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pF_6YWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlanOfCareActivityObservation))->asSequence()->first().oclAsType(consol::PlanOfCareActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pF_TUWknEeGCCOsAP2C6Nw" type="_2NcLjhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pF_TUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pGGBAGknEeGCCOsAP2C6Nw" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_pGGBA2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pGGBA2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pGGBAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGGBBGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->first().oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pGGBAWknEeGCCOsAP2C6Nw" type="_2NiSKhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pGGBAmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pGMHoGknEeGCCOsAP2C6Nw" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_pGMHo2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pGMHo2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pGMHoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGMHpGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->first().oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pGMHoWknEeGCCOsAP2C6Nw" type="_2NoYwxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pGMHomknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pGSOQGknEeGCCOsAP2C6Nw" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_pGSOQ2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pGSOQ2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pGSOQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGSORGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->first().oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pGSOQWknEeGCCOsAP2C6Nw" type="_2NoY5BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pGSOQmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NWE5xSVEeGGzu7fmW9pXw" name="PlanOfCareActivityAct">
      <ownedRule xmi:id="_pFs_cGknEeGCCOsAP2C6Nw" name="PlanOfCareActivityActTemplateId" constrainedElement="_2NWE5xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFs_cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.39')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pFxQ4GknEeGCCOsAP2C6Nw" name="PlanOfCareActivityActId" constrainedElement="_2NWE5xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFxQ4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NWE_RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NWFBBSVEeGGzu7fmW9pXw" name="PlanOfCareActivityEncounter">
      <ownedRule xmi:id="_pFztI2knEeGCCOsAP2C6Nw" name="PlanOfCareActivityEncounterTemplateId" constrainedElement="_2NWFBBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pFztJGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.40')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pF3XgGknEeGCCOsAP2C6Nw" name="PlanOfCareActivityEncounterId" constrainedElement="_2NWFBBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pF3XgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NcLhxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NcLjhSVEeGGzu7fmW9pXw" name="PlanOfCareActivityObservation">
      <ownedRule xmi:id="_pF5zw2knEeGCCOsAP2C6Nw" name="PlanOfCareActivityObservationTemplateId" constrainedElement="_2NcLjhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pF5zxGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pF9eIGknEeGCCOsAP2C6Nw" name="PlanOfCareActivityObservationId" constrainedElement="_2NcLjhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pF9eIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NiSIxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NiSKhSVEeGGzu7fmW9pXw" name="PlanOfCareActivityProcedure">
      <ownedRule xmi:id="_pF_6YmknEeGCCOsAP2C6Nw" name="PlanOfCareActivityProcedureTemplateId" constrainedElement="_2NiSKhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pF_6Y2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.41')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGDkwGknEeGCCOsAP2C6Nw" name="PlanOfCareActivityProcedureId" constrainedElement="_2NiSKhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGDkwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NiSPhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NoYwxSVEeGGzu7fmW9pXw" name="PlanOfCareActivitySubstanceAdministration">
      <ownedRule xmi:id="_pGGBBWknEeGCCOsAP2C6Nw" name="PlanOfCareActivitySubstanceAdministrationTemplateId" constrainedElement="_2NoYwxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGGBBmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGJrYGknEeGCCOsAP2C6Nw" name="PlanOfCareActivitySubstanceAdministrationId" constrainedElement="_2NoYwxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGJrYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NoY3RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NoY5BSVEeGGzu7fmW9pXw" name="PlanOfCareActivitySupply">
      <ownedRule xmi:id="_pGMHpWknEeGCCOsAP2C6Nw" name="PlanOfCareActivitySupplyTemplateId" constrainedElement="_2NoY5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGMHpmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.43')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGPyAGknEeGCCOsAP2C6Nw" name="PlanOfCareActivitySupplyId" constrainedElement="_2NoY5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGQZEGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NufZhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2N6soBSVEeGGzu7fmW9pXw" name="PregnancyObservation">
      <ownedComment xmi:id="_9RKMYDyWEeGOm9opnDhYAQ">
        <body>This clinical statement represents current and/or prior pregnancy dates enabling investigators to determine if the subject of the case report was pregnant during the course of a condition.</body>
      </ownedComment>
      <ownedRule xmi:id="_pGSORWknEeGCCOsAP2C6Nw" name="PregnancyObservationTemplateId" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGS1UGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGUDcGknEeGCCOsAP2C6Nw" name="PregnancyObservationClassCode" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGUDcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGVRkGknEeGCCOsAP2C6Nw" name="PregnancyObservationMoodCode" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGVRkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGXGwGknEeGCCOsAP2C6Nw" name="PregnancyObservationCode" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGXGwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGZjAGknEeGCCOsAP2C6Nw" name="PregnancyObservationStatusCode" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGZjAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGb_QGknEeGCCOsAP2C6Nw" name="PregnancyObservationValue" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGb_QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.code = '77386006' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGdNYGknEeGCCOsAP2C6Nw" name="PregnancyObservationEffectiveTime" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGdNYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pO-3QGknEeGCCOsAP2C6Nw" name="PregnancyObservationEstimatedDateOfDelivery" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pO-3QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::EstimatedDateOfDelivery) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2N6sxxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pO_eUGknEeGCCOsAP2C6Nw" name="getEstimatedDateOfDelivery" isQuery="true" bodyCondition="_pPAFYGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pPAFYGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pO_eUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPAFYWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::EstimatedDateOfDelivery))->asSequence()->first().oclAsType(consol::EstimatedDateOfDelivery)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pO_eUWknEeGCCOsAP2C6Nw" type="_vBswQBtpEeGT89b80j3MTg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pO_eUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OAzQRSVEeGGzu7fmW9pXw" name="ProceduresSection">
      <ownedComment xmi:id="_2OfUahSVEeGGzu7fmW9pXw" annotatedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <body>This section defines all interventional, surgical, diagnostic, or therapeutic procedures or treatments pertinent to the patient historically at the time the document is generated. The section is intended to include notable procedures, but can contain all procedures for the period of time being summarized. The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore this section contains procedure templates represented with three RIM classes: Act. Observation, and Procedure. Procedure act is for procedures the alter that physical condition of a patient (Splenectomy). Observation act is for procedures that result in new information about a patient but do not cause physical alteration (EEG). Act is for all other types of procedures (dressing change).&#xD;
The length of an encounter is documented in the documentationOf/encompassingEncounter/effectiveTime and length of service in documentationOf/ServiceEvent/effectiveTime.</body>
      </ownedComment>
      <ownedRule xmi:id="_2OfUZxSVEeGGzu7fmW9pXw" name="ProceduresSectionHasProcedureActivity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2OfUaBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::ProcedureActivityAct)) or self.getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::ProcedureActivityObservation)) or self.getProcedures()->exists(p : cda::Procedure | p.oclIsKindOf(consol::ProcedureActivityProcedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGebgWknEeGCCOsAP2C6Nw" name="ProceduresSectionEntriesOptionalTemplateId" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGfCkGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.7.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGg3wGknEeGCCOsAP2C6Nw" name="ProceduresSectionTitle" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGg3wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'Procedures')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGjUAGknEeGCCOsAP2C6Nw" name="ProceduresSectionEntriesOptionalCode" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGjUAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '47519-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGkiIGknEeGCCOsAP2C6Nw" name="ProceduresSectionText" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGkiIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gNO_cBVgEeGQCvUGzi1kDQ" general="_s9Ig4BVdEeGQCvUGzi1kDQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OG58RSVEeGGzu7fmW9pXw" name="ProcedureActivityProcedure">
      <ownedComment xmi:id="_w6NZEBxxEeGXP8PxDYviDg">
        <body>The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore procedure templates can be represented with various RIM classes: act (e.g., dressing change), observation (e.g., EEG), procedure (e.g. splenectomy). &#xD;
This clinical statement represents procedures whose immediate and primary outcome (post-condition) is the alteration of the physical condition of the patient. Examples of these procedures are an appendectomy, hip replacement and a creation of a gastrostomy.</body>
      </ownedComment>
      <ownedRule xmi:id="_qGzKgBrPEeGxIZCGAXKxsQ" name="ProcedureActivityProcedureCodeCodeSystems" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_8J3uYBrPEeGxIZCGAXKxsQ">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.1' xor self.code.codeSystem = '2.16.840.1.113883.6.96' xor self.code.codeSystem = '2.16.840.1.113883.6.12' xor self.code.codeSystem = '2.16.840.1.113883.6.104' xor self.code.codeSystem = '2.16.840.1.113883.6.4'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_N4ba0BrQEeGxIZCGAXKxsQ" name="ProcedureActivityProcedureCodeOriginalText" constrainedElement="_qGzKgBrPEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VYc2sBrQEeGxIZCGAXKxsQ">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WEQMwBrQEeGxIZCGAXKxsQ" name="ProcedureActivityProcedureOriginalTextReferenceValue" constrainedElement="_N4ba0BrQEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Pp6KEBrREeGxIZCGAXKxsQ">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined() implies not self.code.originalText.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_SSUWwBrREeGxIZCGAXKxsQ" name="ProcedureActivityProcedureReferenceValue" constrainedElement="_WEQMwBrQEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VD9X8BrREeGxIZCGAXKxsQ">
          <language>OCL</language>
          <body>not self.getSection().text.getText(self.code.originalText.reference.value.substring(2, self.code.originalText.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6LqgBxZEeGXP8PxDYviDg" name="ProcedureActivityProcedureEncounterInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_7DYVYBxZEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.encounter->size() > 0)->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_9s2SABxZEeGXP8PxDYviDg" name="ProcedureActivityProcedureProductInstanceTypeCode" constrainedElement="_t6LqgBxZEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FdoGsBxaEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::ProductInstance))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::DEV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_JHSVABxaEeGXP8PxDYviDg" name="ProcedureActivityProcedureServiceDeliveryLocationTypeCode" constrainedElement="_9s2SABxZEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Pf0kYBxaEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::LOC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_5r5qcBxsEeGXP8PxDYviDg" name="ProcedureActivityProcedureInstructionsInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_5r5qcRxsEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsKindOf(consol::Instructions))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGlwQGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureTemplateId" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGlwQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGsd8GknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureClassCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGsd8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGvhQGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureId" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGwIUGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGwvYGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGxWcGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pGykkGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureStatusCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pGzLoGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed' or value.code = 'active' or value.code = 'aborted' or value.code = 'cancelled'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pG0ZwGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureEffectiveTime" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pG0ZwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pG2O8GknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedurePriorityCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pG2O8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pG3dEGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureMethodCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pG3dEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pG5SQGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureTargetSiteCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pG5SQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pG7HcGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureIndication" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pG7HcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pG88oGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureSpecimen" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pG88oWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.specimen->exists(specimen : cda::Specimen | not specimen.oclIsUndefined() and specimen.oclIsKindOf(cda::Specimen))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pG-KwGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureServiceDeliveryLocation" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pG-KwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pG__8GknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedurePerformer" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pG__8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHBOEGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureMedicationActivity" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHBOEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHDDQGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedurePatientInstruction" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHDDQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOgWIGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureProcedureEncounter" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOgWIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.encounter.oclIsUndefined() and entryRelationship.encounter.oclIsKindOf(cda::Encounter) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOiLUGknEeGCCOsAP2C6Nw" name="ProcedureActivityProcedureProductInstance" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOiLUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ProductInstance))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2OZN6RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_pG8VkGknEeGCCOsAP2C6Nw" name="getIndications" isQuery="true" bodyCondition="_pG8Vk2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pG8Vk2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pG8VkGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pG8VlGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pG8VkWknEeGCCOsAP2C6Nw" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pG8VkmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pG_Y4GknEeGCCOsAP2C6Nw" name="getServiceDeliveryLocations" isQuery="true" bodyCondition="_pG_Y42knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pG_Y42knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pG_Y4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pG_Y5GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ServiceDeliveryLocation)).oclAsType(consol::ServiceDeliveryLocation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pG_Y4WknEeGCCOsAP2C6Nw" type="_2LiHABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pG_Y4mknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pHCcMGknEeGCCOsAP2C6Nw" name="getMedicationActivity" isQuery="true" bodyCondition="_pHCcM2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pHCcM2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pHCcMGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHCcNGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity))->asSequence()->first().oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pHCcMWknEeGCCOsAP2C6Nw" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pHCcMmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pHDqUGknEeGCCOsAP2C6Nw" name="getPatientInstruction" isQuery="true" bodyCondition="_pHERYmknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pHERYmknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pHDqUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHERY2knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->first().oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pHERYGknEeGCCOsAP2C6Nw" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pHERYWknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pOhkQGknEeGCCOsAP2C6Nw" name="getProcedureEncounters" isQuery="true" bodyCondition="_pOhkQ2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOhkQ2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOhkQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOhkRGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).oclAsType(cda::Encounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOhkQWknEeGCCOsAP2C6Nw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOhkQmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pOjZcGknEeGCCOsAP2C6Nw" name="getProductInstances" isQuery="true" bodyCondition="_pOjZc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOjZc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOjZcGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOjZdGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ProductInstance)).oclAsType(consol::ProductInstance)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOjZcWknEeGCCOsAP2C6Nw" type="_2G2bUxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOjZcmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OfUcxSVEeGGzu7fmW9pXw" name="VitalSignsSection">
      <ownedRule xmi:id="_pHERZWknEeGCCOsAP2C6Nw" name="VitalSignsSectionEntriesOptionalTemplateId" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHE4cGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.4.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHGtoGknEeGCCOsAP2C6Nw" name="VitalSignsSectionEntriesOptionalCode" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHGtoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '8716-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHH7wGknEeGCCOsAP2C6Nw" name="VitalSignsSectionText" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHH7wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHJJ4GknEeGCCOsAP2C6Nw" name="VitalSignsSectionTitle" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHJw8GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHnD8GknEeGCCOsAP2C6Nw" name="VitalSignsSectionVitalSignsOrganizer" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHnD8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::VitalSignsOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_px07IBVgEeGQCvUGzi1kDQ" general="_bRH8sBVeEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_GRGhIBxREeG8X6LmnKJ43Q">
          <body>couple</body>
        </ownedComment>
      </generalization>
      <ownedOperation xmi:id="_pHoSEGknEeGCCOsAP2C6Nw" name="getConsolVitalSignsOrganizers" isQuery="true" bodyCondition="_pHoSE2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pHoSE2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pHoSEGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHoSFGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::VitalSignsOrganizer)).oclAsType(consol::VitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pHoSEWknEeGCCOsAP2C6Nw" type="_2OlbCRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pHoSEmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OlbCRSVEeGGzu7fmW9pXw" name="VitalSignsOrganizer">
      <ownedComment xmi:id="_YFDPQBwiEeG_RY8fzJjtMw">
        <body>&lt;p>The Vital Signs Organizer groups vital signs, which is similar to the Result Organizer, but with further constraints. &lt;/p>

&lt;p>An appropriate nullFlavor can be used when a single result observation is contained in the organizer, and organizer/code or organizer/id is unknown.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_pHKYAGknEeGCCOsAP2C6Nw" name="VitalSignsOrganizerTemplateId" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHKYAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.26')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHMNMGknEeGCCOsAP2C6Nw" name="VitalSignsOrganizerClassCode" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHMNMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryOrganizer::CLUSTER</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHNbUGknEeGCCOsAP2C6Nw" name="VitalSignsOrganizerMoodCode" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHNbUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHOpcGknEeGCCOsAP2C6Nw" name="VitalSignsOrganizerId" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHOpcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHQeoGknEeGCCOsAP2C6Nw" name="VitalSignsOrganizerCode" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHQeoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '46680005' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHST0GknEeGCCOsAP2C6Nw" name="VitalSignsOrganizerStatusCode" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHST0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHUJAGknEeGCCOsAP2C6Nw" name="VitalSignsOrganizerEffectiveTime" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHUJAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHVXIGknEeGCCOsAP2C6Nw" name="VitalSignsOrganizerVitalSignObservation" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHVXIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::VitalSignObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2O91oRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_pHV-MGknEeGCCOsAP2C6Nw" name="getVitalSignObservations" isQuery="true" bodyCondition="_pHV-M2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pHV-M2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pHV-MGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHV-NGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::VitalSignObservation)).oclAsType(consol::VitalSignObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pHV-MWknEeGCCOsAP2C6Nw" type="_2OrhsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pHV-MmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OrhsRSVEeGGzu7fmW9pXw" name="VitalSignObservation">
      <ownedComment xmi:id="_y1fL4BwiEeG_RY8fzJjtMw">
        <body>Vital signs are represented as are other results, with additional vocabulary constraints.</body>
      </ownedComment>
      <ownedRule xmi:id="_pHWlQGknEeGCCOsAP2C6Nw" name="VitalSignObservationTemplateId" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHWlQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.27')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHXzYGknEeGCCOsAP2C6Nw" name="VitalSignObservationClassCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHXzYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHZBgGknEeGCCOsAP2C6Nw" name="VitalSignObservationMoodCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHZokGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHaPoGknEeGCCOsAP2C6Nw" name="VitalSignObservationId" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHaPoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHcE0GknEeGCCOsAP2C6Nw" name="VitalSignObservationCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHcE0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '8310-5' or value.code = '8462-4' or value.code = '8480-6' or value.code = '8287-5' or value.code = '8867-4' or value.code = '8302-2' or value.code = '8306-3' or value.code = '2710-2' or value.code = '9279-1' or value.code = '3141-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHehEGknEeGCCOsAP2C6Nw" name="VitalSignObservationStatusCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHehEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHgWQGknEeGCCOsAP2C6Nw" name="VitalSignObservationEffectiveTime" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHgWQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHg9UGknEeGCCOsAP2C6Nw" name="VitalSignObservationValue" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHg9UWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHiLcGknEeGCCOsAP2C6Nw" name="VitalSignObservationInterpretationCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHiLcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHjZkGknEeGCCOsAP2C6Nw" name="VitalSignObservationMethodCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHjZkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHknsGknEeGCCOsAP2C6Nw" name="VitalSignObservationTargetSiteCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHknsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHl10GknEeGCCOsAP2C6Nw" name="VitalSignObservationText" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHl10WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOGtgmknEeGCCOsAP2C6Nw" name="VitalSignObservationAuthor" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOGtg2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2O3u6BSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PQJcxSVEeGGzu7fmW9pXw" name="HistoryOfPastIllnessSection">
      <ownedComment xmi:id="_2PWQBRSVEeGGzu7fmW9pXw" annotatedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <body>This section describes the history related to the patient's current complaints, problems, or diagnoses. It records the historical details leading up to and pertaining to the patient's current complaint or reason for seeking medical care.</body>
      </ownedComment>
      <ownedRule xmi:id="_pHoSFWknEeGCCOsAP2C6Nw" name="HistoryOfPastIllnessSectionTemplateId" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHoSFmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.20')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHquUGknEeGCCOsAP2C6Nw" name="HistoryOfPastIllnessSectionCode" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHquUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11348-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHr8cGknEeGCCOsAP2C6Nw" name="HistoryOfPastIllnessSectionTitle" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHr8cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHtKkGknEeGCCOsAP2C6Nw" name="HistoryOfPastIllnessSectionText" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHtKkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRBeoGknEeGCCOsAP2C6Nw" name="HistoryOfPastIllnessSectionProblemObservation" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRBeoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PWQBxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pRCFsGknEeGCCOsAP2C6Nw" name="getProblemObservations" isQuery="true" bodyCondition="_pRCswmknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pRCswmknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pRCFsGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRCsw2knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pRCswGknEeGCCOsAP2C6Nw" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pRCswWknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PWQCBSVEeGGzu7fmW9pXw" name="ChiefComplaintSection">
      <ownedComment xmi:id="_2PWQFRSVEeGGzu7fmW9pXw" annotatedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <body>This section records the patient's chief complaint (the patient's own description).</body>
      </ownedComment>
      <ownedRule xmi:id="_pHuYsGknEeGCCOsAP2C6Nw" name="ChiefComplaintSectionTemplateId" constrainedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHuYsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.1.13.2.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHwN4GknEeGCCOsAP2C6Nw" name="ChiefComplaintSectionCode" constrainedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHwN4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10154-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHxcAGknEeGCCOsAP2C6Nw" name="ChiefComplaintSectionText" constrainedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHyDEGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pHyqIGknEeGCCOsAP2C6Nw" name="ChiefComplaintSectionTitle" constrainedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHyqIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PWQFhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PWQFxSVEeGGzu7fmW9pXw" name="ReasonForReferralSection">
      <ownedComment xmi:id="_2PcWrxSVEeGGzu7fmW9pXw" annotatedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <body>A Reason for Referral section records the reason the patient is being referred for a consultation by a provider. An optional Chief Complaint section may capture the patient's description of the reason for the consultation.</body>
      </ownedComment>
      <ownedRule xmi:id="_pHz4QGknEeGCCOsAP2C6Nw" name="ReasonForReferralSectionTemplateId" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pHz4QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pH2UgGknEeGCCOsAP2C6Nw" name="ReasonForReferralSectionCode" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pH2UgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '42349-1' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pH3ioGknEeGCCOsAP2C6Nw" name="ReasonForReferralSectionTitle" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pH3ioWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pH4wwGknEeGCCOsAP2C6Nw" name="ReasonForReferralSectionText" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pH4wwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PcWsBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PcWsRSVEeGGzu7fmW9pXw" name="HistoryOfPresentIllnessSection">
      <ownedComment xmi:id="_2PidQBSVEeGGzu7fmW9pXw" annotatedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <body>The History of Present Illness section describes the history related to the reason for the encounter.  It contains the historical details leading up to and pertaining to the patient's current complaint or reason for seeking medical care.</body>
      </ownedComment>
      <ownedRule xmi:id="_pH5X0GknEeGCCOsAP2C6Nw" name="HistoryOfPresentIllnessSectionTemplateId" constrainedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pH5-4GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pH70EGknEeGCCOsAP2C6Nw" name="HistoryOfPresentIllnessSectionCode" constrainedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pH70EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10164-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pH9CMGknEeGCCOsAP2C6Nw" name="HistoryOfPresentIllnessSectionTitle" constrainedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pH9CMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pH-QUGknEeGCCOsAP2C6Nw" name="HistoryOfPresentIllnessSectionText" constrainedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pH-QUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PidQRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PidQhSVEeGGzu7fmW9pXw" name="HospitalAdmissionDiagnosisSection">
      <ownedComment xmi:id="_2PidTxSVEeGGzu7fmW9pXw" annotatedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <body>The Hospital Admitting Diagnosis section contains a narrative description of the primary reason for admission to a hospital facility. The section includes an optional entry to record patient conditions.</body>
      </ownedComment>
      <ownedRule xmi:id="_pH_ecGknEeGCCOsAP2C6Nw" name="HospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pH_ecWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIBToGknEeGCCOsAP2C6Nw" name="HospitalAdmissionDiagnosisSectionCode" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIBToWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '46241-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIDI0GknEeGCCOsAP2C6Nw" name="HospitalAdmissionDiagnosisSectionTitle" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIDI0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIEW8GknEeGCCOsAP2C6Nw" name="HospitalAdmissionDiagnosisSectionText" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIEW8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbJrBWknEeGCCOsAP2C6Nw" name="HospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbJrBmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PidUBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pbK5IGknEeGCCOsAP2C6Nw" name="getHospitalAdmissionDiagnosis" isQuery="true" bodyCondition="_pbK5I2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pbK5I2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pbK5IGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbK5JGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))->asSequence()->first().oclAsType(consol::HospitalAdmissionDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pbK5IWknEeGCCOsAP2C6Nw" type="_5K6mAEFHEeGorO80f-Cppg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pbK5ImknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Poj5BSVEeGGzu7fmW9pXw" name="HospitalAdmissionMedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_2Poj6xSVEeGGzu7fmW9pXw" annotatedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <body>The Hospital Admission Medications section defines the relevant medications administered prior to admission to the facility. The currently active medications must be listed.</body>
      </ownedComment>
      <ownedRule xmi:id="_pIE-AGknEeGCCOsAP2C6Nw" name="HospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIFlEGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIHaQGknEeGCCOsAP2C6Nw" name="HospitalAdmissionMedicationsSectionEntriesOptionalCode" constrainedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIHaQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '42346-7' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIIoYGknEeGCCOsAP2C6Nw" name="HospitalAdmissionMedicationsSectionEntriesOptionalText" constrainedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIIoYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIJ2gGknEeGCCOsAP2C6Nw" name="HospitalAdmissionMedicationsSectionEntriesOptionalTitle" constrainedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIJ2gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYfYkWknEeGCCOsAP2C6Nw" name="HospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYfYkmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Poj7BSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pYgmsGknEeGCCOsAP2C6Nw" name="getAdmissionMedications" isQuery="true" bodyCondition="_pYgms2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pYgms2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pYgmsGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYgmtGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AdmissionMedication)).oclAsType(consol::AdmissionMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pYgmsWknEeGCCOsAP2C6Nw" type="_LNP08EFGEeGorO80f-Cppg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pYgmsmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Poj_BSVEeGGzu7fmW9pXw" name="MedicationsAdministeredSection">
      <ownedComment xmi:id="_2Pxt0BSVEeGGzu7fmW9pXw" annotatedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <body>The Medications Administered section defines medications and fluids administered during the procedure, encounter, or other activity excluding anesthetic medications. This guide recommends anesthesia medications be documented as described in the section on Anesthesia.</body>
      </ownedComment>
      <ownedRule xmi:id="_pILEoGknEeGCCOsAP2C6Nw" name="MedicationsAdministeredSectionTemplateId" constrainedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pILEoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIM50GknEeGCCOsAP2C6Nw" name="MedicationsAdministeredSectionCode" constrainedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pINg4GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '29549-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIOvAGknEeGCCOsAP2C6Nw" name="MedicationsAdministeredSectionText" constrainedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIOvAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIP9IGknEeGCCOsAP2C6Nw" name="MedicationsAdministeredSectionTitle" constrainedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIP9IWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbLgMGknEeGCCOsAP2C6Nw" name="MedicationsAdministeredSectionMedicationActivity" constrainedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbLgMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Pxt0RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pbMHQGknEeGCCOsAP2C6Nw" name="getMedicationActivities" isQuery="true" bodyCondition="_pbMHQ2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pbMHQ2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pbMHQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbMHRGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pbMHQWknEeGCCOsAP2C6Nw" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pbMHQmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Pxt0hSVEeGGzu7fmW9pXw" name="PhysicalExamSection">
      <ownedComment xmi:id="_2RkdqBSVEeGGzu7fmW9pXw" annotatedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <body>The Physical Exam section includes direct observations made by the clinician. The examination may include the use of simple instruments and may also describe simple maneuvers performed directly on the patient's body. This section includes only observations made by the examining clinician using inspection, palpation, auscultation, and percussion; it does not include laboratory or imaging findings. The exam may be limited to pertinent body systems based on the patient's chief complaint or it may include a comprehensive examination. The examination may be reported as a collection of random clinical statements or it may be reported categorically. &#xD;
The Physical Exam section may contain multiple nested subsections: Vital Signs, General Status, and those listed in the Additional Physical Examination Subsections appendix.</body>
      </ownedComment>
      <ownedRule xmi:id="_pIQkMGknEeGCCOsAP2C6Nw" name="PhysicalExamSectionTemplateId" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIRLQGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.2.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pITAcGknEeGCCOsAP2C6Nw" name="PhysicalExamSectionCode" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pITAcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '29545-1' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIUOkGknEeGCCOsAP2C6Nw" name="PhysicalExamSectionTitle" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIUOkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIVcsGknEeGCCOsAP2C6Nw" name="PhysicalExamSectionText" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIVcsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RkdqxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Pxt6xSVEeGGzu7fmW9pXw" name="GeneralStatusSection">
      <ownedComment xmi:id="_2Pxt7BSVEeGGzu7fmW9pXw" annotatedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <body>The General Status section describes general observations and readily observable attributes of the patient, including affect and demeanor, apparent age compared to actual age, gender, ethnicity, nutritional status based on appearance, body build and habitus (e.g., muscular, cachectic, obese), developmental or other deformities, gait and mobility, personal hygiene, evidence of distress, and voice quality and speech.</body>
      </ownedComment>
      <ownedRule xmi:id="_pIWq0GknEeGCCOsAP2C6Nw" name="GeneralStatusSectionTemplateId" constrainedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIWq0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.2.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIYgAGknEeGCCOsAP2C6Nw" name="GeneralStatusSectionCode" constrainedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIYgAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10210-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIaVMGknEeGCCOsAP2C6Nw" name="GeneralStatusSectionTitle" constrainedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIaVMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIbjUGknEeGCCOsAP2C6Nw" name="GeneralStatusSectionText" constrainedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIbjUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2P7e0BSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2RqkMBSVEeGGzu7fmW9pXw" name="ReviewOfSystemsSection">
      <ownedComment xmi:id="_2RqkOBSVEeGGzu7fmW9pXw" annotatedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <body>The Review of Systems section contains a relevant collection of symptoms and functions systematically gathered by a clinician. It includes symptoms the patient is currently experiencing, some of which were not elicited during the history of present illness, as well as a potentially large number of pertinent negatives, for example, symptoms that the patient denied experiencing.</body>
      </ownedComment>
      <ownedRule xmi:id="_pIcKYGknEeGCCOsAP2C6Nw" name="ReviewOfSystemsSectionTemplateId" constrainedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIcKYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIemoGknEeGCCOsAP2C6Nw" name="ReviewOfSystemsSectionCode" constrainedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIemoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10187-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIf0wGknEeGCCOsAP2C6Nw" name="ReviewOfSystemsSectionTitle" constrainedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIf0wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIhC4GknEeGCCOsAP2C6Nw" name="ReviewOfSystemsSectionText" constrainedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIhC4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RqkOhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Rwq0BSVEeGGzu7fmW9pXw" name="AssessmentAndPlanSection">
      <ownedComment xmi:id="_2Rwq8BSVEeGGzu7fmW9pXw" annotatedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <body>The Assessment and Plan sections may be combined or separated to meet local policy requirements.&#xD;
The Assessment and Plan section represents both the clinician's conclusions and working assumptions that will guide treatment of the patient (see Assessment Section above) and pending orders, interventions, encounters, services, and procedures for the patient (see Plan of Care Section below).</body>
      </ownedComment>
      <ownedRule xmi:id="_pIiRAGknEeGCCOsAP2C6Nw" name="AssessmentAndPlanSectionTemplateId" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIiRAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIkGMGknEeGCCOsAP2C6Nw" name="AssessmentAndPlanSectionCode" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIkGMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '51847-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIlUUGknEeGCCOsAP2C6Nw" name="AssessmentAndPlanSectionText" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIlUUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRAQgGknEeGCCOsAP2C6Nw" name="AssessmentAndPlanSectionPlanOfCareActivityAct" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRAQgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PlanOfCareActivityAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Rwq8hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pRA3kGknEeGCCOsAP2C6Nw" name="getPlanOfCareActivityActs" isQuery="true" bodyCondition="_pRA3k2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pRA3k2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pRA3kGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRA3lGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlanOfCareActivityAct)).oclAsType(consol::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pRA3kWknEeGCCOsAP2C6Nw" type="_2NWE5xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pRA3kmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2SC-sBSVEeGGzu7fmW9pXw" name="FamilyHistoryDeathObservation">
      <ownedComment xmi:id="_fqbbcCHkEeGFLIX-2_sWzA">
        <body>This clinical statement records whether the family member is deceased</body>
      </ownedComment>
      <ownedRule xmi:id="_pImicGknEeGCCOsAP2C6Nw" name="FamilyHistoryDeathObservationTemplateId" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pImicWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.47')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIoXoGknEeGCCOsAP2C6Nw" name="FamilyHistoryDeathObservationClassCode" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIoXoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIplwGknEeGCCOsAP2C6Nw" name="FamilyHistoryDeathObservationMoodCode" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIplwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIra8GknEeGCCOsAP2C6Nw" name="FamilyHistoryDeathObservationCode" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIra8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pItQIGknEeGCCOsAP2C6Nw" name="FamilyHistoryDeathObservationStatusCode" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pItQIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIvsYGknEeGCCOsAP2C6Nw" name="FamilyHistoryDeathObservationValue" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIvsYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.code = '419099009' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2SPMABSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_luQh8DVzEeGaW4kr-GbV8Q" name="SurgicalDrainsSection">
      <ownedComment xmi:id="_SOgPAEE3EeGdmoWy_aLP0Q">
        <body>The Surgical Drains section may be used to record drains placed during the surgical procedure. Optionally, surgical drain placement may be represented with a text element in the Procedure Description Section.</body>
      </ownedComment>
      <ownedRule xmi:id="_pIxhkGknEeGCCOsAP2C6Nw" name="SurgicalDrainsSectionTemplateId" constrainedElement="_luQh8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIxhkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.7.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pIzWwGknEeGCCOsAP2C6Nw" name="SurgicalDrainsSectionCode" constrainedElement="_luQh8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pIz90GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11537-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pI1L8GknEeGCCOsAP2C6Nw" name="SurgicalDrainsSectionText" constrainedElement="_luQh8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pI1L8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pI2aEGknEeGCCOsAP2C6Nw" name="SurgicalDrainsSectionTitle" constrainedElement="_luQh8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pI2aEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_luQh8TVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2TeiIRSVEeGGzu7fmW9pXw" name="UnstructuredDocument">
      <ownedComment xmi:id="_2T9DPhSVEeGGzu7fmW9pXw" annotatedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <body>An unstructured document is a document which is used when the patient record is captured in an unstructured format that is encapsulated within an image file or as unstructured text in an electronic file such as a word processing or Portable Document Format (PDF) document. &#xD;
There is a need to raise the level of interoperability for these documents to provide full access to the longitudinal patient record across a continuum of care. Until this gap is addressed, image and multi-media files will continue to be a portion of the patient record that remains difficult to access and share with all participants in a patient's care. The Unstructured Document type addresses this gap by providing consistent guidance on the use of CDA for such documents.&#xD;
An Unstructured Document (UD) document type can (1) include unstructured content, such as a graphic, directly in a text element with a mediaType attribute, or (2) reference a single document file, such as a word-processing document, using a text/reference element.&#xD;
For guidance on how to handle multiple files, on the selection of media types for this IG, and on the identification of external files, see the subsections which follow the constraints below.&#xD;
IHE's XDS-SD (Cross-Transaction Specifications and Content Specifications, Scanned Documents Module) profile addresses a similar, more restricted use case, specifically for scanned documents or documents electronically created from existing text sources, and limits content to PDF-A or text. This Unstructured Documents implementation guide is applicable not only for scanned documents in non-PDF formats, but also for clinical documents produced through word processing applications, etc. &#xD;
For conformance with both specifications, please review the appendix on XDS-SD and US Realm Clinical Document Header Comparison and ensure that your documents at a minimum conform to all the SHALL constraints from either specification .</body>
      </ownedComment>
      <ownedRule xmi:id="_pI3oMGknEeGCCOsAP2C6Nw" name="UnstructuredDocumentTemplateId" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pI3oMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.21.1.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pX3GcGknEeGCCOsAP2C6Nw" name="UnstructuredDocumentRecordTarget" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pX3GcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.recordTarget->one(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pX3tgGknEeGCCOsAP2C6Nw" name="UnstructuredDocumentAuthor" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pX3tgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pX5isGknEeGCCOsAP2C6Nw" name="UnstructuredDocumentComponent" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pX5isWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component2 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pX7X4GknEeGCCOsAP2C6Nw" name="UnstructuredDocumentCustodian" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pX7X4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.custodian->one(custodian : cda::Custodian | not custodian.oclIsUndefined() and custodian.oclIsKindOf(cda::Custodian))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfQH4GknEeGCCOsAP2C6Nw" name="UnstructuredDocumentRecordTargetPatientRole2Id" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfQH4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.recordTarget->exists(not oclIsUndefined()) and self.recordTarget.patientRole->exists(not oclIsUndefined()) then self.recordTarget.patientRole->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1)) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfR9EGknEeGCCOsAP2C6Nw" name="UnstructuredDocumentAuthorAssignedAuthor2Addr" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfR9EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.author->exists(not oclIsUndefined()) and self.author.assignedAuthor->exists(not oclIsUndefined()) then self.author.assignedAuthor->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (addr->size() = 1)) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfR9EmknEeGCCOsAP2C6Nw" name="UnstructuredDocumentAuthorAssignedAuthor2Telecom" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfR9E2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.author->exists(not oclIsUndefined()) and self.author.assignedAuthor->exists(not oclIsUndefined()) then self.author.assignedAuthor->forAll((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (telecom->size() = 1)) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfUZUGknEeGCCOsAP2C6Nw" name="UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationAddr" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfUZUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.custodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian.representedCustodianOrganization->exists(not oclIsUndefined()) then self.custodian.assignedCustodian.representedCustodianOrganization->forAll((addr.oclIsUndefined() or addr.isNullFlavorUndefined()) implies (not addr.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfVAYGknEeGCCOsAP2C6Nw" name="UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationId" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfVAYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.custodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian.representedCustodianOrganization->exists(not oclIsUndefined()) then self.custodian.assignedCustodian.representedCustodianOrganization->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1)) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfVncGknEeGCCOsAP2C6Nw" name="UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationName" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfVncWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.custodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian.representedCustodianOrganization->exists(not oclIsUndefined()) then self.custodian.assignedCustodian.representedCustodianOrganization->forAll((name.oclIsUndefined() or name.isNullFlavorUndefined()) implies (not name.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfVncmknEeGCCOsAP2C6Nw" name="UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationTelecom" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfVnc2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.custodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian->exists(not oclIsUndefined()) and self.custodian.assignedCustodian.representedCustodianOrganization->exists(not oclIsUndefined()) then self.custodian.assignedCustodian.representedCustodianOrganization->forAll((telecom.oclIsUndefined() or telecom.isNullFlavorUndefined()) implies (not telecom.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfWOgGknEeGCCOsAP2C6Nw" name="UnstructuredDocumentCustodianAssignedCustodian2" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfWOgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.custodian->exists(not oclIsUndefined()) then self.custodian->forAll(assignedCustodian->one(assignedCustodian : cda::AssignedCustodian | not assignedCustodian.oclIsUndefined() and assignedCustodian.oclIsKindOf(cda::AssignedCustodian))) else true endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2T9DPxSVEeGGzu7fmW9pXw" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2T9DQBSVEeGGzu7fmW9pXw" name="MedicationInformation">
      <ownedComment xmi:id="_RzpgUCAMEeGKirKJsFylGA">
        <body>The medication can be recorded as a precoordinated product strength, product form, or product concentration (e.g. &quot;metoprolol 25mg tablet&quot;, &quot;amoxicillin 400mg/5mL suspension&quot;); or not pre-coordinated (e.g. &quot;metoprolol product&quot;).</body>
      </ownedComment>
      <ownedRule xmi:id="_pJCAQGknEeGCCOsAP2C6Nw" name="MedicationInformationTemplateId" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJCAQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.23')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJD1cGknEeGCCOsAP2C6Nw" name="MedicationInformationId" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJD1cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJFDkGknEeGCCOsAP2C6Nw" name="MedicationInformationClassCode" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJFDkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPDIsGknEeGCCOsAP2C6Nw" name="MedicationInformationManufacturerOrganization" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPDIsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.manufacturerOrganization->one(manufacturerOrganization : cda::Organization | not manufacturerOrganization.oclIsUndefined() and manufacturerOrganization.oclIsKindOf(rim::Entity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZFOcGknEeGCCOsAP2C6Nw" name="MedicationInformationManufacturedMaterial" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZFOcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.manufacturedMaterial->one(manufacturedMaterial : cda::Material | not manufacturedMaterial.oclIsUndefined() and manufacturedMaterial.oclIsKindOf(cda::Material))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2UJQdxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_p6Zs8EcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2UnxkRSVEeGGzu7fmW9pXw" name="DischargeSummary">
      <ownedRule xmi:id="_43rsEGjHEeGNoZ3kEkcY2A" name="DischargeSummaryDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_43rsEWjHEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJGRsWknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJGRsmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJJVAGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCode" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJJVAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJQpwGknEeGCCOsAP2C6Nw" name="DischargeSummaryHospitalAdmissionMedicationsSectionEntriesOptional" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJQpwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJR35WknEeGCCOsAP2C6Nw" name="DischargeSummaryHospitalAdmissionDiagnosisSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJR35mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJTtEGknEeGCCOsAP2C6Nw" name="DischargeSummaryAdvanceDirectivesSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJTtEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJU7MGknEeGCCOsAP2C6Nw" name="DischargeSummaryAllergiesSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJU7MWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJWJVWknEeGCCOsAP2C6Nw" name="DischargeSummaryHospitalDischargeDiagnosisSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJWJVmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJX-gGknEeGCCOsAP2C6Nw" name="DischargeSummaryDischargeDietSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJX-gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DischargeDietSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJZMomknEeGCCOsAP2C6Nw" name="DischargeSummaryHospitalDischargeMedicationsSectionEntriesOptional" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJZMo2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJaaxWknEeGCCOsAP2C6Nw" name="DischargeSummaryFunctionalStatusSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJaaxmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJcP8GknEeGCCOsAP2C6Nw" name="DischargeSummaryHistoryOfPresentIllnessSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJcP8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJdeFWknEeGCCOsAP2C6Nw" name="DischargeSummaryHospitalCourseSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJdeFmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalCourseSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJfTQGknEeGCCOsAP2C6Nw" name="DischargeSummaryMedicalEquipmentSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJfTQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJghY2knEeGCCOsAP2C6Nw" name="DischargeSummaryPhysicalExamSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJghZGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJiWkGknEeGCCOsAP2C6Nw" name="DischargeSummaryPlanOfCareSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJiWkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJjks2knEeGCCOsAP2C6Nw" name="DischargeSummaryHistoryOfPastIllnessSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJjktGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJlZ4GknEeGCCOsAP2C6Nw" name="DischargeSummaryVitalSignsSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJlZ4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUNVgGknEeGCCOsAP2C6Nw" name="DischargeSummaryComponentOf" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUNVgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUQ_4GknEeGCCOsAP2C6Nw" name="DischargeSummaryChiefComplaintAndReasonForVisitSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUQ_4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUSOBWknEeGCCOsAP2C6Nw" name="DischargeSummaryChiefComplaintSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUSOBmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUUDMGknEeGCCOsAP2C6Nw" name="DischargeSummaryFamilyHistorySection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUUDMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUVRVWknEeGCCOsAP2C6Nw" name="DischargeSummaryHospitalConsultationsSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUVRVmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalConsultationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUXGgGknEeGCCOsAP2C6Nw" name="DischargeSummaryHospitalDischargeInstructionsSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUXGgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUY7sGknEeGCCOsAP2C6Nw" name="DischargeSummaryHospitalDischargePhysicalSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUY7sWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargePhysicalSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUaJ1WknEeGCCOsAP2C6Nw" name="DischargeSummaryHospitalDischargeStudiesSummarySection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUaJ1mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeStudiesSummarySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUb_AGknEeGCCOsAP2C6Nw" name="DischargeSummaryImmunizationsSectionEntriesOptional" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUb_AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUd0MGknEeGCCOsAP2C6Nw" name="DischargeSummaryProblemSectionEntriesOptional" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUd0MWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUfCVWknEeGCCOsAP2C6Nw" name="DischargeSummaryProceduresSectionEntriesOptional" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUfCVmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUg3gGknEeGCCOsAP2C6Nw" name="DischargeSummaryReasonForVisitSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUg3gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUissGknEeGCCOsAP2C6Nw" name="DischargeSummaryReviewOfSystemsSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUissWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUkh4GknEeGCCOsAP2C6Nw" name="DischargeSummarySocialHistorySection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUkh4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peZzUGknEeGCCOsAP2C6Nw" name="DischargeSummaryComponentOfEncompassingEncounter3ResponsiblePartyAssignedEntityHasPersonOrOrganization" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peZzUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.responsibleParty->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.responsibleParty->forAll(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peaaYGknEeGCCOsAP2C6Nw" name="DischargeSummaryComponentOfEncompassingEncounter3ResponsiblePartyAssignedEntity" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peaaYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.responsibleParty->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.responsibleParty->forAll(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pebogGknEeGCCOsAP2C6Nw" name="DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipantAssignedEntityHasPersonOrOrganization" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pebogWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.encounterParticipant->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.encounterParticipant->forAll(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pecPkGknEeGCCOsAP2C6Nw" name="DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipantAssignedEntity" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pecPkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.encounterParticipant->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.encounterParticipant->forAll(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peddsGknEeGCCOsAP2C6Nw" name="DischargeSummaryComponentOfEncompassingEncounter3EncompassingEncounterHasEffectiveTimeLow" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peddsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll(not effectiveTime.low.oclIsUndefined()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peeEwGknEeGCCOsAP2C6Nw" name="DischargeSummaryComponentOfEncompassingEncounter3EncompassingEncounterHasEffectiveTimeHigh" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peeEwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll(not effectiveTime.high.oclIsUndefined()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peer0GknEeGCCOsAP2C6Nw" name="DischargeSummaryComponentOfEncompassingEncounter3EffectiveTime" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peer0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pef58GknEeGCCOsAP2C6Nw" name="DischargeSummaryComponentOfEncompassingEncounter3ResponsibleParty" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pef58WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(cda::ResponsibleParty))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peghAGknEeGCCOsAP2C6Nw" name="DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipant" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peghAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll(encounterParticipant->one(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(cda::EncounterParticipant))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pehIEGknEeGCCOsAP2C6Nw" name="DischargeSummaryComponentOfEncompassingEncounter" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pehIEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) then self.componentOf->forAll(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter))) else true endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2U6FfBSVEeGGzu7fmW9pXw" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_pJR34GknEeGCCOsAP2C6Nw" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_pJR342knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJR342knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJR34GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJR35GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJR34WknEeGCCOsAP2C6Nw" type="_2Poj5BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJR34mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJTGAGknEeGCCOsAP2C6Nw" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_pJTGA2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJTGA2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJTGAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJTGBGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))->asSequence()->first().oclAsType(consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJTGAWknEeGCCOsAP2C6Nw" type="_2PidQhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJTGAmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJUUIGknEeGCCOsAP2C6Nw" name="getAdvanceDirectivesSection" isQuery="true" bodyCondition="_pJUUI2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJUUI2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJUUIGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJUUJGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSection))->asSequence()->first().oclAsType(consol::AdvanceDirectivesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJUUIWknEeGCCOsAP2C6Nw" type="_2KgzUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJUUImknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJWJUGknEeGCCOsAP2C6Nw" name="getAllergiesSection" isQuery="true" bodyCondition="_pJWJU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJWJU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJWJUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJWJVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->first().oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJWJUWknEeGCCOsAP2C6Nw" type="_2LMIwBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJWJUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJXXcGknEeGCCOsAP2C6Nw" name="getHospitalDischargeDiagnosisSection" isQuery="true" bodyCondition="_pJXXc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJXXc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJXXcGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJXXdGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeDiagnosisSection))->asSequence()->first().oclAsType(consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJXXcWknEeGCCOsAP2C6Nw" type="_2PidURSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJXXcmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJYlkGknEeGCCOsAP2C6Nw" name="getDischargeDietSection" isQuery="true" bodyCondition="_pJZMoGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJZMoGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJYlkGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJZMoWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DischargeDietSection))->asSequence()->first().oclAsType(consol::DischargeDietSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJYlkWknEeGCCOsAP2C6Nw" type="_2Uz-4xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJYlkmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJaawGknEeGCCOsAP2C6Nw" name="getHospitalDischargeMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_pJaaw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJaaw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJaawGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJaaxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::HospitalDischargeMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJaawWknEeGCCOsAP2C6Nw" type="_2Poj7RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJaawmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJbo4GknEeGCCOsAP2C6Nw" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_pJbo42knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJbo42knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJbo4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJbo5GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->first().oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJbo4WknEeGCCOsAP2C6Nw" type="_2KKOBhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJbo4mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJdeEGknEeGCCOsAP2C6Nw" name="getHistoryOfPresentIllnessSection" isQuery="true" bodyCondition="_pJdeE2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJdeE2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJdeEGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJdeFGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJdeEWknEeGCCOsAP2C6Nw" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJdeEmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJesMGknEeGCCOsAP2C6Nw" name="getHospitalCourseSection" isQuery="true" bodyCondition="_pJesM2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJesM2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJesMGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJesNGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalCourseSection))->asSequence()->first().oclAsType(consol::HospitalCourseSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJesMWknEeGCCOsAP2C6Nw" type="_2RqkOxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJesMmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJf6UGknEeGCCOsAP2C6Nw" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="_pJghYWknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJghYWknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJf6UGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJghYmknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))->asSequence()->first().oclAsType(consol::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJf6UWknEeGCCOsAP2C6Nw" type="_2KEucBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJghYGknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJhvgGknEeGCCOsAP2C6Nw" name="getPhysicalExamSection" isQuery="true" bodyCondition="_pJhvg2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJhvg2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJhvgGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJhvhGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))->asSequence()->first().oclAsType(consol::PhysicalExamSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJhvgWknEeGCCOsAP2C6Nw" type="_2Pxt0hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJhvgmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJi9oGknEeGCCOsAP2C6Nw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_pJjksWknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJjksWknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJi9oGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJjksmknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJi9oWknEeGCCOsAP2C6Nw" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJjksGknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJky0GknEeGCCOsAP2C6Nw" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_pJky02knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJky02knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJky0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJky1GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJky0WknEeGCCOsAP2C6Nw" type="_2PQJcxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJky0mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pJmA8GknEeGCCOsAP2C6Nw" name="getVitalSignsSection" isQuery="true" bodyCondition="_pJmoAWknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pJmoAWknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pJmA8GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJmoAmknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->first().oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pJmA8WknEeGCCOsAP2C6Nw" type="_2OfUcxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pJmoAGknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUSOAGknEeGCCOsAP2C6Nw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_pUSOA2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUSOA2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUSOAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUSOBGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->first().oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUSOAWknEeGCCOsAP2C6Nw" type="_oI7CQCsaEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUSOAmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUTcIGknEeGCCOsAP2C6Nw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_pUTcI2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUTcI2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUTcIGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUTcJGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->first().oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUTcIWknEeGCCOsAP2C6Nw" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUTcImknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUVRUGknEeGCCOsAP2C6Nw" name="getFamilyHistorySection" isQuery="true" bodyCondition="_pUVRU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUVRU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUVRUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUVRVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->first().oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUVRUWknEeGCCOsAP2C6Nw" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUVRUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUWfcGknEeGCCOsAP2C6Nw" name="getHospitalConsultationsSection" isQuery="true" bodyCondition="_pUWfc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUWfc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUWfcGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUWfdGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalConsultationsSection))->asSequence()->first().oclAsType(consol::HospitalConsultationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUWfcWknEeGCCOsAP2C6Nw" type="_eKFbUDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUWfcmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUYUoGknEeGCCOsAP2C6Nw" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_pUYUo2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUYUo2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUYUoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUYUpGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->first().oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUYUoWknEeGCCOsAP2C6Nw" type="_lBergCUMEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUYUomknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUaJ0GknEeGCCOsAP2C6Nw" name="getHospitalDischargePhysicalSection" isQuery="true" bodyCondition="_pUaJ02knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUaJ02knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUaJ0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUaJ1GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargePhysicalSection))->asSequence()->first().oclAsType(consol::HospitalDischargePhysicalSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUaJ0WknEeGCCOsAP2C6Nw" type="_WikGsCUTEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUaJ0mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUbX8GknEeGCCOsAP2C6Nw" name="getHospitalDischargeStudiesSummarySection" isQuery="true" bodyCondition="_pUbX82knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUbX82knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUbX8GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUbX9GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeStudiesSummarySection))->asSequence()->first().oclAsType(consol::HospitalDischargeStudiesSummarySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUbX8WknEeGCCOsAP2C6Nw" type="_38AXoCUTEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUbX8mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUdNIGknEeGCCOsAP2C6Nw" name="getImmunizationsSectionEntriesOptional" isQuery="true" bodyCondition="_pUdNI2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUdNI2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUdNIGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUdNJGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUdNIWknEeGCCOsAP2C6Nw" type="_EuPloBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUdNImknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUfCUGknEeGCCOsAP2C6Nw" name="getProblemSectionEntriesOptional" isQuery="true" bodyCondition="_pUfCU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUfCU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUfCUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUfCVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUfCUWknEeGCCOsAP2C6Nw" type="_naxrkBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUfCUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUgQcGknEeGCCOsAP2C6Nw" name="getProceduresSectionEntriesOptional" isQuery="true" bodyCondition="_pUgQc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUgQc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUgQcGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUgQdGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUgQcWknEeGCCOsAP2C6Nw" type="_s9Ig4BVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUgQcmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUiFoGknEeGCCOsAP2C6Nw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_pUiFo2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUiFo2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUiFoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUiFpGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->first().oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUiFoWknEeGCCOsAP2C6Nw" type="_Nm64UCscEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUiFomknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUj60GknEeGCCOsAP2C6Nw" name="getReviewOfSystemsSection" isQuery="true" bodyCondition="_pUj602knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUj602knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUj60GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUj61GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->first().oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUj60WknEeGCCOsAP2C6Nw" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUj60mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUlwAGknEeGCCOsAP2C6Nw" name="getSocialHistorySection" isQuery="true" bodyCondition="_pUlwA2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUlwA2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUlwAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUlwBGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->first().oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUlwAWknEeGCCOsAP2C6Nw" type="_2JKvgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUlwAmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sHrUoBUSEeG6PvUxSTZnaw" name="Indication">
      <ownedComment xmi:id="_CjRfQB-YEeGtfPlBCjHWkw">
        <body>The Indication Observation documents the rationale for an activity. It can do this with the id element to reference a problem recorded elsewhere in the document or with a code and value to record the problem type and problem within the Indication. For example, the indication for a prescription of a painkiller might be a headache that is documented in the Problems Section</body>
      </ownedComment>
      <ownedRule xmi:id="_MtdoIB7kEeGEaLkc3UAsAg" name="IndicationCodeNullFlavor" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_RK-VQB7kEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.value.nullFlavor->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJmoA2knEeGCCOsAP2C6Nw" name="IndicationTemplateId" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJmoBGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.19')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJprUGknEeGCCOsAP2C6Nw" name="IndicationClassCode" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJprUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJq5cGknEeGCCOsAP2C6Nw" name="IndicationMoodCode" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJq5cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJsHkGknEeGCCOsAP2C6Nw" name="IndicationId" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJsHkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJt8wGknEeGCCOsAP2C6Nw" name="IndicationCode" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJt8wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '404684003' or value.code = '409586006' or value.code = '282291009' or value.code = '64572001' or value.code = '248536006' or value.code = '418799008' or value.code = '55607006')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJvx8GknEeGCCOsAP2C6Nw" name="IndicationStatusCode" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJwZAGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJxnIGknEeGCCOsAP2C6Nw" name="IndicationEffectiveTime" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJxnIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJzcUGknEeGCCOsAP2C6Nw" name="IndicationValue" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJzcUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sHrUoRUSEeG6PvUxSTZnaw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VBXq8BUTEeG6PvUxSTZnaw" name="DrugVehicle">
      <ownedRule xmi:id="_G1AaMBq2EeGo461UQq-B1g" name="DrugVehiclePlayingEntityCode" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_IGiTgBq2EeGo461UQq-B1g">
          <language>OCL</language>
          <body>not self.playingEntity.oclIsUndefined() implies self.playingEntity.code->size() =1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WgMgsBq2EeGo461UQq-B1g" name="DrugVehiclePlayingEntityName" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y9oMcBq2EeGo461UQq-B1g">
          <language>OCL</language>
          <body>not self.playingEntity.oclIsUndefined() implies self.playingEntity.name->size() =1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJ2fo2knEeGCCOsAP2C6Nw" name="DrugVehicleTemplateId" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJ2fpGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.24')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJ474GknEeGCCOsAP2C6Nw" name="DrugVehicleClassCode" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJ474WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJ7YIGknEeGCCOsAP2C6Nw" name="DrugVehicleCode" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJ7YIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '412307009' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNqooGknEeGCCOsAP2C6Nw" name="DrugVehiclePlayingEntity" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNqooWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(rim::Entity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VBXq8RUTEeG6PvUxSTZnaw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DpoGkBUUEeG6PvUxSTZnaw" name="MedicationDispense">
      <ownedRule xmi:id="_pJ8mQGknEeGCCOsAP2C6Nw" name="MedicationDispenseTemplateId" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJ8mQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJ90YGknEeGCCOsAP2C6Nw" name="MedicationDispenseClassCode" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJ90YWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pJ_CgGknEeGCCOsAP2C6Nw" name="MedicationDispenseEffectiveTime" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pJ_CgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKAQoGknEeGCCOsAP2C6Nw" name="MedicationDispenseId" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKAQoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKBewGknEeGCCOsAP2C6Nw" name="MedicationDispenseMoodCode" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKBewWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKCF0GknEeGCCOsAP2C6Nw" name="MedicationDispenseRepeatNumber" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKCs4GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKD7AGknEeGCCOsAP2C6Nw" name="MedicationDispenseStatusCode" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKD7AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'aborted' or value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKFwMGknEeGCCOsAP2C6Nw" name="MedicationDispenseQuantity" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKFwMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.quantity.oclIsUndefined() or self.quantity.isNullFlavorUndefined()) implies (not self.quantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pN55MGknEeGCCOsAP2C6Nw" name="MedicationDispensePerformer2" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pN55MWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pN7HUGknEeGCCOsAP2C6Nw" name="MedicationDispenseMedicationSupplyOrder" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pN7HUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationSupplyOrder) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZHqsGknEeGCCOsAP2C6Nw" name="MedicationDispenseAssignedEntity" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZHqsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.assignedEntity.oclIsUndefined() and performer.assignedEntity.oclIsKindOf(cda::AssignedEntity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZO_cGknEeGCCOsAP2C6Nw" name="MedicationDispenseProduct" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZO_cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.product->one(product : cda::Product | not product.oclIsUndefined() and product.oclIsKindOf(cda::Product))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DpoGkRUUEeG6PvUxSTZnaw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_pN7uYGknEeGCCOsAP2C6Nw" name="getMedicationSupplyOrder" isQuery="true" bodyCondition="_pN7uY2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pN7uY2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pN7uYGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pN7uZGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationSupplyOrder))->asSequence()->first().oclAsType(consol::MedicationSupplyOrder)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pN7uYWknEeGCCOsAP2C6Nw" type="_j3aTQBrTEeGo461UQq-B1g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pN7uYmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pZIRwGknEeGCCOsAP2C6Nw" name="getAssignedEntity" isQuery="true" bodyCondition="_pZIRw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pZIRw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pZIRwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZIRxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAssignedEntities()->select(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity))->asSequence()->first().oclAsType(cda::AssignedEntity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pZIRwWknEeGCCOsAP2C6Nw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_6qmVsEcDEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pZIRwmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_chEhQBUUEeG6PvUxSTZnaw" name="PreconditionForSubstanceAdministration">
      <ownedRule xmi:id="_pHR7UBrcEeGo461UQq-B1g" name="PreconditionForSubstanceAdministrationCriterionCode" constrainedElement="_chEhQBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rVPAoBrcEeGo461UQq-B1g">
          <language>OCL</language>
          <body>not self.criterion.oclIsUndefined() implies not self.criterion.code.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZn6QBrcEeGo461UQq-B1g" name="PreconditionForSubstanceAdministrationCriterionText" constrainedElement="_chEhQBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_08wUgBrcEeGo461UQq-B1g">
          <language>OCL</language>
          <body>not self.criterion.oclIsUndefined() implies not self.criterion.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vY4cQBrcEeGo461UQq-B1g" name="PreconditionForSubstanceAdministrationCriterionValue" constrainedElement="_chEhQBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2wfjABrcEeGo461UQq-B1g">
          <language>OCL</language>
          <body>(self.criterion.value.oclIsUndefined() or self.criterion.value.isNullFlavorUndefined()) implies (self.criterion.value.oclIsTypeOf(datatypes::CD))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKIzhWknEeGCCOsAP2C6Nw" name="PreconditionForSubstanceAdministrationTemplateId" constrainedElement="_chEhQBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKIzhmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKL20GknEeGCCOsAP2C6Nw" name="PreconditionForSubstanceAdministrationCriterion" constrainedElement="_chEhQBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKL20WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.criterion->one(criterion : cda::Criterion | not criterion.oclIsUndefined() and criterion.oclIsKindOf(rim::Act))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_chEhQRUUEeG6PvUxSTZnaw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_OJn4MEcaEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_PZBdMBUlEeGvPruliC3crg" name="PolicyActivity">
      <ownedComment xmi:id="_p8E5gFzAEeGt2doqSDULjA">
        <body>A policy activity represents the policy or program providing the coverage.</body>
      </ownedComment>
      <ownedRule xmi:id="_pKQIQmknEeGCCOsAP2C6Nw" name="PolicyActivityTemplateId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKQIQ2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.61')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKR9cGknEeGCCOsAP2C6Nw" name="PolicyActivityClassCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKR9cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKTyoGknEeGCCOsAP2C6Nw" name="PolicyActivityCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKTyoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKVAwGknEeGCCOsAP2C6Nw" name="PolicyActivityId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKVAwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKW18GknEeGCCOsAP2C6Nw" name="PolicyActivityMoodCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKW18WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pKYrIGknEeGCCOsAP2C6Nw" name="PolicyActivityStatusCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKYrIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNnlUGknEeGCCOsAP2C6Nw" name="PolicyActivityAuthorizationActivity" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNoMYGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::AuthorizationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbDkY2knEeGCCOsAP2C6Nw" name="PolicyActivityPayer" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbDkZGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbGAoGknEeGCCOsAP2C6Nw" name="PolicyActivityGuarantor" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbGAoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbN8dGknEeGCCOsAP2C6Nw" name="PolicyActivityCoverage" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbN8dWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbQ_wGknEeGCCOsAP2C6Nw" name="PolicyActivityHolder" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbQ_wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfmtMGknEeGCCOsAP2C6Nw" name="PolicyActivityPayerPayerAssignedEntityPayerOrganizationName" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfmtMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) and self.performer.assignedEntity->exists(not oclIsUndefined()) and self.performer.assignedEntity.representedOrganization->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code &lt;> 'GUAR').assignedEntity.representedOrganization->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfnUQGknEeGCCOsAP2C6Nw" name="PolicyActivityPayerPayerAssignedEntityId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfnUQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) and self.performer.assignedEntity->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code &lt;> 'GUAR').assignedEntity->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfnUQmknEeGCCOsAP2C6Nw" name="PolicyActivityPayerPayerAssignedEntityCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfnUQ2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) and self.performer.assignedEntity->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code &lt;> 'GUAR').assignedEntity->forAll((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.110' and not value.code.oclIsUndefined()))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfn7UGknEeGCCOsAP2C6Nw" name="PolicyActivityPayerPayerAssignedEntityAddr" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfn7UWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) and self.performer.assignedEntity->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code &lt;> 'GUAR').assignedEntity->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfoiYGknEeGCCOsAP2C6Nw" name="PolicyActivityPayerPayerAssignedEntityTelecom" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfoiYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) and self.performer.assignedEntity->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code &lt;> 'GUAR').assignedEntity->forAll((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfpJcGknEeGCCOsAP2C6Nw" name="PolicyActivityPayerPayerAssignedEntityPayerOrganization" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfpJcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) and self.performer.assignedEntity->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code &lt;> 'GUAR').assignedEntity->forAll(representedOrganization->one(representedOrganization : cda::Organization | not representedOrganization.oclIsUndefined() and representedOrganization.oclIsKindOf(cda::Organization))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfpJcmknEeGCCOsAP2C6Nw" name="PolicyActivityPayerTemplateId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfpwgGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code &lt;> 'GUAR')->forAll(templateId->exists(id : datatypes::II | id.root = 'null')) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfpwgWknEeGCCOsAP2C6Nw" name="PolicyActivityPayerTypeCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfpwgmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code &lt;> 'GUAR')->forAll(isDefined('typeCode') and typeCode=vocab::ParticipationPhysicalPerformer::PRF) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfqXkGknEeGCCOsAP2C6Nw" name="PolicyActivityPayerPayerAssignedEntity" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfqXkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code &lt;> 'GUAR')->forAll(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfv3IGknEeGCCOsAP2C6Nw" name="PolicyActivityGuarantorGuarantorAssignedEntityCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfv3IWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) and self.performer.assignedEntity->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code = 'GUAR').assignedEntity->forAll((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = 'GUAR' and value.codeSystem = '2.16.840.1.113883.5.111'))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfweMGknEeGCCOsAP2C6Nw" name="PolicyActivityGuarantorGuarantorAssignedEntityAddr" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfweMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) and self.performer.assignedEntity->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code = 'GUAR').assignedEntity->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfxFQGknEeGCCOsAP2C6Nw" name="PolicyActivityGuarantorGuarantorAssignedEntityTelecom" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfxFQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) and self.performer.assignedEntity->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code = 'GUAR').assignedEntity->forAll((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfxFQmknEeGCCOsAP2C6Nw" name="PolicyActivityGuarantorTime" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfxFQ2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code = 'GUAR')->forAll((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfxsUGknEeGCCOsAP2C6Nw" name="PolicyActivityGuarantorGuarantorAssignedEntity" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfxsUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.performer->exists(not oclIsUndefined()) then self.performer->select(assignedEntity.code = 'GUAR')->forAll(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pf2k0GknEeGCCOsAP2C6Nw" name="PolicyActivityCoverageCoverageRoleCoveragePlayingEntityName" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pf2k0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) and self.participant.participantRole->exists(not oclIsUndefined()) and self.participant.participantRole.playingEntity->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::COV).participantRole.playingEntity->forAll((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1)) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pf3L4GknEeGCCOsAP2C6Nw" name="PolicyActivityCoverageCoverageRoleId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pf3L4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) and self.participant.participantRole->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::COV).participantRole->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pf3y8GknEeGCCOsAP2C6Nw" name="PolicyActivityCoverageCoverageRoleCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pf3y8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) and self.participant.participantRole->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::COV).participantRole->forAll((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.111' and (value.code = 'FAMDEP' or value.code = 'FSTUD' or value.code = 'HANDIC' or value.code = 'INJ' or value.code = 'PSTUD' or value.code = 'SELF' or value.code = 'SPON' or value.code = 'STUD')))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pf4aAGknEeGCCOsAP2C6Nw" name="PolicyActivityCoverageCoverageRoleAddr" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pf4aAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) and self.participant.participantRole->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::COV).participantRole->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pf5BEGknEeGCCOsAP2C6Nw" name="PolicyActivityCoverageCoverageRoleCoveragePlayingEntity" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pf5BEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) and self.participant.participantRole->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::COV).participantRole->forAll(playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(cda::PlayingEntity))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pf5oIGknEeGCCOsAP2C6Nw" name="PolicyActivityCoverageTypeCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pf5oIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::COV)->forAll(typeCode=vocab::ParticipationType::COV) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pf6PMGknEeGCCOsAP2C6Nw" name="PolicyActivityCoverageTime" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pf6PMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::COV)->forAll((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pf62QGknEeGCCOsAP2C6Nw" name="PolicyActivityCoverageCoverageRole" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pf62QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::COV)->forAll(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pf_uwGknEeGCCOsAP2C6Nw" name="PolicyActivityHolderHolderRoleId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pf_uwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) and self.participant.participantRole->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::HLD).participantRole->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pgAV0GknEeGCCOsAP2C6Nw" name="PolicyActivityHolderHolderRoleAddr" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pgAV0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) and self.participant.participantRole->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::HLD).participantRole->forAll((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pgA84GknEeGCCOsAP2C6Nw" name="PolicyActivityHolderTypeCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pgA84WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::HLD)->forAll(typeCode=vocab::ParticipationType::HLD) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pgBj8GknEeGCCOsAP2C6Nw" name="PolicyActivityHolderTime" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pgBj8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::HLD)->forAll((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pgCLAGknEeGCCOsAP2C6Nw" name="PolicyActivityHolderHolderRole" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pgCLAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::HLD)->forAll(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole))) else true endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PZBdMRUlEeGvPruliC3crg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pNpagGknEeGCCOsAP2C6Nw" name="getAuthorizationActivities" isQuery="true" bodyCondition="_pNpag2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pNpag2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pNpagGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNpahGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AuthorizationActivity)).oclAsType(consol::AuthorizationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pNpagWknEeGCCOsAP2C6Nw" type="_XUoXwBnZEeGs5a462vYX5Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pNpagmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Cg3pkBUmEeGvPruliC3crg" name="CoverageActivity">
      <ownedRule xmi:id="_pKzh4GknEeGCCOsAP2C6Nw" name="CoverageActivityTemplateId" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pKzh4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.60')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pK1XEGknEeGCCOsAP2C6Nw" name="CoverageActivityClassCode" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pK1XEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pK3MQGknEeGCCOsAP2C6Nw" name="CoverageActivityCode" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pK3MQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '48768-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pK4aYGknEeGCCOsAP2C6Nw" name="CoverageActivityId" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pK4aYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pK6PkGknEeGCCOsAP2C6Nw" name="CoverageActivityMoodCode" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pK6PkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pK8EwGknEeGCCOsAP2C6Nw" name="CoverageActivityStatusCode" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pK8EwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pK9S4GknEeGCCOsAP2C6Nw" name="CoverageActivityPolicyActivity" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pK9S4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::PolicyActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Cg3pkRUmEeGvPruliC3crg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pK-hAGknEeGCCOsAP2C6Nw" name="getPolicyActivities" isQuery="true" bodyCondition="_pK-hA2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pK-hA2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pK-hAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pK-hBGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PolicyActivity)).oclAsType(consol::PolicyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pK-hAWknEeGCCOsAP2C6Nw" type="_PZBdMBUlEeGvPruliC3crg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pK-hAmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5Ha7ABUyEeGbmN_W114JUw" name="ProblemObservation">
      <ownedComment xmi:id="_-wq7oCAsEeGetMjKLkqR8g">
        <body>&lt;p>A problem is a clinical statement that a clinician has noted. In health care it is a condition that requires monitoring or diagnostic, therapeutic, or educational action. It also refers to any unmet or partially met basic human need.&lt;/p>&#xD;
&lt;p>A Problem Observation is required to be wrapped in an act wrapper in locations such as the Problem Section, Allergies Section, and Hospital Discharge Diagnosis Section, where the type of problem needs to be identified or the condition tracked. A Problem Observation can be a valid &quot;standalone&quot; template instance in cases where a simple problem observation is to be sent.&lt;/p>&#xD;
&lt;p>The negationInd attribute, if true, specifies that the problem indicated was observed to not have occurred (which is subtly but importantly different from having not been observed). NegationInd='true' is an acceptable way to make a clinical assertion that something did not occur, for example, &quot;no diabetes&quot;.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_vaH7gCBEEeG938evaWkvcA" name="ProblemObservationHasTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaH7gSBEEeG938evaWkvcA">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_TFQWECf3EeGO5_JBy9h6BA" name="ProblemObservationHasTextReferenceValue" constrainedElement="_vaH7gCBEEeG938evaWkvcA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VepPUCf3EeGO5_JBy9h6BA">
          <language>OCL</language>
          <body>not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1fQFECf3EeGO5_JBy9h6BA" name="ProblemObservationAgeObservationInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_48XFICf3EeGO5_JBy9h6BA">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | not er.observation.oclIsUndefined() and er.observation.oclIsKindOf(consol::AgeObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLCLYGknEeGCCOsAP2C6Nw" name="ProblemObservationTemplateId" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLCLYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLGc0GknEeGCCOsAP2C6Nw" name="ProblemObservationClassCode" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLGc0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLISAGknEeGCCOsAP2C6Nw" name="ProblemObservationMoodCode" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLISAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLI5EGknEeGCCOsAP2C6Nw" name="ProblemObservationNegationInd" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLI5EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLKHMGknEeGCCOsAP2C6Nw" name="ProblemObservationId" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLKHMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLL8YGknEeGCCOsAP2C6Nw" name="ProblemObservationCode" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLL8YWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '404684003' or value.code = '409586006' or value.code = '282291009' or value.code = '64572001' or value.code = '248536006' or value.code = '418799008' or value.code = '55607006')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLNxkGknEeGCCOsAP2C6Nw" name="ProblemObservationText" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLNxkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLQN0GknEeGCCOsAP2C6Nw" name="ProblemObservationStatusCode" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLQN0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLRb8GknEeGCCOsAP2C6Nw" name="ProblemObservationEffectiveTime" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLRb8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLT4MGknEeGCCOsAP2C6Nw" name="ProblemObservationValue" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLT4MWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLVtYGknEeGCCOsAP2C6Nw" name="ProblemObservationAgeObservation" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLVtYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLYJpWknEeGCCOsAP2C6Nw" name="ProblemObservationHealthStatusObservation" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLYJpmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::HealthStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLnaMGknEeGCCOsAP2C6Nw" name="ProblemObservationProblemStatus" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLnaMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemStatus) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5Ha7ARUyEeGbmN_W114JUw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pLWUcGknEeGCCOsAP2C6Nw" name="getAgeObservation" isQuery="true" bodyCondition="_pLWUc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pLWUc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pLWUcGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLW7gGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AgeObservation))->asSequence()->first().oclAsType(consol::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pLWUcWknEeGCCOsAP2C6Nw" type="_2EqqABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pLWUcmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pLZXwGknEeGCCOsAP2C6Nw" name="getHealthStatusObservation" isQuery="true" bodyCondition="_pLZXw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pLZXw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pLZXwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLZXxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HealthStatusObservation))->asSequence()->first().oclAsType(consol::HealthStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pLZXwWknEeGCCOsAP2C6Nw" type="_2ExXsBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pLZXwmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pLooUGknEeGCCOsAP2C6Nw" name="getProblemStatus" isQuery="true" bodyCondition="_pLooU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pLooU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pLooUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLooVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemStatus))->asSequence()->first().oclAsType(consol::ProblemStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pLooUWknEeGCCOsAP2C6Nw" type="_SjN_8BUzEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pLooUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SjN_8BUzEeGbmN_W114JUw" name="ProblemStatus">
      <ownedComment xmi:id="_DRGcECA8EeG9GZYpu7WBOQ">
        <body>The Problem Status records whether the indicated problem is active, inactive, or resolved.</body>
      </ownedComment>
      <ownedRule xmi:id="_NGUbACp_EeGiFpKeZIy4Pg" name="ProblemStatusTextReference" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_QDaeQCp_EeGiFpKeZIy4Pg">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_S6G-kCp_EeGiFpKeZIy4Pg" name="ProblemStatusTextReferenceValue" constrainedElement="_NGUbACp_EeGiFpKeZIy4Pg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_UfbWkCp_EeGiFpKeZIy4Pg">
          <language>OCL</language>
          <body>not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLZ-0GknEeGCCOsAP2C6Nw" name="ProblemStatusTemplateId" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLZ-0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLcbEGknEeGCCOsAP2C6Nw" name="ProblemStatusClassCode" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLcbEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLdpMGknEeGCCOsAP2C6Nw" name="ProblemStatusMoodCode" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLdpMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLfeYGknEeGCCOsAP2C6Nw" name="ProblemStatusCode" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLgFcGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '33999-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLhTkGknEeGCCOsAP2C6Nw" name="ProblemStatusText" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLhTkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLjIwGknEeGCCOsAP2C6Nw" name="ProblemStatusStatusCode" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLjIwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pLllAGknEeGCCOsAP2C6Nw" name="ProblemStatusValue" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pLmMEGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '55561003' or value.code = '73425007' or value.code = '413322009')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_SjN_8RUzEeGbmN_W114JUw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__qYdcBVNEeGbmN_W114JUw" name="ImmunizationRefusalReason">
      <ownedRule xmi:id="_pL5HAGknEeGCCOsAP2C6Nw" name="ImmunizationRefusalReasonTemplateId" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pL5HAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.53')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pL68MGknEeGCCOsAP2C6Nw" name="ImmunizationRefusalReasonClassCode" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pL68MWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pL8xYGknEeGCCOsAP2C6Nw" name="ImmunizationRefusalReasonCode" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pL8xYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.8' and (value.code = 'IMMUNE' or value.code = 'MEDPREC' or value.code = 'OSTOCK' or value.code = 'PATOBJ' or value.code = 'PHILISOP' or value.code = 'RELIG' or value.code = 'VACEFF' or value.code = 'VACSAF')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pL9_gGknEeGCCOsAP2C6Nw" name="ImmunizationRefusalReasonId" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pL9_gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pL_NoGknEeGCCOsAP2C6Nw" name="ImmunizationRefusalReasonMoodCode" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pL_NoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMBp4GknEeGCCOsAP2C6Nw" name="ImmunizationRefusalReasonStatusCode" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMBp4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__qr_cBVNEeGbmN_W114JUw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_daTqABVOEeGbmN_W114JUw" name="ImmunizationMedicationInformation">
      <ownedComment xmi:id="_JOE1QBq0EeGo461UQq-B1g">
        <body>The Immunization Medication Information represents product information about the immunization substance. The vaccine manufacturer and vaccine lot number are typically recorded in the medical record and should be included if known.</body>
      </ownedComment>
      <ownedRule xmi:id="_pMEGJWknEeGCCOsAP2C6Nw" name="ImmunizationMedicationInformationTemplateId" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMEtMGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.54')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMF7UGknEeGCCOsAP2C6Nw" name="ImmunizationMedicationInformationClassCode" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMF7UWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMHJcGknEeGCCOsAP2C6Nw" name="ImmunizationMedicationInformationId" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMHJcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOAm5WknEeGCCOsAP2C6Nw" name="ImmunizationMedicationInformationManufacturerOrganization" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOAm5mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.manufacturerOrganization->one(manufacturerOrganization : cda::Organization | not manufacturerOrganization.oclIsUndefined() and manufacturerOrganization.oclIsKindOf(rim::Entity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZNxUGknEeGCCOsAP2C6Nw" name="ImmunizationMedicationInformationManufacturedMaterial" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZNxUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.manufacturedMaterial->one(manufacturedMaterial : cda::Material | not manufacturedMaterial.oclIsUndefined() and manufacturedMaterial.oclIsKindOf(cda::Material))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_daTqARVOEeGbmN_W114JUw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_p6Zs8EcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bGzYgBVdEeGQCvUGzi1kDQ" name="AllergiesSectionEntriesOptional">
      <ownedComment xmi:id="_bGzYgRVdEeGQCvUGzi1kDQ" annotatedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <body>This section lists and describes any medication allergies, adverse reactions, idiosyncratic reactions, anaphylaxis/anaphylactoid reactions to food items, and metabolic variations or adverse reactions/allergies to other substances (such as latex, iodine, tape adhesives) used to assure the safety of health care delivery. At a minimum, it should list currently active and any relevant historical allergies and adverse reactions.</body>
      </ownedComment>
      <ownedRule xmi:id="_pMKz1WknEeGCCOsAP2C6Nw" name="AllergiesSectionEntriesOptionalTemplateId" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMKz1mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMNQEGknEeGCCOsAP2C6Nw" name="AllergiesSectionEntriesOptionalCode" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMNQEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMOeMGknEeGCCOsAP2C6Nw" name="AllergiesSectionEntriesOptionalTitle" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMPFQGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMQTYGknEeGCCOsAP2C6Nw" name="AllergiesSectionEntriesOptionalText" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMQTYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPAFYmknEeGCCOsAP2C6Nw" name="AllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPAFY2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FHCOMBVgEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pPBTgGknEeGCCOsAP2C6Nw" name="getAllergyProblemActs" isQuery="true" bodyCondition="_pPBTg2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pPBTg2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pPBTgGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPBThGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AllergyProblemAct)).oclAsType(consol::AllergyProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pPBTgWknEeGCCOsAP2C6Nw" type="_2EAisBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pPBTgmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iAoXEBVdEeGQCvUGzi1kDQ" name="MedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_S0qoIB-uEeGKirKJsFylGA">
        <body>The Medications section defines a patient's current medications and pertinent medication history. At a minimum, the currently active medications are to be listed, with an entire medication history as an option. The section may also include a patient's prescription and dispense history.&#xD;
This section requires that there be either an entry indicating the subject is not known to be on any medications, or that there be entries summarizing the subject's medications.</body>
      </ownedComment>
      <ownedRule xmi:id="_pMQ6cGknEeGCCOsAP2C6Nw" name="MedicationsSectionEntriesOptionalTemplateId" constrainedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMQ6cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMTWsGknEeGCCOsAP2C6Nw" name="MedicationsSectionEntriesOptionalCode" constrainedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMTWsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10160-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMVL4GknEeGCCOsAP2C6Nw" name="MedicationsSectionEntriesOptionalTitle" constrainedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMVL4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'Medications')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMWaAGknEeGCCOsAP2C6Nw" name="MedicationsSectionEntriesOptionalText" constrainedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMWaAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPBThWknEeGCCOsAP2C6Nw" name="MedicationsSectionEntriesOptionalMedicationActivity" constrainedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPBThmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iAoXIhVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pPChoGknEeGCCOsAP2C6Nw" name="getMedicationActivities" isQuery="true" bodyCondition="_pPCho2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pPCho2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pPChoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPChpGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pPChoWknEeGCCOsAP2C6Nw" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pPChomknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_naxrkBVdEeGQCvUGzi1kDQ" name="ProblemSectionEntriesOptional">
      <ownedComment xmi:id="_meK94CAoEeGetMjKLkqR8g">
        <body>This section lists and describes all relevant clinical problems at the time the document is generated. At a minimum, all pertinent current and historical problems should be listed.</body>
      </ownedComment>
      <ownedRule xmi:id="_pMXBEGknEeGCCOsAP2C6Nw" name="ProblemSectionEntriesOptionalTemplateId" constrainedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMXoIGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMZdUGknEeGCCOsAP2C6Nw" name="ProblemSectionEntriesOptionalCode" constrainedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMZdUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11450-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMarcGknEeGCCOsAP2C6Nw" name="ProblemSectionEntriesOptionalTitle" constrainedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMarcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMb5kGknEeGCCOsAP2C6Nw" name="ProblemSectionEntriesOptionalText" constrainedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMb5kWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPRyNWknEeGCCOsAP2C6Nw" name="ProblemSectionEntriesOptionalProblemConcern" constrainedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPRyNmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProblemConcernAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_naxrlxVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pPTAUGknEeGCCOsAP2C6Nw" name="getProblemConcerns" isQuery="true" bodyCondition="_pPTAU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pPTAU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pPTAUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPTAVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct)).oclAsType(consol::ProblemConcernAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pPTAUWknEeGCCOsAP2C6Nw" type="_2H6yUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pPTAUmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_s9Ig4BVdEeGQCvUGzi1kDQ" name="ProceduresSectionEntriesOptional">
      <ownedComment xmi:id="_s9Ig4RVdEeGQCvUGzi1kDQ" annotatedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <body>This section defines all interventional, surgical, diagnostic, or therapeutic procedures or treatments pertinent to the patient historically at the time the document is generated. The section is intended to include notable procedures, but can contain all procedures for the period of time being summarized. The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore this section contains procedure templates represented with three RIM classes: Act. Observation, and Procedure. Procedure act is for procedures the alter that physical condition of a patient (Splenectomy). Observation act is for procedures that result in new information about a patient but do not cause physical alteration (EEG). Act is for all other types of procedures (dressing change).&#xD;
The length of an encounter is documented in the documentationOf/encompassingEncounter/effectiveTime and length of service in documentationOf/ServiceEvent/effectiveTime.</body>
      </ownedComment>
      <ownedRule xmi:id="_pMdHsGknEeGCCOsAP2C6Nw" name="ProceduresSectionEntriesOptionalTemplateId" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMdHsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMe84GknEeGCCOsAP2C6Nw" name="ProceduresSectionEntriesOptionalCode" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMe84WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '47519-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMgyEGknEeGCCOsAP2C6Nw" name="ProceduresSectionEntriesOptionalText" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMgyEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOB1AGknEeGCCOsAP2C6Nw" name="ProceduresSectionEntriesOptionalProcedureActivityProcedure" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOB1AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::ProcedureActivityProcedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pODDJWknEeGCCOsAP2C6Nw" name="ProceduresSectionEntriesOptionalProcedureAcivityObservation" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pODqMGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProcedureActivityObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOE4UGknEeGCCOsAP2C6Nw" name="ProceduresSectionEntriesOptionalProcedureActivityAct" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOE4UWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProcedureActivityAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_s9Ig6RVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pODDIGknEeGCCOsAP2C6Nw" name="getProcedureActivityProcedures" isQuery="true" bodyCondition="_pODDI2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pODDI2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pODDIGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pODDJGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure)).oclAsType(consol::ProcedureActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pODDIWknEeGCCOsAP2C6Nw" type="_2OG58RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pODDImknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pOERQGknEeGCCOsAP2C6Nw" name="getProcedureAcivityObservations" isQuery="true" bodyCondition="_pOERQ2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOERQ2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOERQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOERRGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProcedureActivityObservation)).oclAsType(consol::ProcedureActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOERQWknEeGCCOsAP2C6Nw" type="_Aj7JkBg4EeGs5a462vYX5Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOERQmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pOFfYGknEeGCCOsAP2C6Nw" name="getProcedureActivityActs" isQuery="true" bodyCondition="_pOGtgGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOGtgGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOFfYGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOGtgWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProcedureActivityAct)).oclAsType(consol::ProcedureActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOGGcGknEeGCCOsAP2C6Nw" type="_awdH4Bg4EeGs5a462vYX5Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOGGcWknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xGqiEBVdEeGQCvUGzi1kDQ" name="ResultsSectionEntriesOptional">
      <ownedComment xmi:id="_xGqiERVdEeGQCvUGzi1kDQ" annotatedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <body>&lt;p>
The Results section contains the results of observations generated by laboratories, imaging procedures, and other procedures. The scope includes observations such as hematology, chemistry, serology, virology, toxicology, microbiology, plain x-ray, ultrasound, CT, MRI, angiography, echocardiography, nuclear medicine, pathology, and procedure observations. The section often includes notable results such as abnormal values or relevant trends, and could contain all results for the period of time being documented.
&lt;/p>
&lt;p>
Laboratory results are typically generated by laboratories providing analytic services in areas such as chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These observations are based on analysis of specimens obtained from the patient and submitted to the laboratory.
&lt;/p>
&lt;p>
Imaging results are typically generated by a clinician reviewing the output of an imaging procedure, such as where a cardiologist reports the left ventricular ejection fraction based on the review of a cardiac echocardiogram.
Procedure results are typically generated by a clinician to provide more granular information about component observations made during  a procedure, such as where a gastroenterologist reports the size of a polyp observed during a colonoscopy.
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_pMiAMGknEeGCCOsAP2C6Nw" name="ResultsSectionEntriesOptionalTemplateId" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMiAMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMj1YGknEeGCCOsAP2C6Nw" name="ResultsSectionEntriesOptionalCode" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMj1YWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '30954-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMlDgGknEeGCCOsAP2C6Nw" name="ResultsSectionEntriesOptionalTitle" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMlqkGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMmRoGknEeGCCOsAP2C6Nw" name="ResultsSectionEntriesOptionalText" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMmRoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPIBMGknEeGCCOsAP2C6Nw" name="ResultsSectionEntriesOptionalResultOrganizer" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPIBMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::ResultOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xGqiFRVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pPIoQGknEeGCCOsAP2C6Nw" name="getResultOrganizers" isQuery="true" bodyCondition="_pPIoQ2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pPIoQ2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pPIoQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPIoRGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::ResultOrganizer)).oclAsType(consol::ResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pPIoQWknEeGCCOsAP2C6Nw" type="_2JxzgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pPIoQmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1RZdIBVdEeGQCvUGzi1kDQ" name="AdvanceDirectivesSectionEntriesOptional">
      <ownedComment xmi:id="_1RZdIRVdEeGQCvUGzi1kDQ" annotatedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <body>&lt;p>
This section contains data defining the patient's advance directives and any reference to supporting documentation. The most recent and up-to-date directives are required, if known, and should be listed in as much detail as possible. This section contains data such as the existence of living wills, healthcare proxies, and CPR and resuscitation status. If referenced documents are available, they can be included in the CCD exchange package. 
&lt;/p>
&lt;p>
NOTE: The descriptions in this section differentiate between &quot;advance directives&quot; and &quot;advance directive documents&quot;. The former are the directions whereas the latter are legal documents containing those directions. Thus, an advance directive might be &quot;no cardiopulmonary resuscitation&quot;, and this directive might be stated in a legal advance directive document.
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_1RZdIhVdEeGQCvUGzi1kDQ" annotatedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <body>&lt;p>&#xD;
    The Advance Directives Section contains information that defines the patient's expectations and requests&#xD;
    for care along with the locations of the documents. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_pMnfwGknEeGCCOsAP2C6Nw" name="AdvanceDirectivesSectionEntriesOptionalTemplateId" constrainedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMnfwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.21')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMp8AGknEeGCCOsAP2C6Nw" name="AdvanceDirectivesSectionEntriesOptionalCode" constrainedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMp8AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '42348-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMrKIGknEeGCCOsAP2C6Nw" name="AdvanceDirectivesSectionEntriesOptionalTitle" constrainedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMrKIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMsYQGknEeGCCOsAP2C6Nw" name="AdvanceDirectivesSectionEntriesOptionalText" constrainedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMsYQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQM_QGknEeGCCOsAP2C6Nw" name="AdvanceDirectivesSectionEntriesOptionalAdvanceDirectiveObservation" constrainedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQM_QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AdvanceDirectiveObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1RZdJhVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pQNmUGknEeGCCOsAP2C6Nw" name="getAdvanceDirectiveObservation" isQuery="true" bodyCondition="_pQNmU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pQNmU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pQNmUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQNmVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AdvanceDirectiveObservation))->asSequence()->first().oclAsType(consol::AdvanceDirectiveObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pQNmUWknEeGCCOsAP2C6Nw" type="_2KlEwBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pQNmUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4yj2wBVdEeGQCvUGzi1kDQ" name="EncountersSectionEntriesOptional">
      <ownedComment xmi:id="_4yj2wRVdEeGQCvUGzi1kDQ" annotatedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <body>This section lists and describes any healthcare encounters pertinent to the patient's current health status or historical health history. An Encounter is an interaction, regardless of the setting, between a patient and a practitioner who is vested with primary responsibility for diagnosing, evaluating, or treating the patient's condition. It may include visits, appointments, as well as non face-to-face interactions. It is also a contact between a patient and a practitioner who has primary responsibility for assessing and treating the patient at a given contact, exercising independent judgment. This section may contain all encounters for the time period being summarized, but should include notable encounters.</body>
      </ownedComment>
      <ownedRule xmi:id="_pMtmYGknEeGCCOsAP2C6Nw" name="EncountersSectionEntriesOptionalTemplateId" constrainedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMtmYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.22')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMvbkGknEeGCCOsAP2C6Nw" name="EncountersSectionEntriesOptionalCode" constrainedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMvbkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '46240-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMxQwGknEeGCCOsAP2C6Nw" name="EncountersSectionEntriesOptionalTitle" constrainedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMxQwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pMye4GknEeGCCOsAP2C6Nw" name="EncountersSectionEntriesOptionalText" constrainedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMye4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pREh8mknEeGCCOsAP2C6Nw" name="EncountersSectionEntriesOptionalEncounterActivities" constrainedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pREh82knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::EncounterActivities))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4yj2xxVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pRFwEGknEeGCCOsAP2C6Nw" name="getEncounterActivitiess" isQuery="true" bodyCondition="_pRFwE2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pRFwE2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pRFwEGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRFwFGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::EncounterActivities)).oclAsType(consol::EncounterActivities)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pRFwEWknEeGCCOsAP2C6Nw" type="_2LayQBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pRFwEmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EuPloBVeEeGQCvUGzi1kDQ" name="ImmunizationsSectionEntriesOptional">
      <ownedComment xmi:id="_eb3_0BqgEeGo461UQq-B1g">
        <body>The Immunizations section defines a patient's current immunization status and pertinent immunization history. The primary use case for the Immunization section is to enable communication of a patient's immunization status. The section should include current immunization status, and may contain the entire immunization history that is relevant to the period of time being summarized.</body>
      </ownedComment>
      <ownedRule xmi:id="_pMzF8GknEeGCCOsAP2C6Nw" name="ImmunizationsSectionEntriesOptionalTemplateId" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pMztAGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pM1iMGknEeGCCOsAP2C6Nw" name="ImmunizationsSectionEntriesOptionalCode" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pM1iMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11369-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pM2wUGknEeGCCOsAP2C6Nw" name="ImmunizationsSectionEntriesOptionalTitle" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pM2wUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pM3-cGknEeGCCOsAP2C6Nw" name="ImmunizationsSectionEntriesOptionalText" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pM3-cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPQkEGknEeGCCOsAP2C6Nw" name="ImmunizationsSectionEntriesOptionalImmunizationActivity" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPQkEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::ImmunizationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EuPlsBVeEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pPRyMGknEeGCCOsAP2C6Nw" name="getImmunizationActivities" isQuery="true" bodyCondition="_pPRyM2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pPRyM2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pPRyMGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPRyNGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::ImmunizationActivity)).oclAsType(consol::ImmunizationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pPRyMWknEeGCCOsAP2C6Nw" type="_2MAoIBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pPRyMmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bRH8sBVeEeGQCvUGzi1kDQ" name="VitalSignsSectionEntriesOptional">
      <ownedComment xmi:id="_LjYecBwiEeG_RY8fzJjtMw">
        <body>&lt;p>The Vital Signs section contains relevant vital signs for the context and use case of the document type, such as blood pressure, heart rate, respiratory rate, height, weight, body mass index, head circumference, and pulse oximetry. The section should include notable vital signs such as the most recent, maximum and/or minimum, baseline, or relevant trends.&lt;/p>

&lt;p>Vital signs are represented in the same way as other results, but are aggregated into their own section to follow clinical conventions.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_pM5MkGknEeGCCOsAP2C6Nw" name="VitalSignsSectionEntriesOptionalTemplateId" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pM5MkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pM7BwGknEeGCCOsAP2C6Nw" name="VitalSignsSectionEntriesOptionalCode" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pM7BwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '8716-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pM828GknEeGCCOsAP2C6Nw" name="VitalSignsSectionEntriesOptionalText" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pM828WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pM-FEGknEeGCCOsAP2C6Nw" name="VitalSignsSectionEntriesOptionalTitle" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pM-FEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOH7oGknEeGCCOsAP2C6Nw" name="VitalSignsSectionEntriesOptionalVitalSignsOrganizer" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOIisGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::VitalSignsOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_bRH8uhVeEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_sTsugBxREeG8X6LmnKJ43Q">
          <body>skip</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pOJJwGknEeGCCOsAP2C6Nw" name="getVitalSignsOrganizers" isQuery="true" bodyCondition="_pOJJw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOJJw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOJJwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOJJxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::VitalSignsOrganizer)).oclAsType(consol::VitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOJJwWknEeGCCOsAP2C6Nw" type="_2OlbCRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOJJwmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Aj7JkBg4EeGs5a462vYX5Q" name="ProcedureActivityObservation">
      <ownedComment xmi:id="_RlVIQBxuEeGXP8PxDYviDg">
        <body>The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore procedure templates can be represented with various RIM classes: act (e.g., dressing change), observation (e.g., EEG), procedure (e.g. splenectomy). &#xD;
This clinical statement represents procedures that result in new information about the patient that cannot be classified as a procedure according to the HL7 RIM. Examples of these procedures are diagnostic imaging procedures, EEGs and EKGs.</body>
      </ownedComment>
      <ownedRule xmi:id="_-WpQYBxuEeGXP8PxDYviDg" name="ProcedureActivityObservationCodeCodeSystems" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-WpQYRxuEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.1' xor self.code.codeSystem = '2.16.840.1.113883.6.96' xor self.code.codeSystem = '2.16.840.1.113883.6.12' xor self.code.codeSystem = '2.16.840.1.113883.6.104'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gpDwsBxvEeGXP8PxDYviDg" name="ProcedureActivityObservationCodeOriginalText" constrainedElement="_qGzKgBrPEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_gpDwsRxvEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iKsikBxvEeGXP8PxDYviDg" name="ProcedureActivityObservationOriginalTextReferenceValue" constrainedElement="_N4ba0BrQEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iKsikRxvEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined() implies not self.code.originalText.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzsgsBxvEeGXP8PxDYviDg" name="ProcedureActivityObservationReferenceValue" constrainedElement="_WEQMwBrQEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzsgsRxvEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>not self.getSection().text.getText(self.code.originalText.reference.value.substring(2, self.code.originalText.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oJm7kBxwEeGXP8PxDYviDg" name="ProcedureActivityObservationEncounterInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oJm7kRxwEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.encounter->size() > 0)->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_p26x8BxwEeGXP8PxDYviDg" name="ProcedureActivityObservationServiceDeliveryLocationTypeCode" constrainedElement="_9s2SABxZEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_p26x8RxwEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::LOC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_rOfo4BxwEeGXP8PxDYviDg" name="ProcedureActivityObservationInstructionsInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rOfo4RxwEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsKindOf(consol::Instructions))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pM_TMGknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationTemplateId" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pM_TMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNGn8GknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationClassCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNGn8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNJrQGknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationId" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNJrQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNK5YGknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNK5YWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNMukGknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationStatusCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNMukWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed' or value.code = 'active' or value.code = 'aborted' or value.code = 'cancelled'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNOjwGknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationValue" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNOjwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNPx4GknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationEffectiveTime" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNPx4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNRAAGknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationPriorityCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNRAAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNSOIGknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationMethodCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNSOIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNUDUGknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationTargetSiteCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNUDUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOr8VWknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationPerformer" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOr8VmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOtxgGknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationServiceDeliveryLocation" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOtxgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOu_omknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationProcedureEncounter" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOu_o2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.encounter.oclIsUndefined() and entryRelationship.encounter.oclIsKindOf(cda::Encounter) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOw00GknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationInstructions" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOw00WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOyC8mknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationIndication" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOyC82knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOz4IGknEeGCCOsAP2C6Nw" name="ProcedureActivityObservationMedicationActivity" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOz4IWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Aj7JkRg4EeGs5a462vYX5Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pOuYkGknEeGCCOsAP2C6Nw" name="getServiceDeliveryLocations" isQuery="true" bodyCondition="_pOu_oGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOu_oGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOuYkGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOu_oWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ServiceDeliveryLocation)).oclAsType(consol::ServiceDeliveryLocation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOuYkWknEeGCCOsAP2C6Nw" type="_2LiHABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOuYkmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pOwNwGknEeGCCOsAP2C6Nw" name="getProcedureEncounters" isQuery="true" bodyCondition="_pOwNw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOwNw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOwNwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOwNxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).oclAsType(cda::Encounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOwNwWknEeGCCOsAP2C6Nw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOwNwmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pOxb4GknEeGCCOsAP2C6Nw" name="getInstructions" isQuery="true" bodyCondition="_pOyC8GknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOyC8GknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOxb4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOyC8WknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->first().oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOxb4WknEeGCCOsAP2C6Nw" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOxb4mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pOzREGknEeGCCOsAP2C6Nw" name="getIndications" isQuery="true" bodyCondition="_pOzRE2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOzRE2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOzREGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOzRFGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOzREWknEeGCCOsAP2C6Nw" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOzREmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pO1GQGknEeGCCOsAP2C6Nw" name="getMedicationActivity" isQuery="true" bodyCondition="_pO1GQ2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pO1GQ2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pO1GQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pO1GRGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity))->asSequence()->first().oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pO1GQWknEeGCCOsAP2C6Nw" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pO1GQmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_awdH4Bg4EeGs5a462vYX5Q" name="ProcedureActivityAct">
      <ownedComment xmi:id="_95KuYBxnEeGXP8PxDYviDg">
        <body>The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore procedure templates can be represented with various RIM classes: act (e.g., dressing change), observation (e.g., EEG), procedure (e.g. splenectomy). &#xD;
This clinical statement represents any procedure that cannot be classified as an observation or a procedure according to the HL7 RIM. Examples of these procedures are a dressing change, teaching or feeding a patient or providing comfort measures.</body>
      </ownedComment>
      <ownedRule xmi:id="_ilhFEBxpEeGXP8PxDYviDg" name="ProcedureActivityActCodeCodeSystems" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ilhFERxpEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.1' xor self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oGW3cBxpEeGXP8PxDYviDg" name="ProcedureActivityActCodeOriginalText" constrainedElement="_qGzKgBrPEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGW3cRxpEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_rX9yIBxpEeGXP8PxDYviDg" name="ProcedureActivityActOriginalTextReferenceValue" constrainedElement="_N4ba0BrQEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rX9yIRxpEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined() implies not self.code.originalText.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_0i4pkBxpEeGXP8PxDYviDg" name="ProcedureActivityActReferenceValue" constrainedElement="_WEQMwBrQEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_0i4pkRxpEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>not self.getSection().text.getText(self.code.originalText.reference.value.substring(2, self.code.originalText.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ATZYUBxsEeGXP8PxDYviDg" name="ProcedureActivityActEncounterInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ATZYURxsEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.encounter->size() > 0)->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_C9KP4BxsEeGXP8PxDYviDg" name="ProcedureActivityActServiceDeliveryLocationTypeCode" constrainedElement="_9s2SABxZEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_C9KP4RxsEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::LOC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_zFL1IBxsEeGXP8PxDYviDg" name="ProcedureActivityActInstructionsInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zFL1IRxsEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsKindOf(consol::Instructions))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNV4gGknEeGCCOsAP2C6Nw" name="ProcedureActivityActTemplateId" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNWfkGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNb_IGknEeGCCOsAP2C6Nw" name="ProcedureActivityActClassCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNb_IWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNfCcGknEeGCCOsAP2C6Nw" name="ProcedureActivityActId" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNfCcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNgQkGknEeGCCOsAP2C6Nw" name="ProcedureActivityActCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNgQkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNiFwGknEeGCCOsAP2C6Nw" name="ProcedureActivityActStatusCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNiFwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed' or value.code = 'active' or value.code = 'aborted' or value.code = 'cancelled'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNjT4GknEeGCCOsAP2C6Nw" name="ProcedureActivityActEffectiveTime" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNjT4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNkiAGknEeGCCOsAP2C6Nw" name="ProcedureActivityActPriorityCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNkiAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOjZdWknEeGCCOsAP2C6Nw" name="ProcedureActivityActPerformer" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOjZdmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOknkGknEeGCCOsAP2C6Nw" name="ProcedureActivityActServiceDeliveryLocation" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOknkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOmcwGknEeGCCOsAP2C6Nw" name="ProcedureActivityActProcedureEncounter" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOmcwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.encounter.oclIsUndefined() and entryRelationship.encounter.oclIsKindOf(cda::Encounter) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOnq42knEeGCCOsAP2C6Nw" name="ProcedureActivityActInstructions" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOnq5GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOpgEGknEeGCCOsAP2C6Nw" name="ProcedureActivityActIndication" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOpgEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOquMGknEeGCCOsAP2C6Nw" name="ProcedureActivityActMedicationActivity" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOquMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_awdH4Rg4EeGs5a462vYX5Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pOl1sGknEeGCCOsAP2C6Nw" name="getServiceDeliveryLocations" isQuery="true" bodyCondition="_pOl1s2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOl1s2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOl1sGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOl1tGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ServiceDeliveryLocation)).oclAsType(consol::ServiceDeliveryLocation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOl1sWknEeGCCOsAP2C6Nw" type="_2LiHABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOl1smknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pOnD0GknEeGCCOsAP2C6Nw" name="getProcedureEncounters" isQuery="true" bodyCondition="_pOnq4WknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOnq4WknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOnD0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOnq4mknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).oclAsType(cda::Encounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOnD0WknEeGCCOsAP2C6Nw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOnq4GknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pOo5AGknEeGCCOsAP2C6Nw" name="getInstructions" isQuery="true" bodyCondition="_pOo5A2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOo5A2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOo5AGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOo5BGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->first().oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOo5AWknEeGCCOsAP2C6Nw" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOo5AmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pOqHIGknEeGCCOsAP2C6Nw" name="getIndications" isQuery="true" bodyCondition="_pOqHI2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOqHI2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOqHIGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOqHJGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOqHIWknEeGCCOsAP2C6Nw" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOqHImknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pOr8UGknEeGCCOsAP2C6Nw" name="getMedicationActivity" isQuery="true" bodyCondition="_pOr8U2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pOr8U2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pOr8UGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOr8VGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity))->asSequence()->first().oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pOr8UWknEeGCCOsAP2C6Nw" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pOr8UmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_XUoXwBnZEeGs5a462vYX5Q" name="AuthorizationActivity">
      <ownedRule xmi:id="_pNlwIGknEeGCCOsAP2C6Nw" name="AuthorizationActivityTemplateId" constrainedElement="_XUoXwBnZEeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNmXMGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.19')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XUoXwRnZEeGs5a462vYX5Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_j3aTQBrTEeGo461UQq-B1g" name="MedicationSupplyOrder">
      <ownedRule xmi:id="_iZPioB7lEeGEaLkc3UAsAg" name="MedicationSupplyOrderInstructionInversionInd" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l6ZVMB7lEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsKindOf(consol::Instructions))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNr2wGknEeGCCOsAP2C6Nw" name="MedicationSupplyOrderTemplateId" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNr2wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNtr8GknEeGCCOsAP2C6Nw" name="MedicationSupplyOrderClassCode" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNuTAGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNu6EGknEeGCCOsAP2C6Nw" name="MedicationSupplyOrderEffectiveTime" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNu6EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNwIMGknEeGCCOsAP2C6Nw" name="MedicationSupplyOrderMoodCode" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNwIMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNxWUGknEeGCCOsAP2C6Nw" name="MedicationSupplyOrderQuantity" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNxWUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.quantity.oclIsUndefined() or self.quantity.isNullFlavorUndefined()) implies (not self.quantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNykcGknEeGCCOsAP2C6Nw" name="MedicationSupplyOrderRepeatNumber" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNykcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pNzykGknEeGCCOsAP2C6Nw" name="MedicationSupplyOrderStatusCode" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pNzykWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pN0ZoGknEeGCCOsAP2C6Nw" name="MedicationSupplyOrderId" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pN0ZoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pN2O0GknEeGCCOsAP2C6Nw" name="MedicationSupplyOrderProduct" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pN2O0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.product->one(product : cda::Product | not product.oclIsUndefined() and product.oclIsKindOf(cda::Product))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pN3c8GknEeGCCOsAP2C6Nw" name="MedicationSupplyOrderAuthor" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pN3c8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pN4rEGknEeGCCOsAP2C6Nw" name="MedicationSupplyOrderInstructions" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pN4rEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_j3aTQRrTEeGo461UQq-B1g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_pN5SIGknEeGCCOsAP2C6Nw" name="getInstructions" isQuery="true" bodyCondition="_pN5SI2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pN5SI2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pN5SIGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pN5SJGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->first().oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pN5SIWknEeGCCOsAP2C6Nw" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pN5SImknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JIc0oBxEEeGIELeDlfT77A" name="ProcedureSpecimen">
      <ownedComment xmi:id="_Z47QwBxbEeGXP8PxDYviDg">
        <body>This specimen is for representing specimens obtained from a procedure</body>
      </ownedComment>
      <ownedRule xmi:id="_qp5TkBxbEeGXP8PxDYviDg" name="ProcedureSpecimenSpecimenRole" constrainedElement="_JIc0oBxEEeGIELeDlfT77A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t30BEBxbEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.specimenRole->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOrx0BxbEeGXP8PxDYviDg" name="ProcedureSpecimenSpecimentRoleId" constrainedElement="_qp5TkBxbEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zIM8oBxbEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.specimenRole.id->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOJw0GknEeGCCOsAP2C6Nw" name="ProcedureSpecimenTemplateId" constrainedElement="_JIc0oBxEEeGIELeDlfT77A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOJw0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = 'null')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_JIyy4BxEEeGIELeDlfT77A">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_mdwKcEcaEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nbpGUBxEEeGIELeDlfT77A" name="ProcedurePerformer">
      <ownedRule xmi:id="_fu9akBxcEeGXP8PxDYviDg" name="ProcedurePerformerAssignedEntity" constrainedElement="_nbpGUBxEEeGIELeDlfT77A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kD6BkBxcEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.assignedEntity->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ofCJEBxcEeGXP8PxDYviDg" name="ProcedurePerformerAssignedEntityId" constrainedElement="_fu9akBxcEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qjD2UBxcEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.assignedEntity.id->size() >= 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_IMfKkBxjEeGXP8PxDYviDg" name="ProcedurePerformerAssignedEntityAddr" constrainedElement="_ofCJEBxcEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LGmyUBxjEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.assignedEntity.addr->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_NG_8wBxjEeGXP8PxDYviDg" name="ProcedurePerformerAssignedEntityTelecom" constrainedElement="_IMfKkBxjEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_QxeDYBxjEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.assignedEntity.telecom->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ss84oBxjEeGXP8PxDYviDg" name="ProcedurePerformerAssignedEntityRepOrg" constrainedElement="_NG_8wBxjEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VRCmABxjEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.assignedEntity.representedOrganization->size() &lt;= 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X3E0IBxjEeGXP8PxDYviDg" name="ProcedurePerformerAssignedEntityRepOrgId" constrainedElement="_Ss84oBxjEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zVWHIBxjEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.assignedEntity.representedOrganization.id->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_bkN0QBxjEeGXP8PxDYviDg" name="ProcedurePerformerAssignedEntityRepOrgName" constrainedElement="_X3E0IBxjEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_4NUisBxjEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.assignedEntity.representedOrganization.name->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cs-MEBxjEeGXP8PxDYviDg" name="ProcedurePerformerAssignedEntityRepOrgAddr" constrainedElement="_bkN0QBxjEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_5BP6ABxjEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.assignedEntity.representedOrganization.addr->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_eFMjQBxjEeGXP8PxDYviDg" name="ProcedurePerformerAssignedEntityRepOrgTelecom" constrainedElement="_cs-MEBxjEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_585p8BxjEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.assignedEntity.representedOrganization.telecom->size() = 1</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_nbptYBxEEeGIELeDlfT77A">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_HP8qoEcaEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qeLqQBxEEeGIELeDlfT77A" name="ProcedureEncounter">
      <ownedRule xmi:id="_pORsoWknEeGCCOsAP2C6Nw" name="ProcedureEncounterClassCode" constrainedElement="_qeLqQBxEEeGIELeDlfT77A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pORsomknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOS6wGknEeGCCOsAP2C6Nw" name="ProcedureEncounterMoodCode" constrainedElement="_qeLqQBxEEeGIELeDlfT77A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOS6wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pOTh0GknEeGCCOsAP2C6Nw" name="ProcedureEncounterId" constrainedElement="_qeLqQBxEEeGIELeDlfT77A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pOTh0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_qeMRUBxEEeGIELeDlfT77A">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vBswQBtpEeGT89b80j3MTg" name="EstimatedDateOfDelivery">
      <ownedComment xmi:id="_rEXPUDyXEeGOm9opnDhYAQ">
        <body>This clinical statement represents the anticipated date when a woman will give birth.</body>
      </ownedComment>
      <ownedRule xmi:id="_pO1GRWknEeGCCOsAP2C6Nw" name="EstimatedDateOfDeliveryTemplateId" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pO1GRmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pO27cGknEeGCCOsAP2C6Nw" name="EstimatedDateOfDeliveryClassCode" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pO27cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pO4woGknEeGCCOsAP2C6Nw" name="EstimatedDateOfDeliveryCode" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pO4woWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '11778-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pO6l0GknEeGCCOsAP2C6Nw" name="EstimatedDateOfDeliveryMoodCode" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pO6l0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pO8bAGknEeGCCOsAP2C6Nw" name="EstimatedDateOfDeliveryStatusCode" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pO8bAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pO9pIGknEeGCCOsAP2C6Nw" name="EstimatedDateOfDeliveryValue" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pO9pIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vBvzkBtpEeGT89b80j3MTg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__WUM4CAMEeGKirKJsFylGA" name="MedicationInformationManufacturedMaterial">
      <ownedRule xmi:id="_GyKRMEIsEeG4bZAl2IGXmQ" name="MedicationInformationManufacturedMaterialCodeOriginalText" constrainedElement="_WONKoCANEeGKirKJsFylGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WLekkEIsEeG4bZAl2IGXmQ">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined() implies self.code.originalText->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WONKoCANEeGKirKJsFylGA" name="MedicationInformationManufacturedMaterialReference" constrainedElement="__WUM4CAMEeGKirKJsFylGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z8LRMCANEeGKirKJsFylGA">
          <language>OCL</language>
          <body>self.code.originalText->size() = 1 implies not self.code.originalText.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_dYj4gCANEeGKirKJsFylGA" name="MedicationInformationManufacturedMaterialCodeTranslation" constrainedElement="__WUM4CAMEeGKirKJsFylGA">
        <ownedComment xmi:id="_ro9Z0EIsEeG4bZAl2IGXmQ">
          <body>Translations can be used to represent generic product name, packaged product code, etc</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hGPEICANEeGKirKJsFylGA">
          <language>OCL</language>
          <body>self.code->size() = 1 implies self.code.translation->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPGMAGknEeGCCOsAP2C6Nw" name="MedicationInformationManufacturedMaterialCode" constrainedElement="__WUM4CAMEeGKirKJsFylGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPGzEGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.88' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__WUM4SAMEeGKirKJsFylGA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_rFzJEEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JNgjcCHZEeGFLIX-2_sWzA" name="FamilyHistorySubject">
      <ownedRule xmi:id="_kQyjkCHZEeGFLIX-2_sWzA" name="FamilyHistorySubjectRelatedSubjectClassCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kQ8UkCHZEeGFLIX-2_sWzA">
          <language>OCL</language>
          <body>self.relatedSubject.isClassCodeDefined() and self.relatedSubject.classCode = vocab::x_DocumentSubject::PRS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzXt0CHbEeGFLIX-2_sWzA" name="FamilyHistorySubjectRelatedSubjectCode" constrainedElement="_JNgjcCHZEeGFLIX-2_sWzA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Um3WcCHbEeGFLIX-2_sWzA">
          <language>OCL</language>
          <body>self.relatedSubject->size() = 1 implies self.relatedSubject.code->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjf8ACHbEeGFLIX-2_sWzA" name="FamilyHistorySubjectRelatedSubjectCodeValueSet" constrainedElement="_JNgjcCHZEeGFLIX-2_sWzA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_xG5BYCHbEeGFLIX-2_sWzA">
          <language>OCL</language>
          <body>self.relatedSubject.code->size() = 1 implies self.relatedSubject.code.codeSystem = '2.16.840.1.113883.5.111'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_4MXPQCHbEeGFLIX-2_sWzA" name="FamilyHistorySubjectRelatedSubjectSubject" constrainedElement="_vjf8ACHbEeGFLIX-2_sWzA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_7Z9zsCHbEeGFLIX-2_sWzA">
          <language>OCL</language>
          <body>self.relatedSubject.subject->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Fra1YCHcEeGFLIX-2_sWzA" name="FamilyHistorySubjectRelatedSubjectSubjectAdmGenderCode" constrainedElement="_4MXPQCHbEeGFLIX-2_sWzA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JlW7YCHcEeGFLIX-2_sWzA">
          <language>OCL</language>
          <body>self.relatedSubject.subject->size() = 1 implies (self.relatedSubject.subject.administrativeGenderCode->size() = 1 and self.relatedSubject.subject.administrativeGenderCode.codeSystem = '2.16.840.1.113883.5.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pt_EsCHcEeGFLIX-2_sWzA" name="FamilyHistorySubjectRelatedSubjectSubjectBirthTime" constrainedElement="_Fra1YCHcEeGFLIX-2_sWzA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sZrO4CHcEeGFLIX-2_sWzA">
          <language>OCL</language>
          <body>self.relatedSubject.subject->size() = 1 implies self.relatedSubject.subject.birthTime->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Fi9AcCHdEeGFLIX-2_sWzA" name="FamilyHistorySubjectRelatedSubjectSubjectDeceasedInd" constrainedElement="_4MXPQCHbEeGFLIX-2_sWzA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_J3O5ECHdEeGFLIX-2_sWzA">
          <language>OCL</language>
          <body>self.relatedSubject.subject->size() = 1 implies self.relatedSubject.subject.sDTCDeceasedInd->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WX7uoCHfEeGFLIX-2_sWzA" name="FamilyHistorySubjectRelatedSubjectSubjectDeceasedTime" constrainedElement="_Fi9AcCHdEeGFLIX-2_sWzA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Xy-wUCHfEeGFLIX-2_sWzA">
          <language>OCL</language>
          <body>self.relatedSubject.subject->size() = 1 implies self.relatedSubject.subject.sDTCDeceasedTime->size() = 1</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_JNgjcSHZEeGFLIX-2_sWzA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_rNlWoEcaEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PidURSVEeGGzu7fmW9pXw" name="HospitalDischargeDiagnosisSection">
      <ownedComment xmi:id="_2Poj4hSVEeGGzu7fmW9pXw" annotatedElement="_2PidURSVEeGGzu7fmW9pXw">
        <body>The Hospital Discharge Diagnosis section describes the relevant problems or diagnoses at the time of discharge that occurred during the hospitalization or that need to be followed after hospitalization. This section includes an optional entry to record patient conditions.</body>
      </ownedComment>
      <ownedRule xmi:id="_pPWDpWknEeGCCOsAP2C6Nw" name="HospitalDischargeDiagnosisSectionTemplateId" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPWDpmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.24')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPYf4GknEeGCCOsAP2C6Nw" name="HospitalDischargeDiagnosisSectionCode" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPYf4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11535-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPaVEGknEeGCCOsAP2C6Nw" name="HospitalDischargeDiagnosisSectionTitle" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPaVEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPbjMGknEeGCCOsAP2C6Nw" name="HospitalDischargeDiagnosisSectionText" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPbjMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQaaoGknEeGCCOsAP2C6Nw" name="HospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQaaoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Poj4xSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pQbowGknEeGCCOsAP2C6Nw" name="getHospitalDischargeDiagnosis" isQuery="true" bodyCondition="_pQbow2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pQbow2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pQbowGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQboxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalDischargeDiagnosis))->asSequence()->first().oclAsType(consol::HospitalDischargeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pQbowWknEeGCCOsAP2C6Nw" type="_KtwVgCULEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pQbowmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Poj7RSVEeGGzu7fmW9pXw" name="HospitalDischargeMedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_2Poj-hSVEeGGzu7fmW9pXw" annotatedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <body>The Hospital Discharge Medications section defines the medications that the patient is intended to take (or stop) after discharge. The currently active medications must be listed. The section may also include a patient's prescription history and indicate the source of the medication list, for example, from a pharmacy system versus from the patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_pPcKQGknEeGCCOsAP2C6Nw" name="HospitalDischargeMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPcKQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.11')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPemgGknEeGCCOsAP2C6Nw" name="HospitalDischargeMedicationsSectionEntriesOptionalCode" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPemgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10183-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPf0oGknEeGCCOsAP2C6Nw" name="HospitalDischargeMedicationsSectionEntriesOptionalTitle" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPf0oWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPhCwGknEeGCCOsAP2C6Nw" name="HospitalDischargeMedicationsSectionEntriesOptionalText" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPhCwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQcP0GknEeGCCOsAP2C6Nw" name="HospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQcP0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::DischargeMedication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Poj-xSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pQdd8GknEeGCCOsAP2C6Nw" name="getDischargeMedications" isQuery="true" bodyCondition="_pQdd82knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pQdd82knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pQdd8GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQdd9GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::DischargeMedication)).oclAsType(consol::DischargeMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pQdd8WknEeGCCOsAP2C6Nw" type="_hD-z0CUPEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pQdd8mknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2RqkOxSVEeGGzu7fmW9pXw" name="HospitalCourseSection">
      <ownedComment xmi:id="_2RqkPBSVEeGGzu7fmW9pXw" annotatedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <body>The Hospital Course section describes the sequence of events from admission to discharge in a hospital facility.</body>
      </ownedComment>
      <ownedRule xmi:id="_pPiQ4GknEeGCCOsAP2C6Nw" name="HospitalCourseSectionTemplateId" constrainedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPiQ4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPkGEGknEeGCCOsAP2C6Nw" name="HospitalCourseSectionCode" constrainedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPkGEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '8648-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPl7QGknEeGCCOsAP2C6Nw" name="HospitalCourseSectionTitle" constrainedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPl7QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPnJYGknEeGCCOsAP2C6Nw" name="HospitalCourseSectionText" constrainedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPnJYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RqkQxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Uz-4xSVEeGGzu7fmW9pXw" name="DischargeDietSection">
      <ownedComment xmi:id="_2Uz-5BSVEeGGzu7fmW9pXw" annotatedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <body>This section records a narrative description of the expectations for diet, including proposals, goals, and order requests for monitoring, tracking, or improving the dietary control of the patient, used in a discharge from a facility such as an emergency department, hospital, or nursing home.</body>
      </ownedComment>
      <ownedRule xmi:id="_pPnwcGknEeGCCOsAP2C6Nw" name="DischargeDietSectionTemplateId" constrainedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPnwcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.33')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPploGknEeGCCOsAP2C6Nw" name="DischargeDietSectionCode" constrainedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPploWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '42344-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPra0GknEeGCCOsAP2C6Nw" name="DischargeDietSectionTitle" constrainedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPra0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPso8GknEeGCCOsAP2C6Nw" name="DischargeDietSectionText" constrainedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPso8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2U6FchSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_38AXoCUTEeGiOPpZVnfEJA" name="HospitalDischargeStudiesSummarySection">
      <ownedComment xmi:id="_IeLwgCUUEeGiOPpZVnfEJA">
        <body>This section records the results of observations generated by laboratories, imaging procedures, and other procedures. The scope includes hematology, chemistry, serology, virology, toxicology, microbiology, plain x-ray, ultrasound, CT, MRI, angiography, echocardiography, nuclear medicine, pathology, and procedure observations. This section often includes notable results such as abnormal values or relevant trends, and could record all results for the period of time being documented.&#xD;
Laboratory results are typically generated by laboratories providing analytic services in areas such as chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These observations are based on analysis of specimens obtained from the patient and submitted to the laboratory.&#xD;
Imaging results are typically generated by a clinician reviewing the output of an imaging procedure, such as where a cardiologist reports the left ventricular ejection fraction based on the review of an echocardiogram.&#xD;
Procedure results are typically generated by a clinician wanting to provide more granular information about component observations made during the performance of a procedure, such as when a gastroenterologist reports the size of a polyp observed during a colonoscopy.&#xD;
Note that there are discrepancies between CCD and the lab domain model, such as the effectiveTime in specimen collection.</body>
      </ownedComment>
      <ownedRule xmi:id="_pPtQAGknEeGCCOsAP2C6Nw" name="HospitalDischargeStudiesSummarySectionTemplateId" constrainedElement="_38AXoCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPtQAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.16')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPvsQGknEeGCCOsAP2C6Nw" name="HospitalDischargeStudiesSummarySectionCode" constrainedElement="_38AXoCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPvsQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11493-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPw6YGknEeGCCOsAP2C6Nw" name="HospitalDischargeStudiesSummarySectionTitle" constrainedElement="_38AXoCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPw6YWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPyIgGknEeGCCOsAP2C6Nw" name="HospitalDischargeStudiesSummarySectionText" constrainedElement="_38AXoCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPyIgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_38JhkCUTEeGiOPpZVnfEJA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_hD-z0CUPEeGiOPpZVnfEJA" name="DischargeMedication">
      <ownedComment xmi:id="_j_-q4CUPEeGiOPpZVnfEJA">
        <body>The Discharge Medications entry codes medications that the patient is intended to take (or stop) after discharge.</body>
      </ownedComment>
      <ownedRule xmi:id="_pPTnYGknEeGCCOsAP2C6Nw" name="DischargeMedicationMedicationActivity" constrainedElement="_hD-z0CUPEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPTnYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pPzWoGknEeGCCOsAP2C6Nw" name="DischargeMedicationTemplateId" constrainedElement="_hD-z0CUPEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPzWoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.35')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pP1L0GknEeGCCOsAP2C6Nw" name="DischargeMedicationClassCode" constrainedElement="_hD-z0CUPEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pP1L0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pP2Z8GknEeGCCOsAP2C6Nw" name="DischargeMedicationMoodCode" constrainedElement="_hD-z0CUPEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pP2Z8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pP4PIGknEeGCCOsAP2C6Nw" name="DischargeMedicationCode" constrainedElement="_hD-z0CUPEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pP4PIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '10183-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hD_a4CUPEeGiOPpZVnfEJA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pPUOcWknEeGCCOsAP2C6Nw" name="getMedicationActivity" isQuery="true" bodyCondition="_pPU1gGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pPU1gGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pPUOcWknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPU1gWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity))->asSequence()->first().oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pPUOcmknEeGCCOsAP2C6Nw" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pPUOc2knEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KtwVgCULEeGiOPpZVnfEJA" name="HospitalDischargeDiagnosis">
      <ownedComment xmi:id="_QGxBkCULEeGiOPpZVnfEJA">
        <body>The Hospital Discharge Diagnosis act wraps relevant problems or diagnoses at the time of discharge that occurred during the hospitalization or that need to be followed after hospitalization. This entry requires at least one Problem Observation entry.</body>
      </ownedComment>
      <ownedRule xmi:id="_pPU1gmknEeGCCOsAP2C6Nw" name="HospitalDischargeDiagnosisProblemObservation" constrainedElement="_KtwVgCULEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPU1g2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pP5dQGknEeGCCOsAP2C6Nw" name="HospitalDischargeDiagnosisTemplateId" constrainedElement="_KtwVgCULEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pP5dQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.33')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pP7ScGknEeGCCOsAP2C6Nw" name="HospitalDischargeDiagnosisClassCode" constrainedElement="_KtwVgCULEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pP7ScWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pP8gkGknEeGCCOsAP2C6Nw" name="HospitalDischargeDiagnosisMoodCode" constrainedElement="_KtwVgCULEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pP8gkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pP-VwGknEeGCCOsAP2C6Nw" name="HospitalDischargeDiagnosisCode" constrainedElement="_KtwVgCULEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pP-VwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '11535-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Ktw8kCULEeGiOPpZVnfEJA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pPWDoGknEeGCCOsAP2C6Nw" name="getProblemObservations" isQuery="true" bodyCondition="_pPWDo2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pPWDo2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pPWDoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pPWDpGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pPWDoWknEeGCCOsAP2C6Nw" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pPWDomknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lBergCUMEeGiOPpZVnfEJA" name="HospitalDischargeInstructionsSection">
      <ownedComment xmi:id="_YHIqECUOEeGiOPpZVnfEJA">
        <body>The Hospital Discharge Instructions section records instructions at discharge.</body>
      </ownedComment>
      <ownedRule xmi:id="_pP_j4GknEeGCCOsAP2C6Nw" name="HospitalDischargeInstructionsSectionTemplateId" constrainedElement="_lBergCUMEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQAK8GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.41')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQCAIGknEeGCCOsAP2C6Nw" name="HospitalDischargeInstructionsSectionCode" constrainedElement="_lBergCUMEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQCAIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '8653-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQDOQGknEeGCCOsAP2C6Nw" name="HospitalDischargeInstructionsSectionTitle" constrainedElement="_lBergCUMEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQDOQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQEcYGknEeGCCOsAP2C6Nw" name="HospitalDischargeInstructionsSectionText" constrainedElement="_lBergCUMEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQEcYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_lBfSkCUMEeGiOPpZVnfEJA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TytVkCUQEeGiOPpZVnfEJA" name="HospitalDischargeMedicationsSection">
      <ownedComment xmi:id="_jk0jcCUQEeGiOPpZVnfEJA">
        <body>The Hospital Discharge Medications section defines the medications that the patient is intended to take (or stop) after discharge. The currently active medications must be listed. The section may also include a patient's prescription history and indicate the source of the medication list, for example, from a pharmacy system versus from the patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_pQFqgWknEeGCCOsAP2C6Nw" name="HospitalDischargeMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_TytVkCUQEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQFqgmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.11.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQIt0GknEeGCCOsAP2C6Nw" name="HospitalDischargeMedicationsSectionEntriesOptionalCode" constrainedElement="_TytVkCUQEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQIt0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10183-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQJ78GknEeGCCOsAP2C6Nw" name="HospitalDischargeMedicationsSectionText" constrainedElement="_TytVkCUQEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQJ78WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQLKEGknEeGCCOsAP2C6Nw" name="HospitalDischargeMedicationsSectionTitle" constrainedElement="_TytVkCUQEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQLKEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQdd9WknEeGCCOsAP2C6Nw" name="HospitalDischargeMedicationsSectionDischargeMedication" constrainedElement="_TytVkCUQEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQdd9mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::DischargeMedication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TytVkSUQEeGiOPpZVnfEJA" general="_2Poj7RSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_pQesEGknEeGCCOsAP2C6Nw" name="getConsolDischargeMedications" isQuery="true" bodyCondition="_pQesE2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pQesE2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pQesEGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQesFGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::DischargeMedication)).oclAsType(consol::DischargeMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pQesEWknEeGCCOsAP2C6Nw" type="_hD-z0CUPEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pQesEmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WikGsCUTEeGiOPpZVnfEJA" name="HospitalDischargePhysicalSection">
      <ownedComment xmi:id="_YsVPkCUTEeGiOPpZVnfEJA">
        <body>The Hospital Discharge Physical section records a narrative description of the patient's physical findings.</body>
      </ownedComment>
      <ownedRule xmi:id="_pQU7EGknEeGCCOsAP2C6Nw" name="HospitalDischargePhysicalSectionTemplateId" constrainedElement="_WikGsCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQU7EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.26')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQWwQGknEeGCCOsAP2C6Nw" name="HospitalDischargePhysicalSectionCode" constrainedElement="_WikGsCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQWwQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10184-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQYlcGknEeGCCOsAP2C6Nw" name="HospitalDischargePhysicalSectionTitle" constrainedElement="_WikGsCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQYlcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQZzkGknEeGCCOsAP2C6Nw" name="HospitalDischargePhysicalSectionText" constrainedElement="_WikGsCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQZzkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WikGsSUTEeGiOPpZVnfEJA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oI7CQCsaEeGHF88-qhhUMA" name="ChiefComplaintAndReasonForVisitSection">
      <ownedComment xmi:id="_sNrJwCsdEeGHF88-qhhUMA">
        <body>This section records the patient's chief complaint (the patient's own description) and/or the reason for the patient's visit (the provider's description of the reason for visit).  Local policy determines whether the information is divided into two sections or recorded in one section serving both purposes.</body>
      </ownedComment>
      <ownedRule xmi:id="_pQfTIGknEeGCCOsAP2C6Nw" name="ChiefComplaintAndReasonForVisitSectionTemplateId" constrainedElement="_oI7CQCsaEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQfTIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQhIUGknEeGCCOsAP2C6Nw" name="ChiefComplaintAndReasonForVisitSectionCode" constrainedElement="_oI7CQCsaEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQhIUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '46239-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQiWcGknEeGCCOsAP2C6Nw" name="ChiefComplaintAndReasonForVisitSectionText" constrainedElement="_oI7CQCsaEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQiWcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQjkkGknEeGCCOsAP2C6Nw" name="ChiefComplaintAndReasonForVisitSectionTitle" constrainedElement="_oI7CQCsaEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQjkkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oI7CQSsaEeGHF88-qhhUMA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Nm64UCscEeGHF88-qhhUMA" name="ReasonForVisitSection">
      <ownedComment xmi:id="_OPllYCsdEeGHF88-qhhUMA">
        <body>This section records the patient's reason for the patient's visit (as documented by the provider).  Local policy determines whether Reason for Visit and Chief Complaint are in separate or combined sections.</body>
      </ownedComment>
      <ownedRule xmi:id="_pQkysGknEeGCCOsAP2C6Nw" name="ReasonForVisitSectionTemplateId" constrainedElement="_Nm64UCscEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQkysWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQnO8GknEeGCCOsAP2C6Nw" name="ReasonForVisitSectionCode" constrainedElement="_Nm64UCscEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQnO8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '29299-5' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQpEIGknEeGCCOsAP2C6Nw" name="ReasonForVisitSectionText" constrainedElement="_Nm64UCscEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQpEIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pQqSQGknEeGCCOsAP2C6Nw" name="ReasonForVisitSectionTitle" constrainedElement="_Nm64UCscEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQqSQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Nm7fYCscEeGHF88-qhhUMA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_D5azMCwXEeGKLc4ckmfDag" name="EncounterPerformer">
      <ownedComment xmi:id="_jO95wCwXEeGKLc4ckmfDag">
        <body>INLINE</body>
      </ownedComment>
      <generalization xmi:id="_D5azMSwXEeGKLc4ckmfDag">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_HP8qoEcaEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_I1LikCwXEeGKLc4ckmfDag" name="EncounterPerformerAssignedEntity">
      <ownedComment xmi:id="_ik63MCwXEeGKLc4ckmfDag">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_pQ_CYGknEeGCCOsAP2C6Nw" name="EncounterPerformerAssignedEntityCode" constrainedElement="_I1LikCwXEeGKLc4ckmfDag">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pQ_CYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_I1LikSwXEeGKLc4ckmfDag">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_6qmVsEcDEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0HgNkDJAEeG6R8Pb5FT2Ow" name="AllergyObservationParticipant">
      <ownedRule xmi:id="_pROS8GknEeGCCOsAP2C6Nw" name="AllergyObservationParticipantParticipantRole" constrainedElement="_0HgNkDJAEeG6R8Pb5FT2Ow">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pROS8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0HgNkTJAEeG6R8Pb5FT2Ow">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_51DLwEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4Lj44DJAEeG6R8Pb5FT2Ow" name="AllergyObservationParticipantRole">
      <ownedRule xmi:id="_pRO6AGknEeGCCOsAP2C6Nw" name="AllergyObservationParticipantRolePlayingEntity" constrainedElement="_4Lj44DJAEeG6R8Pb5FT2Ow">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRO6AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(cda::PlayingEntity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4Lj44TJAEeG6R8Pb5FT2Ow">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_E1B60DJBEeG6R8Pb5FT2Ow" name="AllergyObservationPlayingEntity">
      <ownedRule xmi:id="_ZIdiUDJCEeG6R8Pb5FT2Ow" name="AllergyObservationPlayingEntityCodeOriginalText">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_xtJZEDJCEeG6R8Pb5FT2Ow">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_eR_n8DJCEeG6R8Pb5FT2Ow" name="AllergyObservationPlayingEntityCodeTranslation">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lW3Y4DJCEeG6R8Pb5FT2Ow">
          <language>OCL</language>
          <body>not self.code.translation->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRMdwGknEeGCCOsAP2C6Nw" name="AllergyObservationPlayingEntityClassCode" constrainedElement="_E1B60DJBEeG6R8Pb5FT2Ow">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRMdwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRNE0GknEeGCCOsAP2C6Nw" name="AllergyObservationPlayingEntityCode" constrainedElement="_E1B60DJBEeG6R8Pb5FT2Ow">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRNE0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_E1B60TJBEeG6R8Pb5FT2Ow">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_Lr9i8EcaEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_OA_Q0DVyEeGaW4kr-GbV8Q" name="AnesthesiaSection">
      <ownedComment xmi:id="_dpvJsDWmEeG32vxjh5_fjg">
        <body>The Anesthesia section briefly records the type of anesthesia (e.g., general or local) and may state the actual agent used. This may or may not be a subsection of the Procedure Description section. The full details of anesthesia are usually found in a separate Anesthesia Note.</body>
      </ownedComment>
      <ownedRule xmi:id="_pRTygGknEeGCCOsAP2C6Nw" name="AnesthesiaSectionTemplateId" constrainedElement="_OA_Q0DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRTygWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRVnsGknEeGCCOsAP2C6Nw" name="AnesthesiaSectionCode" constrainedElement="_OA_Q0DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRVnsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '59774-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRXc4GknEeGCCOsAP2C6Nw" name="AnesthesiaSectionText" constrainedElement="_OA_Q0DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRXc4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRYrAGknEeGCCOsAP2C6Nw" name="AnesthesiaSectionTitle" constrainedElement="_OA_Q0DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRYrAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTT9oGknEeGCCOsAP2C6Nw" name="AnesthesiaSectionProcedureActivityProcedure" constrainedElement="_OA_Q0DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTUksGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::ProcedureActivityProcedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTVLxWknEeGCCOsAP2C6Nw" name="AnesthesiaSectionMedicationActivity" constrainedElement="_OA_Q0DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTVy0GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_OA_Q0TVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pTVLwGknEeGCCOsAP2C6Nw" name="getProcedureActivityProcedures" isQuery="true" bodyCondition="_pTVLw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pTVLw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pTVLwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTVLxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure)).oclAsType(consol::ProcedureActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pTVLwWknEeGCCOsAP2C6Nw" type="_2OG58RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pTVLwmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pTWZ4GknEeGCCOsAP2C6Nw" name="getMedicationActivities" isQuery="true" bodyCondition="_pTWZ42knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pTWZ42knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pTWZ4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTWZ5GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pTWZ4WknEeGCCOsAP2C6Nw" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pTWZ4mknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R1OXcDVyEeGaW4kr-GbV8Q" name="ComplicationsSection">
      <ownedComment xmi:id="_zxyf4FjaEeGRqYkwoeymcA">
        <body>The Complications section records problems that occurred during the procedure or other activity. The complications may have been known risks or unanticipated problems.</body>
      </ownedComment>
      <ownedRule xmi:id="_pRZ5IGknEeGCCOsAP2C6Nw" name="ComplicationsSectionTemplateId" constrainedElement="_R1OXcDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRZ5IWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.37')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRbuUGknEeGCCOsAP2C6Nw" name="ComplicationsSectionCode" constrainedElement="_R1OXcDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRcVYGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '55109-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRdjgGknEeGCCOsAP2C6Nw" name="ComplicationsSectionTitle" constrainedElement="_R1OXcDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRdjgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRexoGknEeGCCOsAP2C6Nw" name="ComplicationsSectionText" constrainedElement="_R1OXcDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRexoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbIc4GknEeGCCOsAP2C6Nw" name="ComplicationsSectionProblemObservation" constrainedElement="_R1OXcDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbIc4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_R1OXcTVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pbJrAGknEeGCCOsAP2C6Nw" name="getProblemObservations" isQuery="true" bodyCondition="_pbJrA2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pbJrA2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pbJrAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbJrBGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pbJrAWknEeGCCOsAP2C6Nw" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pbJrAmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WPTWEDVyEeGaW4kr-GbV8Q" name="DICOMObjectCatalogSection">
      <ownedComment xmi:id="_K--R4Eb4EeGp67IkyTw1fg">
        <body>DICOM Object Catalog lists all referenced objects and their parent Series and Studies, plus other DICOM attributes required for retrieving the objects.&#xD;
DICOM Object Catalog sections are not intended for viewing and contain empty section text.</body>
      </ownedComment>
      <ownedRule xmi:id="_pRf_wGknEeGCCOsAP2C6Nw" name="DICOMObjectCatalogSectionTemplateId" constrainedElement="_WPTWEDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRf_wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRicAGknEeGCCOsAP2C6Nw" name="DICOMObjectCatalogSectionCode" constrainedElement="_WPTWEDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRicAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '121181' and value.codeSystem = '1.2.840.10008.2.16.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pa5zZGknEeGCCOsAP2C6Nw" name="DICOMObjectCatalogSectionStudyAct" constrainedElement="_WPTWEDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa5zZWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::StudyAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WPTWETVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pa7BgGknEeGCCOsAP2C6Nw" name="getStudyAct" isQuery="true" bodyCondition="_pa7Bg2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pa7Bg2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pa7BgGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa7BhGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::StudyAct))->asSequence()->first().oclAsType(consol::StudyAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pa7BgWknEeGCCOsAP2C6Nw" type="_vjf-wEb4EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pa7BgmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZcC-4DVyEeGaW4kr-GbV8Q" name="FindingsSection">
      <ownedRule xmi:id="_pRjqIGknEeGCCOsAP2C6Nw" name="FindingsSectionTemplateId" constrainedElement="_ZcC-4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRjqIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.1.2')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ZcC-4TVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_eKFbUDVyEeGaW4kr-GbV8Q" name="HospitalConsultationsSection">
      <ownedComment xmi:id="_dFR2MEE1EeGdmoWy_aLP0Q">
        <body>The Hospital Consultations section records consultations that occurred during the admission.</body>
      </ownedComment>
      <ownedRule xmi:id="_pRlfUGknEeGCCOsAP2C6Nw" name="HospitalConsultationsSectionTemplateId" constrainedElement="_eKFbUDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRlfUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.42')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRnUgGknEeGCCOsAP2C6Nw" name="HospitalConsultationsSectionCode" constrainedElement="_eKFbUDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRn7kGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '18841-7' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRpJsGknEeGCCOsAP2C6Nw" name="HospitalConsultationsSectionText" constrainedElement="_eKFbUDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRpJsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRqX0GknEeGCCOsAP2C6Nw" name="HospitalConsultationsSectionTitle" constrainedElement="_eKFbUDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRqX0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_eKFbUTVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_hqzJADVyEeGaW4kr-GbV8Q" name="InterventionsSection">
      <ownedComment xmi:id="_qZ68EEE1EeGdmoWy_aLP0Q">
        <body>The Interventions section contains information about the specific interventions provided during the healthcare visit. Depending on the type of intervention(s) provided (procedural, education, application of assistive equipment, etc.), the details will vary but may include specification of frequency, intensity, and duration.</body>
      </ownedComment>
      <ownedRule xmi:id="_pRq-4GknEeGCCOsAP2C6Nw" name="InterventionsSectionTemplateId" constrainedElement="_hqzJADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRrl8GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.21.2.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRtbIGknEeGCCOsAP2C6Nw" name="InterventionsSectionCode" constrainedElement="_hqzJADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRtbIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '62387-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRupQGknEeGCCOsAP2C6Nw" name="InterventionsSectionText" constrainedElement="_hqzJADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRupQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRv3YGknEeGCCOsAP2C6Nw" name="InterventionsSectionTitle" constrainedElement="_hqzJADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRv3YWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hqzJATVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mEIgwDVyEeGaW4kr-GbV8Q" name="MedicalHistorySection">
      <ownedComment xmi:id="_eDJXMEE2EeGdmoWy_aLP0Q">
        <body>The Medical History section describes all aspects of the medical history of the patient even if not pertinent to the current procedure, and may include chief complaint, past medical history, social history, family history, surgical or procedure history, medication history, and other history information. The history may be limited to information pertinent to the current procedure or may be more comprehensive. The history may be reported as a collection of random clinical statements or it may be reported categorically. Categorical report formats may be divided into multiple subsections including Past Medical History, Social History.</body>
      </ownedComment>
      <ownedRule xmi:id="_pRxFgGknEeGCCOsAP2C6Nw" name="MedicalHistorySectionTemplateId" constrainedElement="_mEIgwDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRxFgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.39')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRy6sGknEeGCCOsAP2C6Nw" name="MedicalHistorySectionCode" constrainedElement="_mEIgwDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRy6sWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11329-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pR0I0GknEeGCCOsAP2C6Nw" name="MedicalHistorySectionText" constrainedElement="_mEIgwDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pR0I0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pR1-AGknEeGCCOsAP2C6Nw" name="MedicalHistorySectionTitle" constrainedElement="_mEIgwDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pR1-AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mEIgwTVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rNJpADVyEeGaW4kr-GbV8Q" name="ObjectiveSection">
      <ownedComment xmi:id="_mHeaAEE2EeGdmoWy_aLP0Q">
        <body>The Objective section contains data about the patient gathered through tests, measures, or observations that produce a quantified or categorized result. It includes important and relevant positive and negative test results, physical findings, review of systems, and other measurements and observations.</body>
      </ownedComment>
      <ownedRule xmi:id="_pR2lEGknEeGCCOsAP2C6Nw" name="ObjectiveSectionTemplateId" constrainedElement="_rNJpADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pR2lEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.21.2.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pR5BUGknEeGCCOsAP2C6Nw" name="ObjectiveSectionCode" constrainedElement="_rNJpADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pR5BUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '61149-1' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pR6PcGknEeGCCOsAP2C6Nw" name="ObjectiveSectionText" constrainedElement="_rNJpADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pR6PcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pR7dkGknEeGCCOsAP2C6Nw" name="ObjectiveSectionTitle" constrainedElement="_rNJpADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pR7dkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rNJpATVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vHfXoDVyEeGaW4kr-GbV8Q" name="OperativeNoteFluidSection">
      <ownedComment xmi:id="_UgHj8FmvEeGRqYkwoeymcA">
        <body>The Operative Note Fluids section may be used to record fluids administered during the surgical procedure.</body>
      </ownedComment>
      <ownedRule xmi:id="_pR8rsGknEeGCCOsAP2C6Nw" name="OperativeNoteFluidSectionTemplateId" constrainedElement="_vHfXoDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pR8rsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.7.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pR-g4GknEeGCCOsAP2C6Nw" name="OperativeNoteFluidSectionCode" constrainedElement="_vHfXoDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pR-g4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10216-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSAWEGknEeGCCOsAP2C6Nw" name="OperativeNoteFluidSectionText" constrainedElement="_vHfXoDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSAWEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSBkMGknEeGCCOsAP2C6Nw" name="OperativeNoteFluidSectionTitle" constrainedElement="_vHfXoDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSBkMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vHfXoTVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zel6wDVyEeGaW4kr-GbV8Q" name="OperativeNoteSurgicalProcedureSection">
      <ownedComment xmi:id="_rxk2EEE2EeGdmoWy_aLP0Q">
        <body>The Operative Note Surgical Procedure section can be used to restate the procedures performed if appropriate for an enterprise workflow.  The procedure(s) performed associated with the Operative Note are formally modeled in the header using serviceEvent.</body>
      </ownedComment>
      <ownedRule xmi:id="_MAXA0EEuEeGdmoWy_aLP0Q" constrainedElement="_zel6wDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_O6eBgEEuEeGdmoWy_aLP0Q">
          <language>Analysis</language>
          <body>If the surgical procedure section is present there SHALL be text indicating the procedure performed.</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSCLQGknEeGCCOsAP2C6Nw" name="OperativeNoteSurgicalProcedureSectionTemplateId" constrainedElement="_zel6wDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSCLQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.7.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSEngGknEeGCCOsAP2C6Nw" name="OperativeNoteSurgicalProcedureSectionCode" constrainedElement="_zel6wDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSEngWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10223-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSGcsGknEeGCCOsAP2C6Nw" name="OperativeNoteSurgicalProcedureSectionText" constrainedElement="_zel6wDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSGcsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSHDwGknEeGCCOsAP2C6Nw" name="OperativeNoteSurgicalProcedureSectionTitle" constrainedElement="_zel6wDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSHq0GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zel6wTVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3b6E4DVyEeGaW4kr-GbV8Q" name="PlannedProcedureSection">
      <ownedComment xmi:id="_vw-q4EE2EeGdmoWy_aLP0Q">
        <body>The Planned Procedure section records the procedure(s) that a clinician thought would need to be done based on the preoperative assessment. It may be important to record the procedure(s) that were originally planned for, consented to, and perhaps pre-approved by the payor, particularly if different from the actual procedure(s) and procedure details, to provide evidence to various stakeholders that the providers are aware of the discrepancy and the justification can be found in the procedure details.</body>
      </ownedComment>
      <ownedRule xmi:id="_pSIR4GknEeGCCOsAP2C6Nw" name="PlannedProcedureSectionTemplateId" constrainedElement="_3b6E4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSIR4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.30')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSKuIGknEeGCCOsAP2C6Nw" name="PlannedProcedureSectionCode" constrainedElement="_3b6E4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSKuIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '59772-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSL8QGknEeGCCOsAP2C6Nw" name="PlannedProcedureSectionText" constrainedElement="_3b6E4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSL8QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSNKYGknEeGCCOsAP2C6Nw" name="PlannedProcedureSectionTitle" constrainedElement="_3b6E4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSNKYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pX8mAGknEeGCCOsAP2C6Nw" name="PlannedProcedureSectionPlanOfCareActivityProcedure" constrainedElement="_3b6E4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pX8mAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_3b6E4TVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pX9NEGknEeGCCOsAP2C6Nw" name="getPlanOfCareActivityProcedures" isQuery="true" bodyCondition="_pX9NE2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pX9NE2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pX9NEGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pX9NFGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure)).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pX9NEWknEeGCCOsAP2C6Nw" type="_2NiSKhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pX9NEmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7UA-4DVyEeGaW4kr-GbV8Q" name="PostoperativeDiagnosisSection">
      <ownedComment xmi:id="_0An7IEE2EeGdmoWy_aLP0Q">
        <body>The Postoperative Diagnosis section records the diagnosis or diagnoses discovered or confirmed during the surgery. Often it is the same as the preoperative diagnosis.</body>
      </ownedComment>
      <ownedRule xmi:id="_pSOYgGknEeGCCOsAP2C6Nw" name="PostoperativeDiagnosisSectionTemplateId" constrainedElement="_7UA-4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSOYgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.35')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSQ0wGknEeGCCOsAP2C6Nw" name="PostoperativeDiagnosisSectionCode" constrainedElement="_7UA-4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSQ0wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10218-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSSp8GknEeGCCOsAP2C6Nw" name="PostoperativeDiagnosisSectionText" constrainedElement="_7UA-4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSSp8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pST4EGknEeGCCOsAP2C6Nw" name="PostoperativeDiagnosisSectionTitle" constrainedElement="_7UA-4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pST4EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7UA-4TVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-jlSMDVyEeGaW4kr-GbV8Q" name="PostprocedureDiagnosisSection">
      <ownedComment xmi:id="_2BrM4EE2EeGdmoWy_aLP0Q">
        <body>The Postprocedure Diagnosis section records the diagnosis or diagnoses discovered or confirmed during the procedure. Often it is the same as the pre-procedure diagnosis or indication.</body>
      </ownedComment>
      <ownedRule xmi:id="_pSVGMGknEeGCCOsAP2C6Nw" name="PostprocedureDiagnosisSectionTemplateId" constrainedElement="_-jlSMDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSVGMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.36')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSW7YGknEeGCCOsAP2C6Nw" name="PostprocedureDiagnosisSectionCode" constrainedElement="_-jlSMDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSXicGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '59769-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSYwkGknEeGCCOsAP2C6Nw" name="PostprocedureDiagnosisSectionText" constrainedElement="_-jlSMDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSYwkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSZ-sGknEeGCCOsAP2C6Nw" name="PostprocedureDiagnosisSectionTitle" constrainedElement="_-jlSMDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSZ-sWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYFI5WknEeGCCOsAP2C6Nw" name="PostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_-jlSMDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYFv8GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-jlSMTVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pYGXAGknEeGCCOsAP2C6Nw" name="getPostprocedureDiagnosis" isQuery="true" bodyCondition="_pYGXA2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pYGXA2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pYGXAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYGXBGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PostprocedureDiagnosis))->asSequence()->first().oclAsType(consol::PostprocedureDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pYGXAWknEeGCCOsAP2C6Nw" type="_0fjXAEEvEeGdmoWy_aLP0Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pYGXAmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Cu6qMDVzEeGaW4kr-GbV8Q" name="PreoperativeDiagnosisSection">
      <ownedComment xmi:id="_4B0fsEE2EeGdmoWy_aLP0Q">
        <body>The Preoperative Diagnosis section records the surgical diagnosis or diagnoses assigned to the patient before the surgical procedure and is the reason for the surgery. The preoperative diagnosis is, in the opinion of the surgeon, the diagnosis that will be confirmed during surgery.</body>
      </ownedComment>
      <ownedRule xmi:id="_pSbM0GknEeGCCOsAP2C6Nw" name="PreoperativeDiagnosisSectionTemplateId" constrainedElement="_Cu6qMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSbM0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.34')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSdpEGknEeGCCOsAP2C6Nw" name="PreoperativeDiagnosisSectionCode" constrainedElement="_Cu6qMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSdpEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '10219-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSfeQGknEeGCCOsAP2C6Nw" name="PreoperativeDiagnosisSectionText" constrainedElement="_Cu6qMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSfeQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSgsYGknEeGCCOsAP2C6Nw" name="PreoperativeDiagnosisSectionTitle" constrainedElement="_Cu6qMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSgsYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbMuUGknEeGCCOsAP2C6Nw" name="PreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_Cu6qMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbMuUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Cu6qMTVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pbNVYGknEeGCCOsAP2C6Nw" name="getPreoperativeDiagnosis" isQuery="true" bodyCondition="_pbN8cmknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pbN8cmknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pbNVYGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbN8c2knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PreoperativeDiagnosis))->asSequence()->first().oclAsType(consol::PreoperativeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pbN8cGknEeGCCOsAP2C6Nw" type="_0baBYEEwEeGdmoWy_aLP0Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pbN8cWknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HNUIIDVzEeGaW4kr-GbV8Q" name="ProcedureDescriptionSection">
      <ownedComment xmi:id="_Fyfh4ECVEeGELr7uj3LK_Q">
        <body>The Procedure Description section records the particulars of the procedure and may include procedure site preparation, surgical site preparation, pertinent details related to sedation/anesthesia, pertinent details related to measurements and markings, procedure times, medications administered, estimated blood loss, specimens removed, implants, instrumentation, sponge counts, tissue manipulation, wound closure, sutures used, vital signs and other monitoring data. Local practice often identifies the level and type of detail required based on the procedure or specialty.</body>
      </ownedComment>
      <ownedRule xmi:id="_pSh6gGknEeGCCOsAP2C6Nw" name="ProcedureDescriptionSectionTemplateId" constrainedElement="_HNUIIDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSh6gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.27')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSk90GknEeGCCOsAP2C6Nw" name="ProcedureDescriptionSectionCode" constrainedElement="_HNUIIDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSk90WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '29554-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSmzAGknEeGCCOsAP2C6Nw" name="ProcedureDescriptionSectionText" constrainedElement="_HNUIIDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSmzAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSoBIGknEeGCCOsAP2C6Nw" name="ProcedureDescriptionSectionTitle" constrainedElement="_HNUIIDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSoBIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_HNUIITVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_QhXGYDVzEeGaW4kr-GbV8Q" name="ProcedureDispositionSection">
      <ownedComment xmi:id="_ZwQ34ECVEeGELr7uj3LK_Q">
        <body>The Procedure Disposition section records the status and condition of the patient at the completion of the procedure or surgery.  It often also states where the patent was transferred to for the next level of care.</body>
      </ownedComment>
      <ownedRule xmi:id="_pSpPQGknEeGCCOsAP2C6Nw" name="ProcedureDispositionSectionTemplateId" constrainedElement="_QhXGYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSpPQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.18.2.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSrrgGknEeGCCOsAP2C6Nw" name="ProcedureDispositionSectionCode" constrainedElement="_QhXGYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSrrgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '59775-7' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSs5oGknEeGCCOsAP2C6Nw" name="ProcedureDispositionSectionText" constrainedElement="_QhXGYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSs5oWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSuHwGknEeGCCOsAP2C6Nw" name="ProcedureDispositionSectionTitle" constrainedElement="_QhXGYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSuHwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QhXGYTVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TvcL8DVzEeGaW4kr-GbV8Q" name="ProcedureEstimatedBloodLossSection">
      <ownedComment xmi:id="_BuKCIEE3EeGdmoWy_aLP0Q">
        <body>The Estimated Blood Loss section may be a subsection of another section such as the Procedure Description section. The Estimated Blood Loss section records the approximate amount of blood that the patient lost during the procedure or surgery. It may be an accurate quantitative amount, e.g., 250 milliliters, or it may be descriptive, e.g., &quot;minimal&quot; or &quot;none&quot;.</body>
      </ownedComment>
      <ownedRule xmi:id="_pSvV4GknEeGCCOsAP2C6Nw" name="ProcedureEstimatedBloodLossSectionTemplateId" constrainedElement="_TvcL8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSvV4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.18.2.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSxLEGknEeGCCOsAP2C6Nw" name="ProcedureEstimatedBloodLossSectionCode" constrainedElement="_TvcL8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSxyIGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '59770-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pSzAQGknEeGCCOsAP2C6Nw" name="ProcedureEstimatedBloodLossSectionText" constrainedElement="_TvcL8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pSzAQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pS0OYGknEeGCCOsAP2C6Nw" name="ProcedureEstimatedBloodLossSectionTitle" constrainedElement="_TvcL8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pS0OYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TvcL8TVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_W4UBYDVzEeGaW4kr-GbV8Q" name="ProcedureFindingsSection">
      <ownedComment xmi:id="_EXSAgEE3EeGdmoWy_aLP0Q">
        <body>The Procedure Findings section records clinically significant observations confirmed or discovered during the procedure or surgery.</body>
      </ownedComment>
      <ownedRule xmi:id="_pS1cgGknEeGCCOsAP2C6Nw" name="ProcedureFindingsSectionTemplateId" constrainedElement="_W4UBYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pS1cgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.28')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pS3RsGknEeGCCOsAP2C6Nw" name="ProcedureFindingsSectionCode" constrainedElement="_W4UBYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pS3RsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '59776-5' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pS4f0GknEeGCCOsAP2C6Nw" name="ProcedureFindingsSectionText" constrainedElement="_W4UBYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pS5G4GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pS5t8GknEeGCCOsAP2C6Nw" name="ProcedureFindingsSectionTitle" constrainedElement="_W4UBYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pS5t8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYOS0GknEeGCCOsAP2C6Nw" name="ProcedureFindingsSectionProblemObservation" constrainedElement="_W4UBYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYOS0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W4UBYTVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pYO54GknEeGCCOsAP2C6Nw" name="getProblemObservations" isQuery="true" bodyCondition="_pYPg8GknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pYPg8GknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pYO54GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYPg8WknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pYO54WknEeGCCOsAP2C6Nw" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pYO54mknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Z662wDVzEeGaW4kr-GbV8Q" name="ProcedureImplantsSection">
      <ownedComment xmi:id="_F3ZIYEE3EeGdmoWy_aLP0Q">
        <body>The Procedure Implants section records any materials placed during the procedure including stents, tubes, and drains.</body>
      </ownedComment>
      <ownedRule xmi:id="_pS68EGknEeGCCOsAP2C6Nw" name="ProcedureImplantsSectionTemplateId" constrainedElement="_Z662wDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pS68EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.40')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pS9YUGknEeGCCOsAP2C6Nw" name="ProcedureImplantsSectionCode" constrainedElement="_Z662wDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pS9YUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '59771-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pS-mcGknEeGCCOsAP2C6Nw" name="ProcedureImplantsSectionText" constrainedElement="_Z662wDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pS-mcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pS_0kGknEeGCCOsAP2C6Nw" name="ProcedureImplantsSectionTitle" constrainedElement="_Z662wDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pS_0kWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Z662wTVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_cjmJMDVzEeGaW4kr-GbV8Q" name="ProcedureIndicationsSection">
      <ownedComment xmi:id="_ukS8sEEzEeGdmoWy_aLP0Q">
        <body>The Procedure Indications section records details about the reason for the procedure or surgery. This section may include the pre-procedure diagnosis or diagnoses as well as one or more symptoms that contribute to the reason the procedure is being performed.</body>
      </ownedComment>
      <ownedRule xmi:id="_pTBCsGknEeGCCOsAP2C6Nw" name="ProcedureIndicationsSectionTemplateId" constrainedElement="_cjmJMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTBCsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.29')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTC34GknEeGCCOsAP2C6Nw" name="ProcedureIndicationsSectionCode" constrainedElement="_cjmJMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTDe8GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '59768-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTEtEGknEeGCCOsAP2C6Nw" name="ProcedureIndicationsSectionText" constrainedElement="_cjmJMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTEtEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTF7MGknEeGCCOsAP2C6Nw" name="ProcedureIndicationsSectionTitle" constrainedElement="_cjmJMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTF7MWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYPg8mknEeGCCOsAP2C6Nw" name="ProcedureIndicationsSectionIndication" constrainedElement="_cjmJMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYPg82knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::Indication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cjv6MDVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pYQvEGknEeGCCOsAP2C6Nw" name="getIndications" isQuery="true" bodyCondition="_pYQvE2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pYQvE2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pYQvEGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYQvFGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pYQvEWknEeGCCOsAP2C6Nw" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pYQvEmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gSUdsDVzEeGaW4kr-GbV8Q" name="ProcedureSpecimensTakenSection">
      <ownedComment xmi:id="_2NpTsEEzEeGdmoWy_aLP0Q">
        <body>The Procedure Specimens Taken section records the tissues, objects, or samples taken from the patient during the procedure including biopsies, aspiration fluid, or other samples sent for pathological analysis. The narrative may include a description of the specimens.</body>
      </ownedComment>
      <ownedRule xmi:id="_pTHJUGknEeGCCOsAP2C6Nw" name="ProcedureSpecimensTakenSectionTemplateId" constrainedElement="_gSUdsDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTHJUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.31')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTJlkGknEeGCCOsAP2C6Nw" name="ProcedureSpecimensTakenSectionCode" constrainedElement="_gSUdsDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTJlkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '59773-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTKzsGknEeGCCOsAP2C6Nw" name="ProcedureSpecimensTakenSectionText" constrainedElement="_gSUdsDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTKzsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTMB0GknEeGCCOsAP2C6Nw" name="ProcedureSpecimensTakenSectionTitle" constrainedElement="_gSUdsDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTMB0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gSUdsTVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iy8nYDVzEeGaW4kr-GbV8Q" name="SubjectiveSection">
      <ownedComment xmi:id="_P7H3IEE3EeGdmoWy_aLP0Q">
        <body>The Subjective section describes in a narrative format the patient's current condition and/or interval changes as reported by the patient or by the patient's guardian or another informant.</body>
      </ownedComment>
      <ownedRule xmi:id="_pTNP8GknEeGCCOsAP2C6Nw" name="SubjectiveSectionTemplateId" constrainedElement="_iy8nYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTNP8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.21.2.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTPFIGknEeGCCOsAP2C6Nw" name="SubjectiveSectionCode" constrainedElement="_iy8nYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTPFIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '61150-9' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTQ6UGknEeGCCOsAP2C6Nw" name="SubjectiveSectionText" constrainedElement="_iy8nYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTQ6UWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTSIcGknEeGCCOsAP2C6Nw" name="SubjectiveSectionTitle" constrainedElement="_iy8nYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTSIcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iy8nYTVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R-vIoDssEeGvzMYhXuqAEA" name="ConsultationNote">
      <ownedComment xmi:id="_OaB2UDstEeGvzMYhXuqAEA">
        <body>For the purpose of this Implementation Guide, a consultation visit is defined by the evaluation and management guidelines for a consultation established by the Centers for Medicare and Medicaid Services (CMS). According to those guidelines, a Consultation Note must be generated as a result of a physician or nonphysician practitioner's (NPP) request for an opinion or advice from another physician or NPP. Consultations must involve face-to-face time with the patient or fall under guidelines for telemedicine visits. &#xD;
A Consultation Note must be provided to the referring physician or NPP and must include the reason for the referral, history of present illness, physical examination, and decision-making component (Assessment and Plan). &#xD;
An NPP is defined as any licensed medical professional as recognized by the state in which the professional practices, including, but not limited to, physician assistants, nurse practitioners, clinical nurse specialists, social workers, registered dietitians, physical therapists, and speech therapists.&#xD;
Reports on visits requested by a patient, family member, or other third party are not covered by this specification. Second opinions, sometimes called &quot;confirmatory consultations,&quot; also are not covered here. Any question on use of the Consultation Note defined here should be resolved by reference to CMS or American Medical Association (AMA) guidelines.</body>
      </ownedComment>
      <ownedRule xmi:id="_8h6-oGjGEeGNoZ3kEkcY2A" name="ConsultationNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_8h6-oWjGEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_90KpoGjGEeGNoZ3kEkcY2A" name="ConsultationNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_90KpoWjGEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AUOyoGjHEeGNoZ3kEkcY2A" name="ConsultationNoteDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AUOyoWjHEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTXA8GknEeGCCOsAP2C6Nw" name="ConsultationNoteTemplateId" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTXA8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTbSYGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCode" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTbSYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pThZAWknEeGCCOsAP2C6Nw" name="ConsultationNoteInFulfillmentOf" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pThZAmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.inFulfillmentOf->exists(inFulfillmentOf : cda::InFulfillmentOf | not inFulfillmentOf.oclIsUndefined() and inFulfillmentOf.oclIsKindOf(cda::InFulfillmentOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTinIGknEeGCCOsAP2C6Nw" name="ConsultationNoteComponentOf" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTinIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTm4kGknEeGCCOsAP2C6Nw" name="ConsultationNoteAssessmentSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTm4kWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTotwGknEeGCCOsAP2C6Nw" name="ConsultationNoteAssessmentAndPlanSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTotwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTuNUGknEeGCCOsAP2C6Nw" name="ConsultationNotePlanOfCareSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTuNUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTwCgGknEeGCCOsAP2C6Nw" name="ConsultationNoteHistoryOfPresentIllness" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTwCgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTxQpGknEeGCCOsAP2C6Nw" name="ConsultationNotePhysicalExamSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTxQpWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTzF0GknEeGCCOsAP2C6Nw" name="ConsultationNoteReasonForReferralSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTzF0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pT0T8GknEeGCCOsAP2C6Nw" name="ConsultationNoteReasonForVisitSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT0T8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pT2JIGknEeGCCOsAP2C6Nw" name="ConsultationNoteAllergiesSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT2JIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pT3XRWknEeGCCOsAP2C6Nw" name="ConsultationNoteChiefComplaintSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT3XRmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pT5McGknEeGCCOsAP2C6Nw" name="ConsultationNoteChiefComplaintAndReasonForVisitSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT5McWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pT6alGknEeGCCOsAP2C6Nw" name="ConsultationNoteFamilyHistorySection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT6alWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pT8PwGknEeGCCOsAP2C6Nw" name="ConsultationNoteGeneralStatusSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT8PwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pT9d5WknEeGCCOsAP2C6Nw" name="ConsultationNoteHistoryOfPastIllnessSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT9d5mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pT_TEGknEeGCCOsAP2C6Nw" name="ConsultationNoteImmunizationsSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT_TEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUAhNWknEeGCCOsAP2C6Nw" name="ConsultationNoteMedicationsSectionEntriesOptional" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUAhNmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUCWYGknEeGCCOsAP2C6Nw" name="ConsultationNoteProblemSectionEntriesOptional" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUCWYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUDkhWknEeGCCOsAP2C6Nw" name="ConsultationNoteProceduresSectionEntriesOptional" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUDkhmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUFZsGknEeGCCOsAP2C6Nw" name="ConsultationNoteResultsSectionEntriesOptional" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUFZsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUHO4GknEeGCCOsAP2C6Nw" name="ConsultationNoteReviewOfSystemsSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUHO4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUIdBGknEeGCCOsAP2C6Nw" name="ConsultationNoteSocialHistorySection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUIdBWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUK5QGknEeGCCOsAP2C6Nw" name="ConsultationNoteVitalSignsSectionEntriesOptional" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUK5QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peM_AGknEeGCCOsAP2C6Nw" name="ConsultationNoteInFulfillmentOfOrderId" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peM_AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.inFulfillmentOf->exists(not oclIsUndefined()) and self.inFulfillmentOf.order->exists(not oclIsUndefined()) then self.inFulfillmentOf.order->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peNmEGknEeGCCOsAP2C6Nw" name="ConsultationNoteInFulfillmentOfOrder" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peNmEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.inFulfillmentOf->exists(not oclIsUndefined()) then self.inFulfillmentOf->forAll(order->one(order : cda::Order | not order.oclIsUndefined() and order.oclIsKindOf(cda::Order))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peQCUGknEeGCCOsAP2C6Nw" name="ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntityHasPersonOrganizationOrBoth" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peQCUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.encounterParticipant->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.encounterParticipant->forAll(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peQpYGknEeGCCOsAP2C6Nw" name="ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntity" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peQpYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.encounterParticipant->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.encounterParticipant->forAll(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peR3gGknEeGCCOsAP2C6Nw" name="ConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntityHasPersonOrganizationOrBoth" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peR3gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.responsibleParty->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.responsibleParty->forAll(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peSekGknEeGCCOsAP2C6Nw" name="ConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntity" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peTFoGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.responsibleParty->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.responsibleParty->forAll(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peTssGknEeGCCOsAP2C6Nw" name="ConsultationNoteComponentOfEncompassingEncounter2EffectiveTime" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peTssWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peUTwGknEeGCCOsAP2C6Nw" name="ConsultationNoteComponentOfEncompassingEncounter2Id" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peUTwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1)) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peU60GknEeGCCOsAP2C6Nw" name="ConsultationNoteComponentOfEncompassingEncounter2ResponsibleParty" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peU60WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(cda::ResponsibleParty))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peVh4GknEeGCCOsAP2C6Nw" name="ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipant" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peVh4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll(encounterParticipant->exists(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(cda::EncounterParticipant))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peWwAGknEeGCCOsAP2C6Nw" name="ConsultationNoteComponentOfEncompassingEncounter" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peWwAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) then self.componentOf->forAll(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter))) else true endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_R_oggDssEeGvzMYhXuqAEA" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_pToGsGknEeGCCOsAP2C6Nw" name="getAssessmentSection" isQuery="true" bodyCondition="_pToGs2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pToGs2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pToGsGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pToGtGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->first().oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pToGsWknEeGCCOsAP2C6Nw" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pToGsmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pTp74GknEeGCCOsAP2C6Nw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_pTp742knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pTp742knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pTp74GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTp75GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))->asSequence()->first().oclAsType(consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pTp74WknEeGCCOsAP2C6Nw" type="_2Rwq0BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pTp74mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pTvbcGknEeGCCOsAP2C6Nw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_pTvbc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pTvbc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pTvbcGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTvbdGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pTvbcWknEeGCCOsAP2C6Nw" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pTvbcmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pTwpkGknEeGCCOsAP2C6Nw" name="getHistoryOfPresentIllness" isQuery="true" bodyCondition="_pTxQomknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pTxQomknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pTwpkGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTxQo2knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pTxQoGknEeGCCOsAP2C6Nw" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pTxQoWknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pTyewGknEeGCCOsAP2C6Nw" name="getPhysicalExamSection" isQuery="true" bodyCondition="_pTyew2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pTyew2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pTyewGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTyexGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))->asSequence()->first().oclAsType(consol::PhysicalExamSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pTyewWknEeGCCOsAP2C6Nw" type="_2Pxt0hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pTyewmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pTzs4GknEeGCCOsAP2C6Nw" name="getReasonForReferralSection" isQuery="true" bodyCondition="_pTzs42knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pTzs42knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pTzs4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTzs5GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))->asSequence()->first().oclAsType(consol::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pTzs4WknEeGCCOsAP2C6Nw" type="_2PWQFxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pTzs4mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pT1iEGknEeGCCOsAP2C6Nw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_pT1iE2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pT1iE2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pT1iEGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT1iFGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->first().oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pT1iEWknEeGCCOsAP2C6Nw" type="_Nm64UCscEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pT1iEmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pT3XQGknEeGCCOsAP2C6Nw" name="getAllergiesSection" isQuery="true" bodyCondition="_pT3XQ2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pT3XQ2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pT3XQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT3XRGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pT3XQWknEeGCCOsAP2C6Nw" type="_bGzYgBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pT3XQmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pT4lYGknEeGCCOsAP2C6Nw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_pT4lY2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pT4lY2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pT4lYGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT4lZGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->first().oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pT4lYWknEeGCCOsAP2C6Nw" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pT4lYmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pT5zgGknEeGCCOsAP2C6Nw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_pT6akmknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pT6akmknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pT5zgGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT6ak2knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->first().oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pT6akGknEeGCCOsAP2C6Nw" type="_oI7CQCsaEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pT6akWknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pT7osGknEeGCCOsAP2C6Nw" name="getFamilyHistorySection" isQuery="true" bodyCondition="_pT7os2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pT7os2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pT7osGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT7otGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->first().oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pT7osWknEeGCCOsAP2C6Nw" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pT7osmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pT9d4GknEeGCCOsAP2C6Nw" name="getGeneralStatusSection" isQuery="true" bodyCondition="_pT9d42knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pT9d42knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pT9d4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT9d5GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))->asSequence()->first().oclAsType(consol::GeneralStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pT9d4WknEeGCCOsAP2C6Nw" type="_2Pxt6xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pT9d4mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pT-sAGknEeGCCOsAP2C6Nw" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_pT-sA2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pT-sA2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pT-sAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pT-sBGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pT-sAWknEeGCCOsAP2C6Nw" type="_2PQJcxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pT-sAmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUAhMGknEeGCCOsAP2C6Nw" name="getImmunizationsSection" isQuery="true" bodyCondition="_pUAhM2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUAhM2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUAhMGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUAhNGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->first().oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUAhMWknEeGCCOsAP2C6Nw" type="_2L7voBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUAhMmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUBvUGknEeGCCOsAP2C6Nw" name="getMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_pUBvU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUBvU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUBvUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUBvVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::MedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUBvUWknEeGCCOsAP2C6Nw" type="_iAoXEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUBvUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUDkgGknEeGCCOsAP2C6Nw" name="getProblemSectionEntriesOptional" isQuery="true" bodyCondition="_pUDkg2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUDkg2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUDkgGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUDkhGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUDkgWknEeGCCOsAP2C6Nw" type="_naxrkBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUDkgmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUEyoGknEeGCCOsAP2C6Nw" name="getProceduresSectionEntriesOptional" isQuery="true" bodyCondition="_pUEyo2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUEyo2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUEyoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUEypGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUEyoWknEeGCCOsAP2C6Nw" type="_s9Ig4BVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUEyomknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUGn0GknEeGCCOsAP2C6Nw" name="getResultsSectionEntriesOptional" isQuery="true" bodyCondition="_pUGn02knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUGn02knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUGn0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUGn1GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ResultsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUGn0WknEeGCCOsAP2C6Nw" type="_xGqiEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUGn0mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUH18GknEeGCCOsAP2C6Nw" name="getReviewOfSystemsSection" isQuery="true" bodyCondition="_pUIdAmknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUIdAmknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUH18GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUIdA2knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->first().oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUIdAGknEeGCCOsAP2C6Nw" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUIdAWknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUKSMGknEeGCCOsAP2C6Nw" name="getSocialHistorySection" isQuery="true" bodyCondition="_pUKSM2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUKSM2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUKSMGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUKSNGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->first().oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUKSMWknEeGCCOsAP2C6Nw" type="_2JKvgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUKSMmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pUMHYGknEeGCCOsAP2C6Nw" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_pUMHY2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pUMHY2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pUMHYGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUMHZGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pUMHYWknEeGCCOsAP2C6Nw" type="_bRH8sBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pUMHYmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_W8pI4DszEeGvzMYhXuqAEA" name="AssessmentSection">
      <ownedComment xmi:id="_SHlZkEE1EeGdmoWy_aLP0Q">
        <body>The Assessment section (also called impression or diagnoses) represents the clinician's conclusions and working assumptions that will guide treatment of the patient. The assessment formulates a specific plan or set of recommendations. The assessment may be a list of specific disease entities or a narrative block.</body>
      </ownedComment>
      <ownedRule xmi:id="_pTp75WknEeGCCOsAP2C6Nw" name="AssessmentSectionTemplateId" constrainedElement="_W8pI4DszEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTp75mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTsYIGknEeGCCOsAP2C6Nw" name="AssessmentSectionCode" constrainedElement="_W8pI4DszEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTsYIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '51848-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pTtmQGknEeGCCOsAP2C6Nw" name="AssessmentSectionText" constrainedElement="_W8pI4DszEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pTtmQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W8pI4TszEeGvzMYhXuqAEA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-Qa60D1jEeG3tde5scYNWA" name="HistoryAndPhysicalNote">
      <ownedComment xmi:id="_BkJVYD1kEeG3tde5scYNWA">
        <body>A History and Physical  Note is a medical report that documents the current and past conditions of the patient. It contains essential information that helps determine an individual's health status. &#xD;
The first portion of the report is a current collection of organized information unique to an individual, typically supplied by the patient or their caregiver, about the current medical problem or the reason for the patient encounter. This information is followed by a description of any past or ongoing medical issues, including current medications and allergies. Information is also obtained about the patient's lifestyle, habits, and diseases among family members.&#xD;
The next portion of the report contains information obtained by physically examining the patient and gathering diagnostic information in the form of laboratory tests, imaging, or other diagnostic procedures. &#xD;
The report ends with the clinician's assessment of the patient's situation and the intended plan to address those issues. &#xD;
A History and Physical Examination is required upon hospital admission as well as before operative procedures. An initial evaluation in an ambulatory setting is often documented in the form of an History and Physical Note.</body>
      </ownedComment>
      <ownedRule xmi:id="_OMdNYD3rEeGYzOhiGkMbTA" name="HistoryAndPhysicalNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Q_ShYD3rEeGYzOhiGkMbTA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_sAyY0D3rEeGYzOhiGkMbTA" name="HistoryAndPhysicalNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t0LpED3rEeGYzOhiGkMbTA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_6fCIkGjAEeGNoZ3kEkcY2A" name="HistoryAndPhysicalNoteHasChiefComplaintAndReasonForVisitChiefComplaintOrReasonForVisit" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6fCIkWjAEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_96mQgGjAEeGNoZ3kEkcY2A" name="HistoryAndPhysicalNoteDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_96mQgWjAEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUnlMGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteTemplateId" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUnlMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUtEwGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCode" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUtEwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pUzycWknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteInFulfillmentOf" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pUzycmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.inFulfillmentOf->exists(inFulfillmentOf : cda::InFulfillmentOf | not inFulfillmentOf.oclIsUndefined() and inFulfillmentOf.oclIsKindOf(rim::ActRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pU55EGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteComponentOf" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pU55EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pU7HMGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteAllergiesSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pU7HMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pU88YWknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteAssessmentSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pU88YmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pU-xkGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNotePlanOfCareSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pU-xkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pU__tWknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteAssessmentAndPlanSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pU__tmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVB04GknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteChiefComplaintSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVB04WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVDqEGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteChiefComplaintAndReasonForVisitSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVDqEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVE4NWknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteFamilyHistorySection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVE4NmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVGtYGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteGeneralStatusSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVGtYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVIikGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteHistoryOfPastIllnessSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVIikWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVJwtWknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteMedicationsSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVJwtmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVLl5GknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNotePhysicalExamSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVLl5WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVNbEGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteReasonForVisitSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVNbEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVPQQWknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteResultsSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVPQQmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVRFcGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteReviewOfSystemsSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVRFcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVS6oGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteSocialHistorySection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVS6oWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVUv0GknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteHistoryOfPresentIllnessSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVUv0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVV99WknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteImmunizationsSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVWlAGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVXzJWknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteProblemSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVXzJmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVZoVWknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteProceduresSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVZoVmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVbdhGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteVitalSignsSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVbdhWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pekycGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsiblePartyAssignedEntityHasPersonOrOrganization" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pekycWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.responsibleParty->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.responsibleParty->forAll(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pemAkGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsiblePartyAssignedEntity" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pemAkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.responsibleParty->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.responsibleParty->forAll(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_penOsGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipantAssignedEntityHasPersonOrOrganization" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_penOsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.encounterParticipant->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.encounterParticipant->forAll(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peoc0GknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipantAssignedEntity" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peoc0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.encounterParticipant->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.encounterParticipant->forAll(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pepD4GknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EffectiveTime" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pepD4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peqSAGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4Id" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peqSAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1)) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_peq5EGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4Location" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_peq5EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll(location->one(location : cda::Location | not location.oclIsUndefined() and location.oclIsKindOf(rim::Participation))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pesHMGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsibleParty" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pesHMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(cda::ResponsibleParty))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pesuQGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipant" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pesuQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll(encounterParticipant->one(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(cda::EncounterParticipant))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pet8YGknEeGCCOsAP2C6Nw" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pet8YWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) then self.componentOf->forAll(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter))) else true endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-QelMD1jEeG3tde5scYNWA" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_pU8VUGknEeGCCOsAP2C6Nw" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_pU8VU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pU8VU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pU8VUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pU88YGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pU8VUWknEeGCCOsAP2C6Nw" type="_bGzYgBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pU8VUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pU-KgGknEeGCCOsAP2C6Nw" name="getAssessmentSection" isQuery="true" bodyCondition="_pU-Kg2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pU-Kg2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pU-KgGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pU-KhGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->first().oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pU-KgWknEeGCCOsAP2C6Nw" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pU-KgmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pU__sGknEeGCCOsAP2C6Nw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_pU__s2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pU__s2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pU__sGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pU__tGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pU__sWknEeGCCOsAP2C6Nw" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pU__smknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVBN0GknEeGCCOsAP2C6Nw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_pVBN02knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVBN02knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVBN0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVBN1GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))->asSequence()->first().oclAsType(consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVBN0WknEeGCCOsAP2C6Nw" type="_2Rwq0BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVBN0mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVDDAGknEeGCCOsAP2C6Nw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_pVDDA2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVDDA2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVDDAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVDDBGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->first().oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVDDAWknEeGCCOsAP2C6Nw" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVDDAmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVE4MGknEeGCCOsAP2C6Nw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_pVE4M2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVE4M2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVE4MGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVE4NGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->first().oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVE4MWknEeGCCOsAP2C6Nw" type="_oI7CQCsaEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVE4MmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVGGUGknEeGCCOsAP2C6Nw" name="getFamilyHistorySection" isQuery="true" bodyCondition="_pVGGU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVGGU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVGGUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVGGVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->first().oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVGGUWknEeGCCOsAP2C6Nw" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVGGUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVH7gGknEeGCCOsAP2C6Nw" name="getGeneralStatusSection" isQuery="true" bodyCondition="_pVH7g2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVH7g2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVH7gGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVH7hGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))->asSequence()->first().oclAsType(consol::GeneralStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVH7gWknEeGCCOsAP2C6Nw" type="_2Pxt6xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVH7gmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVJwsGknEeGCCOsAP2C6Nw" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_pVJws2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVJws2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVJwsGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVJwtGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVJwsWknEeGCCOsAP2C6Nw" type="_2PQJcxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVJwsmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVK-0GknEeGCCOsAP2C6Nw" name="getMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_pVLl4mknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVLl4mknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVK-0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVLl42knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::MedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVLl4GknEeGCCOsAP2C6Nw" type="_iAoXEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVLl4WknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVM0AGknEeGCCOsAP2C6Nw" name="getPhysicalExamSection" isQuery="true" bodyCondition="_pVM0A2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVM0A2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVM0AGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVM0BGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))->asSequence()->first().oclAsType(consol::PhysicalExamSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVM0AWknEeGCCOsAP2C6Nw" type="_2Pxt0hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVM0AmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVOpMGknEeGCCOsAP2C6Nw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_pVOpM2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVOpM2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVOpMGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVPQQGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->first().oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVOpMWknEeGCCOsAP2C6Nw" type="_Nm64UCscEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVOpMmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVQeYGknEeGCCOsAP2C6Nw" name="getResultsSectionEntriesOptional" isQuery="true" bodyCondition="_pVQeY2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVQeY2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVQeYGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVQeZGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ResultsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVQeYWknEeGCCOsAP2C6Nw" type="_xGqiEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVQeYmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVSTkGknEeGCCOsAP2C6Nw" name="getReviewOfSystemsSection" isQuery="true" bodyCondition="_pVSTk2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVSTk2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVSTkGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVSTlGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->first().oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVSTkWknEeGCCOsAP2C6Nw" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVSTkmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVUIwGknEeGCCOsAP2C6Nw" name="getSocialHistorySection" isQuery="true" bodyCondition="_pVUIw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVUIw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVUIwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVUIxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->first().oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVUIwWknEeGCCOsAP2C6Nw" type="_2JKvgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVUIwmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVV98GknEeGCCOsAP2C6Nw" name="getHistoryOfPresentIllnessSection" isQuery="true" bodyCondition="_pVV982knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVV982knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVV98GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVV99GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVV98WknEeGCCOsAP2C6Nw" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVV98mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVXzIGknEeGCCOsAP2C6Nw" name="getImmunizationsSectionEntriesOptional" isQuery="true" bodyCondition="_pVXzI2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVXzI2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVXzIGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVXzJGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVXzIWknEeGCCOsAP2C6Nw" type="_EuPloBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVXzImknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVZoUGknEeGCCOsAP2C6Nw" name="getProblemSectionEntriesOptional" isQuery="true" bodyCondition="_pVZoU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVZoU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVZoUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVZoVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVZoUWknEeGCCOsAP2C6Nw" type="_naxrkBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVZoUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVa2cGknEeGCCOsAP2C6Nw" name="getProceduresSectionEntriesOptional" isQuery="true" bodyCondition="_pVbdgmknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVbdgmknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVa2cGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVbdg2knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVbdgGknEeGCCOsAP2C6Nw" type="_s9Ig4BVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVbdgWknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVcroGknEeGCCOsAP2C6Nw" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_pVdSsWknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVdSsWknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVcroGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVdSsmknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVcroWknEeGCCOsAP2C6Nw" type="_bRH8sBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVdSsGknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xe9MsD4iEeGhnL_c4sBHGg" name="OperativeNote">
      <ownedComment xmi:id="_n7Z1wEE2EeGdmoWy_aLP0Q">
        <body>The Operative Note Fluids section may be used to record fluids administered during the surgical procedure.</body>
      </ownedComment>
      <ownedRule xmi:id="_pVfu8GknEeGCCOsAP2C6Nw" name="OperativeNoteTemplateId" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVfu8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pViyQGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCode" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pViyQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVtxYGknEeGCCOsAP2C6Nw" name="OperativeNoteDocumentationOf" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVtxYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVu_gGknEeGCCOsAP2C6Nw" name="OperativeNoteAnesthesiaSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVu_gWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AnesthesiaSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVwNo2knEeGCCOsAP2C6Nw" name="OperativeNoteComplicationsSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVwNpGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ComplicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVyC0GknEeGCCOsAP2C6Nw" name="OperativeNotePostoperativeDiagnosisSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVyC0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostoperativeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pVzQ8mknEeGCCOsAP2C6Nw" name="OperativeNotePreoperativeDiagnosisSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVzQ82knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pV1GIGknEeGCCOsAP2C6Nw" name="OperativeNoteProcedureEstimatedBloodLossSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV1GIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureEstimatedBloodLossSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pV2UQmknEeGCCOsAP2C6Nw" name="OperativeNoteProcedureFindingsSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV2UQ2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureFindingsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pV4JcGknEeGCCOsAP2C6Nw" name="OperativeNoteProcedureSpecimensTakenSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV4JcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureSpecimensTakenSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pV5XkWknEeGCCOsAP2C6Nw" name="OperativeNoteProcedureDescriptionSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV5XkmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDescriptionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pV7MwGknEeGCCOsAP2C6Nw" name="OperativeNoteProcedureImplantsSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV7MwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureImplantsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pV8a4mknEeGCCOsAP2C6Nw" name="OperativeNoteOperativeNoteFluidSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV8a42knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::OperativeNoteFluidSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pV-QEGknEeGCCOsAP2C6Nw" name="OperativeNoteOperativeNoteSurgicalProcedureSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV-QEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::OperativeNoteSurgicalProcedureSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pV_eNWknEeGCCOsAP2C6Nw" name="OperativeNotePlanOfCareSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV_eNmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWBTYGknEeGCCOsAP2C6Nw" name="OperativeNotePlannedProcedureSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWBTYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlannedProcedureSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWChhWknEeGCCOsAP2C6Nw" name="OperativeNoteProcedureDispositionSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWChhmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDispositionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWEWsmknEeGCCOsAP2C6Nw" name="OperativeNoteProcedureIndicationsSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWEWs2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureIndicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWGL4GknEeGCCOsAP2C6Nw" name="OperativeNoteSurgicalDrainsSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWGL4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SurgicalDrainsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pezb8GknEeGCCOsAP2C6Nw" name="OperativeNoteDocumentationOfServiceEventPrimaryPerformerFunctionCode" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pezb8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent.performer->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent.performer->select(typeCode = vocab::x_ServiceEventPerformer::PPRF)->forAll((functionCode.oclIsUndefined() or functionCode.isNullFlavorUndefined()) implies (functionCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = functionCode.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.101' and not value.code.oclIsUndefined()))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pe0DAGknEeGCCOsAP2C6Nw" name="OperativeNoteDocumentationOfServiceEventPrimaryPerformerTypeCode" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pe0DAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent.performer->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent.performer->select(typeCode = vocab::x_ServiceEventPerformer::PPRF)->forAll(isDefined('typeCode')) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pe0qEGknEeGCCOsAP2C6Nw" name="OperativeNoteDocumentationOfServiceEventProcedureCodes" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pe0qEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll(code.codeSystem = '2.16.840.1.113883.6.104' or code.codeSystem = '2.16.840.1.113883.6.12' or code.codeSystem = '2.16.840.1.113883.6.96') else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pe1RIGknEeGCCOsAP2C6Nw" name="OperativeNoteDocumentationOfServiceEventEffectiveTimeHasLow" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pe1RIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll(not effectiveTime.low.oclIsUndefined()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pe14MGknEeGCCOsAP2C6Nw" name="OperativeNoteDocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pe14MWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll(not effectiveTime.width.oclIsUndefined() xor not effectiveTime.high.oclIsUndefined()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pe2fQGknEeGCCOsAP2C6Nw" name="OperativeNoteDocumentationOfServiceEventEffectiveTimeNoHighIfWidth" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pe2fQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll(not effectiveTime.width.oclIsUndefined() xor not effectiveTime.high.oclIsUndefined()) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pe3GUGknEeGCCOsAP2C6Nw" name="OperativeNoteDocumentationOfServiceEventAnyAssistantsAsSecondary" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pe3GUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll(performer->forAll(typeCode = vocab::x_ServiceEventPerformer::PPRF or typeCode= vocab::x_ServiceEventPerformer::SPRF)) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pe3tYGknEeGCCOsAP2C6Nw" name="OperativeNoteDocumentationOfServiceEventCode" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pe3tYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pe4UcGknEeGCCOsAP2C6Nw" name="OperativeNoteDocumentationOfServiceEventEffectiveTime" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pe4UcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pe5ikGknEeGCCOsAP2C6Nw" name="OperativeNoteDocumentationOfServiceEvent" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pe5ikWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) then self.documentationOf->forAll(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent))) else true endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xfHkwD4iEeGhnL_c4sBHGg" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_pVvmkGknEeGCCOsAP2C6Nw" name="getAnesthesiaSection" isQuery="true" bodyCondition="_pVwNoWknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVwNoWknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVvmkGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVwNomknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AnesthesiaSection))->asSequence()->first().oclAsType(consol::AnesthesiaSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVvmkWknEeGCCOsAP2C6Nw" type="_OA_Q0DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVwNoGknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVxbwGknEeGCCOsAP2C6Nw" name="getComplicationsSection" isQuery="true" bodyCondition="_pVxbw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVxbw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVxbwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVxbxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ComplicationsSection))->asSequence()->first().oclAsType(consol::ComplicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVxbwWknEeGCCOsAP2C6Nw" type="_R1OXcDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVxbwmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pVyp4GknEeGCCOsAP2C6Nw" name="getPostoperativeDiagnosisSection" isQuery="true" bodyCondition="_pVzQ8GknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pVzQ8GknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pVyp4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pVzQ8WknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostoperativeDiagnosisSection))->asSequence()->first().oclAsType(consol::PostoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pVyp4WknEeGCCOsAP2C6Nw" type="_7UA-4DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pVyp4mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pV0fEGknEeGCCOsAP2C6Nw" name="getPreoperativeDiagnosisSection" isQuery="true" bodyCondition="_pV0fE2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pV0fE2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pV0fEGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV0fFGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection))->asSequence()->first().oclAsType(consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pV0fEWknEeGCCOsAP2C6Nw" type="_Cu6qMDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pV0fEmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pV1tMGknEeGCCOsAP2C6Nw" name="getProcedureEstimatedBloodLossSection" isQuery="true" bodyCondition="_pV2UQGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pV2UQGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pV1tMGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV2UQWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureEstimatedBloodLossSection))->asSequence()->first().oclAsType(consol::ProcedureEstimatedBloodLossSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pV1tMWknEeGCCOsAP2C6Nw" type="_TvcL8DVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pV1tMmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pV3iYGknEeGCCOsAP2C6Nw" name="getProcedureFindingsSection" isQuery="true" bodyCondition="_pV3iY2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pV3iY2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pV3iYGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV3iZGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureFindingsSection))->asSequence()->first().oclAsType(consol::ProcedureFindingsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pV3iYWknEeGCCOsAP2C6Nw" type="_W4UBYDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pV3iYmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pV4wgGknEeGCCOsAP2C6Nw" name="getProcedureSpecimensTakenSection" isQuery="true" bodyCondition="_pV4wg2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pV4wg2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pV4wgGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV5XkGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureSpecimensTakenSection))->asSequence()->first().oclAsType(consol::ProcedureSpecimensTakenSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pV4wgWknEeGCCOsAP2C6Nw" type="_gSUdsDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pV4wgmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pV6lsGknEeGCCOsAP2C6Nw" name="getProcedureDescriptionSection" isQuery="true" bodyCondition="_pV6ls2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pV6ls2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pV6lsGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV6ltGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDescriptionSection))->asSequence()->first().oclAsType(consol::ProcedureDescriptionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pV6lsWknEeGCCOsAP2C6Nw" type="_HNUIIDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pV6lsmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pV7z0GknEeGCCOsAP2C6Nw" name="getProcedureImplantsSection" isQuery="true" bodyCondition="_pV8a4GknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pV8a4GknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pV7z0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV8a4WknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureImplantsSection))->asSequence()->first().oclAsType(consol::ProcedureImplantsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pV7z0WknEeGCCOsAP2C6Nw" type="_Z662wDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pV7z0mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pV9pAGknEeGCCOsAP2C6Nw" name="getOperativeNoteFluidSection" isQuery="true" bodyCondition="_pV9pA2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pV9pA2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pV9pAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV9pBGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::OperativeNoteFluidSection))->asSequence()->first().oclAsType(consol::OperativeNoteFluidSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pV9pAWknEeGCCOsAP2C6Nw" type="_vHfXoDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pV9pAmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pV_eMGknEeGCCOsAP2C6Nw" name="getOperativeNoteSurgicalProcedureSection" isQuery="true" bodyCondition="_pV_eM2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pV_eM2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pV_eMGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pV_eNGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::OperativeNoteSurgicalProcedureSection))->asSequence()->first().oclAsType(consol::OperativeNoteSurgicalProcedureSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pV_eMWknEeGCCOsAP2C6Nw" type="_zel6wDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pV_eMmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWAsUGknEeGCCOsAP2C6Nw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_pWAsU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWAsU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWAsUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWAsVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWAsUWknEeGCCOsAP2C6Nw" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWAsUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWChgGknEeGCCOsAP2C6Nw" name="getPlannedProcedureSection" isQuery="true" bodyCondition="_pWChg2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWChg2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWChgGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWChhGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlannedProcedureSection))->asSequence()->first().oclAsType(consol::PlannedProcedureSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWChgWknEeGCCOsAP2C6Nw" type="_3b6E4DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWChgmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWDvoGknEeGCCOsAP2C6Nw" name="getProcedureDispositionSection" isQuery="true" bodyCondition="_pWEWsGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWEWsGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWDvoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWEWsWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDispositionSection))->asSequence()->first().oclAsType(consol::ProcedureDispositionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWDvoWknEeGCCOsAP2C6Nw" type="_QhXGYDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWDvomknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWFk0GknEeGCCOsAP2C6Nw" name="getProcedureIndicationsSection" isQuery="true" bodyCondition="_pWFk02knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWFk02knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWFk0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWFk1GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureIndicationsSection))->asSequence()->first().oclAsType(consol::ProcedureIndicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWFk0WknEeGCCOsAP2C6Nw" type="_cjmJMDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWFk0mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWHaAGknEeGCCOsAP2C6Nw" name="getSurgicalDrainsSection" isQuery="true" bodyCondition="_pWHaA2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWHaA2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWHaAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWHaBGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SurgicalDrainsSection))->asSequence()->first().oclAsType(consol::SurgicalDrainsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWHaAWknEeGCCOsAP2C6Nw" type="_luQh8DVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWHaAmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_LuYEsD7YEeGvOdejHZ7dYg" name="ProcedureNote">
      <ownedRule xmi:id="_NBpHsD-6EeGtTIIxHid14Q" name="ProcedureNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_NBpHsT-6EeGtTIIxHid14Q">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ot-tsD-6EeGtTIIxHid14Q" name="ProcedureNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ot-tsT-6EeGtTIIxHid14Q">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_KkMxIGjIEeGNoZ3kEkcY2A" name="ProcedureNoteDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_KkMxIWjIEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWIBEGknEeGCCOsAP2C6Nw" name="ProcedureNoteTemplateId" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWIBEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWMSgGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCode" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWMSgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWa8AGknEeGCCOsAP2C6Nw" name="ProcedureNoteIndividual" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWa8AWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWcKIGknEeGCCOsAP2C6Nw" name="ProcedureNoteComponentOf" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWcKIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWemYGknEeGCCOsAP2C6Nw" name="ProcedureNotePrimaryCarePhysician" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWemYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWi30GknEeGCCOsAP2C6Nw" name="ProcedureNoteProvider" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWje4GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWktAGknEeGCCOsAP2C6Nw" name="ProcedureNoteAssessmentSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWktAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWl7ImknEeGCCOsAP2C6Nw" name="ProcedureNotePlanOfCareSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWl7I2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWnwUGknEeGCCOsAP2C6Nw" name="ProcedureNoteAssessmentAndPlanSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWnwUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWo-dGknEeGCCOsAP2C6Nw" name="ProcedureNoteComplicationsSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWo-dWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ComplicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWqzoGknEeGCCOsAP2C6Nw" name="ProcedureNotePostprocedureDiagnosisSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWqzoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostprocedureDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWsBwmknEeGCCOsAP2C6Nw" name="ProcedureNoteProcedureDescriptionSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWsBw2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDescriptionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWtP5WknEeGCCOsAP2C6Nw" name="ProcedureNoteProcedureIndicationsSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWt28GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureIndicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWvFEGknEeGCCOsAP2C6Nw" name="ProcedureNoteAllergiesSectionEntriesOptional" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWvFEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWwTNWknEeGCCOsAP2C6Nw" name="ProcedureNoteAnesthesiaSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWwTNmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AnesthesiaSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWyIYGknEeGCCOsAP2C6Nw" name="ProcedureNoteChiefComplaintSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWyIYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pWzWhWknEeGCCOsAP2C6Nw" name="ProcedureNoteChiefComplaintAndReasonForVisitSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWzWhmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pW1LsGknEeGCCOsAP2C6Nw" name="ProcedureNoteFamilyHistorySection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW1LsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pW2Z1WknEeGCCOsAP2C6Nw" name="ProcedureNoteHistoryOfPastIllnessSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW2Z1mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pW4PAGknEeGCCOsAP2C6Nw" name="ProcedureNoteHistoryOfPresentIllnessSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW4PAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pW5dJWknEeGCCOsAP2C6Nw" name="ProcedureNoteMedicalHistorySection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW6EMGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pW7SU2knEeGCCOsAP2C6Nw" name="ProcedureNoteMedicationsSectionEntriesOptional" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW7SVGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pW9HgGknEeGCCOsAP2C6Nw" name="ProcedureNoteMedicationsAdministeredSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW9HgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pW-VpWknEeGCCOsAP2C6Nw" name="ProcedureNotePhysicalExamSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW-VpmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXAK0GknEeGCCOsAP2C6Nw" name="ProcedureNotePlannedProcedureSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXAK0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlannedProcedureSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXCAAGknEeGCCOsAP2C6Nw" name="ProcedureNoteProcedureDispositionSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXCAAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDispositionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXDOJWknEeGCCOsAP2C6Nw" name="ProcedureNoteProcedureEstimatedBloodLossSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXDOJmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureEstimatedBloodLossSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXFDUGknEeGCCOsAP2C6Nw" name="ProcedureNoteProcedureFindingsSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXFDUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureFindingsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXHfkGknEeGCCOsAP2C6Nw" name="ProcedureNoteProcedureImplantsSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXHfkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureImplantsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXJUwGknEeGCCOsAP2C6Nw" name="ProcedureNoteProcedureSpecimensTakenSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXJUwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureSpecimensTakenSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXKi5WknEeGCCOsAP2C6Nw" name="ProcedureNoteProceduresSectionEntriesOptional" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXLJ8GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXMYE2knEeGCCOsAP2C6Nw" name="ProcedureNoteReasonForVisitSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXMYFGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXONRWknEeGCCOsAP2C6Nw" name="ProcedureNoteReviewOfSystemsSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXONRmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXQCcGknEeGCCOsAP2C6Nw" name="ProcedureNoteSocialHistorySection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXQCcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pe7XwGknEeGCCOsAP2C6Nw" name="ProcedureNoteIndividualTypeId" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pe7XwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) then self.participant->select(typeCode=vocab::ParticipationType::IND)->forAll((typeId.oclIsUndefined() or typeId.isNullFlavorUndefined()) implies (not typeId.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pe-bEGknEeGCCOsAP2C6Nw" name="ProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacilityId" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pe-bEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.location->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.location.healthCareFacility->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.location.healthCareFacility->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pe_CIGknEeGCCOsAP2C6Nw" name="ProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacility" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pe_pMGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.location->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.location->forAll(healthCareFacility->one(healthCareFacility : cda::HealthCareFacility | not healthCareFacility.oclIsUndefined() and healthCareFacility.oclIsKindOf(cda::HealthCareFacility))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfA3UGknEeGCCOsAP2C6Nw" name="ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipantTypeCode" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfA3UWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.encounterParticipant->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.encounterParticipant->select(typeCode = vocab::x_EncounterParticipant::REF)->forAll(typeCode=vocab::x_EncounterParticipant::REF) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfBeYGknEeGCCOsAP2C6Nw" name="ProcedureNoteComponentOfEncompassingEncounter5Code" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfBeYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfCFcGknEeGCCOsAP2C6Nw" name="ProcedureNoteComponentOfEncompassingEncounter5Location" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfCsgGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll(location->exists(location : cda::Location | not location.oclIsUndefined() and location.oclIsKindOf(cda::Location))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfDTkGknEeGCCOsAP2C6Nw" name="ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipant" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfDTkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll(encounterParticipant->one(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(cda::EncounterParticipant))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfD6oGknEeGCCOsAP2C6Nw" name="ProcedureNoteComponentOfEncompassingEncounter5" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfD6oWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) then self.componentOf->forAll(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfGW4GknEeGCCOsAP2C6Nw" name="ProcedureNoteProviderAssociatedEntityAssociatedPerson" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfGW4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.participant->exists(not oclIsUndefined()) and self.participant.associatedEntity->exists(not oclIsUndefined()) then self.participant->select(typeCode&lt;>vocab::ParticipationType::PRCP and typeCode&lt;>vocab::ParticipationType::IND).associatedEntity->forAll(associatedPerson->one(associatedPerson : cda::Person | not associatedPerson.oclIsUndefined() and associatedPerson.oclIsKindOf(rim::Entity))) else true endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Luag8D7YEeGvOdejHZ7dYg" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_pWlUEGknEeGCCOsAP2C6Nw" name="getAssessmentSection" isQuery="true" bodyCondition="_pWl7IGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWl7IGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWlUEGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWl7IWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->first().oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWlUEWknEeGCCOsAP2C6Nw" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWlUEmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWnJQGknEeGCCOsAP2C6Nw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_pWnJQ2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWnJQ2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWnJQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWnJRGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWnJQWknEeGCCOsAP2C6Nw" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWnJQmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWoXYGknEeGCCOsAP2C6Nw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_pWo-cmknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWo-cmknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWoXYGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWo-c2knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))->asSequence()->first().oclAsType(consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWo-cGknEeGCCOsAP2C6Nw" type="_2Rwq0BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWo-cWknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWqMkGknEeGCCOsAP2C6Nw" name="getComplicationsSection" isQuery="true" bodyCondition="_pWqMk2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWqMk2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWqMkGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWqMlGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ComplicationsSection))->asSequence()->first().oclAsType(consol::ComplicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWqMkWknEeGCCOsAP2C6Nw" type="_R1OXcDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWqMkmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWrasGknEeGCCOsAP2C6Nw" name="getPostprocedureDiagnosisSection" isQuery="true" bodyCondition="_pWsBwGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWsBwGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWrasGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWsBwWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostprocedureDiagnosisSection))->asSequence()->first().oclAsType(consol::PostprocedureDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWrasWknEeGCCOsAP2C6Nw" type="_-jlSMDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWrasmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWtP4GknEeGCCOsAP2C6Nw" name="getProcedureDescriptionSection" isQuery="true" bodyCondition="_pWtP42knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWtP42knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWtP4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWtP5GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDescriptionSection))->asSequence()->first().oclAsType(consol::ProcedureDescriptionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWtP4WknEeGCCOsAP2C6Nw" type="_HNUIIDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWtP4mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWueAGknEeGCCOsAP2C6Nw" name="getProcedureIndicationsSection" isQuery="true" bodyCondition="_pWueA2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWueA2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWueAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWueBGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureIndicationsSection))->asSequence()->first().oclAsType(consol::ProcedureIndicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWueAWknEeGCCOsAP2C6Nw" type="_cjmJMDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWueAmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWwTMGknEeGCCOsAP2C6Nw" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_pWwTM2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWwTM2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWwTMGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWwTNGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWwTMWknEeGCCOsAP2C6Nw" type="_bGzYgBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWwTMmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWxhUGknEeGCCOsAP2C6Nw" name="getAnesthesiaSection" isQuery="true" bodyCondition="_pWxhU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWxhU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWxhUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWxhVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AnesthesiaSection))->asSequence()->first().oclAsType(consol::AnesthesiaSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWxhUWknEeGCCOsAP2C6Nw" type="_OA_Q0DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWxhUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pWzWgGknEeGCCOsAP2C6Nw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_pWzWg2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pWzWg2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pWzWgGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pWzWhGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->first().oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pWzWgWknEeGCCOsAP2C6Nw" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pWzWgmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pW0koGknEeGCCOsAP2C6Nw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_pW0ko2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pW0ko2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pW0koGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW0kpGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->first().oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pW0koWknEeGCCOsAP2C6Nw" type="_oI7CQCsaEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pW0komknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pW2Z0GknEeGCCOsAP2C6Nw" name="getFamilyHistorySection" isQuery="true" bodyCondition="_pW2Z02knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pW2Z02knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pW2Z0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW2Z1GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->first().oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pW2Z0WknEeGCCOsAP2C6Nw" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pW2Z0mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pW3n8GknEeGCCOsAP2C6Nw" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_pW3n82knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pW3n82knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pW3n8GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW3n9GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pW3n8WknEeGCCOsAP2C6Nw" type="_2PQJcxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pW3n8mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pW5dIGknEeGCCOsAP2C6Nw" name="getHistoryOfPresentIllnessSection" isQuery="true" bodyCondition="_pW5dI2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pW5dI2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pW5dIGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW5dJGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->first().oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pW5dIWknEeGCCOsAP2C6Nw" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pW5dImknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pW6rQGknEeGCCOsAP2C6Nw" name="getMedicalHistorySection" isQuery="true" bodyCondition="_pW7SUWknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pW7SUWknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pW6rQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW7SUmknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalHistorySection))->asSequence()->first().oclAsType(consol::MedicalHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pW6rQWknEeGCCOsAP2C6Nw" type="_mEIgwDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pW7SUGknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pW8gcGknEeGCCOsAP2C6Nw" name="getMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_pW8gc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pW8gc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pW8gcGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW8gdGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::MedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pW8gcWknEeGCCOsAP2C6Nw" type="_iAoXEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pW8gcmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pW-VoGknEeGCCOsAP2C6Nw" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_pW-Vo2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pW-Vo2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pW-VoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW-VpGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection))->asSequence()->first().oclAsType(consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pW-VoWknEeGCCOsAP2C6Nw" type="_2Poj_BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pW-VomknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pW_jwGknEeGCCOsAP2C6Nw" name="getPhysicalExamSection" isQuery="true" bodyCondition="_pW_jw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pW_jw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pW_jwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pW_jxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))->asSequence()->first().oclAsType(consol::PhysicalExamSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pW_jwWknEeGCCOsAP2C6Nw" type="_2Pxt0hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pW_jwmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXBY8GknEeGCCOsAP2C6Nw" name="getPlannedProcedureSection" isQuery="true" bodyCondition="_pXBY82knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXBY82knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXBY8GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXBY9GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlannedProcedureSection))->asSequence()->first().oclAsType(consol::PlannedProcedureSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXBY8WknEeGCCOsAP2C6Nw" type="_3b6E4DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXBY8mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXDOIGknEeGCCOsAP2C6Nw" name="getProcedureDispositionSection" isQuery="true" bodyCondition="_pXDOI2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXDOI2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXDOIGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXDOJGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDispositionSection))->asSequence()->first().oclAsType(consol::ProcedureDispositionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXDOIWknEeGCCOsAP2C6Nw" type="_QhXGYDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXDOImknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXEcQGknEeGCCOsAP2C6Nw" name="getProcedureEstimatedBloodLossSection" isQuery="true" bodyCondition="_pXEcQ2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXEcQ2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXEcQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXEcRGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureEstimatedBloodLossSection))->asSequence()->first().oclAsType(consol::ProcedureEstimatedBloodLossSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXEcQWknEeGCCOsAP2C6Nw" type="_TvcL8DVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXEcQmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXGRcGknEeGCCOsAP2C6Nw" name="getProcedureFindingsSection" isQuery="true" bodyCondition="_pXGRc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXGRc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXGRcGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXGRdGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureFindingsSection))->asSequence()->first().oclAsType(consol::ProcedureFindingsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXGRcWknEeGCCOsAP2C6Nw" type="_W4UBYDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXGRcmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXItsGknEeGCCOsAP2C6Nw" name="getProcedureImplantsSection" isQuery="true" bodyCondition="_pXIts2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXIts2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXItsGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXIttGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureImplantsSection))->asSequence()->first().oclAsType(consol::ProcedureImplantsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXItsWknEeGCCOsAP2C6Nw" type="_Z662wDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXItsmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXKi4GknEeGCCOsAP2C6Nw" name="getProcedureSpecimensTakenSection" isQuery="true" bodyCondition="_pXKi42knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXKi42knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXKi4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXKi5GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureSpecimensTakenSection))->asSequence()->first().oclAsType(consol::ProcedureSpecimensTakenSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXKi4WknEeGCCOsAP2C6Nw" type="_gSUdsDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXKi4mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXLxAGknEeGCCOsAP2C6Nw" name="getProceduresSectionEntriesOptional" isQuery="true" bodyCondition="_pXMYEWknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXMYEWknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXLxAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXMYEmknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXLxAWknEeGCCOsAP2C6Nw" type="_s9Ig4BVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXMYEGknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXONQGknEeGCCOsAP2C6Nw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_pXONQ2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXONQ2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXONQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXONRGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->first().oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXONQWknEeGCCOsAP2C6Nw" type="_Nm64UCscEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXONQmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXPbYGknEeGCCOsAP2C6Nw" name="getReviewOfSystemsSection" isQuery="true" bodyCondition="_pXPbY2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXPbY2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXPbYGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXPbZGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->first().oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXPbYWknEeGCCOsAP2C6Nw" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXPbYmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXRQkGknEeGCCOsAP2C6Nw" name="getSocialHistorySection" isQuery="true" bodyCondition="_pXRQk2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXRQk2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXRQkGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXRQlGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->first().oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXRQkWknEeGCCOsAP2C6Nw" type="_2JKvgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXRQkmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UBzvED_LEeGXieeKs7NJjA" name="ProgressNote">
      <ownedComment xmi:id="_m480MD_LEeGXieeKs7NJjA">
        <body>A Progress Note documents a patient's clinical status during a hospitalization or outpatient visit; thus, it is associated with an encounter.&#xD;
Taber's  medical dictionary defines a Progress Note as &quot;An ongoing record of a patient's illness and treatment. Physicians, nurses, consultants, and therapists record their notes concerning the progress or lack of progress made by the patient between the time of the previous note and the most recent note.&quot; &#xD;
Mosby's  medical dictionary defines a Progress Note as &quot;Notes made by a nurse, physician, social worker, physical therapist, and other health care professionals that describe the patient's condition and the treatment given or planned.&quot;&#xD;
A Progress Note is not a re-evaluation note. A Progress Note is not intended to be a Progress Report for Medicare. Medicare B Section 1833(e) defines the requirements of a Medicare Progress Report.</body>
      </ownedComment>
      <ownedRule xmi:id="_iu5zoD_hEeGysvimLgYv4A" name="ProgressNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iu5zoT_hEeGysvimLgYv4A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lKUtMD_hEeGysvimLgYv4A" name="ProgressNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lKUtMT_hEeGysvimLgYv4A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXR3oGknEeGCCOsAP2C6Nw" name="ProgressNoteTemplateId" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXR3oWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXViAGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCode" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXViAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXeE4GknEeGCCOsAP2C6Nw" name="ProgressNoteDocumentationOf" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXeE4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXer8GknEeGCCOsAP2C6Nw" name="ProgressNoteComponentOf" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXer8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXhIMGknEeGCCOsAP2C6Nw" name="ProgressNoteAssessmentSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXhIMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXiWVWknEeGCCOsAP2C6Nw" name="ProgressNotePlanOfCareSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXiWVmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXkLgGknEeGCCOsAP2C6Nw" name="ProgressNoteAssessmentAndPlanSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXkLgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXlZoGknEeGCCOsAP2C6Nw" name="ProgressNoteAllergiesSectionEntriesOptional" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXlZoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXmnxWknEeGCCOsAP2C6Nw" name="ProgressNoteChiefComplaintSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXmnxmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXoc8GknEeGCCOsAP2C6Nw" name="ProgressNoteInterventionsSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXoc8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXprEmknEeGCCOsAP2C6Nw" name="ProgressNoteMedicationsSectionEntriesOptional" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXprE2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXrgQGknEeGCCOsAP2C6Nw" name="ProgressNoteObjectiveSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXrgQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ObjectiveSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXsuYGknEeGCCOsAP2C6Nw" name="ProgressNotePhysicalExamSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXsuYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXujkGknEeGCCOsAP2C6Nw" name="ProgressNoteProblemSectionEntriesOptional" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXujkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXvxsWknEeGCCOsAP2C6Nw" name="ProgressNoteResultsSectionEntriesOptional" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXvxsmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXxm4GknEeGCCOsAP2C6Nw" name="ProgressNoteReviewOfSystemsSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXxm4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pXy1AWknEeGCCOsAP2C6Nw" name="ProgressNoteSubjectiveSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXy1AmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SubjectiveSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pX0qMGknEeGCCOsAP2C6Nw" name="ProgressNoteVitalSignsSectionEntriesOptional" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pX0qMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfIzIGknEeGCCOsAP2C6Nw" name="ProgressNoteDocumentationOfServiceEvent2ClassCode" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfIzIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll(isDefined('classCode') and classCode=vocab::ActClassRoot::PCPR) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfJaMGknEeGCCOsAP2C6Nw" name="ProgressNoteDocumentationOfServiceEvent2EffectiveTime" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfJaMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) and self.documentationOf.serviceEvent->exists(not oclIsUndefined()) then self.documentationOf.serviceEvent->forAll((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfKBQGknEeGCCOsAP2C6Nw" name="ProgressNoteDocumentationOfServiceEvent2" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfKBQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.documentationOf->exists(not oclIsUndefined()) then self.documentationOf->forAll(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent))) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfMdgGknEeGCCOsAP2C6Nw" name="ProgressNoteComponentOfEncompassingEncounter6LocationHealthCareFacility1Id" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfNEkGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.location->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter.location.healthCareFacility->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter.location.healthCareFacility->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1)) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfNroGknEeGCCOsAP2C6Nw" name="ProgressNoteComponentOfEncompassingEncounter6EffectiveTime" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfNroWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfNromknEeGCCOsAP2C6Nw" name="ProgressNoteComponentOfEncompassingEncounter6Id" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfNro2knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty())) else true endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfOSsGknEeGCCOsAP2C6Nw" name="ProgressNoteComponentOfEncompassingEncounter6Location" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfO5wGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>if self.componentOf->exists(not oclIsUndefined()) and self.componentOf.encompassingEncounter->exists(not oclIsUndefined()) then self.componentOf.encompassingEncounter->forAll(location->one(location : cda::Location | not location.oclIsUndefined() and location.oclIsKindOf(cda::Location))) else true endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UCQbAD_LEeGXieeKs7NJjA" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_pXiWUGknEeGCCOsAP2C6Nw" name="getAssessmentSection" isQuery="true" bodyCondition="_pXiWU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXiWU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXiWUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXiWVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->first().oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXiWUWknEeGCCOsAP2C6Nw" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXiWUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXjkcGknEeGCCOsAP2C6Nw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_pXjkc2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXjkc2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXjkcGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXjkdGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->first().oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXjkcWknEeGCCOsAP2C6Nw" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXjkcmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXkykGknEeGCCOsAP2C6Nw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_pXkyk2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXkyk2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXkykGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXkylGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))->asSequence()->first().oclAsType(consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXkykWknEeGCCOsAP2C6Nw" type="_2Rwq0BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXkykmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXmnwGknEeGCCOsAP2C6Nw" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_pXmnw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXmnw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXmnwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXmnxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->first().oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXmnwWknEeGCCOsAP2C6Nw" type="_bGzYgBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXmnwmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXn14GknEeGCCOsAP2C6Nw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_pXn142knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXn142knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXn14GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXn15GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->first().oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXn14WknEeGCCOsAP2C6Nw" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXn14mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXpEAGknEeGCCOsAP2C6Nw" name="getInterventionsSection" isQuery="true" bodyCondition="_pXprEGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXprEGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXpEAGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXprEWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection))->asSequence()->first().oclAsType(consol::InterventionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXpEAWknEeGCCOsAP2C6Nw" type="_hqzJADVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXpEAmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXq5MGknEeGCCOsAP2C6Nw" name="getMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_pXq5M2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXq5M2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXq5MGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXq5NGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::MedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXq5MWknEeGCCOsAP2C6Nw" type="_iAoXEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXq5MmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXsHUGknEeGCCOsAP2C6Nw" name="getObjectiveSection" isQuery="true" bodyCondition="_pXsHU2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXsHU2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXsHUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXsHVGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ObjectiveSection))->asSequence()->first().oclAsType(consol::ObjectiveSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXsHUWknEeGCCOsAP2C6Nw" type="_rNJpADVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXsHUmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXt8gGknEeGCCOsAP2C6Nw" name="getPhysicalExamSection" isQuery="true" bodyCondition="_pXt8g2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXt8g2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXt8gGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXt8hGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))->asSequence()->first().oclAsType(consol::PhysicalExamSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXt8gWknEeGCCOsAP2C6Nw" type="_2Pxt0hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXt8gmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXvKoGknEeGCCOsAP2C6Nw" name="getProblemSectionEntriesOptional" isQuery="true" bodyCondition="_pXvKo2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXvKo2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXvKoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXvxsGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXvKoWknEeGCCOsAP2C6Nw" type="_naxrkBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXvKomknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXw_0GknEeGCCOsAP2C6Nw" name="getResultsSectionEntriesOptional" isQuery="true" bodyCondition="_pXw_02knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXw_02knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXw_0GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXw_1GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::ResultsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXw_0WknEeGCCOsAP2C6Nw" type="_xGqiEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXw_0mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pXyN8GknEeGCCOsAP2C6Nw" name="getReviewOfSystemsSection" isQuery="true" bodyCondition="_pXyN82knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pXyN82knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pXyN8GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXy1AGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->first().oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pXyN8WknEeGCCOsAP2C6Nw" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pXyN8mknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pX0DIGknEeGCCOsAP2C6Nw" name="getSubjectiveSection" isQuery="true" bodyCondition="_pX0DI2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pX0DI2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pX0DIGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pX0DJGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SubjectiveSection))->asSequence()->first().oclAsType(consol::SubjectiveSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pX0DIWknEeGCCOsAP2C6Nw" type="_iy8nYDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pX0DImknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pX1RQGknEeGCCOsAP2C6Nw" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_pX14UGknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pX14UGknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pX1RQGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pX14UWknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->first().oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pX1RQWknEeGCCOsAP2C6Nw" type="_bRH8sBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pX1RQmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0fjXAEEvEeGdmoWy_aLP0Q" name="PostprocedureDiagnosis">
      <ownedComment xmi:id="_rQo48FmwEeGRqYkwoeymcA">
        <body>The Postprocedure Diagnosis entry encodes the diagnosis or diagnoses discovered or confirmed during the procedure. Often it is the same as the pre-procedure diagnosis or indication.</body>
      </ownedComment>
      <ownedRule xmi:id="_pX90IGknEeGCCOsAP2C6Nw" name="PostprocedureDiagnosisTemplateId" constrainedElement="_0fjXAEEvEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pX90IWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.51')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pX_CQGknEeGCCOsAP2C6Nw" name="PostprocedureDiagnosisClassCode" constrainedElement="_0fjXAEEvEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pX_pUGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYA3cGknEeGCCOsAP2C6Nw" name="PostprocedureDiagnosisCode" constrainedElement="_0fjXAEEvEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYA3cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '59769-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYCsoGknEeGCCOsAP2C6Nw" name="PostprocedureDiagnosisMoodCode" constrainedElement="_0fjXAEEvEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYCsoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYD6wGknEeGCCOsAP2C6Nw" name="PostprocedureDiagnosisProblemObservation" constrainedElement="_0fjXAEEvEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYD6wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0fjXAUEvEeGdmoWy_aLP0Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pYFI4GknEeGCCOsAP2C6Nw" name="getProblemObservations" isQuery="true" bodyCondition="_pYFI42knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pYFI42knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pYFI4GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYFI5GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pYFI4WknEeGCCOsAP2C6Nw" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pYFI4mknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0baBYEEwEeGdmoWy_aLP0Q" name="PreoperativeDiagnosis">
      <ownedRule xmi:id="_pYG-EGknEeGCCOsAP2C6Nw" name="PreoperativeDiagnosisTemplateId" constrainedElement="_0baBYEEwEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYG-EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.65')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYIMMGknEeGCCOsAP2C6Nw" name="PreoperativeDiagnosisClassCode" constrainedElement="_0baBYEEwEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYIMMWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYKBYGknEeGCCOsAP2C6Nw" name="PreoperativeDiagnosisCode" constrainedElement="_0baBYEEwEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYKBYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '10219-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYL2kGknEeGCCOsAP2C6Nw" name="PreoperativeDiagnosisMoodCode" constrainedElement="_0baBYEEwEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYL2kWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYNEsGknEeGCCOsAP2C6Nw" name="PreoperativeDiagnosisProblemObservation" constrainedElement="_0baBYEEwEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYNEsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0baBYUEwEeGdmoWy_aLP0Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pYNrwGknEeGCCOsAP2C6Nw" name="getProblemObservation" isQuery="true" bodyCondition="_pYNrw2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pYNrw2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pYNrwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYNrxGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->first().oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pYNrwWknEeGCCOsAP2C6Nw" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pYNrwmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4qKukEE1EeGdmoWy_aLP0Q" name="InstructionsSection">
      <ownedComment xmi:id="_9It9gEE1EeGdmoWy_aLP0Q">
        <body>The Instructions section records instructions given to a patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_pYQvFWknEeGCCOsAP2C6Nw" name="InstructionsSectionTemplateId" constrainedElement="_4qKukEE1EeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYQvFmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYTLUGknEeGCCOsAP2C6Nw" name="InstructionsSectionCode" constrainedElement="_4qKukEE1EeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYTLUWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '69730-0' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYUZcGknEeGCCOsAP2C6Nw" name="InstructionsSectionText" constrainedElement="_4qKukEE1EeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYUZcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYVnkGknEeGCCOsAP2C6Nw" name="InstructionsSectionTitle" constrainedElement="_4qKukEE1EeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYVnkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYW1sGknEeGCCOsAP2C6Nw" name="InstructionsSectionInstructions" constrainedElement="_4qKukEE1EeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYW1sWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4qKukUE1EeGdmoWy_aLP0Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pYXcwGknEeGCCOsAP2C6Nw" name="getInstructionss" isQuery="true" bodyCondition="_pYYD0GknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pYYD0GknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pYXcwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYYD0WknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions)).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pYXcwWknEeGCCOsAP2C6Nw" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pYXcwmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_LNP08EFGEeGorO80f-Cppg" name="AdmissionMedication">
      <ownedRule xmi:id="_pYYD0mknEeGCCOsAP2C6Nw" name="AdmissionMedicationTemplateId" constrainedElement="_LNP08EFGEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYYD02knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.36')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYZR8GknEeGCCOsAP2C6Nw" name="AdmissionMedicationClassCode" constrainedElement="_LNP08EFGEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYZ5AGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYbHIGknEeGCCOsAP2C6Nw" name="AdmissionMedicationCode" constrainedElement="_LNP08EFGEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYbHIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '42346-7' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYc8UGknEeGCCOsAP2C6Nw" name="AdmissionMedicationMoodCode" constrainedElement="_LNP08EFGEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYc8UWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYeKcGknEeGCCOsAP2C6Nw" name="AdmissionMedicationMedicationActivity" constrainedElement="_LNP08EFGEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYeKcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_LNsg4EFGEeGorO80f-Cppg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pYexgGknEeGCCOsAP2C6Nw" name="getMedicationActivity" isQuery="true" bodyCondition="_pYexg2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pYexg2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pYexgGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYfYkGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity))->asSequence()->first().oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pYexgWknEeGCCOsAP2C6Nw" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pYexgmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5K6mAEFHEeGorO80f-Cppg" name="HospitalAdmissionDiagnosis">
      <ownedComment xmi:id="_90pKMEFHEeGorO80f-Cppg">
        <body>The Hospital Admission Diagnosis entry describes the relevant problems or diagnoses at the time of admission.</body>
      </ownedComment>
      <ownedRule xmi:id="_pYgmtWknEeGCCOsAP2C6Nw" name="HospitalAdmissionDiagnosisTemplateId" constrainedElement="_5K6mAEFHEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYgmtmknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.34')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYib4GknEeGCCOsAP2C6Nw" name="HospitalAdmissionDiagnosisClassCode" constrainedElement="_5K6mAEFHEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYib4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYkREGknEeGCCOsAP2C6Nw" name="HospitalAdmissionDiagnosisCode" constrainedElement="_5K6mAEFHEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYkREWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '46241-6' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYmGQGknEeGCCOsAP2C6Nw" name="HospitalAdmissionDiagnosisMoodCode" constrainedElement="_5K6mAEFHEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYmGQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pYnUYGknEeGCCOsAP2C6Nw" name="HospitalAdmissionDiagnosisProblemObservation" constrainedElement="_5K6mAEFHEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYnUYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5K6mAUFHEeGorO80f-Cppg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pYn7cGknEeGCCOsAP2C6Nw" name="getProblemObservations" isQuery="true" bodyCondition="_pYn7c2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pYn7c2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pYn7cGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYn7dGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pYn7cWknEeGCCOsAP2C6Nw" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pYn7cmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_M7xhgEIxEeG4bZAl2IGXmQ" name="MedicationDispenseAssignedEntity">
      <ownedRule xmi:id="_pZGckGknEeGCCOsAP2C6Nw" name="MedicationDispenseAssignedEntityAddr" constrainedElement="_M7xhgEIxEeG4bZAl2IGXmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZGckWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.addr->isEmpty() or self.addr->exists(element | element.isNullFlavorUndefined())) implies (not self.addr->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_M7xhgUIxEeG4bZAl2IGXmQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_6qmVsEcDEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_wJHu0EX8EeG6e5lG0YsSyQ" name="ImmunizationMedicationInformationManufacturedMaterial">
      <ownedRule xmi:id="_STZm0EX9EeG6e5lG0YsSyQ" name="ImmunizationMedicationInformationManufacturedMaterialCodeOriginalText" constrainedElement="_wJHu0EX8EeG6e5lG0YsSyQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_U3WxUEX9EeG6e5lG0YsSyQ">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined() implies self.code.originalText->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ww5s4EX9EeG6e5lG0YsSyQ" name="ImmunizationMedicationInformationManufacturedMaterialOriginalTextReference" constrainedElement="_STZm0EX9EeG6e5lG0YsSyQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aI904EX9EeG6e5lG0YsSyQ">
          <language>OCL</language>
          <body>self.code.originalText->size() = 1 implies not self.code.originalText.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g1un0EX9EeG6e5lG0YsSyQ" name="ImmunizationMedicationInformationManufacturedMaterialCodeTranslation">
        <ownedComment xmi:id="_lGxmQEX9EeG6e5lG0YsSyQ">
          <body>Translations can be used to represent generic product name, packaged product code, etc</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iHw3cEX9EeG6e5lG0YsSyQ">
          <language>OCL</language>
          <body>self.code->size() = 1 implies self.code.translation->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZNKQGknEeGCCOsAP2C6Nw" name="ImmunizationMedicationInformationManufacturedMaterialLotNumberText" constrainedElement="_wJHu0EX8EeG6e5lG0YsSyQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZNKQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.lotNumberText.oclIsUndefined() or self.lotNumberText.isNullFlavorUndefined()) implies (not self.lotNumberText.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_wJIV4EX8EeG6e5lG0YsSyQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_rFzJEEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_XwBooEUuEeGdQ4KWAmnbhw" name="DiagnosticImagingReport">
      <ownedComment xmi:id="_kSJscEUuEeGdQ4KWAmnbhw">
        <body>A Diagnostic Imaging Report (DIR) is a document that contains a consulting specialist's interpretation of image data.  It conveys the interpretation to the referring (ordering) physician and becomes part of the patient's medical record.  It is for use in Radiology, Endoscopy, Cardiology, and other imaging specialties.</body>
      </ownedComment>
      <ownedRule xmi:id="_pZQNkGknEeGCCOsAP2C6Nw" name="DiagnosticImagingReportTemplateId" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZQNkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZVGEGknEeGCCOsAP2C6Nw" name="GeneralHeaderConstraintsCode" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZVGEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZW7QGknEeGCCOsAP2C6Nw" name="DiagnosticImagingReportId" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZW7QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZgsQGknEeGCCOsAP2C6Nw" name="DiagnosticImagingReportInformant" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZgsQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.informant->exists(informant : cda::Informant12 | not informant.oclIsUndefined() and informant.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZh6YGknEeGCCOsAP2C6Nw" name="DiagnosticImagingReportInformationRecipient" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZh6YWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.informationRecipient->exists(informationRecipient : cda::InformationRecipient | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZjIgGknEeGCCOsAP2C6Nw" name="DiagnosticImagingReportParticipant1" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZjIgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZlkwWknEeGCCOsAP2C6Nw" name="DiagnosticImagingReportInFulfillmentOf" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZmL0GknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.inFulfillmentOf->one(inFulfillmentOf : cda::InFulfillmentOf | not inFulfillmentOf.oclIsUndefined() and inFulfillmentOf.oclIsKindOf(cda::InFulfillmentOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZmy4GknEeGCCOsAP2C6Nw" name="DiagnosticImagingReportDocumentationOf" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZmy4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZv80GknEeGCCOsAP2C6Nw" name="DiagnosticImagingReportRelatedDocument" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZv80WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.relatedDocument->one(relatedDocument : cda::RelatedDocument | not relatedDocument.oclIsUndefined() and relatedDocument.oclIsKindOf(cda::RelatedDocument))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZ4fsGknEeGCCOsAP2C6Nw" name="DiagnosticImagingReportComponentOf" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZ4fsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pa4lQGknEeGCCOsAP2C6Nw" name="DiagnosticImagingReportFindingsSection" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa4lQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FindingsSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XwdtgEUuEeGdQ4KWAmnbhw" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_pa5MUGknEeGCCOsAP2C6Nw" name="getFindingsSection" isQuery="true" bodyCondition="_pa5zYmknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pa5zYmknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pa5MUGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa5zY2knEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FindingsSection))->asSequence()->first().oclAsType(consol::FindingsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pa5zYGknEeGCCOsAP2C6Nw" type="_ZcC-4DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pa5zYWknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_H1UdcEVEEeGAh_iQGJvI5w" name="PhysicianReadingStudyPerformer">
      <ownedRule xmi:id="_pZpPIWknEeGCCOsAP2C6Nw" name="PhysicianReadingStudyPerformerTemplateId" constrainedElement="_H1UdcEVEEeGAh_iQGJvI5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZpPImknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZqdQGknEeGCCOsAP2C6Nw" name="PhysicianReadingStudyPerformerTime" constrainedElement="_H1UdcEVEEeGAh_iQGJvI5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZqdQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.time.oclIsUndefined() or self.time.isNullFlavorUndefined()) implies (not self.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZrrYGknEeGCCOsAP2C6Nw" name="PhysicianReadingStudyPerformerTypeCode" constrainedElement="_H1UdcEVEEeGAh_iQGJvI5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZrrYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('typeCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pa2JAGknEeGCCOsAP2C6Nw" name="PhysicianReadingStudyPerformerAssignedEntity" constrainedElement="_H1UdcEVEEeGAh_iQGJvI5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa2JAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_H1UdcUVEEeGAh_iQGJvI5w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_FvF74EcaEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_H_izsEb1EeGp67IkyTw1fg" name="PhysicianofRecordParticipant">
      <ownedComment xmi:id="_TthdwEb1EeGp67IkyTw1fg">
        <body>This encounterParticipant is the attending physician and is usually different from the Physician Reading Study Performer defined in documentationOf/serviceEvent.</body>
      </ownedComment>
      <ownedRule xmi:id="_pZxK8GknEeGCCOsAP2C6Nw" name="PhysicianofRecordParticipantTemplateId" constrainedElement="_H_izsEb1EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZxyAGknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZzAIGknEeGCCOsAP2C6Nw" name="PhysicianofRecordParticipantTypeCode" constrainedElement="_H_izsEb1EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZzAIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.typeCode=vocab::x_EncounterParticipant::ATND</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pa3XIGknEeGCCOsAP2C6Nw" name="PhysicianofRecordParticipantAssignedEntity" constrainedElement="_H_izsEb1EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa3XIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_H_izsUb1EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_5t1WAEcEEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vjf-wEb4EeGp67IkyTw1fg" name="StudyAct">
      <ownedComment xmi:id="_MDWe4FwTEeG0y_7i0ygc4g">
        <body>A Study Act contains the DICOM study information that defines the characteristics of a referenced medical study performed on a patient. A study is a collection of one or more series of medical images, presentation states, SR documents, overlays, and/or curves that are logically related for the purpose of diagnosing a patient. Each study is associated with exactly one patient. A study may include composite instances that are created by a single modality, multiple modalities, or by multiple devices of the same modality. The study information is modality-independent. Study Act clinical statements are only instantiated in the DICOM Object Catalog section; in other sections, the SOP Instance Observation is included directly.</body>
      </ownedComment>
      <ownedRule xmi:id="_pZ7jAGknEeGCCOsAP2C6Nw" name="StudyActTemplateId" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZ7jAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZ9_QGknEeGCCOsAP2C6Nw" name="StudyActClassCode" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZ9_QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pZ_NYGknEeGCCOsAP2C6Nw" name="StudyActMoodCode" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pZ_NYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paAbgGknEeGCCOsAP2C6Nw" name="StudyActId" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paAbgWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paCQsGknEeGCCOsAP2C6Nw" name="StudyActCode" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paCQsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '113014' and value.codeSystem = '1.2.840.10008.2.16.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paDe0GknEeGCCOsAP2C6Nw" name="StudyActEffectiveTime" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paDe0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paEs8GknEeGCCOsAP2C6Nw" name="StudyActText" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paEs8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pa7okGknEeGCCOsAP2C6Nw" name="StudyActSeriesAct" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa7okWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::SeriesAct) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vjpIsEb4EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pa8PoGknEeGCCOsAP2C6Nw" name="getSeriesAct" isQuery="true" bodyCondition="_pa8Po2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pa8Po2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pa8PoGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa8PpGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::SeriesAct))->asSequence()->first().oclAsType(consol::SeriesAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pa8PoWknEeGCCOsAP2C6Nw" type="_N2wscEb6EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pa8PomknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_N2wscEb6EeGp67IkyTw1fg" name="SeriesAct">
      <ownedComment xmi:id="_ltp54FwTEeG0y_7i0ygc4g">
        <body>A Series Act contains the DICOM series information for referenced DICOM composite objects. The series information defines the attributes that are used to group composite instances into distinct logical sets. Each series is associated with exactly one study. Series Act clinical statements are only instantiated in the DICOM Object Catalog section inside a Study Act, and thus do not require a separate templateId; in other sections, the SOP Instance Observation is included directly.</body>
      </ownedComment>
      <ownedRule xmi:id="_paF7EGknEeGCCOsAP2C6Nw" name="SeriesActTemplateId" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paF7EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.63')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paJlcGknEeGCCOsAP2C6Nw" name="SeriesActClassCode" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paJlcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paKzkGknEeGCCOsAP2C6Nw" name="SeriesActMoodCode" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paKzkWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paMowGknEeGCCOsAP2C6Nw" name="SeriesActCode" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paMowWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '113015' and value.codeSystem = '1.2.840.10008.2.16.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paN24GknEeGCCOsAP2C6Nw" name="SeriesActEffectiveTime" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paN24WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paPFAGknEeGCCOsAP2C6Nw" name="SeriesActId" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paPFAWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paQTIGknEeGCCOsAP2C6Nw" name="SeriesActText" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paQTIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pa82sGknEeGCCOsAP2C6Nw" name="SeriesActSOPInstanceObservation" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa82sWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SOPInstanceObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_N2wscUb6EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pa9dwGknEeGCCOsAP2C6Nw" name="getSOPInstanceObservation" isQuery="true" bodyCondition="_pa-E0GknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pa-E0GknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pa9dwGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa-E0WknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SOPInstanceObservation))->asSequence()->first().oclAsType(consol::SOPInstanceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pa9dwWknEeGCCOsAP2C6Nw" type="_9o7WcEb6EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pa9dwmknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9o7WcEb6EeGp67IkyTw1fg" name="SOPInstanceObservation">
      <ownedComment xmi:id="_P8O7IErfEeGJpZWiuxRVIw">
        <body>A SOP Instance Observation contains the DICOM Service Object Pair (SOP) Instance information for referenced DICOM composite objects. The SOP Instance act class is used to reference both image and non-image DICOM instances. The text attribute contains the DICOM WADO reference.</body>
      </ownedComment>
      <ownedRule xmi:id="_paRhQGknEeGCCOsAP2C6Nw" name="SOPInstanceObservationTemplateId" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paRhQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paVLoGknEeGCCOsAP2C6Nw" name="SOPInstanceObservationClassCode" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paVLoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::DGIMG</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paWZwGknEeGCCOsAP2C6Nw" name="SOPInstanceObservationEffectiveTime" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paWZwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paXA0GknEeGCCOsAP2C6Nw" name="SOPInstanceObservationId" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paXA0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paYO8GknEeGCCOsAP2C6Nw" name="SOPInstanceObservationMoodCode" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paYO8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paZdEGknEeGCCOsAP2C6Nw" name="SOPInstanceObservationText" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paZdEWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pabSQGknEeGCCOsAP2C6Nw" name="SOPInstanceObservationCode" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pabSQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pa-E0mknEeGCCOsAP2C6Nw" name="SOPInstanceObservationSOPInstanceObservation" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa-E02knEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SOPInstanceObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pa_S9WknEeGCCOsAP2C6Nw" name="SOPInstanceObservationPurposeofReferenceObservation" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa_S9mknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PurposeofReferenceObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbBIIGknEeGCCOsAP2C6Nw" name="SOPInstanceObservationReferencedFramesObservation" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbBIIWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReferencedFramesObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_9o7WcUb6EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pa_S8GknEeGCCOsAP2C6Nw" name="getSOPInstanceObservations" isQuery="true" bodyCondition="_pa_S82knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pa_S82knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pa_S8GknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa_S9GknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SOPInstanceObservation)).oclAsType(consol::SOPInstanceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pa_S8WknEeGCCOsAP2C6Nw" type="_9o7WcEb6EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pa_S8mknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pbAhEGknEeGCCOsAP2C6Nw" name="getPurposeofReferenceObservations" isQuery="true" bodyCondition="_pbAhE2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pbAhE2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pbAhEGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbAhFGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PurposeofReferenceObservation)).oclAsType(consol::PurposeofReferenceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pbAhEWknEeGCCOsAP2C6Nw" type="_J-F8UEb7EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pbAhEmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pbBvMGknEeGCCOsAP2C6Nw" name="getReferencedFramesObservations" isQuery="true" bodyCondition="_pbBvM2knEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pbBvM2knEeGCCOsAP2C6Nw" name="body" constrainedElement="_pbBvMGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbBvNGknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReferencedFramesObservation)).oclAsType(consol::ReferencedFramesObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pbBvMWknEeGCCOsAP2C6Nw" type="_1Zyf4Eb8EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pbBvMmknEeGCCOsAP2C6Nw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J-F8UEb7EeGp67IkyTw1fg" name="PurposeofReferenceObservation">
      <ownedComment xmi:id="_u8ba4Eb8EeGp67IkyTw1fg">
        <body>A Purpose of Reference Observation describes the purpose of the DICOM composite object reference. Appropriate codes, such as externally defined DICOM codes, may be used to specify the semantics of the purpose of reference. When this observation is absent, it implies that the reason for the reference is unknown.</body>
      </ownedComment>
      <ownedRule xmi:id="_pab5UGknEeGCCOsAP2C6Nw" name="PurposeofReferenceObservationTemplateId" constrainedElement="_J-F8UEb7EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pab5UWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_padugGknEeGCCOsAP2C6Nw" name="PurposeofReferenceObservationClassCode" constrainedElement="_J-F8UEb7EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_padugWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pae8oGknEeGCCOsAP2C6Nw" name="PurposeofReferenceObservationCode" constrainedElement="_J-F8UEb7EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pae8oWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pagKwGknEeGCCOsAP2C6Nw" name="PurposeofReferenceObservationMoodCode" constrainedElement="_J-F8UEb7EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pagKwWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pah_8GknEeGCCOsAP2C6Nw" name="PurposeofReferenceObservationValue" constrainedElement="_J-F8UEb7EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pah_8WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '1.2.840.10008.2.16.4' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_J-F8UUb7EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1Zyf4Eb8EeGp67IkyTw1fg" name="ReferencedFramesObservation">
      <ownedComment xmi:id="_E1-4EEriEeGJpZWiuxRVIw">
        <body>A Referenced Frames Observation is used if the referenced DICOM SOP instance is a multiframe image and the reference does not apply to all frames. The list of integer values for the referenced frames of a DICOM multiframe image SOP instance is contained in a Boundary Observation nested inside this class.</body>
      </ownedComment>
      <ownedRule xmi:id="_paj1IGknEeGCCOsAP2C6Nw" name="ReferencedFramesObservationTemplateId" constrainedElement="_1Zyf4Eb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paj1IWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_palDQGknEeGCCOsAP2C6Nw" name="ReferencedFramesObservationClassCode" constrainedElement="_1Zyf4Eb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_palDQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::ROIBND</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pam4cGknEeGCCOsAP2C6Nw" name="ReferencedFramesObservationCode" constrainedElement="_1Zyf4Eb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pam4cWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '121190' and value.codeSystem = '1.2.840.10008.2.16.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_paotoGknEeGCCOsAP2C6Nw" name="ReferencedFramesObservationMoodCode" constrainedElement="_1Zyf4Eb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_paotoWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pbCWQGknEeGCCOsAP2C6Nw" name="ReferencedFramesObservationBoundaryObservation" constrainedElement="_1Zyf4Eb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbCWQWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::BoundaryObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1Zyf4Ub8EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_pbC9UGknEeGCCOsAP2C6Nw" name="getBoundaryObservation" isQuery="true" bodyCondition="_pbDkYWknEeGCCOsAP2C6Nw">
        <ownedRule xmi:id="_pbDkYWknEeGCCOsAP2C6Nw" name="body" constrainedElement="_pbC9UGknEeGCCOsAP2C6Nw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_pbDkYmknEeGCCOsAP2C6Nw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::BoundaryObservation))->asSequence()->first().oclAsType(consol::BoundaryObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pbC9UWknEeGCCOsAP2C6Nw" type="_9Yv6gEb8EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pbDkYGknEeGCCOsAP2C6Nw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9Yv6gEb8EeGp67IkyTw1fg" name="BoundaryObservation">
      <ownedComment xmi:id="_xkMo4EriEeGJpZWiuxRVIw">
        <body>A Boundary Observation contains a list of integer values for the referenced frames of a DICOM multiframe image SOP instance. It identifies the frame numbers within the referenced SOP instance to which the reference applies. The CDA Boundary Observation numbers frames using the same convention as DICOM, with the first frame in the referenced object being Frame 1. A Boundary Observation must be used if a referenced DICOM SOP instance is a multiframe image and the reference does not apply to all frames.</body>
      </ownedComment>
      <ownedRule xmi:id="_pap7wGknEeGCCOsAP2C6Nw" name="BoundaryObservationTemplateId" constrainedElement="_9Yv6gEb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pap7wWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.11')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_parJ4GknEeGCCOsAP2C6Nw" name="BoundaryObservationClassCode" constrainedElement="_9Yv6gEb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_parJ4WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pas_EGknEeGCCOsAP2C6Nw" name="BoundaryObservationCode" constrainedElement="_9Yv6gEb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pas_EWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '113036' and value.codeSystem = '1.2.840.10008.2.16.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pau0QGknEeGCCOsAP2C6Nw" name="BoundaryObservationMoodCode" constrainedElement="_9Yv6gEb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pau0QWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pawCYGknEeGCCOsAP2C6Nw" name="BoundaryObservationValue" constrainedElement="_9Yv6gEb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pawCYWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_9Yv6gUb8EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9xjKIEb-EeGp67IkyTw1fg" name="TextObservation">
      <ownedRule xmi:id="_pawpcGknEeGCCOsAP2C6Nw" name="TextObservationTemplateId" constrainedElement="_9xjKIEb-EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pawpcWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.12')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_9xjKIUb-EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Px2t4Eb_EeGp67IkyTw1fg" name="QuantityMeasurementObservation">
      <ownedComment xmi:id="_Uk93kEb_EeGp67IkyTw1fg">
        <body>A Quantity Measurement Observation records quantity measurements based on image data such as linear, area, volume, and numeric measurements. The codes in DIRQuantityMeasurementTypeCodes (ValueSet: 2.16.840.1.113883.11.20.9.29) are from the qualifier hierarchy of SNOMED CT and are not valid for observation/code according to the Term Info guidelines. These codes can be used for backwards compatibility, but going forward, codes from the observable entity hierarchy will be requested and used.</body>
      </ownedComment>
      <ownedRule xmi:id="_pax3kGknEeGCCOsAP2C6Nw" name="QuantityMeasurementObservationTemplateId" constrainedElement="_Px2t4Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pax3kWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.14')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Px2t4Ub_EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pmiz8Eb_EeGp67IkyTw1fg" name="CodeObservations">
      <ownedComment xmi:id="_uqo_8Eb_EeGp67IkyTw1fg">
        <body>DICOM Template 2000 specifies that Imaging Report Elements of Value Type Code are contained in sections. The Imaging Report Elements are inferred from Basic Diagnostic Imaging Report Observations that consist of image references and measurements (linear, area, volume, and numeric). Coded DICOM Imaging Report Elements in this context are mapped to CDA-coded observations that are section components and are related to the SOP Instance Observations (templateId 2.16.840.1.113883.10.20.6.2.8) or Quantity Measurement Observations (templateId 2.16.840.1.113883.10.20.6.2.14) by the SPRT (Support) act relationship.</body>
      </ownedComment>
      <ownedRule xmi:id="_pazFsGknEeGCCOsAP2C6Nw" name="CodeObservationsTemplateId" constrainedElement="_pmiz8Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pazFsWknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.13')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pmiz8Ub_EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_crHC0EcAEeGp67IkyTw1fg" name="ProcedureContext">
      <ownedComment xmi:id="_grHUkEcAEeGp67IkyTw1fg">
        <body>The ServiceEvent Procedure Context of the document header may be overridden in the CDA structured body if there is a need to refer to multiple imaging procedures or acts. The selection of the Procedure or Act entry from the clinical statement choice box depends on the nature of the imaging service that has been performed. The Procedure entry shall be used for image-guided interventions and minimal invasive imaging services, whereas the Act entry shall be used for diagnostic imaging services.</body>
      </ownedComment>
      <ownedRule xmi:id="_pa0T0GknEeGCCOsAP2C6Nw" name="ProcedureContextTemplateId" constrainedElement="_crHC0EcAEeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pa0T0WknEeGCCOsAP2C6Nw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.5')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_crHC0UcAEeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <profileApplication xmi:id="_2B97UBSVEeGGzu7fmW9pXw">
      <eAnnotations xmi:id="_2B97URSVEeGGzu7fmW9pXw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_o66EsGknEeGCCOsAP2C6Nw">
      <eAnnotations xmi:id="_o66EsWknEeGCCOsAP2C6Nw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:AssociationValidation xmi:id="_2EY9MhSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-168</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2ElKchSVEeGGzu7fmW9pXw" severity="INFO" typeCode="REFR"/>
  <CDA:EntryRelationship xmi:id="_2ElxghSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ"/>
  <CDA:EntryRelationship xmi:id="_2EwwoRSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-160</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_2E_aIBSVEeGGzu7fmW9pXw" severity="INFO" typeCode="REFR"/>
  <CDA:EntryRelationship xmi:id="_2FGH1RSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-160</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_2FgXgBSVEeGGzu7fmW9pXw" severity="INFO" typeCode="REFR"/>
  <CDA:EntryRelationship xmi:id="_2Fg-kBSVEeGGzu7fmW9pXw" severity="INFO" typeCode="REFR"/>
  <CDA:EntryRelationship xmi:id="_2Fr9shSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ"/>
  <CDA:EntryRelationship xmi:id="_2GsqUhSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-338</ruleId>
    <ruleId>CONF-339</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_2G1NMhSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-350</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2G43kxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-368</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2HU8dRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-351</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2HbqIhSVEeGGzu7fmW9pXw" message="An entry relationship may be present to provide the fulfillment instructions. When present, this entry relationship shall contain a Medication Fulfillment Instructions entry." severity="INFO" typeCode="SUBJ"/>
  <CDA:ConstraintValidation xmi:id="_2IezABSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2Ik5oxSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:AssociationValidation xmi:id="_2Iwf0hSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-207</ruleId>
  </CDA:AssociationValidation>
  <CDA:ConstraintValidation xmi:id="_2I9UIxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-215</ruleId>
  </CDA:ConstraintValidation>
  <CDA:AssociationValidation xmi:id="_2JeRghSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-246</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2Je4lBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-249</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2KIY1RSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2KzuQhSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-93</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2K8RIhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-98</ruleId>
  </CDA:AssociationValidation>
  <CDA:ActRelationship xmi:id="_2K84MBSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2LBwsxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-102</ruleId>
    <ruleId>CONF-103</ruleId>
  </CDA:AssociationValidation>
  <CDA:ActRelationship xmi:id="_2LCXwBSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2LXu8xSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2LfqwxSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:EntryRelationship xmi:id="_2LgR0hSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ"/>
  <CDA:AssociationValidation xmi:id="_2MABERSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-298</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2MIj9xSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-338</ruleId>
    <ruleId>CONF-339</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_2MJLBRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-350</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2MJyFRSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-330</ruleId>
    <ruleId>CONF-333</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_2MKZJRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-313</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2MLANRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-348</ruleId>
    <ruleId>CONF-349</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_2MLnRRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-368</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2MXNcBSVEeGGzu7fmW9pXw" message="This section SHALL include entries from the Insurance Provider module when this information is known.">
    <ruleId>C83-[CT-101-2]</ruleId>
  </CDA:AssociationValidation>
  <CDA:PropertyValidation xmi:id="_2M3jxRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-57</ruleId>
  </CDA:PropertyValidation>
  <CDA:AssociationValidation xmi:id="_2NJ3sRSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-298</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2NP-UxSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2NP-VhSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2NP-WRSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2NP-XBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2OG57RSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2OfUZhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-426</ruleId>
  </CDA:ConstraintValidation>
  <CDA:AssociationValidation xmi:id="_2OrhpxSVEeGGzu7fmW9pXw">
    <ruleId>6.3.4.21.8</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2OrhsBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-399</ruleId>
  </CDA:AssociationValidation>
  <CDA:ConstraintValidation xmi:id="_2O91mxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-406</ruleId>
  </CDA:ConstraintValidation>
  <CDA:EntryRelationship xmi:id="_2SC-yRSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-224</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_sGVWMBUlEeGvPruliC3crg" severity="WARNING"/>
  <CDA:PropertyValidation xmi:id="_vAJFABVeEeGQCvUGzi1kDQ" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_UCT-cBq1EeGo461UQq-B1g" base_Association="_NdMEkRq1EeGo461UQq-B1g"/>
  <CDA:EntryRelationship xmi:id="_hDPtEBrUEeGo461UQq-B1g" severity="INFO" base_Association="_eLHCUhrUEeGo461UQq-B1g" typeCode="REFR"/>
  <CDA:CDATemplate xmi:id="_qzhEUBuEEeGnMahsPjlwOw" templateId="11111"/>
  <CDA:PropertyValidation xmi:id="_r4qugBuEEeGnMahsPjlwOw"/>
  <CDA:AssociationValidation xmi:id="_4Kb30BrkEeGJ_KU17uNyeA">
    <ruleId>CONF-458</ruleId>
  </CDA:AssociationValidation>
  <CDA:CodegenSupport xmi:id="_6C87UBwmEeG_RY8fzJjtMw" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/consol" packageName="consol" prefix="Consol" base_Namespace="_2B30sBSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_4Kb30BrkEeGJ_KU17uNyeA">
    <ruleId>CONF-458</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_AFd2wB7tEeGaOZtrEokzNQ" severity="INFO">
    <ruleId>CONF-9139</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_RRrrIB7tEeGaOZtrEokzNQ" severity="WARNING">
    <ruleId>CONF-7150</ruleId>
  </CDA:AssociationValidation>
  <CDA:ValueSetConstraint xmi:id="__6IX4CUrEeG_gJw2x8CkdQ"/>
  <CDA:CDATemplate xmi:id="_yJUwEBkaEeGs5a462vYX5Q" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.33"/>
  <CDA:CodeSystemConstraint xmi:id="_2U6FcBSVEeGGzu7fmW9pXw" code="42344-2" displayName="Discharge Diet">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
  </CDA:CodeSystemConstraint>
  <CDA:CDATemplate xmi:id="_41cG4BnXEeGs5a462vYX5Q" templateId="2.16.840.1.113883.10.20.22.2.24"/>
  <CDA:CodeSystemConstraint xmi:id="_2Poj4RSVEeGGzu7fmW9pXw" code="11535-2" displayName="HOSPITAL DISCHARGE DX">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
  </CDA:CodeSystemConstraint>
  <CDA:AssociationValidation xmi:id="_2PidWxSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_5nMEgCwNEeGKLc4ckmfDag" severity="WARNING">
    <ruleId>CONF:8802</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="__GSxhSwNEeGKLc4ckmfDag">
    <ruleId>CONF:8802</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_USFDsCwXEeGKLc4ckmfDag">
    <ruleId>CONF:8726</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_JJ5jcCwZEeGKLc4ckmfDag" severity="INFO">
    <ruleId>CONF:8725</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_5nMEgCwNEeGKLc4ckmfDag" severity="WARNING">
    <ruleId>CONF:8802</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="__GSxhSwNEeGKLc4ckmfDag">
    <ruleId>CONF:8802</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_USFDsCwXEeGKLc4ckmfDag">
    <ruleId>CONF:8726</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_JJ5jcCwZEeGKLc4ckmfDag" severity="INFO">
    <ruleId>CONF:8725</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_2DNSDxSVEeGGzu7fmW9pXw" base_Class="_2DNRcBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.1.1">
    <ruleId>CONF:5252</ruleId>
    <ruleId>CONF:10036</ruleId>
  </CDA:CDATemplate>
  <uml:Association xmi:id="_2Uz-1hSVEeGGzu7fmW9pXw" memberEnd="_2Uz-1xSVEeGGzu7fmW9pXw">
    <ownedEnd xmi:id="_2Uz-1xSVEeGGzu7fmW9pXw" type="_2UnxkRSVEeGGzu7fmW9pXw" association="_2Uz-1hSVEeGGzu7fmW9pXw"/>
  </uml:Association>
  <CDA:CDATemplate xmi:id="_2UnxxhSVEeGGzu7fmW9pXw" base_Class="_2UnxkRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.1.8"/>
  <CDA:AssociationValidation xmi:id="_2Uz-2BSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2Uz-1hSVEeGGzu7fmW9pXw">
    <ruleId>C48-[CT2-18]</ruleId>
  </CDA:AssociationValidation>
  <uml:Association xmi:id="_2IRXoxSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2IKC4BSVEeGGzu7fmW9pXw" base_Class="_2IJb0BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.1.2" assigningAuthorityName="HITSP C32">
    <ruleId>C32-[CT1-19]</ruleId>
  </CDA:CDATemplate>
  <CDA:AssociationValidation xmi:id="_2IR-sRSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2IRXoxSVEeGGzu7fmW9pXw">
    <ruleId>C32-[CT1-16]</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_2TeiKRSVEeGGzu7fmW9pXw" base_Class="_2TeiIRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.21.1.10">
    <ruleId>CONF:7710</ruleId>
    <ruleId>CONF:10054</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2UVdyxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVdzhSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_epztEDssEeGvzMYhXuqAEA" base_Class="_R-vIoDssEeGvzMYhXuqAEA" templateId="2.16.840.1.113883.10.20.22.1.4">
    <ruleId>CONF:8375</ruleId>
    <ruleId>CONF:10040</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_BJkF0DstEeGvzMYhXuqAEA" base_Generalization="_R_oggDssEeGvzMYhXuqAEA" requiresParentId="true">
    <ruleId>CONF:9477</ruleId>
    <ruleId>CONF:10039</ruleId>
  </CDA:ConformsTo>
  <CDA:ClassValidation xmi:id="_B2d0cD1kEeG3tde5scYNWA" base_Class="_-Qa60D1jEeG3tde5scYNWA">
    <ruleId>CONF:8283</ruleId>
  </CDA:ClassValidation>
  <CDA:CDATemplate xmi:id="_DJxPYD1kEeG3tde5scYNWA" base_Class="_-Qa60D1jEeG3tde5scYNWA" templateId="2.16.840.1.113883.10.20.22.1.3"/>
  <CDA:ConformsTo xmi:id="_HCyIUD1kEeG3tde5scYNWA" base_Generalization="_-QelMD1jEeG3tde5scYNWA" requiresParentId="true">
    <ruleId>CONF:9968</ruleId>
  </CDA:ConformsTo>
  <CDA:ConstraintValidation xmi:id="_cOVMsD3rEeGYzOhiGkMbTA" base_Constraint="_OMdNYD3rEeGYzOhiGkMbTA">
    <ruleId>CONF:9986</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_5kEXoD3rEeGYzOhiGkMbTA" base_Constraint="_sAyY0D3rEeGYzOhiGkMbTA"/>
  <CDA:ClassValidation xmi:id="_5i-GcD4iEeGhnL_c4sBHGg" base_Class="_xe9MsD4iEeGhnL_c4sBHGg">
    <ruleId>CONF:8483</ruleId>
    <ruleId>CONF:10048</ruleId>
  </CDA:ClassValidation>
  <CDA:CDATemplate xmi:id="_7C3L4D4iEeGhnL_c4sBHGg" base_Class="_xe9MsD4iEeGhnL_c4sBHGg" templateId="2.16.840.1.113883.10.20.22.1.7"/>
  <CDA:ConformsTo xmi:id="_Asa1YD4jEeGhnL_c4sBHGg" base_Generalization="_xfHkwD4iEeGhnL_c4sBHGg" requiresParentId="true">
    <ruleId>CONF:9914</ruleId>
    <ruleId>CONF:10047</ruleId>
  </CDA:ConformsTo>
  <CDA:CDATemplate xmi:id="_W-JIwD7YEeGvOdejHZ7dYg" base_Class="_LuYEsD7YEeGvOdejHZ7dYg" templateId="2.16.840.1.113883.10.20.22.1.6">
    <ruleId>CONF:8496</ruleId>
    <ruleId>CONF:10050</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_ddfKwD7YEeGvOdejHZ7dYg" base_Generalization="_Luag8D7YEeGvOdejHZ7dYg" requiresParentId="true">
    <ruleId>CONF:9969</ruleId>
    <ruleId>CONF:10049</ruleId>
  </CDA:ConformsTo>
  <CDA:ConstraintValidation xmi:id="_QFc28D-6EeGtTIIxHid14Q" base_Constraint="_NBpHsD-6EeGtTIIxHid14Q">
    <ruleId>CONF:9643</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Qex88D-6EeGtTIIxHid14Q" base_Constraint="_Ot-tsD-6EeGtTIIxHid14Q">
    <ruleId>CONF:10064</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_coZxcD_LEeGXieeKs7NJjA" base_Class="_UBzvED_LEeGXieeKs7NJjA" templateId="2.16.840.1.113883.10.20.22.1.9"/>
  <CDA:ConformsTo xmi:id="_tO2mUD_LEeGXieeKs7NJjA" base_Generalization="_UCQbAD_LEeGXieeKs7NJjA" requiresParentId="true">
    <ruleId>CONF:9483</ruleId>
  </CDA:ConformsTo>
  <CDA:ConstraintValidation xmi:id="_m2WxMD_hEeGysvimLgYv4A" base_Constraint="_iu5zoD_hEeGysvimLgYv4A">
    <ruleId>CONF:8704</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_nto-gD_hEeGysvimLgYv4A" base_Constraint="_lKUtMD_hEeGysvimLgYv4A">
    <ruleId>CONF:10069</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_M8fegEBVEeGXKr6TcG1UOQ" base_Generalization="_2T9DPxSVEeGGzu7fmW9pXw" requiresParentId="true">
    <ruleId>CONF:9970</ruleId>
  </CDA:ConformsTo>
  <CDA:CDATemplate xmi:id="_gWBOEEUuEeGdQ4KWAmnbhw" base_Class="_XwBooEUuEeGdQ4KWAmnbhw" templateId="2.16.840.1.113883.10.20.22.1.5">
    <ruleId>CONF:8404</ruleId>
    <ruleId>CONF:10042</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_rQcUQEUuEeGdQ4KWAmnbhw" base_Generalization="_XwdtgEUuEeGdQ4KWAmnbhw" requiresParentId="true">
    <ruleId>CONF:9405</ruleId>
    <ruleId>CONF:10041</ruleId>
  </CDA:ConformsTo>
  <CDA:ConstraintValidation xmi:id="_TvlesFcZEeGCdLgBm6VHOQ" base_Constraint="_Fz5m8FcZEeGCdLgBm6VHOQ"/>
  <CDA:ConstraintValidation xmi:id="_dczjMFcfEeGCdLgBm6VHOQ" base_Constraint="_WnwW8FcfEeGCdLgBm6VHOQ"/>
  <CDA:ConstraintValidation xmi:id="_nhJFwGjBEeGNoZ3kEkcY2A" base_Constraint="_6fCIkGjAEeGNoZ3kEkcY2A">
    <ruleId>CONF:9642</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_vMmDoGjDEeGNoZ3kEkcY2A" base_Constraint="_96mQgGjAEeGNoZ3kEkcY2A">
    <ruleId>CONF:10057</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_DEqS4GjHEeGNoZ3kEkcY2A" base_Constraint="_8h6-oGjGEeGNoZ3kEkcY2A">
    <ruleId>CONF:9501</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_DbxyYGjHEeGNoZ3kEkcY2A" base_Constraint="_90KpoGjGEeGNoZ3kEkcY2A">
    <ruleId>CONF:10028</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EJAEwGjHEeGNoZ3kEkcY2A" base_Constraint="_AUOyoGjHEeGNoZ3kEkcY2A"/>
  <CDA:ConstraintValidation xmi:id="_5k4JQGjHEeGNoZ3kEkcY2A" base_Constraint="_43rsEGjHEeGNoZ3kEkcY2A">
    <ruleId>CONF:10055</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_LnhPUGjIEeGNoZ3kEkcY2A" base_Constraint="_KkMxIGjIEeGNoZ3kEkcY2A">
    <ruleId>CONF:10065</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2LMv0BSVEeGGzu7fmW9pXw" base_Class="_2LMIwBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.6.1">
    <ruleId>CONF:7527</ruleId>
    <ruleId>CONF:10379</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_45wiEBkaEeGs5a462vYX5Q" base_Class="_bGzYgBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.6">
    <ruleId>CONF:7800</ruleId>
    <ruleId>CONF:10378</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_96YgEBnaEeGs5a462vYX5Q" base_Class="_2EaLUBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.7">
    <ruleId>CONF:7381</ruleId>
    <ruleId>CONF:10488</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2F280hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2F3j4hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EdOoRSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2Ed1sBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EecwBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2EfD0BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Efq4BSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:7402</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Efq4RSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7403</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EgR8BSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7404</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Eg5ABSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7405</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EhgEBSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7406</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EhgERSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7407</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EiHIBSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7419</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EiuMBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EjVQBSVEeGGzu7fmW9pXw" base_Constraint="_2EaLbxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:9964</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EjVQRSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2EoNwhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:7422</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_09uuIBnaEeGs5a462vYX5Q" base_Class="_2EAisBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.30">
    <ruleId>CONF:7471</ruleId>
    <ruleId>CONF:10489</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2F7OQhSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7509</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2F71UBSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7915</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2F-RkhSVEeGGzu7fmW9pXw" base_Constraint="_2F-RkBSVEeGGzu7fmW9pXw">
    <ruleId>CONF:10085</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2F-4oxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2F_fsBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2F_ftRSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2GAGwhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EBw0BSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2ECX4BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EC-8RSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2EDmABSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EENEBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EE0IBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EE0IRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EFbMBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EGCQBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EGpUBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2EIegBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2EJFkBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2EJsoBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2EKTsBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_cAAIcBneEeGs5a462vYX5Q" base_Class="_2FGu4hSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.8">
    <ruleId>CONF:7347</ruleId>
    <ruleId>CONF:10525</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2FJyMBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_kdmRwBncEeGs5a462vYX5Q" base_Class="_2E_aIRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.9">
    <ruleId>CONF:7323</ruleId>
    <ruleId>CONF:10523</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2FvBAxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2FvoEhSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="__eoqQBwNEeGlALrr33gUJg" severity="WARNING">
    <ruleId>CONF:7805</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_52DvABnaEeGs5a462vYX5Q" base_Class="_2FRuAhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.28">
    <ruleId>CONF:7317</ruleId>
    <ruleId>CONF:10490</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2FUxUBSVEeGGzu7fmW9pXw"/>
  <CDA:TextValue xmi:id="_2FS8IBSVEeGGzu7fmW9pXw"/>
  <CDA:TextValue xmi:id="_iecvoCCOEeGq2sn1dgvG_g"/>
  <CDA:ConstraintValidation xmi:id="_UHQ8sCFUEeG9m6LRl9ardQ" base_Constraint="_8gb1UCFTEeG9m6LRl9ardQ">
    <ruleId>CONF:7446</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_mLLYoCFVEeG9m6LRl9ardQ" base_Constraint="_VBabUCFVEeG9m6LRl9ardQ">
    <ruleId>CONF:7449</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_kAPmECKdEeG9m6LRl9ardQ" severity="WARNING" base_Constraint="_gBlYICKdEeG9m6LRl9ardQ">
    <ruleId>CONF:7331</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_5EW5ECKdEeG9m6LRl9ardQ" base_Constraint="_0eDcUCKdEeG9m6LRl9ardQ">
    <ruleId>CONF:7377</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_DpWFUCKfEeG9m6LRl9ardQ" severity="WARNING" base_Constraint="_3qPPACKeEeG9m6LRl9ardQ">
    <ruleId>CONF:7334</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ICYiICKfEeG9m6LRl9ardQ" severity="WARNING" base_Constraint="_1SPc4CKeEeG9m6LRl9ardQ">
    <ruleId>CONF:7333</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="_R4ulECKzEeG9m6LRl9ardQ" severity="WARNING">
    <ruleId>CONF:9117</ruleId>
    <ruleId>CONF:9118</ruleId>
  </CDA:PropertyValidation>
  <CDA:ConstraintValidation xmi:id="_xKFLUCK3EeG9m6LRl9ardQ" severity="WARNING" base_Constraint="_sBN0ECK3EeG9m6LRl9ardQ">
    <ruleId>CONF:7351</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_3ucQMCK3EeG9m6LRl9ardQ" base_Constraint="_0IXhYCK3EeG9m6LRl9ardQ">
    <ruleId>CONF:7378</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_gBGW4CWFEeGWfpmyutaqOA" base_Constraint="_L5MNcCWFEeGWfpmyutaqOA">
    <ruleId>CONF:7504</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_rgdFYCWhEeGWfpmyutaqOA">
    <ruleId>CONF:7421</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_lGdg0CXKEeGWfpmyutaqOA">
    <ruleId>CONF:10083</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_7ZihUCXKEeGWfpmyutaqOA">
    <ruleId>CONF:10084</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_oGz9UCXTEeGWfpmyutaqOA" severity="WARNING">
    <ruleId>CONF:7424</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_BI13YCXUEeGWfpmyutaqOA" severity="WARNING">
    <ruleId>CONF:7425</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_XNKqMCXUEeGWfpmyutaqOA">
    <ruleId>CONF:7426</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_BSGroCXVEeGWfpmyutaqOA" severity="INFO">
    <ruleId>CONF:7431</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_r9M7ECYKEeGWfpmyutaqOA" base_Constraint="_jm2UICYKEeGWfpmyutaqOA">
    <ruleId>CONF:10375</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_LPerMCYLEeGWfpmyutaqOA" base_Constraint="_IvIIQBrcEeGo461UQq-B1g">
    <ruleId>CONF:7343</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_eqOzsCYLEeGWfpmyutaqOA"/>
  <CDA:ConstraintValidation xmi:id="_QuussCYMEeGWfpmyutaqOA" base_Constraint="_P3TE0BrcEeGo461UQq-B1g">
    <ruleId>CONF:7344</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_kTFLMCYOEeGWfpmyutaqOA" severity="WARNING">
    <ruleId>CONF:9118</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ValueSetConstraint xmi:id="_vj2U0CYOEeGWfpmyutaqOA">
    <reference href="../../org.openhealthtools.mdht.uml.cda.consol.model/model/consol-vocab.uml#_xQv28CXLEeGnSfJ2zNllag"/>
  </CDA:ValueSetConstraint>
  <CDA:PropertyValidation xmi:id="__uvHMCnAEeGHDN_aHIiN8Q" severity="WARNING">
    <ruleId>CONF:9117</ruleId>
    <ruleId>CONF:9118</ruleId>
  </CDA:PropertyValidation>
  <CDA:ValueSetConstraint xmi:id="_DrnMcCnBEeGHDN_aHIiN8Q">
    <reference href="../../org.openhealthtools.mdht.uml.cda.consol.model/model/consol-vocab.uml#_xQv28CXLEeGnSfJ2zNllag"/>
  </CDA:ValueSetConstraint>
  <CDA:ConstraintValidation xmi:id="_lqgGkDJCEeG6R8Pb5FT2Ow" severity="INFO" base_Constraint="_eR_n8DJCEeG6R8Pb5FT2Ow">
    <ruleId>CONF:7431</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_x-HNQDJCEeG6R8Pb5FT2Ow" severity="WARNING" base_Constraint="_ZIdiUDJCEeG6R8Pb5FT2Ow">
    <ruleId>CONF:7424</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2LSPZhSVEeGGzu7fmW9pXw" base_Class="_2LSPYBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.5.1" assigningAuthorityName="HITSP C83">
    <ruleId>CONF:9179</ruleId>
  </CDA:CDATemplate>
  <CDA:CodeSystemConstraint xmi:id="_2LTdgRSVEeGGzu7fmW9pXw" code="11450-4" displayName="Problem List">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:9180</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_2LUroRSVEeGGzu7fmW9pXw">
    <ruleId>CONF:9181</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_2LVSsxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:9182</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_2H7ZYBSVEeGGzu7fmW9pXw" base_Class="_2H6yUBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.3"/>
  <CDA:ConstraintValidation xmi:id="_2IFxcBSVEeGGzu7fmW9pXw" base_Constraint="_2IFKYxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:9032</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2IFxdBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IGYghSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IG_lBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IHmohSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Ezz8BSVEeGGzu7fmW9pXw" base_Constraint="_2ExXshSVEeGGzu7fmW9pXw">
    <ruleId>CONF:9271</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_p4UDcBnbEeGs5a462vYX5Q" base_Class="_2ExXsBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.5"/>
  <CDA:CDATemplate xmi:id="_8A93ABVeEeGQCvUGzi1kDQ" base_Class="_naxrkBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.5">
    <ruleId>CONF:7877</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_YpxugBUzEeGbmN_W114JUw" base_Class="_SjN_8BUzEeGbmN_W114JUw" templateId="2.16.840.1.113883.10.20.22.4.6">
    <ruleId>CONF:7359</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_GYVXcBUzEeGbmN_W114JUw" base_Class="_5Ha7ABUyEeGbmN_W114JUw" templateId="2.16.840.1.113883.10.20.22.4.4"/>
  <CDA:CDATemplate xmi:id="_2EqqDxSVEeGGzu7fmW9pXw" base_Class="_2EqqABSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.31">
    <ruleId>CONF:7899</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_x4R70CBLEeG938evaWkvcA" severity="WARNING" base_Constraint="_vaH7gCBEEeG938evaWkvcA">
    <ruleId>CONF:9187</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_YyWRMCf2EeGO5_JBy9h6BA" severity="WARNING" base_Constraint="_SxxO0Cf2EeGO5_JBy9h6BA">
    <ruleId>CONF:9033</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_gTeq4Cf3EeGO5_JBy9h6BA" base_Constraint="_TFQWECf3EeGO5_JBy9h6BA">
    <ruleId>CONF:9188</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_-OqsQCf3EeGO5_JBy9h6BA" base_Constraint="_1fQFECf3EeGO5_JBy9h6BA">
    <ruleId>CONF:9069</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_SheeICf4EeGO5_JBy9h6BA" base_Constraint="_QEznYCf4EeGO5_JBy9h6BA">
    <ruleId>CONF:9272</ruleId>
  </CDA:ConstraintValidation>
  <uml:Association xmi:id="_zQuJgCdeEeGcTOgEa70Vzg">
    <ownedEnd xmi:id="_zQuwkCdeEeGcTOgEa70Vzg" type="_2LSPYBSVEeGGzu7fmW9pXw" association="_zQuJgCdeEeGcTOgEa70Vzg"/>
    <memberEnd href="../../org.openhealthtools.mdht.uml.cda.consol.model/model/.controlled/consol-problems.uml#_zQs7YCdeEeGcTOgEa70Vzg"/>
    <memberEnd href="#_zQuwkCdeEeGcTOgEa70Vzg"/>
  </uml:Association>
  <uml:Association xmi:id="_p1BrICdeEeGcTOgEa70Vzg">
    <ownedEnd xmi:id="_p1BrISdeEeGcTOgEa70Vzg" type="_naxrkBVdEeGQCvUGzi1kDQ" association="_p1BrICdeEeGcTOgEa70Vzg"/>
    <memberEnd href="../../org.openhealthtools.mdht.uml.cda.consol.model/model/.controlled/consol-problems.uml#_p1AdACdeEeGcTOgEa70Vzg"/>
    <memberEnd href="#_p1BrISdeEeGcTOgEa70Vzg"/>
  </uml:Association>
  <CDA:ConstraintValidation xmi:id="_Q1jF0Cp_EeGiFpKeZIy4Pg" severity="WARNING" base_Constraint="_NGUbACp_EeGiFpKeZIy4Pg">
    <ruleId>CONF:7363</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VCsbsCp_EeGiFpKeZIy4Pg" base_Constraint="_S6G-kCp_EeGiFpKeZIy4Pg">
    <ruleId>CONF:7375</ruleId>
  </CDA:ConstraintValidation>
  <uml:Association xmi:id="_2Rwq4hSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2Rwq5RSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2Rwq6BSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2Rwq6xSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_r3b7QBkaEeGs5a462vYX5Q" base_Class="_2Rwq0BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.9" assigningAuthorityName="HL7">
    <ruleId>CONF:10381</ruleId>
  </CDA:CDATemplate>
  <CDA:AssociationValidation xmi:id="_2Rwq5BSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2Rwq4hSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2Rwq5xSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2Rwq5RSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2Rwq6hSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2Rwq6BSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2Rwq7RSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2Rwq6xSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2PWQEBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_JcLykBkbEeGs5a462vYX5Q" base_Class="_2PWQCBSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.1.13.2.1">
    <ruleId>CONF:7832</ruleId>
    <ruleId>CONF:10453</ruleId>
  </CDA:CDATemplate>
  <CDA:AssociationValidation xmi:id="_2PWQEhSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2PWQEBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_JkL0wBnbEeGs5a462vYX5Q" base_Class="_2FhloBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.64"/>
  <CDA:ConstraintValidation xmi:id="_2FphcBSVEeGGzu7fmW9pXw" base_Constraint="_2Fo6YRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-6.3.4.6.7</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2FphcxSVEeGGzu7fmW9pXw" base_Constraint="_2FphcRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-6.3.4.6.10</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2FqIghSVEeGGzu7fmW9pXw" base_Constraint="_2FqIgBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-6.3.4.6.11</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2FqvkhSVEeGGzu7fmW9pXw" base_Constraint="_2FqvkBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-6.3.4.6.12</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2KK1EBSVEeGGzu7fmW9pXw" base_Class="_2KKOBhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.14" assigningAuthorityName="HL7">
    <ruleId>CONF:10389</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2KN4YhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-123</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KOfcBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-127</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KOfdBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-128</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KPGghSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-129</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KPtkxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-130</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KQUoxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-131</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KQ7sxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-132</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KRiwBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-133</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KRiwxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-134</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KSJ0hSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-135</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KSw4hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-136</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KTX8hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-137</ruleId>
  </CDA:ConstraintValidation>
  <uml:Association xmi:id="_2PQJfBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_g8kmkBnSEeGs5a462vYX5Q" base_Class="_2PQJcxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.20" assigningAuthorityName="HL7">
    <ruleId>CONF:10390</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2PWQBBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:AssociationValidation xmi:id="_2PQJfhSVEeGGzu7fmW9pXw" base_Association="_2PQJfBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_n3vB4BnSEeGs5a462vYX5Q" base_Class="_2PcWsRSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.4">
    <ruleId>CONF:10458</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_uFmSUBnSEeGs5a462vYX5Q" base_Class="_2PidQhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.43">
    <ruleId>CONF:9930</ruleId>
    <ruleId>CONF:10391</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_4MwQEBUSEeG6PvUxSTZnaw" base_Class="_sHrUoBUSEeG6PvUxSTZnaw" templateId="2.16.840.1.113883.10.20.22.4.19">
    <ruleId>CONF:7482</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_3iHhABnbEeGs5a462vYX5Q" base_Class="_2G8h9RSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.20">
    <ruleId>CONF:7393</ruleId>
  </CDA:CDATemplate>
  <uml:Association xmi:id="_2PcWrBSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2PcWoRSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2PcWpBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_LeTcQBnUEeGs5a462vYX5Q" base_Class="_2PWQFxSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.1">
    <ruleId>CONF:10468</ruleId>
  </CDA:CDATemplate>
  <CDA:AssociationValidation xmi:id="_2PcWrhSVEeGGzu7fmW9pXw" base_Association="_2PcWrBSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2PcWoxSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2PcWoRSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2PcWphSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2PcWpBSVEeGGzu7fmW9pXw"/>
  <uml:Class xmi:id="_2TqvZBSVEeGGzu7fmW9pXw" name="ScanDataEnterer">
    <ownedComment xmi:id="_2TqvZRSVEeGGzu7fmW9pXw" annotatedElement="_2TqvZBSVEeGGzu7fmW9pXw">
      <body>Represents the scanner operator who produced the scanned content.</body>
    </ownedComment>
    <ownedRule xmi:id="_2TqvZhSVEeGGzu7fmW9pXw" name="timeEqualsDocumentEffectiveTime">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TqvZxSVEeGGzu7fmW9pXw">
        <language>Analysis</language>
        <language>OCL</language>
        <body>The time shall be equal to that of ClinicalDocument/effectiveTime. At a minimum, the time shall be precise to the day and shall include the time zone offset from GMT.</body>
        <body>self.time.value = self.getClinicalDocument().effectiveTime.value</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_2TqvaBSVEeGGzu7fmW9pXw" name="hasAssignedEntityId">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TqvaRSVEeGGzu7fmW9pXw">
        <language>Analysis</language>
        <language>OCL</language>
        <body>The assignedEntity/id element has both the root and the extension attributes. The root shall be the oid of the scanning facility and the extension shall be an appropriately assigned, facility unique id of the operator.</body>
        <body>self.assignedEntity.id->forAll(ident : datatypes::II | not ident.root.oclIsUndefined() and not ident.extension.oclIsUndefined())</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_2Tw1-hSVEeGGzu7fmW9pXw">
      <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_twqZYEcEEd6besF9iFIJkQ"/>
    </generalization>
    <ownedAttribute xmi:id="_2TqvaxSVEeGGzu7fmW9pXw" name="time" visibility="private" aggregation="composite">
      <ownedComment xmi:id="_2TqvbBSVEeGGzu7fmW9pXw">
        <body>Denotes the time at which the original content was scanned.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_4ysYYD59Ed6cla2oXsPtlA"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2TqvbRSVEeGGzu7fmW9pXw" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2TqvbhSVEeGGzu7fmW9pXw" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_2Tw19BSVEeGGzu7fmW9pXw" name="assignedEntity" visibility="private" aggregation="composite" association="_2Tw1-BSVEeGGzu7fmW9pXw">
      <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_6qmVsEcDEd6besF9iFIJkQ"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2Tw19RSVEeGGzu7fmW9pXw" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2Tw19hSVEeGGzu7fmW9pXw" value="1"/>
    </ownedAttribute>
  </uml:Class>
  <uml:Association xmi:id="_2Tw1-BSVEeGGzu7fmW9pXw" memberEnd="_2Tw19BSVEeGGzu7fmW9pXw _2Tw1-RSVEeGGzu7fmW9pXw">
    <ownedEnd xmi:id="_2Tw1-RSVEeGGzu7fmW9pXw" type="_2TqvZBSVEeGGzu7fmW9pXw" association="_2Tw1-BSVEeGGzu7fmW9pXw"/>
  </uml:Association>
  <CDA:ConstraintValidation xmi:id="_2Tw18RSVEeGGzu7fmW9pXw" base_Constraint="_2TqvZhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Tw18hSVEeGGzu7fmW9pXw" base_Constraint="_2TqvaBSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2Tw18BSVEeGGzu7fmW9pXw" base_Property="_2TqvaxSVEeGGzu7fmW9pXw"/>
  <uml:Class xmi:id="_2Tko1hSVEeGGzu7fmW9pXw" name="ScanningDevice">
    <ownedComment xmi:id="_2Tko1xSVEeGGzu7fmW9pXw" annotatedElement="_2Tko1hSVEeGGzu7fmW9pXw">
      <body>Represents the scanning device and software used to produce the scanned content.</body>
    </ownedComment>
    <ownedRule xmi:id="_2Tko2BSVEeGGzu7fmW9pXw" name="timeEqualsDocumentEffectiveTime">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tko2RSVEeGGzu7fmW9pXw">
        <language>Analysis</language>
        <language>OCL</language>
        <body>The time shall be equal to that of ClinicalDocument/effectiveTime. At a minimum, the time shall be precise to the day and shall include the time zone offset from GMT.</body>
        <body>self.time.value = self.getClinicalDocument().effectiveTime.value</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_2Tko2hSVEeGGzu7fmW9pXw" name="hasAssignedAuthorId">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tko2xSVEeGGzu7fmW9pXw">
        <language>Analysis</language>
        <language>OCL</language>
        <body>The assignedAuthor/id element shall be at least the root oid of the scanning device.</body>
        <body>self.assignedAuthor.id->forAll(ident : datatypes::II | not ident.root.oclIsUndefined())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_2Tko3BSVEeGGzu7fmW9pXw" name="hasAssignedAuthoringDeviceCode" constrainedElement="_2Tko1hSVEeGGzu7fmW9pXw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tko3RSVEeGGzu7fmW9pXw">
        <language>Analysis</language>
        <language>OCL</language>
        <body>The assignedAuthor/assignedAuthoringDevice/code element is present. The values set here are taken from appropriate DICOM vocabulary. The value of code@codeSystem shall be set to &quot;1.2.840.10008.2.16.4&quot;. The value of code@code shall be set to &quot;CAPTURE&quot; for PDF scanned content and &quot;WSD&quot; for plaintext. The value of code@displayName shall be set to &quot;Image Capture&quot; for PDF scanned content and &quot;Workstation&quot; for plaintext.</body>
        <body>self.assignedAuthor.assignedAuthoringDevice.code.codeSystem = '1.2.840.10008.2.16.4'&#xD;&#xA;   and not self.assignedAuthor.assignedAuthoringDevice.code.code.oclIsUndefined()&#xD;&#xA;   and not self.assignedAuthor.assignedAuthoringDevice.code.displayName.oclIsUndefined()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_2Tko3hSVEeGGzu7fmW9pXw" name="hasDeviceManufacturerModelName" constrainedElement="_2Tko1hSVEeGGzu7fmW9pXw">
      <ownedComment xmi:id="_2Tko3xSVEeGGzu7fmW9pXw">
        <body>The mixed content shall contain string information that specifies the scanner product name and model number. From this information, features like bit depth and resolution can be inferred. In the case of virtually scanned documents (for example, print to PDF), the manufactureModelName referenced here refers to the makers of the technology that was used to produce the embedded content.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tko4BSVEeGGzu7fmW9pXw">
        <language>Analysis</language>
        <language>OCL</language>
        <body>The assignedAuthor/assignedAuthoringDevice/manufacturerModelName element is present.</body>
        <body>not self.assignedAuthor.assignedAuthoringDevice.manufacturerModelName.oclIsUndefined()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_2Tko4RSVEeGGzu7fmW9pXw" name="hasDeviceSoftwareName" constrainedElement="_2Tko1hSVEeGGzu7fmW9pXw">
      <ownedComment xmi:id="_2Tko4hSVEeGGzu7fmW9pXw">
        <body>The mixed content shall contain string information that specifies the scanning software name and version. In the case of virtually scanned documents, the softwareName referenced here refers to the technology that was used to produce the embedded content.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tko4xSVEeGGzu7fmW9pXw">
        <language>Analysis</language>
        <language>OCL</language>
        <body>The assignedAuthor/assignedAuthoringDevice/softwareName element is present.</body>
        <body>not self.assignedAuthor.assignedAuthoringDevice.softwareName.oclIsUndefined()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_2Tko5BSVEeGGzu7fmW9pXw" name="hasAssignedAuthorRepresentedOrganizationId">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Tko5RSVEeGGzu7fmW9pXw">
        <language>Analysis</language>
        <language>OCL</language>
        <body>The assignedAuthor/representedOrganization/id element is present. The root attribute shall be set to the oid of the scanning facility.</body>
        <body>self.assignedAuthor.representedOrganization.id->forAll(ident : datatypes::II | not ident.root.oclIsUndefined())</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_2TqvXRSVEeGGzu7fmW9pXw">
      <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ChEisEcEEd6besF9iFIJkQ"/>
    </generalization>
    <ownedAttribute xmi:id="_2Tko5xSVEeGGzu7fmW9pXw" name="time" visibility="private" aggregation="composite">
      <ownedComment xmi:id="_2Tko6BSVEeGGzu7fmW9pXw">
        <body>Denotes the time at which the original content was scanned.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_4ysYYD59Ed6cla2oXsPtlA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_2TqvVxSVEeGGzu7fmW9pXw" name="assignedAuthor" visibility="private" aggregation="composite" association="_2TqvWxSVEeGGzu7fmW9pXw">
      <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_z2vcQEcDEd6besF9iFIJkQ"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2TqvWBSVEeGGzu7fmW9pXw" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2TqvWRSVEeGGzu7fmW9pXw" value="1"/>
    </ownedAttribute>
  </uml:Class>
  <uml:Association xmi:id="_2TqvWxSVEeGGzu7fmW9pXw" memberEnd="_2TqvVxSVEeGGzu7fmW9pXw _2TqvXBSVEeGGzu7fmW9pXw">
    <ownedEnd xmi:id="_2TqvXBSVEeGGzu7fmW9pXw" type="_2Tko1hSVEeGGzu7fmW9pXw" association="_2TqvWxSVEeGGzu7fmW9pXw"/>
  </uml:Association>
  <CDA:ConstraintValidation xmi:id="_2TqvUBSVEeGGzu7fmW9pXw" base_Constraint="_2Tko2BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TqvURSVEeGGzu7fmW9pXw" base_Constraint="_2Tko2hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TqvUhSVEeGGzu7fmW9pXw" base_Constraint="_2Tko3BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TqvUxSVEeGGzu7fmW9pXw" base_Constraint="_2Tko3hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TqvVBSVEeGGzu7fmW9pXw" base_Constraint="_2Tko4RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TqvVRSVEeGGzu7fmW9pXw" base_Constraint="_2Tko5BSVEeGGzu7fmW9pXw"/>
  <uml:Class xmi:id="_2TkovBSVEeGGzu7fmW9pXw" name="ScanOriginalAuthor">
    <ownedComment xmi:id="_2TkovRSVEeGGzu7fmW9pXw" annotatedElement="_2TkovBSVEeGGzu7fmW9pXw">
      <body>Represents the author of the original content. It additionally can encode the original author‟s institution in the subelement representedOrganization. Information regarding the original author and his/her institution shall be included, if it is known. In many cases this will have to be supplied by the operator.</body>
    </ownedComment>
    <ownedRule xmi:id="_2TkovhSVEeGGzu7fmW9pXw" name="hasAssignedAuthorId">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TkovxSVEeGGzu7fmW9pXw">
        <language>Analysis</language>
        <language>OCL</language>
        <body>The assignedAuthor/id element if known shall include both the root and the extension attributes. Refer to PCC TF-2: 4.1.1 for more details.</body>
        <body>self.assignedAuthor.id->forAll(ident : datatypes::II |&#xD;&#xA;   not ident.root.oclIsUndefined() and not ident.extension.oclIsUndefined())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_2TkowBSVEeGGzu7fmW9pXw" name="hasAssignedAuthorRepresentedOrganizationId">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_2TkowRSVEeGGzu7fmW9pXw">
        <language>Analysis</language>
        <language>OCL</language>
        <body>The assignedAuthor/representedOrganization/id element if known shall include both the root and the extension attributes. Refer to PCC TF-2: 4.1.1 for more details.</body>
        <body>self.assignedAuthor.representedOrganization.id->forAll(ident : datatypes::II |&#xD;&#xA;   not ident.root.oclIsUndefined() and not ident.extension.oclIsUndefined())</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_2TkozxSVEeGGzu7fmW9pXw">
      <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ChEisEcEEd6besF9iFIJkQ"/>
    </generalization>
    <ownedAttribute xmi:id="_2TkowxSVEeGGzu7fmW9pXw" name="time" visibility="private" aggregation="composite">
      <ownedComment xmi:id="_2TkoxBSVEeGGzu7fmW9pXw">
        <body>Represents the day and time of the authoring of the original content. This value is not restricted beyond statements made in the HL7 CDA R2 documentation.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_4ysYYD59Ed6cla2oXsPtlA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_2TkoyRSVEeGGzu7fmW9pXw" name="assignedAuthor" visibility="private" aggregation="composite" association="_2TkozRSVEeGGzu7fmW9pXw">
      <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_z2vcQEcDEd6besF9iFIJkQ"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2TkoyhSVEeGGzu7fmW9pXw" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2TkoyxSVEeGGzu7fmW9pXw" value="1"/>
    </ownedAttribute>
  </uml:Class>
  <uml:Association xmi:id="_2TkozRSVEeGGzu7fmW9pXw" memberEnd="_2TkoyRSVEeGGzu7fmW9pXw _2TkozhSVEeGGzu7fmW9pXw">
    <ownedEnd xmi:id="_2TkozhSVEeGGzu7fmW9pXw" type="_2TkovBSVEeGGzu7fmW9pXw" association="_2TkozRSVEeGGzu7fmW9pXw"/>
  </uml:Association>
  <CDA:ConstraintValidation xmi:id="_2TkoxhSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2TkovhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2TkoxxSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2TkowBSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2Lr4BBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2LiuEBSVEeGGzu7fmW9pXw" base_Class="_2LiHABSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.32" assigningAuthorityName="HL7">
    <ruleId>CONF:7635</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2LjVIRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-474</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Lj8MBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-475</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2LpbwBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-476</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2LqC0BSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-477</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Lqp4BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-478</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2LrQ8BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-479</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="_2LjVIBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-473</ruleId>
  </CDA:PropertyValidation>
  <CDA:ConstraintValidation xmi:id="_XbW-ABueEeGnMahsPjlwOw" severity="WARNING" base_Constraint="_VsoLUBueEeGnMahsPjlwOw">
    <ruleId>CONF:7397</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_-oUiEB-WEeGtfPlBCjHWkw" base_Constraint="_8FmGoB-WEeGtfPlBCjHWkw">
    <ruleId>CONF:7398</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_y16OgB-XEeGtfPlBCjHWkw" severity="INFO" base_Constraint="_MtdoIB7kEeGEaLkc3UAsAg">
    <ruleId>CONF:10088</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_bC3lMB-ZEeGtfPlBCjHWkw" severity="INFO" base_Constraint="_U1PlUB-ZEeGtfPlBCjHWkw">
    <ruleId>CONF:7762</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ei-O4B-ZEeGtfPlBCjHWkw" base_Constraint="_W3fw8B-ZEeGtfPlBCjHWkw">
    <ruleId>CONF:7763</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_1EZaMCsaEeGHF88-qhhUMA" base_Class="_oI7CQCsaEeGHF88-qhhUMA" templateId="2.16.840.1.113883.10.20.22.2.13">
    <ruleId>CONF:7840</ruleId>
    <ruleId>CONF:10383</ruleId>
  </CDA:CDATemplate>
  <CDA:ClassValidation xmi:id="_SCS3cCscEeGHF88-qhhUMA" base_Class="_Nm64UCscEeGHF88-qhhUMA">
    <ruleId>CONF:7836</ruleId>
    <ruleId>CONF:10448</ruleId>
  </CDA:ClassValidation>
  <CDA:CDATemplate xmi:id="_Xl_wkCscEeGHF88-qhhUMA" base_Class="_Nm64UCscEeGHF88-qhhUMA" templateId="2.16.840.1.113883.10.20.22.2.12"/>
  <CDA:CDATemplate xmi:id="_xv0kcDV1EeGaW4kr-GbV8Q" base_Class="_eKFbUDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.42">
    <ruleId>CONF:9915</ruleId>
    <ruleId>CONF:10393</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_19h7ADV1EeGaW4kr-GbV8Q" base_Class="_hqzJADVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.21.2.3">
    <ruleId>CONF:8680</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_7ssdQDV1EeGaW4kr-GbV8Q" base_Class="_mEIgwDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.39">
    <ruleId>CONF:8160</ruleId>
    <ruleId>CONF:10403</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_-ZsPADV1EeGaW4kr-GbV8Q" base_Class="_rNJpADVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.21.2.1">
    <ruleId>CONF:7869</ruleId>
    <ruleId>CONF:10462</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_lrrAoDV2EeGaW4kr-GbV8Q" base_Class="_iy8nYDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.21.2.2">
    <ruleId>CONF:7873</ruleId>
    <ruleId>CONF:10470</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_aByU4DszEeGvzMYhXuqAEA" base_Class="_W8pI4DszEeGvzMYhXuqAEA" templateId="2.16.840.1.113883.10.20.22.2.8"/>
  <CDA:CDATemplate xmi:id="__hRrIEFHEeGorO80f-Cppg" base_Class="_5K6mAEFHEeGorO80f-Cppg" templateId="2.16.840.1.113883.10.20.22.4.34"/>
  <CDA:CDATemplate xmi:id="_WS1aoFjyEeGRqYkwoeymcA" base_Class="_4qKukEE1EeGdmoWy_aLP0Q" templateId="2.16.840.1.113883.10.20.22.2.45">
    <ruleId>CONF:10112</ruleId>
    <ruleId>CONF:10402</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2NIphhSVEeGGzu7fmW9pXw" base_Class="_2NIpgBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.1.1">
    <ruleId>CONF:7568</ruleId>
    <ruleId>CONF:10433</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NJ3wBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2NJ3xBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:CDATemplate xmi:id="_-vKWgBnbEeGs5a462vYX5Q" base_Class="_2GHbgBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.16">
    <ruleId>CONF:7499</ruleId>
    <ruleId>CONF:10504</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2HulEBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HvMIhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HvzMxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HwaQhSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2HxBUBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HxBUxSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2HxoYhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HyPcxSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2GdZwBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_HlZ-cBncEeGs5a462vYX5Q" base_Class="_DpoGkBUUEeG6PvUxSTZnaw" templateId="2.16.840.1.113883.10.20.22.4.18">
    <ruleId>CONF:7454</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_LKvGYBncEeGs5a462vYX5Q" base_Class="_2T9DQBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.23">
    <ruleId>CONF:7409</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2Poj_xSVEeGGzu7fmW9pXw" base_Class="_2Poj_BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.38">
    <ruleId>CONF:8152</ruleId>
    <ruleId>CONF:10405</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_nvOcIBVeEeGQCvUGzi1kDQ" base_Class="_iAoXEBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.1">
    <ruleId>CONF:7791</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2KEucxSVEeGGzu7fmW9pXw" base_Class="_2KEucBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.23">
    <ruleId>CONF:7944.CONF:10404</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2HIvYRSVEeGGzu7fmW9pXw" base_Class="_2HIvMBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.50">
    <ruleId>CONF:10509</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2G3CYBSVEeGGzu7fmW9pXw" base_Class="_2G2bUxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.37">
    <ruleId>CONF:7901</ruleId>
    <ruleId>CONF:10522</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_gOTA8BUUEeG6PvUxSTZnaw" base_Class="_chEhQBUUEeG6PvUxSTZnaw" templateId="2.16.840.1.113883.10.20.22.4.25">
    <ruleId>CONF:7372</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_a3-5ABUTEeG6PvUxSTZnaw" base_Class="_VBXq8BUTEeG6PvUxSTZnaw" templateId="2.16.840.1.113883.10.20.22.4.24">
    <ruleId>CONF:7495</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IYW3oBnXEeGs5a462vYX5Q" base_Class="_2Poj5BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.44">
    <ruleId>CONF:10098</ruleId>
    <ruleId>CONF:10392</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_HhcpcBq2EeGo461UQq-B1g" base_Constraint="_G1AaMBq2EeGo461UQq-B1g">
    <ruleId>CONF:7493</ruleId>
    <ruleId>CONF:10086</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Sw0r8Bq2EeGo461UQq-B1g"/>
  <CDA:ConstraintValidation xmi:id="_W3bU8Bq2EeGo461UQq-B1g" severity="INFO" base_Constraint="_WgMgsBq2EeGo461UQq-B1g">
    <ruleId>CONF:7494</ruleId>
    <ruleId>CONF:10087</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_xlA8oBrcEeGo461UQq-B1g" severity="WARNING" base_Constraint="_pHR7UBrcEeGo461UQq-B1g">
    <ruleId>CONF:7367</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_zB2uEBrcEeGo461UQq-B1g" severity="INFO" base_Constraint="_tZn6QBrcEeGo461UQq-B1g">
    <ruleId>CONF:7373</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_uFl-gBrTEeGo461UQq-B1g" base_Class="_j3aTQBrTEeGo461UQq-B1g" templateId="2.16.840.1.113883.10.20.22.4.17">
    <ruleId>CONF:7429</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_reiTMB7lEeGEaLkc3UAsAg" base_Constraint="_iZPioB7lEeGEaLkc3UAsAg">
    <ruleId>CONF:7445</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_CGugsB7pEeGEaLkc3UAsAg" severity="WARNING" base_Constraint="_vY4cQBrcEeGo461UQq-B1g">
    <ruleId>CONF:7369</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VmSo8B-zEeGKirKJsFylGA" severity="WARNING" base_Constraint="_K_ZiwB-zEeGKirKJsFylGA"/>
  <CDA:CDATemplate xmi:id="_RCX1QEFGEeGorO80f-Cppg" base_Class="_LNP08EFGEeGorO80f-Cppg" templateId="2.16.840.1.113883.10.20.22.4.36"/>
  <CDA:ConstraintValidation xmi:id="_rnBu8EFiEeG2TLeVPbv7pg" severity="WARNING" base_Constraint="_nSTKYEFiEeG2TLeVPbv7pg">
    <ruleId>CONF:7502</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Wrf3gEIjEeG4bZAl2IGXmQ" base_Constraint="_5BnBgEIiEeG4bZAl2IGXmQ">
    <ruleId>CONF:7508</ruleId>
    <ruleId>CONF:9104</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_bBg1gEIjEeG4bZAl2IGXmQ" severity="WARNING" base_Constraint="_0bGJYEIiEeG4bZAl2IGXmQ">
    <ruleId>CONF:7513</ruleId>
    <ruleId>CONF:9105</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_s5m7oEInEeG4bZAl2IGXmQ" severity="WARNING" base_Constraint="_cWfuoEInEeG4bZAl2IGXmQ">
    <ruleId>CONF:7526</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_W-JCgEIqEeG4bZAl2IGXmQ" base_Constraint="_1smJUEIpEeG4bZAl2IGXmQ">
    <ruleId>CONF:7524</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_XhPvkEIqEeG4bZAl2IGXmQ" base_Constraint="_L0emcEIqEeG4bZAl2IGXmQ">
    <ruleId>CONF:7542</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_WUhoUEIrEeG4bZAl2IGXmQ" base_Constraint="_Mu_RcEIrEeG4bZAl2IGXmQ">
    <ruleId>CONF:7550</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_UC6VkEIsEeG4bZAl2IGXmQ" severity="WARNING" base_Constraint="_WONKoCANEeGKirKJsFylGA">
    <ruleId>CONF:7417</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_XJXwMEIsEeG4bZAl2IGXmQ" severity="WARNING" base_Constraint="_GyKRMEIsEeG4bZAl2IGXmQ">
    <ruleId>CONF:7413</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_nz7pAEIsEeG4bZAl2IGXmQ" severity="INFO" base_Constraint="_dYj4gCANEeGKirKJsFylGA">
    <ruleId>CONF:7414</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_moUDsEa8EeG75M7WNoZ4Xg" base_Constraint="_fELj4Ea8EeG75M7WNoZ4Xg">
    <ruleId>CONF:8754</ruleId>
  </CDA:ConstraintValidation>
  <uml:Association xmi:id="_2SC-zBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2SC-shSVEeGGzu7fmW9pXw" base_Class="_2SC-sBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.47" assigningAuthorityName="HL7">
    <ruleId>CONF:8623</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2SJFWhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2SJFXRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2SJFYxSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2SJFZxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2SJFahSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2SJFbRSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2SPL_xSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_hWyHQBnbEeGs5a462vYX5Q" base_Class="_2IpyIxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.46" assigningAuthorityName="HL7">
    <ruleId>CONF:10496</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2IyVAhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Iy8EBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IzjIhSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2I0KMxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2I0xQhSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2I1YUBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2I4bpxSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_kKyf8BnbEeGs5a462vYX5Q" base_Class="_2IbIoBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.45" assigningAuthorityName="HL7">
    <ruleId>CONF:10497</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2I634xSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2I9UIBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2I_wZBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2JAXcxSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2JA-gxSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2JBlkxSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2JCMohSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2JCzshSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2JDawBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2JDawxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2JEB0hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2JEo4hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IcWwBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IcWwRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Ic90BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Idk4BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Idk4RSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IeL8BSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2IezARSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2IfaEBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IgBIBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2IgoMBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IgoMRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IhPQBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2Ih2UBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2Ih2URSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IidYBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IjEcBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IjrgBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IkSkBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IkSkRSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2Imu0xSVEeGGzu7fmW9pXw"/>
  <CDA:CodeSystemConstraint xmi:id="_2Imu1BSVEeGGzu7fmW9pXw">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_ywdZ4Gg7Ed-ilOLYnIx0jA"/>
  </CDA:CodeSystemConstraint>
  <CDA:CDATemplate xmi:id="_2IWQLRSVEeGGzu7fmW9pXw" base_Class="_2IWQIxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.15" assigningAuthorityName="HL7">
    <ruleId>CONF:10388</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2IW3MBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IXeQBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_lq80cCHZEeGFLIX-2_sWzA" base_Constraint="_kQyjkCHZEeGFLIX-2_sWzA">
    <ruleId>CONF:8610</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VPVEoCHbEeGFLIX-2_sWzA" base_Constraint="_OzXt0CHbEeGFLIX-2_sWzA">
    <ruleId>CONF:8611</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_01YsYCHbEeGFLIX-2_sWzA" severity="WARNING" base_Constraint="_vjf8ACHbEeGFLIX-2_sWzA">
    <ruleId>CONF:8612</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_7saOkCHbEeGFLIX-2_sWzA" severity="WARNING" base_Constraint="_4MXPQCHbEeGFLIX-2_sWzA">
    <ruleId>CONF:8613</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_J7h_sCHcEeGFLIX-2_sWzA" base_Constraint="_Fra1YCHcEeGFLIX-2_sWzA">
    <ruleId>CONF:8614</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_sx6vwCHcEeGFLIX-2_sWzA" severity="WARNING" base_Constraint="_pt_EsCHcEeGFLIX-2_sWzA">
    <ruleId>CONF:8615</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_KIpZMCHdEeGFLIX-2_sWzA" severity="INFO" base_Constraint="_Fi9AcCHdEeGFLIX-2_sWzA">
    <ruleId>CONF:8616</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_YG6Y8CHfEeGFLIX-2_sWzA" severity="INFO" base_Constraint="_WX7uoCHfEeGFLIX-2_sWzA">
    <ruleId>CONF:8617</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2HqIYCHiEeGFLIX-2_sWzA" base_Constraint="_web2ECHiEeGFLIX-2_sWzA">
    <ruleId>CONF:8677</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2JKvhhSVEeGGzu7fmW9pXw" base_Class="_2JKvgBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.17">
    <ruleId>CONF:7936</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2JOZ6xSVEeGGzu7fmW9pXw" base_Class="_2JOZ4BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.38">
    <ruleId>CONF:8550</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2JgtwhSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2JhU0hSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2Jh74hSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2Jii8BSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:TextValue xmi:id="_2JRdMBSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2JQ2IBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_aXMCcBncEeGs5a462vYX5Q" base_Class="_2N6soBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.15.3.8"/>
  <CDA:PropertyValidation xmi:id="_2N6swxSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2N6suBSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2N6sthSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2N6stxSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2N6suRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_oW16cBtsEeGT89b80j3MTg" severity="WARNING" base_Constraint="_L9YKgBtsEeGT89b80j3MTg">
    <ruleId>CONF:8893</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_BbV5sBttEeGT89b80j3MTg" severity="WARNING" base_Constraint="_4G8WIBtsEeGT89b80j3MTg">
    <ruleId>CONF:8894</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_DA2mUBtqEeGT89b80j3MTg" base_Class="_vBswQBtpEeGT89b80j3MTg" templateId="2.16.840.1.113883.10.20.15.3.1"/>
  <CDA:ConstraintValidation xmi:id="_p6vxUDyWEeGOm9opnDhYAQ" base_Constraint="_O-ANcBttEeGT89b80j3MTg">
    <ruleId>CONF:8895</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2KC5QBSVEeGGzu7fmW9pXw" base_Class="_2JxzgBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.1">
    <ruleId>CONF:7126</ruleId>
    <ruleId>CONF:9134</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2J_O4hSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2J_O4BSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7164</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J_18BSVEeGGzu7fmW9pXw">
    <ruleId>CONF:400</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J_19BSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:401</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KAdAhSVEeGGzu7fmW9pXw">
    <ruleId>CONF:402</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KBEExSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF:403</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KBrIxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF:404</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KCSMhSVEeGGzu7fmW9pXw">
    <ruleId>CONF:406</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="_2JzosRSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7128</ruleId>
  </CDA:PropertyValidation>
  <CDA:AssociationValidation xmi:id="_2J020BSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:399</ruleId>
  </CDA:AssociationValidation>
  <CDA:ConstraintValidation xmi:id="_2J69chSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2J69cBSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7166</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J7kgxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:415</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J8LkxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:417</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J8LlhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:419</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J8yohSVEeGGzu7fmW9pXw">
    <ruleId>CONF:420</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J9ZshSVEeGGzu7fmW9pXw">
    <ruleId>CONF:421</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_TIHhwBneEeGs5a462vYX5Q" base_Class="_2J1d4BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.2">
    <ruleId>CONF:9138</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2JtiEBSVEeGGzu7fmW9pXw" base_Class="_2Js7AxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.3.1">
    <ruleId>CONF:7108</ruleId>
    <ruleId>CONF:9137</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2Jv-URSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:392</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CodeSystemConstraint xmi:id="_2JuJIBSVEeGGzu7fmW9pXw" code="30954-2" displayName="Relevant diagnostic tests and/or laboratory data">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:389</ruleId>
    <ruleId>CONF:390</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:TextValue xmi:id="_2JvXQBSVEeGGzu7fmW9pXw">
    <ruleId>CONF:391</ruleId>
  </CDA:TextValue>
  <CDA:AssociationValidation xmi:id="_2JwlYxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:388</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_OydAEBVfEeGQCvUGzi1kDQ" base_Class="_xGqiEBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.3">
    <ruleId>CONF:7116</ruleId>
    <ruleId>CONF:9136</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_76siUBtxEeG4C_iCHrZZ9w" severity="WARNING" base_Constraint="_1dxCgBtuEeG4C_iCHrZZ9w">
    <ruleId>CONF:7165</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_eaFnUBt1EeG4C_iCHrZZ9w" severity="WARNING">
    <ruleId>CONF:9108</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_s1du8Bt5EeG4C_iCHrZZ9w" severity="WARNING">
    <ruleId>CONF:9109</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="_B0fw0Bt-EeG4C_iCHrZZ9w" severity="INFO">
    <ruleId>CONF:7149</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_1-sa4B7HEeGaOZtrEokzNQ"/>
  <CDA:ConstraintValidation xmi:id="_1-YHcB7rEeGaOZtrEokzNQ" severity="WARNING" base_Constraint="_tjUmsB7rEeGaOZtrEokzNQ">
    <ruleId>CONF:7138</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_4nrIIB7vEeGDhvvzMMgVgQ" base_Constraint="_jXJw0B7vEeGDhvvzMMgVgQ">
    <ruleId>CONF:7152</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VKBKYB-4EeGZsIzHpWxp_Q" severity="INFO" base_Constraint="_OYDHUB-4EeGZsIzHpWxp_Q">
    <ruleId>CONF:7149</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_yL4hMDsOEeGVevaNZNc6DA" base_Constraint="_sq16gDsOEeGVevaNZNc6DA">
    <ruleId>CONF:7139</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_u5G5QBnaEeGs5a462vYX5Q" base_Class="_2KlEwBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.48">
    <ruleId>CONF:8655</ruleId>
    <ruleId>CONF:10485</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2LEM8hSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2LE0AhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KnhARSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KoIEBSVEeGGzu7fmW9pXw" base_Constraint="_2KlExRSVEeGGzu7fmW9pXw">
    <ruleId>CONF:8657</ruleId>
    <ruleId>CONF:8658</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KovIBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KovIRSVEeGGzu7fmW9pXw" base_Constraint="_2KlEyhSVEeGGzu7fmW9pXw">
    <ruleId>CONF:8659</ruleId>
    <ruleId>CONF:8660</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KpWMBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Kp9QBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Kp9QRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KqkUBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KrLYBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KrLYRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KrycBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KsZgBSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2Kvc0xSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2KwD5xSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2Kwq8xSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2KgzVhSVEeGGzu7fmW9pXw" base_Class="_2KgzUBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.21.1">
    <ruleId>CONF:8643</ruleId>
    <ruleId>CONF:10377</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_VLe-sBVfEeGQCvUGzi1kDQ" base_Class="_1RZdIBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.21">
    <ruleId>CONF:7928</ruleId>
    <ruleId>CONF:10376</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2LXH4BSVEeGGzu7fmW9pXw" base_Class="_2LWg0BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.22.1">
    <ruleId>CONF:10387</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2L6hhBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-457</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CodeSystemConstraint xmi:id="_2LYWARSVEeGGzu7fmW9pXw" code="46240-8" displayName="History of encounters">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF-454</ruleId>
    <ruleId>CONF-455</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_2LZkIRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-456</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_2LaLMBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-453</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_aJLnwBVfEeGQCvUGzi1kDQ" base_Class="_4yj2wBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.22" assigningAuthorityName="HL7">
    <ruleId>CONF:10386</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2LayXhSVEeGGzu7fmW9pXw" base_Class="_2LayQBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.49" assigningAuthorityName="HL7">
    <ruleId>CONF:10494</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2Ld1kBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2LecoBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2LecoRSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2LfDsBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-470</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_MrEusCwaEeGKLc4ckmfDag" base_Constraint="_EywuoCwaEeGKLc4ckmfDag">
    <ruleId>CONF:8740</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_d7Xx0CwaEeGKLc4ckmfDag" severity="WARNING" base_Constraint="_a_2b4CwaEeGKLc4ckmfDag">
    <ruleId>CONF:8719</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_iPTFICwaEeGKLc4ckmfDag" severity="WARNING" base_Constraint="_fTZ7wCwaEeGKLc4ckmfDag">
    <ruleId>CONF:8720</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_nZocACwaEeGKLc4ckmfDag" base_Constraint="_ktatYCwaEeGKLc4ckmfDag">
    <ruleId>CONF:8721</ruleId>
  </CDA:ConstraintValidation>
  <uml:Association xmi:id="_i7iGohU9EeGbmN_W114JUw"/>
  <CDA:CDATemplate xmi:id="_zh-FUBnbEeGs5a462vYX5Q" base_Class="_2MAoIBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.52">
    <ruleId>CONF:10498</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2MMOUhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-305</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MM1YhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-311</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MNccBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-314</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MNccxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-315</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MODgxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-327</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MOqkxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-328</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MPRohSVEeGGzu7fmW9pXw">
    <ruleId>CONF-329</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MP4shSVEeGGzu7fmW9pXw">
    <ruleId>CONF-354</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MB2QBSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2MHV4BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-312</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_k-AE8BVOEeGbmN_W114JUw" base_Class="_daTqABVOEeGbmN_W114JUw" templateId="2.16.840.1.113883.10.20.22.4.54">
    <ruleId>CONF:9004</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_FsB20BVOEeGbmN_W114JUw" base_Class="__qYdcBVNEeGbmN_W114JUw" templateId="2.16.840.1.113883.10.20.22.4.53">
    <ruleId>CONF:8993</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2MS8AhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-298</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MTjExSVEeGGzu7fmW9pXw">
    <ruleId>CONF-299</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MUKIBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-303</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MUxMBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>3.</ruleId>
    <ruleId>CONF:7967</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_npcu0BVfEeGQCvUGzi1kDQ" base_Class="_EuPloBVeEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.2">
    <ruleId>CONF:7965</ruleId>
    <ruleId>CONF:10399</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_wL6S8BqgEeGo461UQq-B1g" severity="WARNING">
    <ruleId>CONF:7969</ruleId>
    <ruleId>CONF:7970</ruleId>
  </CDA:PropertyValidation>
  <CDA:EntryRelationship xmi:id="_LhcR8BqnEeGo461UQq-B1g" severity="INFO" base_Association="_i7iGohU9EeGbmN_W114JUw" typeCode="REFR"/>
  <uml:Association xmi:id="_NdMEkRq1EeGo461UQq-B1g"/>
  <uml:Association xmi:id="_eLHCUhrUEeGo461UQq-B1g" memberEnd="_eLHCUxrUEeGo461UQq-B1g">
    <ownedEnd xmi:id="_eLHCUxrUEeGo461UQq-B1g" type="_2MAoIBSVEeGGzu7fmW9pXw" association="_eLHCUhrUEeGo461UQq-B1g"/>
  </uml:Association>
  <CDA:ConstraintValidation xmi:id="_kOty4CQ9EeG4DdjGPr5_Vg" base_Constraint="_aXWsMCQ9EeG4DdjGPr5_Vg">
    <ruleId>CONF:8858</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_qn9vwCREEeG4DdjGPr5_Vg" base_Generalization="_QPw2IBVgEeGQCvUGzi1kDQ"/>
  <CDA:CDATemplate xmi:id="_kl0fwCRHEeGPuMK8Qi-Gbg" base_Class="_2L7voBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.2.1">
    <ruleId>CONF:9015</ruleId>
    <ruleId>CONF:10400</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_--EbwEX6EeG6e5lG0YsSyQ" severity="WARNING" base_Constraint="_2MP4sxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:8832</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_GF72UEX7EeG6e5lG0YsSyQ" severity="WARNING" base_Constraint="_COIeUEX7EeG6e5lG0YsSyQ">
    <ruleId>CONF:8842</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_h5HCUEX7EeG6e5lG0YsSyQ" base_Constraint="_bnbB0EX7EeG6e5lG0YsSyQ">
    <ruleId>CONF:8851</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_5vDjwEX7EeG6e5lG0YsSyQ" base_Constraint="_vjGGEEX7EeG6e5lG0YsSyQ">
    <ruleId>CONF:8870</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VxKuMEX9EeG6e5lG0YsSyQ" severity="WARNING" base_Constraint="_STZm0EX9EeG6e5lG0YsSyQ">
    <ruleId>CONF:9008</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_a_bi0EX9EeG6e5lG0YsSyQ" severity="WARNING" base_Constraint="_Ww5s4EX9EeG6e5lG0YsSyQ">
    <ruleId>CONF:9009</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ipymcEX9EeG6e5lG0YsSyQ" severity="INFO" base_Constraint="_g1un0EX9EeG6e5lG0YsSyQ">
    <ruleId>CONF:9011</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2MV_VhSVEeGGzu7fmW9pXw" base_Class="_2MV_UBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.18">
    <ruleId>CONF:7924</ruleId>
    <ruleId>CONF:10434</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NHbYxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-34</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_WCTeUBUlEeGvPruliC3crg" base_Class="_PZBdMBUlEeGvPruliC3crg" templateId="2.16.840.1.113883.10.20.22.4.61">
    <ruleId>CONF:8900</ruleId>
    <ruleId>CONF:10516</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_HyrhcBUmEeGvPruliC3crg" base_Class="_Cg3pkBUmEeGvPruliC3crg" templateId="2.16.840.1.113883.10.20.22.4.60">
    <ruleId>CONF:8897</ruleId>
    <ruleId>CONF:10492</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_cVJrUBnZEeGs5a462vYX5Q" base_Class="_XUoXwBnZEeGs5a462vYX5Q" templateId="2.16.840.1.113883.10.20.1.19"/>
  <CDA:PropertyValidation xmi:id="_sHmwUDaJEeGUovy31cP2ng">
    <ruleId>CONF:8906</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_jeR44BnTEeGs5a462vYX5Q" base_Class="_2NP-QxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.10">
    <ruleId>CONF:10435</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2N0mCBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-484</ruleId>
  </CDA:ConstraintValidation>
  <CDA:TextValue xmi:id="_2NP-YBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-483</ruleId>
  </CDA:TextValue>
  <CDA:CDATemplate xmi:id="_2NWE8xSVEeGGzu7fmW9pXw" base_Class="_2NWE5xSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.39">
    <ruleId>CONF:8544.CONF:10510</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NWE9hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-488</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2NWE9xSVEeGGzu7fmW9pXw">
    <ruleId>CONF-491</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NWFEhSVEeGGzu7fmW9pXw" base_Class="_2NWFBBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.40">
    <ruleId>CONF:8566</ruleId>
    <ruleId>CONF:10511</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NcLghSVEeGGzu7fmW9pXw">
    <ruleId>CONF-488</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2NcLgxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-491</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NcLmhSVEeGGzu7fmW9pXw" base_Class="_2NcLjhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.25" assigningAuthorityName="">
    <ruleId>CONF:8583</ruleId>
    <ruleId>CONF:10512</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NcLnRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-490</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2NcLnhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-491</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NiSNhSVEeGGzu7fmW9pXw" base_Class="_2NiSKhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.41" assigningAuthorityName="">
    <ruleId>CONF:8570</ruleId>
    <ruleId>CONF:10513</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NiSORSVEeGGzu7fmW9pXw">
    <ruleId>CONF-488</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2NiSOhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-491</ruleId>
  </CDA:ConstraintValidation>
  <uml:Association xmi:id="_2NoY2xSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2NoYzxSVEeGGzu7fmW9pXw" base_Class="_2NoYwxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.1.25">
    <ruleId>CONF:8574</ruleId>
    <ruleId>CONF:10514</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NoY0hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-489</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NoY8BSVEeGGzu7fmW9pXw" base_Class="_2NoY5BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.43">
    <ruleId>CONF:8579</ruleId>
    <ruleId>CONF:10515</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NufYBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-489</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2NufYRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-491</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="__Lp9wCoMEeGHF88-qhhUMA">
    <ruleId>CONF:8564</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_F5fHsCoNEeGHF88-qhhUMA" identifier="2.16.840.1.113883.5.6" displayName="ENC"/>
  <CDA:CDATemplate xmi:id="_2OAzRhSVEeGGzu7fmW9pXw" base_Class="_2OAzQRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.7.1">
    <ruleId>CONF:10447</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2OfUaRSVEeGGzu7fmW9pXw" base_Constraint="_2OfUZxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:8021</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CodeSystemConstraint xmi:id="_2OAzTBSVEeGGzu7fmW9pXw" code="47519-4" displayName="History of procedures">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF-423</ruleId>
    <ruleId>CONF-424</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_2OAzUhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-422</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_LbH34BVfEeGQCvUGzi1kDQ" base_Class="_s9Ig4BVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.7" assigningAuthorityName="HL7">
    <ruleId>CONF:6271</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_PlWhYBg4EeGs5a462vYX5Q" base_Class="_Aj7JkBg4EeGs5a462vYX5Q" templateId="2.16.840.1.113883.10.20.22.4.13">
    <ruleId>CONF:10520</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_kpdNUBg4EeGs5a462vYX5Q" base_Class="_awdH4Bg4EeGs5a462vYX5Q" templateId="2.16.840.1.113883.10.20.22.4.12">
    <ruleId>CONF:10519</ruleId>
  </CDA:CDATemplate>
  <uml:Association xmi:id="_2OTHRBSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2OZNwhSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2OZNxxSVEeGGzu7fmW9pXw"/>
  <uml:Association xmi:id="_2ONAjBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2ONAgBSVEeGGzu7fmW9pXw" base_Class="_2OG58RSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.14" assigningAuthorityName="IHE PCC">
    <ruleId>CONF:7654</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2OZN2BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-442</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OZN3BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-447</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OZN4BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-435</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OZN5BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-436</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OZN6BSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-444</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2ONAhhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2ONAhxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2ONAiBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2ONAiRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2ONAihSVEeGGzu7fmW9pXw"/>
  <CDA:TextValue xmi:id="_2ONAghSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2ONAhRSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:EntryRelationship xmi:id="_2OTHRhSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2OTHRBSVEeGGzu7fmW9pXw" typeCode="RSON"/>
  <CDA:EntryRelationship xmi:id="_2OZNxBSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2OZNwhSVEeGGzu7fmW9pXw" typeCode="RSON"/>
  <CDA:EntryRelationship xmi:id="_2OZNyRSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2OZNxxSVEeGGzu7fmW9pXw" typeCode="SUBJ"/>
  <CDA:EntryRelationship xmi:id="_2ONAjhSVEeGGzu7fmW9pXw" severity="INFO" base_Association="_2ONAjBSVEeGGzu7fmW9pXw" typeCode="COMP"/>
  <CDA:ConstraintValidation xmi:id="_-LZhQBrPEeGxIZCGAXKxsQ" severity="WARNING" base_Constraint="_qGzKgBrPEeGxIZCGAXKxsQ">
    <ruleId>CONF:7657</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Q7LaIBrQEeGxIZCGAXKxsQ" severity="WARNING" base_Constraint="_N4ba0BrQEeGxIZCGAXKxsQ">
    <ruleId>CONF:7658</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_XSCZEBrREeGxIZCGAXKxsQ" severity="WARNING" base_Constraint="_WEQMwBrQEeGxIZCGAXKxsQ">
    <ruleId>CONF:7659</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Xu5UMBrREeGxIZCGAXKxsQ" base_Constraint="_SSUWwBrREeGxIZCGAXKxsQ">
    <ruleId>CONF:7660</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_xKCRsBxZEeGXP8PxDYviDg" base_Constraint="_t6LqgBxZEeGXP8PxDYviDg">
    <ruleId>CONF:8009</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_H8YoIBxaEeGXP8PxDYviDg" base_Constraint="_9s2SABxZEeGXP8PxDYviDg">
    <ruleId>CONF:7752</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_LXrqUBxaEeGXP8PxDYviDg" base_Constraint="_JHSVABxaEeGXP8PxDYviDg">
    <ruleId>CONF:7766</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_skkvMBxpEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_ilhFEBxpEeGXP8PxDYviDg">
    <ruleId>CONF:8294</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_vD-w4BxpEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_oGW3cBxpEeGXP8PxDYviDg">
    <ruleId>CONF:8295</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_xlcBABxpEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_rX9yIBxpEeGXP8PxDYviDg">
    <ruleId>CONF:8296</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_1T3akBxpEeGXP8PxDYviDg" base_Constraint="_0i4pkBxpEeGXP8PxDYviDg">
    <ruleId>CONF:8297</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_D6CH0BxsEeGXP8PxDYviDg" base_Constraint="_ATZYUBxsEeGXP8PxDYviDg">
    <ruleId>CONF:8316</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_IVsa0BxsEeGXP8PxDYviDg" base_Constraint="_C9KP4BxsEeGXP8PxDYviDg">
    <ruleId>CONF:8312</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_7D4KABxsEeGXP8PxDYviDg" base_Constraint="_5r5qcBxsEeGXP8PxDYviDg">
    <ruleId>CONF:7777</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="__lXYMBxsEeGXP8PxDYviDg" base_Constraint="_zFL1IBxsEeGXP8PxDYviDg">
    <ruleId>CONF:8324</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_E2CVsBxvEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_-WpQYBxuEeGXP8PxDYviDg">
    <ruleId>CONF:8241</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_k1et0BxvEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_gpDwsBxvEeGXP8PxDYviDg">
    <ruleId>CONF:8242</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_leEX0BxvEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_iKsikBxvEeGXP8PxDYviDg">
    <ruleId>CONF:8243</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_mGqB0BxvEeGXP8PxDYviDg" base_Constraint="_jzsgsBxvEeGXP8PxDYviDg">
    <ruleId>CONF:8244</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_s0jAsBxwEeGXP8PxDYviDg" base_Constraint="_oJm7kBxwEeGXP8PxDYviDg">
    <ruleId>CONF:8266</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_tPtSsBxwEeGXP8PxDYviDg" base_Constraint="_p26x8BxwEeGXP8PxDYviDg">
    <ruleId>CONF:8262</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_toQ8oBxwEeGXP8PxDYviDg" base_Constraint="_rOfo4BxwEeGXP8PxDYviDg">
    <ruleId>CONF:8274</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_kQwKwBxcEeGXP8PxDYviDg" base_Constraint="_fu9akBxcEeGXP8PxDYviDg">
    <ruleId>CONF:7720</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_raw6YBxcEeGXP8PxDYviDg" base_Constraint="_ofCJEBxcEeGXP8PxDYviDg">
    <ruleId>CONF:7722</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_MRlXsBxjEeGXP8PxDYviDg" base_Constraint="_IMfKkBxjEeGXP8PxDYviDg">
    <ruleId>CONF:7731</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_PIIuEBxjEeGXP8PxDYviDg" base_Constraint="_NG_8wBxjEeGXP8PxDYviDg">
    <ruleId>CONF:7732</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VfB-sBxjEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_Ss84oBxjEeGXP8PxDYviDg">
    <ruleId>CONF:7733</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_7UPQUBxjEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_X3E0IBxjEeGXP8PxDYviDg">
    <ruleId>CONF:7734</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_8d4Y8BxjEeGXP8PxDYviDg" severity="INFO" base_Constraint="_bkN0QBxjEeGXP8PxDYviDg">
    <ruleId>CONF:7735</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_9F5bMBxjEeGXP8PxDYviDg" base_Constraint="_cs-MEBxjEeGXP8PxDYviDg">
    <ruleId>CONF:7736</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_9ha5kBxjEeGXP8PxDYviDg" base_Constraint="_eFMjQBxjEeGXP8PxDYviDg">
    <ruleId>CONF:7737</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_6lQbgBxEEeGIELeDlfT77A" base_Class="_JIc0oBxEEeGIELeDlfT77A"/>
  <CDA:ConstraintValidation xmi:id="_uFpBsBxbEeGXP8PxDYviDg" base_Constraint="_qp5TkBxbEeGXP8PxDYviDg">
    <ruleId>CONF:7704</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_zgzC0BxbEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_wOrx0BxbEeGXP8PxDYviDg">
    <ruleId>CONF:7716</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_cLhVgDV1EeGaW4kr-GbV8Q" base_Class="_luQh8DVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.7.13">
    <ruleId>CONF:8038</ruleId>
    <ruleId>CONF:10473</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_hf3kADV1EeGaW4kr-GbV8Q" base_Class="_OA_Q0DVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.25">
    <ruleId>CONF:8066</ruleId>
    <ruleId>CONF:10380</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_kL-k8DV1EeGaW4kr-GbV8Q" base_Class="_R1OXcDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.37">
    <ruleId>CONF:8174</ruleId>
    <ruleId>CONF:10384</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_DIe5YDV2EeGaW4kr-GbV8Q" base_Class="_vHfXoDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.7.12">
    <ruleId>CONF:8030</ruleId>
    <ruleId>CONF:10463</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_FHJlgDV2EeGaW4kr-GbV8Q" base_Class="_zel6wDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.7.14">
    <ruleId>CONF:8034</ruleId>
    <ruleId>CONF:10464</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IFlFgDV2EeGaW4kr-GbV8Q" base_Class="_3b6E4DVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.30">
    <ruleId>CONF:8082</ruleId>
    <ruleId>CONF:10436</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_K5SjQDV2EeGaW4kr-GbV8Q" base_Class="_7UA-4DVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.35">
    <ruleId>CONF:8101</ruleId>
    <ruleId>CONF:10437</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_OjincDV2EeGaW4kr-GbV8Q" base_Class="_-jlSMDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.36">
    <ruleId>CONF:8167</ruleId>
    <ruleId>CONF:10438</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_Rt5DkDV2EeGaW4kr-GbV8Q" base_Class="_Cu6qMDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.34">
    <ruleId>CONF:8097</ruleId>
    <ruleId>CONF:10439</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_U67nUDV2EeGaW4kr-GbV8Q" base_Class="_HNUIIDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.27">
    <ruleId>CONF:8062</ruleId>
    <ruleId>CONF:10442</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_XD4Q0DV2EeGaW4kr-GbV8Q" base_Class="_QhXGYDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.18.2.12">
    <ruleId>CONF:8070</ruleId>
    <ruleId>CONF:10466</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_ZcBM4DV2EeGaW4kr-GbV8Q" base_Class="_TvcL8DVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.18.2.9">
    <ruleId>CONF:8074</ruleId>
    <ruleId>CONF:10467</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_cTJyEDV2EeGaW4kr-GbV8Q" base_Class="_W4UBYDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.28">
    <ruleId>CONF:8078</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_eDgVYDV2EeGaW4kr-GbV8Q" base_Class="_Z662wDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.40">
    <ruleId>CONF:8178</ruleId>
    <ruleId>CONF:10444</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_f1f3cDV2EeGaW4kr-GbV8Q" base_Class="_cjmJMDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.29">
    <ruleId>CONF:8058</ruleId>
    <ruleId>CONF:10445</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_ifYDwDV2EeGaW4kr-GbV8Q" base_Class="_gSUdsDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.31">
    <ruleId>CONF:8086</ruleId>
    <ruleId>CONF:10446</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_PPoZMEEuEeGdmoWy_aLP0Q" base_Constraint="_MAXA0EEuEeGdmoWy_aLP0Q">
    <ruleId>CONF:8054</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_vBBKYEEyEeGdmoWy_aLP0Q" base_Generalization="_W4UBYTVzEeGaW4kr-GbV8Q"/>
  <CDA:CDATemplate xmi:id="_7RNbkEEwEeGdmoWy_aLP0Q" base_Class="_0baBYEEwEeGdmoWy_aLP0Q" templateId="2.16.840.1.113883.10.20.22.4.65"/>
  <CDA:CDATemplate xmi:id="_ckEjYEExEeGdmoWy_aLP0Q" base_Class="_0fjXAEEvEeGdmoWy_aLP0Q" templateId="2.16.840.1.113883.10.20.22.4.51"/>
  <CDA:CDATemplate xmi:id="_2OfUeBSVEeGGzu7fmW9pXw" base_Class="_2OfUcxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.4.1">
    <ruleId>CONF:7273</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2PD8JhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-385</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OfUeRSVEeGGzu7fmW9pXw">
    <ruleId>C83-[CT-119-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:TextValue xmi:id="_2OlbARSVEeGGzu7fmW9pXw">
    <ruleId>CONF-384</ruleId>
  </CDA:TextValue>
  <CDA:CDATemplate xmi:id="_4L3_UBVfEeGQCvUGzi1kDQ" base_Class="_bRH8sBVeEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.4">
    <ruleId>CONF:7268</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_shioIBneEeGs5a462vYX5Q" base_Class="_2OrhsRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.27">
    <ruleId>CONF:10527</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2OxoZRSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-413</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OxoaRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-415</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OxobRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-417</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OxocBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-419</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O3u4hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-420</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O3u5RSVEeGGzu7fmW9pXw">
    <ruleId>CONF-421</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OxoQBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_vIk70BneEeGs5a462vYX5Q" base_Class="_2OlbCRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.26">
    <ruleId>CONF:10528</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2O91hRSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-398</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91iRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-400</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91jRSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-401</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91kBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-402</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91lBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-403</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91mBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-404</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91nxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-387</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OrhoBSVEeGGzu7fmW9pXw">
    <ruleId>6.3.4.21.3</ruleId>
  </CDA:ConstraintValidation>
  <CDA:TextValue xmi:id="__bdqYBwhEeG_RY8fzJjtMw"/>
  <CDA:PropertyValidation xmi:id="_BKszYBwiEeG_RY8fzJjtMw" severity="WARNING">
    <ruleId>CONF:7271</ruleId>
    <ruleId>CONF:7272</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_2Pxt8xSVEeGGzu7fmW9pXw" base_Class="_2Pxt6xSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.2.5" assigningAuthorityName="HL7">
    <ruleId>CONF:10457</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_ZHedIBnTEeGs5a462vYX5Q" base_Class="_2Pxt0hSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.2.10" assigningAuthorityName="HL7">
    <ruleId>CONF:10465</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2Pxt3RSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_TYymkBnUEeGs5a462vYX5Q" base_Class="_2RqkMBSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.18">
    <ruleId>CONF:10469</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_yJUwEBkaEeGs5a462vYX5Q" base_Class="_2Uz-4xSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.33">
    <ruleId>CONF:10455</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_lhObMCUPEeGiOPpZVnfEJA" base_Class="_hD-z0CUPEeGiOPpZVnfEJA" templateId="2.16.840.1.113883.10.20.22.4.35" assigningAuthorityName="HL7"/>
  <CDA:CDATemplate xmi:id="_55YpcBnSEeGs5a462vYX5Q" base_Class="_2RqkOxSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.5" assigningAuthorityName="HL7">
    <ruleId>CONF:10459</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_OJL6kCULEeGiOPpZVnfEJA" base_Class="_KtwVgCULEeGiOPpZVnfEJA" templateId="2.16.840.1.113883.10.20.22.4.33" assigningAuthorityName="HL7"/>
  <CDA:CDATemplate xmi:id="_41cG4BnXEeGs5a462vYX5Q" base_Class="_2PidURSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.24" assigningAuthorityName="HL7">
    <ruleId>CONF:7979</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_onB14CUMEeGiOPpZVnfEJA" base_Class="_lBergCUMEeGiOPpZVnfEJA" templateId="2.16.840.1.113883.10.20.22.2.41" assigningAuthorityName="HL7">
    <ruleId>CONF:10395</ruleId>
  </CDA:CDATemplate>
  <CDA:ClassValidation xmi:id="_fQfngCUQEeGiOPpZVnfEJA" base_Class="_TytVkCUQEeGiOPpZVnfEJA">
    <ruleId>CONF:10397</ruleId>
  </CDA:ClassValidation>
  <CDA:CDATemplate xmi:id="_gKw3YCUQEeGiOPpZVnfEJA" base_Class="_TytVkCUQEeGiOPpZVnfEJA" templateId="2.16.840.1.113883.10.20.22.2.11.1" assigningAuthorityName="HL7"/>
  <CDA:CDATemplate xmi:id="__7eHsBnSEeGs5a462vYX5Q" base_Class="_2Poj7RSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.11" assigningAuthorityName="HL7">
    <ruleId>CONF:10396</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_Z5_VgCUTEeGiOPpZVnfEJA" base_Class="_WikGsCUTEeGiOPpZVnfEJA" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.26" assigningAuthorityName="HL7">
    <ruleId>CONF:10460</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_6g_c4CUTEeGiOPpZVnfEJA" base_Class="_38AXoCUTEeGiOPpZVnfEJA" templateId="2.16.840.1.113883.10.20.22.2.16" assigningAuthorityName="HL7">
    <ruleId>CONF:10398</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_mE0V4DV1EeGaW4kr-GbV8Q" base_Class="_WPTWEDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.6.1.1">
    <ruleId>CONF:8525</ruleId>
    <ruleId>CONF:10454</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_psFXgDV1EeGaW4kr-GbV8Q" base_Class="_ZcC-4DVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.6.1.2">
    <ruleId>CONF:8531</ruleId>
    <ruleId>CONF:10456</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_On_EEEVEEeGAh_iQGJvI5w" base_Class="_H1UdcEVEEeGAh_iQGJvI5w" templateId="2.16.840.1.113883.10.20.6.2.1">
    <ruleId>CONF:8423</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_s48Y0Eb_EeGp67IkyTw1fg" base_Class="_pmiz8Eb_EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.13"/>
  <CDA:CDATemplate xmi:id="_LY8_gEb1EeGp67IkyTw1fg" base_Class="_H_izsEb1EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.2">
    <ruleId>CONF:8440</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_fLTHoEcAEeGp67IkyTw1fg" base_Class="_crHC0EcAEeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.5"/>
  <CDA:CDATemplate xmi:id="_s-z3oEb8EeGp67IkyTw1fg" base_Class="_J-F8UEb7EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.9">
    <ruleId>CONF:9266</ruleId>
    <ruleId>CONF:10531</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_SaY2YEb_EeGp67IkyTw1fg" base_Class="_Px2t4Eb_EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.14"/>
  <CDA:CDATemplate xmi:id="_3twtoEb8EeGp67IkyTw1fg" base_Class="_1Zyf4Eb8EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.10"/>
  <CDA:CDATemplate xmi:id="_O_B8EEb6EeGp67IkyTw1fg" base_Class="_N2wscEb6EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.22.4.63"/>
  <CDA:CDATemplate xmi:id="_AKJ9EEb7EeGp67IkyTw1fg" base_Class="_9o7WcEb6EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.8"/>
  <CDA:CDATemplate xmi:id="_xF17QEb4EeGp67IkyTw1fg" base_Class="_vjf-wEb4EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.6">
    <ruleId>CONF:10533</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_AByucEb_EeGp67IkyTw1fg" base_Class="_9xjKIEb-EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.12"/>
  <CDA:CDATemplate xmi:id="__So0UEb8EeGp67IkyTw1fg" base_Class="_9Yv6gEb8EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.11"/>
  <Ecore:EPackage xmi:id="_o72f4GknEeGCCOsAP2C6Nw" base_Package="_2B30sBSVEeGGzu7fmW9pXw" packageName="consol" nsPrefix="consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/consol" basePackage="org.openhealthtools.mdht.uml.cda" prefix="Consol"/>
  <Ecore:EClass xmi:id="_o74VEGknEeGCCOsAP2C6Nw" base_Class="_2DNRcBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.1.1' constraints.validation.error='GeneralHeaderConstraintsTemplateId GeneralHeaderConstraintsUSRealmAddress GeneralHeaderConstraintsUSRealmPatientName GeneralHeaderConstraintsRealmCode GeneralHeaderConstraintsTypeId GeneralHeaderConstraintsId GeneralHeaderConstraintsCode GeneralHeaderConstraintsTitle GeneralHeaderConstraintsEffectiveTime GeneralHeaderConstraintsConfidentialityCode GeneralHeaderConstraintsLanguageCode GeneralHeaderConstraintsAuthor GeneralHeaderConstraintsCustodian GeneralHeaderConstraintsRecordTarget GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName GeneralHeaderConstraintsAuthorAssignedAuthorPersonName GeneralHeaderConstraintsAuthorAssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice GeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier GeneralHeaderConstraintsAuthorAssignedAuthorAddr GeneralHeaderConstraintsAuthorAssignedAuthorId GeneralHeaderConstraintsAuthorAssignedAuthorTelecom GeneralHeaderConstraintsAuthorAssignedAuthor GeneralHeaderConstraintsDataEntererAssignedEntityPersonName GeneralHeaderConstraintsDataEntererAssignedEntityAddr GeneralHeaderConstraintsDataEntererAssignedEntityId GeneralHeaderConstraintsDataEntererAssignedEntityTelecom GeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson GeneralHeaderConstraintsDataEntererAssignedEntity GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom GeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization GeneralHeaderConstraintsCustodianAssignedCustodian GeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName GeneralHeaderConstraintsInformationRecipientIntendedRecipientPersonName GeneralHeaderConstraintsInformationRecipientIntendedRecipient GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityPersonName GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson GeneralHeaderConstraintsLegalAuthenticatorTime GeneralHeaderConstraintsLegalAuthenticatorSignatureCode GeneralHeaderConstraintsAuthenticatorAssignedEntityPersonName GeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsAuthenticatorAssignedEntityAddr GeneralHeaderConstraintsAuthenticatorAssignedEntityId GeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom GeneralHeaderConstraintsAuthenticatorTime GeneralHeaderConstraintsAuthenticatorSignatureCode GeneralHeaderConstraintsAuthenticatorAssignedEntity GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianPersonName GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToYear GeneralHeaderConstraintsRecordTargetPatientRolePatientName GeneralHeaderConstraintsRecordTargetPatientRoleAddr GeneralHeaderConstraintsRecordTargetPatientRoleId GeneralHeaderConstraintsRecordTargetPatientRoleTelecom GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime GeneralHeaderConstraintsComponentOfEncompassingEncounterId GeneralHeaderConstraintsComponentOfEncompassingEncounter GeneralHeaderConstraintsInformantRelatedEntityPersonName GeneralHeaderConstraintsInformantRelatedEntityPerson GeneralHeaderConstraintsInformantAssignedEntityPersonName GeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsInformantAssignedEntityCode GeneralHeaderConstraintsInformantAssignedEntityPerson GeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity GeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization GeneralHeaderConstraintsInFulfillmentOfOrderId GeneralHeaderConstraintsInFulfillmentOfOrder' confidentialityCode.codeSystemName='ConfidentialityCode' constraints.validation.warning='GeneralHeaderConstraintsLegalAuthenticator GeneralHeaderConstraintsAuthorAssignedAuthorCode GeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsDataEntererAssignedEntityCode GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTimePreciseToDay GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsInformantRelatedEntityAddr GeneralHeaderConstraintsInformantAssignedEntityAddr GeneralHeaderConstraintsInformantAssignedEntityId' realmCode.code='US' confidentialityCode.codeSystem='2.16.840.1.113883.5.25' constraints.validation.query='GeneralHeaderConstraintsUSRealmAddress GeneralHeaderConstraintsUSRealmPatientName' constraints.validation.info='GeneralHeaderConstraintsSetId GeneralHeaderConstraintsVersionNumber GeneralHeaderConstraintsDataEnterer GeneralHeaderConstraintsInformationRecipient GeneralHeaderConstraintsAuthenticator GeneralHeaderConstraintsComponentOf GeneralHeaderConstraintsInformant GeneralHeaderConstraintsSupportParticipant GeneralHeaderConstraintsInFulfillmentOf GeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient GeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization GeneralHeaderConstraintsAuthenticatorAssignedEntityCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace GeneralHeaderConstraintsParticipantSupportTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTarget constraints.validation.error='RecordTargetPatientRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRole constraints.validation.error='PatientRoleAddr PatientRoleId PatientRoleTelecom PatientRolePatient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRolePatient maritalStatusCode.codeSystemName='MaritalStatus' constraints.validation.error='PatientBirthTimePreciseToYear PatientBirthTime PatientName' constraints.validation.warning='PatientBirthTimePreciseToDay PatientMaritalStatusCode PatientLanguageCommunication' maritalStatusCode.codeSystem='2.16.840.1.113883.5.2' constraints.validation.info='PatientEthnicGroupCode PatientRaceCode PatientReligiousAffiliationCode PatientGuardian PatientBirthplace'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian code.codeSystem='2.16.840.1.113883.5.111' constraints.validation.error='GuardianGuardianPerson' code.codeSystemName='RoleCode' constraints.validation.warning='GuardianAddr GuardianCode' constraints.validation.info='GuardianTelecom'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication proficiencyLevelCode.codeSystem='2.16.840.1.113883.5.61' constraints.validation.error='LanguageCommunicationLanguageCode LanguageCommunicationProficiencyLevelCode LanguageCommunicationModeCode' modeCode.codeSystem='2.16.840.1.113883.5.60' proficiencyLevelCode.codeSystemName='LanguageAbilityProficiency' constraints.validation.info='LanguageCommunicationPreferenceInd' modeCode.codeSystemName='LanguageAbilityMode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace constraints.validation.error='BirthplacePlace'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace constraints.validation.error='PlaceAddr'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganization constraints.validation.error='ProviderOrganizationAddr ProviderOrganizationId ProviderOrganizationName ProviderOrganizationTelecom' constraints.validation.warning='ProviderOrganizationHasNationalProviderIdentifier'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsComponentOf constraints.validation.error='ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsComponentOfEncompassingEncounter constraints.validation.error='EncompassingEncounterEffectiveTime EncompassingEncounterId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthor constraints.validation.error='AuthorAssignedAuthor'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthorAssignedAuthor constraints.validation.error='AssignedAuthorHasAssignedPersonOrAssignedAuthoringDevice AssignedAuthorHasNationalProviderIdentifier AssignedAuthorAddr AssignedAuthorId AssignedAuthorTelecom' constraints.validation.warning='AssignedAuthorCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDevice constraints.validation.error='AuthoringDeviceManufacturerModelName AuthoringDeviceSoftwareName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsPerson constraints.validation.error='PersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsDataEnterer constraints.validation.error='DataEntererAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsDataEntererAssignedEntity code.codeSystem='2.16.840.1.113883.6.101' constraints.validation.error='AssignedEntityAddr AssignedEntityId AssignedEntityTelecom AssignedEntityAssignedPerson' code.codeSystemName='NUCCHealthCareProviderTaxonomy' constraints.validation.warning='AssignedEntityHasNationalProviderIdentifier AssignedEntityCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsCustodian constraints.validation.error='CustodianAssignedCustodian'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsCustodianAssignedCustodian constraints.validation.error='AssignedCustodianRepresentedCustodianOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganization constraints.validation.error='CustodianOrganizationHasNationalProviderIdentifier CustodianOrganizationAddr CustodianOrganizationId CustodianOrganizationName CustodianOrganizationTelecom'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformationRecipient constraints.validation.error='InformationRecipientIntendedRecipient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformationRecipientIntendedRecipient constraints.validation.info='IntendedRecipientInformationRecipient IntendedRecipientRecievedOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganization constraints.validation.error='OrganizationName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsLegalAuthenticator constraints.validation.error='LegalAuthenticatorTime LegalAuthenticatorSignatureCode' signatureCode.code='S'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsLegalAuthenticatorAssignedEntity code.codeSystem='2.16.840.1.113883.6.101' constraints.validation.error='AssignedEntityHasNationalProviderIdentifier AssignedEntityAddr AssignedEntityId AssignedEntityTelecom AssignedEntityAssignedPerson' code.codeSystemName='NUCCHealthCareProviderTaxonomy' constraints.validation.warning='AssignedEntityCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthenticator constraints.validation.error='AuthenticatorTime AuthenticatorSignatureCode AuthenticatorAssignedEntity' signatureCode.code='S'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthenticatorAssignedEntity constraints.validation.error='AssignedEntityHasNationalProviderIdentifier AssignedEntityAddr AssignedEntityId AssignedEntityTelecom' constraints.validation.info='AssignedEntityCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformant constraints.validation.error='InformantHasAssignedEntityOrRelatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformantAssignedEntity code.codeSystem='2.16.840.1.113883.6.101' constraints.validation.error='AssignedEntityHasNationalProviderIdentifier AssignedEntityCode AssignedEntityPerson' code.codeSystemName='NUCCHealthCareProviderTaxonomy' constraints.validation.warning='AssignedEntityAddr AssignedEntityId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformantRelatedEntity constraints.validation.error='RelatedEntityPerson' constraints.validation.warning='RelatedEntityAddr'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsParticipantSupport constraints.validation.error='ParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization' constraints.validation.info='ParticipantSupportTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInFulfillmentOf constraints.validation.error='InFulfillmentOfOrder'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInFulfillmentOfOrder constraints.validation.error='OrderId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_o9uvMGknEeGCCOsAP2C6Nw" base_Class="_2EAisBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Allergies, adverse reactions, alerts' templateId.root='2.16.840.1.113883.10.20.22.4.30' constraints.validation.error='AllergyProblemActTemplateId AllergyProblemActEffectiveTimeLow AllergyProblemActEffectiveTimeHigh AllergyProblemActClassCode AllergyProblemActMoodCode AllergyProblemActId AllergyProblemActCode AllergyProblemActStatusCode AllergyProblemActEffectiveTime AllergyProblemActAllergyObservation' code.codeSystemName='LOINC' classCode='ACT' code.code='48765-2' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_o97jgGknEeGCCOsAP2C6Nw" base_Class="_2EaLUBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.5.4' templateId.root='2.16.840.1.113883.10.20.22.4.7' constraints.validation.error='AllergyObservationTemplateId AllergyObservationAllergyStatusInversionIndicator AllergyObservationReactionInversionIndicator AllergyObservationSeverityInversionIndicator AllergyObservationClassCode AllergyObservationMoodCode AllergyObservationId AllergyObservationCode AllergyObservationStatusCode AllergyObservationEffectiveTime AllergyObservationValue AllergyObservationSeverity' code.codeSystemName='HL7ActCode' classCode='OBS' constraints.validation.warning='AllergyObservationProblemEntryReactionObservationContainer AllergyObservationParticipant' code.code='ASSERTION' moodCode='EVN' constraints.validation.info='AllergyObservationAllergyStatusObservation' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_o-QToGknEeGCCOsAP2C6Nw" base_Class="_2EqqABSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' code.displayName='Age At Onset' templateId.root='2.16.840.1.113883.10.20.22.4.31' constraints.validation.error='AgeObservationTemplateId AgeObservationClassCode AgeObservationMoodCode AgeObservationCode AgeObservationStatusCode AgeObservationValue' code.codeSystemName='SNOMEDCT' classCode='OBS' code.code='445518008' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_o-arsGknEeGCCOsAP2C6Nw" base_Class="_2ExXsBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Health status' templateId.root='2.16.840.1.113883.10.20.22.4.5' constraints.validation.error='HealthStatusObservationTemplateId HealthStatusObservationHasTextReference HealthStatusObservationHasTextReferenceValue HealthStatusObservationClassCode HealthStatusObservationMoodCode HealthStatusObservationCode HealthStatusObservationStatusCode HealthStatusObservationValue' code.codeSystemName='LOINC' constraints.validation.warning='HealthStatusObservationText' classCode='OBS' code.code='11323-3' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_o-ouIGknEeGCCOsAP2C6Nw" base_Class="_2E_aIRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' statusCode.code='completed' templateId.root='2.16.840.1.113883.10.20.22.4.9' constraints.validation.error='ReactionObservationTemplateId ReactionObservationReferenceValue ReactionObservationSeverityObservationInversionInd ReactionObservationProcedureActivityProcedureInversionInd ReactionObservationMedicationActivityInversionInd ReactionObservationClassCode ReactionObservationMoodCode ReactionObservationId ReactionObservationCode ReactionObservationStatusCode ReactionObservationValue' classCode='OBS' constraints.validation.warning='ReactionObservationTextReference ReactionObservationEffectiveTimeLow ReactionObservationEffectiveTimeHigh ReactionObservationText ReactionObservationEffectiveTime ReactionObservationSeverityObservation' moodCode='EVN' constraints.validation.info='ReactionObservationProcedureActivityProcedure ReactionObservationMedicationActivity' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_o-8QIGknEeGCCOsAP2C6Nw" base_Class="_2FGu4hSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.5.4' code.displayName='Severity observation' templateId.root='2.16.840.1.113883.10.20.22.4.8' constraints.validation.error='SeverityObservationTemplateId SeverityObservationReferenceValue SeverityObservationClassCode SeverityObservationMoodCode SeverityObservationCode SeverityObservationStatusCode SeverityObservationValue' code.codeSystemName='HL7ActCode' classCode='OBS' constraints.validation.warning='SeverityObservationTextReference SeverityObservationText' code.code='SEV' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_o_Mu0WknEeGCCOsAP2C6Nw" base_Class="_2FRuAhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.4.28' code.displayName='Status' constraints.validation.error='AllergyStatusObservationTemplateId AllergyStatusObservationClassCode AllergyStatusObservationMoodCode AllergyStatusObservationCode AllergyStatusObservationStatusCode AllergyStatusObservationValue' code.codeSystemName='LOINC' classCode='OBS' code.code='33999-4' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_o_Xt8GknEeGCCOsAP2C6Nw" base_Class="_2FhloBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.4.64' code.displayName='Annotation comment' constraints.validation.error='CommentActivityTemplateId CommentActivityHasTextReference CommentActivityEffectiveTimeWhenAuthorPresent CommentActivityHasAuthorId CommentActivityHasAuthorOrganization CommentActivityClassCode CommentActivityMoodCode CommentActivityCode CommentActivityText CommentActivityStatusCode CommentActivityAuthor' code.codeSystemName='LOINC' classCode='ACT' code.code='48767-8' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_o_ozsGknEeGCCOsAP2C6Nw" base_Class="_2GHbgBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.16' constraints.validation.error='MedicationActivityTemplateId MedicationActivityEffectiveTimeIVLTS MedicationActivityDrugVehicleTypeCode MedicationActivityInstructionsInversionInd MedicationActivityPreconditionSubstanceAdmTypeCode MedicationActivityClassCode MedicationActivityId MedicationActivityStatusCode MedicationActivityConsumable' classCode='SBADM' constraints.validation.warning='MedicationActivityDoseQuantityorrateQuantity MedicationActivityTextReference MedicationActivityEffectiveTimePIVLTS MedicationActivityDoseQuantityUnit MedicationActivityDoseQuantity MedicationActivityText' moodCode.codeSystem='2.16.840.1.113883.5.1001' constraints.validation.info='MedicationActivityCode MedicationActivityRouteCode MedicationActivityApproachSiteCode MedicationActivityRateQuantity MedicationActivityMaxDoseQuantity MedicationActivityAdministrationUnitCode MedicationActivityRepeatNumber MedicationActivityMedicationSupplyOrder MedicationActivityReactionObservation MedicationActivityPerformer MedicationActivityInstructions MedicationActivityIndication MedicationActivityMedicationDispense MedicationActivityPrecondition MedicationActivityDrugVehicle' moodCode.codeSystemName='HL7ActMood'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pAJKAGknEeGCCOsAP2C6Nw" base_Class="_2G2bUxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.37' constraints.validation.error='ProductInstanceTemplateId ProductInstanceClassCode ProductInstanceId ProductInstanceScopingEntity ProductInstancePlayingDevice ProductInstanceScopingEntityId' constraints.validation.warning='ProductInstancePlayingDeviceCode' classCode='MANU'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProductInstanceScopingEntity constraints.validation.error='ScopingEntityId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProductInstancePlayingDevice constraints.validation.warning='PlayingDeviceCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pAPQoGknEeGCCOsAP2C6Nw" base_Class="_2G8h9RSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' templateId.root='2.16.840.1.113883.10.20.22.4.20' constraints.validation.error='InstructionsTemplateId InstructionsTextReferenceValue InstructionsClassCode InstructionsMoodCode InstructionsStatusCode' classCode='ACT' constraints.validation.warning='InstructionsTextReference InstructionsText' moodCode='INT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pAaPwGknEeGCCOsAP2C6Nw" base_Class="_2HIvMBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.50' constraints.validation.error='NonMedicinalSupplyActivityTemplateId NonMedicinalSupplyActivityProductInstanceTypeCode NonMedicinalSupplyActivityClassCode NonMedicinalSupplyActivityId NonMedicinalSupplyActivityStatusCode NonMedicinalSupplyActivityProductInstance' constraints.validation.warning='NonMedicinalSupplyActivityEffectiveTime NonMedicinalSupplyActivityQuantity' classCode='SPLY' moodCode.codeSystem='2.16.840.1.113883.5.1001' moodCode.codeSystemName='HL7ActMood'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pAnEEGknEeGCCOsAP2C6Nw" base_Class="_2H6yUBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.5.6' code.displayName='Concern' templateId.root='2.16.840.1.113883.10.20.22.4.3' constraints.validation.error='ProblemConcernActTemplateId ProblemConcernActEffectiveTimeLow ProblemConcernActClassCode ProblemConcernActMoodCode ProblemConcernActId ProblemConcernActCode ProblemConcernActStatusCode ProblemConcernActEffectiveTime ProblemConcernActProblemObservation' code.codeSystemName='HL7ActClass' constraints.validation.warning='ProblemConcernActEffectiveTimeHigh' classCode='ACT' code.code='CONC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_pAyDMGknEeGCCOsAP2C6Nw" base_Generalization="_2PQJchSVEeGGzu7fmW9pXw"/>
  <Ecore:EClass xmi:id="_pAzRUGknEeGCCOsAP2C6Nw" base_Class="_2IJb0BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.1.2' code.displayName='Summarization of Episode Note' constraints.validation.error='ContinuityOfCareDocumentTemplateId GeneralHeaderConstraintsCode ContinuityOfCareDocumentLanguageCode ContinuityOfCareDocumentDocumentationOf ContinuityOfCareDocumentAuthor ContinuityOfCareDocumentAllergiesSection ContinuityOfCareDocumentMedicationsSection ContinuityOfCareDocumentProblemSection ContinuityOfCareDocumentResultsSection ContinuityOfCareDocumentDocumentationOfServiceEvent3PerformerAssignedEntityId ContinuityOfCareDocumentDocumentationOfServiceEvent3PerformerTypeCode ContinuityOfCareDocumentDocumentationOfServiceEvent3EffectiveTimeLow ContinuityOfCareDocumentDocumentationOfServiceEvent3EffectiveTimeHigh ContinuityOfCareDocumentDocumentationOfServiceEvent3ClassCode ContinuityOfCareDocumentDocumentationOfServiceEvent3EffectiveTime ContinuityOfCareDocumentDocumentationOfServiceEvent ContinuityOfCareDocumentAuthorAssignedAuthor3' code.codeSystemName='LOINC' constraints.validation.warning='ContinuityOfCareDocumentProceduresSection ContinuityOfCareDocumentDocumentationOfServiceEvent3PerformerAssignedEntityHasNationalProviderIdentifier ContinuityOfCareDocumentDocumentationOfServiceEvent3Performer' code.code='34133-9' constraints.validation.info='ContinuityOfCareDocumentAdvanceDirectivesSection ContinuityOfCareDocumentEncountersSection ContinuityOfCareDocumentFamilyHistorySection ContinuityOfCareDocumentFunctionalStatusSection ContinuityOfCareDocumentImmunizationsSectionEntriesOptional ContinuityOfCareDocumentMedicalEquipmentSection ContinuityOfCareDocumentPayersSection ContinuityOfCareDocumentPlanOfCareSection ContinuityOfCareDocumentSocialHistorySection ContinuityOfCareDocumentVitalSignsSectionEntriesOptional ContinuityOfCareDocumentDocumentationOfServiceEvent3PerformerAssignedEntityCode ContinuityOfCareDocumentDocumentationOfServiceEvent3PerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocumentDocumentationOf constraints.validation.error='DocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocumentDocumentationOfServiceEvent3 constraints.validation.error='ServiceEvent3EffectiveTimeLow ServiceEvent3EffectiveTimeHigh ServiceEvent3ClassCode ServiceEvent3EffectiveTime' constraints.validation.warning='ServiceEvent3Performer' classCode='PCPR'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocumentDocumentationOfServiceEvent3Performer constraints.validation.error='PerformerTypeCode' typeCode='PRF' constraints.validation.info='PerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocumentDocumentationOfServiceEvent3PerformerAssignedEntity constraints.validation.error='AssignedEntityId' constraints.validation.warning='AssignedEntityHasNationalProviderIdentifier' constraints.validation.info='AssignedEntityCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocumentAuthor constraints.validation.error='AuthorAssignedAuthor3'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pBB60GknEeGCCOsAP2C6Nw" base_Class="_2IWQIxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Family History' templateId.root='2.16.840.1.113883.10.20.22.2.15' constraints.validation.error='FamilyHistorySectionTemplateId FamilyHistorySectionCode FamilyHistorySectionTitle FamilyHistorySectionText' code.codeSystemName='LOINC' code.code='10157-6' constraints.validation.info='FamilyHistorySectionFamilyHistory'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pBIogWknEeGCCOsAP2C6Nw" base_Class="_2IbIoBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.45' constraints.validation.error='FamilyHistoryOrganizerTemplateId FamilyHistoryOrganizerClassCode FamilyHistoryOrganizerMoodCode FamilyHistoryOrganizerFamilyHistoryObservation FamilyHistoryOrganizerSubject' classCode='CLUSTER' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pBM58GknEeGCCOsAP2C6Nw" base_Class="_2IpyIxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.46' constraints.validation.error='FamilyHistoryObservationTemplateId FamilyHistoryObservationAgeObservationInversion FamilyHistoryObservationClassCode FamilyHistoryObservationMoodCode FamilyHistoryObservationId FamilyHistoryObservationCode FamilyHistoryObservationStatusCode FamilyHistoryObservationValue' code.codeSystemName='SNOMEDCT' constraints.validation.warning='FamilyHistoryObservationEffectiveTime' classCode='OBS' moodCode='EVN' constraints.validation.info='FamilyHistoryObservationAgeObservation FamilyHistoryObservationFamilyHistoryDeathObservation' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pBd_sGknEeGCCOsAP2C6Nw" base_Class="_2JKvgBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.17' code.displayName='Social history' constraints.validation.error='SocialHistorySectionTemplateId SocialHistorySectionCode SocialHistorySectionTitle SocialHistorySectionText' code.codeSystemName='LOINC' code.code='29762-2' constraints.validation.info='SocialHistorySectionSocialHistoryObservation SocialHistorySectionPregnancyObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pBlUcGknEeGCCOsAP2C6Nw" base_Class="_2JOZ4BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.38' constraints.validation.error='SocialHistoryObservationTemplateId SocialHistoryObservationReferenceValue SocialHistoryObservationClassCode SocialHistoryObservationMoodCode SocialHistoryObservationId SocialHistoryObservationStatusCode' code.codeSystemName='SNOMEDCT' constraints.validation.warning='SocialHistoryObservationOriginalText SocialHistoryObservationReference SocialHistoryObservationCode SocialHistoryObservationValue' classCode='OBS' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_pC14sGknEeGCCOsAP2C6Nw" base_Generalization="_ksO6UBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_pC3G0GknEeGCCOsAP2C6Nw" base_Class="_2Js7AxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Relevant diagnostic tests and/or laboratory data' templateId.root='2.16.840.1.113883.10.20.22.2.3.1' constraints.validation.error='ResultsSectionTemplateId ResultsSectionEntriesOptionalCode ResultsSectionTitle ResultsSectionText ResultsSectionResultOrganizer' code.codeSystemName='LOINC' code.code='30954-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pC9NcGknEeGCCOsAP2C6Nw" base_Class="_2JxzgBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation moodCode.displayName='Event' statusCode.code='completed' templateId.root='2.16.840.1.113883.10.20.22.4.1' constraints.validation.error='ResultOrganizerTemplateId ResultOrganizerId ResultOrganizerStatusCode ResultOrganizerCode ResultOrganizerResultObservation' moodCode.code='EVN' classCode.codeSystem='2.16.840.1.113883.5.6' constraints.validation.warning='ResultOrganizerCodeValue ResultOrganizerClassCodeValue' classCode.codeSystemName='HL7ActClass' moodCode.codeSystem='2.16.840.1.113883.5.1001' classCode.code='' moodCode.codeSystemName='HL7ActMood'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pDIzoGknEeGCCOsAP2C6Nw" base_Class="_2J1d4BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation moodCode.displayName='Event' templateId.root='2.16.840.1.113883.10.20.22.4.2' classCode.displayName='Observation' constraints.validation.error='ResultObservationTemplateId ResultObservationTextReferenceValue ResultObservationNoObservationRangeCode ResultObservationId ResultObservationCode ResultObservationStatusCode ResultObservationEffectiveTime ResultObservationValue' classCode.codeSystem='2.16.840.1.113883.5.6' constraints.validation.info='ResultObservationAuthorMultiplicity ResultObservationMethodCode ResultObservationTargetSiteCode' statusCode.code='completed' moodCode.code='EVN' constraints.validation.warning='ResultObservationTextReference ResultObservationCodeValue ResultObservationText ResultObservationInterpretationCode' classCode.codeSystemName='HL7ActClass' moodCode.codeSystem='2.16.840.1.113883.5.1001' classCode.code='OBS' moodCode.codeSystemName='HL7ActMood'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pDc8sGknEeGCCOsAP2C6Nw" base_Class="_2KEucBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Medical Equipment' templateId.root='2.16.840.1.113883.10.20.22.2.23' constraints.validation.error='MedicalEquipmentSectionTemplateId MedicalEquipmentSectionCode MedicalEquipmentSectionTitle MedicalEquipmentSectionText' code.codeSystemName='LOINC' constraints.validation.warning='MedicalEquipmentSectionNonMedicinalSupplyActivity' code.code='46264-8'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pDkRcGknEeGCCOsAP2C6Nw" base_Class="_2KKOBhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.14' code.displayName='Functional status assessment' constraints.validation.error='FunctionalStatusSectionTemplateId FunctionalStatusSectionCode FunctionalStatusSectionTitle FunctionalStatusSectionText' code.codeSystemName='LOINC' code.code='47420-5' constraints.validation.info='FunctionalStatusSectionProblemObservation FunctionalStatusSectionResultObservation'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_pDpxAGknEeGCCOsAP2C6Nw" base_Generalization="_8UhPsBVfEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_pDqYEWknEeGCCOsAP2C6Nw" base_Class="_2KgzUBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Advance directives' templateId.root='2.16.840.1.113883.10.20.22.2.21.1' constraints.validation.error='AdvanceDirectivesSectionTemplateId AdvanceDirectivesSectionEntriesOptionalCode AdvanceDirectivesSectionTitle AdvanceDirectivesSectionText AdvanceDirectivesSectionAdvanceDirectiveObservation' code.codeSystemName='LOINC' code.code='42348-3'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pDyT4GknEeGCCOsAP2C6Nw" base_Class="_2KlEwBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.48' constraints.validation.error='AdvanceDirectiveObservationTemplateId AdvanceDirectiveObservationHasStartingTime AdvanceDirectiveObservationHasEndingTime AdvanceDirectiveObservationClassCode AdvanceDirectiveObservationMoodCode AdvanceDirectiveObservationId AdvanceDirectiveObservationCode AdvanceDirectiveObservationStatusCode AdvanceDirectiveObservationEffectiveTime AdvanceDirectiveObservationVerifierTime AdvanceDirectiveObservationVerifierTypeCode AdvanceDirectiveObservationVerifierParticipantRole AdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName AdvanceDirectiveObservationCustodianCustodianRoleClassCode AdvanceDirectiveObservationCustodianCustodianRolePlayingEntity AdvanceDirectiveObservationCustodianTypeCode AdvanceDirectiveObservationCustodianAdvanceDirectiveObservationCustodianRole AdvanceDirectiveObservationReferenceExternalDocumentId AdvanceDirectiveObservationReferenceExternalDocument' code.codeSystemName='SNOMEDCT' classCode='OBS' constraints.validation.warning='AdvanceDirectiveObservationVerifier AdvanceDirectiveObservationCustodian AdvanceDirectiveObservationReference AdvanceDirectiveObservationCustodianCustodianRoleAddr AdvanceDirectiveObservationCustodianCustodianRoleTelecom' moodCode='EVN' constraints.validation.info='AdvanceDirectiveObservationReferenceExternalDocumentText'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservationReference typeCode.codeSystemName='HL7ActRelationshipType' constraints.validation.error='ReferenceExternalDocument' typeCode.codeSystem='2.16.840.1.113883.5.1002' typeCode.code='REFR'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservationReferenceExternalDocument constraints.validation.error='ExternalDocumentId' constraints.validation.info='ExternalDocumentText'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservationCustodian constraints.validation.error='CustodianTypeCode CustodianAdvanceDirectiveObservationCustodianRole' typeCode='CST'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservationCustodianCustodianRole constraints.validation.error='CustodianRoleClassCode CustodianRolePlayingEntity' constraints.validation.warning='CustodianRoleAddr CustodianRoleTelecom' classCode='ROL'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservationCustodianCustodianRoleCustodianEntity constraints.validation.error='CustodianEntityName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservationVerifier constraints.validation.error='VerifierTime VerifierTypeCode VerifierParticipantRole' typeCode='VRF'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_pEL8gGknEeGCCOsAP2C6Nw" base_Generalization="_EEbhsBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_pEMjkGknEeGCCOsAP2C6Nw" base_Class="_2LMIwBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Allergies, adverse reactions, alerts' templateId.root='2.16.840.1.113883.10.20.22.2.6.1' constraints.validation.error='AllergiesSectionTemplateId AllergiesSectionEntriesOptionalCode AllergiesSectionTitle AllergiesSectionText AllergiesSectionAllergyProblemAct' code.codeSystemName='LOINC' code.code='48765-2'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_pET4UGknEeGCCOsAP2C6Nw" base_Generalization="_blmF8BVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_pEUfYGknEeGCCOsAP2C6Nw" base_Class="_2LSPYBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Problem List' templateId.root='2.16.840.1.113883.10.20.22.2.5.1' constraints.validation.error='ProblemSectionTemplateId ProblemSectionEntriesOptionalCode ProblemSectionText ProblemSectionTitle ProblemSectionProblemConcern' code.codeSystemName='LOINC' code.code='11450-4'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_pEZ-8GknEeGCCOsAP2C6Nw" base_Generalization="_KVkvoBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_pEamAGknEeGCCOsAP2C6Nw" base_Class="_2LWg0BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Encounters' templateId.root='2.16.840.1.113883.10.20.22.2.22.1' constraints.validation.error='EncountersSectionTemplateId EncountersSectionEntriesOptionalCode EncountersSectionText EncountersSectionTitle EncountersSectionEncounterActivities' code.codeSystemName='LOINC' code.code='46240-8'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pEhTsWknEeGCCOsAP2C6Nw" base_Class="_2LayQBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.12' templateId.root='2.16.840.1.113883.10.20.22.4.49' constraints.validation.error='EncounterActivitiesTemplateId EncounterActivitiesCodeOriginalTextReferenceValue EncounterActivitiesServiceDeliveryTypeCode EncounterActivitiesClassCode EncounterActivitiesMoodCode EncounterActivitiesId EncounterActivitiesEffectiveTime' code.codeSystemName='CPT-4' constraints.validation.warning='EncounterActivitiesCodeOriginalText EncounterActivitiesCodeOriginalTextReference EncounterActivitiesCode' classCode='ENC' moodCode='EVN' constraints.validation.info='EncounterActivitiesServiceDeliveryLocation EncounterActivitiesIndication'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pEvWIGknEeGCCOsAP2C6Nw" base_Class="_2LiHABSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.4.32' constraints.validation.error='ServiceDeliveryLocationTemplateId ServiceDeliveryLocationHasPlayingEntityClassCode ServiceDeliveryLocationCode' classCode.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='LOINC' constraints.validation.warning='ServiceDeliveryLocationAddr ServiceDeliveryLocationTelecom' classCode.codeSystemName='RoleCode' constraints.validation.info='ServiceDeliveryLocationHasPlayingEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pE5uMGknEeGCCOsAP2C6Nw" base_Class="_2L7voBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.2.1' constraints.validation.error='ImmunizationsSectionTemplateId ImmunizationsSectionEntriesOptionalCode ImmunizationsSectionTitle ImmunizationsSectionText ImmunizationsSectionImmunization' code.codeSystemName='LOINC' code.code='11369-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pFBC8GknEeGCCOsAP2C6Nw" base_Class="_2MAoIBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.52' constraints.validation.error='ImmunizationActivityTemplateId ImmunizationActivityInstructionInversion ImmunizationActivityDrugVehicleTypeCode ImmunizationActivityPreconditionTypeCode ImmunizationActivityClassCode ImmunizationActivityId ImmunizationActivityStatusCode ImmunizationActivityEffectiveTime ImmunizationActivityNegationInd ImmunizationActivityConsumable' classCode='SBADM' constraints.validation.warning='ImmunizationActivityTextReference ImmunizationActivityDoseQuantityUnit ImmunizationActivityDoseQuantity ImmunizationActivityText ImmunizationActivityPerformer' moodCode.codeSystem='2.16.840.1.113883.5.1001' constraints.validation.info='ImmunizationActivityCode ImmunizationActivityRouteCode ImmunizationActivityApproachSiteCode ImmunizationActivityRepeatNumber ImmunizationActivityAdministrationUnitCode ImmunizationActivityDrugVehicle ImmunizationActivityIndication ImmunizationActivityInstructions ImmunizationActivityMedicationDispense ImmunizationActivityReactionObservation ImmunizationActivityPrecondition ImmunizationActivityImmunizationRefusalReason ImmunizationActivityMedicationSupplyOrder' negationInd='false' moodCode.codeSystemName='HL7ActMood'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pFaEgWknEeGCCOsAP2C6Nw" base_Class="_2MV_UBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Payers' templateId.root='2.16.840.1.113883.10.20.22.2.18' constraints.validation.error='PayersSectionTemplateId PayersSectionCode PayersSectionTitle PayersSectionText' code.codeSystemName='LOINC' constraints.validation.warning='PayersSectionCoverageActivity' code.code='48768-6'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_pFfkEGknEeGCCOsAP2C6Nw" base_Generalization="_UeEpoBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_pFgLIWknEeGCCOsAP2C6Nw" base_Class="_2NIpgBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation title.mixed='Medications' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.1.1' code.displayName='History of medication use' constraints.validation.error='MedicationsSectionTemplateId MedicationsSectionEntriesOptionalCode MedicationsSectionTitle MedicationsSectionText MedicationsSectionMedication' code.codeSystemName='LOINC' code.code='10160-0'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pFouAGknEeGCCOsAP2C6Nw" base_Class="_2NP-QxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Treatment plan' templateId.root='2.16.840.1.113883.10.20.22.2.10' constraints.validation.error='PlanOfCareSectionTemplateId PlanOfCareSectionCode PlanOfCareSectionText' code.codeSystemName='LOINC' code.code='18776-5' constraints.validation.info='PlanOfCareSectionPlanOfCareActivityAct PlanOfCareSectionPlanOfCareActivityEncounter PlanOfCareSectionPlanOfCareActivityObservation PlanOfCareSectionPlanOfCareActivityProcedure PlanOfCareSectionPlanOfCareActivitySubstanceAdministration PlanOfCareSectionPlanOfCareActivitySupply'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pFtmgGknEeGCCOsAP2C6Nw" base_Class="_2NWE5xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.39' classCode.displayName='' constraints.validation.error='PlanOfCareActivityActTemplateId PlanOfCareActivityActId' classCode.codeSystem='2.16.840.1.113883.5.6' classCode.codeSystemName='HL7ActClass' classCode.code=''</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pF0UMGknEeGCCOsAP2C6Nw" base_Class="_2NWFBBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.40' constraints.validation.error='PlanOfCareActivityEncounterTemplateId PlanOfCareActivityEncounterId' classCode.codeSystem='2.16.840.1.113883.5.6' classCode.codeSystemName='HL7ActClass' classCode.code=''</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pF6a0GknEeGCCOsAP2C6Nw" base_Class="_2NcLjhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.1.25' classCode.displayName='' constraints.validation.error='PlanOfCareActivityObservationTemplateId PlanOfCareActivityObservationId' classCode.codeSystem='2.16.840.1.113883.5.6' classCode.codeSystemName='HL7ActClass' classCode.code=''</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pGAhcGknEeGCCOsAP2C6Nw" base_Class="_2NiSKhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.41' constraints.validation.error='PlanOfCareActivityProcedureTemplateId PlanOfCareActivityProcedureId' classCode.codeSystem='2.16.840.1.113883.5.6' classCode.codeSystemName='HL7ActClass' classCode.code=''</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pGGoEGknEeGCCOsAP2C6Nw" base_Class="_2NoYwxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.1.25' classCode.displayName='' constraints.validation.error='PlanOfCareActivitySubstanceAdministrationTemplateId PlanOfCareActivitySubstanceAdministrationId' classCode.codeSystem='2.16.840.1.113883.5.6' classCode.codeSystemName='HL7ActClass' classCode.code=''</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pGMusGknEeGCCOsAP2C6Nw" base_Class="_2NoY5BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.43' constraints.validation.error='PlanOfCareActivitySupplyTemplateId PlanOfCareActivitySupplyId' classCode.codeSystem='2.16.840.1.113883.5.6' classCode.codeSystemName='HL7ActClass'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pGS1UWknEeGCCOsAP2C6Nw" base_Class="_2N6soBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.5.4' templateId.root='2.16.840.1.113883.10.20.15.3.8' code.displayName='Assertion' constraints.validation.error='PregnancyObservationTemplateId PregnancyObservationClassCode PregnancyObservationMoodCode PregnancyObservationCode PregnancyObservationStatusCode PregnancyObservationValue PregnancyObservationEstimatedDateOfDelivery' code.code='ASSERTION' value.displayName='Pregnant' statusCode.code='completed' value.code='77386006' code.codeSystemName='HL7ActCode' constraints.validation.warning='PregnancyObservationEffectiveTime' classCode='OBS' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_pGebgGknEeGCCOsAP2C6Nw" base_Generalization="_gNO_cBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_pGfCkWknEeGCCOsAP2C6Nw" base_Class="_2OAzQRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation title.mixed='Procedures' code.codeSystem='2.16.840.1.113883.6.1' code.displayName='History of procedures' templateId.root='2.16.840.1.113883.10.20.22.2.7.1' constraints.validation.error='ProceduresSectionTemplateId ProceduresSectionHasProcedureActivity ProceduresSectionTitle ProceduresSectionEntriesOptionalCode ProceduresSectionText' code.codeSystemName='LOINC' code.code='47519-4'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pGmXUGknEeGCCOsAP2C6Nw" base_Class="_2OG58RSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.14' constraints.validation.error='ProcedureActivityProcedureTemplateId ProcedureActivityProcedureReferenceValue ProcedureActivityProcedureEncounterInversion ProcedureActivityProcedureProductInstanceTypeCode ProcedureActivityProcedureServiceDeliveryLocationTypeCode ProcedureActivityProcedureInstructionsInversion ProcedureActivityProcedureClassCode ProcedureActivityProcedureId ProcedureActivityProcedureCode ProcedureActivityProcedureStatusCode' classCode='PROC' constraints.validation.warning='ProcedureActivityProcedureCodeCodeSystems ProcedureActivityProcedureCodeOriginalText ProcedureActivityProcedureOriginalTextReferenceValue ProcedureActivityProcedureEffectiveTime ProcedureActivityProcedureTargetSiteCode ProcedureActivityProcedurePerformer' targetSiteCode.codeSystem='2.16.840.1.113883.6.96' moodCode.codeSystem='2.16.840.1.113883.5.1001' constraints.validation.info='ProcedureActivityProcedurePriorityCode ProcedureActivityProcedureMethodCode ProcedureActivityProcedureIndication ProcedureActivityProcedureSpecimen ProcedureActivityProcedureServiceDeliveryLocation ProcedureActivityProcedureMedicationActivity ProcedureActivityProcedurePatientInstruction ProcedureActivityProcedureProcedureEncounter ProcedureActivityProcedureProductInstance' moodCode.codeSystemName='HL7ActMood' targetSiteCode.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_pHERZGknEeGCCOsAP2C6Nw" base_Generalization="_px07IBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_pHE4cWknEeGCCOsAP2C6Nw" base_Class="_2OfUcxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.4.1' constraints.validation.error='VitalSignsSectionTemplateId VitalSignsSectionEntriesOptionalCode VitalSignsSectionText VitalSignsSectionTitle VitalSignsSectionVitalSignsOrganizer' code.codeSystemName='LOINC' code.code='8716-3'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pHK_EGknEeGCCOsAP2C6Nw" base_Class="_2OlbCRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.26' code.displayName='Vital signs' constraints.validation.error='VitalSignsOrganizerTemplateId VitalSignsOrganizerClassCode VitalSignsOrganizerMoodCode VitalSignsOrganizerId VitalSignsOrganizerCode VitalSignsOrganizerStatusCode VitalSignsOrganizerEffectiveTime VitalSignsOrganizerVitalSignObservation' code.codeSystemName='SNOMEDCT' classCode='CLUSTER' code.code='46680005' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pHXMUGknEeGCCOsAP2C6Nw" base_Class="_2OrhsRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.4.27' constraints.validation.error='VitalSignObservationTemplateId VitalSignObservationClassCode VitalSignObservationMoodCode VitalSignObservationId VitalSignObservationCode VitalSignObservationStatusCode VitalSignObservationEffectiveTime VitalSignObservationValue' code.codeSystemName='LOINC' classCode='OBS' constraints.validation.warning='VitalSignObservationText' constraints.validation.info='VitalSignObservationInterpretationCode VitalSignObservationMethodCode VitalSignObservationTargetSiteCode VitalSignObservationAuthor' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pHo5IGknEeGCCOsAP2C6Nw" base_Class="_2PQJcxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='HISTORY OF PAST ILLNESS' templateId.root='2.16.840.1.113883.10.20.22.2.20' constraints.validation.error='HistoryOfPastIllnessSectionTemplateId HistoryOfPastIllnessSectionCode HistoryOfPastIllnessSectionTitle HistoryOfPastIllnessSectionText' code.codeSystemName='LOINC' code.code='11348-0' constraints.validation.info='HistoryOfPastIllnessSectionProblemObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pHu_wGknEeGCCOsAP2C6Nw" base_Class="_2PWQCBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.1.13.2.1' code.displayName='CHIEF COMPLAINT' constraints.validation.error='ChiefComplaintSectionTemplateId ChiefComplaintSectionCode ChiefComplaintSectionText ChiefComplaintSectionTitle' code.codeSystemName='LOINC' code.code='10154-3'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pH0fUGknEeGCCOsAP2C6Nw" base_Class="_2PWQFxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.1' code.displayName='REASON FOR REFERRAL' constraints.validation.error='ReasonForReferralSectionTemplateId ReasonForReferralSectionCode ReasonForReferralSectionTitle ReasonForReferralSectionText' code.codeSystemName='LOINC' code.code='42349-1'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pH5-4WknEeGCCOsAP2C6Nw" base_Class="_2PcWsRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.4' code.displayName='HISTORY OF PRESENT ILLNESS' constraints.validation.error='HistoryOfPresentIllnessSectionTemplateId HistoryOfPresentIllnessSectionCode HistoryOfPresentIllnessSectionTitle HistoryOfPresentIllnessSectionText' code.codeSystemName='LOINC' code.code='10164-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pIAFgGknEeGCCOsAP2C6Nw" base_Class="_2PidQhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='HOSPITAL ADMISSION DX' templateId.root='2.16.840.1.113883.10.20.22.2.43' constraints.validation.error='HospitalAdmissionDiagnosisSectionTemplateId HospitalAdmissionDiagnosisSectionCode HospitalAdmissionDiagnosisSectionTitle HospitalAdmissionDiagnosisSectionText' code.codeSystemName='LOINC' constraints.validation.warning='HospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis' code.code='46241-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pIFlEWknEeGCCOsAP2C6Nw" base_Class="_2Poj5BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='MEDICATIONS ON ADMISSION' templateId.root='2.16.840.1.113883.10.20.22.2.44' constraints.validation.error='HospitalAdmissionMedicationsSectionEntriesOptionalTemplateId HospitalAdmissionMedicationsSectionEntriesOptionalCode HospitalAdmissionMedicationsSectionEntriesOptionalText HospitalAdmissionMedicationsSectionEntriesOptionalTitle' code.codeSystemName='LOINC' constraints.validation.warning='HospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication' code.code='42346-7'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pILrsGknEeGCCOsAP2C6Nw" base_Class="_2Poj_BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Medications Administered' templateId.root='2.16.840.1.113883.10.20.22.2.38' constraints.validation.error='MedicationsAdministeredSectionTemplateId MedicationsAdministeredSectionCode MedicationsAdministeredSectionText MedicationsAdministeredSectionTitle' code.codeSystemName='LOINC' code.code='29549-3' constraints.validation.info='MedicationsAdministeredSectionMedicationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pIRLQWknEeGCCOsAP2C6Nw" base_Class="_2Pxt0hSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.2.10' code.displayName='PHYSICAL EXAMINATION' constraints.validation.error='PhysicalExamSectionTemplateId PhysicalExamSectionCode PhysicalExamSectionTitle PhysicalExamSectionText' code.codeSystemName='LOINC' code.code='29545-1'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pIXR4GknEeGCCOsAP2C6Nw" base_Class="_2Pxt6xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.2.5' code.displayName='GENERAL STATUS' constraints.validation.error='GeneralStatusSectionTemplateId GeneralStatusSectionCode GeneralStatusSectionTitle GeneralStatusSectionText' code.codeSystemName='LOINC' code.code='10210-3'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pIcxcGknEeGCCOsAP2C6Nw" base_Class="_2RqkMBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.18' code.displayName='REVIEW OF SYSTEMS' constraints.validation.error='ReviewOfSystemsSectionTemplateId ReviewOfSystemsSectionCode ReviewOfSystemsSectionTitle ReviewOfSystemsSectionText' code.codeSystemName='LOINC' code.code='10187-3'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pIi4EGknEeGCCOsAP2C6Nw" base_Class="_2Rwq0BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.9' code.displayName='ASSESSMENT AND PLAN' constraints.validation.error='AssessmentAndPlanSectionTemplateId AssessmentAndPlanSectionCode AssessmentAndPlanSectionText' code.codeSystemName='LOINC' code.code='51847-2' constraints.validation.info='AssessmentAndPlanSectionPlanOfCareActivityAct'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pInJgGknEeGCCOsAP2C6Nw" base_Class="_2SC-sBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.5.4' templateId.root='2.16.840.1.113883.10.20.22.4.47' code.displayName='Assertion' constraints.validation.error='FamilyHistoryDeathObservationTemplateId FamilyHistoryDeathObservationClassCode FamilyHistoryDeathObservationMoodCode FamilyHistoryDeathObservationCode FamilyHistoryDeathObservationStatusCode FamilyHistoryDeathObservationValue' code.code='ASSERTION' value.displayName='Dead' statusCode.code='completed' value.code='419099009' code.codeSystemName='HL7ActCode' classCode='OBS' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pIxhkmknEeGCCOsAP2C6Nw" base_Class="_luQh8DVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.7.13' code.displayName='Surgical Drains' constraints.validation.error='SurgicalDrainsSectionTemplateId SurgicalDrainsSectionCode SurgicalDrainsSectionText SurgicalDrainsSectionTitle' code.codeSystemName='LOINC' code.code='11537-8'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pI4PQGknEeGCCOsAP2C6Nw" base_Class="_2TeiIRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.21.1.10' constraints.validation.error='UnstructuredDocumentTemplateId UnstructuredDocumentRecordTarget UnstructuredDocumentAuthor UnstructuredDocumentComponent UnstructuredDocumentCustodian UnstructuredDocumentRecordTargetPatientRole2Id UnstructuredDocumentAuthorAssignedAuthor2Addr UnstructuredDocumentAuthorAssignedAuthor2Telecom UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationAddr UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationId UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationName UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationTelecom UnstructuredDocumentCustodianAssignedCustodian2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocumentRecordTargetPatientRole2 constraints.validation.error='PatientRole2Id'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocumentAuthorAssignedAuthor2 constraints.validation.error='AssignedAuthor2Addr AssignedAuthor2Telecom'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocumentCustodian constraints.validation.error='CustodianAssignedCustodian2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocumentCustodianAssignedCustodian3CustodianOrganization constraints.validation.error='CustodianOrganizationAddr CustodianOrganizationId CustodianOrganizationName CustodianOrganizationTelecom'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocumentComponentNonXMLBody constraints.validation.error='NonXMLBodyHasReferenceOrRepresentation NonXMLBodyMediaTypeFileFormats NonXMLBodyText'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pJCnUGknEeGCCOsAP2C6Nw" base_Class="_2T9DQBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.23' constraints.validation.error='MedicationInformationTemplateId MedicationInformationClassCode MedicationInformationManufacturedMaterial' classCode='MANU' constraints.validation.info='MedicationInformationId MedicationInformationManufacturerOrganization'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_pJGRsGknEeGCCOsAP2C6Nw" base_Generalization="_2U6FfBSVEeGGzu7fmW9pXw"/>
  <Ecore:EClass xmi:id="_pJG4wGknEeGCCOsAP2C6Nw" base_Class="_2UnxkRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.1.8' constraints.validation.error='DischargeSummaryTemplateId DischargeSummaryDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection GeneralHeaderConstraintsCode DischargeSummaryHospitalAdmissionDiagnosisSection DischargeSummaryAllergiesSection DischargeSummaryHospitalDischargeDiagnosisSection DischargeSummaryHospitalDischargeMedicationsSectionEntriesOptional DischargeSummaryHospitalCourseSection DischargeSummaryPlanOfCareSection DischargeSummaryComponentOf DischargeSummaryComponentOfEncompassingEncounter3ResponsiblePartyAssignedEntityHasPersonOrOrganization DischargeSummaryComponentOfEncompassingEncounter3ResponsiblePartyAssignedEntity DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipantAssignedEntityHasPersonOrOrganization DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipantAssignedEntity DischargeSummaryComponentOfEncompassingEncounter3EncompassingEncounterHasEffectiveTimeLow DischargeSummaryComponentOfEncompassingEncounter3EncompassingEncounterHasEffectiveTimeHigh DischargeSummaryComponentOfEncompassingEncounter3EffectiveTime DischargeSummaryComponentOfEncompassingEncounter' code.codeSystemName='LOINC' constraints.validation.info='DischargeSummaryHospitalAdmissionMedicationsSectionEntriesOptional DischargeSummaryAdvanceDirectivesSection DischargeSummaryDischargeDietSection DischargeSummaryFunctionalStatusSection DischargeSummaryHistoryOfPresentIllnessSection DischargeSummaryMedicalEquipmentSection DischargeSummaryPhysicalExamSection DischargeSummaryHistoryOfPastIllnessSection DischargeSummaryVitalSignsSection DischargeSummaryChiefComplaintAndReasonForVisitSection DischargeSummaryChiefComplaintSection DischargeSummaryFamilyHistorySection DischargeSummaryHospitalConsultationsSection DischargeSummaryHospitalDischargeInstructionsSection DischargeSummaryHospitalDischargePhysicalSection DischargeSummaryHospitalDischargeStudiesSummarySection DischargeSummaryImmunizationsSectionEntriesOptional DischargeSummaryProblemSectionEntriesOptional DischargeSummaryProceduresSectionEntriesOptional DischargeSummaryReasonForVisitSection DischargeSummaryReviewOfSystemsSection DischargeSummarySocialHistorySection DischargeSummaryComponentOfEncompassingEncounter3ResponsibleParty DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDischargeSummaryComponentOf constraints.validation.error='ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDischargeSummaryComponentOfEncompassingEncounter3 constraints.validation.error='EncompassingEncounter3EncompassingEncounterHasEffectiveTimeLow EncompassingEncounter3EncompassingEncounterHasEffectiveTimeHigh EncompassingEncounter3EffectiveTime' constraints.validation.info='EncompassingEncounter3ResponsibleParty EncompassingEncounter3EncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDischargeSummaryComponentOfEncompassingEncounter3ResponsibleParty constraints.validation.error='ResponsiblePartyAssignedEntityHasPersonOrOrganization ResponsiblePartyAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDischargeSummaryComponentOfEncompassingEncounter3EncounterParticipant constraints.validation.error='EncounterParticipantAssignedEntityHasPersonOrOrganization EncounterParticipantAssignedEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pJnPEGknEeGCCOsAP2C6Nw" base_Class="_sHrUoBUSEeG6PvUxSTZnaw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.19' constraints.validation.error='IndicationTemplateId IndicationClassCode IndicationMoodCode IndicationId IndicationStatusCode' code.codeSystemName='SNOMEDCT' classCode='OBS' constraints.validation.warning='IndicationCode IndicationEffectiveTime IndicationValue' constraints.validation.info='IndicationCodeNullFlavor' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pJ3GsGknEeGCCOsAP2C6Nw" base_Class="_VBXq8BUTEeG6PvUxSTZnaw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.24' constraints.validation.error='DrugVehicleTemplateId DrugVehiclePlayingEntityCode DrugVehicleClassCode DrugVehicleCode DrugVehiclePlayingEntity' code.codeSystemName='SNOMEDCT' classCode='MANU' code.code='412307009' constraints.validation.info='DrugVehiclePlayingEntityName'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pJ9NUGknEeGCCOsAP2C6Nw" base_Class="_DpoGkBUUEeG6PvUxSTZnaw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.18' constraints.validation.error='MedicationDispenseTemplateId MedicationDispenseClassCode MedicationDispenseId MedicationDispenseMoodCode MedicationDispenseStatusCode MedicationDispenseAssignedEntity MedicationDispenseProduct' constraints.validation.warning='MedicationDispenseEffectiveTime MedicationDispenseRepeatNumber MedicationDispenseQuantity' classCode='SPLY' moodCode='EVN' constraints.validation.info='MedicationDispensePerformer2 MedicationDispenseMedicationSupplyOrder'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pKJakGknEeGCCOsAP2C6Nw" base_Class="_chEhQBUUEeG6PvUxSTZnaw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.25' constraints.validation.error='PreconditionForSubstanceAdministrationTemplateId PreconditionForSubstanceAdministrationCriterion' constraints.validation.warning='PreconditionForSubstanceAdministrationCriterionCode PreconditionForSubstanceAdministrationCriterionValue' constraints.validation.info='PreconditionForSubstanceAdministrationCriterionText'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pKQvUGknEeGCCOsAP2C6Nw" base_Class="_PZBdMBUlEeGvPruliC3crg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.4.61' constraints.validation.error='PolicyActivityTemplateId PolicyActivityClassCode PolicyActivityId PolicyActivityMoodCode PolicyActivityStatusCode PolicyActivityAuthorizationActivity PolicyActivityPayer PolicyActivityGuarantor PolicyActivityCoverage PolicyActivityPayerPayerAssignedEntityId PolicyActivityPayerPayerAssignedEntityCode PolicyActivityPayerTemplateId PolicyActivityPayerTypeCode PolicyActivityPayerPayerAssignedEntity PolicyActivityGuarantorTime PolicyActivityGuarantorGuarantorAssignedEntity PolicyActivityCoverageCoverageRoleCoveragePlayingEntityName PolicyActivityCoverageCoverageRoleId PolicyActivityCoverageCoverageRoleCode PolicyActivityCoverageTypeCode PolicyActivityCoverageCoverageRole PolicyActivityHolderHolderRoleId PolicyActivityHolderTypeCode PolicyActivityHolderHolderRole' code.codeSystemName='LOINC' classCode='ACT' constraints.validation.warning='PolicyActivityCode PolicyActivityHolder PolicyActivityPayerPayerAssignedEntityPayerOrganizationName PolicyActivityPayerPayerAssignedEntityPayerOrganization PolicyActivityGuarantorGuarantorAssignedEntityCode PolicyActivityGuarantorGuarantorAssignedEntityAddr PolicyActivityGuarantorGuarantorAssignedEntityTelecom PolicyActivityCoverageCoverageRoleAddr PolicyActivityCoverageCoverageRoleCoveragePlayingEntity PolicyActivityCoverageTime PolicyActivityHolderHolderRoleAddr' moodCode='EVN' constraints.validation.info='PolicyActivityPayerPayerAssignedEntityAddr PolicyActivityPayerPayerAssignedEntityTelecom PolicyActivityHolderTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityPayer templateId.root='null' constraints.validation.error='PayerTemplateId PayerTypeCode PayerPayerAssignedEntity PayerPayerAssignedEntityId PayerPayerAssignedEntityCode' constraints.validation.warning='PayerPayerAssignedEntityPayerOrganizationName PayerPayerAssignedEntityPayerOrganization' typeCode='PRF' constraints.validation.info='PayerPayerAssignedEntityAddr PayerPayerAssignedEntityTelecom'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityPayerPayerAssignedEntity code.codeSystem='2.16.840.1.113883.5.110' constraints.validation.error='PayerAssignedEntityId PayerAssignedEntityCode' code.codeSystemName='HL7RoleClass' constraints.validation.warning='PayerAssignedEntityPayerOrganization PayerAssignedEntityPayerOrganizationName' constraints.validation.info='PayerAssignedEntityAddr PayerAssignedEntityTelecom'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityPayerPayerAssignedEntityPayerOrganization constraints.validation.warning='PayerOrganizationName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityGuarantor constraints.validation.error='GuarantorTime GuarantorGuarantorAssignedEntity' constraints.validation.warning='GuarantorGuarantorAssignedEntityCode GuarantorGuarantorAssignedEntityAddr GuarantorGuarantorAssignedEntityTelecom'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityGuarantorGuarantorAssignedEntity code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode' constraints.validation.warning='GuarantorAssignedEntityCode GuarantorAssignedEntityAddr GuarantorAssignedEntityTelecom' code.code='GUAR'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityCoverage constraints.validation.error='CoverageTypeCode CoverageCoverageRole CoverageCoverageRoleCoveragePlayingEntityName CoverageCoverageRoleId CoverageCoverageRoleCode' constraints.validation.warning='CoverageTime CoverageCoverageRoleAddr CoverageCoverageRoleCoveragePlayingEntity' typeCode='COV'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityCoverageCoverageRole code.codeSystem='2.16.840.1.113883.5.111' constraints.validation.error='CoverageRoleId CoverageRoleCode CoverageRoleCoveragePlayingEntityName' code.codeSystemName='RoleCode' constraints.validation.warning='CoverageRoleAddr CoverageRoleCoveragePlayingEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityCoverageCoverageRoleCoveragePlayingEntity constraints.validation.error='CoveragePlayingEntityName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityHolder constraints.validation.error='HolderTypeCode HolderHolderRole HolderHolderRoleId' constraints.validation.warning='HolderHolderRoleAddr' typeCode='HLD' constraints.validation.info='HolderTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityHolderHolderRole constraints.validation.error='HolderRoleId' constraints.validation.warning='HolderRoleAddr'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pK0I8GknEeGCCOsAP2C6Nw" base_Class="_Cg3pkBUmEeGvPruliC3crg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.4.60' code.displayName='Payment Sources' constraints.validation.error='CoverageActivityTemplateId CoverageActivityClassCode CoverageActivityCode CoverageActivityId CoverageActivityMoodCode CoverageActivityStatusCode CoverageActivityPolicyActivity' code.codeSystemName='LOINC' classCode='ACT' code.code='48768-6' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pLCycGknEeGCCOsAP2C6Nw" base_Class="_5Ha7ABUyEeGbmN_W114JUw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='2.16.840.1.113883.10.20.22.4.4' constraints.validation.error='ProblemObservationTemplateId ProblemObservationHasTextReferenceValue ProblemObservationAgeObservationInversion ProblemObservationClassCode ProblemObservationMoodCode ProblemObservationId ProblemObservationCode ProblemObservationStatusCode ProblemObservationValue' code.codeSystemName='SNOMEDCT' constraints.validation.warning='ProblemObservationHasTextReference ProblemObservationText ProblemObservationEffectiveTime' constraints.validation.info='ProblemObservationNegationInd ProblemObservationAgeObservation ProblemObservationHealthStatusObservation ProblemObservationProblemStatus' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pLal4GknEeGCCOsAP2C6Nw" base_Class="_SjN_8BUzEeGbmN_W114JUw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Status' templateId.root='2.16.840.1.113883.10.20.22.4.6' constraints.validation.error='ProblemStatusTemplateId ProblemStatusTextReferenceValue ProblemStatusClassCode ProblemStatusMoodCode ProblemStatusCode ProblemStatusStatusCode ProblemStatusValue' code.codeSystemName='LOINC' classCode='OBS' constraints.validation.warning='ProblemStatusTextReference ProblemStatusText' code.code='33999-4' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pL5uEGknEeGCCOsAP2C6Nw" base_Class="__qYdcBVNEeGbmN_W114JUw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.5.8' templateId.root='2.16.840.1.113883.10.20.22.4.53' constraints.validation.error='ImmunizationRefusalReasonTemplateId ImmunizationRefusalReasonClassCode ImmunizationRefusalReasonCode ImmunizationRefusalReasonId ImmunizationRefusalReasonMoodCode ImmunizationRefusalReasonStatusCode' code.codeSystemName='ActReason' classCode='OBS' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pMEtMWknEeGCCOsAP2C6Nw" base_Class="_daTqABVOEeGbmN_W114JUw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.54' constraints.validation.error='ImmunizationMedicationInformationTemplateId ImmunizationMedicationInformationClassCode ImmunizationMedicationInformationManufacturedMaterial' classCode='MANU' constraints.validation.warning='ImmunizationMedicationInformationManufacturerOrganization' constraints.validation.info='ImmunizationMedicationInformationId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pMLa4GknEeGCCOsAP2C6Nw" base_Class="_bGzYgBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Allergies, adverse reactions, alerts' templateId.root='2.16.840.1.113883.10.20.22.2.6' constraints.validation.error='AllergiesSectionEntriesOptionalTemplateId AllergiesSectionEntriesOptionalCode AllergiesSectionEntriesOptionalTitle AllergiesSectionEntriesOptionalText' code.codeSystemName='LOINC' constraints.validation.warning='AllergiesSectionEntriesOptionalAllergyProblemAct' code.code='48765-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pMRhgGknEeGCCOsAP2C6Nw" base_Class="_iAoXEBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation title.mixed='Medications' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.1' code.displayName='History of medication use' constraints.validation.error='MedicationsSectionEntriesOptionalTemplateId MedicationsSectionEntriesOptionalCode MedicationsSectionEntriesOptionalTitle MedicationsSectionEntriesOptionalText' code.codeSystemName='LOINC' constraints.validation.warning='MedicationsSectionEntriesOptionalMedicationActivity' code.code='10160-0'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pMXoIWknEeGCCOsAP2C6Nw" base_Class="_naxrkBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Problem List' templateId.root='2.16.840.1.113883.10.20.22.2.5' constraints.validation.error='ProblemSectionEntriesOptionalTemplateId ProblemSectionEntriesOptionalCode ProblemSectionEntriesOptionalTitle ProblemSectionEntriesOptionalText' code.codeSystemName='LOINC' constraints.validation.warning='ProblemSectionEntriesOptionalProblemConcern' code.code='11450-4'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pMduwGknEeGCCOsAP2C6Nw" base_Class="_s9Ig4BVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.7' code.displayName='History of procedures' constraints.validation.error='ProceduresSectionEntriesOptionalTemplateId ProceduresSectionEntriesOptionalCode ProceduresSectionEntriesOptionalText' code.codeSystemName='LOINC' code.code='47519-4' constraints.validation.info='ProceduresSectionEntriesOptionalProcedureActivityProcedure ProceduresSectionEntriesOptionalProcedureAcivityObservation ProceduresSectionEntriesOptionalProcedureActivityAct'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pMinQGknEeGCCOsAP2C6Nw" base_Class="_xGqiEBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Relevant diagnostic tests and/or laboratory data' templateId.root='2.16.840.1.113883.10.20.22.2.3' constraints.validation.error='ResultsSectionEntriesOptionalTemplateId ResultsSectionEntriesOptionalCode ResultsSectionEntriesOptionalTitle ResultsSectionEntriesOptionalText' code.codeSystemName='LOINC' constraints.validation.warning='ResultsSectionEntriesOptionalResultOrganizer' code.code='30954-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pMoG0GknEeGCCOsAP2C6Nw" base_Class="_1RZdIBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Advance Directives' templateId.root='2.16.840.1.113883.10.20.22.2.21' constraints.validation.error='AdvanceDirectivesSectionEntriesOptionalTemplateId AdvanceDirectivesSectionEntriesOptionalCode AdvanceDirectivesSectionEntriesOptionalTitle AdvanceDirectivesSectionEntriesOptionalText' code.codeSystemName='LOINC' code.code='42348-3' constraints.validation.info='AdvanceDirectivesSectionEntriesOptionalAdvanceDirectiveObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pMuNcGknEeGCCOsAP2C6Nw" base_Class="_4yj2wBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Encounters' templateId.root='2.16.840.1.113883.10.20.22.2.22' constraints.validation.error='EncountersSectionEntriesOptionalTemplateId EncountersSectionEntriesOptionalCode EncountersSectionEntriesOptionalTitle EncountersSectionEntriesOptionalText' code.codeSystemName='LOINC' constraints.validation.warning='EncountersSectionEntriesOptionalEncounterActivities' code.code='46240-8'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pMztAWknEeGCCOsAP2C6Nw" base_Class="_EuPloBVeEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.2' constraints.validation.error='ImmunizationsSectionEntriesOptionalTemplateId ImmunizationsSectionEntriesOptionalCode ImmunizationsSectionEntriesOptionalTitle ImmunizationsSectionEntriesOptionalText' code.codeSystemName='LOINC' constraints.validation.warning='ImmunizationsSectionEntriesOptionalImmunizationActivity' code.code='11369-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pM5zoGknEeGCCOsAP2C6Nw" base_Class="_bRH8sBVeEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.4' constraints.validation.error='VitalSignsSectionEntriesOptionalTemplateId VitalSignsSectionEntriesOptionalCode VitalSignsSectionEntriesOptionalText VitalSignsSectionEntriesOptionalTitle' code.codeSystemName='LOINC' constraints.validation.warning='VitalSignsSectionEntriesOptionalVitalSignsOrganizer' code.code='8716-3'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pM_TMmknEeGCCOsAP2C6Nw" base_Class="_Aj7JkBg4EeGs5a462vYX5Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.13' constraints.validation.error='ProcedureActivityObservationTemplateId ProcedureActivityObservationReferenceValue ProcedureActivityObservationEncounterInversion ProcedureActivityObservationServiceDeliveryLocationTypeCode ProcedureActivityObservationInstructionsInversion ProcedureActivityObservationClassCode ProcedureActivityObservationId ProcedureActivityObservationCode ProcedureActivityObservationStatusCode ProcedureActivityObservationValue' constraints.validation.warning='ProcedureActivityObservationCodeCodeSystems ProcedureActivityObservationCodeOriginalText ProcedureActivityObservationOriginalTextReferenceValue ProcedureActivityObservationEffectiveTime ProcedureActivityObservationTargetSiteCode ProcedureActivityObservationPerformer' classCode='OBS' targetSiteCode.codeSystem='2.16.840.1.113883.6.96' moodCode.codeSystem='2.16.840.1.113883.5.1001' constraints.validation.info='ProcedureActivityObservationPriorityCode ProcedureActivityObservationMethodCode ProcedureActivityObservationServiceDeliveryLocation ProcedureActivityObservationProcedureEncounter ProcedureActivityObservationInstructions ProcedureActivityObservationIndication ProcedureActivityObservationMedicationActivity' moodCode.codeSystemName='HL7ActMood' targetSiteCode.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pNWfkWknEeGCCOsAP2C6Nw" base_Class="_awdH4Bg4EeGs5a462vYX5Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.12' constraints.validation.error='ProcedureActivityActTemplateId ProcedureActivityActReferenceValue ProcedureActivityActEncounterInversion ProcedureActivityActServiceDeliveryLocationTypeCode ProcedureActivityActInstructionsInversion ProcedureActivityActClassCode ProcedureActivityActId ProcedureActivityActCode ProcedureActivityActStatusCode' constraints.validation.warning='ProcedureActivityActCodeCodeSystems ProcedureActivityActCodeOriginalText ProcedureActivityActOriginalTextReferenceValue ProcedureActivityActEffectiveTime ProcedureActivityActPerformer' classCode='ACT' moodCode.codeSystem='2.16.840.1.113883.5.1001' constraints.validation.info='ProcedureActivityActPriorityCode ProcedureActivityActServiceDeliveryLocation ProcedureActivityActProcedureEncounter ProcedureActivityActInstructions ProcedureActivityActIndication ProcedureActivityActMedicationActivity' moodCode.codeSystemName='HL7ActMood'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pNmXMWknEeGCCOsAP2C6Nw" base_Class="_XUoXwBnZEeGs5a462vYX5Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.1.19' constraints.validation.error='AuthorizationActivityTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pNsd0GknEeGCCOsAP2C6Nw" base_Class="_j3aTQBrTEeGo461UQq-B1g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.22.4.17' constraints.validation.error='MedicationSupplyOrderTemplateId MedicationSupplyOrderInstructionInversionInd MedicationSupplyOrderClassCode MedicationSupplyOrderMoodCode MedicationSupplyOrderStatusCode MedicationSupplyOrderId MedicationSupplyOrderProduct' classCode='SPLY' constraints.validation.warning='MedicationSupplyOrderEffectiveTime MedicationSupplyOrderQuantity MedicationSupplyOrderRepeatNumber' moodCode='INT' constraints.validation.info='MedicationSupplyOrderAuthor MedicationSupplyOrderInstructions'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pOJw0mknEeGCCOsAP2C6Nw" base_Class="_JIc0oBxEEeGIELeDlfT77A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='null' constraints.validation.error='ProcedureSpecimenTemplateId ProcedureSpecimenSpecimenRole' constraints.validation.warning='ProcedureSpecimenSpecimentRoleId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pOMNEGknEeGCCOsAP2C6Nw" base_Class="_nbpGUBxEEeGIELeDlfT77A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedurePerformerAssignedEntity ProcedurePerformerAssignedEntityId ProcedurePerformerAssignedEntityAddr ProcedurePerformerAssignedEntityTelecom ProcedurePerformerAssignedEntityRepOrgAddr ProcedurePerformerAssignedEntityRepOrgTelecom' constraints.validation.warning='ProcedurePerformerAssignedEntityRepOrg ProcedurePerformerAssignedEntityRepOrgId' constraints.validation.info='ProcedurePerformerAssignedEntityRepOrgName'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pORsoGknEeGCCOsAP2C6Nw" base_Class="_qeLqQBxEEeGIELeDlfT77A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureEncounterClassCode ProcedureEncounterMoodCode ProcedureEncounterId' classCode='ENC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pO1tUGknEeGCCOsAP2C6Nw" base_Class="_vBswQBtpEeGT89b80j3MTg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.15.3.1' constraints.validation.error='EstimatedDateOfDeliveryTemplateId EstimatedDateOfDeliveryClassCode EstimatedDateOfDeliveryCode EstimatedDateOfDeliveryMoodCode EstimatedDateOfDeliveryStatusCode EstimatedDateOfDeliveryValue' code.codeSystemName='LOINC' classCode='OBS' code.code='11778-8' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pPEW0GknEeGCCOsAP2C6Nw" base_Class="__WUM4CAMEeGKirKJsFylGA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.88' constraints.validation.error='MedicationInformationManufacturedMaterialCode' code.codeSystemName='RxNorm' constraints.validation.warning='MedicationInformationManufacturedMaterialCodeOriginalText MedicationInformationManufacturedMaterialReference' constraints.validation.info='MedicationInformationManufacturedMaterialCodeTranslation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pPLEgGknEeGCCOsAP2C6Nw" base_Class="_JNgjcCHZEeGFLIX-2_sWzA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FamilyHistorySubjectRelatedSubjectClassCode FamilyHistorySubjectRelatedSubjectCode FamilyHistorySubjectRelatedSubjectSubjectAdmGenderCode' constraints.validation.warning='FamilyHistorySubjectRelatedSubjectCodeValueSet FamilyHistorySubjectRelatedSubjectSubject FamilyHistorySubjectRelatedSubjectSubjectBirthTime' constraints.validation.info='FamilyHistorySubjectRelatedSubjectSubjectDeceasedInd FamilyHistorySubjectRelatedSubjectSubjectDeceasedTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pPUOcGknEeGCCOsAP2C6Nw" base_Class="_hD-z0CUPEeGiOPpZVnfEJA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.4.35' code.displayName='Discharge Medication' constraints.validation.error='DischargeMedicationMedicationActivity DischargeMedicationTemplateId DischargeMedicationClassCode DischargeMedicationMoodCode DischargeMedicationCode' code.codeSystemName='LOINC' classCode='ACT' code.code='10183-2' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pPVckGknEeGCCOsAP2C6Nw" base_Class="_KtwVgCULEeGiOPpZVnfEJA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.4.33' code.displayName='Hospital Discharge Diagnosis' constraints.validation.error='HospitalDischargeDiagnosisProblemObservation HospitalDischargeDiagnosisTemplateId HospitalDischargeDiagnosisClassCode HospitalDischargeDiagnosisMoodCode HospitalDischargeDiagnosisCode' code.codeSystemName='LOINC' classCode='ACT' code.code='11535-2' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pPXRwGknEeGCCOsAP2C6Nw" base_Class="_2PidURSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Hospital Discharge Diagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.24' constraints.validation.error='HospitalDischargeDiagnosisSectionTemplateId HospitalDischargeDiagnosisSectionCode HospitalDischargeDiagnosisSectionTitle HospitalDischargeDiagnosisSectionText' code.codeSystemName='LOINC' constraints.validation.warning='HospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis' code.code='11535-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pPcxUGknEeGCCOsAP2C6Nw" base_Class="_2Poj7RSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='HOSPITAL DISCHARGE MEDICATIONS' templateId.root='2.16.840.1.113883.10.20.22.2.11' constraints.validation.error='HospitalDischargeMedicationsSectionEntriesOptionalTemplateId HospitalDischargeMedicationsSectionEntriesOptionalCode HospitalDischargeMedicationsSectionEntriesOptionalTitle HospitalDischargeMedicationsSectionEntriesOptionalText' code.codeSystemName='LOINC' constraints.validation.warning='HospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication' code.code='10183-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pPi38GknEeGCCOsAP2C6Nw" base_Class="_2RqkOxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.5' code.displayName='Hospital Course' constraints.validation.error='HospitalCourseSectionTemplateId HospitalCourseSectionCode HospitalCourseSectionTitle HospitalCourseSectionText' code.codeSystemName='LOINC' code.code='8648-8'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pPoXgGknEeGCCOsAP2C6Nw" base_Class="_2Uz-4xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.33' code.displayName='Discharge Diet' constraints.validation.error='DischargeDietSectionTemplateId DischargeDietSectionCode DischargeDietSectionTitle DischargeDietSectionText' code.codeSystemName='LOINC' code.code='42344-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pPt3EGknEeGCCOsAP2C6Nw" base_Class="_38AXoCUTEeGiOPpZVnfEJA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.16' code.displayName='Hospital Discharge Studies Summary' constraints.validation.error='HospitalDischargeStudiesSummarySectionTemplateId HospitalDischargeStudiesSummarySectionCode HospitalDischargeStudiesSummarySectionTitle HospitalDischargeStudiesSummarySectionText' code.codeSystemName='LOINC' code.code='11493-4'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pQAK8WknEeGCCOsAP2C6Nw" base_Class="_lBergCUMEeGiOPpZVnfEJA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.41' code.displayName='Hospital Discharge Instructions' constraints.validation.error='HospitalDischargeInstructionsSectionTemplateId HospitalDischargeInstructionsSectionCode HospitalDischargeInstructionsSectionTitle HospitalDischargeInstructionsSectionText' code.codeSystemName='LOINC' code.code='8653-8'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_pQFqgGknEeGCCOsAP2C6Nw" base_Generalization="_TytVkSUQEeGiOPpZVnfEJA"/>
  <Ecore:EClass xmi:id="_pQGRkGknEeGCCOsAP2C6Nw" base_Class="_TytVkCUQEeGiOPpZVnfEJA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='HOSPITAL DISCHARGE MEDICATIONS' templateId.root='2.16.840.1.113883.10.20.22.2.11.1' constraints.validation.error='HospitalDischargeMedicationsSectionTemplateId HospitalDischargeMedicationsSectionEntriesOptionalCode HospitalDischargeMedicationsSectionText HospitalDischargeMedicationsSectionTitle HospitalDischargeMedicationsSectionDischargeMedication' code.codeSystemName='LOINC' code.code='10183-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pQViIGknEeGCCOsAP2C6Nw" base_Class="_WikGsCUTEeGiOPpZVnfEJA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.26' code.displayName='Hospital Discharge Physical' constraints.validation.error='HospitalDischargePhysicalSectionTemplateId HospitalDischargePhysicalSectionCode HospitalDischargePhysicalSectionTitle HospitalDischargePhysicalSectionText' code.codeSystemName='LOINC' code.code='10184-0'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pQf6MGknEeGCCOsAP2C6Nw" base_Class="_oI7CQCsaEeGHF88-qhhUMA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.13' code.displayName='Chief Complaint and Reason for Visit' constraints.validation.error='ChiefComplaintAndReasonForVisitSectionTemplateId ChiefComplaintAndReasonForVisitSectionCode ChiefComplaintAndReasonForVisitSectionText ChiefComplaintAndReasonForVisitSectionTitle' code.codeSystemName='LOINC' code.code='46239-0'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pQlZwGknEeGCCOsAP2C6Nw" base_Class="_Nm64UCscEeGHF88-qhhUMA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.12' code.displayName='Reason for Visit' constraints.validation.error='ReasonForVisitSectionTemplateId ReasonForVisitSectionCode ReasonForVisitSectionText ReasonForVisitSectionTitle' code.codeSystemName='LOINC' code.code='29299-5'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pQ_pcGknEeGCCOsAP2C6Nw" base_Class="_I1LikCwXEeGKLc4ckmfDag">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='EncounterPerformerAssignedEntityCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pRGXIGknEeGCCOsAP2C6Nw" base_Class="_0HgNkDJAEeG6R8Pb5FT2Ow">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation typeCode.displayName='Consumable' typeCode.codeSystemName='HL7ParticipationType' constraints.validation.error='AllergyObservationParticipantParticipantRole' typeCode.codeSystem='2.16.840.1.113883.5.90' typeCode.code='CSM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pRIMUGknEeGCCOsAP2C6Nw" base_Class="_4Lj44DJAEeG6R8Pb5FT2Ow">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation classCode.displayName='Manufactured Product' constraints.validation.error='AllergyObservationParticipantRolePlayingEntity' classCode.codeSystem='2.16.840.1.113883.5.110' classCode.codeSystemName='HL7RoleClass' classCode.code='MANU'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pRKokGknEeGCCOsAP2C6Nw" base_Class="_E1B60DJBEeG6R8Pb5FT2Ow">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AllergyObservationPlayingEntityClassCode AllergyObservationPlayingEntityCode' classCode='MMAT' constraints.validation.warning='AllergyObservationPlayingEntityCodeOriginalText' constraints.validation.info='AllergyObservationPlayingEntityCodeTranslation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pRUZkGknEeGCCOsAP2C6Nw" base_Class="_OA_Q0DVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.25' constraints.validation.error='AnesthesiaSectionTemplateId AnesthesiaSectionCode AnesthesiaSectionText AnesthesiaSectionTitle' code.codeSystemName='LOINC' code.code='59774-0' constraints.validation.info='AnesthesiaSectionProcedureActivityProcedure AnesthesiaSectionMedicationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pRagMGknEeGCCOsAP2C6Nw" base_Class="_R1OXcDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Complications' templateId.root='2.16.840.1.113883.10.20.22.2.37' constraints.validation.error='ComplicationsSectionTemplateId ComplicationsSectionCode ComplicationsSectionTitle ComplicationsSectionText' code.codeSystemName='LOINC' code.code='55109-3' constraints.validation.info='ComplicationsSectionProblemObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pRgm0GknEeGCCOsAP2C6Nw" base_Class="_WPTWEDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='1.2.840.10008.2.16.4' code.displayName='Dicom Object Catalog' templateId.root='2.16.840.1.113883.10.20.6.1.1' constraints.validation.error='DICOMObjectCatalogSectionTemplateId DICOMObjectCatalogSectionCode DICOMObjectCatalogSectionStudyAct' code.codeSystemName='DCM' code.code='121181'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pRkRMGknEeGCCOsAP2C6Nw" base_Class="_ZcC-4DVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.6.1.2' constraints.validation.error='FindingsSectionTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pRmGYGknEeGCCOsAP2C6Nw" base_Class="_eKFbUDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.42' constraints.validation.error='HospitalConsultationsSectionTemplateId HospitalConsultationsSectionCode HospitalConsultationsSectionText HospitalConsultationsSectionTitle' code.codeSystemName='LOINC' code.code='18841-7'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pRrl8WknEeGCCOsAP2C6Nw" base_Class="_hqzJADVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.21.2.3' constraints.validation.error='InterventionsSectionTemplateId InterventionsSectionCode InterventionsSectionText InterventionsSectionTitle' code.codeSystemName='LOINC' code.code='62387-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pRxskGknEeGCCOsAP2C6Nw" base_Class="_mEIgwDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.39' constraints.validation.error='MedicalHistorySectionTemplateId MedicalHistorySectionCode MedicalHistorySectionText MedicalHistorySectionTitle' code.codeSystemName='LOINC' code.code='11329-0'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pR3MIGknEeGCCOsAP2C6Nw" base_Class="_rNJpADVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.21.2.1' code.displayName='Objective' constraints.validation.error='ObjectiveSectionTemplateId ObjectiveSectionCode ObjectiveSectionText ObjectiveSectionTitle' code.codeSystemName='LOINC' code.code='61149-1'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pR9SwGknEeGCCOsAP2C6Nw" base_Class="_vHfXoDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.7.12' code.displayName='Operative Note Fluids' constraints.validation.error='OperativeNoteFluidSectionTemplateId OperativeNoteFluidSectionCode OperativeNoteFluidSectionText OperativeNoteFluidSectionTitle' code.codeSystemName='LOINC' code.code='10216-0'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pSCyUGknEeGCCOsAP2C6Nw" base_Class="_zel6wDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.7.14' code.displayName='Operative Note Surgical' constraints.validation.error='OperativeNoteSurgicalProcedureSectionTemplateId OperativeNoteSurgicalProcedureSectionCode OperativeNoteSurgicalProcedureSectionText OperativeNoteSurgicalProcedureSectionTitle' code.codeSystemName='LOINC' code.code='10223-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pSI48GknEeGCCOsAP2C6Nw" base_Class="_3b6E4DVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Planned Procedure' templateId.root='2.16.840.1.113883.10.20.22.2.30' constraints.validation.error='PlannedProcedureSectionTemplateId PlannedProcedureSectionCode PlannedProcedureSectionText PlannedProcedureSectionTitle' code.codeSystemName='LOINC' code.code='59772-4' constraints.validation.info='PlannedProcedureSectionPlanOfCareActivityProcedure'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pSO_kGknEeGCCOsAP2C6Nw" base_Class="_7UA-4DVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.35' code.displayName='Postoperative Diagnosis' constraints.validation.error='PostoperativeDiagnosisSectionTemplateId PostoperativeDiagnosisSectionCode PostoperativeDiagnosisSectionText PostoperativeDiagnosisSectionTitle' code.codeSystemName='LOINC' code.code='10218-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pSVtQGknEeGCCOsAP2C6Nw" base_Class="_-jlSMDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Postprocedure Diagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.36' constraints.validation.error='PostprocedureDiagnosisSectionTemplateId PostprocedureDiagnosisSectionCode PostprocedureDiagnosisSectionText PostprocedureDiagnosisSectionTitle' code.codeSystemName='LOINC' constraints.validation.warning='PostprocedureDiagnosisSectionPostprocedureDiagnosis' code.code='59769-0'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pSbz4GknEeGCCOsAP2C6Nw" base_Class="_Cu6qMDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Preoperative Diagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.34' constraints.validation.error='PreoperativeDiagnosisSectionTemplateId PreoperativeDiagnosisSectionCode PreoperativeDiagnosisSectionText PreoperativeDiagnosisSectionTitle' code.codeSystemName='LOINC' constraints.validation.warning='PreoperativeDiagnosisSectionPreoperativeDiagnosis' code.code='10219-4'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pSihkGknEeGCCOsAP2C6Nw" base_Class="_HNUIIDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.27' code.displayName='Procedure Description' constraints.validation.error='ProcedureDescriptionSectionTemplateId ProcedureDescriptionSectionCode ProcedureDescriptionSectionText ProcedureDescriptionSectionTitle' code.codeSystemName='LOINC' code.code='29554-3'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pSp2UGknEeGCCOsAP2C6Nw" base_Class="_QhXGYDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.18.2.12' code.displayName='Procedure Disposition' constraints.validation.error='ProcedureDispositionSectionTemplateId ProcedureDispositionSectionCode ProcedureDispositionSectionText ProcedureDispositionSectionTitle' code.codeSystemName='LOINC' code.code='59775-7'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pSvV4mknEeGCCOsAP2C6Nw" base_Class="_TvcL8DVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.18.2.9' code.displayName='Procedure Estimated Blood Loss' constraints.validation.error='ProcedureEstimatedBloodLossSectionTemplateId ProcedureEstimatedBloodLossSectionCode ProcedureEstimatedBloodLossSectionText ProcedureEstimatedBloodLossSectionTitle' code.codeSystemName='LOINC' code.code='59770-8'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pS2DkGknEeGCCOsAP2C6Nw" base_Class="_W4UBYDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Procedure Findings' templateId.root='2.16.840.1.113883.10.20.22.2.28' constraints.validation.error='ProcedureFindingsSectionTemplateId ProcedureFindingsSectionCode ProcedureFindingsSectionText ProcedureFindingsSectionTitle' code.codeSystemName='LOINC' code.code='59776-5' constraints.validation.info='ProcedureFindingsSectionProblemObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pS7jIGknEeGCCOsAP2C6Nw" base_Class="_Z662wDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.40' code.displayName='Procedure Implants' constraints.validation.error='ProcedureImplantsSectionTemplateId ProcedureImplantsSectionCode ProcedureImplantsSectionText ProcedureImplantsSectionTitle' code.codeSystemName='LOINC' code.code='59771-6'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pTBpwGknEeGCCOsAP2C6Nw" base_Class="_cjmJMDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Procedure Indications' templateId.root='2.16.840.1.113883.10.20.22.2.29' constraints.validation.error='ProcedureIndicationsSectionTemplateId ProcedureIndicationsSectionCode ProcedureIndicationsSectionText ProcedureIndicationsSectionTitle' code.codeSystemName='LOINC' code.code='59768-2' constraints.validation.info='ProcedureIndicationsSectionIndication'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pTHJUmknEeGCCOsAP2C6Nw" base_Class="_gSUdsDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.2.31' code.displayName='Procedure Specimens Taken' constraints.validation.error='ProcedureSpecimensTakenSectionTemplateId ProcedureSpecimensTakenSectionCode ProcedureSpecimensTakenSectionText ProcedureSpecimensTakenSectionTitle' code.codeSystemName='LOINC' code.code='59773-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pTN3AGknEeGCCOsAP2C6Nw" base_Class="_iy8nYDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.21.2.2' code.displayName='Subjective' constraints.validation.error='SubjectiveSectionTemplateId SubjectiveSectionCode SubjectiveSectionText SubjectiveSectionTitle' code.codeSystemName='LOINC' code.code='61150-9'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pTXoAGknEeGCCOsAP2C6Nw" base_Class="_R-vIoDssEeGvzMYhXuqAEA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.1.4' constraints.validation.error='ConsultationNoteTemplateId ConsultationNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections ConsultationNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent ConsultationNoteDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection GeneralHeaderConstraintsCode ConsultationNoteInFulfillmentOf ConsultationNoteComponentOf ConsultationNoteInFulfillmentOfOrderId ConsultationNoteInFulfillmentOfOrder ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntityHasPersonOrganizationOrBoth ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntity ConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntityHasPersonOrganizationOrBoth ConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntity ConsultationNoteComponentOfEncompassingEncounter2EffectiveTime ConsultationNoteComponentOfEncompassingEncounter2Id ConsultationNoteComponentOfEncompassingEncounter' code.codeSystemName='LOINC' constraints.validation.info='ConsultationNoteAssessmentSection ConsultationNoteAssessmentAndPlanSection ConsultationNotePlanOfCareSection ConsultationNoteHistoryOfPresentIllness ConsultationNotePhysicalExamSection ConsultationNoteReasonForReferralSection ConsultationNoteReasonForVisitSection ConsultationNoteAllergiesSection ConsultationNoteChiefComplaintSection ConsultationNoteChiefComplaintAndReasonForVisitSection ConsultationNoteFamilyHistorySection ConsultationNoteGeneralStatusSection ConsultationNoteHistoryOfPastIllnessSection ConsultationNoteImmunizationsSection ConsultationNoteMedicationsSectionEntriesOptional ConsultationNoteProblemSectionEntriesOptional ConsultationNoteProceduresSectionEntriesOptional ConsultationNoteResultsSectionEntriesOptional ConsultationNoteReviewOfSystemsSection ConsultationNoteSocialHistorySection ConsultationNoteVitalSignsSectionEntriesOptional ConsultationNoteComponentOfEncompassingEncounter2ResponsibleParty ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNoteComponentOf constraints.validation.error='ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNoteComponentOfEncompassingEncounter2 constraints.validation.error='EncompassingEncounter2EffectiveTime EncompassingEncounter2Id' constraints.validation.info='EncompassingEncounter2ResponsibleParty EncompassingEncounter2EncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNoteComponentOfEncompassingEncounter2ResponsibleParty constraints.validation.error='ResponsiblePartyAssignedEntityHasPersonOrganizationOrBoth ResponsiblePartyAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNoteComponentOfEncompassingEncounter2EncounterParticipant constraints.validation.error='EncounterParticipantAssignedEntityHasPersonOrganizationOrBoth EncounterParticipantAssignedEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pTqi8GknEeGCCOsAP2C6Nw" base_Class="_W8pI4DszEeGvzMYhXuqAEA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Assessments' templateId.root='2.16.840.1.113883.10.20.22.2.8' constraints.validation.error='AssessmentSectionTemplateId AssessmentSectionCode AssessmentSectionText' code.codeSystemName='LOINC' code.code='51848-0'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pUoMQGknEeGCCOsAP2C6Nw" base_Class="_-Qa60D1jEeG3tde5scYNWA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.1.3' constraints.validation.error='HistoryAndPhysicalNoteTemplateId HistoryAndPhysicalNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections HistoryAndPhysicalNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent HistoryAndPhysicalNoteHasChiefComplaintAndReasonForVisitChiefComplaintOrReasonForVisit HistoryAndPhysicalNoteDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection GeneralHeaderConstraintsCode HistoryAndPhysicalNoteComponentOf HistoryAndPhysicalNoteAllergiesSectionEntriesOptional HistoryAndPhysicalNoteFamilyHistorySection HistoryAndPhysicalNoteGeneralStatusSection HistoryAndPhysicalNoteHistoryOfPastIllnessSection HistoryAndPhysicalNoteMedicationsSectionEntriesOptional HistoryAndPhysicalNotePhysicalExamSection HistoryAndPhysicalNoteReasonForVisitSection HistoryAndPhysicalNoteResultsSectionEntriesOptional HistoryAndPhysicalNoteReviewOfSystemsSection HistoryAndPhysicalNoteSocialHistorySection HistoryAndPhysicalNoteVitalSignsSectionEntriesOptional HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsiblePartyAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsiblePartyAssignedEntity HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipantAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipantAssignedEntity HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EffectiveTime HistoryAndPhysicalNoteComponentOfEncompassingEncounter4Id HistoryAndPhysicalNoteComponentOfEncompassingEncounter' code.codeSystemName='LOINC' constraints.validation.warning='HistoryAndPhysicalNoteHistoryOfPresentIllnessSection' constraints.validation.info='HistoryAndPhysicalNoteInFulfillmentOf HistoryAndPhysicalNoteAssessmentSection HistoryAndPhysicalNotePlanOfCareSection HistoryAndPhysicalNoteAssessmentAndPlanSection HistoryAndPhysicalNoteChiefComplaintSection HistoryAndPhysicalNoteChiefComplaintAndReasonForVisitSection HistoryAndPhysicalNoteImmunizationsSectionEntriesOptional HistoryAndPhysicalNoteProblemSectionEntriesOptional HistoryAndPhysicalNoteProceduresSectionEntriesOptional HistoryAndPhysicalNoteComponentOfEncompassingEncounter4Location HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsibleParty HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHistoryAndPhysicalNoteComponentOf constraints.validation.error='ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHistoryAndPhysicalNoteComponentOfEncompassingEncounter4 constraints.validation.error='EncompassingEncounter4EffectiveTime EncompassingEncounter4Id' constraints.validation.info='EncompassingEncounter4Location EncompassingEncounter4ResponsibleParty EncompassingEncounter4EncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsibleParty constraints.validation.error='ResponsiblePartyAssignedEntityHasPersonOrOrganization ResponsiblePartyAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipant constraints.validation.error='EncounterParticipantAssignedEntityHasPersonOrOrganization EncounterParticipantAssignedEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pVgWAGknEeGCCOsAP2C6Nw" base_Class="_xe9MsD4iEeGhnL_c4sBHGg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.1.7' constraints.validation.error='OperativeNoteTemplateId GeneralHeaderConstraintsCode OperativeNoteDocumentationOf OperativeNoteAnesthesiaSection OperativeNoteComplicationsSection OperativeNotePostoperativeDiagnosisSection OperativeNotePreoperativeDiagnosisSection OperativeNoteProcedureEstimatedBloodLossSection OperativeNoteProcedureFindingsSection OperativeNoteProcedureSpecimensTakenSection OperativeNoteProcedureDescriptionSection OperativeNoteDocumentationOfServiceEventPrimaryPerformerFunctionCode OperativeNoteDocumentationOfServiceEventPrimaryPerformerTypeCode OperativeNoteDocumentationOfServiceEventProcedureCodes OperativeNoteDocumentationOfServiceEventEffectiveTimeHasLow OperativeNoteDocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth OperativeNoteDocumentationOfServiceEventEffectiveTimeNoHighIfWidth OperativeNoteDocumentationOfServiceEventAnyAssistantsAsSecondary OperativeNoteDocumentationOfServiceEventCode OperativeNoteDocumentationOfServiceEventEffectiveTime OperativeNoteDocumentationOfServiceEvent' code.codeSystemName='LOINC' constraints.validation.info='OperativeNoteProcedureImplantsSection OperativeNoteOperativeNoteFluidSection OperativeNoteOperativeNoteSurgicalProcedureSection OperativeNotePlanOfCareSection OperativeNotePlannedProcedureSection OperativeNoteProcedureDispositionSection OperativeNoteProcedureIndicationsSection OperativeNoteSurgicalDrainsSection'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNoteDocumentationOf constraints.validation.error='DocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNoteDocumentationOfServiceEvent constraints.validation.error='ServiceEventProcedureCodes ServiceEventEffectiveTimeHasLow ServiceEventEffectiveTimeHasHighWhenNoWidth ServiceEventEffectiveTimeNoHighIfWidth ServiceEventAnyAssistantsAsSecondary ServiceEventCode ServiceEventEffectiveTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNoteDocumentationOfServiceEventPrimaryPerformer functionCode.codeSystem='2.16.840.1.113883.6.101' constraints.validation.error='PrimaryPerformerFunctionCode PrimaryPerformerTypeCode' functionCode.codeSystemName='NUCCHealthCareProviderTaxonomy'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pWIBEmknEeGCCOsAP2C6Nw" base_Class="_LuYEsD7YEeGvOdejHZ7dYg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.1.6' constraints.validation.error='ProcedureNoteTemplateId ProcedureNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections ProcedureNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent ProcedureNoteDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection GeneralHeaderConstraintsCode ProcedureNotePrimaryCarePhysician ProcedureNoteProvider ProcedureNoteComplicationsSection ProcedureNotePostprocedureDiagnosisSection ProcedureNoteProcedureDescriptionSection ProcedureNoteProcedureIndicationsSection ProcedureNoteIndividualTypeId ProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacilityId ProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacility ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipantTypeCode ProcedureNoteComponentOfEncompassingEncounter5Code ProcedureNoteComponentOfEncompassingEncounter5Location ProcedureNoteProviderAssociatedEntityAssociatedPerson' code.codeSystemName='LOINC' constraints.validation.warning='ProcedureNoteComponentOf ProcedureNoteComponentOfEncompassingEncounter5' constraints.validation.info='ProcedureNoteIndividual ProcedureNoteAssessmentSection ProcedureNotePlanOfCareSection ProcedureNoteAssessmentAndPlanSection ProcedureNoteAllergiesSectionEntriesOptional ProcedureNoteAnesthesiaSection ProcedureNoteChiefComplaintSection ProcedureNoteChiefComplaintAndReasonForVisitSection ProcedureNoteFamilyHistorySection ProcedureNoteHistoryOfPastIllnessSection ProcedureNoteHistoryOfPresentIllnessSection ProcedureNoteMedicalHistorySection ProcedureNoteMedicationsSectionEntriesOptional ProcedureNoteMedicationsAdministeredSection ProcedureNotePhysicalExamSection ProcedureNotePlannedProcedureSection ProcedureNoteProcedureDispositionSection ProcedureNoteProcedureEstimatedBloodLossSection ProcedureNoteProcedureFindingsSection ProcedureNoteProcedureImplantsSection ProcedureNoteProcedureSpecimensTakenSection ProcedureNoteProceduresSectionEntriesOptional ProcedureNoteReasonForVisitSection ProcedureNoteReviewOfSystemsSection ProcedureNoteSocialHistorySection ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteComponentOf constraints.validation.warning='ComponentOfEncompassingEncounter5'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteComponentOfEncompassingEncounter5 constraints.validation.error='EncompassingEncounter5Code EncompassingEncounter5Location' constraints.validation.info='EncompassingEncounter5EncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteComponentOfEncompassingEncounter5Location constraints.validation.error='LocationHealthCareFacility'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacility constraints.validation.error='HealthCareFacilityId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteComponentOfEncompassingEncounter5EncounterParticipant constraints.validation.error='EncounterParticipantTypeCode' typeCode='REF'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteIndividual constraints.validation.error='IndividualTypeId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteProviderAssociatedEntity constraints.validation.error='AssociatedEntityAssociatedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteDocumentationOfServiceEvent1 constraints.validation.error='ServiceEvent1ProcedureCodes ServiceEvent1EffectiveTimeHasLow ServiceEvent1EffectiveTimeHasHighWhenNoWidth ServiceEvent1EffectiveTimeNoHighIfWidth ServiceEvent1AnyAssistantsAsSecondary ServiceEvent1Code ServiceEvent1EffectiveTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteDocumentationOfServiceEvent1PrimaryPerformer constraints.validation.error='PrimaryPerformerFunctionCode' functionCode.codeSystem='2.16.840.1.113883.6.101' functionCode.codeSystemName='NUCCHealthCareProviderTaxonomy'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pXSesGknEeGCCOsAP2C6Nw" base_Class="_UBzvED_LEeGXieeKs7NJjA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.1.9' constraints.validation.error='ProgressNoteTemplateId ProgressNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections ProgressNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent GeneralHeaderConstraintsCode ProgressNoteComponentOf ProgressNoteDocumentationOfServiceEvent2ClassCode ProgressNoteDocumentationOfServiceEvent2 ProgressNoteComponentOfEncompassingEncounter6LocationHealthCareFacility1Id ProgressNoteComponentOfEncompassingEncounter6EffectiveTime ProgressNoteComponentOfEncompassingEncounter6Id ProgressNoteComponentOfEncompassingEncounter6Location' code.codeSystemName='LOINC' constraints.validation.warning='ProgressNoteDocumentationOf ProgressNoteDocumentationOfServiceEvent2EffectiveTime' constraints.validation.info='ProgressNoteAssessmentSection ProgressNotePlanOfCareSection ProgressNoteAssessmentAndPlanSection ProgressNoteAllergiesSectionEntriesOptional ProgressNoteChiefComplaintSection ProgressNoteInterventionsSection ProgressNoteMedicationsSectionEntriesOptional ProgressNoteObjectiveSection ProgressNotePhysicalExamSection ProgressNoteProblemSectionEntriesOptional ProgressNoteResultsSectionEntriesOptional ProgressNoteReviewOfSystemsSection ProgressNoteSubjectiveSection ProgressNoteVitalSignsSectionEntriesOptional'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNoteDocumentationOf constraints.validation.error='DocumentationOfServiceEvent2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNoteDocumentationOfServiceEvent2 constraints.validation.error='ServiceEvent2ClassCode' constraints.validation.warning='ServiceEvent2EffectiveTime' classCode='PCPR'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNoteComponentOfEncompassingEncounter6 constraints.validation.error='EncompassingEncounter6EffectiveTime EncompassingEncounter6Id EncompassingEncounter6Location'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNoteComponentOfEncompassingEncounter6LocationHealthCareFacility1 constraints.validation.error='HealthCareFacility1Id'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pX-bMGknEeGCCOsAP2C6Nw" base_Class="_0fjXAEEvEeGdmoWy_aLP0Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Postprocedure Diagnosis' templateId.root='2.16.840.1.113883.10.20.22.4.51' constraints.validation.error='PostprocedureDiagnosisTemplateId PostprocedureDiagnosisClassCode PostprocedureDiagnosisCode PostprocedureDiagnosisMoodCode PostprocedureDiagnosisProblemObservation' code.codeSystemName='LOINC' classCode='ACT' code.code='59769-0' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pYG-EmknEeGCCOsAP2C6Nw" base_Class="_0baBYEEwEeGdmoWy_aLP0Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.4.65' constraints.validation.error='PreoperativeDiagnosisTemplateId PreoperativeDiagnosisClassCode PreoperativeDiagnosisCode PreoperativeDiagnosisMoodCode PreoperativeDiagnosisProblemObservation' code.codeSystemName='LOINC' classCode='ACT' code.code='10219-4' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pYRWIGknEeGCCOsAP2C6Nw" base_Class="_4qKukEE1EeGdmoWy_aLP0Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Instructions' templateId.root='2.16.840.1.113883.10.20.22.2.45' constraints.validation.error='InstructionsSectionTemplateId InstructionsSectionCode InstructionsSectionText InstructionsSectionTitle' code.codeSystemName='LOINC' constraints.validation.warning='InstructionsSectionInstructions' code.code='69730-0'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pYYq4GknEeGCCOsAP2C6Nw" base_Class="_LNP08EFGEeGorO80f-Cppg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.4.36' constraints.validation.error='AdmissionMedicationTemplateId AdmissionMedicationClassCode AdmissionMedicationCode AdmissionMedicationMoodCode AdmissionMedicationMedicationActivity' code.codeSystemName='LOINC' classCode='ACT' code.code='42346-7' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pYhNwGknEeGCCOsAP2C6Nw" base_Class="_5K6mAEFHEeGorO80f-Cppg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Admission diagnosis' templateId.root='2.16.840.1.113883.10.20.22.4.34' constraints.validation.error='HospitalAdmissionDiagnosisTemplateId HospitalAdmissionDiagnosisClassCode HospitalAdmissionDiagnosisCode HospitalAdmissionDiagnosisMoodCode HospitalAdmissionDiagnosisProblemObservation' code.codeSystemName='LOINC' classCode='ACT' code.code='46241-6' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pZHDoGknEeGCCOsAP2C6Nw" base_Class="_M7xhgEIxEeG4bZAl2IGXmQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.warning='MedicationDispenseAssignedEntityAddr'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pZKuAGknEeGCCOsAP2C6Nw" base_Class="_wJHu0EX8EeG6e5lG0YsSyQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.warning='ImmunizationMedicationInformationManufacturedMaterialCodeOriginalText ImmunizationMedicationInformationManufacturedMaterialOriginalTextReference ImmunizationMedicationInformationManufacturedMaterialLotNumberText' constraints.validation.info='ImmunizationMedicationInformationManufacturedMaterialCodeTranslation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pZQ0oGknEeGCCOsAP2C6Nw" base_Class="_XwBooEUuEeGdQ4KWAmnbhw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.10.20.22.1.5' constraints.validation.error='DiagnosticImagingReportTemplateId GeneralHeaderConstraintsCode DiagnosticImagingReportId DiagnosticImagingReportInformant DiagnosticImagingReportDocumentationOf DiagnosticImagingReportFindingsSection' code.codeSystemName='LOINC' constraints.validation.info='DiagnosticImagingReportInformationRecipient DiagnosticImagingReportParticipant1 DiagnosticImagingReportInFulfillmentOf DiagnosticImagingReportRelatedDocument DiagnosticImagingReportComponentOf'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportParticipant constraints.validation.error='ParticipantAssociatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportParticipantAssociatedEntity constraints.validation.error='AssociatedEntityAssociatedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportParticipantAssociatedEntityPerson constraints.validation.error='PersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportDocumentationOf constraints.validation.error='DocumentationOfServiceEvent3'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportDocumentationOfServiceEvent4 constraints.validation.error='ServiceEvent4ClassCode ServiceEvent4Code' classCode='ACT' constraints.validation.warning='ServiceEvent4Id ServiceEvent4PhysicianReadingStudyPerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportComponentOf constraints.validation.error='ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportComponentOfEncompassingEncounter7 constraints.validation.error='EncompassingEncounter7EffectiveTime EncompassingEncounter7Id' constraints.validation.warning='EncompassingEncounter7PhysicianofRecordParticipant' constraints.validation.info='EncompassingEncounter7ResponsibleParty'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportComponentOfEncompassingEncounter7ResponsibleParty constraints.validation.error='ResponsiblePartyAssignedEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pZp2MGknEeGCCOsAP2C6Nw" base_Class="_H1UdcEVEEeGAh_iQGJvI5w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.6.2.1' constraints.validation.error='PhysicianReadingStudyPerformerTemplateId PhysicianReadingStudyPerformerTypeCode PhysicianReadingStudyPerformerAssignedEntity' constraints.validation.info='PhysicianReadingStudyPerformerTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPhysicianReadingStudyPerformerAssignedEntity constraints.validation.error='AssignedEntityCode AssignedEntityId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pZyZEGknEeGCCOsAP2C6Nw" base_Class="_H_izsEb1EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.6.2.2' constraints.validation.error='PhysicianofRecordParticipantTemplateId PhysicianofRecordParticipantTypeCode PhysicianofRecordParticipantAssignedEntity' typeCode='ATND'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPhysicianofRecordParticipantAssignedEntity constraints.validation.error='AssignedEntityCode AssignedEntityId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPhysicianofRecordParticipantAssignedEntityAssignedPerson constraints.validation.warning='AssignedPersonName'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pZ8KEGknEeGCCOsAP2C6Nw" base_Class="_vjf-wEb4EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='1.2.840.10008.2.16.4' templateId.root='2.16.840.1.113883.10.20.6.2.6' constraints.validation.error='StudyActTemplateId StudyActClassCode StudyActMoodCode StudyActId StudyActCode StudyActSeriesAct' code.codeSystemName='DCM' constraints.validation.warning='StudyActEffectiveTime' classCode='ACT' code.code='113014' moodCode='EVN' constraints.validation.info='StudyActText'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_paGiIGknEeGCCOsAP2C6Nw" base_Class="_N2wscEb6EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='1.2.840.10008.2.16.4' templateId.root='2.16.840.1.113883.10.20.22.4.63' constraints.validation.error='SeriesActTemplateId SeriesActClassCode SeriesActMoodCode SeriesActCode SeriesActId SeriesActSOPInstanceObservation' code.codeSystemName='DCM' classCode='ACT' constraints.validation.warning='SeriesActEffectiveTime' code.code='113015' moodCode='EVN' constraints.validation.info='SeriesActText'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_paSIUGknEeGCCOsAP2C6Nw" base_Class="_9o7WcEb6EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.6.2.8' constraints.validation.error='SOPInstanceObservationTemplateId SOPInstanceObservationClassCode SOPInstanceObservationId SOPInstanceObservationMoodCode SOPInstanceObservationCode' constraints.validation.warning='SOPInstanceObservationEffectiveTime SOPInstanceObservationText' classCode='DGIMG' constraints.validation.info='SOPInstanceObservationSOPInstanceObservation SOPInstanceObservationPurposeofReferenceObservation SOPInstanceObservationReferencedFramesObservation' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pacgYGknEeGCCOsAP2C6Nw" base_Class="_J-F8UEb7EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='DCM' templateId.root='2.16.840.1.113883.10.20.6.2.9' constraints.validation.error='PurposeofReferenceObservationTemplateId PurposeofReferenceObservationClassCode PurposeofReferenceObservationCode PurposeofReferenceObservationMoodCode' constraints.validation.warning='PurposeofReferenceObservationValue' classCode='OBS' moodCode='EVN' value.codeSystem='1.2.840.10008.2.16.4'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_paj1ImknEeGCCOsAP2C6Nw" base_Class="_1Zyf4Eb8EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='1.2.840.10008.2.16.4' code.displayName='Referenced Frames' templateId.root='2.16.840.1.113883.10.20.6.2.10' constraints.validation.error='ReferencedFramesObservationTemplateId ReferencedFramesObservationClassCode ReferencedFramesObservationCode ReferencedFramesObservationMoodCode ReferencedFramesObservationBoundaryObservation' code.codeSystemName='DCM' classCode='ROIBND' code.code='121190' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_paqi0GknEeGCCOsAP2C6Nw" base_Class="_9Yv6gEb8EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='1.2.840.10008.2.16.4' code.displayName='Frames for Display' templateId.root='2.16.840.1.113883.10.20.6.2.11' constraints.validation.error='BoundaryObservationTemplateId BoundaryObservationClassCode BoundaryObservationCode BoundaryObservationMoodCode BoundaryObservationValue' code.codeSystemName='DCM' classCode='OBS' code.code='113036' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_paxQgGknEeGCCOsAP2C6Nw" base_Class="_9xjKIEb-EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.6.2.12' constraints.validation.error='TextObservationTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_payeoGknEeGCCOsAP2C6Nw" base_Class="_Px2t4Eb_EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.6.2.14' constraints.validation.error='QuantityMeasurementObservationTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pazswGknEeGCCOsAP2C6Nw" base_Class="_pmiz8Eb_EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.6.2.13' constraints.validation.error='CodeObservationsTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_pa064GknEeGCCOsAP2C6Nw" base_Class="_crHC0EcAEeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.6.2.5' constraints.validation.error='ProcedureContextTemplateId'</annotation>
  </Ecore:EClass>
</xmi:XMI>
