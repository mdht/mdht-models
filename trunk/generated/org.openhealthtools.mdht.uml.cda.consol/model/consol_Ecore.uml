<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_qQyD8jxVEd6JwqSGecoePg" name="consol">
    <packageImport xmi:id="_JCoH8FccEeCzOKs2Ez1M5w">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_UbYI4FccEeCzOKs2Ez1M5w">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_qQyD8jxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_Y1gK0FccEeCzOKs2Ez1M5w">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/ihe.uml#_qQyD8jxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_eqGmsFccEeCzOKs2Ez1M5w">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/hitsp.uml#_qQyD8jxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_O-ELoFccEeCzOKs2Ez1M5w">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_R7HyoFccEeCzOKs2Ez1M5w">
      <importedPackage href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_KnCD4CFjEd-3s7f6mWX-3A"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_TQ-5oFfdEeCb0LEisK_hTQ" name="StatusObservation" clientDependency="_TRRNgFfdEeCb0LEisK_hTQ">
      <eAnnotations xmi:id="_TRJRsFfdEeCb0LEisK_hTQ" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_V3Jy4HrTEd68l9lQ-TLEBQ"/>
      </eAnnotations>
      <ownedRule xmi:id="_TQ-5pVfdEeCb0LEisK_hTQ" name="StatusObservationNoAdditionalParticipants" constrainedElement="_TQ-5oFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_TQ-5plfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>self.participant->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_exIRUFgEEeCcnqJUjkVAag" name="StatusObservationTemplateId" constrainedElement="_TQ-5oFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_exI4YFgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.57')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_exSpYFgEEeCcnqJUjkVAag" name="StatusObservationClassCode" constrainedElement="_TQ-5oFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_exSpYVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_exWTwFgEEeCcnqJUjkVAag" name="StatusObservationMoodCode" constrainedElement="_TQ-5oFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_exWTwVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_exalMFgEEeCcnqJUjkVAag" name="StatusObservationCode" constrainedElement="_TQ-5oFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_exalMVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '33999-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_exePkFgEEeCcnqJUjkVAag" name="StatusObservationStatusCode" constrainedElement="_TQ-5oFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_exePkVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_exgEwFgEEeCcnqJUjkVAag" name="StatusObservationValue" constrainedElement="_TQ-5oFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_exgEwVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CE)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TRMVAFfdEeCb0LEisK_hTQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <substitution xmi:id="_TRRNgFfdEeCb0LEisK_hTQ" client="_TQ-5oFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_V3Jy4HrTEd68l9lQ-TLEBQ"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_V3Jy4HrTEd68l9lQ-TLEBQ"/>
      </substitution>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VD4aoFfdEeCb0LEisK_hTQ" name="Condition" clientDependency="_VF5z41fdEeCb0LEisK_hTQ _VF6a8FfdEeCb0LEisK_hTQ _VF6a8VfdEeCb0LEisK_hTQ _VF6a8lfdEeCb0LEisK_hTQ">
      <eAnnotations xmi:id="_VD7d8FfdEeCb0LEisK_hTQ" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-problemList.uml#_GgvgUDxbEd6JwqSGecoePg"/>
      </eAnnotations>
      <ownedComment xmi:id="_VF5z4FfdEeCb0LEisK_hTQ">
        <body>A problem is a clinical statement that a clinician is particularly concerned about and wants to track. It has important patient management use cases (e.g. health records often present the problem list as a way of summarizing a patient's medical history).</body>
      </ownedComment>
      <ownedComment xmi:id="_VF5z4VfdEeCb0LEisK_hTQ">
        <annotatedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_wSnPAGaQEd6Hk_bPOfEjYA"/>
        <body>This entry is a specialization of the Concern Entry, wherein the subject of the concern is focused on a problem.</body>
      </ownedComment>
      <ownedRule xmi:id="_VFzGMFfdEeCb0LEisK_hTQ" name="ConditionEntryRelationshipRequired">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VFzGMVfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.entryRelationship->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VF0UUFfdEeCb0LEisK_hTQ" name="ConditionSubjectOfTarget">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VF0UUVfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SUBJ, cda::ClinicalStatement)->forAll(target : cda::ClinicalStatement | not target.oclIsUndefined() and &#xD;&#xA;  (target.oclIsKindOf(ccd::ProblemObservation) or target.oclIsKindOf(ccd::AlertObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VF07YFfdEeCb0LEisK_hTQ" name="ConditionContainsProblemObservation">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VF07YVfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>self.getSection().oclIsKindOf(ccd::ProblemSection) implies self.getObservations()&#xD;&#xA;   ->exists(obs : cda::Observation | obs.oclIsKindOf(ccd::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VF1icFfdEeCb0LEisK_hTQ" name="ConditionContainsAlertObservation">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VF1icVfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>self.getSection().oclIsKindOf(ccd::AlertsSection) implies self.getObservations()&#xD;&#xA;   ->exists(obs : cda::Observation | obs.oclIsKindOf(ccd::AlertObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VF2JgFfdEeCb0LEisK_hTQ" name="ConditionContainsPatientAwareness">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VF2JgVfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>self.participant->one(partic : cda::Participant2 | partic.oclIsKindOf(ccd::PatientAwareness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VF3XoFfdEeCb0LEisK_hTQ" name="ConditionEffectiveTimeLowHigh">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/ihe.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VF3XoVfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.effectiveTime.low.oclIsUndefined()&#xD;&#xA;   and ((self.statusCode.code = 'completed' or self.statusCode.code = 'aborted') implies not self.effectiveTime.high.oclIsUndefined())&#xD;&#xA;   and ((self.statusCode.code &lt;> 'completed' and self.statusCode.code &lt;> 'aborted') implies self.effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VD4aoVfdEeCb0LEisK_hTQ" name="ConditionHasTreatingProvider" constrainedElement="_VD4aoFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VD4aolfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.performer->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VD4ao1fdEeCb0LEisK_hTQ" name="ConditionHasProviderId" constrainedElement="_VD4aoFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VD4apFfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>self.performer->exists(p : cda::Performer2 | p.assignedEntity.id->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VD4apVfdEeCb0LEisK_hTQ" name="ConditionHasProviderTreatmentTime" constrainedElement="_VD4aoFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VD4aplfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>self.performer->exists(p : cda::Performer2 | p.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_exhS4FgEEeCcnqJUjkVAag" name="ConditionTemplateId" constrainedElement="_VD4aoFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_exh58FgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_exsSAFgEEeCcnqJUjkVAag" name="ConditionClassCode" constrainedElement="_VD4aoFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_exsSAVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_exuHMFgEEeCcnqJUjkVAag" name="ConditionMoodCode" constrainedElement="_VD4aoFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_exuuQFgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_exv8YFgEEeCcnqJUjkVAag" name="ConditionId" constrainedElement="_VD4aoFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_exv8YVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_exyYoFgEEeCcnqJUjkVAag" name="ConditionCodeNullFlavor" constrainedElement="_VD4aoFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_exyYoVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.nullFlavor = vocab::NullFlavor::NA)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ex3RIFgEEeCcnqJUjkVAag" name="ConditionEffectiveTime" constrainedElement="_VD4aoFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ex3RIVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_eyZcoFgEEeCcnqJUjkVAag" name="ConditionEpisodeObservation" constrainedElement="_VD4aoFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_eyZcoVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::EpisodeObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VF5z4lfdEeCb0LEisK_hTQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <substitution xmi:id="_VF5z41fdEeCb0LEisK_hTQ" client="_VD4aoFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_GgvgUDxbEd6JwqSGecoePg"/>
      </substitution>
      <substitution xmi:id="_VF6a8FfdEeCb0LEisK_hTQ" client="_VD4aoFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/ihe.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/ihe.uml#_GgvgUDxbEd6JwqSGecoePg"/>
      </substitution>
      <substitution xmi:id="_VF6a8VfdEeCb0LEisK_hTQ" client="_VD4aoFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_wSnPAGaQEd6Hk_bPOfEjYA"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_wSnPAGaQEd6Hk_bPOfEjYA"/>
      </substitution>
      <substitution xmi:id="_VF6a8lfdEeCb0LEisK_hTQ" client="_VD4aoFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-problemList.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-problemList.uml#_GgvgUDxbEd6JwqSGecoePg"/>
      </substitution>
      <ownedOperation xmi:id="_eypUQFgEEeCcnqJUjkVAag" name="getEpisodeObservation" isQuery="true" bodyCondition="_eyp7UlgEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_eyp7UlgEEeCcnqJUjkVAag" name="body" constrainedElement="_eypUQFgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_eyp7U1gEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::EpisodeObservation))->asSequence()->first().oclAsType(consol::EpisodeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_eyp7UFgEEeCcnqJUjkVAag" type="_VEHrMFfdEeCb0LEisK_hTQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_eyp7UVgEEeCcnqJUjkVAag" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_e0a14FgEEeCcnqJUjkVAag" name="getConditionEntries" isQuery="true" bodyCondition="_e0a141gEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_e0a141gEEeCcnqJUjkVAag" name="body" constrainedElement="_e0a14FgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0a15FgEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ConditionEntry)).oclAsType(consol::ConditionEntry)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_e0a14VgEEeCcnqJUjkVAag" type="_VEUfgFfdEeCb0LEisK_hTQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_e0a14lgEEeCcnqJUjkVAag" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VEHrMFfdEeCb0LEisK_hTQ" name="EpisodeObservation" clientDependency="_VESqUVfdEeCb0LEisK_hTQ">
      <eAnnotations xmi:id="_VEQ1IFfdEeCb0LEisK_hTQ" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_AwcXkGaKEd6Hk_bPOfEjYA"/>
      </eAnnotations>
      <ownedComment xmi:id="_VEHrMVfdEeCb0LEisK_hTQ">
        <body>Episode observations are used to distinguish among multiple occurrences of a problem or social history item. An episode observation is used to indicate that a problem act represents a new episode, distinct from other episodes of a similar concern.</body>
      </ownedComment>
      <ownedRule xmi:id="_VEHrNFfdEeCb0LEisK_hTQ" name="EpisodeObservationOneEntryRelationshipSUBJ" constrainedElement="_VEHrMFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VEHrNVfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SUBJ, ccd::ProblemAct)->size() = 1&#xD;&#xA;  or self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SUBJ, ccd::SocialHistoryObservation)->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VEHrNlfdEeCb0LEisK_hTQ" name="EpisodeObservationExistsEntryRelationshipSAS" constrainedElement="_VEHrMFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VEHrN1fdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SAS, ccd::ProblemAct)->size() >0&#xD;&#xA;  or self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SAS, ccd::SocialHistoryObservation)->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ex4fQFgEEeCcnqJUjkVAag" name="EpisodeObservationTemplateId" constrainedElement="_VEHrMFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ex4fQVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.41')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ex8wsFgEEeCcnqJUjkVAag" name="EpisodeObservationClassCode" constrainedElement="_VEHrMFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ex8wsVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_eyN2cFgEEeCcnqJUjkVAag" name="EpisodeObservationMoodCode" constrainedElement="_VEHrMFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_eyN2cVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_eyQSsFgEEeCcnqJUjkVAag" name="EpisodeObservationCode" constrainedElement="_VEHrMFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_eyQSsVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_eyT9EFgEEeCcnqJUjkVAag" name="EpisodeObservationStatusCode" constrainedElement="_VEHrMFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_eyT9EVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_eyXAYFgEEeCcnqJUjkVAag" name="EpisodeObservationValue" constrainedElement="_VEHrMFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_eyXAYVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.code = '404684003' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VESqUFfdEeCb0LEisK_hTQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <substitution xmi:id="_VESqUVfdEeCb0LEisK_hTQ" client="_VEHrMFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_AwcXkGaKEd6Hk_bPOfEjYA"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_AwcXkGaKEd6Hk_bPOfEjYA"/>
      </substitution>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VEUfgFfdEeCb0LEisK_hTQ" name="ConditionEntry" clientDependency="_VFx4ElfdEeCb0LEisK_hTQ _VFx4E1fdEeCb0LEisK_hTQ _VFx4FFfdEeCb0LEisK_hTQ">
      <eAnnotations xmi:id="_VEZ_EFfdEeCb0LEisK_hTQ" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-problemList.uml#_c6bN4BvgEd-yI6xBTkJSNw"/>
      </eAnnotations>
      <ownedComment xmi:id="_VFx4EFfdEeCb0LEisK_hTQ">
        <body>&lt;p>This section makes use of the linking, severity, clinical status and comment content specifications defined elsewhere in the technical framework. In HL7 RIM parlance, observations about a problem, complaint, symptom, finding, diagnosis, or functional limitation of a patient is the event (moodCode='EVN') of observing (&amp;lt;observation classCode='OBS'>) that problem. The &amp;lt;value> of the observation comes from a controlled vocabulary representing such things. The &amp;lt;code> contained within the &amp;lt;observation> describes the method of determination from yet another controlled vocabulary.&lt;/p>&#xD;
&#xD;
&lt;p>The basic pattern for reporting a problem uses the CDA &amp;lt;observation> element, setting the classCode='OBS' to represent that this is an observation of a problem, and the moodCode='EVN', to represent that this is an observation that has in fact taken place. The negationInd attribute, if true, specifies that the problem indicated was observed to not have occurred (which is subtly but importantly different from having not been observed). The value of negationInd should not normally be set to true. Instead, to record that there is &quot;no prior history of chicken pox&quot;, one would use a coded value indicated exactly that. However, it is not always possible to record problems in this manner, especially if using a controlled vocabulary that does not supply pre-coordinated negations , or which do not allow the negation to be recorded with post-coordinated coded terminology.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_VEUfgVfdEeCb0LEisK_hTQ">
        <body>Condition Entry is not defined as a separate template in HITSP C83, but only as additional constraints on the IHE Problem Entry when embedded in a Condition template. In this model, Condition Entry is defined as a separate class (without a template ID) that restricts the IHE Problem Entry. When these templates are consolidated in the new implementation guide, these Condition Entry constraints will be merged with Problem Entry.</body>
      </ownedComment>
      <ownedRule xmi:id="_VFu0wFfdEeCb0LEisK_hTQ" name="ConditionEntryInformationSource">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_IjIO0DxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VFu0wVfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;&#xA;or not self.getSection().informant->isEmpty()&#xD;&#xA;or not self.getClinicalDocument().informant->isEmpty()&#xD;&#xA;or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;&#xA;or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;&#xA;   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;&#xA;   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VFvb0FfdEeCb0LEisK_hTQ" name="ConditionEntryContainsPatientAwareness">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_IjIO0DxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VFvb0VfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>self.participant->one(partic : cda::Participant2 | partic.oclIsKindOf(ccd::PatientAwareness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VFwC4FfdEeCb0LEisK_hTQ" name="ConditionEntryHasTextReference">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_MIoHYCQKEeCxCon8a79rfA"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VFwC4VfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VFwp8FfdEeCb0LEisK_hTQ" name="ConditionEntryCommentInversionInd">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_3ZiEwGdIEd6Hk_bPOfEjYA"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VFwp8VfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(rel : cda::EntryRelationship | (not rel.act.oclIsUndefined() and rel.act.oclIsKindOf(ihe::Comment)) implies rel.inversionInd='true')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VEUfglfdEeCb0LEisK_hTQ" name="ConditionEntryHasOnsetDate" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VEUfg1fdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VEUfhFfdEeCb0LEisK_hTQ" name="ConditionEntryHasResolutionDate" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VEUfhVfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VEUfhlfdEeCb0LEisK_hTQ" name="ConditionEntryHasUnknownResolutionDate" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VEUfh1fdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_eyqiYFgEEeCcnqJUjkVAag" name="ConditionEntryTemplateId" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_eyqiYVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_eyyeMFgEEeCcnqJUjkVAag" name="ConditionEntryMoodCode" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_eyyeMVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ey0TYFgEEeCcnqJUjkVAag" name="ConditionEntryId" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ey0TYVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ey3WsFgEEeCcnqJUjkVAag" name="ConditionEntryCode" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ey3WsVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '404684003' or value.code = '409586006' or value.code = '282291009' or value.code = '64572001' or value.code = '248536006' or value.code = '418799008' or value.code = '55607006')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ey5y8FgEEeCcnqJUjkVAag" name="ConditionEntryText" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ey5y8VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ey8PMFgEEeCcnqJUjkVAag" name="ConditionEntryStatusCode" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ey8PMVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ey-rcFgEEeCcnqJUjkVAag" name="ConditionEntryEffectiveTime" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ey-rcVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezBHsFgEEeCcnqJUjkVAag" name="ConditionEntryValue" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezBHsVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezUpsFgEEeCcnqJUjkVAag" name="ConditionEntryAgeObservation" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezUpsVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_eznkoFgEEeCcnqJUjkVAag" name="ConditionEntrySeverity" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_eznkoVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Severity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezzK0FgEEeCcnqJUjkVAag" name="ConditionEntryProblemStatusObservation" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezzK0VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0AmMFgEEeCcnqJUjkVAag" name="ConditionEntryHealthStatusObservation" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0AmMVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::HealthStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0ZAsFgEEeCcnqJUjkVAag" name="ConditionEntryComment" constrainedElement="_VEUfgFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0ZAsVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VFx4EVfdEeCb0LEisK_hTQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <substitution xmi:id="_VFx4ElfdEeCb0LEisK_hTQ" client="_VEUfgFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_IjIO0DxbEd6JwqSGecoePg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_IjIO0DxbEd6JwqSGecoePg"/>
      </substitution>
      <substitution xmi:id="_VFx4E1fdEeCb0LEisK_hTQ" client="_VEUfgFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_3ZiEwGdIEd6Hk_bPOfEjYA"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_3ZiEwGdIEd6Hk_bPOfEjYA"/>
      </substitution>
      <substitution xmi:id="_VFx4FFfdEeCb0LEisK_hTQ" client="_VEUfgFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-problemList.uml#_c6bN4BvgEd-yI6xBTkJSNw"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-problemList.uml#_c6bN4BvgEd-yI6xBTkJSNw"/>
      </substitution>
      <ownedOperation xmi:id="_ezV30FgEEeCcnqJUjkVAag" name="getAgeObservation" isQuery="true" bodyCondition="_ezV301gEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_ezV301gEEeCcnqJUjkVAag" name="body" constrainedElement="_ezV30FgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezV31FgEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AgeObservation))->asSequence()->first().oclAsType(consol::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ezV30VgEEeCcnqJUjkVAag" type="_VEookFfdEeCb0LEisK_hTQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ezV30lgEEeCcnqJUjkVAag" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ezpZ0FgEEeCcnqJUjkVAag" name="getSeverity" isQuery="true" bodyCondition="_ezpZ01gEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_ezpZ01gEEeCcnqJUjkVAag" name="body" constrainedElement="_ezpZ0FgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezpZ1FgEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Severity))->asSequence()->first().oclAsType(consol::Severity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ezpZ0VgEEeCcnqJUjkVAag" type="_VE1c4FfdEeCb0LEisK_hTQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ezpZ0lgEEeCcnqJUjkVAag" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ez0Y8FgEEeCcnqJUjkVAag" name="getProblemStatusObservation" isQuery="true" bodyCondition="_ez0Y81gEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_ez0Y81gEEeCcnqJUjkVAag" name="body" constrainedElement="_ez0Y8FgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ez0Y9FgEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemStatusObservation))->asSequence()->first().oclAsType(consol::ProblemStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ez0Y8VgEEeCcnqJUjkVAag" type="_VFF7kFfdEeCb0LEisK_hTQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ez0Y8lgEEeCcnqJUjkVAag" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_e0B0UFgEEeCcnqJUjkVAag" name="getHealthStatusObservation" isQuery="true" bodyCondition="_e0B0U1gEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_e0B0U1gEEeCcnqJUjkVAag" name="body" constrainedElement="_e0B0UFgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0B0VFgEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HealthStatusObservation))->asSequence()->first().oclAsType(consol::HealthStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_e0B0UVgEEeCcnqJUjkVAag" type="_VFSI0FfdEeCb0LEisK_hTQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_e0B0UlgEEeCcnqJUjkVAag" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_e0aO0FgEEeCcnqJUjkVAag" name="getComments" isQuery="true" bodyCondition="_e0aO01gEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_e0aO01gEEeCcnqJUjkVAag" name="body" constrainedElement="_e0aO0FgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0aO1FgEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Comment)).oclAsType(consol::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_e0aO0VgEEeCcnqJUjkVAag" type="_VFe9IFfdEeCb0LEisK_hTQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_e0aO0lgEEeCcnqJUjkVAag" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VEookFfdEeCb0LEisK_hTQ" name="AgeObservation" clientDependency="_VEznsVfdEeCb0LEisK_hTQ">
      <eAnnotations xmi:id="_VExygFfdEeCb0LEisK_hTQ" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_S7rEABZ1Ed-i6Lz80y5G5g"/>
      </eAnnotations>
      <ownedComment xmi:id="_VEookVfdEeCb0LEisK_hTQ">
        <body>A common scenario is that a patient will know the age of a relative when they had a certain condition or when they died, but will not know the actual year (e.g. &quot;grandpa died of a heart attack at the age of 50&quot;). Often times, neither precise dates nor ages are known (e.g. &quot;cousin died of congenital heart disease as an infant&quot;). In all cases, dates and times and ages can be expressed in narrative.</body>
      </ownedComment>
      <ownedRule xmi:id="_VEooklfdEeCb0LEisK_hTQ" name="AgeObservationRelatedSubjectBirthTime" constrainedElement="_VEookFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VEook1fdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.subject.relatedSubject.subject.birthTime.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezDj8FgEEeCcnqJUjkVAag" name="AgeObservationTemplateId" constrainedElement="_VEookFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezDj8VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezJDgFgEEeCcnqJUjkVAag" name="AgeObservationClassCode" constrainedElement="_VEookFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezJDgVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezK4sFgEEeCcnqJUjkVAag" name="AgeObservationMoodCode" constrainedElement="_VEookFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezLfwFgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezN8AFgEEeCcnqJUjkVAag" name="AgeObservationCode" constrainedElement="_VEookFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezN8AVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '397659008' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezQ_UFgEEeCcnqJUjkVAag" name="AgeObservationStatusCode" constrainedElement="_VEookFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezQ_UVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezS0gFgEEeCcnqJUjkVAag" name="AgeObservationValue" constrainedElement="_VEookFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezS0gVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VEznsFfdEeCb0LEisK_hTQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <substitution xmi:id="_VEznsVfdEeCb0LEisK_hTQ" client="_VEookFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_S7rEABZ1Ed-i6Lz80y5G5g"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_S7rEABZ1Ed-i6Lz80y5G5g"/>
      </substitution>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VE1c4FfdEeCb0LEisK_hTQ" name="Severity" clientDependency="_VFEGYVfdEeCb0LEisK_hTQ _VFEGYlfdEeCb0LEisK_hTQ">
      <eAnnotations xmi:id="_VE6VYFfdEeCb0LEisK_hTQ" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_MIoHYCQKEeCxCon8a79rfA"/>
      </eAnnotations>
      <ownedComment xmi:id="_VE1c4VfdEeCb0LEisK_hTQ">
        <body>This specification models a severity observation as a separate observation from the condition. While this model is different from work presently underway by various organizations (i.e., SNOMED, HL7, TermInfo), it is not wholly incompatible with that work. In that work, qualifiers may be used to identify severity in the coded condition observation, and a separate severity observation is no longer necessary. The use of qualifiers is not precluded by this specification. However, to support semantic interoperability between EMR systems using different vocabularies, this specification does require that severity information also be provided in a separate observation. This ensures that all EMR systems have equal access to the information, regardless of the vocabularies they support.</body>
      </ownedComment>
      <ownedRule xmi:id="_VE1c4lfdEeCb0LEisK_hTQ" name="SeverityHasTextReference" constrainedElement="_VE1c4FfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VE1c41fdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezWe4FgEEeCcnqJUjkVAag" name="SeverityTemplateId" constrainedElement="_VE1c4FfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezWe4VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezY7IFgEEeCcnqJUjkVAag" name="SeverityClassCode" constrainedElement="_VE1c4FfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezY7IVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezawUFgEEeCcnqJUjkVAag" name="SeverityMoodCode" constrainedElement="_VE1c4FfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezawUVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezdMkFgEEeCcnqJUjkVAag" name="SeverityCode" constrainedElement="_VE1c4FfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezdzoFgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'SEV' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezfo0FgEEeCcnqJUjkVAag" name="SeverityText" constrainedElement="_VE1c4FfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezfo0VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezisIFgEEeCcnqJUjkVAag" name="SeverityStatusCode" constrainedElement="_VE1c4FfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezisIVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezlvcFgEEeCcnqJUjkVAag" name="SeverityValue" constrainedElement="_VE1c4FfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezlvcVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.1063' and (value.code = 'H' or value.code = 'M' or value.code = 'L')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VFEGYFfdEeCb0LEisK_hTQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <substitution xmi:id="_VFEGYVfdEeCb0LEisK_hTQ" client="_VE1c4FfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_ILkpIHrSEd68l9lQ-TLEBQ"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_ILkpIHrSEd68l9lQ-TLEBQ"/>
      </substitution>
      <substitution xmi:id="_VFEGYlfdEeCb0LEisK_hTQ" client="_VE1c4FfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_MIoHYCQKEeCxCon8a79rfA"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_MIoHYCQKEeCxCon8a79rfA"/>
      </substitution>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VFF7kFfdEeCb0LEisK_hTQ" name="ProblemStatusObservation" clientDependency="_VFQToVfdEeCb0LEisK_hTQ _VFQTolfdEeCb0LEisK_hTQ _VFQTo1fdEeCb0LEisK_hTQ">
      <eAnnotations xmi:id="_VFKNAFfdEeCb0LEisK_hTQ" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_s7LQECQNEeCxCon8a79rfA"/>
      </eAnnotations>
      <ownedComment xmi:id="_VFF7kVfdEeCb0LEisK_hTQ">
        <body>Any problem or allergy observation may reference a problem status observation. The clinical status observation records information about the current status of the problem or allergy, for example, whether it is active, in remission, resolved, et cetera.</body>
      </ownedComment>
      <ownedRule xmi:id="_VFF7klfdEeCb0LEisK_hTQ" name="ProblemStatusObservationHasTextReference">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_MIoHYCQKEeCxCon8a79rfA"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VFF7k1fdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezqA4VgEEeCcnqJUjkVAag" name="StatusObservationTemplateId" constrainedElement="_VFF7kFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezqn8FgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezu5YFgEEeCcnqJUjkVAag" name="StatusObservationValue" constrainedElement="_VFF7kFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezu5YVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '55561003' or value.code = '73425007' or value.code = '90734009' or value.code = '7087005' or value.code = '255227004' or value.code = '415684004' or value.code = '410516002' or value.code = '413322009')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ezxVoFgEEeCcnqJUjkVAag" name="ProblemStatusObservationText" constrainedElement="_VFF7kFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezxVoVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VFQToFfdEeCb0LEisK_hTQ" general="_TQ-5oFfdEeCb0LEisK_hTQ"/>
      <substitution xmi:id="_VFQToVfdEeCb0LEisK_hTQ" client="_VFF7kFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_V3Jy4HrTEd68l9lQ-TLEBQ"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_V3Jy4HrTEd68l9lQ-TLEBQ"/>
      </substitution>
      <substitution xmi:id="_VFQTolfdEeCb0LEisK_hTQ" client="_VFF7kFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_TrwngGaJEd6Hk_bPOfEjYA"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_TrwngGaJEd6Hk_bPOfEjYA"/>
      </substitution>
      <substitution xmi:id="_VFQTo1fdEeCb0LEisK_hTQ" client="_VFF7kFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_s7LQECQNEeCxCon8a79rfA"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_s7LQECQNEeCxCon8a79rfA"/>
      </substitution>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VFSI0FfdEeCb0LEisK_hTQ" name="HealthStatusObservation" clientDependency="_VFdH8VfdEeCb0LEisK_hTQ _VFdvAFfdEeCb0LEisK_hTQ _VFdvAVfdEeCb0LEisK_hTQ">
      <eAnnotations xmi:id="_VFVMIVfdEeCb0LEisK_hTQ" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_R7NF0CQREeCxCon8a79rfA"/>
      </eAnnotations>
      <ownedComment xmi:id="_VFSI0VfdEeCb0LEisK_hTQ">
        <body>The health status observation records information about the current health status of the patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_VFSI0lfdEeCb0LEisK_hTQ" name="HealthStatusObservationHasTextReference">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_MIoHYCQKEeCxCon8a79rfA"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VFSI01fdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ez1AAVgEEeCcnqJUjkVAag" name="StatusObservationTemplateId" constrainedElement="_VFSI0FfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ez1nEFgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.1.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ez5RcFgEEeCcnqJUjkVAag" name="StatusObservationCode" constrainedElement="_VFSI0FfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ez5RcVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '11323-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ez8UwFgEEeCcnqJUjkVAag" name="StatusObservationValue" constrainedElement="_VFSI0FfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ez8UwVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '81323004' or value.code = '313386006' or value.code = '162467007' or value.code = '161901003' or value.code = '271593001' or value.code = '21134002' or value.code = '161045001' or value.code = '419099009')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ez-xAFgEEeCcnqJUjkVAag" name="HealthStatusObservationText" constrainedElement="_VFSI0FfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ez-xAVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VFdH8FfdEeCb0LEisK_hTQ" general="_TQ-5oFfdEeCb0LEisK_hTQ"/>
      <substitution xmi:id="_VFdH8VfdEeCb0LEisK_hTQ" client="_VFSI0FfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_V3Jy4HrTEd68l9lQ-TLEBQ"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_V3Jy4HrTEd68l9lQ-TLEBQ"/>
      </substitution>
      <substitution xmi:id="_VFdvAFfdEeCb0LEisK_hTQ" client="_VFSI0FfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_T6kfkGaJEd6Hk_bPOfEjYA"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_T6kfkGaJEd6Hk_bPOfEjYA"/>
      </substitution>
      <substitution xmi:id="_VFdvAVfdEeCb0LEisK_hTQ" client="_VFSI0FfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_R7NF0CQREeCxCon8a79rfA"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_R7NF0CQREeCxCon8a79rfA"/>
      </substitution>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VFe9IFfdEeCb0LEisK_hTQ" name="Comment" clientDependency="_VFtmoVfdEeCb0LEisK_hTQ _VFtmolfdEeCb0LEisK_hTQ _VFtmo1fdEeCb0LEisK_hTQ">
      <eAnnotations xmi:id="_VFgLQVfdEeCb0LEisK_hTQ" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/hitsp.uml#_B973gEveEd-GNbUQBie2ig"/>
      </eAnnotations>
      <ownedComment xmi:id="_VFs_kFfdEeCb0LEisK_hTQ">
        <body>Used to contain comments associated with any of the data within the document.</body>
      </ownedComment>
      <ownedComment xmi:id="_VFs_kVfdEeCb0LEisK_hTQ">
        <body>&lt;p>This entry allows for a comment to be supplied with each entry. For CDA this structure is usually included in the target act using the &amp;lt;entryRelationship> element defined in the CDA Schema, but can also be used in the &amp;lt;component> element when the comment appears within an &amp;lt;organizer>.&lt;/p>&#xD;
&#xD;
&lt;p>Any condition or allergy may be the subject of a comment.&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_VFe9IVfdEeCb0LEisK_hTQ">
        <body>This module contains a comment to be supplied for any other entry Content Modules.</body>
      </ownedComment>
      <ownedRule xmi:id="_VFqjUFfdEeCb0LEisK_hTQ" name="CommentHasTextReference">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_MIoHYCQKEeCxCon8a79rfA"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VFqjUVfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VFrKYFfdEeCb0LEisK_hTQ" name="CommentEffectiveTimeWhenAuthorPresent">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/ihe.uml#_R_uVkEvdEd-GNbUQBie2ig"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VFrKYVfdEeCb0LEisK_hTQ">
          <language>OCL</language>
          <body>not self.author->isEmpty() implies not self.effectiveTime.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0CbYFgEEeCcnqJUjkVAag" name="CommentTemplateId" constrainedElement="_VFe9IFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0CbYVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.11')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0H68FgEEeCcnqJUjkVAag" name="CommentClassCode" constrainedElement="_VFe9IFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0H68VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0JwIFgEEeCcnqJUjkVAag" name="CommentMoodCode" constrainedElement="_VFe9IFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0JwIVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0MMYFgEEeCcnqJUjkVAag" name="CommentCode" constrainedElement="_VFe9IFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0MMYVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '48767-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0OooFgEEeCcnqJUjkVAag" name="CommentText" constrainedElement="_VFe9IFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0OooVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0Rr8FgEEeCcnqJUjkVAag" name="CommentStatusCode" constrainedElement="_VFe9IFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0Rr8VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VFtmoFfdEeCb0LEisK_hTQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <substitution xmi:id="_VFtmoVfdEeCb0LEisK_hTQ" client="_VFe9IFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_Hj3aYCQYEeCxCon8a79rfA"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_Hj3aYCQYEeCxCon8a79rfA"/>
      </substitution>
      <substitution xmi:id="_VFtmolfdEeCb0LEisK_hTQ" client="_VFe9IFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/ihe.uml#_R_uVkEvdEd-GNbUQBie2ig"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/ihe.uml#_R_uVkEvdEd-GNbUQBie2ig"/>
      </substitution>
      <substitution xmi:id="_VFtmo1fdEeCb0LEisK_hTQ" client="_VFe9IFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/hitsp.uml#_B973gEveEd-GNbUQBie2ig"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/hitsp.uml#_B973gEveEd-GNbUQBie2ig"/>
      </substitution>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VF7CAFfdEeCb0LEisK_hTQ" name="ProblemListSection" clientDependency="_VGBIo1fdEeCb0LEisK_hTQ _VGBvsFfdEeCb0LEisK_hTQ _VGBvsVfdEeCb0LEisK_hTQ">
      <eAnnotations xmi:id="_VF7pEFfdEeCb0LEisK_hTQ" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-problemList.uml#_cPtREMfaEd6VjLXh4DcWSg"/>
      </eAnnotations>
      <ownedComment xmi:id="_VGBIoFfdEeCb0LEisK_hTQ">
        <body>This section lists and describes all relevant clinical problems at the time the summary is generated. At a minimum, all pertinent current and historical problems should be listed. CDA R2 represents problems as Observations.</body>
      </ownedComment>
      <ownedComment xmi:id="_VGBIoVfdEeCb0LEisK_hTQ">
        <body>The active problem section shall contain a narrative description of the conditions currently being monitored for the patient. It shall include entries for patient conditions as described in the Entry Content Module.</body>
      </ownedComment>
      <ownedComment xmi:id="_VF7CAVfdEeCb0LEisK_hTQ" annotatedElement="_VF7CAFfdEeCb0LEisK_hTQ">
        <body>The Problem List Section contains data on the problems currently being monitored for the patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_e0bc8FgEEeCcnqJUjkVAag" name="ProblemListSectionTemplateId" constrainedElement="_VF7CAFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0bc8VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.103')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0egQFgEEeCcnqJUjkVAag" name="ProblemListSectionCode" constrainedElement="_VF7CAFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0egQVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11450-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0gVcFgEEeCcnqJUjkVAag" name="ProblemListSectionTitle" constrainedElement="_VF7CAFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0gVcVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0hjkFgEEeCcnqJUjkVAag" name="ProblemListSectionText" constrainedElement="_VF7CAFfdEeCb0LEisK_hTQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0hjkVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VGBIolfdEeCb0LEisK_hTQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <substitution xmi:id="_VGBIo1fdEeCb0LEisK_hTQ" client="_VF7CAFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_vjPMEGaGEd6Hk_bPOfEjYA"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-problem.uml#_vjPMEGaGEd6Hk_bPOfEjYA"/>
      </substitution>
      <substitution xmi:id="_VGBvsFfdEeCb0LEisK_hTQ" client="_VF7CAFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_vz5koGGsEd6bFO5yxRh3Nw"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-activeProblems.uml#_vz5koGGsEd6bFO5yxRh3Nw"/>
      </substitution>
      <substitution xmi:id="_VGBvsVfdEeCb0LEisK_hTQ" client="_VF7CAFfdEeCb0LEisK_hTQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-problemList.uml#_cPtREMfaEd6VjLXh4DcWSg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-problemList.uml#_cPtREMfaEd6VjLXh4DcWSg"/>
      </substitution>
      <ownedOperation xmi:id="_e0jYwFgEEeCcnqJUjkVAag" name="getConditions" isQuery="true" bodyCondition="_e0jYw1gEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_e0jYw1gEEeCcnqJUjkVAag" name="body" constrainedElement="_e0jYwFgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0jYxFgEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Condition)).oclAsType(consol::Condition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_e0jYwVgEEeCcnqJUjkVAag" type="_VD4aoFfdEeCb0LEisK_hTQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_e0jYwlgEEeCcnqJUjkVAag" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__kqqkFfdEeCIIf8CuAH-Kw" name="DiagnosticResultsSection" clientDependency="__ldUwVfdEeCIIf8CuAH-Kw __ldUwlfdEeCIIf8CuAH-Kw __ldUw1fdEeCIIf8CuAH-Kw">
      <eAnnotations xmi:id="__kwKIFfdEeCIIf8CuAH-Kw" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-diagnosticResults.uml#_P3GVkMieEd6mWrHPmrIIfQ"/>
      </eAnnotations>
      <ownedComment xmi:id="__lctsFfdEeCIIf8CuAH-Kw">
        <annotatedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_7TVToIiAEd66cKocspyVOg"/>
        <body>&lt;p>&#xD;
    This section contains the results of observations generated by laboratories, imaging procedures, and&#xD;
    other procedures. The scope includes hematology, chemistry, serology, virology, toxicology, microbiology, plain x-ray,&#xD;
    ultrasound, CT, MRI, angiography, cardiac echo, nuclear medicine, pathology, and procedure observations. The section&#xD;
    may contain all results for the period of time being summarized, but should include notable results such as abnormal&#xD;
    values or relevant trends.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Lab results are typically generated by laboratories providing analytic services in areas such as&#xD;
    chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These&#xD;
    observations are based on analysis of specimens obtained from the patient, submitted to the lab.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Imaging results are typically generated by a clinician reviewing the output of an imaging procedure,&#xD;
    such as where a cardiologist reports the left ventricular ejection fraction based on the review of a cardiac&#xD;
    echo.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Procedure results are typically generated by a clinician wanting to provide more granular information&#xD;
    about component observations made during the performance of a procedure, such as where a gastroenterologist reports the&#xD;
    size of a polyp observed during a colonoscopy.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="__lctsVfdEeCIIf8CuAH-Kw">
        <annotatedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-codedResults.uml#_-OeSAMidEd6mWrHPmrIIfQ"/>
        <body>The results section shall contain a narrative description of the relevant diagnostic procedures the patient received in the&#xD;
past. It shall include entries for procedures and references to procedure reports when known as described in the Entry&#xD;
Content Modules.</body>
      </ownedComment>
      <ownedComment xmi:id="__kqqkVfdEeCIIf8CuAH-Kw" annotatedElement="__kqqkFfdEeCIIf8CuAH-Kw">
        <body>The Diagnostic Results Section contains information about the results from diagnostic procedures the patient received.</body>
      </ownedComment>
      <ownedRule xmi:id="_e0jYxVgEEeCcnqJUjkVAag" name="DiagnosticResultsSectionTemplateId" constrainedElement="__kqqkFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0j_0FgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.122')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0nDIFgEEeCcnqJUjkVAag" name="DiagnosticResultsSectionCode" constrainedElement="__kqqkFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0nDIVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '30954-2' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1M5AFgEEeCcnqJUjkVAag" name="DiagnosticResultsSectionResultOrganizer" constrainedElement="__kqqkFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1M5AVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::ResultOrganizer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1UNwFgEEeCcnqJUjkVAag" name="DiagnosticResultsSectionExternalReference" constrainedElement="__kqqkFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1UNwVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ExternalReference))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__ldUwFfdEeCIIf8CuAH-Kw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <substitution xmi:id="__ldUwVfdEeCIIf8CuAH-Kw" client="__kqqkFfdEeCIIf8CuAH-Kw">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_7TVToIiAEd66cKocspyVOg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_7TVToIiAEd66cKocspyVOg"/>
      </substitution>
      <substitution xmi:id="__ldUwlfdEeCIIf8CuAH-Kw" client="__kqqkFfdEeCIIf8CuAH-Kw">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-codedResults.uml#_-OeSAMidEd6mWrHPmrIIfQ"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-codedResults.uml#_-OeSAMidEd6mWrHPmrIIfQ"/>
      </substitution>
      <substitution xmi:id="__ldUw1fdEeCIIf8CuAH-Kw" client="__kqqkFfdEeCIIf8CuAH-Kw">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-diagnosticResults.uml#_P3GVkMieEd6mWrHPmrIIfQ"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-diagnosticResults.uml#_P3GVkMieEd6mWrHPmrIIfQ"/>
      </substitution>
      <ownedOperation xmi:id="_e1OHIFgEEeCcnqJUjkVAag" name="getResultOrganizers" isQuery="true" bodyCondition="_e1OHI1gEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_e1OHI1gEEeCcnqJUjkVAag" name="body" constrainedElement="_e1OHIFgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1OHJFgEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::ResultOrganizer)).oclAsType(consol::ResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_e1OHIVgEEeCcnqJUjkVAag" type="__k4F8FfdEeCIIf8CuAH-Kw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_e1OHIlgEEeCcnqJUjkVAag" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_e1Vb4FgEEeCcnqJUjkVAag" name="getExternalReferences" isQuery="true" bodyCondition="_e1Vb41gEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_e1Vb41gEEeCcnqJUjkVAag" name="body" constrainedElement="_e1Vb4FgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1Vb5FgEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ExternalReference)).oclAsType(consol::ExternalReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_e1Vb4VgEEeCcnqJUjkVAag" type="__lX1MFfdEeCIIf8CuAH-Kw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_e1Vb4lgEEeCcnqJUjkVAag" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_e1Vb5VgEEeCcnqJUjkVAag" name="getResults" isQuery="true" bodyCondition="_e1WC8VgEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_e1WC8VgEEeCcnqJUjkVAag" name="body" constrainedElement="_e1Vb5VgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1WC8lgEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Result)).oclAsType(consol::Result)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_e1Vb5lgEEeCcnqJUjkVAag" type="__lDsIFfdEeCIIf8CuAH-Kw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_e1WC8FgEEeCcnqJUjkVAag" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__k4F8FfdEeCIIf8CuAH-Kw" name="ResultOrganizer" clientDependency="__lWnEVfdEeCIIf8CuAH-Kw">
      <eAnnotations xmi:id="__lABwFfdEeCIIf8CuAH-Kw" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_Ht_RsHDAEd6eItyqb1FoWg"/>
      </eAnnotations>
      <ownedComment xmi:id="__k4F8VfdEeCIIf8CuAH-Kw" annotatedElement="__k4F8FfdEeCIIf8CuAH-Kw">
        <body>&lt;p>&#xD;
    The result organizer identifies an observation set, contained with the result organizer&#xD;
    as a set of result observations. It contains information applicable to all of the contained result&#xD;
    observations.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Results in ASTM CCR and CCD are structured similarly to the HL7 Version 2 ORU Observation message, where&#xD;
    there is an outer result organizer (templateId 2.16.840.1.113883.10.20.1.32), analogous to the HL7 Version 2 OBR&#xD;
    Observation Result Segment, which contains one or more result observations (templateId 2.16.840.1.113883.10.20.1.31),&#xD;
    analogous to the HL7 Version 2 OBX Observation/Result Segment.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="__k4F-FfdEeCIIf8CuAH-Kw" name="ResultOrganizerComponentElement" constrainedElement="__k4F8FfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__k4F-VfdEeCIIf8CuAH-Kw">
          <language>OCL</language>
          <body>not self.component->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__k4F_lfdEeCIIf8CuAH-Kw" name="ResultOrganizerInformationSource" constrainedElement="__k4F8FfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__k4F_1fdEeCIIf8CuAH-Kw">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;&#xA;or not self.getSection().informant->isEmpty()&#xD;&#xA;or not self.getClinicalDocument().informant->isEmpty()&#xD;&#xA;or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0o4UFgEEeCcnqJUjkVAag" name="ResultOrganizerTemplateId" constrainedElement="__k4F8FfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0o4UVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.32')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0u-8FgEEeCcnqJUjkVAag" name="ResultOrganizerMoodCode" constrainedElement="__k4F8FfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0u-8VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0wNEFgEEeCcnqJUjkVAag" name="ResultOrganizerId" constrainedElement="__k4F8FfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0wNEVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0xbMFgEEeCcnqJUjkVAag" name="ResultOrganizerCode" constrainedElement="__k4F8FfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0xbMVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0zQYFgEEeCcnqJUjkVAag" name="ResultOrganizerStatusCode" constrainedElement="__k4F8FfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0zQYVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__lWnEFfdEeCIIf8CuAH-Kw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <substitution xmi:id="__lWnEVfdEeCIIf8CuAH-Kw" client="__k4F8FfdEeCIIf8CuAH-Kw">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_Ht_RsHDAEd6eItyqb1FoWg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_Ht_RsHDAEd6eItyqb1FoWg"/>
      </substitution>
      <ownedOperation xmi:id="_e1JOoFgEEeCcnqJUjkVAag" name="getResultObservations" isQuery="true" bodyCondition="_e1JOo1gEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_e1JOo1gEEeCcnqJUjkVAag" name="body" constrainedElement="_e1JOoFgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1J1sFgEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Result)).oclAsType(consol::Result)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_e1JOoVgEEeCcnqJUjkVAag" type="__lDsIFfdEeCIIf8CuAH-Kw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_e1JOolgEEeCcnqJUjkVAag" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__lDsIFfdEeCIIf8CuAH-Kw" name="Result" clientDependency="__lUK0FfdEeCIIf8CuAH-Kw __lUK0VfdEeCIIf8CuAH-Kw __lUK0lfdEeCIIf8CuAH-Kw">
      <eAnnotations xmi:id="__lIkoFfdEeCIIf8CuAH-Kw" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/hitsp.uml#_oTzNMDIWEd-SYNRf-pkwtw"/>
      </eAnnotations>
      <ownedComment xmi:id="__lS8sFfdEeCIIf8CuAH-Kw">
        <annotatedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/ihe.uml#_dLvb0K4NEd6_ioDelDcPPg"/>
        <body>The simple observation entry is meant to be an abstract representation of many of the observations used in this&#xD;
specification. It can be made concrete by the specification of a few additional constraints, namely the vocabulary used for&#xD;
codes, and the value representation. A simple observation may also inherit constraints from other specifications (e.g.,&#xD;
ASTM/HL7 Continuity of Care Document).</body>
      </ownedComment>
      <ownedComment xmi:id="__lDsIVfdEeCIIf8CuAH-Kw">
        <body>This module contains current and relevant historical result observations for the patient. The scope of &quot;observations&quot; is broad with the exception of &quot;vital signs&quot; which are contained in the Vital Signs section.</body>
      </ownedComment>
      <ownedRule xmi:id="__lQgcFfdEeCIIf8CuAH-Kw" name="ResultReferenceRangeRequired">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_MQHZEHDAEd6eItyqb1FoWg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lQgcVfdEeCIIf8CuAH-Kw">
          <language>OCL</language>
          <body>not self.referenceRange->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lRHgFfdEeCIIf8CuAH-Kw" name="ResultNoObservationRangeCode">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_MQHZEHDAEd6eItyqb1FoWg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lRHgVfdEeCIIf8CuAH-Kw">
          <language>OCL</language>
          <body>self.referenceRange->forAll(range : cda::ReferenceRange | range.observationRange.code.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lRukFfdEeCIIf8CuAH-Kw" name="ResultInformationSource">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_MQHZEHDAEd6eItyqb1FoWg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lRukVfdEeCIIf8CuAH-Kw">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;&#xA;or not self.getSection().informant->isEmpty()&#xD;&#xA;or not self.getClinicalDocument().informant->isEmpty()&#xD;&#xA;or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;&#xA;or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;&#xA;   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;&#xA;   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lDsJlfdEeCIIf8CuAH-Kw" name="ResultValuePresence">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lDsJ1fdEeCIIf8CuAH-Kw">
          <language>OCL</language>
          <body>(self.moodCode = vocab::x_ActMoodDocumentObservation::EVN or self.moodCode = vocab::x_ActMoodDocumentObservation::EVN)&#xD;&#xA;    implies (not self.value->isEmpty()) and&#xD;&#xA;  (self.moodCode = vocab::x_ActMoodDocumentObservation::INT or self.moodCode = vocab::x_ActMoodDocumentObservation::PRP)&#xD;&#xA;   implies (self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e00egFgEEeCcnqJUjkVAag" name="ResultTemplateId" constrainedElement="__lDsIFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e00egVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.15')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e07zQFgEEeCcnqJUjkVAag" name="ResultMoodCode" constrainedElement="__lDsIFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e07zQVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e09ocFgEEeCcnqJUjkVAag" name="ResultId" constrainedElement="__lDsIFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e09ocVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e0-2kFgEEeCcnqJUjkVAag" name="ResultCode" constrainedElement="__lDsIFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e0-2kVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1ArwFgEEeCcnqJUjkVAag" name="ResultStatusCode" constrainedElement="__lDsIFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1ArwVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1B54FgEEeCcnqJUjkVAag" name="ResultEffectiveTime" constrainedElement="__lDsIFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1B54VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1DIAFgEEeCcnqJUjkVAag" name="ResultValue" constrainedElement="__lDsIFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1DvEFgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1GLUFgEEeCcnqJUjkVAag" name="ResultInterpretationCode" constrainedElement="__lDsIFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1GyYFgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1IAgFgEEeCcnqJUjkVAag" name="ResultMethodCode" constrainedElement="__lDsIFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1IAgVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__lTjwFfdEeCIIf8CuAH-Kw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <substitution xmi:id="__lUK0FfdEeCIIf8CuAH-Kw" client="__lDsIFfdEeCIIf8CuAH-Kw">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/ihe.uml#_dLvb0K4NEd6_ioDelDcPPg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/ihe.uml#_dLvb0K4NEd6_ioDelDcPPg"/>
      </substitution>
      <substitution xmi:id="__lUK0VfdEeCIIf8CuAH-Kw" client="__lDsIFfdEeCIIf8CuAH-Kw">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_MQHZEHDAEd6eItyqb1FoWg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_MQHZEHDAEd6eItyqb1FoWg"/>
      </substitution>
      <substitution xmi:id="__lUK0lfdEeCIIf8CuAH-Kw" client="__lDsIFfdEeCIIf8CuAH-Kw">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/hitsp.uml#_oTzNMDIWEd-SYNRf-pkwtw"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/hitsp.uml#_oTzNMDIWEd-SYNRf-pkwtw"/>
      </substitution>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__lX1MFfdEeCIIf8CuAH-Kw" name="ExternalReference" clientDependency="__la4glfdEeCIIf8CuAH-Kw">
      <eAnnotations xmi:id="__lZqYVfdEeCIIf8CuAH-Kw" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-codedResults.uml#_hBLMcBj6EeCf9aMNaCAtDQ"/>
      </eAnnotations>
      <ownedRule xmi:id="_e1OuMFgEEeCcnqJUjkVAag" name="ExternalReferenceTemplateId" constrainedElement="__lX1MFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1OuMVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1QjYFgEEeCcnqJUjkVAag" name="ExternalReferenceClassCode" constrainedElement="__lX1MFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1QjYVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1SYkFgEEeCcnqJUjkVAag" name="ExternalReferenceMoodCode" constrainedElement="__lX1MFfdEeCIIf8CuAH-Kw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1SYkVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__la4gVfdEeCIIf8CuAH-Kw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <substitution xmi:id="__la4glfdEeCIIf8CuAH-Kw" client="__lX1MFfdEeCIIf8CuAH-Kw">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-codedResults.uml#_hBLMcBj6EeCf9aMNaCAtDQ"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-codedResults.uml#_hBLMcBj6EeCf9aMNaCAtDQ"/>
      </substitution>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aIcP8Ff5EeCxTb-Xw_gdpQ" name="VitalSignsSection" clientDependency="_aJAQpFf5EeCxTb-Xw_gdpQ _aJAQpVf5EeCxTb-Xw_gdpQ _aJA3sFf5EeCxTb-Xw_gdpQ _aJA3sVf5EeCxTb-Xw_gdpQ">
      <eAnnotations xmi:id="_aIeFIFf5EeCxTb-Xw_gdpQ" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-vitalSigns.uml#_L9yGgK7HEd6_ioDelDcPPg"/>
      </eAnnotations>
      <ownedComment xmi:id="_aJAQoFf5EeCxTb-Xw_gdpQ">
        <annotatedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-vitalSigns.uml#_GKpeMKPaEd6t_4WfM070fA"/>
        <body>&lt;p>&#xD;
    This section contains current and historically relevant vital signs, such as blood pressure, heart rate,&#xD;
    respiratory rate, height, weight, body mass index, head circumference, crown-to-rump length, and pulse oximetry. The&#xD;
    section may contain all vital signs for the period of time being summarized, but at a minimum should include notable&#xD;
    vital signs such as the most recent, maximum and/or minimum, or both, baseline, or relevant trends.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Vital signs are represented like other results (as defined in &lt;b>&lt;i>Results&#xD;
    Section&lt;/i>&lt;/b>) with additional vocabulary constraints, but are aggregated into their own section in order to follow clinical&#xD;
    conventions.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_aJAQoVf5EeCxTb-Xw_gdpQ">
        <annotatedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-vitalSigns.uml#_iFB1EK4EEd6_ioDelDcPPg"/>
        <body>&lt;p>&#xD;
    The vital signs section shall contain a narrative description of the measurement results of a patient's vital signs.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedComment xmi:id="_aJAQolf5EeCxTb-Xw_gdpQ">
        <annotatedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-codedVitalSigns.uml#_5k1R8K4FEd6_ioDelDcPPg"/>
        <body>The vital signs section contains coded measurement results of a patient's vital signs.</body>
      </ownedComment>
      <ownedComment xmi:id="_aIcP8Vf5EeCxTb-Xw_gdpQ" annotatedElement="_aIcP8Ff5EeCxTb-Xw_gdpQ">
        <body>&lt;p>&#xD;
    The Vital Signs Section contains information documenting the patient vital signs. &#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_aIcP8lf5EeCxTb-Xw_gdpQ" name="VitalSignsSectionVitalSignEntry" constrainedElement="_aIcP8Ff5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aIcP81f5EeCxTb-Xw_gdpQ">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | entry.organizer.oclIsKindOf(ihe::VitalSignsOrganizer) and entry.organizer.component.observation->exists(obs : cda::Observation | obs.oclIsKindOf(hitsp::VitalSign)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1WC81gEEeCcnqJUjkVAag" name="VitalSignsSectionTemplateId" constrainedElement="_aIcP8Ff5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1WC9FgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.119')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1aUYFgEEeCcnqJUjkVAag" name="VitalSignsSectionCode" constrainedElement="_aIcP8Ff5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1aUYVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '8716-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1cJkFgEEeCcnqJUjkVAag" name="VitalSignsSectionTitle" constrainedElement="_aIcP8Ff5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1cJkVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1d-wFgEEeCcnqJUjkVAag" name="VitalSignsSectionText" constrainedElement="_aIcP8Ff5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1d-wVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1740FgEEeCcnqJUjkVAag" name="VitalSignsSectionVitalSignsOrganizer" constrainedElement="_aIcP8Ff5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1740VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::VitalSignsOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_aJAQo1f5EeCxTb-Xw_gdpQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <substitution xmi:id="_aJAQpFf5EeCxTb-Xw_gdpQ" client="_aIcP8Ff5EeCxTb-Xw_gdpQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-vitalSigns.uml#_GKpeMKPaEd6t_4WfM070fA"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-vitalSigns.uml#_GKpeMKPaEd6t_4WfM070fA"/>
      </substitution>
      <substitution xmi:id="_aJAQpVf5EeCxTb-Xw_gdpQ" client="_aIcP8Ff5EeCxTb-Xw_gdpQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-vitalSigns.uml#_iFB1EK4EEd6_ioDelDcPPg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-vitalSigns.uml#_iFB1EK4EEd6_ioDelDcPPg"/>
      </substitution>
      <substitution xmi:id="_aJA3sFf5EeCxTb-Xw_gdpQ" client="_aIcP8Ff5EeCxTb-Xw_gdpQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-codedVitalSigns.uml#_5k1R8K4FEd6_ioDelDcPPg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-codedVitalSigns.uml#_5k1R8K4FEd6_ioDelDcPPg"/>
      </substitution>
      <substitution xmi:id="_aJA3sVf5EeCxTb-Xw_gdpQ" client="_aIcP8Ff5EeCxTb-Xw_gdpQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-vitalSigns.uml#_L9yGgK7HEd6_ioDelDcPPg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-vitalSigns.uml#_L9yGgK7HEd6_ioDelDcPPg"/>
      </substitution>
      <ownedOperation xmi:id="_e19G8FgEEeCcnqJUjkVAag" name="getVitalSignsOrganizers" isQuery="true" bodyCondition="_e19G81gEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_e19G81gEEeCcnqJUjkVAag" name="body" constrainedElement="_e19G8FgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_e19G9FgEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::VitalSignsOrganizer)).oclAsType(consol::VitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_e19G8VgEEeCcnqJUjkVAag" type="_aIjksFf5EeCxTb-Xw_gdpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_e19G8lgEEeCcnqJUjkVAag" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aIjksFf5EeCxTb-Xw_gdpQ" name="VitalSignsOrganizer" clientDependency="_aI-bcVf5EeCxTb-Xw_gdpQ _aI-bclf5EeCxTb-Xw_gdpQ _aI-bc1f5EeCxTb-Xw_gdpQ">
      <eAnnotations xmi:id="_aIqSYFf5EeCxTb-Xw_gdpQ" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-vitalSigns.uml#_hVMdIK4QEd6_ioDelDcPPg"/>
      </eAnnotations>
      <ownedComment xmi:id="_aIjksVf5EeCxTb-Xw_gdpQ">
        <body>&lt;p>&#xD;
A vital signs organizer collects vital signs observations.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_aI9NU1f5EeCxTb-Xw_gdpQ" name="VitalSignsOrganizerInformationSource">
        <ownedComment xmi:id="_aI9NVFf5EeCxTb-Xw_gdpQ">
          <body>A vital signs organizer SHALL contain one or more sources of information, as defined in section &lt;b>&lt;i>Source&lt;/i>&lt;/b>.</body>
        </ownedComment>
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-vitalSigns.uml#_wN4O0K3zEd6_ioDelDcPPg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aI9NVVf5EeCxTb-Xw_gdpQ">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;&#xA;or not self.getSection().informant->isEmpty()&#xD;&#xA;or not self.getClinicalDocument().informant->isEmpty()&#xD;&#xA;or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aIjkslf5EeCxTb-Xw_gdpQ" name="VitalSignsOrganizerRequireResultsOrganizerTemplateID" constrainedElement="_aIjksFf5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aIjks1f5EeCxTb-Xw_gdpQ">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root ='2.16.840.1.113883.10.20.1.32')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1fz8VgEEeCcnqJUjkVAag" name="ResultOrganizerTemplateId" constrainedElement="_aIjksFf5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1fz8lgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.13.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1jeUFgEEeCcnqJUjkVAag" name="VitalSignsOrganizerClassCode" constrainedElement="_aIjksFf5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1jeUVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryOrganizer::CLUSTER</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1l6kFgEEeCcnqJUjkVAag" name="ResultOrganizerCode" constrainedElement="_aIjksFf5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1l6kVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '46680005' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1nvwFgEEeCcnqJUjkVAag" name="VitalSignsOrganizerEffectiveTime" constrainedElement="_aIjksFf5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1nvwVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1qzEFgEEeCcnqJUjkVAag" name="ResultOrganizerStatusCode" constrainedElement="_aIjksFf5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1qzEVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1soQFgEEeCcnqJUjkVAag" name="VitalSignsOrganizerId" constrainedElement="_aIjksFf5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1soQVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_aI-bcFf5EeCxTb-Xw_gdpQ" general="__k4F8FfdEeCIIf8CuAH-Kw"/>
      <substitution xmi:id="_aI-bcVf5EeCxTb-Xw_gdpQ" client="_aIjksFf5EeCxTb-Xw_gdpQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_Ht_RsHDAEd6eItyqb1FoWg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_Ht_RsHDAEd6eItyqb1FoWg"/>
      </substitution>
      <substitution xmi:id="_aI-bclf5EeCxTb-Xw_gdpQ" client="_aIjksFf5EeCxTb-Xw_gdpQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-vitalSigns.uml#_wN4O0K3zEd6_ioDelDcPPg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-vitalSigns.uml#_wN4O0K3zEd6_ioDelDcPPg"/>
      </substitution>
      <substitution xmi:id="_aI-bc1f5EeCxTb-Xw_gdpQ" client="_aIjksFf5EeCxTb-Xw_gdpQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-vitalSigns.uml#_hVMdIK4QEd6_ioDelDcPPg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-vitalSigns.uml#_hVMdIK4QEd6_ioDelDcPPg"/>
      </substitution>
      <ownedOperation xmi:id="_e16DoFgEEeCcnqJUjkVAag" name="getVitalSignObservations" isQuery="true" bodyCondition="_e16Do1gEEeCcnqJUjkVAag">
        <ownedRule xmi:id="_e16Do1gEEeCcnqJUjkVAag" name="body" constrainedElement="_e16DoFgEEeCcnqJUjkVAag">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_e16DpFgEEeCcnqJUjkVAag">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::VitalSign)).oclAsType(consol::VitalSign)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_e16DoVgEEeCcnqJUjkVAag" type="_aIt8wFf5EeCxTb-Xw_gdpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_e16DolgEEeCcnqJUjkVAag" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aIt8wFf5EeCxTb-Xw_gdpQ" name="VitalSign" clientDependency="_aI8mQFf5EeCxTb-Xw_gdpQ _aI8mQVf5EeCxTb-Xw_gdpQ _aI8mQlf5EeCxTb-Xw_gdpQ _aI8mQ1f5EeCxTb-Xw_gdpQ">
      <eAnnotations xmi:id="_aIxnIFf5EeCxTb-Xw_gdpQ" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-vitalSigns.uml#_dobt4K7IEd6_ioDelDcPPg"/>
      </eAnnotations>
      <ownedComment xmi:id="_aI7_MFf5EeCxTb-Xw_gdpQ">
        <body>A vital signs observation is a simple observation that uses a specific vocabulary, and inherits&#xD;
constraints from CCD.</body>
      </ownedComment>
      <ownedComment xmi:id="_aIt8wVf5EeCxTb-Xw_gdpQ">
        <body>&lt;p>&#xD;
These entries are used to record current and relevant historical vital signs for the patient. Vital Signs are a subset of &lt;b>&lt;i>Results Section&lt;/i>&lt;/b>, but are reported in this section to follow clinical conventions.&#xD;
&lt;/p>&#xD;
&#xD;
&lt;p>&#xD;
The differentiation between Vital Signs and Results varies by clinical context. Common examples of vital signs include temperature, height, weight, blood pressure, etc. However, some clinical contexts may alter these common vitals, for example in neonatology &quot;height&quot; may be replaced by &quot;crown-to-rump&quot; measurement.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_e1udcVgEEeCcnqJUjkVAag" name="ResultTemplateId" constrainedElement="_aIt8wFf5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1udclgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1yH0FgEEeCcnqJUjkVAag" name="ResultCode" constrainedElement="_aIt8wFf5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1yH0VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '8310-5' or value.code = '8462-4' or value.code = '8480-6' or value.code = '8287-5' or value.code = '8867-4' or value.code = '8302-2' or value.code = '8306-3' or value.code = '2710-2' or value.code = '9279-1' or value.code = '3141-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e1z9AFgEEeCcnqJUjkVAag" name="VitalSignInterpretationCode" constrainedElement="_aIt8wFf5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e1z9AVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e11yMFgEEeCcnqJUjkVAag" name="VitalSignMethodCode" constrainedElement="_aIt8wFf5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e11yMVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e13AUFgEEeCcnqJUjkVAag" name="VitalSignTargetSiteCode" constrainedElement="_aIt8wFf5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e13AUVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e14OcFgEEeCcnqJUjkVAag" name="VitalSignValue" constrainedElement="_aIt8wFf5EeCxTb-Xw_gdpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e14OcVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_aI7_MVf5EeCxTb-Xw_gdpQ" general="__lDsIFfdEeCIIf8CuAH-Kw"/>
      <substitution xmi:id="_aI8mQFf5EeCxTb-Xw_gdpQ" client="_aIt8wFf5EeCxTb-Xw_gdpQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/ihe.uml#_dLvb0K4NEd6_ioDelDcPPg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/ihe.uml#_dLvb0K4NEd6_ioDelDcPPg"/>
      </substitution>
      <substitution xmi:id="_aI8mQVf5EeCxTb-Xw_gdpQ" client="_aIt8wFf5EeCxTb-Xw_gdpQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_MQHZEHDAEd6eItyqb1FoWg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd.model/model/.controlled/ccd-results.uml#_MQHZEHDAEd6eItyqb1FoWg"/>
      </substitution>
      <substitution xmi:id="_aI8mQlf5EeCxTb-Xw_gdpQ" client="_aIt8wFf5EeCxTb-Xw_gdpQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-vitalSigns.uml#_LriUcK4NEd6_ioDelDcPPg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe.model/model/.controlled/ihe-vitalSigns.uml#_LriUcK4NEd6_ioDelDcPPg"/>
      </substitution>
      <substitution xmi:id="_aI8mQ1f5EeCxTb-Xw_gdpQ" client="_aIt8wFf5EeCxTb-Xw_gdpQ">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-vitalSigns.uml#_dobt4K7IEd6_ioDelDcPPg"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/.controlled/hitsp-vitalSigns.uml#_dobt4K7IEd6_ioDelDcPPg"/>
      </substitution>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_t3zK8FgDEeCwUujnxrDtRA" name="GeneralHeaderConstraints" clientDependency="_t4ix0FgDEeCwUujnxrDtRA">
      <eAnnotations xmi:id="_t4V9gFgDEeCwUujnxrDtRA" source="sourceClass">
        <references xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol.model.original/model/consol.uml#_MwGRIGeLEd-ilOLYnIx0jA"/>
      </eAnnotations>
      <ownedComment xmi:id="_t3zK8VgDEeCwUujnxrDtRA">
        <body>&lt;p>This section describes constraints that apply to the H and P Note and to other types of CDA&#xD;
documents defined for general exchange. The template defined here should be reused&#xD;
wherever these general header constraints are applied.&lt;/p>&#xD;
&lt;p>To support communication between the receiver of the document and the patient or any&#xD;
other person or organization mentioned within it, the elements representing them will&#xD;
be named.&lt;/p>&#xD;
&lt;p>When name, address, or telecom information is unknown and where these elements are&#xD;
required to be present, as with CDA conformance if the information is unknown, these&#xD;
elements will be represented using an appropriate value for the nullFlavor attribute on&#xD;
the element.&lt;/p>&#xD;
&lt;p>Events occurring at a single point in time that are represented in the Clinical Document&#xD;
header will in general be precise to the day. These point-in-time events are the time of&#xD;
creation of the document; the starting time of a participation by an author, data&#xD;
enterer, authenticator, or legal authenticator; or the starting and ending time of an&#xD;
encounter.&lt;/p>&#xD;
&lt;p>Within the specification, all telephone numbers are to be encoded using a grammar&#xD;
which is a restriction on the TEL data type and RFC 2806. It simplifies interchange between applications as&#xD;
it removes optional URL components found in RFC 2806 that applications typically do&#xD;
not know how to process, such as ISDN sub-address, phone context, or other dialing&#xD;
parameters.&lt;/p>&#xD;
&lt;p>Organizations that wish to use OIDs should properly register their OID root and ensure&#xD;
uniqueness of the OID roots used in identifiers. A large number of mechanisms exist&#xD;
for obtaining OID roots for free or for a reasonable fee. HL7 maintains an OID registry&#xD;
page from which organizations may request an OID root under the HL7 OID root. This&#xD;
page can be accessed at: http://www.hl7.org/oid.&lt;/p>&#xD;
&lt;p>Another useful resource lists the many ways to obtain a registered OID Root for free or&#xD;
a small fee anywhere in the world and is located at:&lt;/p>&#xD;
&lt;p>http://www.dclunie.com/medical-image-faq/html/part8.html#UIDRegistration.&lt;/p>&#xD;
&lt;p>The manner in which the OID root is obtained is not constrained by this DSTU.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_t3zK8lgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsPersonHasName" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zK81gDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zK9FgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsRolesShallHaveAddrAndTelecom" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zK9VgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zK9lgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsRolesShouldHaveAddrAndTelecom" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zK91gDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zK-FgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsOrganizationsHaveContactInfo" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <ownedComment xmi:id="_t3zK-VgDEeCwUujnxrDtRA">
          <body>When name, address, or telecom information is unknown and where these elements are&#xD;
required to be present, as with CDA conformance if the information is unknown, these&#xD;
elements will be represented using an appropriate value for the nullFlavor attribute on&#xD;
the element. Legal values according to this specification come from the HL7 NullFlavor&#xD;
vocabulary.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zK-lgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zK-1gDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsTimePreciseToDay" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zK_FgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zK_VgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsTimePreciseToYear" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zK_lgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>cda::OrganizationPartOf.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject)-> union(  cda::MaintainedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union( cda::RelatedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::RelatedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::RelatedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::ServiceEvent.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::EncounterParticipant.allInstances()->select( time.oclIsUndefined()).oclAsType( ecore::EObject))->union(self.participant->select( time.oclIsUndefined()).oclAsType( ecore::EObject))->union(cda::OrganizationPartOf.allInstances().effectiveTime->union(cda::MaintainedEntity.allInstances().effectiveTime)->union( cda::RelatedEntity.allInstances().effectiveTime)->union(cda::RelatedEntity.allInstances().effectiveTime)->union(cda::RelatedEntity.allInstances().effectiveTime)->union(cda::ServiceEvent.allInstances().effectiveTime)->union(cda::EncounterParticipant.allInstances().time)->union(self.participant.time)->select(current : datatypes::IVL_TS  |  ((not current.low.oclIsUndefined()) and (current.low.value.oclIsUndefined() or current.low.value.size() &lt; 4)) or ((not current.center.oclIsUndefined()) and (current.center.value.oclIsUndefined() or current.center.value.size() &lt; 4)) or ((not current.high.oclIsUndefined()) and (current.high.value.oclIsUndefined() or current.high.value.size() &lt; 4)) or (current.low.oclIsUndefined() and current.center.oclIsUndefined() and current.high.oclIsUndefined()) ).oclAsType( ecore::EObject))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zK_1gDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsTelephoneMatchesRegex" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <ownedComment xmi:id="_t3zLAFgDEeCwUujnxrDtRA">
          <body>The telecom element is used to provide a contact telephone number for the various&#xD;
participants that require it. The value attribute ofthis elements is a URL that specifies&#xD;
the telephone number, as indicated by the TEL data type.</body>
        </ownedComment>
        <ownedComment xmi:id="_t3zLAVgDEeCwUujnxrDtRA">
          <body>All telephone numbers are to be encoded using a restricted form of the tel: URL scheme. &#xD;
A telephone number used for voice calls begins with the URL scheme tel:. If the&#xD;
number is a global phone number, it starts with a plus (+) sign. The remaining number&#xD;
is made up of the dialing digits and an optional extension and may also contain visual&#xD;
separators.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLAlgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLA1gDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsHasTelephoneDialingDigits" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLBFgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLBVgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsUnknownTelephoneUsesNullFlavor" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <ownedComment xmi:id="_t3zLBlgDEeCwUujnxrDtRA">
          <body>There is no way to distinguish between an unknown phone number and an unknown&#xD;
e-mail or other telecommunications address. Therefore, the following convention will be&#xD;
used: Any telecom element that uses a flavor of null (has a nullFlavor attribute) is&#xD;
assumed to be a telephone number, which is the only required telecommunications&#xD;
address element within this DSTU.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLB1gDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLCFgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsTypeIdExtension" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLCVgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>self.typeId.extension = 'POCD_HD000040'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLEVgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsOidLength" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <ownedComment xmi:id="_t3zLElgDEeCwUujnxrDtRA">
          <body>OIDs are limited by this specification to no more than 64 characters in length for&#xD;
compatibility with other standards and Implementation Guides.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLE1gDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>self.id->select((not id.root.oclIsUndefined()) and id.root.size() > 64 )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLGlgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsSetIdAndVersionNumber" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <ownedComment xmi:id="_t3zLG1gDEeCwUujnxrDtRA">
          <body>The ClinicalDocument/setId element uses the instance identifier (II) data type. The root&#xD;
attribute is a UUID or OID that uniquely identifies the scope of the identifier, and the&#xD;
extension attribute is a value that is unique within the scope of the root for the set of&#xD;
versions of the document. See Document Identification, Revisions, and Addenda in&#xD;
Section 4.2.3.1 of the CDA Specification for some examples showing the use of the setId&#xD;
element.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLHFgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>(self.setId.oclIsUndefined() and self.versionNumber.oclIsUndefined())&#xD;&#xA;   xor (not self.setId.oclIsUndefined() and not self.versionNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLHVgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsSetIdAndIdAreUnique" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLHlgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>(not self.setId.oclIsUndefined() and not self.id.oclIsUndefined())&#xD;&#xA;   implies (self.setId.root &lt;> self.id.root or self.setId.extension &lt;> self.id.extension)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLH1gDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsCopyTimeNotPresent" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <ownedComment xmi:id="_t3zLIFgDEeCwUujnxrDtRA">
          <body>The ClinicalDocument/copyTime element has been deprecated in CDA R2.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLIVgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>self.copyTime.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLIlgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsHasRecordTargetPatientRole" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLI1gDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>self.recordTarget->size() > 0 and self.recordTarget->exists(target : cda::RecordTarget | not target.patientRole.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLJFgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsHasPatientBirthTime" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLJVgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>self.recordTarget->forAll(target : cda::RecordTarget | not target.patientRole.oclIsUndefined()&#xD;&#xA;   implies (not target.patientRole.patient.birthTime.value.oclIsUndefined()&#xD;&#xA;      or not target.patientRole.patient.birthTime.nullFlavor.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLJlgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsHasAdministrativeGenderCode" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <ownedComment xmi:id="_t3zLJ1gDEeCwUujnxrDtRA">
          <body>TODO: add OCL test for terminology</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLKFgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>self.recordTarget->forAll(target : cda::RecordTarget | not target.patientRole.oclIsUndefined()&#xD;&#xA;   implies (not target.patientRole.patient.administrativeGenderCode.code.oclIsUndefined()&#xD;&#xA;      or not target.patientRole.patient.administrativeGenderCode.nullFlavor.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLLVgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsHasProviderOrganization" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLLlgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>self.recordTarget->exists(target : cda::RecordTarget | not target.patientRole.providerOrganization.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLL1gDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsHasAuthorTime" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <ownedComment xmi:id="_t3zLMFgDEeCwUujnxrDtRA">
          <body>The author/time element represents the start time of the author's&#xD;
participation in the creation of the clinical document.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLMVgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>self.author->forAll(author : cda::Author | not author.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLMlgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsHasAssignedAuthorId" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLM1gDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>self.author->forAll(author : cda::Author | author.assignedAuthor.id->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLNFgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsHasAssignedAuthorPersonOrDevice" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLNVgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>self.author->forAll(author : cda::Author | not author.assignedAuthor.assignedPerson.oclIsUndefined() &#xD;&#xA;   or not author.assignedAuthor.assignedAuthoringDevice.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLNlgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsHasDataEntererAssignedPerson" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLN1gDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>not self.dataEnterer.oclIsUndefined() implies not self.dataEnterer.assignedEntity.assignedPerson.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLOFgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsHasDataEntererTime" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLOVgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>not self.dataEnterer.oclIsUndefined() implies not self.dataEnterer.time.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLOlgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsHasInformant" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLO1gDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>self.informant->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLPFgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsHasInformantAssignedPersonOrRelatedPerson" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLPVgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>self.informant->forAll(i : cda::Informant12 | not i.assignedEntity.assignedPerson.oclIsUndefined()&#xD;&#xA;   or not i.relatedEntity.relatedPerson.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLUVgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsLegalAuthenticatorHasAssignedPerson" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLUlgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>not self.legalAuthenticator.oclIsUndefined() implies not self.legalAuthenticator.assignedEntity.assignedPerson.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLU1gDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsAuthenticatorHasAssignedPerson" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLVFgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>self.authenticator->forAll(auth : cda::Authenticator | auth.assignedEntity->forAll(entity : cda::AssignedEntity |&#xD;&#xA;   not entity.assignedPerson.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLVVgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsTimePreciseToSecond" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <ownedComment xmi:id="_t3zLVlgDEeCwUujnxrDtRA">
          <body>Should portion of CON-HP-10 constraitn</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLV1gDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>-- implemented in Java using XPath selector</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3zLWFgDEeCwUujnxrDtRA" name="GeneralHeaderConstraintsTimePreciseToYearAndDay" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <ownedComment xmi:id="_t3zLWVgDEeCwUujnxrDtRA">
          <body>Should portion of CON-HP-11 constraitn</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3zLWlgDEeCwUujnxrDtRA">
          <language>OCL</language>
          <body>cda::OrganizationPartOf.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject)-> union(  cda::MaintainedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union( cda::RelatedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::RelatedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::RelatedEntity.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::ServiceEvent.allInstances()->select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )->union(cda::EncounterParticipant.allInstances()->select( time.oclIsUndefined()).oclAsType( ecore::EObject))->union(self.participant->select( time.oclIsUndefined()).oclAsType( ecore::EObject))->union(cda::OrganizationPartOf.allInstances().effectiveTime->union(cda::MaintainedEntity.allInstances().effectiveTime)->union( cda::RelatedEntity.allInstances().effectiveTime)->union(cda::RelatedEntity.allInstances().effectiveTime)->union(cda::RelatedEntity.allInstances().effectiveTime)->union(cda::ServiceEvent.allInstances().effectiveTime)->union(cda::EncounterParticipant.allInstances().time)->union(self.participant.time)->select(current : datatypes::IVL_TS  |  ((not current.low.oclIsUndefined()) and (current.low.value.oclIsUndefined() or current.low.value.size() &lt; 8)) or ((not current.center.oclIsUndefined()) and (current.center.value.oclIsUndefined() or current.center.value.size() &lt; 8)) or ((not current.high.oclIsUndefined()) and (current.high.value.oclIsUndefined() or current.high.value.size() &lt; 8)) or (current.low.oclIsUndefined() and current.center.oclIsUndefined() and current.high.oclIsUndefined()) ).oclAsType( ecore::EObject))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e19uAFgEEeCcnqJUjkVAag" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e19uAVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e2kK8FgEEeCcnqJUjkVAag" name="GeneralHeaderConstraintsRealmCode" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e2kK8VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.realmCode->isEmpty() or self.realmCode->exists(element | element.isNullFlavorUndefined())) implies (self.realmCode->size() = 1 and self.realmCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = element.oclAsType(datatypes::CS) in &#xD;&#xA;value.code = 'US'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e2mnMFgEEeCcnqJUjkVAag" name="GeneralHeaderConstraintsTypeId" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e2mnMVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.typeId.oclIsUndefined() or self.typeId.isNullFlavorUndefined()) implies (not self.typeId.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e2t78FgEEeCcnqJUjkVAag" name="GeneralHeaderConstraintsId" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e2t78VgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e2vxIFgEEeCcnqJUjkVAag" name="GeneralHeaderConstraintsCode" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e2vxIVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e2xmUFgEEeCcnqJUjkVAag" name="GeneralHeaderConstraintsTitle" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e2xmUVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e2zbgFgEEeCcnqJUjkVAag" name="GeneralHeaderConstraintsEffectiveTime" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e2zbgVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e21QsFgEEeCcnqJUjkVAag" name="GeneralHeaderConstraintsLanguageCode" constrainedElement="_t3zK8FgDEeCwUujnxrDtRA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e21QsVgEEeCcnqJUjkVAag">
          <language>OCL</language>
          <body>(self.languageCode.oclIsUndefined() or self.languageCode.isNullFlavorUndefined()) implies (not self.languageCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_t4iKwFgDEeCwUujnxrDtRA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_S9OzADxXEd6JwqSGecoePg"/>
      </generalization>
      <substitution xmi:id="_t4ix0FgDEeCwUujnxrDtRA" client="_t3zK8FgDEeCwUujnxrDtRA">
        <supplier xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol.model.original/model/consol.uml#_MwGRIGeLEd-ilOLYnIx0jA"/>
        <contract xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol.model.original/model/consol.uml#_MwGRIGeLEd-ilOLYnIx0jA"/>
      </substitution>
    </packagedElement>
    <profileApplication xmi:id="_SMdMMJmzEd6BO7rW3XxHIA">
      <eAnnotations xmi:id="_SMdzQJmzEd6BO7rW3XxHIA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_ew4ZsFgEEeCcnqJUjkVAag">
      <eAnnotations xmi:id="_ew618FgEEeCcnqJUjkVAag" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_THvvwJmzEd6BO7rW3XxHIA" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/consol" packageName="consol" prefix="Consol" base_Namespace="_qQyD8jxVEd6JwqSGecoePg"/>
  <CDA:CDATemplate xmi:id="_a1xFcFf4EeCxTb-Xw_gdpQ" templateId="2.16.840.1.113883.3.88.11.83.14" assigningAuthorityName="HITSP">
    <ruleId>C83-[DE-14-CDA-1]</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_a1y6oFf4EeCxTb-Xw_gdpQ">
    <ruleId>C154-[DE-14.03-1]</ruleId>
  </CDA:PropertyValidation>
  <CDA:ValueSetConstraint xmi:id="_a1zhsFf4EeCxTb-Xw_gdpQ"/>
  <CDA:ConstraintValidation xmi:id="_a11W4Ff4EeCxTb-Xw_gdpQ"/>
  <CDA:PropertyValidation xmi:id="_rwh9dFf4EeCxTb-Xw_gdpQ" severity="INFO">
    <ruleId>6.3.4.22.5</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_rwikhFf4EeCxTb-Xw_gdpQ" severity="INFO">
    <ruleId>6.3.4.22.6</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_rwjLlFf4EeCxTb-Xw_gdpQ" severity="INFO">
    <ruleId>6.3.4.22.7</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_rwkZsFf4EeCxTb-Xw_gdpQ">
    <ruleId>6.3.4.22.4</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_VFe9KVfdEeCb0LEisK_hTQ" base_Class="_VFe9IFfdEeCb0LEisK_hTQ" templateId="2.16.840.1.113883.3.88.11.83.11">
    <ruleId>C83-[DE-10-CDA-2]</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_VFqjUlfdEeCb0LEisK_hTQ" base_Constraint="_VFqjUFfdEeCb0LEisK_hTQ">
    <ruleId>CONF-6.3.4.6.7</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VFrKYlfdEeCb0LEisK_hTQ" base_Constraint="_VFrKYFfdEeCb0LEisK_hTQ">
    <ruleId>CONF-6.3.4.6.10</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_TQ_gsFfdEeCb0LEisK_hTQ" base_Class="_TQ-5oFfdEeCb0LEisK_hTQ" templateId="2.16.840.1.113883.10.20.1.57" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_TRIDkFfdEeCb0LEisK_hTQ" base_Constraint="_TQ-5pVfdEeCb0LEisK_hTQ">
    <ruleId>CONF-518</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_VE1c6lfdEeCb0LEisK_hTQ" base_Class="_VE1c4FfdEeCb0LEisK_hTQ" templateId="1.3.6.1.4.1.19376.1.5.3.1.4.1"/>
  <CDA:ConstraintValidation xmi:id="_VE5uUFfdEeCb0LEisK_hTQ" base_Constraint="_VE1c4lfdEeCb0LEisK_hTQ"/>
  <CDA:CDATemplate xmi:id="_VEpPoFfdEeCb0LEisK_hTQ" base_Class="_VEookFfdEeCb0LEisK_hTQ" templateId="2.16.840.1.113883.10.20.1.38" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_VEuvMFfdEeCb0LEisK_hTQ" severity="WARNING" base_Constraint="_VEooklfdEeCb0LEisK_hTQ">
    <ruleId>CONF-219</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="__lYcQFfdEeCIIf8CuAH-Kw" base_Class="__lX1MFfdEeCIIf8CuAH-Kw" templateId="1.3.6.1.4.1.19376.1.5.3.1.4.4"/>
  <CDA:CDATemplate xmi:id="_VD5BsFfdEeCb0LEisK_hTQ" base_Class="_VD4aoFfdEeCb0LEisK_hTQ" templateId="2.16.840.1.113883.3.88.11.83.7">
    <ruleId>C83-[DE-7-CDA-1]</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_VFzGMlfdEeCb0LEisK_hTQ" base_Constraint="_VFzGMFfdEeCb0LEisK_hTQ">
    <ruleId>CONF-151</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VF0UUlfdEeCb0LEisK_hTQ" severity="WARNING" base_Constraint="_VF0UUFfdEeCb0LEisK_hTQ">
    <ruleId>CONF-153</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VF07YlfdEeCb0LEisK_hTQ" severity="WARNING" base_Constraint="_VF07YFfdEeCb0LEisK_hTQ">
    <ruleId>CONF-140</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VF1iclfdEeCb0LEisK_hTQ" severity="WARNING" base_Constraint="_VF1icFfdEeCb0LEisK_hTQ">
    <ruleId>CONF-256</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VF2wkFfdEeCb0LEisK_hTQ" severity="INFO" base_Constraint="_VF2JgFfdEeCb0LEisK_hTQ">
    <ruleId>CONF-179</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VF3XolfdEeCb0LEisK_hTQ" base_Constraint="_VF3XoFfdEeCb0LEisK_hTQ"/>
  <CDA:ConstraintValidation xmi:id="_VD5owFfdEeCb0LEisK_hTQ" base_Constraint="_VD4aoVfdEeCb0LEisK_hTQ">
    <ruleId>C83-[DE-7.05-CDA-3]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VD6P0FfdEeCb0LEisK_hTQ" base_Constraint="_VD4ao1fdEeCb0LEisK_hTQ">
    <ruleId>C83-[DE-7.05-CDA-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VD624FfdEeCb0LEisK_hTQ" severity="INFO" base_Constraint="_VD4apVfdEeCb0LEisK_hTQ">
    <ruleId>C83-[DE-7.05-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_VFyfIFfdEeCb0LEisK_hTQ" base_Class="_VEUfgFfdEeCb0LEisK_hTQ" templateId="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
  <CDA:ConstraintValidation xmi:id="_VFu0wlfdEeCb0LEisK_hTQ" base_Constraint="_VFu0wFfdEeCb0LEisK_hTQ">
    <ruleId>CONF-161</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VFvb0lfdEeCb0LEisK_hTQ" severity="INFO" base_Constraint="_VFvb0FfdEeCb0LEisK_hTQ">
    <ruleId>CONF-180</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VFwC4lfdEeCb0LEisK_hTQ" base_Constraint="_VFwC4FfdEeCb0LEisK_hTQ"/>
  <CDA:ConstraintValidation xmi:id="_VFwp8lfdEeCb0LEisK_hTQ" base_Constraint="_VFwp8FfdEeCb0LEisK_hTQ"/>
  <CDA:ConstraintValidation xmi:id="_VEYJ4FfdEeCb0LEisK_hTQ" severity="WARNING" base_Constraint="_VEUfglfdEeCb0LEisK_hTQ">
    <ruleId>C83-[DE-7.01-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VEYw8FfdEeCb0LEisK_hTQ" severity="WARNING" base_Constraint="_VEUfhFfdEeCb0LEisK_hTQ">
    <ruleId>C83-[DE-7.01-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VEZYAFfdEeCb0LEisK_hTQ" severity="WARNING" base_Constraint="_VEUfhlfdEeCb0LEisK_hTQ">
    <ruleId>C83-[DE-7.01-3]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_VEISQFfdEeCb0LEisK_hTQ" base_Class="_VEHrMFfdEeCb0LEisK_hTQ" templateId="2.16.840.1.113883.10.20.1.41" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_VEPnAFfdEeCb0LEisK_hTQ" base_Constraint="_VEHrNFfdEeCb0LEisK_hTQ">
    <ruleId>CONF-176</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VEQOEFfdEeCb0LEisK_hTQ" severity="INFO" base_Constraint="_VEHrNlfdEeCb0LEisK_hTQ">
    <ruleId>CONF-177</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_VFSI2VfdEeCb0LEisK_hTQ" base_Class="_VFSI0FfdEeCb0LEisK_hTQ" templateId="1.3.6.1.4.1.19376.1.5.3.1.4.1.2"/>
  <CDA:ConstraintValidation xmi:id="_VFVMIFfdEeCb0LEisK_hTQ" base_Constraint="_VFSI0lfdEeCb0LEisK_hTQ"/>
  <CDA:CDATemplate xmi:id="_VF7CBlfdEeCb0LEisK_hTQ" base_Class="_VF7CAFfdEeCb0LEisK_hTQ" templateId="2.16.840.1.113883.3.88.11.83.103" assigningAuthorityName="HITSP C83"/>
  <CDA:CDATemplate xmi:id="_VFF7mVfdEeCb0LEisK_hTQ" base_Class="_VFF7kFfdEeCb0LEisK_hTQ" templateId="1.3.6.1.4.1.19376.1.5.3.1.4.1.1"/>
  <CDA:ConstraintValidation xmi:id="_VFJl8FfdEeCb0LEisK_hTQ" base_Constraint="_VFF7klfdEeCb0LEisK_hTQ"/>
  <CDA:CDATemplate xmi:id="__ktt4FfdEeCIIf8CuAH-Kw" base_Class="__kqqkFfdEeCIIf8CuAH-Kw" templateId="2.16.840.1.113883.3.88.11.83.122" assigningAuthorityName="HITSP C83"/>
  <CDA:CDATemplate xmi:id="__lETMFfdEeCIIf8CuAH-Kw" base_Class="__lDsIFfdEeCIIf8CuAH-Kw" templateId="2.16.840.1.113883.3.88.11.83.15">
    <ruleId>C83-[DE-15-CDA-1]</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="__lQgclfdEeCIIf8CuAH-Kw" severity="WARNING" base_Constraint="__lQgcFfdEeCIIf8CuAH-Kw">
    <ruleId>CONF-419</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="__lRHglfdEeCIIf8CuAH-Kw" base_Constraint="__lRHgFfdEeCIIf8CuAH-Kw">
    <ruleId>CONF-420</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="__lRuklfdEeCIIf8CuAH-Kw" base_Constraint="__lRukFfdEeCIIf8CuAH-Kw">
    <ruleId>CONF-421</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="__lH9kFfdEeCIIf8CuAH-Kw" base_Constraint="__lDsJlfdEeCIIf8CuAH-Kw">
    <ruleId>C83-[DE-15.05-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="__k4tAFfdEeCIIf8CuAH-Kw" base_Class="__k4F8FfdEeCIIf8CuAH-Kw" templateId="2.16.840.1.113883.10.20.1.32" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="__k9lgFfdEeCIIf8CuAH-Kw" base_Constraint="__k4F-FfdEeCIIf8CuAH-Kw">
    <ruleId>CONF-402</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="__k_asFfdEeCIIf8CuAH-Kw" base_Constraint="__k4F_lfdEeCIIf8CuAH-Kw">
    <ruleId>CONF-406</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_aIcP9Vf5EeCxTb-Xw_gdpQ" base_Class="_aIcP8Ff5EeCxTb-Xw_gdpQ" templateId="2.16.840.1.113883.3.88.11.83.119" assigningAuthorityName="HITSP C83"/>
  <CDA:ConstraintValidation xmi:id="_aIdeEFf5EeCxTb-Xw_gdpQ" base_Constraint="_aIcP8lf5EeCxTb-Xw_gdpQ">
    <ruleId>C83-[CT-119-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_aIjkyVf5EeCxTb-Xw_gdpQ" base_Class="_aIjksFf5EeCxTb-Xw_gdpQ" templateId="1.3.6.1.4.1.19376.1.5.3.1.4.13.1" assigningAuthorityName="IHE PCC">
    <ruleId>6.3.4.21</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_aI9NVlf5EeCxTb-Xw_gdpQ" base_Constraint="_aI9NU1f5EeCxTb-Xw_gdpQ">
    <ruleId>CONF-387</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_aIprUFf5EeCxTb-Xw_gdpQ" base_Constraint="_aIjkslf5EeCxTb-Xw_gdpQ">
    <ruleId>6.3.4.21.3</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_aIt8x1f5EeCxTb-Xw_gdpQ" base_Class="_aIt8wFf5EeCxTb-Xw_gdpQ" templateId="2.16.840.1.113883.3.88.11.83.14" assigningAuthorityName="HITSP">
    <ruleId>C83-[DE-14-CDA-1]</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_t30ZEFgDEeCwUujnxrDtRA" base_Class="_t3zK8FgDEeCwUujnxrDtRA" templateId="2.16.840.1.113883.10.20.3">
    <ruleId>CONF-CONSOL-0</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_t38U4FgDEeCwUujnxrDtRA" base_Constraint="_t3zK8lgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-1</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t3878FgDEeCwUujnxrDtRA" base_Constraint="_t3zK9FgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-2</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t39jAFgDEeCwUujnxrDtRA" severity="WARNING" base_Constraint="_t3zK9lgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-3</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t3-KEFgDEeCwUujnxrDtRA" base_Constraint="_t3zK-FgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-4</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t3-xIFgDEeCwUujnxrDtRA" base_Constraint="_t3zK-1gDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-5</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t3_YMFgDEeCwUujnxrDtRA" base_Constraint="_t3zK_VgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-6</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t3__QFgDEeCwUujnxrDtRA" base_Constraint="_t3zK_1gDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-7</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4AmUFgDEeCwUujnxrDtRA" base_Constraint="_t3zLA1gDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-8</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4BNYFgDEeCwUujnxrDtRA" base_Constraint="_t3zLBVgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-9</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4B0cFgDEeCwUujnxrDtRA" base_Constraint="_t3zLCFgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-10</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4DpoFgDEeCwUujnxrDtRA" base_Constraint="_t3zLEVgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-14</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4GF4FgDEeCwUujnxrDtRA" base_Constraint="_t3zLGlgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-18</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4Gs8FgDEeCwUujnxrDtRA" base_Constraint="_t3zLHVgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-19</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4HUAFgDEeCwUujnxrDtRA" base_Constraint="_t3zLH1gDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-20</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4H7EFgDEeCwUujnxrDtRA" base_Constraint="_t3zLIlgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-21</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4IiIFgDEeCwUujnxrDtRA" base_Constraint="_t3zLJFgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-22</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4JJMFgDEeCwUujnxrDtRA" base_Constraint="_t3zLJlgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-23</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4K-YFgDEeCwUujnxrDtRA" severity="INFO" base_Constraint="_t3zLLVgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-26</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4LlcFgDEeCwUujnxrDtRA" base_Constraint="_t3zLL1gDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-27</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4MMgFgDEeCwUujnxrDtRA" base_Constraint="_t3zLMlgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-28</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4MzkFgDEeCwUujnxrDtRA" base_Constraint="_t3zLNFgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-29</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4MzkVgDEeCwUujnxrDtRA" base_Constraint="_t3zLNlgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-30</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4NaoFgDEeCwUujnxrDtRA" severity="INFO" base_Constraint="_t3zLOFgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-31</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4OBsFgDEeCwUujnxrDtRA" severity="INFO" base_Constraint="_t3zLOlgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-32</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4PP0FgDEeCwUujnxrDtRA" base_Constraint="_t3zLPFgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-33</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4ThQFgDEeCwUujnxrDtRA" base_Constraint="_t3zLUVgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-41</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4UIUFgDEeCwUujnxrDtRA" base_Constraint="_t3zLU1gDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-42</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4UvYFgDEeCwUujnxrDtRA" severity="WARNING" base_Constraint="_t3zLVVgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-43</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t4VWcFgDEeCwUujnxrDtRA" severity="WARNING" base_Constraint="_t3zLWFgDEeCwUujnxrDtRA">
    <ruleId>CONF-CONSOL-44</ruleId>
  </CDA:ConstraintValidation>
  <Ecore:EPackage xmi:id="_exHqQFgEEeCcnqJUjkVAag" base_Package="_qQyD8jxVEd6JwqSGecoePg" packageName="consol" nsPrefix="consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/consol" basePackage="org.openhealthtools.mdht.uml.cda" prefix="Consol"/>
  <Ecore:EClass xmi:id="_exLUoFgEEeCcnqJUjkVAag" base_Class="_TQ-5oFfdEeCb0LEisK_hTQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Status' templateId.root='2.16.840.1.113883.10.20.1.57' constraints.validation.error='StatusObservationTemplateId StatusObservationNoAdditionalParticipants StatusObservationClassCode StatusObservationMoodCode StatusObservationCode StatusObservationStatusCode StatusObservationValue' code.codeSystemName='LOINC' classCode='OBS' code.code='33999-4' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_exihAFgEEeCcnqJUjkVAag" base_Class="_VD4aoFfdEeCb0LEisK_hTQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.88.11.83.7' constraints.validation.error='ConditionTemplateId ConditionEntryRelationshipRequired ConditionEffectiveTimeLowHigh ConditionHasTreatingProvider ConditionHasProviderId ConditionClassCode ConditionMoodCode ConditionId ConditionCodeNullFlavor ConditionEffectiveTime' code.nullFlavor='NA' classCode='ACT' constraints.validation.warning='ConditionSubjectOfTarget ConditionContainsProblemObservation ConditionContainsAlertObservation' moodCode='EVN' constraints.validation.info='ConditionContainsPatientAwareness ConditionHasProviderTreatmentTime ConditionEpisodeObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ex5tYFgEEeCcnqJUjkVAag" base_Class="_VEHrMFfdEeCb0LEisK_hTQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.5.4' templateId.root='2.16.840.1.113883.10.20.1.41' constraints.validation.error='EpisodeObservationTemplateId EpisodeObservationOneEntryRelationshipSUBJ EpisodeObservationClassCode EpisodeObservationMoodCode EpisodeObservationStatusCode' code.code='ASSERTION' constraints.validation.info='EpisodeObservationExistsEntryRelationshipSAS' value.displayName='Clinical finding' statusCode.code='completed' value.code='404684003' code.codeSystemName='HL7ActCode' constraints.validation.warning='EpisodeObservationCode EpisodeObservationValue' classCode='OBS' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_eyrJcFgEEeCcnqJUjkVAag" base_Class="_VEUfgFfdEeCb0LEisK_hTQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.4.5' constraints.validation.error='ConditionEntryTemplateId ConditionEntryInformationSource ConditionEntryHasTextReference ConditionEntryCommentInversionInd ConditionEntryMoodCode ConditionEntryId ConditionEntryText ConditionEntryStatusCode ConditionEntryValue' code.codeSystemName='SNOMEDCT' classCode='OBS' constraints.validation.warning='ConditionEntryHasOnsetDate ConditionEntryHasResolutionDate ConditionEntryHasUnknownResolutionDate ConditionEntryCode ConditionEntryEffectiveTime' constraints.validation.info='ConditionEntryContainsPatientAwareness ConditionEntryAgeObservation ConditionEntrySeverity ConditionEntryProblemStatusObservation ConditionEntryHealthStatusObservation ConditionEntryComment' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ezEyEFgEEeCcnqJUjkVAag" base_Class="_VEookFfdEeCb0LEisK_hTQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' code.displayName='Age' templateId.root='2.16.840.1.113883.10.20.1.38' constraints.validation.error='AgeObservationTemplateId AgeObservationClassCode AgeObservationMoodCode AgeObservationCode AgeObservationStatusCode AgeObservationValue' code.codeSystemName='SNOMEDCT' classCode='OBS' constraints.validation.warning='AgeObservationRelatedSubjectBirthTime' code.code='397659008' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ezXF8FgEEeCcnqJUjkVAag" base_Class="_VE1c4FfdEeCb0LEisK_hTQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SeverityObservation' code.codeSystem='2.16.840.1.113883.5.4' code.displayName='Severity observation' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.4.1' constraints.validation.error='SeverityTemplateId SeverityHasTextReference SeverityClassCode SeverityMoodCode SeverityCode SeverityText SeverityStatusCode SeverityValue' code.codeSystemName='HL7ActCode' classCode='OBS' code.code='SEV' moodCode='EVN' value.codeSystem='2.16.840.1.113883.5.1063'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_ezqA4FgEEeCcnqJUjkVAag" base_Generalization="_VFQToFfdEeCb0LEisK_hTQ"/>
  <Ecore:EClass xmi:id="_ezrPAFgEEeCcnqJUjkVAag" base_Class="_VFF7kFfdEeCb0LEisK_hTQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.4.1.1' constraints.validation.error='ProblemStatusObservationTemplateId ProblemStatusObservationHasTextReference StatusObservationValue ProblemStatusObservationText' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_ez1AAFgEEeCcnqJUjkVAag" base_Generalization="_VFdH8FfdEeCb0LEisK_hTQ"/>
  <Ecore:EClass xmi:id="_ez2OIFgEEeCcnqJUjkVAag" base_Class="_VFSI0FfdEeCb0LEisK_hTQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Health status' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.4.1.2' constraints.validation.error='HealthStatusObservationTemplateId HealthStatusObservationHasTextReference StatusObservationCode StatusObservationValue HealthStatusObservationText' code.codeSystemName='LOINC' code.code='11323-3' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_e0DCcFgEEeCcnqJUjkVAag" base_Class="_VFe9IFfdEeCb0LEisK_hTQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Annotation comment' templateId.root='2.16.840.1.113883.3.88.11.83.11' constraints.validation.error='CommentTemplateId CommentHasTextReference CommentEffectiveTimeWhenAuthorPresent CommentClassCode CommentMoodCode CommentCode CommentText CommentStatusCode' code.codeSystemName='LOINC' classCode='ACT' code.code='48767-8' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_e0cEAFgEEeCcnqJUjkVAag" base_Class="_VF7CAFfdEeCb0LEisK_hTQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.3.88.11.83.103' code.displayName='Problem list' constraints.validation.error='ProblemListSectionTemplateId ProblemListSectionCode ProblemListSectionTitle ProblemListSectionText' code.codeSystemName='LOINC' code.code='11450-4'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_e0km4FgEEeCcnqJUjkVAag" base_Class="__kqqkFfdEeCIIf8CuAH-Kw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.3.88.11.83.122' code.displayName='STUDIES SUMMARY' constraints.validation.error='DiagnosticResultsSectionTemplateId DiagnosticResultsSectionCode' code.codeSystemName='LOINC' constraints.validation.warning='DiagnosticResultsSectionResultOrganizer DiagnosticResultsSectionExternalReference' code.code='30954-2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_e0pfYFgEEeCcnqJUjkVAag" base_Class="__k4F8FfdEeCIIf8CuAH-Kw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.1.32' constraints.validation.error='ResultOrganizerTemplateId ResultOrganizerComponentElement ResultOrganizerInformationSource ResultOrganizerMoodCode ResultOrganizerId ResultOrganizerCode ResultOrganizerStatusCode' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_e01FkFgEEeCcnqJUjkVAag" base_Class="__lDsIFfdEeCIIf8CuAH-Kw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.88.11.83.15' constraints.validation.error='ResultTemplateId ResultNoObservationRangeCode ResultInformationSource ResultValuePresence ResultMoodCode ResultId ResultCode ResultStatusCode ResultEffectiveTime ResultValue' constraints.validation.warning='ResultReferenceRangeRequired ResultInterpretationCode' constraints.validation.info='ResultMethodCode' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_e1PVQFgEEeCcnqJUjkVAag" base_Class="__lX1MFfdEeCIIf8CuAH-Kw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='1.3.6.1.4.1.19376.1.5.3.1.4.4' constraints.validation.error='ExternalReferenceTemplateId ExternalReferenceClassCode ExternalReferenceMoodCode' classCode='ACT' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_e1WqAFgEEeCcnqJUjkVAag" base_Class="_aIcP8Ff5EeCxTb-Xw_gdpQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Vital signs' templateId.root='2.16.840.1.113883.3.88.11.83.119' constraints.validation.error='VitalSignsSectionTemplateId VitalSignsSectionVitalSignEntry VitalSignsSectionCode VitalSignsSectionTitle VitalSignsSectionText VitalSignsSectionVitalSignsOrganizer' code.codeSystemName='LOINC' code.code='8716-3'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_e1fz8FgEEeCcnqJUjkVAag" base_Generalization="_aI-bcFf5EeCxTb-Xw_gdpQ"/>
  <Ecore:EClass xmi:id="_e1gbAFgEEeCcnqJUjkVAag" base_Class="_aIjksFf5EeCxTb-Xw_gdpQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.4.13.1' code.displayName='Vital signs' constraints.validation.error='VitalSignsOrganizerTemplateId VitalSignsOrganizerInformationSource VitalSignsOrganizerRequireResultsOrganizerTemplateID VitalSignsOrganizerClassCode ResultOrganizerCode VitalSignsOrganizerEffectiveTime ResultOrganizerStatusCode VitalSignsOrganizerId' code.codeSystemName='SNOMEDCT' classCode='CLUSTER' code.code='46680005'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_e1udcFgEEeCcnqJUjkVAag" base_Generalization="_aI7_MVf5EeCxTb-Xw_gdpQ"/>
  <Ecore:EClass xmi:id="_e1vEgFgEEeCcnqJUjkVAag" base_Class="_aIt8wFf5EeCxTb-Xw_gdpQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.3.88.11.83.14' constraints.validation.error='VitalSignTemplateId ResultCode VitalSignValue' code.codeSystemName='LOINC' constraints.validation.info='VitalSignInterpretationCode VitalSignMethodCode VitalSignTargetSiteCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_e1-VEFgEEeCcnqJUjkVAag" base_Class="_t3zK8FgDEeCwUujnxrDtRA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.3' constraints.validation.error='GeneralHeaderConstraintsTemplateId GeneralHeaderConstraintsPersonHasName GeneralHeaderConstraintsRolesShallHaveAddrAndTelecom GeneralHeaderConstraintsOrganizationsHaveContactInfo GeneralHeaderConstraintsTimePreciseToDay GeneralHeaderConstraintsTimePreciseToYear GeneralHeaderConstraintsTelephoneMatchesRegex GeneralHeaderConstraintsHasTelephoneDialingDigits GeneralHeaderConstraintsUnknownTelephoneUsesNullFlavor GeneralHeaderConstraintsTypeIdExtension GeneralHeaderConstraintsOidLength GeneralHeaderConstraintsSetIdAndVersionNumber GeneralHeaderConstraintsSetIdAndIdAreUnique GeneralHeaderConstraintsCopyTimeNotPresent GeneralHeaderConstraintsHasRecordTargetPatientRole GeneralHeaderConstraintsHasPatientBirthTime GeneralHeaderConstraintsHasAdministrativeGenderCode GeneralHeaderConstraintsHasAuthorTime GeneralHeaderConstraintsHasAssignedAuthorId GeneralHeaderConstraintsHasAssignedAuthorPersonOrDevice GeneralHeaderConstraintsHasDataEntererAssignedPerson GeneralHeaderConstraintsHasInformantAssignedPersonOrRelatedPerson GeneralHeaderConstraintsLegalAuthenticatorHasAssignedPerson GeneralHeaderConstraintsAuthenticatorHasAssignedPerson GeneralHeaderConstraintsRealmCode GeneralHeaderConstraintsTypeId GeneralHeaderConstraintsId GeneralHeaderConstraintsCode GeneralHeaderConstraintsTitle GeneralHeaderConstraintsEffectiveTime GeneralHeaderConstraintsLanguageCode' constraints.validation.warning='GeneralHeaderConstraintsRolesShouldHaveAddrAndTelecom GeneralHeaderConstraintsTimePreciseToSecond GeneralHeaderConstraintsTimePreciseToYearAndDay' realmCode.code='US' constraints.validation.info='GeneralHeaderConstraintsHasProviderOrganization GeneralHeaderConstraintsHasDataEntererTime GeneralHeaderConstraintsHasInformant'</annotation>
  </Ecore:EClass>
</xmi:XMI>
