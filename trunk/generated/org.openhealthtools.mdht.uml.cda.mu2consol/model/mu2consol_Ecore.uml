<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_mZtsINd5EeGtNLA6W-IQeQ" name="mu2consol">
    <packageImport xmi:id="_mdYrMtd5EeGtNLA6W-IQeQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.mu2consol.model/model/mu2consol-vocab.uml#_mZ-K0Nd5EeGtNLA6W-IQeQ"/>
    </packageImport>
    <packageImport xmi:id="_HE5v4Ng-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packageImport xmi:id="_qktQYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_sCPlYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_v-6qsNkMEeGsqcJR8eqiMw" name="GeneralHeaderConstraints">
      <ownedComment xmi:id="_BHY70OMDEeGwErp-HM3_kQ">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_fpjUwO4TEeGTcfO2HmU2Kw" name="mu2consolGeneralHeaderConstraintsRecordTarget" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fpjUwe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.recordTarget->exists(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fpts0O4TEeGTcfO2HmU2Kw" name="mu2consolGeneralHeaderConstraintsDocumentationOf" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fpts0e4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqw1sO4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqxcwO4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((languageCode.oclIsUndefined() or languageCode.isNullFlavorUndefined()) implies (not languageCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqxcwe4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientName" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqxcwu4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqxcw-4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientAdministrativeGenderCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqxcxO4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((administrativeGenderCode.oclIsUndefined() or administrativeGenderCode.isNullFlavorUndefined()) implies (not administrativeGenderCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqxcxe4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqxcxu4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqxcx-4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqyD0O4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqyD0e4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqyD0u4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((birthTime.oclIsUndefined() or birthTime.isNullFlavorUndefined()) implies (not birthTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqyD0-4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqyD1O4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(languageCommunication->one(languageCommunication : cda::LanguageCommunication | not languageCommunication.oclIsUndefined() and languageCommunication.oclIsKindOf(cda::LanguageCommunication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqyD1e4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatient" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqyD1u4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject(patient->one(patient : cda::Patient | not patient.oclIsUndefined() and patient.oclIsKindOf(cda::Patient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqyD1-4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsRecordTargetPatientRole" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqyD2O4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null)->reject(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqz5AO4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqz5Ae4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fq0gEO4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fq0gEe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fq0gEu4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsDocumentationOfServiceEvent" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fq0gE-4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_v-6qsdkMEeGsqcJR8eqiMw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VG3DUNkxEeGsqcJR8eqiMw" name="SummaryOfCareRecord">
      <ownedComment xmi:id="_OaVzYNpiEeGzu8-aAsCS4g">
        <body>170.314(b)(1) (Incorporate summary of care record)</body>
      </ownedComment>
      <ownedRule xmi:id="_OxIpQN3EEeGdQcioKnmIhA" name="SummaryOfCareRecordCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_UQ6EoN3EEeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;
 self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;
 self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2nwZAN3EEeGdQcioKnmIhA" name="SummaryOfCareRecordMu2EncounterDiagnosesRequirements" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_K7mFoN3FEeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionDiagnosisSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalDischargeDiagnosisSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PostoperativeDiagnosisSection)) or  &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PostprocedureDiagnosisSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n-eIsN32EeGdQcioKnmIhA" name="SummaryOfCareRecordCanHaveEitherRequiredOrOptionalVitalSigns" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbQu0N32EeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kx5CgN33EeGdQcioKnmIhA" name="SummaryOfCareRecordMedicationListConstraint" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o21eoN33EeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or  &#xD;
 self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional)) or &#xD;
 self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gfm_8OvXEeGkopdZmUN1Xw" name="SummaryOfCareRecordCarePlanning" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jopNcOvXEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::InterventionsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n8bhYOvYEeGkopdZmUN1Xw" name="SummaryOfCareRecordMedicationAllergy" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tP9QgOvYEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VUReAOvZEeGkopdZmUN1Xw" name="SummaryOfCareRecordReasonForHospitalization" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZBL0oOvZEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionDiagnosisSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PreoperativeDiagnosisSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_izlGUOvaEeGkopdZmUN1Xw" name="SummaryOfCareRecordMedicationList" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYRiYOvaEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fpm_Iu4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fpm_I-4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.11.11.11.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fpylVe4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordPlanOfCareSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fpzMYO4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fp1BkO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordInstructionsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp1Bke4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fp1ope4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordHospitalDischargeInstructionsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp1opu4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fp4r8O4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordProblemSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp4r8e4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fp8WUO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordImmunizationsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp8WUe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fp9kcO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordMedicationsAdministeredSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp9kce4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqAAsO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordSocialHistorySection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqAAse4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqBO0O4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordResultsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqBO0e4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqDEAO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordProceduresSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqDEAe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fq2VQO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fq2VQe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fq28UO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fq28Ue4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fq4KcO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordmu2consolAllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fq4Kce4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fq5YkO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fq5Yke4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fq5_oO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fq5_oe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fq700O4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordInstructionsSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fq700e4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(templateId->exists(id : datatypes::II | id.root = 'null'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fq8b4O4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordmu2consolInstructionsSectionInstructions" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fq8b4e4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fq9C8O4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fq9C8e4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fq-REO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fq-REe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fq-4IO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fq-4Ie4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_frAGQO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_frAGQe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_frAtUO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_frAtUe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_frB7cO4TEeGTcfO2HmU2Kw" name="SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_frB7ce4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VG3qYNkxEeGsqcJR8eqiMw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_fpylUO4TEeGTcfO2HmU2Kw" name="getEncountersSection" isQuery="true" bodyCondition="_fpylU-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fpylU-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fpylUO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fpylVO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection))->asSequence()->any(true).oclAsType(consol::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fpylUe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LWg0BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fpylUu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fpzzcO4TEeGTcfO2HmU2Kw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_fpzzc-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fpzzc-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fpzzcO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fpzzdO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fpzzce4TEeGTcfO2HmU2Kw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fpzzcu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fpzzde4TEeGTcfO2HmU2Kw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_fpzzeO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fpzzeO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fpzzde4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fpzzee4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fpzzdu4TEeGTcfO2HmU2Kw" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fpzzd-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp0agO4TEeGTcfO2HmU2Kw" name="getInterventionsSection" isQuery="true" bodyCondition="_fp0ag-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp0ag-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp0agO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp0ahO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection))->asSequence()->any(true).oclAsType(consol::InterventionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp0age4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_hqzJADVyEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp0agu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp1ooO4TEeGTcfO2HmU2Kw" name="getInstructionsSection" isQuery="true" bodyCondition="_fp1oo-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp1oo-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp1ooO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp1opO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))->asSequence()->any(true).oclAsType(consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp1ooe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp1oou4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp22wO4TEeGTcfO2HmU2Kw" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_fp22w-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp22w-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp22wO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp22xO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp22we4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp22wu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp22xe4TEeGTcfO2HmU2Kw" name="getAssessmentSection" isQuery="true" bodyCondition="_fp22yO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp22yO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp22xe4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp22ye4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp22xu4TEeGTcfO2HmU2Kw" type="_CaN5MODgEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp22x-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp3d0O4TEeGTcfO2HmU2Kw" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_fp3d0-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp3d0-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp3d0O4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp3d1O4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp3d0e4TEeGTcfO2HmU2Kw" type="_gl8CMODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp3d0u4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp4E4O4TEeGTcfO2HmU2Kw" name="getHospitalDischargeDiagnosisSection" isQuery="true" bodyCondition="_fp4E4-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp4E4-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp4E4O4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp4E5O4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalDischargeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp4E4e4TEeGTcfO2HmU2Kw" type="_qgJokODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp4E4u4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp4E5e4TEeGTcfO2HmU2Kw" name="getPostoperativeDiagnosisSection" isQuery="true" bodyCondition="_fp4E6O4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp4E6O4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp4E5e4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp4E6e4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PostoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PostoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp4E5u4TEeGTcfO2HmU2Kw" type="_y1mQkODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp4E5-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp5TAO4TEeGTcfO2HmU2Kw" name="getProblemSection" isQuery="true" bodyCondition="_fp5TA-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp5TA-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp5TAO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp5TBO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp5TAe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp5TAu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp56EO4TEeGTcfO2HmU2Kw" name="getAllergiesSection" isQuery="true" bodyCondition="_fp56E-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp56E-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp56EO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp56FO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp56Ee4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp56Eu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp56Fe4TEeGTcfO2HmU2Kw" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_fp56GO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp56GO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp56Fe4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp6hIO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp56Fu4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PQJcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp56F-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp6hIe4TEeGTcfO2HmU2Kw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_fp6hJO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp6hJO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp6hIe4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp6hJe4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp6hIu4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp6hI-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp7IMO4TEeGTcfO2HmU2Kw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_fp7IM-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp7IM-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp7IMO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp7INO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp7IMe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp7IMu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp7INe4TEeGTcfO2HmU2Kw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_fp7IOO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp7IOO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp7INe4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp7IOe4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp7INu4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp7IN-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp7vQO4TEeGTcfO2HmU2Kw" name="getPreoperativeDiagnosisSection" isQuery="true" bodyCondition="_fp7vQ-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp7vQ-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp7vQO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp7vRO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PreoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp7vQe4TEeGTcfO2HmU2Kw" type="_bRRt0ODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp7vQu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp89YO4TEeGTcfO2HmU2Kw" name="getImmunizationsSection" isQuery="true" bodyCondition="_fp89Y-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp89Y-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp89YO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp89ZO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp89Ye4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp89Yu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp-LgO4TEeGTcfO2HmU2Kw" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_fp-Lg-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp-Lg-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp-LgO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp-LhO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(mu2consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp-Lge4TEeGTcfO2HmU2Kw" type="_3poqgODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp-Lgu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp-ykO4TEeGTcfO2HmU2Kw" name="getMedicationsSection" isQuery="true" bodyCondition="_fp-yk-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp-yk-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp-ykO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp-ylO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp-yke4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp-yku4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp-yle4TEeGTcfO2HmU2Kw" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_fp-ymO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp-ymO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp-yle4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp_ZoO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp-ylu4TEeGTcfO2HmU2Kw" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp-yl-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fp_Zoe4TEeGTcfO2HmU2Kw" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_fp_ZpO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fp_ZpO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fp_Zoe4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fp_Zpe4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fp_Zou4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fp_Zo-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqAnwO4TEeGTcfO2HmU2Kw" name="getSocialHistorySection" isQuery="true" bodyCondition="_fqAnw-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqAnw-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqAnwO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqAnxO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqAnwe4TEeGTcfO2HmU2Kw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqAnwu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqB14O4TEeGTcfO2HmU2Kw" name="getResultsSection" isQuery="true" bodyCondition="_fqB14-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqB14-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqB14O4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqB15O4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqB14e4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqB14u4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqCc8O4TEeGTcfO2HmU2Kw" name="getVitalSignsSection" isQuery="true" bodyCondition="_fqCc8-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqCc8-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqCc8O4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqCc9O4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqCc8e4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqCc8u4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqCc9e4TEeGTcfO2HmU2Kw" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_fqCc-O4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqCc-O4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqCc9e4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqCc-e4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqCc9u4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqCc9-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqDrEO4TEeGTcfO2HmU2Kw" name="getProceduresSection" isQuery="true" bodyCondition="_fqDrE-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqDrE-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqDrEO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqDrFO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqDrEe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqDrEu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqESIO4TEeGTcfO2HmU2Kw" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_fqESI-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqESI-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqESIO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqESJO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqESIe4TEeGTcfO2HmU2Kw" type="_szTFwOF8EeGlJOFzBdwM6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqESIu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqE5MO4TEeGTcfO2HmU2Kw" name="getPostprocedureDiagnosisSection" isQuery="true" bodyCondition="_fqE5M-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqE5M-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqE5MO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqE5NO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PostprocedureDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PostprocedureDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqE5Me4TEeGTcfO2HmU2Kw" type="_uvXlkODnEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqE5Mu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqE5Ne4TEeGTcfO2HmU2Kw" name="getReasonForReferralSection" isQuery="true" bodyCondition="_fqE5OO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqE5OO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqE5Ne4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqE5Oe4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))->asSequence()->any(true).oclAsType(consol::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqE5Nu4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQFxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqE5N-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ec-GAODeEeGdSJSga09Dyg" name="AssessmentAndPlanForCarePlanning">
      <ownedComment xmi:id="_XvBEkOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_VDXc8OJREeGzd4w2xo094w" name="AssessmentAndPlanForCarePlanningOneOfPlanOfCareEntry" constrainedElement="_Ec-GAODeEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uj1mgOJREeGzd4w2xo094w">
          <language>OCL</language>
          <body>self.getProcedures()->exists(p : cda::Procedure | p.oclIsKindOf(consol::PlanOfCareActivityProcedure)) or self.getSubstanceAdministrations()->exists(s : cda::SubstanceAdministration | s.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration)) or self.getSupplies()->exists(sp : cda::Supply | sp.oclIsKindOf(consol::PlanOfCareActivitySupply))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FkUIkODeEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_fqGuYO4TEeGTcfO2HmU2Kw" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_fqHVcu4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqHVcu4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqGuYO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqHVc-4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqHVcO4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqHVce4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqHVdO4TEeGTcfO2HmU2Kw" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_fqHVd-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqHVd-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqHVdO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqHVeO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqHVde4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqHVdu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqH8gO4TEeGTcfO2HmU2Kw" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_fqH8g-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqH8g-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqH8gO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqH8hO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqH8ge4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqH8gu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_svnagODKEeGdSJSga09Dyg" name="PlanOfCareSection">
      <ownedComment xmi:id="_wajPYOFzEeGlJOFzBdwM6w">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_j1rcwOF3EeGlJOFzBdwM6w" name="mu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qaLEgOF3EeGlJOFzBdwM6w">
          <language>OCL</language>
          <body>self.getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or self.getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or self.getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vqugwODKEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_fqFgQO4TEeGTcfO2HmU2Kw" name="getmu2consolPlanOfCareActivityAct" isQuery="true" bodyCondition="_fqFgQ-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqFgQ-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqFgQO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqFgRO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlanOfCareActivityAct))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqFgQe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWE5xSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqFgQu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqFgRe4TEeGTcfO2HmU2Kw" name="getmu2consolPlanOfCareActivityEncounter" isQuery="true" bodyCondition="_fqGHUu4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqGHUu4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqFgRe4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqGHU-4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityEncounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqGHUO4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWFBBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqGHUe4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqGHVO4TEeGTcfO2HmU2Kw" name="getmu2consolPlanOfCareActivityObservation" isQuery="true" bodyCondition="_fqGHV-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqGHV-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqGHVO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqGHWO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlanOfCareActivityObservation))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqGHVe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NcLjhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqGHVu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CaN5MODgEeGdSJSga09Dyg" name="AssessmentSection">
      <ownedComment xmi:id="_dY-WsOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_fqJKoO4TEeGTcfO2HmU2Kw" name="mu2consolAssessmentSectionProblemObservation" constrainedElement="_CaN5MODgEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqJKoe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D0JgkODgEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_W8pI4DszEeGvzMYhXuqAEA"/>
      </generalization>
      <ownedOperation xmi:id="_fqKYwO4TEeGTcfO2HmU2Kw" name="getProblemObservation" isQuery="true" bodyCondition="_fqKYw-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqKYw-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqKYwO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqKYxO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqKYwe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqKYwu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g1AyQODhEeGdSJSga09Dyg" name="AssessmentAndPlanForConditionOrConcern">
      <ownedComment xmi:id="_Zls5YOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_fqKYxe4TEeGTcfO2HmU2Kw" name="AssessmentAndPlanForConditionOrConcernProblemObservation" constrainedElement="_g1AyQODhEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqK_0O4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iIDHcODhEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_fqLm4e4TEeGTcfO2HmU2Kw" name="getProblemObservation" isQuery="true" bodyCondition="_fqLm5O4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqLm5O4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqLm4e4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqLm5e4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqLm4u4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqLm4-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_w2gYkODkEeGdSJSga09Dyg" name="AssessmentAndPlanSection">
      <ownedComment xmi:id="_b1SWYOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <generalization xmi:id="_ySywYODkEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_fqMN8O4TEeGTcfO2HmU2Kw" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_fqMN8-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqMN8-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqMN8O4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqMN9O4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqMN8e4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqMN8u4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqMN9e4TEeGTcfO2HmU2Kw" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_fqM1Au4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqM1Au4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqMN9e4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqM1A-4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqM1AO4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqM1Ae4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqM1BO4TEeGTcfO2HmU2Kw" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_fqM1B-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqM1B-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqM1BO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqM1CO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqM1Be4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqM1Bu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqNcEO4TEeGTcfO2HmU2Kw" name="getProblemObservation" isQuery="true" bodyCondition="_fqNcE-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqNcE-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqNcEO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqNcFO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqNcEe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqNcEu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZK4bUODlEeGdSJSga09Dyg" name="InstructionsSection">
      <ownedComment xmi:id="_nirKkOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_fqODIO4TEeGTcfO2HmU2Kw" name="InstructionsSectionTemplateId" constrainedElement="_ZK4bUODlEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqODIe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = 'null')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqPRQO4TEeGTcfO2HmU2Kw" name="mu2consolInstructionsSectionInstructions" constrainedElement="_ZK4bUODlEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqPRQe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_avPxEODlEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
      </generalization>
      <ownedOperation xmi:id="_fqP4UO4TEeGTcfO2HmU2Kw" name="getmu2consolInstructionss" isQuery="true" bodyCondition="_fqP4U-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqP4U-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqP4UO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqP4VO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions)).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqP4Ue4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2G8h9RSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqP4Uu4TEeGTcfO2HmU2Kw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gl8CMODmEeGdSJSga09Dyg" name="HospitalAdmissionDiagnosisSection">
      <ownedComment xmi:id="_iSMIYOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_fqQfYO4TEeGTcfO2HmU2Kw" name="mu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_gl8CMODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqQfYe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jgg88ODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidQhSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_fqRGce4TEeGTcfO2HmU2Kw" name="getmu2consolHospitalAdmissionDiagnosis" isQuery="true" bodyCondition="_fqRGdO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqRGdO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqRGce4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqRGde4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqRGcu4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5K6mAEFHEeGorO80f-Cppg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqRGc-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qgJokODmEeGdSJSga09Dyg" name="HospitalDischargeDiagnosisSection">
      <ownedComment xmi:id="_k2eqEOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_fqRtgO4TEeGTcfO2HmU2Kw" name="mu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_qgJokODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqRtge4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rXMlUODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidURSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_fqSUke4TEeGTcfO2HmU2Kw" name="getmu2consolHospitalDischargeDiagnosis" isQuery="true" bodyCondition="_fqS7ou4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqS7ou4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqSUke4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqS7o-4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalDischargeDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalDischargeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqS7oO4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_KtwVgCULEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqS7oe4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y1mQkODmEeGdSJSga09Dyg" name="PostoperativeDiagnosisSection">
      <ownedComment xmi:id="_q87D4OGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_fqS7pO4TEeGTcfO2HmU2Kw" name="mu2consolPostoperativeDiagnosisSectionProblemObservation" constrainedElement="_y1mQkODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqTisO4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zVobgODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_7UA-4DVyEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_fqUJwe4TEeGTcfO2HmU2Kw" name="getProblemObservation" isQuery="true" bodyCondition="_fqUJxO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqUJxO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqUJwe4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqUJxe4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqUJwu4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqUJw-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uvXlkODnEeGdSJSga09Dyg" name="PostprocedureDiagnosisSection">
      <ownedComment xmi:id="_sNALsOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_fqUw0O4TEeGTcfO2HmU2Kw" name="mu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_uvXlkODnEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqUw0e4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vj29kODnEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_-jlSMDVyEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_fqVX4e4TEeGTcfO2HmU2Kw" name="getmu2consolPostprocedureDiagnosis" isQuery="true" bodyCondition="_fqV-8O4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqV-8O4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqVX4e4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqV-8e4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PostprocedureDiagnosis))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqVX4u4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_0fjXAEEvEeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqVX4-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bRRt0ODqEeGdSJSga09Dyg" name="PreoperativeDiagnosisSection">
      <ownedComment xmi:id="_thn1QOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_fqV-8u4TEeGTcfO2HmU2Kw" name="mu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_bRRt0ODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqV-8-4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_b5wDEODqEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Cu6qMDVzEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_fqXNEe4TEeGTcfO2HmU2Kw" name="getmu2consolPreoperativeDiagnosis" isQuery="true" bodyCondition="_fqXNFO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqXNFO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqXNEe4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqXNFe4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PreoperativeDiagnosis))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqXNEu4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_0baBYEEwEeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqXNE-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3poqgODqEeGdSJSga09Dyg" name="MedicationsAdministeredSection">
      <ownedComment xmi:id="_o4-PIOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_fqX0IO4TEeGTcfO2HmU2Kw" name="mu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_3poqgODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqX0Ie4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4XEYQODqEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj_BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_fqYbMe4TEeGTcfO2HmU2Kw" name="getmu2consolMedicationActivities" isQuery="true" bodyCondition="_fqYbNO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqYbNO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqYbMe4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqYbNe4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqYbMu4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2GHbgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqYbM-4TEeGTcfO2HmU2Kw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HBzuYODrEeGdSJSga09Dyg" name="HospitalAdmissionMedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_jlwCAOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_fqZCQO4TEeGTcfO2HmU2Kw" name="mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_HBzuYODrEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqZCQe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Hm_fEODrEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj5BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_fqaQYO4TEeGTcfO2HmU2Kw" name="getmu2consolAdmissionMedications" isQuery="true" bodyCondition="_fqaQY-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqaQY-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqaQYO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqaQZO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AdmissionMedication)).oclAsType(consol::AdmissionMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqaQYe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_LNP08EFGEeGorO80f-Cppg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqaQYu4TEeGTcfO2HmU2Kw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_szTFwOF8EeGlJOFzBdwM6w" name="AllergiesSectionEntriesOptional">
      <ownedComment xmi:id="_U6AmUOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_fqa3cO4TEeGTcfO2HmU2Kw" name="mu2consolAllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_szTFwOF8EeGlJOFzBdwM6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqa3ce4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ugMFYOF8EeGlJOFzBdwM6w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
      </generalization>
      <ownedOperation xmi:id="_fqbege4TEeGTcfO2HmU2Kw" name="getmu2consolAllergyProblemAct" isQuery="true" bodyCondition="_fqbehO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqbehO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqbege4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqbehe4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AllergyProblemAct))->asSequence()->any(true).oclAsType(consol::AllergyProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqbegu4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2EAisBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqbeg-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7D0CQOzmEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummary">
      <ownedRule xmi:id="_F7KU8O1YEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryResponsibleParty" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_HLw1oO1iEeGT-eFu7Ghgjw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ke17gO1YEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;
cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Zuc5QO1YEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryLocation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_eM8kMO1gEeGT-eFu7Ghgjw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cyHekO1YEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | not &#xD;&#xD;
location.oclIsUndefined() and location.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_yi4xUO1aEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryMedicationList" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zMWlEO1aEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_GlWaEO1bEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryMedicationAllergy" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_IcWX8O1bEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VchCoO1bEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryVitalSigns" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_XSEPAO1bEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kNHwMO1bEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryReasonForOfficeVisit" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_miJt4O1bEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;
 self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;
 self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_CFE3YO1cEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryCarePlanning" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_DrZ8AO1cEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;
self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::InterventionsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqcFke4TEeGTcfO2HmU2Kw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqcFku4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = 'null')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqhlIO4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummarySocialHistorySection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqhlIe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqiMNe4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummaryProblemSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqizQO4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqnEsO4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummaryResultsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqnEse4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqo54O4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummaryPlanOfCareSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqo54e4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqpg9e4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummaryProceduresSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqqIAO4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqskRe4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummaryAssessmentAndPlanSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqtLUO4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fqtyYe4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummaryInstructionsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqtyYu4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_frDwoO4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_frDwoe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_frEXsO4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummarymu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_frEXse4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_frFl0O4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummarymu2consolAllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_frFl0e4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_frGM4O4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_frGz8O4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_frHbAO4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_frHbAe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_frIpIO4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummaryInstructionsSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_frIpIe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(templateId->exists(id : datatypes::II | id.root = 'null'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_frJQMO4TEeGTcfO2HmU2Kw" name="ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_frJQMe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.->reject(entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7D0pUOzmEeGT-eFu7Ghgjw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_fqiMMO4TEeGTcfO2HmU2Kw" name="getSocialHistorySection" isQuery="true" bodyCondition="_fqiMM-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqiMM-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqiMMO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqiMNO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqiMMe4TEeGTcfO2HmU2Kw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqiMMu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqjaUO4TEeGTcfO2HmU2Kw" name="getProblemSection" isQuery="true" bodyCondition="_fqjaU-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqjaU-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqjaUO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqjaVO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqjaUe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqjaUu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqlPgO4TEeGTcfO2HmU2Kw" name="getMedicationsSection" isQuery="true" bodyCondition="_fqlPg-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqlPg-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqlPgO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqlPhO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqlPge4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqlPgu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqlPhe4TEeGTcfO2HmU2Kw" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_fqlPiO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqlPiO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqlPhe4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqlPie4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqlPhu4TEeGTcfO2HmU2Kw" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqlPh-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fql2kO4TEeGTcfO2HmU2Kw" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_fql2k-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fql2k-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fql2kO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fql2lO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fql2ke4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fql2ku4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqmdoO4TEeGTcfO2HmU2Kw" name="getAllergiesSection" isQuery="true" bodyCondition="_fqmdo-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqmdo-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqmdoO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqmdpO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqmdoe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqmdou4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqmdpe4TEeGTcfO2HmU2Kw" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_fqmdqO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqmdqO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqmdpe4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqmdqe4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqmdpu4TEeGTcfO2HmU2Kw" type="_szTFwOF8EeGlJOFzBdwM6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqmdp-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqnrwO4TEeGTcfO2HmU2Kw" name="getResultsSection" isQuery="true" bodyCondition="_fqnrw-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqnrw-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqnrwO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqnrxO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqnrwe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqnrwu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqoS0O4TEeGTcfO2HmU2Kw" name="getVitalSignsSection" isQuery="true" bodyCondition="_fqoS0-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqoS0-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqoS0O4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqoS1O4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqoS0e4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqoS0u4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqoS1e4TEeGTcfO2HmU2Kw" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_fqoS2O4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqoS2O4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqoS1e4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqoS2e4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqoS1u4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqoS1-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqpg8O4TEeGTcfO2HmU2Kw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_fqpg8-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqpg8-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqpg8O4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqpg9O4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqpg8e4TEeGTcfO2HmU2Kw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqpg8u4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqqvEO4TEeGTcfO2HmU2Kw" name="getProceduresSection" isQuery="true" bodyCondition="_fqqvE-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqqvE-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqqvEO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqqvFO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqqvEe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqqvEu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqqvFe4TEeGTcfO2HmU2Kw" name="getImmunizationsSection" isQuery="true" bodyCondition="_fqqvGO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqqvGO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqqvFe4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqqvGe4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqqvFu4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqqvF-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqrWIO4TEeGTcfO2HmU2Kw" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_fqrWI-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqrWI-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqrWIO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqrWJO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(mu2consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqrWIe4TEeGTcfO2HmU2Kw" type="_3poqgODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqrWIu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqr9MO4TEeGTcfO2HmU2Kw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_fqr9M-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqr9M-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqr9MO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqr9NO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqr9Me4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqr9Mu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqr9Ne4TEeGTcfO2HmU2Kw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_fqr9OO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqr9OO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqr9Ne4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqr9Oe4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqr9Nu4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqr9N-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqskQO4TEeGTcfO2HmU2Kw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_fqskQ-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqskQ-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqskQO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqskRO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqskQe4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqskQu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fqtLUe4TEeGTcfO2HmU2Kw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_fqtLVO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqtLVO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqtLUe4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqtyYO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqtLUu4TEeGTcfO2HmU2Kw" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqtLU-4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fquZcO4TEeGTcfO2HmU2Kw" name="getInstructionsSection" isQuery="true" bodyCondition="_fquZc-4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fquZc-4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fquZcO4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fquZdO4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))->asSequence()->any(true).oclAsType(consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fquZce4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fquZcu4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fquZde4TEeGTcfO2HmU2Kw" name="getInterventionsSection" isQuery="true" bodyCondition="_fqvAgu4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqvAgu4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fquZde4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqvAg-4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection))->asSequence()->any(true).oclAsType(consol::InterventionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqvAgO4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_hqzJADVyEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqvAge4TEeGTcfO2HmU2Kw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9frdwO1UEeGT-eFu7Ghgjw" name="SocialHistorySection">
      <ownedComment xmi:id="_GBqF4O1VEeGT-eFu7Ghgjw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_fqkBYO4TEeGTcfO2HmU2Kw" name="mu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_9frdwO1UEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqkBYe4TEeGTcfO2HmU2Kw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-2YyAO1UEeGT-eFu7Ghgjw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_fqkoce4TEeGTcfO2HmU2Kw" name="getmu2consolSmokingStatusObservations" isQuery="true" bodyCondition="_fqkodO4TEeGTcfO2HmU2Kw">
        <ownedRule xmi:id="_fqkodO4TEeGTcfO2HmU2Kw" name="body" constrainedElement="_fqkoce4TEeGTcfO2HmU2Kw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqkode4TEeGTcfO2HmU2Kw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SmokingStatusObservation)).oclAsType(consol::SmokingStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fqkocu4TEeGTcfO2HmU2Kw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_RYJj0OWQEeGKmvzED_He2w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fqkoc-4TEeGTcfO2HmU2Kw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <profileApplication xmi:id="_mZtsIdd5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsItd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_mZtsI9d5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsJNd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_fpUEMO4TEeGTcfO2HmU2Kw">
      <eAnnotations xmi:id="_fpUEMe4TEeGTcfO2HmU2Kw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_mbrbANd5EeGtNLA6W-IQeQ" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" packageName="mu2consol" prefix="mu2consol" base_Namespace="_mZtsINd5EeGtNLA6W-IQeQ"/>
  <CDA:CDATemplate xmi:id="_Su_88NpWEeGzu8-aAsCS4g" base_Class="_VG3DUNkxEeGsqcJR8eqiMw" templateId="2.16.840.1.113883.11.11.11.1.1" assigningAuthorityName="TEMP"/>
  <CDA:ConstraintValidation xmi:id="_p6VEIN3EEeGdQcioKnmIhA" base_Constraint="_OxIpQN3EEeGdQcioKnmIhA">
    <ruleId>CONF:10055</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ywEDAN32EeGdQcioKnmIhA" base_Constraint="_n-eIsN32EeGdQcioKnmIhA"/>
  <CDA:ConstraintValidation xmi:id="_pMEu0N33EeGdQcioKnmIhA" base_Constraint="_kx5CgN33EeGdQcioKnmIhA"/>
  <CDA:ConstraintValidation xmi:id="_39anEOF3EeGlJOFzBdwM6w" base_Constraint="_j1rcwOF3EeGlJOFzBdwM6w"/>
  <CDA:CDATemplate xmi:id="_gWeuwOmKEeGNCuDrPdW6ZA" base_Class="_ZK4bUODlEeGdSJSga09Dyg"/>
  <CDA:ConstraintValidation xmi:id="_7vlYQOvXEeGkopdZmUN1Xw" base_Constraint="_gfm_8OvXEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_62L1oOvYEeGkopdZmUN1Xw" base_Constraint="_n8bhYOvYEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_rb7RoOvZEeGkopdZmUN1Xw" base_Constraint="_VUReAOvZEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_eegHAOvbEeGkopdZmUN1Xw" base_Constraint="_izlGUOvaEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_f8jZYOvbEeGkopdZmUN1Xw" base_Constraint="_2nwZAN3EEeGdQcioKnmIhA"/>
  <CDA:CDATemplate xmi:id="_PEUjwO1WEeGT-eFu7Ghgjw" base_Class="_7D0CQOzmEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_LX7foO1YEeGT-eFu7Ghgjw" base_Constraint="_F7KU8O1YEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_dNwRsO1YEeGT-eFu7Ghgjw" base_Constraint="_Zuc5QO1YEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_38GRsO1aEeGT-eFu7Ghgjw" base_Constraint="_yi4xUO1aEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_JCz7AO1bEeGT-eFu7Ghgjw" base_Constraint="_GlWaEO1bEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_XmnisO1bEeGT-eFu7Ghgjw" base_Constraint="_VchCoO1bEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_nFpcgO1bEeGT-eFu7Ghgjw" base_Constraint="_kNHwMO1bEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_EAFLgO1cEeGT-eFu7Ghgjw" base_Constraint="_CFE3YO1cEeGT-eFu7Ghgjw"/>
  <Ecore:EPackage xmi:id="_fpZjwO4TEeGTcfO2HmU2Kw" base_Package="_mZtsINd5EeGtNLA6W-IQeQ" packageName="mu2consol" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" basePackage="org.openhealthtools.mdht.uml.cda" prefix="mu2consol">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.mu2consol'</annotation>
  </Ecore:EPackage>
  <Ecore:EClass xmi:id="_fpj70O4TEeGTcfO2HmU2Kw" base_Class="_v-6qsNkMEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolGeneralHeaderConstraintsRecordTarget mu2consolGeneralHeaderConstraintsDocumentationOf GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode GeneralHeaderConstraintsRecordTargetPatientRolePatientName GeneralHeaderConstraintsRecordTargetPatientRolePatientAdministrativeGenderCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent' constraints.validation.query='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode GeneralHeaderConstraintsRecordTargetPatientRolePatientName GeneralHeaderConstraintsRecordTargetPatientRolePatientAdministrativeGenderCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTarget constraints.validation.error='RecordTargetPatientRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRole constraints.validation.error='PatientRolePatient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRolePatient constraints.validation.error='PatientName PatientAdministrativeGenderCode PatientEthnicGroupCode PatientRaceCode PatientBirthTime PatientLanguageCommunication'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication constraints.validation.error='LanguageCommunicationLanguageCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOf constraints.validation.error='DocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEvent constraints.validation.error='ServiceEventPerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEventPerformer1 constraints.validation.error='Performer1AssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsComponent1EncompassingEncounter constraints.validation.error='EncompassingEncounterEffectiveTime EncompassingEncounterLocation EncompassingEncounterResponsibleParty'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_fpm_IO4TEeGTcfO2HmU2Kw" base_Generalization="_VG3qYNkxEeGsqcJR8eqiMw"/>
  <CDA:ConformsTo xmi:id="_fpm_Ie4TEeGTcfO2HmU2Kw" base_Generalization="_v-6qsdkMEeGsqcJR8eqiMw"/>
  <Ecore:EClass xmi:id="_fpnmMO4TEeGTcfO2HmU2Kw" base_Class="_VG3DUNkxEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SummaryOfCareRecordTemplateId SummaryOfCareRecordCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection SummaryOfCareRecordMu2EncounterDiagnosesRequirements SummaryOfCareRecordCanHaveEitherRequiredOrOptionalVitalSigns SummaryOfCareRecordMedicationListConstraint SummaryOfCareRecordCarePlanning SummaryOfCareRecordMedicationAllergy SummaryOfCareRecordReasonForHospitalization SummaryOfCareRecordMedicationList SummaryOfCareRecordPlanOfCareSection SummaryOfCareRecordInstructionsSection SummaryOfCareRecordHospitalDischargeInstructionsSection SummaryOfCareRecordProblemSection SummaryOfCareRecordImmunizationsSection SummaryOfCareRecordMedicationsAdministeredSection SummaryOfCareRecordSocialHistorySection SummaryOfCareRecordResultsSection SummaryOfCareRecordProceduresSection SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication SummaryOfCareRecordmu2consolAllergiesSectionEntriesOptionalAllergyProblemAct SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity SummaryOfCareRecordInstructionsSectionTemplateId SummaryOfCareRecordmu2consolInstructionsSectionInstructions SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis' templateId.root='2.16.840.1.113883.11.11.11.1.1' constraints.validation.query='SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication SummaryOfCareRecordmu2consolAllergiesSectionEntriesOptionalAllergyProblemAct SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity SummaryOfCareRecordInstructionsSectionTemplateId SummaryOfCareRecordmu2consolInstructionsSectionInstructions SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_fqIjkO4TEeGTcfO2HmU2Kw" base_Class="_svnagODKEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPlanOfCareSectionCarePlanningForPlanOfCare'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_fqJxsO4TEeGTcfO2HmU2Kw" base_Class="_CaN5MODgEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAssessmentSectionProblemObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_fqLm4O4TEeGTcfO2HmU2Kw" base_Class="_g1AyQODhEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AssessmentAndPlanForConditionOrConcernProblemObservation'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_fqNcFe4TEeGTcfO2HmU2Kw" base_Generalization="_avPxEODlEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_fqODIu4TEeGTcfO2HmU2Kw" base_Class="_ZK4bUODlEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolInstructionsSectionTemplateId mu2consolInstructionsSectionInstructions' templateId.root='null'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_fqRGcO4TEeGTcfO2HmU2Kw" base_Class="_gl8CMODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_fqSUkO4TEeGTcfO2HmU2Kw" base_Class="_qgJokODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_fqUJwO4TEeGTcfO2HmU2Kw" base_Class="_y1mQkODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPostoperativeDiagnosisSectionProblemObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_fqVX4O4TEeGTcfO2HmU2Kw" base_Class="_uvXlkODnEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_fqXNEO4TEeGTcfO2HmU2Kw" base_Class="_bRRt0ODqEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_fqYbMO4TEeGTcfO2HmU2Kw" base_Class="_3poqgODqEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolMedicationsAdministeredSectionMedicationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_fqZpUO4TEeGTcfO2HmU2Kw" base_Class="_HBzuYODrEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_fqbegO4TEeGTcfO2HmU2Kw" base_Class="_szTFwOF8EeGlJOFzBdwM6w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAllergiesSectionEntriesOptionalAllergyProblemAct'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_fqcFkO4TEeGTcfO2HmU2Kw" base_Generalization="_7D0pUOzmEeGT-eFu7Ghgjw"/>
  <Ecore:EClass xmi:id="_fqcsoO4TEeGTcfO2HmU2Kw" base_Class="_7D0CQOzmEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ClinicalOfficeVisitSummaryTemplateId ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummaryMedicationList ClinicalOfficeVisitSummaryMedicationAllergy ClinicalOfficeVisitSummaryVitalSigns ClinicalOfficeVisitSummaryReasonForOfficeVisit ClinicalOfficeVisitSummaryCarePlanning ClinicalOfficeVisitSummarySocialHistorySection ClinicalOfficeVisitSummaryProblemSection ClinicalOfficeVisitSummaryResultsSection ClinicalOfficeVisitSummaryPlanOfCareSection ClinicalOfficeVisitSummaryProceduresSection ClinicalOfficeVisitSummaryAssessmentAndPlanSection ClinicalOfficeVisitSummaryInstructionsSection ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation ClinicalOfficeVisitSummarymu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication ClinicalOfficeVisitSummarymu2consolAllergiesSectionEntriesOptionalAllergyProblemAct ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity ClinicalOfficeVisitSummaryInstructionsSectionTemplateId ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions' templateId.root='null' constraints.validation.query='ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation ClinicalOfficeVisitSummarymu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication ClinicalOfficeVisitSummarymu2consolAllergiesSectionEntriesOptionalAllergyProblemAct ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity ClinicalOfficeVisitSummaryInstructionsSectionTemplateId ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_fqkocO4TEeGTcfO2HmU2Kw" base_Class="_9frdwO1UEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolSocialHistorySectionSmokingStatusObservation'</annotation>
  </Ecore:EClass>
</xmi:XMI>
