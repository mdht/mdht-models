<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_mZtsINd5EeGtNLA6W-IQeQ" name="mu2consol">
    <packageImport xmi:id="_mdYrMtd5EeGtNLA6W-IQeQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.mu2consol.model/model/mu2consol-vocab.uml#_mZ-K0Nd5EeGtNLA6W-IQeQ"/>
    </packageImport>
    <packageImport xmi:id="_HE5v4Ng-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packageImport xmi:id="_qktQYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_sCPlYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_v-6qsNkMEeGsqcJR8eqiMw" name="GeneralHeaderConstraints">
      <ownedComment xmi:id="_BHY70OMDEeGwErp-HM3_kQ">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_t-KqsPenEeG_npP0e3OOEw" name="mu2consolGeneralHeaderConstraintsRecordTarget" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-KqsfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.recordTarget->exists(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-TNkPenEeG_npP0e3OOEw" name="mu2consolGeneralHeaderConstraintsDocumentationOf" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-TNkfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAK10PenEeG_npP0e3OOEw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAK10fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined() and ethnicGroupCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = ethnicGroupCode.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.238' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAK10venEeG_npP0e3OOEw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAK10_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAK11PenEeG_npP0e3OOEw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAK11fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined() and raceCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = raceCode.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.238' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uALc4PenEeG_npP0e3OOEw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uALc4fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uALc4venEeG_npP0e3OOEw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uALc4_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(languageCommunication->one(languageCommunication : cda::LanguageCommunication | not languageCommunication.oclIsUndefined() and languageCommunication.oclIsKindOf(cda::LanguageCommunication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uALc5PenEeG_npP0e3OOEw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatient" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uALc5fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject(patient->one(patient : cda::Patient | not patient.oclIsUndefined() and patient.oclIsKindOf(cda::Patient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uALc5venEeG_npP0e3OOEw" name="GeneralHeaderConstraintsRecordTargetPatientRole" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uALc5_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null)->reject(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uANSEPenEeG_npP0e3OOEw" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uANSEfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAN5IPenEeG_npP0e3OOEw" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAN5IfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAN5IvenEeG_npP0e3OOEw" name="GeneralHeaderConstraintsDocumentationOfServiceEvent" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAN5I_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_v-6qsdkMEeGsqcJR8eqiMw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VG3DUNkxEeGsqcJR8eqiMw" name="SummaryOfCareRecord">
      <ownedComment xmi:id="_OaVzYNpiEeGzu8-aAsCS4g">
        <body>170.314(b)(1) (Incorporate summary of care record)</body>
      </ownedComment>
      <ownedRule xmi:id="_OxIpQN3EEeGdQcioKnmIhA" name="SummaryOfCareRecordCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_UQ6EoN3EEeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2nwZAN3EEeGdQcioKnmIhA" name="SummaryOfCareRecordMu2EncounterDiagnosesRequirements" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_K7mFoN3FEeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalDischargeDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PostoperativeDiagnosisSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PostprocedureDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n-eIsN32EeGdQcioKnmIhA" name="SummaryOfCareRecordCanHaveEitherRequiredOrOptionalVitalSigns" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbQu0N32EeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gfm_8OvXEeGkopdZmUN1Xw" name="SummaryOfCareRecordCarePlanning" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jopNcOvXEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::InterventionsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n8bhYOvYEeGkopdZmUN1Xw" name="SummaryOfCareRecordMedicationAllergy" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tP9QgOvYEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VUReAOvZEeGkopdZmUN1Xw" name="SummaryOfCareRecordReasonForHospitalization" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZBL0oOvZEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PreoperativeDiagnosisSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_izlGUOvaEeGkopdZmUN1Xw" name="SummaryOfCareRecordMedicationList" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYRiYOvaEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__TV_cO4zEeGT5oaF-4NGAA" name="SummaryOfCareRecordCanHaveEitherAllergyRequiredOrOptionalEntry" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_D7OJgO40EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-NG8fenEeG_npP0e3OOEw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-NG8venEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.11.11.11.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-YtIPenEeG_npP0e3OOEw" name="SummaryOfCareRecordPlanOfCareSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-YtIfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-aiUPenEeG_npP0e3OOEw" name="SummaryOfCareRecordInstructionsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-aiUfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::InstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-dloPenEeG_npP0e3OOEw" name="SummaryOfCareRecordProblemSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-dlofenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-hQAPenEeG_npP0e3OOEw" name="SummaryOfCareRecordImmunizationsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-hQAfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-ieIPenEeG_npP0e3OOEw" name="SummaryOfCareRecordMedicationsAdministeredSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-ieIfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-k6YPenEeG_npP0e3OOEw" name="SummaryOfCareRecordSocialHistorySection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-k6YfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-mIgPenEeG_npP0e3OOEw" name="SummaryOfCareRecordResultsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-mIgfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-n9tfenEeG_npP0e3OOEw" name="SummaryOfCareRecordProceduresSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-okwPenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAUm0PenEeG_npP0e3OOEw" name="SummaryOfCareRecordSocialHistorySectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAUm0fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAUm0venEeG_npP0e3OOEw" name="SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAUm0_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAV08PenEeG_npP0e3OOEw" name="SummaryOfCareRecordHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAV08fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAV08venEeG_npP0e3OOEw" name="SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAV08_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAXqIPenEeG_npP0e3OOEw" name="SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAXqIfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAXqIvenEeG_npP0e3OOEw" name="SummaryOfCareRecordPlanOfCareSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAXqI_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAY4QPenEeG_npP0e3OOEw" name="SummaryOfCareRecordMedicationsAdministeredSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAY4QfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.38'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAZfUPenEeG_npP0e3OOEw" name="SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAZfUfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAatcPenEeG_npP0e3OOEw" name="SummaryOfCareRecordAssessmentAndPlanSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAatcfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAssessmentAndPlanSection()->excluding(null)->reject(getAssessmentAndPlanSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAbUgPenEeG_npP0e3OOEw" name="SummaryOfCareRecordInstructionsSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAbUgfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getInstructionsSection()->excluding(null)->reject(getInstructionsSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.45'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAb7kPenEeG_npP0e3OOEw" name="SummaryOfCareRecordmu2consolInstructionsSectionInstructions" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAb7kfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getInstructionsSection()->excluding(null)->reject(getInstructionsSection().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAdJsPenEeG_npP0e3OOEw" name="SummaryOfCareRecordAssessmentSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAdJsfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAssessmentSection()->excluding(null)->reject(getAssessmentSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.8'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAdJsvenEeG_npP0e3OOEw" name="SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAdJs_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAssessmentSection()->excluding(null)->reject(getAssessmentSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAeX0PenEeG_npP0e3OOEw" name="SummaryOfCareRecordHospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAeX0fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAeX0venEeG_npP0e3OOEw" name="SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAeX0_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAfl8PenEeG_npP0e3OOEw" name="SummaryOfCareRecordHospitalDischargeDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAfl8fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalDischargeDiagnosisSection()->excluding(null)->reject(getHospitalDischargeDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.24'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAfl8venEeG_npP0e3OOEw" name="SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAfl8_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalDischargeDiagnosisSection()->excluding(null)->reject(getHospitalDischargeDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAg0EPenEeG_npP0e3OOEw" name="SummaryOfCareRecordPostoperativeDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAg0EfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPostoperativeDiagnosisSection()->excluding(null)->reject(getPostoperativeDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.35'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAhbIPenEeG_npP0e3OOEw" name="SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAhbIfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPostoperativeDiagnosisSection()->excluding(null)->reject(getPostoperativeDiagnosisSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAiCMPenEeG_npP0e3OOEw" name="SummaryOfCareRecordPostprocedureDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAiCMfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPostprocedureDiagnosisSection()->excluding(null)->reject(getPostprocedureDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.36'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAipQPenEeG_npP0e3OOEw" name="SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAipQfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPostprocedureDiagnosisSection()->excluding(null)->reject(getPostprocedureDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAj3YPenEeG_npP0e3OOEw" name="SummaryOfCareRecordPreoperativeDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAj3YfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPreoperativeDiagnosisSection()->excluding(null)->reject(getPreoperativeDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.34'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAj3YvenEeG_npP0e3OOEw" name="SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAj3Y_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPreoperativeDiagnosisSection()->excluding(null)->reject(getPreoperativeDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VG3qYNkxEeGsqcJR8eqiMw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_t-YGEPenEeG_npP0e3OOEw" name="getEncountersSection" isQuery="true" bodyCondition="_t-YGE_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-YGE_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-YGEPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-YGFPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection))->asSequence()->any(true).oclAsType(consol::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-YGEfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LWg0BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-YGEvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-ZUMPenEeG_npP0e3OOEw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_t-ZUM_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-ZUM_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-ZUMPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-ZUNPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-ZUMfenEeG_npP0e3OOEw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-ZUMvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-ZUNfenEeG_npP0e3OOEw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_t-Z7QvenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-Z7QvenEeG_npP0e3OOEw" name="body" constrainedElement="_t-ZUNfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-Z7Q_enEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-Z7QPenEeG_npP0e3OOEw" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-Z7QfenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-Z7RPenEeG_npP0e3OOEw" name="getInterventionsSection" isQuery="true" bodyCondition="_t-Z7R_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-Z7R_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-Z7RPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-Z7SPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection))->asSequence()->any(true).oclAsType(consol::InterventionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-Z7RfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_hqzJADVyEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-Z7RvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-bJYPenEeG_npP0e3OOEw" name="getInstructionsSection" isQuery="true" bodyCondition="_t-bJY_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-bJY_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-bJYPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-bJZPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::InstructionsSection))->asSequence()->any(true).oclAsType(mu2consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-bJYfenEeG_npP0e3OOEw" type="_ZK4bUODlEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-bJYvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-bwcPenEeG_npP0e3OOEw" name="getAssessmentSection" isQuery="true" bodyCondition="_t-bwc_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-bwc_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-bwcPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-bwdPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-bwcfenEeG_npP0e3OOEw" type="_CaN5MODgEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-bwcvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-bwdfenEeG_npP0e3OOEw" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_t-cXgvenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-cXgvenEeG_npP0e3OOEw" name="body" constrainedElement="_t-bwdfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-cXg_enEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-cXgPenEeG_npP0e3OOEw" type="_gl8CMODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-cXgfenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-cXhPenEeG_npP0e3OOEw" name="getHospitalDischargeDiagnosisSection" isQuery="true" bodyCondition="_t-cXh_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-cXh_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-cXhPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-cXiPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalDischargeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-cXhfenEeG_npP0e3OOEw" type="_qgJokODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-cXhvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-c-kPenEeG_npP0e3OOEw" name="getPostoperativeDiagnosisSection" isQuery="true" bodyCondition="_t-c-k_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-c-k_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-c-kPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-c-lPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PostoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PostoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-c-kfenEeG_npP0e3OOEw" type="_y1mQkODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-c-kvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-eMsPenEeG_npP0e3OOEw" name="getProblemSection" isQuery="true" bodyCondition="_t-eMs_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-eMs_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-eMsPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-eMtPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-eMsfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-eMsvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-ezwPenEeG_npP0e3OOEw" name="getAllergiesSection" isQuery="true" bodyCondition="_t-ezw_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-ezw_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-ezwPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-ezxPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-ezwfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-ezwvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-ezxfenEeG_npP0e3OOEw" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_t-ezyPenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-ezyPenEeG_npP0e3OOEw" name="body" constrainedElement="_t-ezxfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-ezyfenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-ezxvenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PQJcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-ezx_enEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-fa0PenEeG_npP0e3OOEw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_t-fa0_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-fa0_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-fa0PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-fa1PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-fa0fenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-fa0venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-gB4PenEeG_npP0e3OOEw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_t-gB4_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-gB4_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-gB4PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-gB5PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-gB4fenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-gB4venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-gB5fenEeG_npP0e3OOEw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_t-go8PenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-go8PenEeG_npP0e3OOEw" name="body" constrainedElement="_t-gB5fenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-go8fenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-gB5venEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-gB5_enEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-go8venEeG_npP0e3OOEw" name="getPreoperativeDiagnosisSection" isQuery="true" bodyCondition="_t-go9fenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-go9fenEeG_npP0e3OOEw" name="body" constrainedElement="_t-go8venEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-go9venEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PreoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-go8_enEeG_npP0e3OOEw" type="_bRRt0ODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-go9PenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-h3EPenEeG_npP0e3OOEw" name="getImmunizationsSection" isQuery="true" bodyCondition="_t-h3E_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-h3E_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-h3EPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-h3FPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-h3EfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-h3EvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-jFMPenEeG_npP0e3OOEw" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_t-jFM_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-jFM_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-jFMPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-jFNPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(mu2consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-jFMfenEeG_npP0e3OOEw" type="_3poqgODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-jFMvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-jsQPenEeG_npP0e3OOEw" name="getMedicationsSection" isQuery="true" bodyCondition="_t-jsQ_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-jsQ_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-jsQPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-jsRPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-jsQfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-jsQvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-jsRfenEeG_npP0e3OOEw" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_t-kTUPenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-kTUPenEeG_npP0e3OOEw" name="body" constrainedElement="_t-jsRfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-kTUfenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-jsRvenEeG_npP0e3OOEw" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-jsR_enEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-kTUvenEeG_npP0e3OOEw" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_t-kTVfenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-kTVfenEeG_npP0e3OOEw" name="body" constrainedElement="_t-kTUvenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-kTVvenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-kTU_enEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-kTVPenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-lhcPenEeG_npP0e3OOEw" name="getSocialHistorySection" isQuery="true" bodyCondition="_t-lhc_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-lhc_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-lhcPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-lhdPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-lhcfenEeG_npP0e3OOEw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-lhcvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-mvkPenEeG_npP0e3OOEw" name="getResultsSection" isQuery="true" bodyCondition="_t-mvk_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-mvk_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-mvkPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-mvlPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-mvkfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-mvkvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-nWoPenEeG_npP0e3OOEw" name="getVitalSignsSection" isQuery="true" bodyCondition="_t-nWo_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-nWo_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-nWoPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-nWpPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-nWofenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-nWovenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-n9sPenEeG_npP0e3OOEw" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_t-n9s_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-n9s_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-n9sPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-n9tPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-n9sfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-n9svenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-pL0PenEeG_npP0e3OOEw" name="getProceduresSection" isQuery="true" bodyCondition="_t-pL0_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-pL0_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-pL0PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-pL1PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-pL0fenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-pL0venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-py4PenEeG_npP0e3OOEw" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_t-py4_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-py4_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-py4PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-py5PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-py4fenEeG_npP0e3OOEw" type="_szTFwOF8EeGlJOFzBdwM6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-py4venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-py5fenEeG_npP0e3OOEw" name="getPostprocedureDiagnosisSection" isQuery="true" bodyCondition="_t-py6PenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-py6PenEeG_npP0e3OOEw" name="body" constrainedElement="_t-py5fenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-py6fenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PostprocedureDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PostprocedureDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-py5venEeG_npP0e3OOEw" type="_uvXlkODnEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-py5_enEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-qZ8PenEeG_npP0e3OOEw" name="getReasonForReferralSection" isQuery="true" bodyCondition="_t-qZ8_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-qZ8_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-qZ8PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-qZ9PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))->asSequence()->any(true).oclAsType(consol::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-qZ8fenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQFxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-qZ8venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ec-GAODeEeGdSJSga09Dyg" name="AssessmentAndPlanForCarePlanning">
      <ownedComment xmi:id="_XvBEkOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_VDXc8OJREeGzd4w2xo094w" name="AssessmentAndPlanForCarePlanningOneOfPlanOfCareEntry" constrainedElement="_Ec-GAODeEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uj1mgOJREeGzd4w2xo094w">
          <language>OCL</language>
          <body>self.getProcedures()->exists(p : cda::Procedure | p.oclIsKindOf(consol::PlanOfCareActivityProcedure)) or self.getSubstanceAdministrations()->exists(s : cda::SubstanceAdministration | s.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration)) or self.getSupplies()->exists(sp : cda::Supply | sp.oclIsKindOf(consol::PlanOfCareActivitySupply))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FkUIkODeEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_t-s2MPenEeG_npP0e3OOEw" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_t-s2M_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-s2M_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-s2MPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-s2NPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-s2MfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-s2MvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-s2NfenEeG_npP0e3OOEw" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_t-tdQvenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-tdQvenEeG_npP0e3OOEw" name="body" constrainedElement="_t-s2NfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-tdQ_enEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-tdQPenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-tdQfenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-uEUPenEeG_npP0e3OOEw" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_t-uEU_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-uEU_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-uEUPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-uEVPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-uEUfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-uEUvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_svnagODKEeGdSJSga09Dyg" name="PlanOfCareSection">
      <ownedComment xmi:id="_wajPYOFzEeGlJOFzBdwM6w">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_j1rcwOF3EeGlJOFzBdwM6w" name="mu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qaLEgOF3EeGlJOFzBdwM6w">
          <language>OCL</language>
          <body>self.getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or self.getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or self.getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-urYfenEeG_npP0e3OOEw" name="PlanOfCareSectionTemplateId" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-urYvenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vqugwODKEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_t-rBAPenEeG_npP0e3OOEw" name="getmu2consolPlanOfCareActivityAct" isQuery="true" bodyCondition="_t-rBA_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-rBA_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-rBAPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-rBBPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlanOfCareActivityAct))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-rBAfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWE5xSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-rBAvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-rBBfenEeG_npP0e3OOEw" name="getmu2consolPlanOfCareActivityEncounter" isQuery="true" bodyCondition="_t-roEvenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-roEvenEeG_npP0e3OOEw" name="body" constrainedElement="_t-rBBfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-roE_enEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityEncounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-roEPenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWFBBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-roEfenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-roFPenEeG_npP0e3OOEw" name="getmu2consolPlanOfCareActivityObservation" isQuery="true" bodyCondition="_t-sPIfenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-sPIfenEeG_npP0e3OOEw" name="body" constrainedElement="_t-roFPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-sPIvenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlanOfCareActivityObservation))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-roFfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NcLjhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-sPIPenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CaN5MODgEeGdSJSga09Dyg" name="AssessmentSection">
      <ownedComment xmi:id="_dY-WsOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_t-xHoPenEeG_npP0e3OOEw" name="AssessmentSectionTemplateId" constrainedElement="_CaN5MODgEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-xHofenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-yVwPenEeG_npP0e3OOEw" name="mu2consolAssessmentSectionProblemObservation" constrainedElement="_CaN5MODgEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-yVwfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D0JgkODgEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_W8pI4DszEeGvzMYhXuqAEA"/>
      </generalization>
      <ownedOperation xmi:id="_t-zj4PenEeG_npP0e3OOEw" name="getProblemObservation" isQuery="true" bodyCondition="_t-zj4_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-zj4_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-zj4PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-zj5PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-zj4fenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-zj4venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g1AyQODhEeGdSJSga09Dyg" name="AssessmentAndPlanForConditionOrConcern">
      <ownedComment xmi:id="_Zls5YOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_t-0K8PenEeG_npP0e3OOEw" name="AssessmentAndPlanForConditionOrConcernProblemObservation" constrainedElement="_g1AyQODhEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-0K8fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iIDHcODhEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_t-0yAfenEeG_npP0e3OOEw" name="getProblemObservation" isQuery="true" bodyCondition="_t-0yBPenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-0yBPenEeG_npP0e3OOEw" name="body" constrainedElement="_t-0yAfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-0yBfenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-0yAvenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-0yA_enEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_w2gYkODkEeGdSJSga09Dyg" name="AssessmentAndPlanSection">
      <ownedComment xmi:id="_b1SWYOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_t-1ZEfenEeG_npP0e3OOEw" name="AssessmentAndPlanSectionTemplateId" constrainedElement="_w2gYkODkEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-1ZEvenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ySywYODkEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_t-2nMPenEeG_npP0e3OOEw" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_t-3OQfenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-3OQfenEeG_npP0e3OOEw" name="body" constrainedElement="_t-2nMPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-3OQvenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-2nMfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-3OQPenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-3OQ_enEeG_npP0e3OOEw" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_t-3ORvenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-3ORvenEeG_npP0e3OOEw" name="body" constrainedElement="_t-3OQ_enEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-3OR_enEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-3ORPenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-3ORfenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-31UPenEeG_npP0e3OOEw" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_t-31U_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-31U_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-31UPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-31VPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-31UfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-31UvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-4cYPenEeG_npP0e3OOEw" name="getProblemObservation" isQuery="true" bodyCondition="_t-4cY_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-4cY_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-4cYPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-4cZPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-4cYfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-4cYvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZK4bUODlEeGdSJSga09Dyg" name="InstructionsSection">
      <ownedComment xmi:id="_nirKkOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_t-5DcPenEeG_npP0e3OOEw" name="InstructionsSectionTemplateId" constrainedElement="_ZK4bUODlEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-5DcfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-6RkPenEeG_npP0e3OOEw" name="mu2consolInstructionsSectionInstructions" constrainedElement="_ZK4bUODlEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-6RkfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_avPxEODlEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
      </generalization>
      <ownedOperation xmi:id="_t-7fsPenEeG_npP0e3OOEw" name="getmu2consolInstructionss" isQuery="true" bodyCondition="_t-7fs_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-7fs_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-7fsPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-7ftPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions)).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-7fsfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2G8h9RSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-7fsvenEeG_npP0e3OOEw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gl8CMODmEeGdSJSga09Dyg" name="HospitalAdmissionDiagnosisSection">
      <ownedComment xmi:id="_iSMIYOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_t-8GwPenEeG_npP0e3OOEw" name="HospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_gl8CMODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-8GwfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-9U4PenEeG_npP0e3OOEw" name="mu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_gl8CMODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-9U4fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jgg88ODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidQhSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_t-978PenEeG_npP0e3OOEw" name="getmu2consolHospitalAdmissionDiagnosis" isQuery="true" bodyCondition="_t-978_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t-978_enEeG_npP0e3OOEw" name="body" constrainedElement="_t-978PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-979PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-978fenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5K6mAEFHEeGorO80f-Cppg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-978venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qgJokODmEeGdSJSga09Dyg" name="HospitalDischargeDiagnosisSection">
      <ownedComment xmi:id="_k2eqEOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_t--jAfenEeG_npP0e3OOEw" name="HospitalDischargeDiagnosisSectionTemplateId" constrainedElement="_qgJokODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t--jAvenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.24')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-_xIPenEeG_npP0e3OOEw" name="mu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_qgJokODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-_xIfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rXMlUODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidURSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_t_A_QPenEeG_npP0e3OOEw" name="getmu2consolHospitalDischargeDiagnosis" isQuery="true" bodyCondition="_t_A_Q_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_A_Q_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_A_QPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_A_RPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalDischargeDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalDischargeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_A_QfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_KtwVgCULEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_A_QvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y1mQkODmEeGdSJSga09Dyg" name="PostoperativeDiagnosisSection">
      <ownedComment xmi:id="_q87D4OGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_t_A_RvenEeG_npP0e3OOEw" name="PostoperativeDiagnosisSectionTemplateId" constrainedElement="_y1mQkODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_BmUPenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.35')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_C0cPenEeG_npP0e3OOEw" name="mu2consolPostoperativeDiagnosisSectionProblemObservation" constrainedElement="_y1mQkODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_C0cfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zVobgODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_7UA-4DVyEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_t_DbgPenEeG_npP0e3OOEw" name="getProblemObservation" isQuery="true" bodyCondition="_t_Dbg_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_Dbg_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_DbgPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_DbhPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_DbgfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_DbgvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uvXlkODnEeGdSJSga09Dyg" name="PostprocedureDiagnosisSection">
      <ownedComment xmi:id="_sNALsOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_t_ECkfenEeG_npP0e3OOEw" name="PostprocedureDiagnosisSectionTemplateId" constrainedElement="_uvXlkODnEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_ECkvenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.36')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_FQsPenEeG_npP0e3OOEw" name="mu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_uvXlkODnEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_FQsfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vj29kODnEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_-jlSMDVyEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_t_F3wPenEeG_npP0e3OOEw" name="getmu2consolPostprocedureDiagnosis" isQuery="true" bodyCondition="_t_Ge0PenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_Ge0PenEeG_npP0e3OOEw" name="body" constrainedElement="_t_F3wPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_Ge0fenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PostprocedureDiagnosis))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_F3wfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_0fjXAEEvEeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_F3wvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bRRt0ODqEeGdSJSga09Dyg" name="PreoperativeDiagnosisSection">
      <ownedComment xmi:id="_thn1QOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_t_Ge0_enEeG_npP0e3OOEw" name="PreoperativeDiagnosisSectionTemplateId" constrainedElement="_bRRt0ODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_Ge1PenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.34')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_Hs8PenEeG_npP0e3OOEw" name="mu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_bRRt0ODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_IUAPenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_b5wDEODqEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Cu6qMDVzEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_t_I7EPenEeG_npP0e3OOEw" name="getmu2consolPreoperativeDiagnosis" isQuery="true" bodyCondition="_t_I7E_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_I7E_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_I7EPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_I7FPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PreoperativeDiagnosis))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_I7EfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_0baBYEEwEeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_I7EvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3poqgODqEeGdSJSga09Dyg" name="MedicationsAdministeredSection">
      <ownedComment xmi:id="_o4-PIOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_t_JiIfenEeG_npP0e3OOEw" name="MedicationsAdministeredSectionTemplateId" constrainedElement="_3poqgODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_JiIvenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_KwQPenEeG_npP0e3OOEw" name="mu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_3poqgODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_KwQfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4XEYQODqEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj_BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_t_LXUPenEeG_npP0e3OOEw" name="getmu2consolMedicationActivities" isQuery="true" bodyCondition="_t_LXU_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_LXU_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_LXUPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_L-YPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_LXUfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2GHbgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_LXUvenEeG_npP0e3OOEw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HBzuYODrEeGdSJSga09Dyg" name="HospitalAdmissionMedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_jlwCAOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_t_L-YvenEeG_npP0e3OOEw" name="HospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_HBzuYODrEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_L-Y_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_NMgPenEeG_npP0e3OOEw" name="mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_HBzuYODrEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_NMgfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Hm_fEODrEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj5BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_t_OaoPenEeG_npP0e3OOEw" name="getmu2consolAdmissionMedications" isQuery="true" bodyCondition="_t_Oao_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_Oao_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_OaoPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_OapPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AdmissionMedication)).oclAsType(consol::AdmissionMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_OaofenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_LNP08EFGEeGorO80f-Cppg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_OaovenEeG_npP0e3OOEw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_szTFwOF8EeGlJOFzBdwM6w" name="AllergiesSectionEntriesOptional">
      <ownedRule xmi:id="_t_OapvenEeG_npP0e3OOEw" name="AllergiesSectionEntriesOptionalTemplateId" constrainedElement="_szTFwOF8EeGlJOFzBdwM6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_PBsPenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_PowPenEeG_npP0e3OOEw" name="mu2consolAllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_szTFwOF8EeGlJOFzBdwM6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_QP0PenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ugMFYOF8EeGlJOFzBdwM6w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
      </generalization>
      <ownedOperation xmi:id="_t_Q24PenEeG_npP0e3OOEw" name="getmu2consolAllergyProblemAct" isQuery="true" bodyCondition="_t_Q24_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_Q24_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_Q24PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_Q25PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AllergyProblemAct))->asSequence()->any(true).oclAsType(consol::AllergyProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_Q24fenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2EAisBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_Q24venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7D0CQOzmEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummary">
      <ownedRule xmi:id="_F7KU8O1YEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryResponsibleParty" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_HLw1oO1iEeGT-eFu7Ghgjw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ke17gO1YEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;&#xA;cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Zuc5QO1YEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryLocation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_eM8kMO1gEeGT-eFu7Ghgjw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cyHekO1YEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | not &#xD;&#xD;&#xA;location.oclIsUndefined() and location.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_yi4xUO1aEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryMedicationList" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zMWlEO1aEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_GlWaEO1bEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryMedicationAllergy" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_IcWX8O1bEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VchCoO1bEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryVitalSigns" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_XSEPAO1bEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kNHwMO1bEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryReasonForOfficeVisit" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_miJt4O1bEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_CFE3YO1cEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryCarePlanning" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_DrZ8AO1cEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::InterventionsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_Rd8fenEeG_npP0e3OOEw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_Rd8venEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = 'null')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_W9gPenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummarySocialHistorySection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_W9gfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_YLoPenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummaryProblemSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_YLofenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_drMvenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummaryResultsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_drM_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_fgZfenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummaryPlanOfCareSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_fgZvenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_gugPenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummaryProceduresSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_gugfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_jx0_enEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummaryAssessmentAndPlanSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_jx1PenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_k_8PenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummaryInstructionsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_k_8fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::InstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAmToPenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummarySocialHistorySectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAmTofenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAmTovenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAmTo_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAm6sPenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummaryHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAnhwPenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAnhwfenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummarymu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAnhwvenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAov4PenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAov4fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uApW8PenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummaryPlanOfCareSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uApW8fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAp-APenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummaryMedicationsAdministeredSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAp-AfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.38'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAqlEPenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAqlEfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uArzMPenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummaryAssessmentAndPlanSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uArzMfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAssessmentAndPlanSection()->excluding(null)->reject(getAssessmentAndPlanSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAsaQPenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummaryInstructionsSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAtBUPenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getInstructionsSection()->excluding(null)->reject(getInstructionsSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.45'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAtBUfenEeG_npP0e3OOEw" name="ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAtBUvenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getInstructionsSection()->excluding(null)->reject(getInstructionsSection().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7D0pUOzmEeGT-eFu7Ghgjw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_t_XkkPenEeG_npP0e3OOEw" name="getSocialHistorySection" isQuery="true" bodyCondition="_t_Xkk_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_Xkk_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_XkkPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_XklPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_XkkfenEeG_npP0e3OOEw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_XkkvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_YysPenEeG_npP0e3OOEw" name="getProblemSection" isQuery="true" bodyCondition="_t_Yys_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_Yys_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_YysPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_YytPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_YysfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_YysvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_b2APenEeG_npP0e3OOEw" name="getMedicationsSection" isQuery="true" bodyCondition="_t_b2A_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_b2A_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_b2APenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_b2BPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_b2AfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_b2AvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_b2BfenEeG_npP0e3OOEw" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_t_b2CPenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_b2CPenEeG_npP0e3OOEw" name="body" constrainedElement="_t_b2BfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_b2CfenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_b2BvenEeG_npP0e3OOEw" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_b2B_enEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_cdEPenEeG_npP0e3OOEw" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_t_cdE_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_cdE_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_cdEPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_cdFPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_cdEfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_cdEvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_dEIPenEeG_npP0e3OOEw" name="getAllergiesSection" isQuery="true" bodyCondition="_t_dEI_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_dEI_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_dEIPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_dEJPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_dEIfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_dEIvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_dEJfenEeG_npP0e3OOEw" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_t_drMPenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_drMPenEeG_npP0e3OOEw" name="body" constrainedElement="_t_dEJfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_drMfenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_dEJvenEeG_npP0e3OOEw" type="_szTFwOF8EeGlJOFzBdwM6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_dEJ_enEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_eSQPenEeG_npP0e3OOEw" name="getResultsSection" isQuery="true" bodyCondition="_t_eSQ_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_eSQ_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_eSQPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_eSRPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_eSQfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_eSQvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_e5UPenEeG_npP0e3OOEw" name="getVitalSignsSection" isQuery="true" bodyCondition="_t_e5U_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_e5U_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_e5UPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_e5VPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_e5UfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_e5UvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_fgYPenEeG_npP0e3OOEw" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_t_fgY_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_fgY_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_fgYPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_fgZPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_fgYfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_fgYvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_gHcPenEeG_npP0e3OOEw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_t_gHc_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_gHc_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_gHcPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_gHdPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_gHcfenEeG_npP0e3OOEw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_gHcvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_hVkPenEeG_npP0e3OOEw" name="getProceduresSection" isQuery="true" bodyCondition="_t_hVk_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_hVk_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_hVkPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_hVlPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_hVkfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_hVkvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_h8oPenEeG_npP0e3OOEw" name="getImmunizationsSection" isQuery="true" bodyCondition="_t_h8o_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_h8o_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_h8oPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_h8pPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_h8ofenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_h8ovenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_h8pfenEeG_npP0e3OOEw" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_t_h8qPenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_h8qPenEeG_npP0e3OOEw" name="body" constrainedElement="_t_h8pfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_ijsPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(mu2consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_h8pvenEeG_npP0e3OOEw" type="_3poqgODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_h8p_enEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_ijsfenEeG_npP0e3OOEw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_t_ijtPenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_ijtPenEeG_npP0e3OOEw" name="body" constrainedElement="_t_ijsfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_ijtfenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_ijsvenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_ijs_enEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_jKwPenEeG_npP0e3OOEw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_t_jKw_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_jKw_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_jKwPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_jKxPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_jKwfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_jKwvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_jKxfenEeG_npP0e3OOEw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_t_jx0fenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_jx0fenEeG_npP0e3OOEw" name="body" constrainedElement="_t_jKxfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_jx0venEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_jKxvenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_jx0PenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_kY4PenEeG_npP0e3OOEw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_t_kY4_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_kY4_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_kY4PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_kY5PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_kY4fenEeG_npP0e3OOEw" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_kY4venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_lnAPenEeG_npP0e3OOEw" name="getInstructionsSection" isQuery="true" bodyCondition="_t_lnA_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_lnA_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_lnAPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_lnBPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::InstructionsSection))->asSequence()->any(true).oclAsType(mu2consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_lnAfenEeG_npP0e3OOEw" type="_ZK4bUODlEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_lnAvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_lnBfenEeG_npP0e3OOEw" name="getInterventionsSection" isQuery="true" bodyCondition="_t_lnCPenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_lnCPenEeG_npP0e3OOEw" name="body" constrainedElement="_t_lnBfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_mOEPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection))->asSequence()->any(true).oclAsType(consol::InterventionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_lnBvenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_hqzJADVyEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_lnB_enEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9frdwO1UEeGT-eFu7Ghgjw" name="SocialHistorySection">
      <ownedComment xmi:id="_GBqF4O1VEeGT-eFu7Ghgjw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_t_ZZwPenEeG_npP0e3OOEw" name="SocialHistorySectionTemplateId" constrainedElement="_9frdwO1UEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_ZZwfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_an4PenEeG_npP0e3OOEw" name="mu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_9frdwO1UEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_an4fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-2YyAO1UEeGT-eFu7Ghgjw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_t_bO8PenEeG_npP0e3OOEw" name="getmu2consolSmokingStatusObservations" isQuery="true" bodyCondition="_t_bO8_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_bO8_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_bO8PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_bO9PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SmokingStatusObservation)).oclAsType(consol::SmokingStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_bO8fenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_RYJj0OWQEeGKmvzED_He2w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_bO8venEeG_npP0e3OOEw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_C0_BkO4xEeGT5oaF-4NGAA" name="VDTInpatientPatientInfo">
      <ownedComment xmi:id="_JC7xkO4xEeGT5oaF-4NGAA">
        <body>Objective : 170.314(e)(1) (View, download, and transmit to 3rd party)  for EP</body>
      </ownedComment>
      <ownedRule xmi:id="_bnbyEO4yEeGT5oaF-4NGAA" name="VDTInpatientPatientInfoResponsibleParty" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <ownedComment xmi:id="_gMvwUO4yEeGT5oaF-4NGAA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hhmqcO4yEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;&#xA;cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_xGJ9cO4yEeGT5oaF-4NGAA" name="VDTInpatientPatientInfoMedicationList" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_0HuRAO4yEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or  &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)) or &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_F8DOQO4zEeGT5oaF-4NGAA" name="VDTInpatientPatientInfoCanHaveEitherVitalSignsRequiedOrOptionalEntry" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LMd_AO4zEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1NTjkO4zEeGT5oaF-4NGAA" name="VDTInpatientPatientInfoCanHaveEitherAllergyRequiredOrOptionalEntry" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_647CkO4zEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_oqUPenEeG_npP0e3OOEw" name="VDTInpatientPatientInfoSocialHistorySection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_oqUfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_p4cPenEeG_npP0e3OOEw" name="VDTInpatientPatientInfoProblemSection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_p4cfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_ti0PenEeG_npP0e3OOEw" name="VDTInpatientPatientInfoResultsSection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_ti0fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_v_EPenEeG_npP0e3OOEw" name="VDTInpatientPatientInfoPlanOfCareSection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_v_EfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_xNMPenEeG_npP0e3OOEw" name="VDTInpatientPatientInfoProceduresSection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_xNMfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAu2gPenEeG_npP0e3OOEw" name="VDTInpatientPatientInfoSocialHistorySectionTemplateId" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAu2gfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAzH8PenEeG_npP0e3OOEw" name="VDTInpatientPatientInfomu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAzH8fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA0WEPenEeG_npP0e3OOEw" name="VDTInpatientPatientInfoHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA0WEfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA0WEvenEeG_npP0e3OOEw" name="VDTInpatientPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA0WE_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA1kMPenEeG_npP0e3OOEw" name="VDTInpatientPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA1kMfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA1kMvenEeG_npP0e3OOEw" name="VDTInpatientPatientInfoPlanOfCareSectionTemplateId" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA1kM_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_C1DTAO4xEeGT5oaF-4NGAA" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_t_pRYPenEeG_npP0e3OOEw" name="getSocialHistorySection" isQuery="true" bodyCondition="_t_pRY_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_pRY_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_pRYPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_pRZPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_pRYfenEeG_npP0e3OOEw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_pRYvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_qfgPenEeG_npP0e3OOEw" name="getProblemSection" isQuery="true" bodyCondition="_t_rGkPenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_rGkPenEeG_npP0e3OOEw" name="body" constrainedElement="_t_qfgPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_rGkfenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_qfgfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_qfgvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_rGkvenEeG_npP0e3OOEw" name="getMedicationsSection" isQuery="true" bodyCondition="_t_rGlfenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_rGlfenEeG_npP0e3OOEw" name="body" constrainedElement="_t_rGkvenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_rGlvenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_rGk_enEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_rGlPenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_rtoPenEeG_npP0e3OOEw" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_t_rto_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_rto_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_rtoPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_rtpPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_rtofenEeG_npP0e3OOEw" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_rtovenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_sUsPenEeG_npP0e3OOEw" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_t_sUs_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_sUs_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_sUsPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_sUtPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_sUsfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_sUsvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_sUtfenEeG_npP0e3OOEw" name="getAllergiesSection" isQuery="true" bodyCondition="_t_s7wfenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_s7wfenEeG_npP0e3OOEw" name="body" constrainedElement="_t_sUtfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_s7wvenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_sUtvenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_s7wPenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_s7w_enEeG_npP0e3OOEw" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_t_s7xvenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_s7xvenEeG_npP0e3OOEw" name="body" constrainedElement="_t_s7w_enEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_s7x_enEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_s7xPenEeG_npP0e3OOEw" type="_szTFwOF8EeGlJOFzBdwM6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_s7xfenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_uJ4PenEeG_npP0e3OOEw" name="getResultsSection" isQuery="true" bodyCondition="_t_uw8PenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_uw8PenEeG_npP0e3OOEw" name="body" constrainedElement="_t_uJ4PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_uw8fenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_uJ4fenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_uJ4venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_uw8venEeG_npP0e3OOEw" name="getVitalSignsSection" isQuery="true" bodyCondition="_t_uw9fenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_uw9fenEeG_npP0e3OOEw" name="body" constrainedElement="_t_uw8venEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_uw9venEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_uw8_enEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_uw9PenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_vYAPenEeG_npP0e3OOEw" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_t_vYA_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_vYA_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_vYAPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_vYBPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_vYAfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_vYAvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_wmIPenEeG_npP0e3OOEw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_t_wmI_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_wmI_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_wmIPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_wmJPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_wmIfenEeG_npP0e3OOEw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_wmIvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_x0QPenEeG_npP0e3OOEw" name="getProceduresSection" isQuery="true" bodyCondition="_t_x0Q_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_x0Q_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_x0QPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_x0RPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_x0QfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_x0QvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_tzbWgO40EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfo">
      <ownedComment xmi:id="_eqorEO43EeGT5oaF-4NGAA">
        <body>Objective : 170.314(e)(1) (View, download, and transmit to 3rd party)  for EH/CAH</body>
      </ownedComment>
      <ownedRule xmi:id="_PI9EEO5yEeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoMedicationList" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_TcvNcO5yEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or  &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)) or &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lQwBoO5yEeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoMedicationAllergy" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_poy_8O5yEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nAedYO5zEeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoCanHaveEitherVitalSignsRequiedOrOptionalEntry" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_p0ljwO5zEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZlI4O50EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoCanHaveEitherAllergyRequiredOrOptionalEntry" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tDcP8O50EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_zZdW0O50EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoCanHaveEitherEncountersRequiredOrOptionalEntry" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2vamAO50EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_MDXPUO52EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoReasonForHospitalization" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_P2QSIO52EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionDiagnosisSection))) or&#xD;&#xA;(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_2FsPenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfoSocialHistorySection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_2FsfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_3T0PenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfoProblemSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_3T0fenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_6-MPenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfoResultsSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_6-MfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_8zZfenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfoPlanOfCareSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_8zZvenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_-BhPenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfoProceduresSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_-BhfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t__PpPenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfoHospitalDischargeInstructionsSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t__PpfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA2yUPenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfoSocialHistorySectionTemplateId" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA2yUfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA3ZYPenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfomu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA3ZYfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA4AcPenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfoHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA4AcfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA4AcvenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA4Ac_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA5OkPenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA5OkfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA51oPenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfoPlanOfCareSectionTemplateId" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA51ofenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA6csPenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfoHospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA6csfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA6csvenEeG_npP0e3OOEw" name="VDTAmbulatoryPatientInfomu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA6cs_enEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_tzb9kO40EeGT5oaF-4NGAA" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_t_2swPenEeG_npP0e3OOEw" name="getSocialHistorySection" isQuery="true" bodyCondition="_t_2sw_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_2sw_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_2swPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_2sxPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_2swfenEeG_npP0e3OOEw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_2swvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_364PenEeG_npP0e3OOEw" name="getProblemSection" isQuery="true" bodyCondition="_t_364_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_364_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_364PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_365PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_364fenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_364venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_4h8PenEeG_npP0e3OOEw" name="getMedicationsSection" isQuery="true" bodyCondition="_t_4h8_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_4h8_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_4h8PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_4h9PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_4h8fenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_4h8venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_5JAPenEeG_npP0e3OOEw" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_t_5JA_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_5JA_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_5JAPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_5JBPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_5JAfenEeG_npP0e3OOEw" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_5JAvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_5wEPenEeG_npP0e3OOEw" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_t_5wE_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_5wE_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_5wEPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_5wFPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_5wEfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_5wEvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_5wFfenEeG_npP0e3OOEw" name="getAllergiesSection" isQuery="true" bodyCondition="_t_6XIfenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_6XIfenEeG_npP0e3OOEw" name="body" constrainedElement="_t_5wFfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_6XIvenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_5wFvenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_6XIPenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_6XI_enEeG_npP0e3OOEw" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_t_6XJvenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_6XJvenEeG_npP0e3OOEw" name="body" constrainedElement="_t_6XI_enEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_6XJ_enEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_6XJPenEeG_npP0e3OOEw" type="_szTFwOF8EeGlJOFzBdwM6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_6XJfenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_7lQPenEeG_npP0e3OOEw" name="getResultsSection" isQuery="true" bodyCondition="_t_8MUPenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_8MUPenEeG_npP0e3OOEw" name="body" constrainedElement="_t_7lQPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_8MUfenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_7lQfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_7lQvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_8MUvenEeG_npP0e3OOEw" name="getVitalSignsSection" isQuery="true" bodyCondition="_t_8MVfenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_8MVfenEeG_npP0e3OOEw" name="body" constrainedElement="_t_8MUvenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_8MVvenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_8MU_enEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_8MVPenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_8zYPenEeG_npP0e3OOEw" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_t_8zY_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_8zY_enEeG_npP0e3OOEw" name="body" constrainedElement="_t_8zYPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_8zZPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_8zYfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_8zYvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_9acPenEeG_npP0e3OOEw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_t_-BgvenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t_-BgvenEeG_npP0e3OOEw" name="body" constrainedElement="_t_9acPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_-Bg_enEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_-BgPenEeG_npP0e3OOEw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_-BgfenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_-okPenEeG_npP0e3OOEw" name="getProceduresSection" isQuery="true" bodyCondition="_t__PovenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_t__PovenEeG_npP0e3OOEw" name="body" constrainedElement="_t_-okPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t__Po_enEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t__PoPenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t__PofenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uAAdwPenEeG_npP0e3OOEw" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_uAAdw_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_uAAdw_enEeG_npP0e3OOEw" name="body" constrainedElement="_uAAdwPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAAdxPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uAAdwfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uAAdwvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uAAdxfenEeG_npP0e3OOEw" name="getEncountersSection" isQuery="true" bodyCondition="_uAAdyPenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_uAAdyPenEeG_npP0e3OOEw" name="body" constrainedElement="_uAAdxfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAAdyfenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection))->asSequence()->any(true).oclAsType(consol::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uAAdxvenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LWg0BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uAAdx_enEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uABE0PenEeG_npP0e3OOEw" name="getEncountersSectionEntriesOptional" isQuery="true" bodyCondition="_uABE0_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_uABE0_enEeG_npP0e3OOEw" name="body" constrainedElement="_uABE0PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uABE1PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::EncountersSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uABE0fenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4yj2wBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uABE0venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uABE1fenEeG_npP0e3OOEw" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_uABr4venEeG_npP0e3OOEw">
        <ownedRule xmi:id="_uABr4venEeG_npP0e3OOEw" name="body" constrainedElement="_uABE1fenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uABr4_enEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uABr4PenEeG_npP0e3OOEw" type="_gl8CMODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uABr4fenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uABr5PenEeG_npP0e3OOEw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_uABr5_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_uABr5_enEeG_npP0e3OOEw" name="body" constrainedElement="_uABr5PenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uACS8PenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uABr5fenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uABr5venEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uACS8fenEeG_npP0e3OOEw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_uACS9PenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_uACS9PenEeG_npP0e3OOEw" name="body" constrainedElement="_uACS8fenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uACS9fenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uACS8venEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uACS8_enEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uAC6APenEeG_npP0e3OOEw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_uAC6A_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_uAC6A_enEeG_npP0e3OOEw" name="body" constrainedElement="_uAC6APenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAC6BPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uAC6AfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uAC6AvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UGcMgPabEeGi99B_x568TQ" name="TransitionOfCareAmbulatorySummary">
      <ownedRule xmi:id="_vSLf0PdxEeG_npP0e3OOEw" name="TransitionOfCareAmbulatorySummaryResponsibleParty" constrainedElement="_UGcMgPabEeGi99B_x568TQ">
        <ownedComment xmi:id="_BaqaQPeVEeG_npP0e3OOEw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_z3eP8PdxEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAEIIPenEeG_npP0e3OOEw" name="TransitionOfCareAmbulatorySummaryReasonForReferralSection" constrainedElement="_UGcMgPabEeGi99B_x568TQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAEIIfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WN-gwPabEeGi99B_x568TQ" general="_VG3DUNkxEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_uAEvMPenEeG_npP0e3OOEw" name="getmu2consolReasonForReferralSection" isQuery="true" bodyCondition="_uAEvM_enEeG_npP0e3OOEw">
        <ownedRule xmi:id="_uAEvM_enEeG_npP0e3OOEw" name="body" constrainedElement="_uAEvMPenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAEvNPenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))->asSequence()->any(true).oclAsType(consol::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uAEvMfenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQFxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uAEvMvenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uu2T0PdyEeG_npP0e3OOEw" name="TransitionOfCareInpatientSummary">
      <ownedRule xmi:id="_uAHLcPenEeG_npP0e3OOEw" name="TransitionOfCareInpatientSummaryHospitalDischargeInstructionsSection" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAHLcfenEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vutOUPdyEeG_npP0e3OOEw" general="_VG3DUNkxEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_uAHygfenEeG_npP0e3OOEw" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_uAIZkfenEeG_npP0e3OOEw">
        <ownedRule xmi:id="_uAIZkfenEeG_npP0e3OOEw" name="body" constrainedElement="_uAHygfenEeG_npP0e3OOEw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAIZkvenEeG_npP0e3OOEw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uAHygvenEeG_npP0e3OOEw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uAIZkPenEeG_npP0e3OOEw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <profileApplication xmi:id="_mZtsIdd5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsItd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_mZtsI9d5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsJNd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_t96zEPenEeG_npP0e3OOEw">
      <eAnnotations xmi:id="_t96zEfenEeG_npP0e3OOEw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_mbrbANd5EeGtNLA6W-IQeQ" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" packageName="mu2consol" prefix="mu2consol" base_Namespace="_mZtsINd5EeGtNLA6W-IQeQ"/>
  <CDA:CDATemplate xmi:id="_Su_88NpWEeGzu8-aAsCS4g" base_Class="_VG3DUNkxEeGsqcJR8eqiMw" templateId="2.16.840.1.113883.11.11.11.1.1" assigningAuthorityName="TEMP"/>
  <CDA:ConstraintValidation xmi:id="_p6VEIN3EEeGdQcioKnmIhA" base_Constraint="_OxIpQN3EEeGdQcioKnmIhA">
    <ruleId>CONF:10055</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ywEDAN32EeGdQcioKnmIhA" base_Constraint="_n-eIsN32EeGdQcioKnmIhA"/>
  <CDA:ConstraintValidation xmi:id="_39anEOF3EeGlJOFzBdwM6w" base_Constraint="_j1rcwOF3EeGlJOFzBdwM6w"/>
  <CDA:CDATemplate xmi:id="_gWeuwOmKEeGNCuDrPdW6ZA" base_Class="_ZK4bUODlEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.45"/>
  <CDA:ConstraintValidation xmi:id="_7vlYQOvXEeGkopdZmUN1Xw" base_Constraint="_gfm_8OvXEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_62L1oOvYEeGkopdZmUN1Xw" base_Constraint="_n8bhYOvYEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_rb7RoOvZEeGkopdZmUN1Xw" base_Constraint="_VUReAOvZEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_eegHAOvbEeGkopdZmUN1Xw" base_Constraint="_izlGUOvaEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_f8jZYOvbEeGkopdZmUN1Xw" base_Constraint="_2nwZAN3EEeGdQcioKnmIhA"/>
  <CDA:CDATemplate xmi:id="_PEUjwO1WEeGT-eFu7Ghgjw" base_Class="_7D0CQOzmEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_LX7foO1YEeGT-eFu7Ghgjw" base_Constraint="_F7KU8O1YEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_dNwRsO1YEeGT-eFu7Ghgjw" base_Constraint="_Zuc5QO1YEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_38GRsO1aEeGT-eFu7Ghgjw" base_Constraint="_yi4xUO1aEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_JCz7AO1bEeGT-eFu7Ghgjw" base_Constraint="_GlWaEO1bEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_XmnisO1bEeGT-eFu7Ghgjw" base_Constraint="_VchCoO1bEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_nFpcgO1bEeGT-eFu7Ghgjw" base_Constraint="_kNHwMO1bEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_EAFLgO1cEeGT-eFu7Ghgjw" base_Constraint="_CFE3YO1cEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_OB8-YO4zEeGT5oaF-4NGAA" base_Constraint="_xGJ9cO4yEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_Zv0TsO4zEeGT5oaF-4NGAA" base_Constraint="_F8DOQO4zEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_apqs0O4zEeGT5oaF-4NGAA" base_Constraint="_bnbyEO4yEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_7w4lUO4zEeGT5oaF-4NGAA" base_Constraint="_1NTjkO4zEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_VvkywO5yEeGT5oaF-4NGAA" base_Constraint="_PI9EEO5yEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_r7whEO5yEeGT5oaF-4NGAA" base_Constraint="_lQwBoO5yEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_ru4GMO5zEeGT5oaF-4NGAA" base_Constraint="_nAedYO5zEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_vC6NUO50EeGT5oaF-4NGAA" base_Constraint="_oZlI4O50EeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_9cqhIO50EeGT5oaF-4NGAA" base_Constraint="_zZdW0O50EeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_RxnyoO52EeGT5oaF-4NGAA" base_Constraint="_MDXPUO52EeGT5oaF-4NGAA"/>
  <CDA:CDATemplate xmi:id="_CDXuIPK1EeGFZOE6tRcvzg" base_Class="_szTFwOF8EeGlJOFzBdwM6w" templateId="2.16.840.1.113883.10.20.22.2.6"/>
  <CDA:CDATemplate xmi:id="_TQUy0PM4EeGkZPcEpuFP6w" base_Class="_w2gYkODkEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.9"/>
  <CDA:CDATemplate xmi:id="_hwU4kPM4EeGkZPcEpuFP6w" base_Class="_CaN5MODgEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.8"/>
  <CDA:CDATemplate xmi:id="_tqLbcPM4EeGkZPcEpuFP6w" base_Class="_gl8CMODmEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.43"/>
  <CDA:CDATemplate xmi:id="_zgZn8PM4EeGkZPcEpuFP6w" base_Class="_HBzuYODrEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.44"/>
  <CDA:CDATemplate xmi:id="_6V0noPM4EeGkZPcEpuFP6w" base_Class="_qgJokODmEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.24"/>
  <CDA:CDATemplate xmi:id="_FuXNMPM5EeGkZPcEpuFP6w" base_Class="_3poqgODqEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.38"/>
  <CDA:CDATemplate xmi:id="_JM8z8PM5EeGkZPcEpuFP6w" base_Class="_svnagODKEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.10"/>
  <CDA:CDATemplate xmi:id="_L1otcPM5EeGkZPcEpuFP6w" base_Class="_y1mQkODmEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.35"/>
  <CDA:CDATemplate xmi:id="_OdNzsPM5EeGkZPcEpuFP6w" base_Class="_uvXlkODnEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.36"/>
  <CDA:CDATemplate xmi:id="_QwCx8PM5EeGkZPcEpuFP6w" base_Class="_bRRt0ODqEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.34"/>
  <CDA:CDATemplate xmi:id="_TC_sAPM5EeGkZPcEpuFP6w" base_Class="_9frdwO1UEeGT-eFu7Ghgjw" templateId="2.16.840.1.113883.10.20.22.2.17"/>
  <CDA:ConstraintValidation xmi:id="_0YItAPdxEeG_npP0e3OOEw" base_Constraint="_vSLf0PdxEeG_npP0e3OOEw"/>
  <Ecore:EPackage xmi:id="_t9_rkPenEeG_npP0e3OOEw" base_Package="_mZtsINd5EeGtNLA6W-IQeQ" packageName="mu2consol" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" basePackage="org.openhealthtools.mdht.uml.cda" prefix="mu2consol">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.mu2consol'</annotation>
  </Ecore:EPackage>
  <Ecore:EClass xmi:id="_t-LRwPenEeG_npP0e3OOEw" base_Class="_v-6qsNkMEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolGeneralHeaderConstraintsRecordTarget mu2consolGeneralHeaderConstraintsDocumentationOf GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent' constraints.validation.query='GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTarget constraints.validation.error='RecordTargetPatientRole RecordTargetPatientRolePatientEthnicGroupCode RecordTargetPatientRolePatientEthnicGroupCodeP RecordTargetPatientRolePatientRaceCode RecordTargetPatientRolePatientRaceCodeP RecordTargetPatientRolePatientLanguageCommunication RecordTargetPatientRolePatient' constraints.validation.query='RecordTargetPatientRolePatientEthnicGroupCode RecordTargetPatientRolePatientEthnicGroupCodeP RecordTargetPatientRolePatientRaceCode RecordTargetPatientRolePatientRaceCodeP RecordTargetPatientRolePatientLanguageCommunication RecordTargetPatientRolePatient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRole constraints.validation.error='PatientRolePatient PatientRolePatientEthnicGroupCode PatientRolePatientEthnicGroupCodeP PatientRolePatientRaceCode PatientRolePatientRaceCodeP PatientRolePatientLanguageCommunication' constraints.validation.query='PatientRolePatientEthnicGroupCode PatientRolePatientEthnicGroupCodeP PatientRolePatientRaceCode PatientRolePatientRaceCodeP PatientRolePatientLanguageCommunication'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRolePatient ethnicGroupCode.codeSystem='2.16.840.1.113883.6.238' ethnicGroupCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.error='PatientEthnicGroupCode PatientEthnicGroupCodeP PatientRaceCode PatientRaceCodeP PatientLanguageCommunication' raceCode.codeSystem='2.16.840.1.113883.6.238' raceCode.codeSystemName='Race and Ethnicity - CDC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOf constraints.validation.error='DocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEvent constraints.validation.error='ServiceEventPerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEventPerformer1 constraints.validation.error='Performer1AssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsComponent1EncompassingEncounter constraints.validation.error='EncompassingEncounterEffectiveTime EncompassingEncounterLocation EncompassingEncounterResponsibleParty'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t-Mf4fenEeG_npP0e3OOEw" base_Generalization="_VG3qYNkxEeGsqcJR8eqiMw"/>
  <CDA:ConformsTo xmi:id="_t-NG8PenEeG_npP0e3OOEw" base_Generalization="_v-6qsdkMEeGsqcJR8eqiMw"/>
  <Ecore:EClass xmi:id="_t-NuAPenEeG_npP0e3OOEw" base_Class="_VG3DUNkxEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SummaryOfCareRecordTemplateId SummaryOfCareRecordCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection SummaryOfCareRecordMu2EncounterDiagnosesRequirements SummaryOfCareRecordCanHaveEitherRequiredOrOptionalVitalSigns SummaryOfCareRecordCarePlanning SummaryOfCareRecordMedicationAllergy SummaryOfCareRecordReasonForHospitalization SummaryOfCareRecordMedicationList SummaryOfCareRecordPlanOfCareSection SummaryOfCareRecordInstructionsSection SummaryOfCareRecordProblemSection SummaryOfCareRecordImmunizationsSection SummaryOfCareRecordMedicationsAdministeredSection SummaryOfCareRecordSocialHistorySection SummaryOfCareRecordResultsSection SummaryOfCareRecordProceduresSection SummaryOfCareRecordSocialHistorySectionTemplateId SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation SummaryOfCareRecordHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare SummaryOfCareRecordPlanOfCareSectionTemplateId SummaryOfCareRecordMedicationsAdministeredSectionTemplateId SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity SummaryOfCareRecordAssessmentAndPlanSectionTemplateId SummaryOfCareRecordInstructionsSectionTemplateId SummaryOfCareRecordmu2consolInstructionsSectionInstructions SummaryOfCareRecordAssessmentSectionTemplateId SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation SummaryOfCareRecordHospitalAdmissionDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis SummaryOfCareRecordHospitalDischargeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis SummaryOfCareRecordPostoperativeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation SummaryOfCareRecordPostprocedureDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis SummaryOfCareRecordPreoperativeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis' templateId.root='2.16.840.1.113883.11.11.11.1.1' constraints.validation.query='SummaryOfCareRecordSocialHistorySectionTemplateId SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation SummaryOfCareRecordHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare SummaryOfCareRecordPlanOfCareSectionTemplateId SummaryOfCareRecordMedicationsAdministeredSectionTemplateId SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity SummaryOfCareRecordAssessmentAndPlanSectionTemplateId SummaryOfCareRecordInstructionsSectionTemplateId SummaryOfCareRecordmu2consolInstructionsSectionInstructions SummaryOfCareRecordAssessmentSectionTemplateId SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation SummaryOfCareRecordHospitalAdmissionDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis SummaryOfCareRecordHospitalDischargeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis SummaryOfCareRecordPostoperativeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation SummaryOfCareRecordPostprocedureDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis SummaryOfCareRecordPreoperativeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t-urYPenEeG_npP0e3OOEw" base_Generalization="_vqugwODKEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_t-vScPenEeG_npP0e3OOEw" base_Class="_svnagODKEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPlanOfCareSectionTemplateId mu2consolPlanOfCareSectionCarePlanningForPlanOfCare' templateId.root='2.16.840.1.113883.10.20.22.2.10'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t-wgkPenEeG_npP0e3OOEw" base_Generalization="_D0JgkODgEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_t-xusPenEeG_npP0e3OOEw" base_Class="_CaN5MODgEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAssessmentSectionTemplateId mu2consolAssessmentSectionProblemObservation' templateId.root='2.16.840.1.113883.10.20.22.2.8'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t-0yAPenEeG_npP0e3OOEw" base_Class="_g1AyQODhEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AssessmentAndPlanForConditionOrConcernProblemObservation'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t-1ZEPenEeG_npP0e3OOEw" base_Generalization="_ySywYODkEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_t-2AIPenEeG_npP0e3OOEw" base_Class="_w2gYkODkEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAssessmentAndPlanSectionTemplateId' templateId.root='2.16.840.1.113883.10.20.22.2.9'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t-4cZfenEeG_npP0e3OOEw" base_Generalization="_avPxEODlEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_t-5qgPenEeG_npP0e3OOEw" base_Class="_ZK4bUODlEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolInstructionsSectionTemplateId mu2consolInstructionsSectionInstructions' templateId.root='2.16.840.1.113883.10.20.22.2.45'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t-7ftfenEeG_npP0e3OOEw" base_Generalization="_jgg88ODmEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_t-8GwvenEeG_npP0e3OOEw" base_Class="_gl8CMODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalAdmissionDiagnosisSectionTemplateId mu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.43'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t--jAPenEeG_npP0e3OOEw" base_Generalization="_rXMlUODmEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_t-_KEPenEeG_npP0e3OOEw" base_Class="_qgJokODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalDischargeDiagnosisSectionTemplateId mu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.24'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t_A_RfenEeG_npP0e3OOEw" base_Generalization="_zVobgODmEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_t_BmUfenEeG_npP0e3OOEw" base_Class="_y1mQkODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPostoperativeDiagnosisSectionTemplateId mu2consolPostoperativeDiagnosisSectionProblemObservation' templateId.root='2.16.840.1.113883.10.20.22.2.35'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t_ECkPenEeG_npP0e3OOEw" base_Generalization="_vj29kODnEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_t_EpoPenEeG_npP0e3OOEw" base_Class="_uvXlkODnEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPostprocedureDiagnosisSectionTemplateId mu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.36'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t_Ge0venEeG_npP0e3OOEw" base_Generalization="_b5wDEODqEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_t_HF4PenEeG_npP0e3OOEw" base_Class="_bRRt0ODqEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPreoperativeDiagnosisSectionTemplateId mu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.34'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t_JiIPenEeG_npP0e3OOEw" base_Generalization="_4XEYQODqEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_t_KJMPenEeG_npP0e3OOEw" base_Class="_3poqgODqEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolMedicationsAdministeredSectionTemplateId mu2consolMedicationsAdministeredSectionMedicationActivity' templateId.root='2.16.840.1.113883.10.20.22.2.38'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t_L-YfenEeG_npP0e3OOEw" base_Generalization="_Hm_fEODrEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_t_MlcPenEeG_npP0e3OOEw" base_Class="_HBzuYODrEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication' templateId.root='2.16.840.1.113883.10.20.22.2.44'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t_OapfenEeG_npP0e3OOEw" base_Generalization="_ugMFYOF8EeGlJOFzBdwM6w"/>
  <Ecore:EClass xmi:id="_t_PBsfenEeG_npP0e3OOEw" base_Class="_szTFwOF8EeGlJOFzBdwM6w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAllergiesSectionEntriesOptionalTemplateId mu2consolAllergiesSectionEntriesOptionalAllergyProblemAct' templateId.root='2.16.840.1.113883.10.20.22.2.6'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t_Rd8PenEeG_npP0e3OOEw" base_Generalization="_7D0pUOzmEeGT-eFu7Ghgjw"/>
  <Ecore:EClass xmi:id="_t_SFAPenEeG_npP0e3OOEw" base_Class="_7D0CQOzmEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ClinicalOfficeVisitSummaryTemplateId ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummaryMedicationList ClinicalOfficeVisitSummaryMedicationAllergy ClinicalOfficeVisitSummaryVitalSigns ClinicalOfficeVisitSummaryReasonForOfficeVisit ClinicalOfficeVisitSummaryCarePlanning ClinicalOfficeVisitSummarySocialHistorySection ClinicalOfficeVisitSummaryProblemSection ClinicalOfficeVisitSummaryResultsSection ClinicalOfficeVisitSummaryPlanOfCareSection ClinicalOfficeVisitSummaryProceduresSection ClinicalOfficeVisitSummaryAssessmentAndPlanSection ClinicalOfficeVisitSummaryInstructionsSection ClinicalOfficeVisitSummarySocialHistorySectionTemplateId ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation ClinicalOfficeVisitSummaryHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId ClinicalOfficeVisitSummarymu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ClinicalOfficeVisitSummaryPlanOfCareSectionTemplateId ClinicalOfficeVisitSummaryMedicationsAdministeredSectionTemplateId ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity ClinicalOfficeVisitSummaryAssessmentAndPlanSectionTemplateId ClinicalOfficeVisitSummaryInstructionsSectionTemplateId ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions' templateId.root='null' constraints.validation.query='ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummarySocialHistorySectionTemplateId ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation ClinicalOfficeVisitSummaryHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId ClinicalOfficeVisitSummarymu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ClinicalOfficeVisitSummaryPlanOfCareSectionTemplateId ClinicalOfficeVisitSummaryMedicationsAdministeredSectionTemplateId ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity ClinicalOfficeVisitSummaryAssessmentAndPlanSectionTemplateId ClinicalOfficeVisitSummaryInstructionsSectionTemplateId ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t_YytfenEeG_npP0e3OOEw" base_Generalization="_-2YyAO1UEeGT-eFu7Ghgjw"/>
  <Ecore:EClass xmi:id="_t_ZZwvenEeG_npP0e3OOEw" base_Class="_9frdwO1UEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolSocialHistorySectionTemplateId mu2consolSocialHistorySectionSmokingStatusObservation' templateId.root='2.16.840.1.113883.10.20.22.2.17'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t_mOEfenEeG_npP0e3OOEw" base_Class="_C0_BkO4xEeGT5oaF-4NGAA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='VDTInpatientPatientInfoResponsibleParty VDTInpatientPatientInfoSocialHistorySectionTemplateId VDTInpatientPatientInfomu2consolSocialHistorySectionSmokingStatusObservation VDTInpatientPatientInfoHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId VDTInpatientPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication VDTInpatientPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare VDTInpatientPatientInfoPlanOfCareSectionTemplateId' constraints.validation.error='VDTInpatientPatientInfoResponsibleParty VDTInpatientPatientInfoMedicationList VDTInpatientPatientInfoCanHaveEitherVitalSignsRequiedOrOptionalEntry VDTInpatientPatientInfoCanHaveEitherAllergyRequiredOrOptionalEntry VDTInpatientPatientInfoSocialHistorySection VDTInpatientPatientInfoProblemSection VDTInpatientPatientInfoResultsSection VDTInpatientPatientInfoPlanOfCareSection VDTInpatientPatientInfoProceduresSection VDTInpatientPatientInfoSocialHistorySectionTemplateId VDTInpatientPatientInfomu2consolSocialHistorySectionSmokingStatusObservation VDTInpatientPatientInfoHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId VDTInpatientPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication VDTInpatientPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare VDTInpatientPatientInfoPlanOfCareSectionTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t_ybUPenEeG_npP0e3OOEw" base_Class="_tzbWgO40EeGT5oaF-4NGAA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VDTAmbulatoryPatientInfoMedicationList VDTAmbulatoryPatientInfoMedicationAllergy VDTAmbulatoryPatientInfoCanHaveEitherVitalSignsRequiedOrOptionalEntry VDTAmbulatoryPatientInfoCanHaveEitherAllergyRequiredOrOptionalEntry VDTAmbulatoryPatientInfoCanHaveEitherEncountersRequiredOrOptionalEntry VDTAmbulatoryPatientInfoReasonForHospitalization VDTAmbulatoryPatientInfoSocialHistorySection VDTAmbulatoryPatientInfoProblemSection VDTAmbulatoryPatientInfoResultsSection VDTAmbulatoryPatientInfoPlanOfCareSection VDTAmbulatoryPatientInfoProceduresSection VDTAmbulatoryPatientInfoHospitalDischargeInstructionsSection VDTAmbulatoryPatientInfoSocialHistorySectionTemplateId VDTAmbulatoryPatientInfomu2consolSocialHistorySectionSmokingStatusObservation VDTAmbulatoryPatientInfoHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId VDTAmbulatoryPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication VDTAmbulatoryPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare VDTAmbulatoryPatientInfoPlanOfCareSectionTemplateId VDTAmbulatoryPatientInfoHospitalAdmissionDiagnosisSectionTemplateId VDTAmbulatoryPatientInfomu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis' constraints.validation.query='VDTAmbulatoryPatientInfoSocialHistorySectionTemplateId VDTAmbulatoryPatientInfomu2consolSocialHistorySectionSmokingStatusObservation VDTAmbulatoryPatientInfoHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId VDTAmbulatoryPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication VDTAmbulatoryPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare VDTAmbulatoryPatientInfoPlanOfCareSectionTemplateId VDTAmbulatoryPatientInfoHospitalAdmissionDiagnosisSectionTemplateId VDTAmbulatoryPatientInfomu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uADhEPenEeG_npP0e3OOEw" base_Class="_UGcMgPabEeGi99B_x568TQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='TransitionOfCareAmbulatorySummaryResponsibleParty' constraints.validation.error='TransitionOfCareAmbulatorySummaryResponsibleParty TransitionOfCareAmbulatorySummaryReasonForReferralSection'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uAHygPenEeG_npP0e3OOEw" base_Class="_uu2T0PdyEeG_npP0e3OOEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransitionOfCareInpatientSummaryHospitalDischargeInstructionsSection'</annotation>
  </Ecore:EClass>
</xmi:XMI>
