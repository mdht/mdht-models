<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_mZtsINd5EeGtNLA6W-IQeQ" name="mu2consol">
    <packageImport xmi:id="_mdYrMtd5EeGtNLA6W-IQeQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.mu2consol.model/model/mu2consol-vocab.uml#_mZ-K0Nd5EeGtNLA6W-IQeQ"/>
    </packageImport>
    <packageImport xmi:id="_HE5v4Ng-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packageImport xmi:id="_qktQYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_sCPlYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_v-6qsNkMEeGsqcJR8eqiMw" name="GeneralHeaderConstraints">
      <ownedComment xmi:id="_BHY70OMDEeGwErp-HM3_kQ">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_-e_-sPh2EeGPm7sA61ixGw" name="mu2consolGeneralHeaderConstraintsRecordTarget" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-e_-sfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.recordTarget->exists(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fHTcPh2EeGPm7sA61ixGw" name="mu2consolGeneralHeaderConstraintsDocumentationOf" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fHTcfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(consol::GeneralHeaderConstraints::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hnN0Ph2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hnN0fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined() and ethnicGroupCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = ethnicGroupCode.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.238' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hnN0vh2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hn04Ph2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hn04fh2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hn04vh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined() and raceCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = raceCode.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.238' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hn04_h2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hn05Ph2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hob8Ph2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hob8fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(languageCommunication->one(languageCommunication : cda::LanguageCommunication | not languageCommunication.oclIsUndefined() and languageCommunication.oclIsKindOf(cda::LanguageCommunication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hob8vh2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatient" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hob8_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject(patient->one(patient : cda::Patient | not patient.oclIsUndefined() and patient.oclIsKindOf(cda::Patient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hob9Ph2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsRecordTargetPatientRole" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hob9fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null)->reject(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hstYPh2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hstYfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(rim::Entity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hstYvh2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hstY_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-htUcPh2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-htUcfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->one(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-htUcvh2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsDocumentationOfServiceEvent" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-htUc_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hvJoPh2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsComponent1EncompassingEncounterEncounterParticipant" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hvJofh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->exists(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hvJovh2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsComponent1EncompassingEncounter" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hvJo_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_v-6qsdkMEeGsqcJR8eqiMw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VG3DUNkxEeGsqcJR8eqiMw" name="SummaryOfCareRecord">
      <ownedComment xmi:id="_OaVzYNpiEeGzu8-aAsCS4g">
        <body>Summary Of Care Record</body>
      </ownedComment>
      <ownedRule xmi:id="_2nwZAN3EEeGdQcioKnmIhA" name="SummaryOfCareRecordMu2EncounterDiagnosesRequirements" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_K7mFoN3FEeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalDischargeDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PostoperativeDiagnosisSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PostprocedureDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gfm_8OvXEeGkopdZmUN1Xw" name="SummaryOfCareRecordCarePlanning" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jopNcOvXEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::InterventionsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VUReAOvZEeGkopdZmUN1Xw" name="SummaryOfCareRecordReasonForHospitalization" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZBL0oOvZEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PreoperativeDiagnosisSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fDCAfh2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fDCAvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.11.11.11.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fJIovh2EeGPm7sA61ixGw" name="SummaryOfCareRecordPlanOfCareSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fJIo_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fNaEPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordProblemSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fNaEfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fOoMPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordAllergiesSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fOoMfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fQdY_h2EeGPm7sA61ixGw" name="SummaryOfCareRecordImmunizationsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fQdZPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fRrgfh2EeGPm7sA61ixGw" name="SummaryOfCareRecordMedicationsAdministeredSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fRrgvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fS5oPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordMedicationsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fS5ofh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fUu0Ph2EeGPm7sA61ixGw" name="SummaryOfCareRecordHospitalDischargeMedicationsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fUu0fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fV89Ph2EeGPm7sA61ixGw" name="SummaryOfCareRecordSocialHistorySection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fV89fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fXLFPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordResultsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fXLFfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fYZNPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordVitalSignsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fYZNfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fZnVfh2EeGPm7sA61ixGw" name="SummaryOfCareRecordProceduresSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-faOYPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hhuQPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordFunctionalStatusSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hhuQfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::FunctionalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-h_oUPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordSocialHistorySectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iAPYPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iAPYfh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iAPYvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iCEkPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iCEkfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iCroPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iCrofh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iEg0Ph2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iEg0fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iFH4Ph2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iFH4fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iFu8Ph2EeGPm7sA61ixGw" name="SummaryOfCareRecordPlanOfCareSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iFu8fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iHkIPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordMedicationsAdministeredSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iHkIfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.38'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iILMPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iILMfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iKAYPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordAssessmentAndPlanSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iKAYfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAssessmentAndPlanSection()->excluding(null)->reject(getAssessmentAndPlanSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iL1kPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordAssessmentSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iL1kfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAssessmentSection()->excluding(null)->reject(getAssessmentSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.8'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iMcoPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iMcofh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAssessmentSection()->excluding(null)->reject(getAssessmentSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iNqwPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordHospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iNqwfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iOR0Ph2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iOR0fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iPf8Ph2EeGPm7sA61ixGw" name="SummaryOfCareRecordHospitalDischargeDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iPf8fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalDischargeDiagnosisSection()->excluding(null)->reject(getHospitalDischargeDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.24'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iQHAPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iQHAfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalDischargeDiagnosisSection()->excluding(null)->reject(getHospitalDischargeDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iR8MPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordPostoperativeDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iR8Mfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPostoperativeDiagnosisSection()->excluding(null)->reject(getPostoperativeDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.35'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iSjQPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iSjQfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPostoperativeDiagnosisSection()->excluding(null)->reject(getPostoperativeDiagnosisSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iTxYPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordPostprocedureDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iTxYfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPostprocedureDiagnosisSection()->excluding(null)->reject(getPostprocedureDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.36'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iUYcPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iUYcfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPostprocedureDiagnosisSection()->excluding(null)->reject(getPostprocedureDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iWNoPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordPreoperativeDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iWNofh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPreoperativeDiagnosisSection()->excluding(null)->reject(getPreoperativeDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.34'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iW0sPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iW0sfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPreoperativeDiagnosisSection()->excluding(null)->reject(getPreoperativeDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iZQ8Ph2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatus" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iZQ8fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusProblemObservation)) or getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusResultObservation)) or  getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::CognitiveStatusResultOrganizer)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iZ4APh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatus" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iZ4Afh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusProblemObservation)) or getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusResultObservation)) or getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FunctionalStatusResultOrganizer)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iafEPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordFunctionalStatusSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iafEfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.14'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ibGIPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ibGIfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ibtMPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusResultObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ibtMfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusResultObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-icUQPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusResultOrganizer" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-icUQfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::CognitiveStatusResultOrganizer)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ic7UPh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ic7Ufh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ic7Uvh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusResultObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-idiYPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusResultObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-idiYfh2EeGPm7sA61ixGw" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusResultOrganizer" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-idiYvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FunctionalStatusResultOrganizer)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VG3qYNkxEeGsqcJR8eqiMw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_-fIhkPh2EeGPm7sA61ixGw" name="getEncountersSection" isQuery="true" bodyCondition="_-fJIoPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fJIoPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fIhkPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fJIofh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection))->asSequence()->any(true).oclAsType(consol::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fIhkfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LWg0BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fIhkvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fJvsPh2EeGPm7sA61ixGw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_-fJvs_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fJvs_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fJvsPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fKWwPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fJvsfh2EeGPm7sA61ixGw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fJvsvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fKWwfh2EeGPm7sA61ixGw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_-fKWxPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fKWxPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fKWwfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fKWxfh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fKWwvh2EeGPm7sA61ixGw" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fKWw_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fK90Ph2EeGPm7sA61ixGw" name="getInterventionsSection" isQuery="true" bodyCondition="_-fK90_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fK90_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fK90Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fK91Ph2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection))->asSequence()->any(true).oclAsType(consol::InterventionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fK90fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_hqzJADVyEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fK90vh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fK91fh2EeGPm7sA61ixGw" name="getAssessmentSection" isQuery="true" bodyCondition="_-fLk4Ph2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fLk4Ph2EeGPm7sA61ixGw" name="body" constrainedElement="_-fK91fh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fLk4fh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fK91vh2EeGPm7sA61ixGw" type="_CaN5MODgEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fK91_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fLk4vh2EeGPm7sA61ixGw" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_-fLk5fh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fLk5fh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fLk4vh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fLk5vh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fLk4_h2EeGPm7sA61ixGw" type="_gl8CMODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fLk5Ph2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fML8Ph2EeGPm7sA61ixGw" name="getHospitalDischargeDiagnosisSection" isQuery="true" bodyCondition="_-fML8_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fML8_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fML8Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fMzAPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalDischargeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fML8fh2EeGPm7sA61ixGw" type="_qgJokODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fML8vh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fMzAfh2EeGPm7sA61ixGw" name="getPostoperativeDiagnosisSection" isQuery="true" bodyCondition="_-fMzBPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fMzBPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fMzAfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fMzBfh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PostoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PostoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fMzAvh2EeGPm7sA61ixGw" type="_y1mQkODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fMzA_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fOBIPh2EeGPm7sA61ixGw" name="getProblemSection" isQuery="true" bodyCondition="_-fOBI_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fOBI_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fOBIPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fOBJPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fOBIfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fOBIvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fPPQPh2EeGPm7sA61ixGw" name="getAllergiesSection" isQuery="true" bodyCondition="_-fPPQ_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fPPQ_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fPPQPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fPPRPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fPPQfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fPPQvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fP2UPh2EeGPm7sA61ixGw" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_-fP2U_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fP2U_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fP2UPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fP2VPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fP2Ufh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PQJcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fP2Uvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fP2Vfh2EeGPm7sA61ixGw" name="getPreoperativeDiagnosisSection" isQuery="true" bodyCondition="_-fQdYfh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fQdYfh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fP2Vfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fQdYvh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PreoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fP2Vvh2EeGPm7sA61ixGw" type="_bRRt0ODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fQdYPh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fREcPh2EeGPm7sA61ixGw" name="getImmunizationsSection" isQuery="true" bodyCondition="_-fREc_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fREc_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fREcPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fRrgPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fREcfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fREcvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fSSkPh2EeGPm7sA61ixGw" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_-fSSk_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fSSk_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fSSkPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fSSlPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(mu2consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fSSkfh2EeGPm7sA61ixGw" type="_3poqgODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fSSkvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fTgsPh2EeGPm7sA61ixGw" name="getMedicationsSection" isQuery="true" bodyCondition="_-fTgs_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fTgs_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fTgsPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fUHwPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fTgsfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fTgsvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fUHwfh2EeGPm7sA61ixGw" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_-fUHxPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fUHxPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fUHwfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fUHxfh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fUHwvh2EeGPm7sA61ixGw" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fUHw_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fVV4Ph2EeGPm7sA61ixGw" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_-fV88vh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fV88vh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fVV4Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fV88_h2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fV88Ph2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fV88fh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fWkAPh2EeGPm7sA61ixGw" name="getSocialHistorySection" isQuery="true" bodyCondition="_-fXLEvh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fXLEvh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fWkAPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fXLE_h2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fXLEPh2EeGPm7sA61ixGw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fXLEfh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fXyIPh2EeGPm7sA61ixGw" name="getResultsSection" isQuery="true" bodyCondition="_-fYZMvh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fYZMvh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fXyIPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fYZM_h2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fYZMPh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fYZMfh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fZnUPh2EeGPm7sA61ixGw" name="getVitalSignsSection" isQuery="true" bodyCondition="_-fZnU_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fZnU_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fZnUPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fZnVPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fZnUfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fZnUvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fa1cPh2EeGPm7sA61ixGw" name="getProceduresSection" isQuery="true" bodyCondition="_-fa1c_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fa1c_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fa1cPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fa1dPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fa1cfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fa1cvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fa1dfh2EeGPm7sA61ixGw" name="getPostprocedureDiagnosisSection" isQuery="true" bodyCondition="_-fbcgfh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fbcgfh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fa1dfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fbcgvh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PostprocedureDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PostprocedureDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fa1dvh2EeGPm7sA61ixGw" type="_uvXlkODnEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fbcgPh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hi8YPh2EeGPm7sA61ixGw" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_-hi8Y_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hi8Y_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-hi8YPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hi8ZPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::FunctionalStatusSection))->asSequence()->any(true).oclAsType(mu2consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hi8Yfh2EeGPm7sA61ixGw" type="_do39kPhzEeGPm7sA61ixGw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hi8Yvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ec-GAODeEeGdSJSga09Dyg" name="AssessmentAndPlanForCarePlanning">
      <ownedComment xmi:id="_XvBEkOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_VDXc8OJREeGzd4w2xo094w" name="AssessmentAndPlanForCarePlanningOneOfPlanOfCareEntry" constrainedElement="_Ec-GAODeEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uj1mgOJREeGzd4w2xo094w">
          <language>OCL</language>
          <body>self.getProcedures()->exists(p : cda::Procedure | p.oclIsKindOf(consol::PlanOfCareActivityProcedure)) or self.getSubstanceAdministrations()->exists(s : cda::SubstanceAdministration | s.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration)) or self.getSupplies()->exists(sp : cda::Supply | sp.oclIsKindOf(consol::PlanOfCareActivitySupply))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FkUIkODeEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_-fef0Ph2EeGPm7sA61ixGw" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_-ffG4Ph2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-ffG4Ph2EeGPm7sA61ixGw" name="body" constrainedElement="_-fef0Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ffG4fh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fef0fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fef0vh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-ffG4vh2EeGPm7sA61ixGw" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_-ffG5fh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-ffG5fh2EeGPm7sA61ixGw" name="body" constrainedElement="_-ffG4vh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ffG5vh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-ffG4_h2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-ffG5Ph2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fft8Ph2EeGPm7sA61ixGw" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_-fft8_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fft8_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fft8Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fft9Ph2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fft8fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fft8vh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_svnagODKEeGdSJSga09Dyg" name="PlanOfCareSection">
      <ownedComment xmi:id="_wajPYOFzEeGlJOFzBdwM6w">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_j1rcwOF3EeGlJOFzBdwM6w" name="mu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qaLEgOF3EeGlJOFzBdwM6w">
          <language>OCL</language>
          <body>self.getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or self.getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or self.getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fcqoPh2EeGPm7sA61ixGw" name="mu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fcqofh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fgVAPh2EeGPm7sA61ixGw" name="PlanOfCareSectionTemplateId" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fgVAfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vqugwODKEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_-fbcg_h2EeGPm7sA61ixGw" name="getmu2consolPlanOfCareActivityAct" isQuery="true" bodyCondition="_-fbchvh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fbchvh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fbcg_h2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fbch_h2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlanOfCareActivityAct))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fbchPh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWE5xSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fbchfh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fcDkPh2EeGPm7sA61ixGw" name="getmu2consolPlanOfCareActivityEncounter" isQuery="true" bodyCondition="_-fcDk_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fcDk_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fcDkPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fcDlPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityEncounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fcDkfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWFBBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fcDkvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fdRsfh2EeGPm7sA61ixGw" name="getmu2consolPlanOfCareActivityObservation" isQuery="true" bodyCondition="_-fd4wvh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fd4wvh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fdRsfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fd4w_h2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlanOfCareActivityObservation))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fd4wPh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NcLjhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fd4wfh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CaN5MODgEeGdSJSga09Dyg" name="AssessmentSection">
      <ownedComment xmi:id="_dY-WsOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_-fiKMfh2EeGPm7sA61ixGw" name="AssessmentSectionTemplateId" constrainedElement="_CaN5MODgEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fiKMvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fjYUPh2EeGPm7sA61ixGw" name="mu2consolAssessmentSectionProblemObservation" constrainedElement="_CaN5MODgEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fjYUfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D0JgkODgEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_W8pI4DszEeGvzMYhXuqAEA"/>
      </generalization>
      <ownedOperation xmi:id="_-fj_YPh2EeGPm7sA61ixGw" name="getProblemObservation" isQuery="true" bodyCondition="_-fj_Y_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fj_Y_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fj_YPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fj_ZPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fj_Yfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fj_Yvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g1AyQODhEeGdSJSga09Dyg" name="AssessmentAndPlanForConditionOrConcern">
      <ownedComment xmi:id="_Zls5YOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_-fkmcPh2EeGPm7sA61ixGw" name="AssessmentAndPlanForConditionOrConcernProblemObservation" constrainedElement="_g1AyQODhEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fkmcfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iIDHcODhEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_-flNgfh2EeGPm7sA61ixGw" name="getProblemObservation" isQuery="true" bodyCondition="_-flNhPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-flNhPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-flNgfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-flNhfh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-flNgvh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-flNg_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_w2gYkODkEeGdSJSga09Dyg" name="AssessmentAndPlanSection">
      <ownedComment xmi:id="_jFHLgPhtEeGPm7sA61ixGw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_-fl0kfh2EeGPm7sA61ixGw" name="AssessmentAndPlanSectionTemplateId" constrainedElement="_w2gYkODkEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fl0kvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ySywYODkEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_-fnCsPh2EeGPm7sA61ixGw" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_-fnpwfh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fnpwfh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fnCsPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fnpwvh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fnCsfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fnpwPh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-fnpw_h2EeGPm7sA61ixGw" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_-fnpxvh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fnpxvh2EeGPm7sA61ixGw" name="body" constrainedElement="_-fnpw_h2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fnpx_h2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fnpxPh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fnpxfh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-foQ0Ph2EeGPm7sA61ixGw" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_-foQ0_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-foQ0_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-foQ0Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-foQ1Ph2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-foQ0fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-foQ0vh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-foQ1fh2EeGPm7sA61ixGw" name="getProblemObservation" isQuery="true" bodyCondition="_-fo34Ph2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fo34Ph2EeGPm7sA61ixGw" name="body" constrainedElement="_-foQ1fh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fo34fh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-foQ1vh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-foQ1_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZK4bUODlEeGdSJSga09Dyg" name="InstructionsSection">
      <ownedComment xmi:id="_nirKkOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_-fo34_h2EeGPm7sA61ixGw" name="InstructionsSectionTemplateId" constrainedElement="_ZK4bUODlEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fo35Ph2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fqtEPh2EeGPm7sA61ixGw" name="mu2consolInstructionsSectionInstructions" constrainedElement="_ZK4bUODlEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fqtEfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_avPxEODlEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
      </generalization>
      <ownedOperation xmi:id="_-fr7MPh2EeGPm7sA61ixGw" name="getmu2consolInstructionss" isQuery="true" bodyCondition="_-fr7M_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fr7M_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fr7MPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fr7NPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions)).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fr7Mfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2G8h9RSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fr7Mvh2EeGPm7sA61ixGw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gl8CMODmEeGdSJSga09Dyg" name="HospitalAdmissionDiagnosisSection">
      <ownedComment xmi:id="_iSMIYOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_-fsiQPh2EeGPm7sA61ixGw" name="HospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_gl8CMODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fsiQfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ftwYPh2EeGPm7sA61ixGw" name="mu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_gl8CMODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ftwYfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jgg88ODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidQhSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_-fuXcPh2EeGPm7sA61ixGw" name="getmu2consolHospitalAdmissionDiagnosis" isQuery="true" bodyCondition="_-fuXc_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fuXc_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fuXcPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fu-gPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fuXcfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5K6mAEFHEeGorO80f-Cppg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fuXcvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qgJokODmEeGdSJSga09Dyg" name="HospitalDischargeDiagnosisSection">
      <ownedComment xmi:id="_k2eqEOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_-fu-gvh2EeGPm7sA61ixGw" name="HospitalDischargeDiagnosisSectionTemplateId" constrainedElement="_qgJokODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fu-g_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.24')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fwMoPh2EeGPm7sA61ixGw" name="mu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_qgJokODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fwMofh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rXMlUODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidURSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_-fxawPh2EeGPm7sA61ixGw" name="getmu2consolHospitalDischargeDiagnosis" isQuery="true" bodyCondition="_-fxaw_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fxaw_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fxawPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fxaxPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalDischargeDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalDischargeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fxawfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_KtwVgCULEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fxawvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y1mQkODmEeGdSJSga09Dyg" name="PostoperativeDiagnosisSection">
      <ownedComment xmi:id="_q87D4OGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_-fyB0Ph2EeGPm7sA61ixGw" name="PostoperativeDiagnosisSectionTemplateId" constrainedElement="_y1mQkODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fyB0fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.35')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-fzP8Ph2EeGPm7sA61ixGw" name="mu2consolPostoperativeDiagnosisSectionProblemObservation" constrainedElement="_y1mQkODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fzP8fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zVobgODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_7UA-4DVyEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_-fz3APh2EeGPm7sA61ixGw" name="getProblemObservation" isQuery="true" bodyCondition="_-fz3A_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-fz3A_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-fz3APh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-fz3BPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-fz3Afh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-fz3Avh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uvXlkODnEeGdSJSga09Dyg" name="PostprocedureDiagnosisSection">
      <ownedComment xmi:id="_sNALsOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_-f0eEfh2EeGPm7sA61ixGw" name="PostprocedureDiagnosisSectionTemplateId" constrainedElement="_uvXlkODnEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-f0eEvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.36')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-f1sMPh2EeGPm7sA61ixGw" name="mu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_uvXlkODnEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-f1sMfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vj29kODnEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_-jlSMDVyEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_-f2TQPh2EeGPm7sA61ixGw" name="getmu2consolPostprocedureDiagnosis" isQuery="true" bodyCondition="_-f2TQ_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-f2TQ_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-f2TQPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-f26UPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PostprocedureDiagnosis))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-f2TQfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_0fjXAEEvEeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-f2TQvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bRRt0ODqEeGdSJSga09Dyg" name="PreoperativeDiagnosisSection">
      <ownedComment xmi:id="_thn1QOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_-f26Uvh2EeGPm7sA61ixGw" name="PreoperativeDiagnosisSectionTemplateId" constrainedElement="_bRRt0ODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-f26U_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.34')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-f4IcPh2EeGPm7sA61ixGw" name="mu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_bRRt0ODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-f4Icfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_b5wDEODqEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Cu6qMDVzEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_-f4vgPh2EeGPm7sA61ixGw" name="getmu2consolPreoperativeDiagnosis" isQuery="true" bodyCondition="_-f5Wkvh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-f5Wkvh2EeGPm7sA61ixGw" name="body" constrainedElement="_-f4vgPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-f5Wk_h2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PreoperativeDiagnosis))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-f5WkPh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_0baBYEEwEeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-f5Wkfh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3poqgODqEeGdSJSga09Dyg" name="MedicationsAdministeredSection">
      <ownedComment xmi:id="_o4-PIOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_-f5Wlfh2EeGPm7sA61ixGw" name="MedicationsAdministeredSectionTemplateId" constrainedElement="_3poqgODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-f5Wlvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-f6ksPh2EeGPm7sA61ixGw" name="mu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_3poqgODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-f6ksfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4XEYQODqEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj_BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_-f7y0Ph2EeGPm7sA61ixGw" name="getmu2consolMedicationActivities" isQuery="true" bodyCondition="_-f7y0_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-f7y0_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-f7y0Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-f7y1Ph2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-f7y0fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2GHbgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-f7y0vh2EeGPm7sA61ixGw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HBzuYODrEeGdSJSga09Dyg" name="HospitalAdmissionMedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_jlwCAOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_-f7y1vh2EeGPm7sA61ixGw" name="HospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_HBzuYODrEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-f8Z4Ph2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-f9A8Ph2EeGPm7sA61ixGw" name="mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_HBzuYODrEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-f9A8fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Hm_fEODrEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj5BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_-f-PEPh2EeGPm7sA61ixGw" name="getmu2consolAdmissionMedications" isQuery="true" bodyCondition="_-f-PE_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-f-PE_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-f-PEPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-f-PFPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AdmissionMedication)).oclAsType(consol::AdmissionMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-f-PEfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_LNP08EFGEeGorO80f-Cppg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-f-PEvh2EeGPm7sA61ixGw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_szTFwOF8EeGlJOFzBdwM6w" name="AllergiesSectionEntriesOptional">
      <ownedRule xmi:id="_-f-2IPh2EeGPm7sA61ixGw" name="AllergiesSectionEntriesOptionalTemplateId" constrainedElement="_szTFwOF8EeGlJOFzBdwM6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-f-2Ifh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-f_dMPh2EeGPm7sA61ixGw" name="mu2consolAllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_szTFwOF8EeGlJOFzBdwM6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gAEQPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ugMFYOF8EeGlJOFzBdwM6w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
      </generalization>
      <ownedOperation xmi:id="_-gArUPh2EeGPm7sA61ixGw" name="getmu2consolAllergyProblemAct" isQuery="true" bodyCondition="_-gArU_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gArU_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gArUPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gArVPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AllergyProblemAct))->asSequence()->any(true).oclAsType(consol::AllergyProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gArUfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2EAisBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gArUvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7D0CQOzmEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummary">
      <ownedComment xmi:id="_V_Po0PhqEeGPm7sA61ixGw">
        <body>MU2 170.314(e)(2) Clinical Summary</body>
      </ownedComment>
      <ownedRule xmi:id="_F7KU8O1YEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryResponsibleParty" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_HLw1oO1iEeGT-eFu7Ghgjw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ke17gO1YEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;&#xA;cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kNHwMO1bEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryReasonForOfficeVisit" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_miJt4O1bEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_CFE3YO1cEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryCarePlanning" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_DrZ8AO1cEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fRfCgPhlEeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryEffectiveTime" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_fRfCgfhlEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fRfCgvhlEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or &#xD;&#xD;&#xA;effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_8kY74PhlEeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryLocation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_BORREPhmEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-WWowPhlEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | &#xD;&#xD;&#xA;not location.oclIsUndefined() and location.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1Y4aoPhpEeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryPlanOfCareActOrEncounter" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_6FsIAPhpEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_5W3TIPhpEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->exists(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection)and ( section.getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or section.getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gBSYPh2EeGPm7sA61ixGw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gBSYfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = 'null')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gGK4Ph2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryProblemSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gGK4fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gJ1Rfh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryMedicationsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gJ1Rvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gLDY_h2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryAllergiesSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gLDZPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gMRgPh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryResultsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gMRgfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gNfoPh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryVitalSignsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gNfofh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gOGtfh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryPlanOfCareSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gOGtvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gPU0Ph2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryProceduresSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gPU0fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gQi8Ph2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryImmunizationsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gQi8fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gRKBfh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryMedicationsAdministeredSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gRKBvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gUNUPh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryInstructionsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gUNUfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::InstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hNlMPh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummarySocialHistorySection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hNlMfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ihz0Ph2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ihz0fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ihz0vh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iia4Ph2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iia4fh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryPlanOfCareSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iia4vh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ikQEPh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryMedicationsAdministeredSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ikQEfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.38'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ik3IPh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ik3Ifh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-imsUPh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryAssessmentAndPlanSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-imsUfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAssessmentAndPlanSection()->excluding(null)->reject(getAssessmentAndPlanSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iohgPh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryInstructionsSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iohgfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getInstructionsSection()->excluding(null)->reject(getInstructionsSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.45'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ipIkPh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ipIkfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getInstructionsSection()->excluding(null)->reject(getInstructionsSection().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iqWsPh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummarySocialHistorySectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iqWsfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iq9wPh2EeGPm7sA61ixGw" name="ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-iq9wfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7D0pUOzmEeGT-eFu7Ghgjw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_-gGx8Ph2EeGPm7sA61ixGw" name="getProblemSection" isQuery="true" bodyCondition="_-gHZAfh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gHZAfh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gGx8Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gHZAvh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gGx8fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gHZAPh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gKcUPh2EeGPm7sA61ixGw" name="getMedicationsSection" isQuery="true" bodyCondition="_-gLDYfh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gLDYfh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gKcUPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gLDYvh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gKcUfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gLDYPh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gLqcPh2EeGPm7sA61ixGw" name="getAllergiesSection" isQuery="true" bodyCondition="_-gLqc_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gLqc_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gLqcPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gLqdPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gLqcfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gLqcvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gM4kPh2EeGPm7sA61ixGw" name="getResultsSection" isQuery="true" bodyCondition="_-gM4k_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gM4k_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gM4kPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gM4lPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gM4kfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gM4kvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gOGsPh2EeGPm7sA61ixGw" name="getVitalSignsSection" isQuery="true" bodyCondition="_-gOGs_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gOGs_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gOGsPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gOGtPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gOGsfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gOGsvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gOtwPh2EeGPm7sA61ixGw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_-gOtw_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gOtw_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gOtwPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gOtxPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gOtwfh2EeGPm7sA61ixGw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gOtwvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gP74Ph2EeGPm7sA61ixGw" name="getProceduresSection" isQuery="true" bodyCondition="_-gP74_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gP74_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gP74Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gP75Ph2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gP74fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gP74vh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gRKAPh2EeGPm7sA61ixGw" name="getImmunizationsSection" isQuery="true" bodyCondition="_-gRKA_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gRKA_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gRKAPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gRKBPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gRKAfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gRKAvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gRxEPh2EeGPm7sA61ixGw" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_-gRxE_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gRxE_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gRxEPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gRxFPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(mu2consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gRxEfh2EeGPm7sA61ixGw" type="_3poqgODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gRxEvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gSYIPh2EeGPm7sA61ixGw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_-gSYI_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gSYI_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gSYIPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gSYJPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gSYIfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gSYIvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gS_MPh2EeGPm7sA61ixGw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_-gS_M_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gS_M_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gS_MPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gS_NPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gS_Mfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gS_Mvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gS_Nfh2EeGPm7sA61ixGw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_-gS_OPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gS_OPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gS_Nfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gS_Ofh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gS_Nvh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gS_N_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gTmQPh2EeGPm7sA61ixGw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_-gTmQ_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gTmQ_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gTmQPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gTmRPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gTmQfh2EeGPm7sA61ixGw" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gTmQvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gUNUvh2EeGPm7sA61ixGw" name="getInstructionsSection" isQuery="true" bodyCondition="_-gU0YPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gU0YPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gUNUvh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gU0Yfh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::InstructionsSection))->asSequence()->any(true).oclAsType(mu2consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gUNU_h2EeGPm7sA61ixGw" type="_ZK4bUODlEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gUNVPh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hOzUPh2EeGPm7sA61ixGw" name="getSocialHistorySection" isQuery="true" bodyCondition="_-hOzU_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hOzU_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-hOzUPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hOzVPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hOzUfh2EeGPm7sA61ixGw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hOzUvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9frdwO1UEeGT-eFu7Ghgjw" name="SocialHistorySection">
      <ownedComment xmi:id="_GBqF4O1VEeGT-eFu7Ghgjw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_-gHZBPh2EeGPm7sA61ixGw" name="SocialHistorySectionTemplateId" constrainedElement="_9frdwO1UEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gIAEPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gInIPh2EeGPm7sA61ixGw" name="mu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_9frdwO1UEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gInIfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-2YyAO1UEeGT-eFu7Ghgjw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_-gJ1QPh2EeGPm7sA61ixGw" name="getmu2consolSmokingStatusObservations" isQuery="true" bodyCondition="_-gJ1Q_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gJ1Q_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gJ1QPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gJ1RPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SmokingStatusObservation)).oclAsType(consol::SmokingStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gJ1Qfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_RYJj0OWQEeGKmvzED_He2w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gJ1Qvh2EeGPm7sA61ixGw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_C0_BkO4xEeGT5oaF-4NGAA" name="VDTInpatientPatientInfo">
      <ownedComment xmi:id="_JC7xkO4xEeGT5oaF-4NGAA">
        <body>Objective : 170.314(e)(1) (View, download, and transmit to 3rd party)  for EP</body>
      </ownedComment>
      <ownedRule xmi:id="_bnbyEO4yEeGT5oaF-4NGAA" name="VDTInpatientPatientInfoResponsibleParty" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <ownedComment xmi:id="_gMvwUO4yEeGT5oaF-4NGAA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hhmqcO4yEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;&#xA;cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_xGJ9cO4yEeGT5oaF-4NGAA" name="VDTInpatientPatientInfoMedicationList" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_0HuRAO4yEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or  &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)) or &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_F8DOQO4zEeGT5oaF-4NGAA" name="VDTInpatientPatientInfoCanHaveEitherVitalSignsRequiedOrOptionalEntry" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LMd_AO4zEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1NTjkO4zEeGT5oaF-4NGAA" name="VDTInpatientPatientInfoCanHaveEitherAllergyRequiredOrOptionalEntry" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_647CkO4zEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gXQoPh2EeGPm7sA61ixGw" name="VDTInpatientPatientInfoSocialHistorySection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gXQofh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gYewPh2EeGPm7sA61ixGw" name="VDTInpatientPatientInfoProblemSection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gYewfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gbiFfh2EeGPm7sA61ixGw" name="VDTInpatientPatientInfoResultsSection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gbiFvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gd-UPh2EeGPm7sA61ixGw" name="VDTInpatientPatientInfoPlanOfCareSection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gd-Ufh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gelZfh2EeGPm7sA61ixGw" name="VDTInpatientPatientInfoProceduresSection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gfMcPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-itaAPh2EeGPm7sA61ixGw" name="VDTInpatientPatientInfoSocialHistorySectionTemplateId" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-itaAfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-itaAvh2EeGPm7sA61ixGw" name="VDTInpatientPatientInfomu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-itaA_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-iuoIPh2EeGPm7sA61ixGw" name="VDTInpatientPatientInfoHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ivPMPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ivPMfh2EeGPm7sA61ixGw" name="VDTInpatientPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ivPMvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ixEYPh2EeGPm7sA61ixGw" name="VDTInpatientPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ixrcPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ixrcfh2EeGPm7sA61ixGw" name="VDTInpatientPatientInfomu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ixrcvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ixrc_h2EeGPm7sA61ixGw" name="VDTInpatientPatientInfoPlanOfCareSectionTemplateId" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ixrdPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_C1DTAO4xEeGT5oaF-4NGAA" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_-gX3sPh2EeGPm7sA61ixGw" name="getSocialHistorySection" isQuery="true" bodyCondition="_-gX3s_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gX3s_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gX3sPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gX3tPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gX3sfh2EeGPm7sA61ixGw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gX3svh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gZF0Ph2EeGPm7sA61ixGw" name="getProblemSection" isQuery="true" bodyCondition="_-gZF0_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gZF0_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gZF0Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gZF1Ph2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gZF0fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gZF0vh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gZs4Ph2EeGPm7sA61ixGw" name="getMedicationsSection" isQuery="true" bodyCondition="_-gZs4_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gZs4_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gZs4Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gZs5Ph2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gZs4fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gZs4vh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gaT8Ph2EeGPm7sA61ixGw" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_-gaT8_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gaT8_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gaT8Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gaT9Ph2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gaT8fh2EeGPm7sA61ixGw" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gaT8vh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gaT9fh2EeGPm7sA61ixGw" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_-gaT-Ph2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gaT-Ph2EeGPm7sA61ixGw" name="body" constrainedElement="_-gaT9fh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ga7APh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gaT9vh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gaT9_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-ga7Afh2EeGPm7sA61ixGw" name="getAllergiesSection" isQuery="true" bodyCondition="_-ga7BPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-ga7BPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-ga7Afh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ga7Bfh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-ga7Avh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-ga7A_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gbiEPh2EeGPm7sA61ixGw" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_-gbiE_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gbiE_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gbiEPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gbiFPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gbiEfh2EeGPm7sA61ixGw" type="_szTFwOF8EeGlJOFzBdwM6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gbiEvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gcwMPh2EeGPm7sA61ixGw" name="getResultsSection" isQuery="true" bodyCondition="_-gcwM_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gcwM_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gcwMPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gcwNPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gcwMfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gcwMvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gcwNfh2EeGPm7sA61ixGw" name="getVitalSignsSection" isQuery="true" bodyCondition="_-gcwOPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gcwOPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gcwNfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gdXQPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gcwNvh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gcwN_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gdXQfh2EeGPm7sA61ixGw" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_-gdXRPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gdXRPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gdXQfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gdXRfh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gdXQvh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gdXQ_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gelYPh2EeGPm7sA61ixGw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_-gelY_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gelY_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gelYPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gelZPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gelYfh2EeGPm7sA61ixGw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gelYvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gfzgPh2EeGPm7sA61ixGw" name="getProceduresSection" isQuery="true" bodyCondition="_-gfzg_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gfzg_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gfzgPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gfzhPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gfzgfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gfzgvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_tzbWgO40EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfo">
      <ownedComment xmi:id="_eqorEO43EeGT5oaF-4NGAA">
        <body>Objective : 170.314(e)(1) (View, download, and transmit to 3rd party)  for EH/CAH</body>
      </ownedComment>
      <ownedRule xmi:id="_PI9EEO5yEeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoMedicationList" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_TcvNcO5yEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or  &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)) or &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lQwBoO5yEeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoMedicationAllergy" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_poy_8O5yEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nAedYO5zEeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoCanHaveEitherVitalSignsRequiedOrOptionalEntry" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_p0ljwO5zEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZlI4O50EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoCanHaveEitherAllergyRequiredOrOptionalEntry" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tDcP8O50EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_zZdW0O50EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoCanHaveEitherEncountersRequiredOrOptionalEntry" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2vamAO50EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_MDXPUO52EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoReasonForHospitalization" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_P2QSIO52EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionDiagnosisSection))) or&#xD;&#xA;(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gjd4Ph2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfoSocialHistorySection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gjd4fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gksA_h2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfoProblemSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gksBPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gnvVfh2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfoResultsSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gnvVvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gqLkPh2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfoPlanOfCareSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gqLkfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-grZsPh2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfoProceduresSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-grZsfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gsn0Ph2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfoHospitalDischargeInstructionsSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gsn0fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-izgoPh2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfoSocialHistorySectionTemplateId" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-izgofh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-i0HsPh2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfomu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-i0Hsfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-i1V0Ph2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfoHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-i1V0fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-i1V0vh2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-i1V0_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-i3yEPh2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-i3yEfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-i3yEvh2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfomu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-i3yE_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-i3yFPh2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfoPlanOfCareSectionTemplateId" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-i4ZIPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-i5nQPh2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfoHospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-i5nQfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-i5nQvh2EeGPm7sA61ixGw" name="VDTAmbulatoryPatientInfomu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-i5nQ_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_tzb9kO40EeGT5oaF-4NGAA" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_-gkE8Ph2EeGPm7sA61ixGw" name="getSocialHistorySection" isQuery="true" bodyCondition="_-gksAfh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gksAfh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gkE8Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gksAvh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gkE8fh2EeGPm7sA61ixGw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gksAPh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-glTEPh2EeGPm7sA61ixGw" name="getProblemSection" isQuery="true" bodyCondition="_-gl6IPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gl6IPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-glTEPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gl6Ifh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-glTEfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-glTEvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gl6Ivh2EeGPm7sA61ixGw" name="getMedicationsSection" isQuery="true" bodyCondition="_-gl6Jfh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gl6Jfh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gl6Ivh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gl6Jvh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gl6I_h2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gl6JPh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gmhMPh2EeGPm7sA61ixGw" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_-gmhM_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gmhM_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gmhMPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gmhNPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gmhMfh2EeGPm7sA61ixGw" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gmhMvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gmhNfh2EeGPm7sA61ixGw" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_-gnIQPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gnIQPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gmhNfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gnIQfh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gmhNvh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gmhN_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gnIQvh2EeGPm7sA61ixGw" name="getAllergiesSection" isQuery="true" bodyCondition="_-gnIRfh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gnIRfh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gnIQvh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gnIRvh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gnIQ_h2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gnIRPh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gnvUPh2EeGPm7sA61ixGw" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_-gnvU_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gnvU_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gnvUPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gnvVPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gnvUfh2EeGPm7sA61ixGw" type="_szTFwOF8EeGlJOFzBdwM6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gnvUvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-go9cPh2EeGPm7sA61ixGw" name="getResultsSection" isQuery="true" bodyCondition="_-go9c_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-go9c_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-go9cPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-go9dPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-go9cfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-go9cvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-go9dfh2EeGPm7sA61ixGw" name="getVitalSignsSection" isQuery="true" bodyCondition="_-gpkgvh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gpkgvh2EeGPm7sA61ixGw" name="body" constrainedElement="_-go9dfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gpkg_h2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gpkgPh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gpkgfh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gpkhPh2EeGPm7sA61ixGw" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_-gpkh_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gpkh_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gpkhPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gpkiPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gpkhfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gpkhvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gqyoPh2EeGPm7sA61ixGw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_-gqyo_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gqyo_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gqyoPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gqypPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gqyofh2EeGPm7sA61ixGw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gqyovh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gsAwPh2EeGPm7sA61ixGw" name="getProceduresSection" isQuery="true" bodyCondition="_-gsAw_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gsAw_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gsAwPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gsAxPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gsAwfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gsAwvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gtO4Ph2EeGPm7sA61ixGw" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_-gtO4_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gtO4_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gtO4Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gtO5Ph2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gtO4fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gtO4vh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gt18Ph2EeGPm7sA61ixGw" name="getEncountersSection" isQuery="true" bodyCondition="_-gt18_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gt18_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gt18Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gt19Ph2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection))->asSequence()->any(true).oclAsType(consol::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gt18fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LWg0BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gt18vh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gt19fh2EeGPm7sA61ixGw" name="getEncountersSectionEntriesOptional" isQuery="true" bodyCondition="_-gudAPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gudAPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gt19fh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gudAfh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::EncountersSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gt19vh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4yj2wBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gt19_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gudAvh2EeGPm7sA61ixGw" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_-gudBfh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gudBfh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gudAvh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gudBvh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gudA_h2EeGPm7sA61ixGw" type="_gl8CMODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gudBPh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gvEEPh2EeGPm7sA61ixGw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_-gvEE_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gvEE_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gvEEPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gvEFPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gvEEfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gvEEvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gvrIPh2EeGPm7sA61ixGw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_-gvrI_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gvrI_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-gvrIPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gvrJPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gvrIfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gvrIvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-gvrJfh2EeGPm7sA61ixGw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_-gvrKPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gvrKPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gvrJfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gvrKfh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gvrJvh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gvrJ_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UGcMgPabEeGi99B_x568TQ" name="TransitionOfCareAmbulatorySummary">
      <ownedComment xmi:id="_ottgoPhKEeGQQ6aVp7opYg">
        <body>MU2 170.314(b)(2) Transition of Care/Referral Summary - For Ambulatory Care&#xD;
MU2 170.314(b)(7) Export Summary  - For Ambulatory Care</body>
      </ownedComment>
      <ownedRule xmi:id="_vSLf0PdxEeG_npP0e3OOEw" name="TransitionOfCareAmbulatorySummaryResponsibleParty" constrainedElement="_UGcMgPabEeGi99B_x568TQ">
        <ownedComment xmi:id="_BaqaQPeVEeG_npP0e3OOEw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_z3eP8PdxEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-gw5QPh2EeGPm7sA61ixGw" name="TransitionOfCareAmbulatorySummaryReasonForReferralSection" constrainedElement="_UGcMgPabEeGi99B_x568TQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gw5Qfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WN-gwPabEeGi99B_x568TQ" general="_VG3DUNkxEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_-gxgUPh2EeGPm7sA61ixGw" name="getReasonForReferralSection" isQuery="true" bodyCondition="_-gyHYvh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-gyHYvh2EeGPm7sA61ixGw" name="body" constrainedElement="_-gxgUPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gyHY_h2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))->asSequence()->any(true).oclAsType(consol::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-gyHYPh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQFxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-gyHYfh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uu2T0PdyEeG_npP0e3OOEw" name="TransitionOfCareInpatientSummary">
      <ownedComment xmi:id="_rczkIPhKEeGQQ6aVp7opYg">
        <body>MU2 170.314(b)(2) Transition of Care/Referral Summary - For Inpatient Care&#xD;
MU2 170.314(b)(7) Export Summary  - For Inpatient Care</body>
      </ownedComment>
      <ownedRule xmi:id="_-gz8kPh2EeGPm7sA61ixGw" name="TransitionOfCareInpatientSummaryHospitalDischargeInstructionsSection" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gz8kfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vutOUPdyEeG_npP0e3OOEw" general="_VG3DUNkxEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_-g1Ksfh2EeGPm7sA61ixGw" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_-g1KtPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-g1KtPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-g1Ksfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-g1Ktfh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-g1Ksvh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-g1Ks_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i2IoQPhVEeGPm7sA61ixGw" name="ViewDownloadTransmitSummary">
      <ownedRule xmi:id="_D4WE8PhWEeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryMedicationAllergy" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_D4WE8fhWEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_CrzxoPhcEeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryCarePlanFields" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FGH38PhcEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-g74YPh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryAllergiesSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-g74Yfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-g9GgPh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryMedicationsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-g9Ggfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-g9tlfh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryHospitalDischargeMedicationsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-g-UoPh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-g_iwPh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryProblemSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-g_iwfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hAJ1fh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryProceduresSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hAJ1vh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hBX9fh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryVitalSignsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hBX9vh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hCmFPh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryResultsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hCmFfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hEbQPh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryPlanOfCareSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hEbQfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hFCVfh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummarySocialHistorySection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hFCVvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-i8DgPh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryAssessmentAndPlanSectionTemplateId" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-i8Dgfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAssessmentAndPlanSection()->excluding(null)->reject(getAssessmentAndPlanSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-i94sPh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-i94sfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-i-fwPh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummarymu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-i-fwfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-i-fwvh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryPlanOfCareSectionTemplateId" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-i-fw_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-jAU8Ph2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummarySocialHistorySectionTemplateId" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-jAU8fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-jAU8vh2EeGPm7sA61ixGw" name="ViewDownloadTransmitSummarymu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-jAU8_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kFewQPhVEeGPm7sA61ixGw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_-g8fcPh2EeGPm7sA61ixGw" name="getAllergiesSection" isQuery="true" bodyCondition="_-g8fc_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-g8fc_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-g8fcPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-g8fdPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-g8fcfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-g8fcvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-g9tkPh2EeGPm7sA61ixGw" name="getMedicationsSection" isQuery="true" bodyCondition="_-g9tk_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-g9tk_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-g9tkPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-g9tlPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-g9tkfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-g9tkvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-g-7sPh2EeGPm7sA61ixGw" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_-g-7s_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-g-7s_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-g-7sPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-g-7tPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-g-7sfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-g-7svh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hAJ0Ph2EeGPm7sA61ixGw" name="getProblemSection" isQuery="true" bodyCondition="_-hAJ0_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hAJ0_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-hAJ0Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hAJ1Ph2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hAJ0fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hAJ0vh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hBX8Ph2EeGPm7sA61ixGw" name="getProceduresSection" isQuery="true" bodyCondition="_-hBX8_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hBX8_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-hBX8Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hBX9Ph2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hBX8fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hBX8vh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hB_APh2EeGPm7sA61ixGw" name="getVitalSignsSection" isQuery="true" bodyCondition="_-hCmEvh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hCmEvh2EeGPm7sA61ixGw" name="body" constrainedElement="_-hB_APh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hCmE_h2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hCmEPh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hCmEfh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hDNIPh2EeGPm7sA61ixGw" name="getResultsSection" isQuery="true" bodyCondition="_-hDNI_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hDNI_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-hDNIPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hD0MPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hDNIfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hDNIvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hD0Mfh2EeGPm7sA61ixGw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_-hD0NPh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hD0NPh2EeGPm7sA61ixGw" name="body" constrainedElement="_-hD0Mfh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hD0Nfh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hD0Mvh2EeGPm7sA61ixGw" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hD0M_h2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hFCUPh2EeGPm7sA61ixGw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_-hFCU_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hFCU_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-hFCUPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hFCVPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hFCUfh2EeGPm7sA61ixGw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hFCUvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hFpYPh2EeGPm7sA61ixGw" name="getSocialHistorySection" isQuery="true" bodyCondition="_-hFpY_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hFpY_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-hFpYPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hGQcPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hFpYfh2EeGPm7sA61ixGw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hFpYvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rsKJkPhcEeGPm7sA61ixGw" name="VDTInpatientSummary">
      <ownedComment xmi:id="_qrDxkPhfEeGPm7sA61ixGw">
        <body>MU2 170.314 (e)(1)  Inpatient Summary</body>
      </ownedComment>
      <ownedRule xmi:id="_EFIqIPheEeGPm7sA61ixGw" name="VDTInpatientSummaryEffectiveTime" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_LpyuYPheEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_IaNM8PheEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or &#xD;&#xD;&#xA;effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WH_yoPheEeGPm7sA61ixGw" name="VDTInpatientSummaryLocation" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_bra-8PheEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aLjusPheEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | &#xD;&#xD;&#xA;not location.oclIsUndefined() and location.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_GUuRsPhfEeGPm7sA61ixGw" name="VDTInpatientSummaryChiefComplaintOrReasonForVisit" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JY5NUPhfEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hIFofh2EeGPm7sA61ixGw" name="VDTInpatientSummaryHospitalDischargeInstructionsSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hIFovh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hJ60Ph2EeGPm7sA61ixGw" name="VDTInpatientSummaryHospitalAdmissionDiagnosisSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hJ60fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-jCKIPh2EeGPm7sA61ixGw" name="VDTInpatientSummaryHospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-jCKIfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-jCKIvh2EeGPm7sA61ixGw" name="VDTInpatientSummarymu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-jCKI_h2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_tK1HAPhcEeGPm7sA61ixGw" general="_i2IoQPhVEeGPm7sA61ixGw"/>
      <ownedOperation xmi:id="_-hJTwPh2EeGPm7sA61ixGw" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_-hJTw_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hJTw_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-hJTwPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hJTxPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hJTwfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hJTwvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hKh4Ph2EeGPm7sA61ixGw" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_-hLI8vh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hLI8vh2EeGPm7sA61ixGw" name="body" constrainedElement="_-hKh4Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hLI8_h2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hLI8Ph2EeGPm7sA61ixGw" type="_gl8CMODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hLI8fh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hLI9Ph2EeGPm7sA61ixGw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_-hLwAvh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hLwAvh2EeGPm7sA61ixGw" name="body" constrainedElement="_-hLI9Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hLwA_h2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hLwAPh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hLwAfh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hMXEPh2EeGPm7sA61ixGw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_-hMXE_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hMXE_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-hMXEPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hMXFPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hMXEfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hMXEvh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hM-IPh2EeGPm7sA61ixGw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_-hM-I_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hM-I_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-hM-IPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hM-JPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hM-Ifh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hM-Ivh2EeGPm7sA61ixGw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2FvMgPhcEeGPm7sA61ixGw" name="VDTAmbulatorySummary">
      <ownedComment xmi:id="_sjR3cPhfEeGPm7sA61ixGw">
        <body>MU2 170.314 (e)(1) Ambulatory Summary</body>
      </ownedComment>
      <ownedRule xmi:id="_-3broPhcEeGPm7sA61ixGw" name="VDTAmbulatorySummaryResponsibleParty" constrainedElement="_2FvMgPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_B5gVgPhdEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_A_BqQPhdEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;&#xA;cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2j8ygPhcEeGPm7sA61ixGw" general="_i2IoQPhVEeGPm7sA61ixGw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_do39kPhzEeGPm7sA61ixGw" name="FunctionalStatusSection">
      <ownedComment xmi:id="_kRURMPhzEeGPm7sA61ixGw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_JoyBcPh1EeGPm7sA61ixGw" name="mu2consolFunctionalStatusSectionCognitiveStatus" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_QyDKMPh1EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusProblemObservation)) or self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusResultObservation)) or  self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::CognitiveStatusResultOrganizer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_bj0qsPh1EeGPm7sA61ixGw" name="mu2consolFunctionalStatusSectionFunctionalStatus" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_en9xIPh1EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusProblemObservation)) or self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusResultObservation)) or self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FunctionalStatusResultOrganizer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hPaYfh2EeGPm7sA61ixGw" name="FunctionalStatusSectionTemplateId" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hPaYvh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hTr0Ph2EeGPm7sA61ixGw" name="mu2consolFunctionalStatusSectionCognitiveStatusProblemObservation" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hTr0fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusProblemObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hWIEPh2EeGPm7sA61ixGw" name="mu2consolFunctionalStatusSectionCognitiveStatusResultObservation" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hWIEfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusResultObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hYkUPh2EeGPm7sA61ixGw" name="mu2consolFunctionalStatusSectionCognitiveStatusResultOrganizer" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hYkUfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::CognitiveStatusResultOrganizer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hbAkPh2EeGPm7sA61ixGw" name="mu2consolFunctionalStatusSectionFunctionalStatusProblemObservation" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hbAkfh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusProblemObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hdc0Ph2EeGPm7sA61ixGw" name="mu2consolFunctionalStatusSectionFunctionalStatusResultObservation" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hdc0fh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusResultObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-hf5EPh2EeGPm7sA61ixGw" name="mu2consolFunctionalStatusSectionFunctionalStatusResultOrganizer" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hf5Efh2EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FunctionalStatusResultOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_do4koPhzEeGPm7sA61ixGw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KKOBhSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_-hVhAPh2EeGPm7sA61ixGw" name="getmu2consolCognitiveStatusProblemObservations" isQuery="true" bodyCondition="_-hVhA_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hVhA_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-hVhAPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hVhBPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveStatusProblemObservation)).oclAsType(consol::CognitiveStatusProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hVhAfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_dXKPQOZbEeGINOJ_SD9_dA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hVhAvh2EeGPm7sA61ixGw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hXWMPh2EeGPm7sA61ixGw" name="getmu2consolCognitiveStatusResultObservations" isQuery="true" bodyCondition="_-hX9Qvh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hX9Qvh2EeGPm7sA61ixGw" name="body" constrainedElement="_-hXWMPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hX9Q_h2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveStatusResultObservation)).oclAsType(consol::CognitiveStatusResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hX9QPh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_gkBM0OZbEeGINOJ_SD9_dA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hX9Qfh2EeGPm7sA61ixGw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hZycPh2EeGPm7sA61ixGw" name="getmu2consolCognitiveStatusResultOrganizers" isQuery="true" bodyCondition="_-haZgfh2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-haZgfh2EeGPm7sA61ixGw" name="body" constrainedElement="_-hZycPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-haZgvh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::CognitiveStatusResultOrganizer)).oclAsType(consol::CognitiveStatusResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hZycfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_jfoCUOZbEeGINOJ_SD9_dA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-haZgPh2EeGPm7sA61ixGw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hcOsPh2EeGPm7sA61ixGw" name="getmu2consolFunctionalStatusProblemObservations" isQuery="true" bodyCondition="_-hcOs_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hcOs_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-hcOsPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hcOtPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FunctionalStatusProblemObservation)).oclAsType(consol::FunctionalStatusProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hcOsfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_rVl5AOZbEeGINOJ_SD9_dA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hcOsvh2EeGPm7sA61ixGw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-heq8Ph2EeGPm7sA61ixGw" name="getmu2consolFunctionalStatusResultObservations" isQuery="true" bodyCondition="_-heq8_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-heq8_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-heq8Ph2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-heq9Ph2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FunctionalStatusResultObservation)).oclAsType(consol::FunctionalStatusResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-heq8fh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_viRU0OZbEeGINOJ_SD9_dA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-heq8vh2EeGPm7sA61ixGw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-hhHMPh2EeGPm7sA61ixGw" name="getmu2consolFunctionalStatusResultOrganizers" isQuery="true" bodyCondition="_-hhHM_h2EeGPm7sA61ixGw">
        <ownedRule xmi:id="_-hhHM_h2EeGPm7sA61ixGw" name="body" constrainedElement="_-hhHMPh2EeGPm7sA61ixGw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-hhHNPh2EeGPm7sA61ixGw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::FunctionalStatusResultOrganizer)).oclAsType(consol::FunctionalStatusResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_-hhHMfh2EeGPm7sA61ixGw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_zBlUUOZbEeGINOJ_SD9_dA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-hhHMvh2EeGPm7sA61ixGw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <profileApplication xmi:id="_mZtsIdd5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsItd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_mZtsI9d5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsJNd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_-escsPh2EeGPm7sA61ixGw">
      <eAnnotations xmi:id="_-etDwPh2EeGPm7sA61ixGw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_mbrbANd5EeGtNLA6W-IQeQ" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" packageName="mu2consol" prefix="mu2consol" base_Namespace="_mZtsINd5EeGtNLA6W-IQeQ"/>
  <CDA:CDATemplate xmi:id="_Su_88NpWEeGzu8-aAsCS4g" base_Class="_VG3DUNkxEeGsqcJR8eqiMw" templateId="2.16.840.1.113883.11.11.11.1.1" assigningAuthorityName="TEMP"/>
  <CDA:ConstraintValidation xmi:id="_39anEOF3EeGlJOFzBdwM6w" base_Constraint="_j1rcwOF3EeGlJOFzBdwM6w"/>
  <CDA:CDATemplate xmi:id="_gWeuwOmKEeGNCuDrPdW6ZA" base_Class="_ZK4bUODlEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.45"/>
  <CDA:ConstraintValidation xmi:id="_7vlYQOvXEeGkopdZmUN1Xw" base_Constraint="_gfm_8OvXEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_rb7RoOvZEeGkopdZmUN1Xw" base_Constraint="_VUReAOvZEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_f8jZYOvbEeGkopdZmUN1Xw" base_Constraint="_2nwZAN3EEeGdQcioKnmIhA"/>
  <CDA:PropertyValidation xmi:id="_njlW8OyxEeGT-eFu7Ghgjw"/>
  <CDA:CDATemplate xmi:id="_PEUjwO1WEeGT-eFu7Ghgjw" base_Class="_7D0CQOzmEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_LX7foO1YEeGT-eFu7Ghgjw" base_Constraint="_F7KU8O1YEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_nFpcgO1bEeGT-eFu7Ghgjw" base_Constraint="_kNHwMO1bEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_EAFLgO1cEeGT-eFu7Ghgjw" base_Constraint="_CFE3YO1cEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_OB8-YO4zEeGT5oaF-4NGAA" base_Constraint="_xGJ9cO4yEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_Zv0TsO4zEeGT5oaF-4NGAA" base_Constraint="_F8DOQO4zEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_apqs0O4zEeGT5oaF-4NGAA" base_Constraint="_bnbyEO4yEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_7w4lUO4zEeGT5oaF-4NGAA" base_Constraint="_1NTjkO4zEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_VvkywO5yEeGT5oaF-4NGAA" base_Constraint="_PI9EEO5yEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_r7whEO5yEeGT5oaF-4NGAA" base_Constraint="_lQwBoO5yEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_ru4GMO5zEeGT5oaF-4NGAA" base_Constraint="_nAedYO5zEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_vC6NUO50EeGT5oaF-4NGAA" base_Constraint="_oZlI4O50EeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_9cqhIO50EeGT5oaF-4NGAA" base_Constraint="_zZdW0O50EeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_RxnyoO52EeGT5oaF-4NGAA" base_Constraint="_MDXPUO52EeGT5oaF-4NGAA"/>
  <CDA:CDATemplate xmi:id="_CDXuIPK1EeGFZOE6tRcvzg" base_Class="_szTFwOF8EeGlJOFzBdwM6w" templateId="2.16.840.1.113883.10.20.22.2.6"/>
  <CDA:CDATemplate xmi:id="_TQUy0PM4EeGkZPcEpuFP6w" base_Class="_w2gYkODkEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.9"/>
  <CDA:CDATemplate xmi:id="_hwU4kPM4EeGkZPcEpuFP6w" base_Class="_CaN5MODgEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.8"/>
  <CDA:CDATemplate xmi:id="_tqLbcPM4EeGkZPcEpuFP6w" base_Class="_gl8CMODmEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.43"/>
  <CDA:CDATemplate xmi:id="_zgZn8PM4EeGkZPcEpuFP6w" base_Class="_HBzuYODrEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.44"/>
  <CDA:CDATemplate xmi:id="_6V0noPM4EeGkZPcEpuFP6w" base_Class="_qgJokODmEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.24"/>
  <CDA:CDATemplate xmi:id="_FuXNMPM5EeGkZPcEpuFP6w" base_Class="_3poqgODqEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.38"/>
  <CDA:CDATemplate xmi:id="_JM8z8PM5EeGkZPcEpuFP6w" base_Class="_svnagODKEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.10"/>
  <CDA:CDATemplate xmi:id="_L1otcPM5EeGkZPcEpuFP6w" base_Class="_y1mQkODmEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.35"/>
  <CDA:CDATemplate xmi:id="_OdNzsPM5EeGkZPcEpuFP6w" base_Class="_uvXlkODnEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.36"/>
  <CDA:CDATemplate xmi:id="_QwCx8PM5EeGkZPcEpuFP6w" base_Class="_bRRt0ODqEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.34"/>
  <CDA:CDATemplate xmi:id="_TC_sAPM5EeGkZPcEpuFP6w" base_Class="_9frdwO1UEeGT-eFu7Ghgjw" templateId="2.16.840.1.113883.10.20.22.2.17"/>
  <CDA:ConstraintValidation xmi:id="_0YItAPdxEeG_npP0e3OOEw" base_Constraint="_vSLf0PdxEeG_npP0e3OOEw"/>
  <CDA:ConstraintValidation xmi:id="_D4WE8vhWEeGPm7sA61ixGw" base_Constraint="_D4WE8PhWEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_HrUYkPhcEeGPm7sA61ixGw" base_Constraint="_CrzxoPhcEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_CUb-APhdEeGPm7sA61ixGw" base_Constraint="_-3broPhcEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_cP8oUPheEeGPm7sA61ixGw" base_Constraint="_WH_yoPheEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_dEY9APheEeGPm7sA61ixGw" base_Constraint="_EFIqIPheEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_Jsk-UPhfEeGPm7sA61ixGw" base_Constraint="_GUuRsPhfEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_fRfpkPhlEeGPm7sA61ixGw" base_Constraint="_fRfCgPhlEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_AgV0EPhmEeGPm7sA61ixGw" base_Constraint="_8kY74PhlEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_6XGoIPhpEeGPm7sA61ixGw" base_Constraint="_1Y4aoPhpEeGPm7sA61ixGw"/>
  <CDA:CDATemplate xmi:id="_md_kIPhzEeGPm7sA61ixGw" base_Class="_do39kPhzEeGPm7sA61ixGw" templateId="2.16.840.1.113883.10.20.22.2.14"/>
  <CDA:ConstraintValidation xmi:id="_SH3toPh1EeGPm7sA61ixGw" base_Constraint="_JoyBcPh1EeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_e2YAkPh1EeGPm7sA61ixGw" base_Constraint="_bj0qsPh1EeGPm7sA61ixGw"/>
  <Ecore:EPackage xmi:id="_-ezKYPh2EeGPm7sA61ixGw" base_Package="_mZtsINd5EeGtNLA6W-IQeQ" packageName="mu2consol" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" basePackage="org.openhealthtools.mdht.uml.cda" prefix="mu2consol">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.mu2consol'</annotation>
  </Ecore:EPackage>
  <Ecore:EClass xmi:id="_-fAlwPh2EeGPm7sA61ixGw" base_Class="_v-6qsNkMEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolGeneralHeaderConstraintsRecordTarget mu2consolGeneralHeaderConstraintsDocumentationOf GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent GeneralHeaderConstraintsComponent1EncompassingEncounterEncounterParticipant GeneralHeaderConstraintsComponent1EncompassingEncounter' constraints.validation.query='GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent GeneralHeaderConstraintsComponent1EncompassingEncounterEncounterParticipant GeneralHeaderConstraintsComponent1EncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTarget constraints.validation.error='RecordTargetPatientRole RecordTargetPatientRolePatientEthnicGroupCode RecordTargetPatientRolePatientEthnicGroupCodeP RecordTargetPatientRolePatientRaceCode RecordTargetPatientRolePatientRaceCodeP RecordTargetPatientRolePatientLanguageCommunication RecordTargetPatientRolePatient' constraints.validation.query='RecordTargetPatientRolePatientEthnicGroupCode RecordTargetPatientRolePatientEthnicGroupCodeP RecordTargetPatientRolePatientRaceCode RecordTargetPatientRolePatientRaceCodeP RecordTargetPatientRolePatientLanguageCommunication RecordTargetPatientRolePatient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRole constraints.validation.error='PatientRolePatient PatientRolePatientEthnicGroupCode PatientRolePatientEthnicGroupCodeP PatientRolePatientRaceCode PatientRolePatientRaceCodeP PatientRolePatientLanguageCommunication' constraints.validation.query='PatientRolePatientEthnicGroupCode PatientRolePatientEthnicGroupCodeP PatientRolePatientRaceCode PatientRolePatientRaceCodeP PatientRolePatientLanguageCommunication'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRolePatient ethnicGroupCode.codeSystem='2.16.840.1.113883.6.238' ethnicGroupCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.error='PatientEthnicGroupCode PatientEthnicGroupCodeP PatientRaceCode PatientRaceCodeP PatientLanguageCommunication' raceCode.codeSystem='2.16.840.1.113883.6.238' raceCode.codeSystemName='Race and Ethnicity - CDC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOf constraints.validation.error='DocumentationOfServiceEvent DocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson DocumentationOfServiceEventPerformer1AssignedEntity DocumentationOfServiceEventPerformer' constraints.validation.query='DocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson DocumentationOfServiceEventPerformer1AssignedEntity DocumentationOfServiceEventPerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEvent constraints.validation.error='ServiceEventPerformer ServiceEventPerformer1AssignedEntityAssignedPerson ServiceEventPerformer1AssignedEntity' constraints.validation.query='ServiceEventPerformer1AssignedEntityAssignedPerson ServiceEventPerformer1AssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEventPerformer1 constraints.validation.error='Performer1AssignedEntity Performer1AssignedEntityAssignedPerson' constraints.validation.query='Performer1AssignedEntityAssignedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity constraints.validation.error='AssignedEntityAssignedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsComponent1 constraints.validation.error='Component1EncompassingEncounter Component1EncompassingEncounterEncounterParticipant' constraints.validation.query='Component1EncompassingEncounterEncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsComponent1EncompassingEncounter constraints.validation.error='EncompassingEncounterEncounterParticipant'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-fCa8Ph2EeGPm7sA61ixGw" base_Generalization="_VG3qYNkxEeGsqcJR8eqiMw"/>
  <CDA:ConformsTo xmi:id="_-fDCAPh2EeGPm7sA61ixGw" base_Generalization="_v-6qsdkMEeGsqcJR8eqiMw"/>
  <Ecore:EClass xmi:id="_-fDpEPh2EeGPm7sA61ixGw" base_Class="_VG3DUNkxEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SummaryOfCareRecordTemplateId SummaryOfCareRecordMu2EncounterDiagnosesRequirements SummaryOfCareRecordCarePlanning SummaryOfCareRecordReasonForHospitalization SummaryOfCareRecordPlanOfCareSection SummaryOfCareRecordProblemSection SummaryOfCareRecordAllergiesSection SummaryOfCareRecordImmunizationsSection SummaryOfCareRecordMedicationsAdministeredSection SummaryOfCareRecordMedicationsSection SummaryOfCareRecordHospitalDischargeMedicationsSection SummaryOfCareRecordSocialHistorySection SummaryOfCareRecordResultsSection SummaryOfCareRecordVitalSignsSection SummaryOfCareRecordProceduresSection SummaryOfCareRecordFunctionalStatusSection SummaryOfCareRecordSocialHistorySectionTemplateId SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation SummaryOfCareRecordHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation SummaryOfCareRecordPlanOfCareSectionTemplateId SummaryOfCareRecordMedicationsAdministeredSectionTemplateId SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity SummaryOfCareRecordAssessmentAndPlanSectionTemplateId SummaryOfCareRecordAssessmentSectionTemplateId SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation SummaryOfCareRecordHospitalAdmissionDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis SummaryOfCareRecordHospitalDischargeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis SummaryOfCareRecordPostoperativeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation SummaryOfCareRecordPostprocedureDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis SummaryOfCareRecordPreoperativeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatus SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatus SummaryOfCareRecordFunctionalStatusSectionTemplateId' templateId.root='2.16.840.1.113883.11.11.11.1.1' constraints.validation.query='SummaryOfCareRecordSocialHistorySectionTemplateId SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation SummaryOfCareRecordHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation SummaryOfCareRecordPlanOfCareSectionTemplateId SummaryOfCareRecordMedicationsAdministeredSectionTemplateId SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity SummaryOfCareRecordAssessmentAndPlanSectionTemplateId SummaryOfCareRecordAssessmentSectionTemplateId SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation SummaryOfCareRecordHospitalAdmissionDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis SummaryOfCareRecordHospitalDischargeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis SummaryOfCareRecordPostoperativeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation SummaryOfCareRecordPostprocedureDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis SummaryOfCareRecordPreoperativeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatus SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatus SummaryOfCareRecordFunctionalStatusSectionTemplateId SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusProblemObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusResultObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusResultOrganizer SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusProblemObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusResultObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusResultOrganizer' constraints.validation.info='SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusProblemObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusResultObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusResultOrganizer SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusProblemObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusResultObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusResultOrganizer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_-fdRsPh2EeGPm7sA61ixGw" base_Class="_svnagODKEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPlanOfCareSectionPlanOfCareActivityObservation mu2consolPlanOfCareSectionTemplateId mu2consolPlanOfCareSectionCarePlanningForPlanOfCare' templateId.root='2.16.840.1.113883.10.20.22.2.10'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-fft9fh2EeGPm7sA61ixGw" base_Generalization="_vqugwODKEeGdSJSga09Dyg"/>
  <CDA:ConformsTo xmi:id="_-fiKMPh2EeGPm7sA61ixGw" base_Generalization="_D0JgkODgEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_-fixQPh2EeGPm7sA61ixGw" base_Class="_CaN5MODgEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAssessmentSectionTemplateId mu2consolAssessmentSectionProblemObservation' templateId.root='2.16.840.1.113883.10.20.22.2.8'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_-flNgPh2EeGPm7sA61ixGw" base_Class="_g1AyQODhEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AssessmentAndPlanForConditionOrConcernProblemObservation'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-fl0kPh2EeGPm7sA61ixGw" base_Generalization="_ySywYODkEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_-fmboPh2EeGPm7sA61ixGw" base_Class="_w2gYkODkEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAssessmentAndPlanSectionTemplateId' templateId.root='2.16.840.1.113883.10.20.22.2.9'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-fo34vh2EeGPm7sA61ixGw" base_Generalization="_avPxEODlEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_-fqGAPh2EeGPm7sA61ixGw" base_Class="_ZK4bUODlEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolInstructionsSectionTemplateId mu2consolInstructionsSectionInstructions' templateId.root='2.16.840.1.113883.10.20.22.2.45'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-fr7Nfh2EeGPm7sA61ixGw" base_Generalization="_jgg88ODmEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_-ftJUPh2EeGPm7sA61ixGw" base_Class="_gl8CMODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalAdmissionDiagnosisSectionTemplateId mu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.43'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-fu-gfh2EeGPm7sA61ixGw" base_Generalization="_rXMlUODmEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_-fvlkPh2EeGPm7sA61ixGw" base_Class="_qgJokODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalDischargeDiagnosisSectionTemplateId mu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.24'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-fxaxfh2EeGPm7sA61ixGw" base_Generalization="_zVobgODmEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_-fyo4Ph2EeGPm7sA61ixGw" base_Class="_y1mQkODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPostoperativeDiagnosisSectionTemplateId mu2consolPostoperativeDiagnosisSectionProblemObservation' templateId.root='2.16.840.1.113883.10.20.22.2.35'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-f0eEPh2EeGPm7sA61ixGw" base_Generalization="_vj29kODnEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_-f1FIPh2EeGPm7sA61ixGw" base_Class="_uvXlkODnEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPostprocedureDiagnosisSectionTemplateId mu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.36'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-f26Ufh2EeGPm7sA61ixGw" base_Generalization="_b5wDEODqEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_-f3hYPh2EeGPm7sA61ixGw" base_Class="_bRRt0ODqEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPreoperativeDiagnosisSectionTemplateId mu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.34'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-f5WlPh2EeGPm7sA61ixGw" base_Generalization="_4XEYQODqEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_-f59oPh2EeGPm7sA61ixGw" base_Class="_3poqgODqEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolMedicationsAdministeredSectionTemplateId mu2consolMedicationsAdministeredSectionMedicationActivity' templateId.root='2.16.840.1.113883.10.20.22.2.38'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-f7y1fh2EeGPm7sA61ixGw" base_Generalization="_Hm_fEODrEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_-f8Z4fh2EeGPm7sA61ixGw" base_Class="_HBzuYODrEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication' templateId.root='2.16.840.1.113883.10.20.22.2.44'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-f-PFfh2EeGPm7sA61ixGw" base_Generalization="_ugMFYOF8EeGlJOFzBdwM6w"/>
  <Ecore:EClass xmi:id="_-f-2Ivh2EeGPm7sA61ixGw" base_Class="_szTFwOF8EeGlJOFzBdwM6w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAllergiesSectionEntriesOptionalTemplateId mu2consolAllergiesSectionEntriesOptionalAllergyProblemAct' templateId.root='2.16.840.1.113883.10.20.22.2.6'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-gArVfh2EeGPm7sA61ixGw" base_Generalization="_7D0pUOzmEeGT-eFu7Ghgjw"/>
  <Ecore:EClass xmi:id="_-gB5cPh2EeGPm7sA61ixGw" base_Class="_7D0CQOzmEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ClinicalOfficeVisitSummaryTemplateId ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryReasonForOfficeVisit ClinicalOfficeVisitSummaryCarePlanning ClinicalOfficeVisitSummaryEffectiveTime ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummaryPlanOfCareActOrEncounter ClinicalOfficeVisitSummaryProblemSection ClinicalOfficeVisitSummaryMedicationsSection ClinicalOfficeVisitSummaryAllergiesSection ClinicalOfficeVisitSummaryResultsSection ClinicalOfficeVisitSummaryVitalSignsSection ClinicalOfficeVisitSummaryPlanOfCareSection ClinicalOfficeVisitSummaryProceduresSection ClinicalOfficeVisitSummaryImmunizationsSection ClinicalOfficeVisitSummaryMedicationsAdministeredSection ClinicalOfficeVisitSummaryInstructionsSection ClinicalOfficeVisitSummarySocialHistorySection ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation ClinicalOfficeVisitSummaryPlanOfCareSectionTemplateId ClinicalOfficeVisitSummaryMedicationsAdministeredSectionTemplateId ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity ClinicalOfficeVisitSummaryAssessmentAndPlanSectionTemplateId ClinicalOfficeVisitSummaryInstructionsSectionTemplateId ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions ClinicalOfficeVisitSummarySocialHistorySectionTemplateId ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation' templateId.root='null' constraints.validation.query='ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryEffectiveTime ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummaryPlanOfCareActOrEncounter ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation ClinicalOfficeVisitSummaryPlanOfCareSectionTemplateId ClinicalOfficeVisitSummaryMedicationsAdministeredSectionTemplateId ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity ClinicalOfficeVisitSummaryAssessmentAndPlanSectionTemplateId ClinicalOfficeVisitSummaryInstructionsSectionTemplateId ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions ClinicalOfficeVisitSummarySocialHistorySectionTemplateId ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-gHZA_h2EeGPm7sA61ixGw" base_Generalization="_-2YyAO1UEeGT-eFu7Ghgjw"/>
  <Ecore:EClass xmi:id="_-gIAEfh2EeGPm7sA61ixGw" base_Class="_9frdwO1UEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolSocialHistorySectionTemplateId mu2consolSocialHistorySectionSmokingStatusObservation' templateId.root='2.16.840.1.113883.10.20.22.2.17'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_-gU0Yvh2EeGPm7sA61ixGw" base_Class="_C0_BkO4xEeGT5oaF-4NGAA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='VDTInpatientPatientInfoResponsibleParty VDTInpatientPatientInfoSocialHistorySectionTemplateId VDTInpatientPatientInfomu2consolSocialHistorySectionSmokingStatusObservation VDTInpatientPatientInfoHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId VDTInpatientPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication VDTInpatientPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare VDTInpatientPatientInfomu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation VDTInpatientPatientInfoPlanOfCareSectionTemplateId' constraints.validation.error='VDTInpatientPatientInfoResponsibleParty VDTInpatientPatientInfoMedicationList VDTInpatientPatientInfoCanHaveEitherVitalSignsRequiedOrOptionalEntry VDTInpatientPatientInfoCanHaveEitherAllergyRequiredOrOptionalEntry VDTInpatientPatientInfoSocialHistorySection VDTInpatientPatientInfoProblemSection VDTInpatientPatientInfoResultsSection VDTInpatientPatientInfoPlanOfCareSection VDTInpatientPatientInfoProceduresSection VDTInpatientPatientInfoSocialHistorySectionTemplateId VDTInpatientPatientInfomu2consolSocialHistorySectionSmokingStatusObservation VDTInpatientPatientInfoHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId VDTInpatientPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication VDTInpatientPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare VDTInpatientPatientInfomu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation VDTInpatientPatientInfoPlanOfCareSectionTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_-ggakPh2EeGPm7sA61ixGw" base_Class="_tzbWgO40EeGT5oaF-4NGAA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VDTAmbulatoryPatientInfoMedicationList VDTAmbulatoryPatientInfoMedicationAllergy VDTAmbulatoryPatientInfoCanHaveEitherVitalSignsRequiedOrOptionalEntry VDTAmbulatoryPatientInfoCanHaveEitherAllergyRequiredOrOptionalEntry VDTAmbulatoryPatientInfoCanHaveEitherEncountersRequiredOrOptionalEntry VDTAmbulatoryPatientInfoReasonForHospitalization VDTAmbulatoryPatientInfoSocialHistorySection VDTAmbulatoryPatientInfoProblemSection VDTAmbulatoryPatientInfoResultsSection VDTAmbulatoryPatientInfoPlanOfCareSection VDTAmbulatoryPatientInfoProceduresSection VDTAmbulatoryPatientInfoHospitalDischargeInstructionsSection VDTAmbulatoryPatientInfoSocialHistorySectionTemplateId VDTAmbulatoryPatientInfomu2consolSocialHistorySectionSmokingStatusObservation VDTAmbulatoryPatientInfoHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId VDTAmbulatoryPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication VDTAmbulatoryPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare VDTAmbulatoryPatientInfomu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation VDTAmbulatoryPatientInfoPlanOfCareSectionTemplateId VDTAmbulatoryPatientInfoHospitalAdmissionDiagnosisSectionTemplateId VDTAmbulatoryPatientInfomu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis' constraints.validation.query='VDTAmbulatoryPatientInfoSocialHistorySectionTemplateId VDTAmbulatoryPatientInfomu2consolSocialHistorySectionSmokingStatusObservation VDTAmbulatoryPatientInfoHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId VDTAmbulatoryPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication VDTAmbulatoryPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare VDTAmbulatoryPatientInfomu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation VDTAmbulatoryPatientInfoPlanOfCareSectionTemplateId VDTAmbulatoryPatientInfoHospitalAdmissionDiagnosisSectionTemplateId VDTAmbulatoryPatientInfomu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_-gwSMPh2EeGPm7sA61ixGw" base_Class="_UGcMgPabEeGi99B_x568TQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='TransitionOfCareAmbulatorySummaryResponsibleParty' constraints.validation.error='TransitionOfCareAmbulatorySummaryResponsibleParty TransitionOfCareAmbulatorySummaryReasonForReferralSection'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_-g1KsPh2EeGPm7sA61ixGw" base_Class="_uu2T0PdyEeG_npP0e3OOEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransitionOfCareInpatientSummaryHospitalDischargeInstructionsSection'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_-g6qQPh2EeGPm7sA61ixGw" base_Class="_i2IoQPhVEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ViewDownloadTransmitSummaryMedicationAllergy ViewDownloadTransmitSummaryCarePlanFields ViewDownloadTransmitSummaryAllergiesSection ViewDownloadTransmitSummaryMedicationsSection ViewDownloadTransmitSummaryHospitalDischargeMedicationsSection ViewDownloadTransmitSummaryProblemSection ViewDownloadTransmitSummaryProceduresSection ViewDownloadTransmitSummaryVitalSignsSection ViewDownloadTransmitSummaryResultsSection ViewDownloadTransmitSummaryPlanOfCareSection ViewDownloadTransmitSummarySocialHistorySection ViewDownloadTransmitSummaryAssessmentAndPlanSectionTemplateId ViewDownloadTransmitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ViewDownloadTransmitSummarymu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation ViewDownloadTransmitSummaryPlanOfCareSectionTemplateId ViewDownloadTransmitSummarySocialHistorySectionTemplateId ViewDownloadTransmitSummarymu2consolSocialHistorySectionSmokingStatusObservation' constraints.validation.query='ViewDownloadTransmitSummaryAssessmentAndPlanSectionTemplateId ViewDownloadTransmitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ViewDownloadTransmitSummarymu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation ViewDownloadTransmitSummaryPlanOfCareSectionTemplateId ViewDownloadTransmitSummarySocialHistorySectionTemplateId ViewDownloadTransmitSummarymu2consolSocialHistorySectionSmokingStatusObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_-hGQcfh2EeGPm7sA61ixGw" base_Class="_rsKJkPhcEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='VDTInpatientSummaryEffectiveTime VDTInpatientSummaryLocation VDTInpatientSummaryHospitalAdmissionDiagnosisSectionTemplateId VDTInpatientSummarymu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis' constraints.validation.error='VDTInpatientSummaryEffectiveTime VDTInpatientSummaryLocation VDTInpatientSummaryChiefComplaintOrReasonForVisit VDTInpatientSummaryHospitalDischargeInstructionsSection VDTInpatientSummaryHospitalAdmissionDiagnosisSection VDTInpatientSummaryHospitalAdmissionDiagnosisSectionTemplateId VDTInpatientSummarymu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_-hIFoPh2EeGPm7sA61ixGw" base_Class="_2FvMgPhcEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='VDTAmbulatorySummaryResponsibleParty' constraints.validation.error='VDTAmbulatorySummaryResponsibleParty'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_-hPaYPh2EeGPm7sA61ixGw" base_Generalization="_do4koPhzEeGPm7sA61ixGw"/>
  <Ecore:EClass xmi:id="_-hQogPh2EeGPm7sA61ixGw" base_Class="_do39kPhzEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolFunctionalStatusSectionTemplateId mu2consolFunctionalStatusSectionCognitiveStatus mu2consolFunctionalStatusSectionFunctionalStatus' templateId.root='2.16.840.1.113883.10.20.22.2.14' constraints.validation.info='mu2consolFunctionalStatusSectionCognitiveStatusProblemObservation mu2consolFunctionalStatusSectionCognitiveStatusResultObservation mu2consolFunctionalStatusSectionCognitiveStatusResultOrganizer mu2consolFunctionalStatusSectionFunctionalStatusProblemObservation mu2consolFunctionalStatusSectionFunctionalStatusResultObservation mu2consolFunctionalStatusSectionFunctionalStatusResultOrganizer'</annotation>
  </Ecore:EClass>
</xmi:XMI>
