<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_mZtsINd5EeGtNLA6W-IQeQ" name="mu2consol">
    <packageImport xmi:id="_mdYrMtd5EeGtNLA6W-IQeQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.mu2consol.model/model/mu2consol-vocab.uml#_mZ-K0Nd5EeGtNLA6W-IQeQ"/>
    </packageImport>
    <packageImport xmi:id="_HE5v4Ng-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packageImport xmi:id="_qktQYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_sCPlYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_v-6qsNkMEeGsqcJR8eqiMw" name="GeneralHeaderConstraints">
      <ownedComment xmi:id="_BHY70OMDEeGwErp-HM3_kQ">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_usPI0P0REeGlaomQ_EyHlg" name="mu2consolGeneralHeaderConstraintsRecordTarget" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usPI0f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.recordTarget->exists(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usXEoP0REeGlaomQ_EyHlg" name="mu2consolGeneralHeaderConstraintsDocumentationOf" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usXEof0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuwRUP0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuwRUf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined() and ethnicGroupCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = ethnicGroupCode.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.238' and (value.code = '2135-2' or value.code = '2186-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuwRUv0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuwRU_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuwRVP0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuwRVf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined() and raceCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = raceCode.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.238' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuwRVv0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuw4YP0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuw4Yf0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuw4Yv0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(languageCommunication->one(languageCommunication : cda::LanguageCommunication | not languageCommunication.oclIsUndefined() and languageCommunication.oclIsKindOf(cda::LanguageCommunication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuw4Y_0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsRecordTargetPatientRolePatient" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuw4ZP0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject(patient->one(patient : cda::Patient | not patient.oclIsUndefined() and patient.oclIsKindOf(cda::Patient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuw4Zf0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsRecordTargetPatientRole" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuw4Zv0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null)->reject(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuzUoP0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuzUof0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(rim::Entity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuz7sP0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuz7sf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuz7sv0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuz7s_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->one(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuz7tP0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsDocumentationOfServiceEvent" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuz7tf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uu1J0P0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsComponent1EncompassingEncounterEncounterParticipant" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uu1J0f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->exists(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uu1w4P0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsComponent1EncompassingEncounter" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uu1w4f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_v-6qsdkMEeGsqcJR8eqiMw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VG3DUNkxEeGsqcJR8eqiMw" name="SummaryOfCareRecord">
      <ownedComment xmi:id="_OaVzYNpiEeGzu8-aAsCS4g">
        <body>Summary Of Care Record</body>
      </ownedComment>
      <ownedRule xmi:id="_2nwZAN3EEeGdQcioKnmIhA" name="SummaryOfCareRecordMu2EncounterDiagnosesRequirements" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_K7mFoN3FEeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalDischargeDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PostoperativeDiagnosisSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PostprocedureDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gfm_8OvXEeGkopdZmUN1Xw" name="SummaryOfCareRecordCarePlanning" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jopNcOvXEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::InterventionsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VUReAOvZEeGkopdZmUN1Xw" name="SummaryOfCareRecordReasonForHospitalization" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZBL0oOvZEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PreoperativeDiagnosisSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usRlEf0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usSMIP0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.11.11.11.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usY50P0REeGlaomQ_EyHlg" name="SummaryOfCareRecordPlanOfCareSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usY50f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usckMf0REeGlaomQ_EyHlg" name="SummaryOfCareRecordProblemSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usckMv0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usdyVf0REeGlaomQ_EyHlg" name="SummaryOfCareRecordAllergiesSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usdyVv0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usgOkv0REeGlaomQ_EyHlg" name="SummaryOfCareRecordImmunizationsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usgOk_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usiDwP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordMedicationsAdministeredSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usiDwf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usjR4P0REeGlaomQ_EyHlg" name="SummaryOfCareRecordMedicationsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usjR4f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uslHEP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordHospitalDischargeMedicationsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uslHEf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usmVMf0REeGlaomQ_EyHlg" name="SummaryOfCareRecordSocialHistorySection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usmVMv0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usnjUv0REeGlaomQ_EyHlg" name="SummaryOfCareRecordResultsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usnjU_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uspYgP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordVitalSignsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uspYgf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usqmoP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordProceduresSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usqmof0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uulSMv0REeGlaomQ_EyHlg" name="SummaryOfCareRecordFunctionalStatusSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uulSM_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::FunctionalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvFogP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordSocialHistorySectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvFogf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvFogv0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvFog_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(mu2consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvG2oP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvG2of0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvG2ov0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvHdsP0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvIr0P0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvIr0f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvIr0v0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvIr0_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvJS4P0REeGlaomQ_EyHlg" name="SummaryOfCareRecordPlanOfCareSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvJS4f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvKhAP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordMedicationsAdministeredSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvKhAf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.38'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvKhAv0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvKhA_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvMWMP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordAssessmentAndPlanSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvMWMf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAssessmentAndPlanSection()->excluding(null)->reject(getAssessmentAndPlanSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvOLYP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordAssessmentSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvOLYf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAssessmentSection()->excluding(null)->reject(getAssessmentSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.8'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvOLYv0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvOLY_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAssessmentSection()->excluding(null)->reject(getAssessmentSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvQAkP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordHospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvQAkf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvQnoP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvQnof0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvSc0P0REeGlaomQ_EyHlg" name="SummaryOfCareRecordHospitalDischargeDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvSc0f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getHospitalDischargeDiagnosisSection()->excluding(null)->reject(getHospitalDischargeDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.24'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvTD4P0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvTD4f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getHospitalDischargeDiagnosisSection()->excluding(null)->reject(getHospitalDischargeDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvUSAP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordPostoperativeDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvUSAf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPostoperativeDiagnosisSection()->excluding(null)->reject(getPostoperativeDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.35'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvU5EP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvU5Ef0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPostoperativeDiagnosisSection()->excluding(null)->reject(getPostoperativeDiagnosisSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvWHMP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordPostprocedureDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvWHMf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPostprocedureDiagnosisSection()->excluding(null)->reject(getPostprocedureDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.36'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvWuQP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvWuQf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPostprocedureDiagnosisSection()->excluding(null)->reject(getPostprocedureDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvXVUP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordPreoperativeDiagnosisSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvXVUf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPreoperativeDiagnosisSection()->excluding(null)->reject(getPreoperativeDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.34'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvX8YP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvX8Yf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPreoperativeDiagnosisSection()->excluding(null)->reject(getPreoperativeDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvZxkP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatus" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvZxkf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusProblemObservation)) or getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusResultObservation)) or  getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::CognitiveStatusResultOrganizer)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvaYoP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatus" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uva_sP0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusProblemObservation)) or getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusResultObservation)) or getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FunctionalStatusResultOrganizer)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uva_sf0REeGlaomQ_EyHlg" name="SummaryOfCareRecordFunctionalStatusSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uva_sv0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.14'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvbmwP0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvbmwf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvbmwv0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusResultObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvbmw_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusResultObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvcN0P0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusResultOrganizer" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvcN0f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::CognitiveStatusResultOrganizer)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvcN0v0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvcN0_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvc04P0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusResultObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvc04f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusResultObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvdb8P0REeGlaomQ_EyHlg" name="SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusResultOrganizer" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvdb8f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getFunctionalStatusSection()->excluding(null)->reject(getFunctionalStatusSection().entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FunctionalStatusResultOrganizer)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VG3qYNkxEeGsqcJR8eqiMw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_usYSwP0REeGlaomQ_EyHlg" name="getEncountersSection" isQuery="true" bodyCondition="_usYSw_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usYSw_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usYSwP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usYSxP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection))->asSequence()->any(true).oclAsType(consol::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usYSwf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LWg0BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usYSwv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usZg4P0REeGlaomQ_EyHlg" name="getPlanOfCareSection" isQuery="true" bodyCondition="_usZg4_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usZg4_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usZg4P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usZg5P0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usZg4f0REeGlaomQ_EyHlg" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usZg4v0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usaH8P0REeGlaomQ_EyHlg" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_usaH8_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usaH8_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usaH8P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usaH9P0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usaH8f0REeGlaomQ_EyHlg" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usaH8v0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usaH9f0REeGlaomQ_EyHlg" name="getInterventionsSection" isQuery="true" bodyCondition="_usavAP0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usavAP0REeGlaomQ_EyHlg" name="body" constrainedElement="_usaH9f0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usavAf0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection))->asSequence()->any(true).oclAsType(consol::InterventionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usaH9v0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_hqzJADVyEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usaH9_0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usavAv0REeGlaomQ_EyHlg" name="getAssessmentSection" isQuery="true" bodyCondition="_usavBf0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usavBf0REeGlaomQ_EyHlg" name="body" constrainedElement="_usavAv0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usavBv0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usavA_0REeGlaomQ_EyHlg" type="_CaN5MODgEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usavBP0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usbWEP0REeGlaomQ_EyHlg" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_usbWE_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usbWE_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usbWEP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usbWFP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usbWEf0REeGlaomQ_EyHlg" type="_gl8CMODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usbWEv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usb9IP0REeGlaomQ_EyHlg" name="getHospitalDischargeDiagnosisSection" isQuery="true" bodyCondition="_usb9I_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usb9I_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usb9IP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usb9JP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalDischargeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usb9If0REeGlaomQ_EyHlg" type="_qgJokODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usb9Iv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usb9Jf0REeGlaomQ_EyHlg" name="getPostoperativeDiagnosisSection" isQuery="true" bodyCondition="_usb9KP0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usb9KP0REeGlaomQ_EyHlg" name="body" constrainedElement="_usb9Jf0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usckMP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PostoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PostoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usb9Jv0REeGlaomQ_EyHlg" type="_y1mQkODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usb9J_0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usdyUP0REeGlaomQ_EyHlg" name="getProblemSection" isQuery="true" bodyCondition="_usdyU_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usdyU_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usdyUP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usdyVP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usdyUf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usdyUv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usfAcP0REeGlaomQ_EyHlg" name="getAllergiesSection" isQuery="true" bodyCondition="_usfAc_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usfAc_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usfAcP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usfAdP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usfAcf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usfAcv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usfngP0REeGlaomQ_EyHlg" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_usfng_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usfng_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usfngP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usfnhP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usfngf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PQJcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usfngv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usfnhf0REeGlaomQ_EyHlg" name="getPreoperativeDiagnosisSection" isQuery="true" bodyCondition="_usgOkP0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usgOkP0REeGlaomQ_EyHlg" name="body" constrainedElement="_usfnhf0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usgOkf0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PreoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usfnhv0REeGlaomQ_EyHlg" type="_bRRt0ODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usfnh_0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ushcsP0REeGlaomQ_EyHlg" name="getImmunizationsSection" isQuery="true" bodyCondition="_ushcs_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_ushcs_0REeGlaomQ_EyHlg" name="body" constrainedElement="_ushcsP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ushctP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ushcsf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ushcsv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usiq0P0REeGlaomQ_EyHlg" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_usiq0_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usiq0_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usiq0P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usiq1P0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(mu2consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usiq0f0REeGlaomQ_EyHlg" type="_3poqgODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usiq0v0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usj48P0REeGlaomQ_EyHlg" name="getMedicationsSection" isQuery="true" bodyCondition="_usj48_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usj48_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usj48P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usj49P0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usj48f0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usj48v0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uskgAP0REeGlaomQ_EyHlg" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_uskgA_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uskgA_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uskgAP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uskgBP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uskgAf0REeGlaomQ_EyHlg" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uskgAv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usluIP0REeGlaomQ_EyHlg" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_usluI_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usluI_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usluIP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usmVMP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usluIf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usluIv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usm8QP0REeGlaomQ_EyHlg" name="getSocialHistorySection" isQuery="true" bodyCondition="_usnjUP0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usnjUP0REeGlaomQ_EyHlg" name="body" constrainedElement="_usm8QP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usnjUf0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usm8Qf0REeGlaomQ_EyHlg" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usm8Qv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usoxcP0REeGlaomQ_EyHlg" name="getResultsSection" isQuery="true" bodyCondition="_usoxc_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usoxc_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usoxcP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usoxdP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usoxcf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usoxcv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usp_kP0REeGlaomQ_EyHlg" name="getVitalSignsSection" isQuery="true" bodyCondition="_usp_k_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usp_k_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usp_kP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usp_lP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usp_kf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usp_kv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usr0wP0REeGlaomQ_EyHlg" name="getProceduresSection" isQuery="true" bodyCondition="_usr0w_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usr0w_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usr0wP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usr0xP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usr0wf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usr0wv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ussb0P0REeGlaomQ_EyHlg" name="getPostprocedureDiagnosisSection" isQuery="true" bodyCondition="_ustC4P0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_ustC4P0REeGlaomQ_EyHlg" name="body" constrainedElement="_ussb0P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ustC4f0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PostprocedureDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PostprocedureDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ussb0f0REeGlaomQ_EyHlg" type="_uvXlkODnEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ussb0v0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uul5QP0REeGlaomQ_EyHlg" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_uumgUf0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uumgUf0REeGlaomQ_EyHlg" name="body" constrainedElement="_uul5QP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uumgUv0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::FunctionalStatusSection))->asSequence()->any(true).oclAsType(mu2consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uul5Qf0REeGlaomQ_EyHlg" type="_do39kPhzEeGPm7sA61ixGw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uumgUP0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ec-GAODeEeGdSJSga09Dyg" name="AssessmentAndPlanForCarePlanning">
      <ownedComment xmi:id="_XvBEkOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_VDXc8OJREeGzd4w2xo094w" name="AssessmentAndPlanForCarePlanningOneOfPlanOfCareEntry" constrainedElement="_Ec-GAODeEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uj1mgOJREeGzd4w2xo094w">
          <language>OCL</language>
          <body>self.getProcedures()->exists(p : cda::Procedure | p.oclIsKindOf(consol::PlanOfCareActivityProcedure)) or self.getSubstanceAdministrations()->exists(s : cda::SubstanceAdministration | s.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration)) or self.getSupplies()->exists(sp : cda::Supply | sp.oclIsKindOf(consol::PlanOfCareActivitySupply))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FkUIkODeEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_uswtQP0REeGlaomQ_EyHlg" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_uswtQ_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uswtQ_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uswtQP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uswtRP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uswtQf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uswtQv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usxUUP0REeGlaomQ_EyHlg" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_usx7YP0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usx7YP0REeGlaomQ_EyHlg" name="body" constrainedElement="_usxUUP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usx7Yf0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usxUUf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usxUUv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usx7Yv0REeGlaomQ_EyHlg" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_usyicv0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usyicv0REeGlaomQ_EyHlg" name="body" constrainedElement="_usx7Yv0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usyic_0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usyicP0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usyicf0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_svnagODKEeGdSJSga09Dyg" name="PlanOfCareSection">
      <ownedComment xmi:id="_wajPYOFzEeGlJOFzBdwM6w">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_j1rcwOF3EeGlJOFzBdwM6w" name="mu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qaLEgOF3EeGlJOFzBdwM6w">
          <language>OCL</language>
          <body>self.getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or self.getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or self.getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usuRAP0REeGlaomQ_EyHlg" name="mu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usuRAf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uszJgf0REeGlaomQ_EyHlg" name="PlanOfCareSectionTemplateId" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uszJgv0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vqugwODKEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_ustC4v0REeGlaomQ_EyHlg" name="getmu2consolPlanOfCareActivityAct" isQuery="true" bodyCondition="_ustC5f0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_ustC5f0REeGlaomQ_EyHlg" name="body" constrainedElement="_ustC4v0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ustp8P0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlanOfCareActivityAct))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ustC4_0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWE5xSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ustC5P0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ustp8f0REeGlaomQ_EyHlg" name="getmu2consolPlanOfCareActivityEncounter" isQuery="true" bodyCondition="_ustp9P0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_ustp9P0REeGlaomQ_EyHlg" name="body" constrainedElement="_ustp8f0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ustp9f0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityEncounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ustp8v0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWFBBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ustp8_0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usvfIP0REeGlaomQ_EyHlg" name="getmu2consolPlanOfCareActivityObservation" isQuery="true" bodyCondition="_usvfI_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_usvfI_0REeGlaomQ_EyHlg" name="body" constrainedElement="_usvfIP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usvfJP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlanOfCareActivityObservation))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usvfIf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NcLjhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usvfIv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CaN5MODgEeGdSJSga09Dyg" name="AssessmentSection">
      <ownedComment xmi:id="_dY-WsOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_us0-sf0REeGlaomQ_EyHlg" name="AssessmentSectionTemplateId" constrainedElement="_CaN5MODgEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_us1lwP0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_us3a8P0REeGlaomQ_EyHlg" name="mu2consolAssessmentSectionProblemObservation" constrainedElement="_CaN5MODgEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_us3a8f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D0JgkODgEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_W8pI4DszEeGvzMYhXuqAEA"/>
      </generalization>
      <ownedOperation xmi:id="_us4pEP0REeGlaomQ_EyHlg" name="getProblemObservation" isQuery="true" bodyCondition="_us5QIf0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_us5QIf0REeGlaomQ_EyHlg" name="body" constrainedElement="_us4pEP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_us5QIv0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_us4pEf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_us5QIP0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g1AyQODhEeGdSJSga09Dyg" name="AssessmentAndPlanForConditionOrConcern">
      <ownedComment xmi:id="_Zls5YOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_us53MP0REeGlaomQ_EyHlg" name="AssessmentAndPlanForConditionOrConcernProblemObservation" constrainedElement="_g1AyQODhEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_us53Mf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iIDHcODhEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_us7sYf0REeGlaomQ_EyHlg" name="getProblemObservation" isQuery="true" bodyCondition="_us7sZP0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_us7sZP0REeGlaomQ_EyHlg" name="body" constrainedElement="_us7sYf0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_us7sZf0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_us7sYv0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_us7sY_0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_w2gYkODkEeGdSJSga09Dyg" name="AssessmentAndPlanSection">
      <ownedComment xmi:id="_jFHLgPhtEeGPm7sA61ixGw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_us86gP0REeGlaomQ_EyHlg" name="AssessmentAndPlanSectionTemplateId" constrainedElement="_w2gYkODkEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_us86gf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ySywYODkEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_us-vsP0REeGlaomQ_EyHlg" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_us-vs_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_us-vs_0REeGlaomQ_EyHlg" name="body" constrainedElement="_us-vsP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_us_WwP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_us-vsf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_us-vsv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_us_Wwf0REeGlaomQ_EyHlg" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_us_WxP0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_us_WxP0REeGlaomQ_EyHlg" name="body" constrainedElement="_us_Wwf0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_us_Wxf0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_us_Wwv0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_us_Ww_0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_us_90P0REeGlaomQ_EyHlg" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_us_90_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_us_90_0REeGlaomQ_EyHlg" name="body" constrainedElement="_us_90P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_us_91P0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_us_90f0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_us_90v0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_us_91f0REeGlaomQ_EyHlg" name="getProblemObservation" isQuery="true" bodyCondition="_utAk4v0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utAk4v0REeGlaomQ_EyHlg" name="body" constrainedElement="_us_91f0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utAk4_0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utAk4P0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utAk4f0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZK4bUODlEeGdSJSga09Dyg" name="InstructionsSection">
      <ownedComment xmi:id="_nirKkOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_utAk5f0REeGlaomQ_EyHlg" name="InstructionsSectionTemplateId" constrainedElement="_ZK4bUODlEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utBL8P0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utCaEP0REeGlaomQ_EyHlg" name="mu2consolInstructionsSectionInstructions" constrainedElement="_ZK4bUODlEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utCaEf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_avPxEODlEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
      </generalization>
      <ownedOperation xmi:id="_utDBIP0REeGlaomQ_EyHlg" name="getmu2consolInstructionss" isQuery="true" bodyCondition="_utDoMP0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utDoMP0REeGlaomQ_EyHlg" name="body" constrainedElement="_utDBIP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utDoMf0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions)).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utDBIf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2G8h9RSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utDBIv0REeGlaomQ_EyHlg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gl8CMODmEeGdSJSga09Dyg" name="HospitalAdmissionDiagnosisSection">
      <ownedComment xmi:id="_iSMIYOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_utDoM_0REeGlaomQ_EyHlg" name="HospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_gl8CMODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utEPQP0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utFdYP0REeGlaomQ_EyHlg" name="mu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_gl8CMODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utFdYf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jgg88ODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidQhSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_utGEcP0REeGlaomQ_EyHlg" name="getmu2consolHospitalAdmissionDiagnosis" isQuery="true" bodyCondition="_utGEc_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utGEc_0REeGlaomQ_EyHlg" name="body" constrainedElement="_utGEcP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utGEdP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utGEcf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5K6mAEFHEeGorO80f-Cppg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utGEcv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qgJokODmEeGdSJSga09Dyg" name="HospitalDischargeDiagnosisSection">
      <ownedComment xmi:id="_k2eqEOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_utGrgf0REeGlaomQ_EyHlg" name="HospitalDischargeDiagnosisSectionTemplateId" constrainedElement="_qgJokODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utGrgv0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.24')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utH5oP0REeGlaomQ_EyHlg" name="mu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_qgJokODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utH5of0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rXMlUODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidURSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_utJHwP0REeGlaomQ_EyHlg" name="getmu2consolHospitalDischargeDiagnosis" isQuery="true" bodyCondition="_utJHw_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utJHw_0REeGlaomQ_EyHlg" name="body" constrainedElement="_utJHwP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utJHxP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalDischargeDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalDischargeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utJHwf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_KtwVgCULEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utJHwv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y1mQkODmEeGdSJSga09Dyg" name="PostoperativeDiagnosisSection">
      <ownedComment xmi:id="_q87D4OGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_utJu0f0REeGlaomQ_EyHlg" name="PostoperativeDiagnosisSectionTemplateId" constrainedElement="_y1mQkODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utJu0v0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.35')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utK88P0REeGlaomQ_EyHlg" name="mu2consolPostoperativeDiagnosisSectionProblemObservation" constrainedElement="_y1mQkODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utK88f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zVobgODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_7UA-4DVyEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_utMLEP0REeGlaomQ_EyHlg" name="getProblemObservation" isQuery="true" bodyCondition="_utMLE_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utMLE_0REeGlaomQ_EyHlg" name="body" constrainedElement="_utMLEP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utMLFP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utMLEf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utMLEv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uvXlkODnEeGdSJSga09Dyg" name="PostprocedureDiagnosisSection">
      <ownedComment xmi:id="_sNALsOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_utMyIP0REeGlaomQ_EyHlg" name="PostprocedureDiagnosisSectionTemplateId" constrainedElement="_uvXlkODnEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utMyIf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.36')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utOAQP0REeGlaomQ_EyHlg" name="mu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_uvXlkODnEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utOAQf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vj29kODnEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_-jlSMDVyEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_utOnUP0REeGlaomQ_EyHlg" name="getmu2consolPostprocedureDiagnosis" isQuery="true" bodyCondition="_utPOYf0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utPOYf0REeGlaomQ_EyHlg" name="body" constrainedElement="_utOnUP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utPOYv0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PostprocedureDiagnosis))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utOnUf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_0fjXAEEvEeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utPOYP0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bRRt0ODqEeGdSJSga09Dyg" name="PreoperativeDiagnosisSection">
      <ownedComment xmi:id="_thn1QOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_utP1cP0REeGlaomQ_EyHlg" name="PreoperativeDiagnosisSectionTemplateId" constrainedElement="_bRRt0ODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utP1cf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.34')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utRDkP0REeGlaomQ_EyHlg" name="mu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_bRRt0ODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utRDkf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_b5wDEODqEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Cu6qMDVzEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_utRqoP0REeGlaomQ_EyHlg" name="getmu2consolPreoperativeDiagnosis" isQuery="true" bodyCondition="_utRqo_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utRqo_0REeGlaomQ_EyHlg" name="body" constrainedElement="_utRqoP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utSRsP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PreoperativeDiagnosis))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utRqof0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_0baBYEEwEeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utRqov0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3poqgODqEeGdSJSga09Dyg" name="MedicationsAdministeredSection">
      <ownedComment xmi:id="_o4-PIOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_utSRsv0REeGlaomQ_EyHlg" name="MedicationsAdministeredSectionTemplateId" constrainedElement="_3poqgODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utSRs_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utTf0P0REeGlaomQ_EyHlg" name="mu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_3poqgODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utTf0f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4XEYQODqEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj_BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_utUt8P0REeGlaomQ_EyHlg" name="getmu2consolMedicationActivities" isQuery="true" bodyCondition="_utUt8_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utUt8_0REeGlaomQ_EyHlg" name="body" constrainedElement="_utUt8P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utUt9P0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utUt8f0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2GHbgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utUt8v0REeGlaomQ_EyHlg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HBzuYODrEeGdSJSga09Dyg" name="HospitalAdmissionMedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_jlwCAOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_utVVAf0REeGlaomQ_EyHlg" name="HospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_HBzuYODrEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utVVAv0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utWjIP0REeGlaomQ_EyHlg" name="mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_HBzuYODrEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utWjIf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Hm_fEODrEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj5BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_utXxQP0REeGlaomQ_EyHlg" name="getmu2consolAdmissionMedications" isQuery="true" bodyCondition="_utXxQ_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utXxQ_0REeGlaomQ_EyHlg" name="body" constrainedElement="_utXxQP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utXxRP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AdmissionMedication)).oclAsType(consol::AdmissionMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utXxQf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_LNP08EFGEeGorO80f-Cppg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utXxQv0REeGlaomQ_EyHlg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_szTFwOF8EeGlJOFzBdwM6w" name="AllergiesSectionEntriesOptional">
      <ownedRule xmi:id="_utYYUP0REeGlaomQ_EyHlg" name="AllergiesSectionEntriesOptionalTemplateId" constrainedElement="_szTFwOF8EeGlJOFzBdwM6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utYYUf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utZmcP0REeGlaomQ_EyHlg" name="mu2consolAllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_szTFwOF8EeGlJOFzBdwM6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utZmcf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ugMFYOF8EeGlJOFzBdwM6w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
      </generalization>
      <ownedOperation xmi:id="_utaNgP0REeGlaomQ_EyHlg" name="getmu2consolAllergyProblemAct" isQuery="true" bodyCondition="_uta0kf0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uta0kf0REeGlaomQ_EyHlg" name="body" constrainedElement="_utaNgP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uta0kv0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AllergyProblemAct))->asSequence()->any(true).oclAsType(consol::AllergyProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utaNgf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2EAisBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uta0kP0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7D0CQOzmEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummary">
      <ownedComment xmi:id="_V_Po0PhqEeGPm7sA61ixGw">
        <body>MU2 170.314(e)(2) Clinical Summary</body>
      </ownedComment>
      <ownedRule xmi:id="_F7KU8O1YEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryResponsibleParty" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_HLw1oO1iEeGT-eFu7Ghgjw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ke17gO1YEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;&#xA;cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kNHwMO1bEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryReasonForOfficeVisit" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_miJt4O1bEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_CFE3YO1cEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryCarePlanning" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_DrZ8AO1cEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fRfCgPhlEeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryEffectiveTime" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_fRfCgfhlEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fRfCgvhlEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or &#xD;&#xD;&#xA;effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_8kY74PhlEeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryLocation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_BORREPhmEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-WWowPhlEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | &#xD;&#xD;&#xA;not location.oclIsUndefined() and location.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1Y4aoPhpEeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryPlanOfCareActOrEncounter" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_6FsIAPhpEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_5W3TIPhpEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.getAllSections()->exists(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection)and ( section.getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or section.getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utbboP0REeGlaomQ_EyHlg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utbbof0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = 'null')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utgUIP0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryProblemSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utg7MP0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utklkv0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryMedicationsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utklk_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utlzs_0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryAllergiesSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utlztP0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utnB0_0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryResultsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utnB1P0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utoP9P0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryVitalSignsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utoP9f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utpeFf0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryPlanOfCareSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utpeFv0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utqsM_0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryProceduresSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utqsNP0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utr6U_0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryImmunizationsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utr6VP0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uttvgP0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryMedicationsAdministeredSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uttvgf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utyoAP0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryInstructionsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utyoAf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::InstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuXPwP0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummarySocialHistorySection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuXPwf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvfRIP0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvfRIf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvf4MP0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvf4Mf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvgfQP0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryPlanOfCareSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvgfQf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvhtYP0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryMedicationsAdministeredSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvhtYf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.38'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uviUcP0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uviUcf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvkJoP0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryAssessmentAndPlanSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvkJof0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAssessmentAndPlanSection()->excluding(null)->reject(getAssessmentAndPlanSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvlXwP0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummaryInstructionsSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvlXwf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getInstructionsSection()->excluding(null)->reject(getInstructionsSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.45'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvlXwv0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvlXw_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getInstructionsSection()->excluding(null)->reject(getInstructionsSection().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvml4P0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummarySocialHistorySectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvml4f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvml4v0REeGlaomQ_EyHlg" name="ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvml4_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(mu2consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7D0pUOzmEeGT-eFu7Ghgjw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_uthiQP0REeGlaomQ_EyHlg" name="getProblemSection" isQuery="true" bodyCondition="_uthiQ_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uthiQ_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uthiQP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uthiRP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uthiQf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uthiQv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_utlMoP0REeGlaomQ_EyHlg" name="getMedicationsSection" isQuery="true" bodyCondition="_utlzsf0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utlzsf0REeGlaomQ_EyHlg" name="body" constrainedElement="_utlMoP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utlzsv0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utlMof0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utlzsP0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_utmawP0REeGlaomQ_EyHlg" name="getAllergiesSection" isQuery="true" bodyCondition="_utnB0f0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utnB0f0REeGlaomQ_EyHlg" name="body" constrainedElement="_utmawP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utnB0v0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utmawf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utnB0P0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_utno4P0REeGlaomQ_EyHlg" name="getResultsSection" isQuery="true" bodyCondition="_utoP8v0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utoP8v0REeGlaomQ_EyHlg" name="body" constrainedElement="_utno4P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utoP8_0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utoP8P0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utoP8f0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_utpeEP0REeGlaomQ_EyHlg" name="getVitalSignsSection" isQuery="true" bodyCondition="_utpeE_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utpeE_0REeGlaomQ_EyHlg" name="body" constrainedElement="_utpeEP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utpeFP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utpeEf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utpeEv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_utqFIP0REeGlaomQ_EyHlg" name="getPlanOfCareSection" isQuery="true" bodyCondition="_utqsMf0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utqsMf0REeGlaomQ_EyHlg" name="body" constrainedElement="_utqFIP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utqsMv0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utqFIf0REeGlaomQ_EyHlg" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utqsMP0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_utrTQP0REeGlaomQ_EyHlg" name="getProceduresSection" isQuery="true" bodyCondition="_utr6Uf0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utr6Uf0REeGlaomQ_EyHlg" name="body" constrainedElement="_utrTQP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utr6Uv0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utrTQf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utr6UP0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_utshYP0REeGlaomQ_EyHlg" name="getImmunizationsSection" isQuery="true" bodyCondition="_uttIcv0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uttIcv0REeGlaomQ_EyHlg" name="body" constrainedElement="_utshYP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uttIc_0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uttIcP0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uttIcf0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_utu9oP0REeGlaomQ_EyHlg" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_utu9o_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utu9o_0REeGlaomQ_EyHlg" name="body" constrainedElement="_utu9oP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utu9pP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(mu2consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utu9of0REeGlaomQ_EyHlg" type="_3poqgODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utu9ov0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_utvksP0REeGlaomQ_EyHlg" name="getReasonForVisitSection" isQuery="true" bodyCondition="_utvks_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utvks_0REeGlaomQ_EyHlg" name="body" constrainedElement="_utvksP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utwLwP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utvksf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utvksv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_utwLwf0REeGlaomQ_EyHlg" name="getChiefComplaintSection" isQuery="true" bodyCondition="_utwy0f0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utwy0f0REeGlaomQ_EyHlg" name="body" constrainedElement="_utwLwf0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utwy0v0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utwLwv0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utwy0P0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_utxZ4P0REeGlaomQ_EyHlg" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_utxZ4_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utxZ4_0REeGlaomQ_EyHlg" name="body" constrainedElement="_utxZ4P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utxZ5P0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utxZ4f0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utxZ4v0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_utyA8P0REeGlaomQ_EyHlg" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_utyA8_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utyA8_0REeGlaomQ_EyHlg" name="body" constrainedElement="_utyA8P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utyA9P0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utyA8f0REeGlaomQ_EyHlg" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utyA8v0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_utz2IP0REeGlaomQ_EyHlg" name="getInstructionsSection" isQuery="true" bodyCondition="_utz2I_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utz2I_0REeGlaomQ_EyHlg" name="body" constrainedElement="_utz2IP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utz2JP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::InstructionsSection))->asSequence()->any(true).oclAsType(mu2consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utz2If0REeGlaomQ_EyHlg" type="_ZK4bUODlEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utz2Iv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuX20P0REeGlaomQ_EyHlg" name="getSocialHistorySection" isQuery="true" bodyCondition="_uuX20_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuX20_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuX20P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuX21P0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuX20f0REeGlaomQ_EyHlg" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuX20v0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9frdwO1UEeGT-eFu7Ghgjw" name="SocialHistorySection">
      <ownedComment xmi:id="_GBqF4O1VEeGT-eFu7Ghgjw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_utiJUf0REeGlaomQ_EyHlg" name="SocialHistorySectionTemplateId" constrainedElement="_9frdwO1UEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utiJUv0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utjXcP0REeGlaomQ_EyHlg" name="mu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_9frdwO1UEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utjXcf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(mu2consol::SmokingStatusObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-2YyAO1UEeGT-eFu7Ghgjw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_utj-gP0REeGlaomQ_EyHlg" name="getmu2consolSmokingStatusObservations" isQuery="true" bodyCondition="_utklkP0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_utklkP0REeGlaomQ_EyHlg" name="body" constrainedElement="_utj-gP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utklkf0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(mu2consol::SmokingStatusObservation)).oclAsType(mu2consol::SmokingStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utj-gf0REeGlaomQ_EyHlg" type="_xbrkwPwYEeGx4ophOjh2tw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utj-gv0REeGlaomQ_EyHlg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UGcMgPabEeGi99B_x568TQ" name="TransitionOfCareAmbulatorySummary">
      <ownedComment xmi:id="_ottgoPhKEeGQQ6aVp7opYg">
        <body>MU2 170.314(b)(2) Transition of Care/Referral Summary - For Ambulatory Care&#xD;
MU2 170.314(b)(7) Export Summary  - For Ambulatory Care</body>
      </ownedComment>
      <ownedRule xmi:id="_vSLf0PdxEeG_npP0e3OOEw" name="TransitionOfCareAmbulatorySummaryResponsibleParty" constrainedElement="_UGcMgPabEeGi99B_x568TQ">
        <ownedComment xmi:id="_BaqaQPeVEeG_npP0e3OOEw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_z3eP8PdxEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ut1rUP0REeGlaomQ_EyHlg" name="TransitionOfCareAmbulatorySummaryReasonForReferralSection" constrainedElement="_UGcMgPabEeGi99B_x568TQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ut1rUf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WN-gwPabEeGi99B_x568TQ" general="_VG3DUNkxEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_ut3ggP0REeGlaomQ_EyHlg" name="getReasonForReferralSection" isQuery="true" bodyCondition="_ut3gg_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_ut3gg_0REeGlaomQ_EyHlg" name="body" constrainedElement="_ut3ggP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ut3ghP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))->asSequence()->any(true).oclAsType(consol::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ut3ggf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQFxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ut3ggv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uu2T0PdyEeG_npP0e3OOEw" name="TransitionOfCareInpatientSummary">
      <ownedComment xmi:id="_rczkIPhKEeGQQ6aVp7opYg">
        <body>MU2 170.314(b)(2) Transition of Care/Referral Summary - For Inpatient Care&#xD;
MU2 170.314(b)(7) Export Summary  - For Inpatient Care</body>
      </ownedComment>
      <ownedRule xmi:id="_ut6j0P0REeGlaomQ_EyHlg" name="TransitionOfCareInpatientSummaryHospitalDischargeInstructionsSection" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ut6j0f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vutOUPdyEeG_npP0e3OOEw" general="_VG3DUNkxEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_ut7K4f0REeGlaomQ_EyHlg" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_ut7x8P0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_ut7x8P0REeGlaomQ_EyHlg" name="body" constrainedElement="_ut7K4f0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ut7x8f0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ut7K4v0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ut7K4_0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i2IoQPhVEeGPm7sA61ixGw" name="ViewDownloadTransmitSummary">
      <ownedRule xmi:id="_CrzxoPhcEeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryCarePlanFields" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FGH38PhcEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuDGsP0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummaryAllergiesSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuDGsf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuEU0v0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummaryMedicationsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuEU0_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuGKAP0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummaryHospitalDischargeMedicationsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuGKAf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuH_MP0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummaryProblemSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuH_Mf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuJNVf0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummaryProceduresSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuJNVv0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuLCgP0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummaryVitalSignsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuLCgf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuMQoP0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummaryResultsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuMQof0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuOF0P0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummaryPlanOfCareSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuOF0f0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuPT8f0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummarySocialHistorySection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuPT8v0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvpCIP0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummaryAssessmentAndPlanSectionTemplateId" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvpCIf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAssessmentAndPlanSection()->excluding(null)->reject(getAssessmentAndPlanSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvq3UP0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvq3Uf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvq3Uv0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummarymu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvq3U_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvreYP0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummaryPlanOfCareSectionTemplateId" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvreYf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvsFcP0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummarySocialHistorySectionTemplateId" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvssgP0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvssgf0REeGlaomQ_EyHlg" name="ViewDownloadTransmitSummarymu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvssgv0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(mu2consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kFewQPhVEeGPm7sA61ixGw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_uuDtwP0REeGlaomQ_EyHlg" name="getAllergiesSection" isQuery="true" bodyCondition="_uuEU0P0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuEU0P0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuDtwP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuEU0f0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuDtwf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuDtwv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuFi8P0REeGlaomQ_EyHlg" name="getMedicationsSection" isQuery="true" bodyCondition="_uuFi8_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuFi8_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuFi8P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuFi9P0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuFi8f0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuFi8v0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuGxEP0REeGlaomQ_EyHlg" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_uuHYIv0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuHYIv0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuGxEP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuHYI_0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuHYIP0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuHYIf0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuJNUP0REeGlaomQ_EyHlg" name="getProblemSection" isQuery="true" bodyCondition="_uuJNU_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuJNU_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuJNUP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuJNVP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuJNUf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuJNUv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuKbcP0REeGlaomQ_EyHlg" name="getProceduresSection" isQuery="true" bodyCondition="_uuKbc_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuKbc_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuKbcP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuKbdP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuKbcf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuKbcv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuLpkP0REeGlaomQ_EyHlg" name="getVitalSignsSection" isQuery="true" bodyCondition="_uuLpk_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuLpk_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuLpkP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuLplP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuLpkf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuLpkv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuM3sP0REeGlaomQ_EyHlg" name="getResultsSection" isQuery="true" bodyCondition="_uuNewf0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuNewf0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuM3sP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuNewv0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuM3sf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuNewP0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuNew_0REeGlaomQ_EyHlg" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_uuNexv0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuNexv0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuNew_0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuNex_0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuNexP0REeGlaomQ_EyHlg" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuNexf0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuOs4P0REeGlaomQ_EyHlg" name="getPlanOfCareSection" isQuery="true" bodyCondition="_uuOs4_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuOs4_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuOs4P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuPT8P0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuOs4f0REeGlaomQ_EyHlg" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuOs4v0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuP7AP0REeGlaomQ_EyHlg" name="getSocialHistorySection" isQuery="true" bodyCondition="_uuQiEP0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuQiEP0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuP7AP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuQiEf0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuP7Af0REeGlaomQ_EyHlg" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuP7Av0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rsKJkPhcEeGPm7sA61ixGw" name="VDTInpatientSummary">
      <ownedComment xmi:id="_qrDxkPhfEeGPm7sA61ixGw">
        <body>MU2 170.314 (e)(1)  Inpatient Summary</body>
      </ownedComment>
      <ownedRule xmi:id="_EFIqIPheEeGPm7sA61ixGw" name="VDTInpatientSummaryEffectiveTime" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_LpyuYPheEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_IaNM8PheEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or &#xD;&#xD;&#xA;effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WH_yoPheEeGPm7sA61ixGw" name="VDTInpatientSummaryLocation" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_bra-8PheEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aLjusPheEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | &#xD;&#xD;&#xA;not location.oclIsUndefined() and location.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_GUuRsPhfEeGPm7sA61ixGw" name="VDTInpatientSummaryChiefComplaintOrReasonForVisit" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JY5NUPhfEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuS-UP0REeGlaomQ_EyHlg" name="VDTInpatientSummaryHospitalDischargeInstructionsSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuS-Uf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuUMdP0REeGlaomQ_EyHlg" name="VDTInpatientSummaryHospitalAdmissionDiagnosisSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuUMdf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvt6oP0REeGlaomQ_EyHlg" name="VDTInpatientSummaryHospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvt6of0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvt6ov0REeGlaomQ_EyHlg" name="VDTInpatientSummarymu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvt6o_0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_tK1HAPhcEeGPm7sA61ixGw" general="_i2IoQPhVEeGPm7sA61ixGw"/>
      <ownedOperation xmi:id="_uuTlYP0REeGlaomQ_EyHlg" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_uuUMcv0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuUMcv0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuTlYP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuUMc_0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuUMcP0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuUMcf0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuVakP0REeGlaomQ_EyHlg" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_uuVak_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuVak_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuVakP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuValP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuVakf0REeGlaomQ_EyHlg" type="_gl8CMODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuVakv0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuValf0REeGlaomQ_EyHlg" name="getChiefComplaintSection" isQuery="true" bodyCondition="_uuWBoP0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuWBoP0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuValf0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuWBof0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuValv0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuVal_0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuWBov0REeGlaomQ_EyHlg" name="getReasonForVisitSection" isQuery="true" bodyCondition="_uuWBpf0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuWBpf0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuWBov0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuWosP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuWBo_0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuWBpP0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuWosf0REeGlaomQ_EyHlg" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_uuWotP0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuWotP0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuWosf0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuWotf0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuWosv0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuWos_0REeGlaomQ_EyHlg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2FvMgPhcEeGPm7sA61ixGw" name="VDTAmbulatorySummary">
      <ownedComment xmi:id="_sjR3cPhfEeGPm7sA61ixGw">
        <body>MU2 170.314 (e)(1) Ambulatory Summary</body>
      </ownedComment>
      <ownedRule xmi:id="_-3broPhcEeGPm7sA61ixGw" name="VDTAmbulatorySummaryResponsibleParty" constrainedElement="_2FvMgPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_B5gVgPhdEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_A_BqQPhdEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;&#xA;cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2j8ygPhcEeGPm7sA61ixGw" general="_i2IoQPhVEeGPm7sA61ixGw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_do39kPhzEeGPm7sA61ixGw" name="FunctionalStatusSection">
      <ownedComment xmi:id="_kRURMPhzEeGPm7sA61ixGw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_JoyBcPh1EeGPm7sA61ixGw" name="mu2consolFunctionalStatusSectionCognitiveStatus" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_QyDKMPh1EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusProblemObservation)) or self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusResultObservation)) or  self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::CognitiveStatusResultOrganizer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_bj0qsPh1EeGPm7sA61ixGw" name="mu2consolFunctionalStatusSectionFunctionalStatus" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_en9xIPh1EeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusProblemObservation)) or self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusResultObservation)) or self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FunctionalStatusResultOrganizer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuYd4f0REeGlaomQ_EyHlg" name="FunctionalStatusSectionTemplateId" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuYd4v0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uubhMP0REeGlaomQ_EyHlg" name="mu2consolFunctionalStatusSectionCognitiveStatusProblemObservation" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uubhMf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusProblemObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uucvUP0REeGlaomQ_EyHlg" name="mu2consolFunctionalStatusSectionCognitiveStatusResultObservation" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uucvUf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusResultObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuekgP0REeGlaomQ_EyHlg" name="mu2consolFunctionalStatusSectionCognitiveStatusResultOrganizer" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuekgf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::CognitiveStatusResultOrganizer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuhAwP0REeGlaomQ_EyHlg" name="mu2consolFunctionalStatusSectionFunctionalStatusProblemObservation" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuhAwf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusProblemObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuiO4f0REeGlaomQ_EyHlg" name="mu2consolFunctionalStatusSectionFunctionalStatusResultObservation" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuiO4v0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusResultObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uukEEP0REeGlaomQ_EyHlg" name="mu2consolFunctionalStatusSectionFunctionalStatusResultOrganizer" constrainedElement="_do39kPhzEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uukEEf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FunctionalStatusResultOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_do4koPhzEeGPm7sA61ixGw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KKOBhSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_uucIQP0REeGlaomQ_EyHlg" name="getmu2consolCognitiveStatusProblemObservations" isQuery="true" bodyCondition="_uucIQ_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uucIQ_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uucIQP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uucIRP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveStatusProblemObservation)).oclAsType(consol::CognitiveStatusProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uucIQf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_dXKPQOZbEeGINOJ_SD9_dA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uucIQv0REeGlaomQ_EyHlg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uud9cP0REeGlaomQ_EyHlg" name="getmu2consolCognitiveStatusResultObservations" isQuery="true" bodyCondition="_uud9c_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uud9c_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uud9cP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uud9dP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveStatusResultObservation)).oclAsType(consol::CognitiveStatusResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uud9cf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_gkBM0OZbEeGINOJ_SD9_dA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uud9cv0REeGlaomQ_EyHlg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uugZsP0REeGlaomQ_EyHlg" name="getmu2consolCognitiveStatusResultOrganizers" isQuery="true" bodyCondition="_uugZs_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uugZs_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uugZsP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uugZtP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::CognitiveStatusResultOrganizer)).oclAsType(consol::CognitiveStatusResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uugZsf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_jfoCUOZbEeGINOJ_SD9_dA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uugZsv0REeGlaomQ_EyHlg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuhn0P0REeGlaomQ_EyHlg" name="getmu2consolFunctionalStatusProblemObservations" isQuery="true" bodyCondition="_uuhn0_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uuhn0_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uuhn0P0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuiO4P0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FunctionalStatusProblemObservation)).oclAsType(consol::FunctionalStatusProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uuhn0f0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_rVl5AOZbEeGINOJ_SD9_dA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uuhn0v0REeGlaomQ_EyHlg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uujdAP0REeGlaomQ_EyHlg" name="getmu2consolFunctionalStatusResultObservations" isQuery="true" bodyCondition="_uujdA_0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uujdA_0REeGlaomQ_EyHlg" name="body" constrainedElement="_uujdAP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uujdBP0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FunctionalStatusResultObservation)).oclAsType(consol::FunctionalStatusResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uujdAf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_viRU0OZbEeGINOJ_SD9_dA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uujdAv0REeGlaomQ_EyHlg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uukrIP0REeGlaomQ_EyHlg" name="getmu2consolFunctionalStatusResultOrganizers" isQuery="true" bodyCondition="_uulSMP0REeGlaomQ_EyHlg">
        <ownedRule xmi:id="_uulSMP0REeGlaomQ_EyHlg" name="body" constrainedElement="_uukrIP0REeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uulSMf0REeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::FunctionalStatusResultOrganizer)).oclAsType(consol::FunctionalStatusResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uukrIf0REeGlaomQ_EyHlg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_zBlUUOZbEeGINOJ_SD9_dA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uukrIv0REeGlaomQ_EyHlg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xbrkwPwYEeGx4ophOjh2tw" name="SmokingStatusObservation">
      <ownedRule xmi:id="_uumgVP0REeGlaomQ_EyHlg" name="TobaccoUseTemplateId" constrainedElement="_xbrkwPwYEeGx4ophOjh2tw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uunHYP0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.22.4.78')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuqxwP0REeGlaomQ_EyHlg" name="SmokingStatusObservationValueP" constrainedElement="_xbrkwPwYEeGx4ophOjh2tw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuqxwf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuoVgP0REeGlaomQ_EyHlg" name="SmokingStatusObservationValue" constrainedElement="_xbrkwPwYEeGx4ophOjh2tw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuoVgf0REeGlaomQ_EyHlg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '449868002' or value.code = '428041000124106' or value.code = '8517006' or value.code = '266919005' or value.code = '77176002' or value.code = '266927001' or value.code = '428071000124103' or value.code = '428061000124105')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yhogMPwYEeGx4ophOjh2tw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_gIH_QOWQEeGKmvzED_He2w"/>
      </generalization>
    </packagedElement>
    <profileApplication xmi:id="_mZtsIdd5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsItd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_mZtsI9d5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsJNd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_ur-qIP0REeGlaomQ_EyHlg">
      <eAnnotations xmi:id="_ur-qIf0REeGlaomQ_EyHlg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_mbrbANd5EeGtNLA6W-IQeQ" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" packageName="mu2consol" prefix="mu2consol" base_Namespace="_mZtsINd5EeGtNLA6W-IQeQ"/>
  <CDA:CDATemplate xmi:id="_Su_88NpWEeGzu8-aAsCS4g" base_Class="_VG3DUNkxEeGsqcJR8eqiMw" templateId="2.16.840.1.113883.11.11.11.1.1" assigningAuthorityName="TEMP"/>
  <CDA:ConstraintValidation xmi:id="_39anEOF3EeGlJOFzBdwM6w" base_Constraint="_j1rcwOF3EeGlJOFzBdwM6w"/>
  <CDA:CDATemplate xmi:id="_gWeuwOmKEeGNCuDrPdW6ZA" base_Class="_ZK4bUODlEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.45"/>
  <CDA:ConstraintValidation xmi:id="_7vlYQOvXEeGkopdZmUN1Xw" base_Constraint="_gfm_8OvXEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_rb7RoOvZEeGkopdZmUN1Xw" base_Constraint="_VUReAOvZEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_f8jZYOvbEeGkopdZmUN1Xw" base_Constraint="_2nwZAN3EEeGdQcioKnmIhA"/>
  <CDA:PropertyValidation xmi:id="_njlW8OyxEeGT-eFu7Ghgjw"/>
  <CDA:CDATemplate xmi:id="_PEUjwO1WEeGT-eFu7Ghgjw" base_Class="_7D0CQOzmEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_LX7foO1YEeGT-eFu7Ghgjw" base_Constraint="_F7KU8O1YEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_nFpcgO1bEeGT-eFu7Ghgjw" base_Constraint="_kNHwMO1bEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_EAFLgO1cEeGT-eFu7Ghgjw" base_Constraint="_CFE3YO1cEeGT-eFu7Ghgjw"/>
  <CDA:CDATemplate xmi:id="_CDXuIPK1EeGFZOE6tRcvzg" base_Class="_szTFwOF8EeGlJOFzBdwM6w" templateId="2.16.840.1.113883.10.20.22.2.6"/>
  <CDA:CDATemplate xmi:id="_TQUy0PM4EeGkZPcEpuFP6w" base_Class="_w2gYkODkEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.9"/>
  <CDA:CDATemplate xmi:id="_hwU4kPM4EeGkZPcEpuFP6w" base_Class="_CaN5MODgEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.8"/>
  <CDA:CDATemplate xmi:id="_tqLbcPM4EeGkZPcEpuFP6w" base_Class="_gl8CMODmEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.43"/>
  <CDA:CDATemplate xmi:id="_zgZn8PM4EeGkZPcEpuFP6w" base_Class="_HBzuYODrEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.44"/>
  <CDA:CDATemplate xmi:id="_6V0noPM4EeGkZPcEpuFP6w" base_Class="_qgJokODmEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.24"/>
  <CDA:CDATemplate xmi:id="_FuXNMPM5EeGkZPcEpuFP6w" base_Class="_3poqgODqEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.38"/>
  <CDA:CDATemplate xmi:id="_JM8z8PM5EeGkZPcEpuFP6w" base_Class="_svnagODKEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.10"/>
  <CDA:CDATemplate xmi:id="_L1otcPM5EeGkZPcEpuFP6w" base_Class="_y1mQkODmEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.35"/>
  <CDA:CDATemplate xmi:id="_OdNzsPM5EeGkZPcEpuFP6w" base_Class="_uvXlkODnEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.36"/>
  <CDA:CDATemplate xmi:id="_QwCx8PM5EeGkZPcEpuFP6w" base_Class="_bRRt0ODqEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.34"/>
  <CDA:CDATemplate xmi:id="_TC_sAPM5EeGkZPcEpuFP6w" base_Class="_9frdwO1UEeGT-eFu7Ghgjw" templateId="2.16.840.1.113883.10.20.22.2.17"/>
  <CDA:ConstraintValidation xmi:id="_0YItAPdxEeG_npP0e3OOEw" base_Constraint="_vSLf0PdxEeG_npP0e3OOEw"/>
  <CDA:ConstraintValidation xmi:id="_HrUYkPhcEeGPm7sA61ixGw" base_Constraint="_CrzxoPhcEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_CUb-APhdEeGPm7sA61ixGw" base_Constraint="_-3broPhcEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_cP8oUPheEeGPm7sA61ixGw" base_Constraint="_WH_yoPheEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_dEY9APheEeGPm7sA61ixGw" base_Constraint="_EFIqIPheEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_Jsk-UPhfEeGPm7sA61ixGw" base_Constraint="_GUuRsPhfEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_fRfpkPhlEeGPm7sA61ixGw" base_Constraint="_fRfCgPhlEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_AgV0EPhmEeGPm7sA61ixGw" base_Constraint="_8kY74PhlEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_6XGoIPhpEeGPm7sA61ixGw" base_Constraint="_1Y4aoPhpEeGPm7sA61ixGw"/>
  <CDA:CDATemplate xmi:id="_md_kIPhzEeGPm7sA61ixGw" base_Class="_do39kPhzEeGPm7sA61ixGw" templateId="2.16.840.1.113883.10.20.22.2.14"/>
  <CDA:ConstraintValidation xmi:id="_SH3toPh1EeGPm7sA61ixGw" base_Constraint="_JoyBcPh1EeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_e2YAkPh1EeGPm7sA61ixGw" base_Constraint="_bj0qsPh1EeGPm7sA61ixGw"/>
  <CDA:PropertyValidation xmi:id="_4W8twPwYEeGx4ophOjh2tw">
    <ruleId>CONF:16558</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_4W9U0PwYEeGx4ophOjh2tw">
    <ruleId>CONF:16560</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_4W974PwYEeGx4ophOjh2tw" code="ASSERTION" displayName="Assertion">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_4AnRQCYWEd-iTYfpNb4PkQ"/>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_4XA_MvwYEeGx4ophOjh2tw">
    <ruleId>CONF:16559</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_JW-gQPwZEeGx4ophOjh2tw" base_Class="_xbrkwPwYEeGx4ophOjh2tw" templateId="2.16.840.1.113883.10.22.4.78"/>
  <Ecore:EPackage xmi:id="_usDioP0REeGlaomQ_EyHlg" base_Package="_mZtsINd5EeGtNLA6W-IQeQ" packageName="mu2consol" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" basePackage="org.openhealthtools.mdht.uml.cda" prefix="mu2consol">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.mu2consol'</annotation>
  </Ecore:EPackage>
  <Ecore:EClass xmi:id="_usPv4P0REeGlaomQ_EyHlg" base_Class="_v-6qsNkMEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolGeneralHeaderConstraintsRecordTarget mu2consolGeneralHeaderConstraintsDocumentationOf GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent GeneralHeaderConstraintsComponent1EncompassingEncounterEncounterParticipant GeneralHeaderConstraintsComponent1EncompassingEncounter' constraints.validation.query='GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent GeneralHeaderConstraintsComponent1EncompassingEncounterEncounterParticipant GeneralHeaderConstraintsComponent1EncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTarget constraints.validation.error='RecordTargetPatientRole RecordTargetPatientRolePatientEthnicGroupCode RecordTargetPatientRolePatientEthnicGroupCodeP RecordTargetPatientRolePatientRaceCode RecordTargetPatientRolePatientRaceCodeP RecordTargetPatientRolePatientLanguageCommunication RecordTargetPatientRolePatient' constraints.validation.query='RecordTargetPatientRolePatientEthnicGroupCode RecordTargetPatientRolePatientEthnicGroupCodeP RecordTargetPatientRolePatientRaceCode RecordTargetPatientRolePatientRaceCodeP RecordTargetPatientRolePatientLanguageCommunication RecordTargetPatientRolePatient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRole constraints.validation.error='PatientRolePatient PatientRolePatientEthnicGroupCode PatientRolePatientEthnicGroupCodeP PatientRolePatientRaceCode PatientRolePatientRaceCodeP PatientRolePatientLanguageCommunication' constraints.validation.query='PatientRolePatientEthnicGroupCode PatientRolePatientEthnicGroupCodeP PatientRolePatientRaceCode PatientRolePatientRaceCodeP PatientRolePatientLanguageCommunication'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRolePatient ethnicGroupCode.codeSystem='2.16.840.1.113883.6.238' ethnicGroupCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.error='PatientEthnicGroupCode PatientEthnicGroupCodeP PatientRaceCode PatientRaceCodeP PatientLanguageCommunication' raceCode.codeSystem='2.16.840.1.113883.6.238' raceCode.codeSystemName='Race and Ethnicity - CDC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOf constraints.validation.error='DocumentationOfServiceEvent DocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson DocumentationOfServiceEventPerformer1AssignedEntity DocumentationOfServiceEventPerformer' constraints.validation.query='DocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson DocumentationOfServiceEventPerformer1AssignedEntity DocumentationOfServiceEventPerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEvent constraints.validation.error='ServiceEventPerformer ServiceEventPerformer1AssignedEntityAssignedPerson ServiceEventPerformer1AssignedEntity' constraints.validation.query='ServiceEventPerformer1AssignedEntityAssignedPerson ServiceEventPerformer1AssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEventPerformer1 constraints.validation.error='Performer1AssignedEntity Performer1AssignedEntityAssignedPerson' constraints.validation.query='Performer1AssignedEntityAssignedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity constraints.validation.error='AssignedEntityAssignedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsComponent1 constraints.validation.error='Component1EncompassingEncounter Component1EncompassingEncounterEncounterParticipant' constraints.validation.query='Component1EncompassingEncounterEncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsComponent1EncompassingEncounter constraints.validation.error='EncompassingEncounterEncounterParticipant'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_usQ-Af0REeGlaomQ_EyHlg" base_Generalization="_VG3qYNkxEeGsqcJR8eqiMw"/>
  <CDA:ConformsTo xmi:id="_usRlEP0REeGlaomQ_EyHlg" base_Generalization="_v-6qsdkMEeGsqcJR8eqiMw"/>
  <Ecore:EClass xmi:id="_usSzMP0REeGlaomQ_EyHlg" base_Class="_VG3DUNkxEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SummaryOfCareRecordTemplateId SummaryOfCareRecordMu2EncounterDiagnosesRequirements SummaryOfCareRecordCarePlanning SummaryOfCareRecordReasonForHospitalization SummaryOfCareRecordPlanOfCareSection SummaryOfCareRecordProblemSection SummaryOfCareRecordAllergiesSection SummaryOfCareRecordImmunizationsSection SummaryOfCareRecordMedicationsAdministeredSection SummaryOfCareRecordMedicationsSection SummaryOfCareRecordHospitalDischargeMedicationsSection SummaryOfCareRecordSocialHistorySection SummaryOfCareRecordResultsSection SummaryOfCareRecordVitalSignsSection SummaryOfCareRecordProceduresSection SummaryOfCareRecordFunctionalStatusSection SummaryOfCareRecordSocialHistorySectionTemplateId SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation SummaryOfCareRecordHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation SummaryOfCareRecordPlanOfCareSectionTemplateId SummaryOfCareRecordMedicationsAdministeredSectionTemplateId SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity SummaryOfCareRecordAssessmentAndPlanSectionTemplateId SummaryOfCareRecordAssessmentSectionTemplateId SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation SummaryOfCareRecordHospitalAdmissionDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis SummaryOfCareRecordHospitalDischargeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis SummaryOfCareRecordPostoperativeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation SummaryOfCareRecordPostprocedureDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis SummaryOfCareRecordPreoperativeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatus SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatus SummaryOfCareRecordFunctionalStatusSectionTemplateId' templateId.root='2.16.840.1.113883.11.11.11.1.1' constraints.validation.query='SummaryOfCareRecordSocialHistorySectionTemplateId SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation SummaryOfCareRecordHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation SummaryOfCareRecordPlanOfCareSectionTemplateId SummaryOfCareRecordMedicationsAdministeredSectionTemplateId SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity SummaryOfCareRecordAssessmentAndPlanSectionTemplateId SummaryOfCareRecordAssessmentSectionTemplateId SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation SummaryOfCareRecordHospitalAdmissionDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis SummaryOfCareRecordHospitalDischargeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis SummaryOfCareRecordPostoperativeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation SummaryOfCareRecordPostprocedureDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis SummaryOfCareRecordPreoperativeDiagnosisSectionTemplateId SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatus SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatus SummaryOfCareRecordFunctionalStatusSectionTemplateId SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusProblemObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusResultObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusResultOrganizer SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusProblemObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusResultObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusResultOrganizer' constraints.validation.info='SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusProblemObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusResultObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionCognitiveStatusResultOrganizer SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusProblemObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusResultObservation SummaryOfCareRecordmu2consolFunctionalStatusSectionFunctionalStatusResultOrganizer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_usu4EP0REeGlaomQ_EyHlg" base_Class="_svnagODKEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPlanOfCareSectionPlanOfCareActivityObservation mu2consolPlanOfCareSectionTemplateId mu2consolPlanOfCareSectionCarePlanningForPlanOfCare' templateId.root='2.16.840.1.113883.10.20.22.2.10'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uszJgP0REeGlaomQ_EyHlg" base_Generalization="_vqugwODKEeGdSJSga09Dyg"/>
  <CDA:ConformsTo xmi:id="_us0-sP0REeGlaomQ_EyHlg" base_Generalization="_D0JgkODgEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_us2M0P0REeGlaomQ_EyHlg" base_Class="_CaN5MODgEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAssessmentSectionTemplateId mu2consolAssessmentSectionProblemObservation' templateId.root='2.16.840.1.113883.10.20.22.2.8'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_us7sYP0REeGlaomQ_EyHlg" base_Class="_g1AyQODhEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AssessmentAndPlanForConditionOrConcernProblemObservation'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_us8TcP0REeGlaomQ_EyHlg" base_Generalization="_ySywYODkEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_us9hkP0REeGlaomQ_EyHlg" base_Class="_w2gYkODkEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAssessmentAndPlanSectionTemplateId' templateId.root='2.16.840.1.113883.10.20.22.2.9'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_utAk5P0REeGlaomQ_EyHlg" base_Generalization="_avPxEODlEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_utBzAP0REeGlaomQ_EyHlg" base_Class="_ZK4bUODlEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolInstructionsSectionTemplateId mu2consolInstructionsSectionInstructions' templateId.root='2.16.840.1.113883.10.20.22.2.45'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_utDoMv0REeGlaomQ_EyHlg" base_Generalization="_jgg88ODmEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_utEPQf0REeGlaomQ_EyHlg" base_Class="_gl8CMODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalAdmissionDiagnosisSectionTemplateId mu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.43'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_utGrgP0REeGlaomQ_EyHlg" base_Generalization="_rXMlUODmEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_utHSkP0REeGlaomQ_EyHlg" base_Class="_qgJokODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalDischargeDiagnosisSectionTemplateId mu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.24'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_utJu0P0REeGlaomQ_EyHlg" base_Generalization="_zVobgODmEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_utKV4P0REeGlaomQ_EyHlg" base_Class="_y1mQkODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPostoperativeDiagnosisSectionTemplateId mu2consolPostoperativeDiagnosisSectionProblemObservation' templateId.root='2.16.840.1.113883.10.20.22.2.35'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_utMLFf0REeGlaomQ_EyHlg" base_Generalization="_vj29kODnEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_utNZMP0REeGlaomQ_EyHlg" base_Class="_uvXlkODnEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPostprocedureDiagnosisSectionTemplateId mu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.36'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_utPOY_0REeGlaomQ_EyHlg" base_Generalization="_b5wDEODqEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_utP1cv0REeGlaomQ_EyHlg" base_Class="_bRRt0ODqEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPreoperativeDiagnosisSectionTemplateId mu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis' templateId.root='2.16.840.1.113883.10.20.22.2.34'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_utSRsf0REeGlaomQ_EyHlg" base_Generalization="_4XEYQODqEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_utS4wP0REeGlaomQ_EyHlg" base_Class="_3poqgODqEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolMedicationsAdministeredSectionTemplateId mu2consolMedicationsAdministeredSectionMedicationActivity' templateId.root='2.16.840.1.113883.10.20.22.2.38'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_utVVAP0REeGlaomQ_EyHlg" base_Generalization="_Hm_fEODrEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_utV8EP0REeGlaomQ_EyHlg" base_Class="_HBzuYODrEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalTemplateId mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication' templateId.root='2.16.840.1.113883.10.20.22.2.44'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_utXxRf0REeGlaomQ_EyHlg" base_Generalization="_ugMFYOF8EeGlJOFzBdwM6w"/>
  <Ecore:EClass xmi:id="_utY_YP0REeGlaomQ_EyHlg" base_Class="_szTFwOF8EeGlJOFzBdwM6w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAllergiesSectionEntriesOptionalTemplateId mu2consolAllergiesSectionEntriesOptionalAllergyProblemAct' templateId.root='2.16.840.1.113883.10.20.22.2.6'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uta0k_0REeGlaomQ_EyHlg" base_Generalization="_7D0pUOzmEeGT-eFu7Ghgjw"/>
  <Ecore:EClass xmi:id="_utcCsP0REeGlaomQ_EyHlg" base_Class="_7D0CQOzmEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ClinicalOfficeVisitSummaryTemplateId ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryReasonForOfficeVisit ClinicalOfficeVisitSummaryCarePlanning ClinicalOfficeVisitSummaryEffectiveTime ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummaryPlanOfCareActOrEncounter ClinicalOfficeVisitSummaryProblemSection ClinicalOfficeVisitSummaryMedicationsSection ClinicalOfficeVisitSummaryAllergiesSection ClinicalOfficeVisitSummaryResultsSection ClinicalOfficeVisitSummaryVitalSignsSection ClinicalOfficeVisitSummaryPlanOfCareSection ClinicalOfficeVisitSummaryProceduresSection ClinicalOfficeVisitSummaryImmunizationsSection ClinicalOfficeVisitSummaryMedicationsAdministeredSection ClinicalOfficeVisitSummaryInstructionsSection ClinicalOfficeVisitSummarySocialHistorySection ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation ClinicalOfficeVisitSummaryPlanOfCareSectionTemplateId ClinicalOfficeVisitSummaryMedicationsAdministeredSectionTemplateId ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity ClinicalOfficeVisitSummaryAssessmentAndPlanSectionTemplateId ClinicalOfficeVisitSummaryInstructionsSectionTemplateId ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions ClinicalOfficeVisitSummarySocialHistorySectionTemplateId ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation' templateId.root='null' constraints.validation.query='ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryEffectiveTime ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummaryPlanOfCareActOrEncounter ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation ClinicalOfficeVisitSummaryPlanOfCareSectionTemplateId ClinicalOfficeVisitSummaryMedicationsAdministeredSectionTemplateId ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity ClinicalOfficeVisitSummaryAssessmentAndPlanSectionTemplateId ClinicalOfficeVisitSummaryInstructionsSectionTemplateId ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions ClinicalOfficeVisitSummarySocialHistorySectionTemplateId ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_utiJUP0REeGlaomQ_EyHlg" base_Generalization="_-2YyAO1UEeGT-eFu7Ghgjw"/>
  <Ecore:EClass xmi:id="_utiwYP0REeGlaomQ_EyHlg" base_Class="_9frdwO1UEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolSocialHistorySectionTemplateId mu2consolSocialHistorySectionSmokingStatusObservation' templateId.root='2.16.840.1.113883.10.20.22.2.17'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ut1EQP0REeGlaomQ_EyHlg" base_Class="_UGcMgPabEeGi99B_x568TQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='TransitionOfCareAmbulatorySummaryResponsibleParty' constraints.validation.error='TransitionOfCareAmbulatorySummaryResponsibleParty TransitionOfCareAmbulatorySummaryReasonForReferralSection'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ut7K4P0REeGlaomQ_EyHlg" base_Class="_uu2T0PdyEeG_npP0e3OOEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransitionOfCareInpatientSummaryHospitalDischargeInstructionsSection'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uuB4kP0REeGlaomQ_EyHlg" base_Class="_i2IoQPhVEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ViewDownloadTransmitSummaryCarePlanFields ViewDownloadTransmitSummaryAllergiesSection ViewDownloadTransmitSummaryMedicationsSection ViewDownloadTransmitSummaryHospitalDischargeMedicationsSection ViewDownloadTransmitSummaryProblemSection ViewDownloadTransmitSummaryProceduresSection ViewDownloadTransmitSummaryVitalSignsSection ViewDownloadTransmitSummaryResultsSection ViewDownloadTransmitSummaryPlanOfCareSection ViewDownloadTransmitSummarySocialHistorySection ViewDownloadTransmitSummaryAssessmentAndPlanSectionTemplateId ViewDownloadTransmitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ViewDownloadTransmitSummarymu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation ViewDownloadTransmitSummaryPlanOfCareSectionTemplateId ViewDownloadTransmitSummarySocialHistorySectionTemplateId ViewDownloadTransmitSummarymu2consolSocialHistorySectionSmokingStatusObservation' constraints.validation.query='ViewDownloadTransmitSummaryAssessmentAndPlanSectionTemplateId ViewDownloadTransmitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ViewDownloadTransmitSummarymu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation ViewDownloadTransmitSummaryPlanOfCareSectionTemplateId ViewDownloadTransmitSummarySocialHistorySectionTemplateId ViewDownloadTransmitSummarymu2consolSocialHistorySectionSmokingStatusObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uuQiEv0REeGlaomQ_EyHlg" base_Class="_rsKJkPhcEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='VDTInpatientSummaryEffectiveTime VDTInpatientSummaryLocation VDTInpatientSummaryHospitalAdmissionDiagnosisSectionTemplateId VDTInpatientSummarymu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis' constraints.validation.error='VDTInpatientSummaryEffectiveTime VDTInpatientSummaryLocation VDTInpatientSummaryChiefComplaintOrReasonForVisit VDTInpatientSummaryHospitalDischargeInstructionsSection VDTInpatientSummaryHospitalAdmissionDiagnosisSection VDTInpatientSummaryHospitalAdmissionDiagnosisSectionTemplateId VDTInpatientSummarymu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uuSXQP0REeGlaomQ_EyHlg" base_Class="_2FvMgPhcEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='VDTAmbulatorySummaryResponsibleParty' constraints.validation.error='VDTAmbulatorySummaryResponsibleParty'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uuYd4P0REeGlaomQ_EyHlg" base_Generalization="_do4koPhzEeGPm7sA61ixGw"/>
  <Ecore:EClass xmi:id="_uuZE8P0REeGlaomQ_EyHlg" base_Class="_do39kPhzEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolFunctionalStatusSectionTemplateId mu2consolFunctionalStatusSectionCognitiveStatus mu2consolFunctionalStatusSectionFunctionalStatus' templateId.root='2.16.840.1.113883.10.20.22.2.14' constraints.validation.info='mu2consolFunctionalStatusSectionCognitiveStatusProblemObservation mu2consolFunctionalStatusSectionCognitiveStatusResultObservation mu2consolFunctionalStatusSectionCognitiveStatusResultOrganizer mu2consolFunctionalStatusSectionFunctionalStatusProblemObservation mu2consolFunctionalStatusSectionFunctionalStatusResultObservation mu2consolFunctionalStatusSectionFunctionalStatusResultOrganizer'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uumgU_0REeGlaomQ_EyHlg" base_Generalization="_yhogMPwYEeGx4ophOjh2tw"/>
  <Ecore:EClass xmi:id="_uunHYf0REeGlaomQ_EyHlg" base_Class="_xbrkwPwYEeGx4ophOjh2tw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SmokingStatusObservationTemplateId SmokingStatusObservationValue SmokingStatusObservationValueP' templateId.root='2.16.840.1.113883.10.22.4.78' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.dependOn.SmokingStatusObservationValue='SmokingStatusObservationValueP'</annotation>
  </Ecore:EClass>
</xmi:XMI>
