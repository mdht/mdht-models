<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_mZtsINd5EeGtNLA6W-IQeQ" name="mu2consol">
    <packageImport xmi:id="_mdYrMtd5EeGtNLA6W-IQeQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.mu2consol.model/model/mu2consol-vocab.uml#_mZ-K0Nd5EeGtNLA6W-IQeQ"/>
    </packageImport>
    <packageImport xmi:id="_HE5v4Ng-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packageImport xmi:id="_qktQYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_sCPlYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_v-6qsNkMEeGsqcJR8eqiMw" name="GeneralHeaderConstraints">
      <ownedRule xmi:id="_OwkOQUuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OwkOQkuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OwumUEuxEeKJ0_vT0JNkww" name="Mu2consolGeneralHeaderConstraintsRecordTarget" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OwumUUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.recordTarget->exists(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OwyQsEuxEeKJ0_vT0JNkww" name="Mu2consolGeneralHeaderConstraintsDocumentationOf" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OwyQsUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzC6gEuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzC6gUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((languageCode.oclIsUndefined() or languageCode.isNullFlavorUndefined()) implies (not languageCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzDhkEuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzDhkUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((languageCode.oclIsUndefined() or languageCode.isNullFlavorUndefined()) implies (not languageCode.oclIsUndefined() and languageCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = languageCode.oclAsType(datatypes::CS) in &#xD;&#xA;value.code = 'aar' or value.code = 'abk' or value.code = 'afr' or value.code = 'aka' or value.code = 'sqi' or value.code = 'amh' or value.code = 'ara' or value.code = 'arg' or value.code = 'hye' or value.code = 'asm' or value.code = 'ava' or value.code = 'ave' or value.code = 'aym' or value.code = 'aze' or value.code = 'bak' or value.code = 'bam' or value.code = 'eus' or value.code = 'bel' or value.code = 'ben' or value.code = 'bih' or value.code = 'bis' or value.code = 'bod' or value.code = 'bos' or value.code = 'bre' or value.code = 'bul' or value.code = 'mya' or value.code = 'cat' or value.code = 'ces' or value.code = 'cha' or value.code = 'che' or value.code = 'zho' or value.code = 'chu' or value.code = 'chv' or value.code = 'cor' or value.code = 'cos' or value.code = 'cre' or value.code = 'cym' or value.code = 'dan' or value.code = 'deu' or value.code = 'div' or value.code = 'nld' or value.code = 'dzo' or value.code = 'ell' or value.code = 'eng' or value.code = 'epo' or value.code = 'est' or value.code = 'ewe' or value.code = 'fao' or value.code = 'fas' or value.code = 'fij' or value.code = 'fin' or value.code = 'fra' or value.code = 'fry' or value.code = 'ful' or value.code = 'kat' or value.code = 'ger' or value.code = 'gla' or value.code = 'gle' or value.code = 'glg' or value.code = 'glv' or value.code = 'grn' or value.code = 'guj' or value.code = 'hat' or value.code = 'hau' or value.code = 'heb' or value.code = 'her' or value.code = 'hin' or value.code = 'hmo' or value.code = 'hrv' or value.code = 'hun' or value.code = 'ibo' or value.code = 'isl' or value.code = 'ido' or value.code = 'iii' or value.code = 'iku' or value.code = 'ile' or value.code = 'ina' or value.code = 'ind' or value.code = 'ipk' or value.code = 'ita' or value.code = 'jav' or value.code = 'jpn' or value.code = 'kal' or value.code = 'kan' or value.code = 'kas' or value.code = 'kau' or value.code = 'kaz' or value.code = 'khm' or value.code = 'kik' or value.code = 'kin' or value.code = 'kir' or value.code = 'kom' or value.code = 'kon' or value.code = 'kor' or value.code = 'kua' or value.code = 'kur' or value.code = 'lao' or value.code = 'lat' or value.code = 'lav' or value.code = 'lim' or value.code = 'lin' or value.code = 'lit' or value.code = 'ltz' or value.code = 'lub' or value.code = 'lug' or value.code = 'mkd' or value.code = 'mah' or value.code = 'mal' or value.code = 'mri' or value.code = 'mar' or value.code = 'msa' or value.code = 'mlg' or value.code = 'mlt' or value.code = 'mon' or value.code = 'nau' or value.code = 'nav' or value.code = 'nbl' or value.code = 'nde' or value.code = 'ndo' or value.code = 'nep' or value.code = 'nno' or value.code = 'nob' or value.code = 'nor' or value.code = 'nya' or value.code = 'oci' or value.code = 'oji' or value.code = 'ori' or value.code = 'orm' or value.code = 'oss' or value.code = 'pan' or value.code = 'pli' or value.code = 'pol' or value.code = 'por' or value.code = 'pus' or value.code = 'que' or value.code = 'roh' or value.code = 'ron' or value.code = 'run' or value.code = 'rus' or value.code = 'sag' or value.code = 'san' or value.code = 'sin' or value.code = 'slk' or value.code = 'slv' or value.code = 'sme' or value.code = 'smo' or value.code = 'sna' or value.code = 'snd' or value.code = 'som' or value.code = 'sot' or value.code = 'spa' or value.code = 'srd' or value.code = 'srp' or value.code = 'ssw' or value.code = 'sun' or value.code = 'swa' or value.code = 'swe' or value.code = 'tah' or value.code = 'tam' or value.code = 'tat' or value.code = 'tel' or value.code = 'tgk' or value.code = 'tgl' or value.code = 'tha' or value.code = 'tir' or value.code = 'ton' or value.code = 'tsn' or value.code = 'tso' or value.code = 'tuk' or value.code = 'tur' or value.code = 'twi' or value.code = 'uig' or value.code = 'ukr' or value.code = 'urd' or value.code = 'uzb' or value.code = 'ven' or value.code = 'vie' or value.code = 'vol' or value.code = 'wln' or value.code = 'wol' or value.code = 'xho' or value.code = 'yid' or value.code = 'yor' or value.code = 'zha' or value.code = 'zul'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzDhkkuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzDhk0uxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined() and ethnicGroupCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = ethnicGroupCode.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.238' and (value.code = '2135-2' or value.code = '2186-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzEIoEuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzEIoUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzEIokuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzEIo0uxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined() and raceCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = raceCode.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.238' and (value.code = '1002-5' or value.code = '2028-9' or value.code = '2076-8' or value.code = '2106-3' or value.code = '2054-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzEIpEuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzEvsEuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzEvsUuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzEvskuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(languageCommunication->one(languageCommunication : cda::LanguageCommunication | not languageCommunication.oclIsUndefined() and languageCommunication.oclIsKindOf(cda::LanguageCommunication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzFWwEuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsRecordTargetPatientRolePatient" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzFWwUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject(patient->one(patient : cda::Patient | not patient.oclIsUndefined() and patient.oclIsKindOf(cda::Patient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzFWwkuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsRecordTargetPatientRole" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzFWw0uxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null)->reject(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzIaEEuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzIaEUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(rim::Entity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzJBIEuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzJBIUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzJoMEuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzJoMUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzJoMkuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsDocumentationOfServiceEvent" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzJoM0uxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzLdYEuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsComponent1EncompassingEncounterEncounterParticipant" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzLdYUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->exists(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OzLdYkuxEeKJ0_vT0JNkww" name="GeneralHeaderConstraintsComponent1EncompassingEncounter" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzLdY0uxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_v-6qsdkMEeGsqcJR8eqiMw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_CynbYAq_EeK-rsV_B2slTA" name="retrieveHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_HAgYIAq_EeK-rsV_B2slTA">
        <ownedRule xmi:id="_HAgYIAq_EeK-rsV_B2slTA" name="body" constrainedElement="_CynbYAq_EeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_KS0dcAq_EeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_SinwcAq_EeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidQhSVEeGGzu7fmW9pXw"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VG3DUNkxEeGsqcJR8eqiMw" name="SummaryOfCareRecord">
      <ownedComment xmi:id="_OaVzYNpiEeGzu8-aAsCS4g">
        <body>Summary Of Care Record</body>
      </ownedComment>
      <ownedRule xmi:id="_gfm_8OvXEeGkopdZmUN1Xw" name="SummaryOfCareRecordCarePlanning" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jopNcOvXEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Owze0EuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordEncountersSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow0F4EuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::EncountersSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ow0s9UuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordPlanOfCareSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow1UAEuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ow17FUuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordAssessmentAndPlanSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow17FkuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ow3wQEuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordAssessmentSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow3wQUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ow4-YEuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordPostoperativeDiagnosisSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow4-YUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostoperativeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ow6MgUuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordProblemSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow6MgkuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ow7apEuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordAllergiesSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow7apUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ow8oxUuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordHistoryOfPastIllnessSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow9P0EuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ow-d8EuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordPreoperativeDiagnosisSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow-d8UuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ow_sEEuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordImmunizationsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow_sEUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxA6MkuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordMedicationsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxA6M0uxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxCIVUuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordSocialHistorySection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxCIVkuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxD9gEuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordResultsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxD9gUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxEklUuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordVitalSignsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxFLoEuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxGZwEuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordProceduresSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxGZwUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxHn4EuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordPostprocedureDiagnosisSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxHn4UuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostprocedureDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oy6-sUuxEeKJ0_vT0JNkww" name="SummaryOfCareRecordFunctionalStatusSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy6-skuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VG3qYNkxEeGsqcJR8eqiMw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_P7O_8ARHEeKNWa1y_3e0dw" name="retrieveFunctionalStatusSection" isQuery="true" bodyCondition="_XgorEARHEeKNWa1y_3e0dw">
        <ownedRule xmi:id="_XgorEARHEeKNWa1y_3e0dw" name="body" constrainedElement="_P7O_8ARHEeKNWa1y_3e0dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_bjD-sARHEeKNWa1y_3e0dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->any(true).oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_33h54ARHEeKNWa1y_3e0dw" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KKOBhSVEeGGzu7fmW9pXw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YKGVUArKEeK-rsV_B2slTA" name="retrieveHospitalDischargeDiagnosisSection" isQuery="true" bodyCondition="_jkk0kArKEeK-rsV_B2slTA">
        <ownedRule xmi:id="_jkk0kArKEeK-rsV_B2slTA" name="body" constrainedElement="_YKGVUArKEeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kX5u8ArKEeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nlDncArKEeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidURSVEeGGzu7fmW9pXw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_QRe90ArLEeK-rsV_B2slTA" name="retrievePostoperativeDiagnosisSection" isQuery="true" bodyCondition="_xSW9wArLEeK-rsV_B2slTA">
        <ownedRule xmi:id="_xSW9wArLEeK-rsV_B2slTA" name="body" constrainedElement="_QRe90ArLEeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_xyWFYArLEeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PostoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_22q64ArLEeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_7UA-4DVyEeGaW4kr-GbV8Q"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KfNnwArMEeK-rsV_B2slTA" name="retrievePostprocedureDiagnosisSection" isQuery="true" bodyCondition="_PIKI0ArMEeK-rsV_B2slTA">
        <ownedRule xmi:id="_PIKI0ArMEeK-rsV_B2slTA" name="body" constrainedElement="_KfNnwArMEeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_TIM20ArMEeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostprocedureDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_NFY_0ArMEeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_-jlSMDVyEeGaW4kr-GbV8Q"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Ow0s8EuxEeKJ0_vT0JNkww" name="getEncountersSection" isQuery="true" bodyCondition="_Ow0s80uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Ow0s80uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Ow0s8EuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow0s9EuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::EncountersSection))->asSequence()->any(true).oclAsType(mu2consol::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Ow0s8UuxEeKJ0_vT0JNkww" type="_9AQcQAKcEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ow0s8kuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Ow17EEuxEeKJ0_vT0JNkww" name="getPlanOfCareSection" isQuery="true" bodyCondition="_Ow17E0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Ow17E0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Ow17EEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow17FEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Ow17EUuxEeKJ0_vT0JNkww" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ow17EkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Ow3JMEuxEeKJ0_vT0JNkww" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_Ow3JM0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Ow3JM0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Ow3JMEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow3JNEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Ow3JMUuxEeKJ0_vT0JNkww" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ow3JMkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Ow4XUEuxEeKJ0_vT0JNkww" name="getAssessmentSection" isQuery="true" bodyCondition="_Ow4XU0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Ow4XU0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Ow4XUEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow4XVEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Ow4XUUuxEeKJ0_vT0JNkww" type="_CaN5MODgEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ow4XUkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Ow5lcEuxEeKJ0_vT0JNkww" name="getPostoperativeDiagnosisSection" isQuery="true" bodyCondition="_Ow5lc0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Ow5lc0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Ow5lcEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow6MgEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PostoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Ow5lcUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_7UA-4DVyEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ow5lckuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Ow6zkEuxEeKJ0_vT0JNkww" name="getProblemSection" isQuery="true" bodyCondition="_Ow7aokuxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Ow7aokuxEeKJ0_vT0JNkww" name="body" constrainedElement="_Ow6zkEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow7ao0uxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Ow7aoEuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ow7aoUuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Ow8owEuxEeKJ0_vT0JNkww" name="getAllergiesSection" isQuery="true" bodyCondition="_Ow8ow0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Ow8ow0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Ow8owEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow8oxEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Ow8owUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ow8owkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Ow924EuxEeKJ0_vT0JNkww" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_Ow9240uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Ow9240uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Ow924EuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow925EuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Ow924UuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PQJcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ow924kuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Ow_FAEuxEeKJ0_vT0JNkww" name="getPreoperativeDiagnosisSection" isQuery="true" bodyCondition="_Ow_FA0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Ow_FA0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Ow_FAEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ow_FBEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Ow_FAUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Cu6qMDVzEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ow_FAkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxATIEuxEeKJ0_vT0JNkww" name="getImmunizationsSection" isQuery="true" bodyCondition="_OxA6MEuxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxA6MEuxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxATIEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxA6MUuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxATIUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxATIkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxCIUEuxEeKJ0_vT0JNkww" name="getMedicationsSection" isQuery="true" bodyCondition="_OxCIU0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxCIU0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxCIUEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxCIVEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxCIUUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxCIUkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxDWcEuxEeKJ0_vT0JNkww" name="getSocialHistorySection" isQuery="true" bodyCondition="_OxDWc0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxDWc0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxDWcEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxDWdEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxDWcUuxEeKJ0_vT0JNkww" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxDWckuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxEkkEuxEeKJ0_vT0JNkww" name="getResultsSection" isQuery="true" bodyCondition="_OxEkk0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxEkk0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxEkkEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxEklEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ResultsSection))->asSequence()->any(true).oclAsType(mu2consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxEkkUuxEeKJ0_vT0JNkww" type="_R5ZkQAJvEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxEkkkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxFysEuxEeKJ0_vT0JNkww" name="getVitalSignsSection" isQuery="true" bodyCondition="_OxFys0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxFys0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxFysEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxFytEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxFysUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxFyskuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxHA0EuxEeKJ0_vT0JNkww" name="getProceduresSection" isQuery="true" bodyCondition="_OxHA00uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxHA00uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxHA0EuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxHA1EuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ProceduresSection))->asSequence()->any(true).oclAsType(mu2consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxHA0UuxEeKJ0_vT0JNkww" type="_oJZzEAKlEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxHA0kuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxIO8EuxEeKJ0_vT0JNkww" name="getPostprocedureDiagnosisSection" isQuery="true" bodyCondition="_OxIO80uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxIO80uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxIO8EuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxIO9EuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostprocedureDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxIO8UuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_-jlSMDVyEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxIO8kuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Oy8M0EuxEeKJ0_vT0JNkww" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_Oy8M00uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oy8M00uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Oy8M0EuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy8M1EuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->any(true).oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oy8M0UuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KKOBhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oy8M0kuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_svnagODKEeGdSJSga09Dyg" name="PlanOfCareSection">
      <ownedRule xmi:id="_OxKrMEuxEeKJ0_vT0JNkww" name="PlanOfCareSectionTemplateId" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxKrMUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vqugwODKEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_OxI2AEuxEeKJ0_vT0JNkww" name="getMu2consolPlanOfCareActivityActs" isQuery="true" bodyCondition="_OxI2A0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxI2A0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxI2AEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxI2BEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlanOfCareActivityAct)).oclAsType(consol::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxI2AUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWE5xSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxI2AkuxEeKJ0_vT0JNkww" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxJdEEuxEeKJ0_vT0JNkww" name="getMu2consolPlanOfCareActivityEncounters" isQuery="true" bodyCondition="_OxJdE0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxJdE0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxJdEEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxJdFEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter)).oclAsType(consol::PlanOfCareActivityEncounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxJdEUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWFBBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxJdEkuxEeKJ0_vT0JNkww" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxKEIEuxEeKJ0_vT0JNkww" name="getMu2consolPlanOfCareActivityObservations" isQuery="true" bodyCondition="_OxKEI0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxKEI0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxKEIEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxKEJEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlanOfCareActivityObservation)).oclAsType(consol::PlanOfCareActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxKEIUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NcLjhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxKEIkuxEeKJ0_vT0JNkww" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CaN5MODgEeGdSJSga09Dyg" name="AssessmentSection">
      <ownedRule xmi:id="_OxL5UUuxEeKJ0_vT0JNkww" name="AssessmentSectionTemplateId" constrainedElement="_CaN5MODgEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxL5UkuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxNHcEuxEeKJ0_vT0JNkww" name="Mu2consolAssessmentSectionProblemObservation" constrainedElement="_CaN5MODgEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxNugEuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D0JgkODgEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_W8pI4DszEeGvzMYhXuqAEA"/>
      </generalization>
      <ownedOperation xmi:id="_OxOVkEuxEeKJ0_vT0JNkww" name="getProblemObservation" isQuery="true" bodyCondition="_OxOVk0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxOVk0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxOVkEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxOVlEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxOVkUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxOVkkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_w2gYkODkEeGdSJSga09Dyg" name="AssessmentAndPlanSection">
      <ownedRule xmi:id="_OxO8oUuxEeKJ0_vT0JNkww" name="AssessmentAndPlanSectionTemplateId" constrainedElement="_w2gYkODkEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxO8okuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ySywYODkEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_OxQKwEuxEeKJ0_vT0JNkww" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_OxQx0kuxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxQx0kuxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxQKwEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxQx00uxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxQx0EuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxQx0UuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxQx1EuxEeKJ0_vT0JNkww" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_OxQx10uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxQx10uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxQx1EuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxRY4EuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxQx1UuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxQx1kuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxRY4UuxEeKJ0_vT0JNkww" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_OxRY5EuxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxRY5EuxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxRY4UuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxRY5UuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxRY4kuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxRY40uxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxR_8EuxEeKJ0_vT0JNkww" name="getProblemObservation" isQuery="true" bodyCondition="_OxR_80uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxR_80uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxR_8EuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxR_9EuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxR_8UuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxR_8kuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7D0CQOzmEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummary">
      <ownedComment xmi:id="_V_Po0PhqEeGPm7sA61ixGw">
        <body>MU2 170.314(e)(2) Clinical Summary</body>
      </ownedComment>
      <ownedRule xmi:id="_F7KU8O1YEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryResponsibleParty" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_HLw1oO1iEeGT-eFu7Ghgjw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ke17gO1YEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;&#xA;cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kNHwMO1bEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryReasonForOfficeVisit" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_miJt4O1bEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_CFE3YO1cEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryCarePlanning" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_DrZ8AO1cEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fRfCgPhlEeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryEffectiveTime" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_fRfCgfhlEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fRfCgvhlEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or &#xD;&#xD;&#xA;effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_8kY74PhlEeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryLocation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_BORREPhmEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-WWowPhlEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | &#xD;&#xD;&#xA;not location.oclIsUndefined() and location.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WhtMwAveEeK-rsV_B2slTA" name="ClinicalOfficeVisitSummaryInstructionsEntry" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_ZP-J0AveEeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cahaQAveEeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrieveInstructionsSection()->excluding(null)->reject(retrieveInstructionsSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::Instructions)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iaMBMAvfEeK-rsV_B2slTA" name="ClinicalOfficeVisitSummaryMedicationsAdministeredEntry" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_nOnZgAvfEeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_moYf8AvfEeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrieveMedicationsAdministeredSection()->excluding(null)->reject(retrieveMedicationsAdministeredSection().getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxZUsEuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryProblemSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxZUsUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxdmIEuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryMedicationsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxdmIUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oxe0QkuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryAllergiesSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oxe0Q0uxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxgCZUuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryResultsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxgpcEuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oxh3kEuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryVitalSignsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oxh3kUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxjFsEuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryPlanOfCareSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxjFsUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxkT0EuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryProceduresSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxkT0UuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oxlh8UuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryImmunizationsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oxlh8kuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxmwFUuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryMedicationsAdministeredSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxmwFkuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxolQEuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryReasonForVisitSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxolQUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxpzYEuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryChiefComplaintSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxpzYUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxrBgkuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryChiefComplaintAndReasonForVisitSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxrBg0uxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oxs2sEuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryAssessmentAndPlanSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oxs2sUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxuE0EuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummaryInstructionsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxuE0UuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyW-AEuxEeKJ0_vT0JNkww" name="ClinicalOfficeVisitSummarySocialHistorySection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyW-AUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7D0pUOzmEeGT-eFu7Ghgjw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_viwLAP0aEeGlaomQ_EyHlg" name="retrievePlanOfCareSection" isQuery="true" bodyCondition="_F6QYgP0bEeGlaomQ_EyHlg">
        <ownedRule xmi:id="_F6QYgP0bEeGlaomQ_EyHlg" name="body" constrainedElement="_viwLAP0aEeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_IoybUP0bEeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_9Ec1cP0aEeGlaomQ_EyHlg" name="" type="_svnagODKEeGdSJSga09Dyg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_NZ56wAveEeK-rsV_B2slTA" name="retrieveInstructionsSection" isQuery="true" bodyCondition="_PG1WoAveEeK-rsV_B2slTA">
        <ownedRule xmi:id="_PG1WoAveEeK-rsV_B2slTA" name="body" constrainedElement="_NZ56wAveEeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Q2CqcAveEeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))->asSequence()->any(true).oclAsType(consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_SmQq4AveEeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ZxyoAAvfEeK-rsV_B2slTA" name="retrieveMedicationsAdministeredSection" isQuery="true" bodyCondition="_cokn4AvfEeK-rsV_B2slTA">
        <ownedRule xmi:id="_cokn4AvfEeK-rsV_B2slTA" name="body" constrainedElement="_ZxyoAAvfEeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_efGrsAvfEeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fMrjYAvfEeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj_BSVEeGGzu7fmW9pXw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxZ7wEuxEeKJ0_vT0JNkww" name="getProblemSection" isQuery="true" bodyCondition="_Oxai0kuxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oxai0kuxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxZ7wEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oxai00uxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oxai0EuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oxai0UuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxeNMEuxEeKJ0_vT0JNkww" name="getMedicationsSection" isQuery="true" bodyCondition="_Oxe0QEuxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oxe0QEuxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxeNMEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oxe0QUuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxeNMUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxeNMkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxgCYEuxEeKJ0_vT0JNkww" name="getAllergiesSection" isQuery="true" bodyCondition="_OxgCY0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxgCY0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxgCYEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxgCZEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxgCYUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxgCYkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxhQgEuxEeKJ0_vT0JNkww" name="getResultsSection" isQuery="true" bodyCondition="_OxhQg0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxhQg0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxhQgEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxhQhEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ResultsSection))->asSequence()->any(true).oclAsType(mu2consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxhQgUuxEeKJ0_vT0JNkww" type="_R5ZkQAJvEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxhQgkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxieoEuxEeKJ0_vT0JNkww" name="getVitalSignsSection" isQuery="true" bodyCondition="_Oxieo0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oxieo0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxieoEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxiepEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxieoUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxieokuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxjswEuxEeKJ0_vT0JNkww" name="getPlanOfCareSection" isQuery="true" bodyCondition="_Oxjsw0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oxjsw0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxjswEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxjsxEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxjswUuxEeKJ0_vT0JNkww" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxjswkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Oxk64EuxEeKJ0_vT0JNkww" name="getProceduresSection" isQuery="true" bodyCondition="_Oxk640uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oxk640uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Oxk64EuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oxlh8EuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ProceduresSection))->asSequence()->any(true).oclAsType(mu2consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oxk64UuxEeKJ0_vT0JNkww" type="_oJZzEAKlEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oxk64kuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxmwEEuxEeKJ0_vT0JNkww" name="getImmunizationsSection" isQuery="true" bodyCondition="_OxmwE0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxmwE0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxmwEEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxmwFEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxmwEUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxmwEkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Oxn-MEuxEeKJ0_vT0JNkww" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_Oxn-M0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oxn-M0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Oxn-MEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oxn-NEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oxn-MUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj_BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oxn-MkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxpMUEuxEeKJ0_vT0JNkww" name="getReasonForVisitSection" isQuery="true" bodyCondition="_OxpMU0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxpMU0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxpMUEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxpMVEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxpMUUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxpMUkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxqacEuxEeKJ0_vT0JNkww" name="getChiefComplaintSection" isQuery="true" bodyCondition="_OxrBgEuxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxrBgEuxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxqacEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxrBgUuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxqacUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxqackuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxsPoEuxEeKJ0_vT0JNkww" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_OxsPo0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxsPo0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxsPoEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxsPpEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxsPoUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxsPokuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OxtdwEuxEeKJ0_vT0JNkww" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_Oxtdw0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oxtdw0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxtdwEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxtdxEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxtdwUuxEeKJ0_vT0JNkww" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxtdwkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Oxur4EuxEeKJ0_vT0JNkww" name="getInstructionsSection" isQuery="true" bodyCondition="_Oxur40uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oxur40uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Oxur4EuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oxur5EuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))->asSequence()->any(true).oclAsType(consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oxur4UuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oxur4kuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OyXlEEuxEeKJ0_vT0JNkww" name="getSocialHistorySection" isQuery="true" bodyCondition="_OyXlE0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyXlE0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyXlEEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyXlFEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyXlEUuxEeKJ0_vT0JNkww" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyXlEkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9frdwO1UEeGT-eFu7Ghgjw" name="SocialHistorySection">
      <ownedRule xmi:id="_Oxai1UuxEeKJ0_vT0JNkww" name="SocialHistorySectionTemplateId" constrainedElement="_9frdwO1UEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxbJ4EuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxcYAEuxEeKJ0_vT0JNkww" name="Mu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_9frdwO1UEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxcYAUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(mu2consol::SmokingStatusObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-2YyAO1UEeGT-eFu7Ghgjw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_Oxc_EEuxEeKJ0_vT0JNkww" name="getMu2consolSmokingStatusObservations" isQuery="true" bodyCondition="_Oxc_E0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oxc_E0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Oxc_EEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oxc_FEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(mu2consol::SmokingStatusObservation)).oclAsType(mu2consol::SmokingStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oxc_EUuxEeKJ0_vT0JNkww" type="_xbrkwPwYEeGx4ophOjh2tw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oxc_EkuxEeKJ0_vT0JNkww" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UGcMgPabEeGi99B_x568TQ" name="TransitionOfCareAmbulatorySummary">
      <ownedComment xmi:id="_ottgoPhKEeGQQ6aVp7opYg">
        <body>MU2 170.314(b)(2) Transition of Care/Referral Summary - For Ambulatory Care&#xD;
MU2 170.314(b)(7) Export Summary  - For Ambulatory Care</body>
      </ownedComment>
      <ownedRule xmi:id="_vSLf0PdxEeG_npP0e3OOEw" name="TransitionOfCareAmbulatorySummaryResponsibleParty" constrainedElement="_UGcMgPabEeGi99B_x568TQ">
        <ownedComment xmi:id="_BaqaQPeVEeG_npP0e3OOEw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_z3eP8PdxEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ujInEAQrEeKNWa1y_3e0dw" name="TransitionOfCareAmbulatorySummaryAmbulatoryEncounterDiagnoses" constrainedElement="_UGcMgPabEeGi99B_x568TQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_yMSfEAQrEeKNWa1y_3e0dw">
          <language>OCL</language>
          <body>( self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostoperativeDiagnosisSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostprocedureDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::EncountersSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OxwhEEuxEeKJ0_vT0JNkww" name="TransitionOfCareAmbulatorySummaryReasonForReferralSection" constrainedElement="_UGcMgPabEeGi99B_x568TQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxwhEUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WN-gwPabEeGi99B_x568TQ" general="_VG3DUNkxEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_OxxIIEuxEeKJ0_vT0JNkww" name="getReasonForReferralSection" isQuery="true" bodyCondition="_OxxII0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OxxII0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OxxIIEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OxxIJEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))->asSequence()->any(true).oclAsType(consol::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OxxIIUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQFxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxxIIkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uu2T0PdyEeG_npP0e3OOEw" name="TransitionOfCareInpatientSummary">
      <ownedComment xmi:id="_rczkIPhKEeGQQ6aVp7opYg">
        <body>MU2 170.314(b)(2) Transition of Care/Referral Summary - For Inpatient Care&#xD;
MU2 170.314(b)(7) Export Summary  - For Inpatient Care</body>
      </ownedComment>
      <ownedRule xmi:id="_jVFaQAQrEeKNWa1y_3e0dw" name="TransitionOfCareInpatientSummaryInpatientEncounterDiagnoses" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m3iNUAQrEeKNWa1y_3e0dw">
          <language>OCL</language>
          <body>( self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostoperativeDiagnosisSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostprocedureDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::EncountersSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeDiagnosisSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_UuuwwArBEeK-rsV_B2slTA" name="TransitionOfCareInpatientSummaryHospitalAdmissionDiagnosisEntry" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <ownedComment xmi:id="_YT3EYArBEeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6eUAArBEeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrieveHospitalAdmissionDiagnosisSection()->excluding(null)->reject(retrieveHospitalAdmissionDiagnosisSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_T92FgAu1EeK-rsV_B2slTA" name="TransitionOfCareInpatientSummaryHospitalDischargeDiagnosesEntry" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <ownedComment xmi:id="_ZzaKsAu1EeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-Zw4Au1EeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrieveHospitalDischargeDiagnosisSection()->excluding(null)->reject(retrieveHospitalDischargeDiagnosisSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::HospitalDischargeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_301W8Au1EeK-rsV_B2slTA" name="TransitionOfCareInpatientSummaryPostoperativeDiagnosisEntry" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <ownedComment xmi:id="_8GMecAu1EeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_62S80Au1EeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrievePostoperativeDiagnosisSection()->excluding(null)->reject(retrievePostoperativeDiagnosisSection().getObservations()->exists(a : cda::Observation | a.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_JujKgAu2EeK-rsV_B2slTA" name="TransitionOfCareInpatientSummaryPostprocedureDiagnosisEntry" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <ownedComment xmi:id="_PLUVMAu2EeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_NbXagAu2EeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrievePostprocedureDiagnosisSection()->excluding(null)->reject(retrievePostprocedureDiagnosisSection().getObservations()->exists(a : cda::Observation | a.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ox2AoEuxEeKJ0_vT0JNkww" name="TransitionOfCareInpatientSummaryHospitalDischargeInstructionsSection" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ox2AoUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oy1fIEuxEeKJ0_vT0JNkww" name="TransitionOfCareInpatientSummaryHospitalDischargeMedicationsSection" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy1fIUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oy4icEuxEeKJ0_vT0JNkww" name="TransitionOfCareInpatientSummaryHospitalAdmissionDiagnosisSection" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy4icUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oy5wkEuxEeKJ0_vT0JNkww" name="TransitionOfCareInpatientSummaryHospitalDischargeDiagnosisSection" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy5wkUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oy_QIEuxEeKJ0_vT0JNkww" name="TransitionOfCareInpatientSummaryHospitalAdmissionMedicationsSectionEntriesOptional" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy_QIUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vutOUPdyEeG_npP0e3OOEw" general="_VG3DUNkxEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_Ox3OwEuxEeKJ0_vT0JNkww" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_Ox3Ow0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Ox3Ow0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Ox3OwEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ox3OxEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Ox3OwUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ox3OwkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Oy2GMEuxEeKJ0_vT0JNkww" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_Oy2GM0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oy2GM0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Oy2GMEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy2GNEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oy2GMUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oy2GMkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Oy5JgEuxEeKJ0_vT0JNkww" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_Oy5Jg0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oy5Jg0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Oy5JgEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy5JhEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oy5JgUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidQhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oy5JgkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Oy6XoEuxEeKJ0_vT0JNkww" name="getHospitalDischargeDiagnosisSection" isQuery="true" bodyCondition="_Oy6Xo0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oy6Xo0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Oy6XoEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy6-sEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oy6XoUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidURSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oy6XokuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Oy_3MEuxEeKJ0_vT0JNkww" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_OzAeQEuxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OzAeQEuxEeKJ0_vT0JNkww" name="body" constrainedElement="_Oy_3MEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OzAeQUuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oy_3MUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oy_3MkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i2IoQPhVEeGPm7sA61ixGw" name="ViewDownloadTransmitSummary">
      <ownedRule xmi:id="_CrzxoPhcEeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryCarePlanFields" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FGH38PhcEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ox98cEuxEeKJ0_vT0JNkww" name="ViewDownloadTransmitSummaryAllergiesSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ox98cUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ox_KkUuxEeKJ0_vT0JNkww" name="ViewDownloadTransmitSummaryMedicationsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ox_KkkuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyA_wEuxEeKJ0_vT0JNkww" name="ViewDownloadTransmitSummaryProblemSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyA_wUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyC08EuxEeKJ0_vT0JNkww" name="ViewDownloadTransmitSummaryProceduresSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyC08UuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyEqIEuxEeKJ0_vT0JNkww" name="ViewDownloadTransmitSummaryVitalSignsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyEqIUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyF4QEuxEeKJ0_vT0JNkww" name="ViewDownloadTransmitSummaryResultsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyF4QUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyHGYEuxEeKJ0_vT0JNkww" name="ViewDownloadTransmitSummaryAssessmentAndPlanSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyHGYUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyIUgEuxEeKJ0_vT0JNkww" name="ViewDownloadTransmitSummaryPlanOfCareSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyIUgUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyJioEuxEeKJ0_vT0JNkww" name="ViewDownloadTransmitSummarySocialHistorySection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyJioUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kFewQPhVEeGPm7sA61ixGw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_TbWkAAvXEeK-rsV_B2slTA" name="retrievePreoperativeDiagnosisSection" isQuery="true" bodyCondition="_V5Qw4AvXEeK-rsV_B2slTA">
        <ownedRule xmi:id="_V5Qw4AvXEeK-rsV_B2slTA" name="body" constrainedElement="_TbWkAAvXEeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Zc4ooAvXEeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_avIToAvXEeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Cu6qMDVzEeGaW4kr-GbV8Q"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Ox-jgEuxEeKJ0_vT0JNkww" name="getAllergiesSection" isQuery="true" bodyCondition="_Ox-jg0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Ox-jg0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Ox-jgEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ox_KkEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Ox-jgUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ox-jgkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OyAYsEuxEeKJ0_vT0JNkww" name="getMedicationsSection" isQuery="true" bodyCondition="_OyAYs0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyAYs0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyAYsEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyAYtEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyAYsUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyAYskuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OyBm0EuxEeKJ0_vT0JNkww" name="getProblemSection" isQuery="true" bodyCondition="_OyCN4kuxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyCN4kuxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyBm0EuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyCN40uxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyCN4EuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyCN4UuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OyEDEEuxEeKJ0_vT0JNkww" name="getProceduresSection" isQuery="true" bodyCondition="_OyEDE0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyEDE0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyEDEEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyEDFEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ProceduresSection))->asSequence()->any(true).oclAsType(mu2consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyEDEUuxEeKJ0_vT0JNkww" type="_oJZzEAKlEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyEDEkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OyFRMEuxEeKJ0_vT0JNkww" name="getVitalSignsSection" isQuery="true" bodyCondition="_OyFRM0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyFRM0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyFRMEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyFRNEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyFRMUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyFRMkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OyGfUEuxEeKJ0_vT0JNkww" name="getResultsSection" isQuery="true" bodyCondition="_OyGfU0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyGfU0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyGfUEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyGfVEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ResultsSection))->asSequence()->any(true).oclAsType(mu2consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyGfUUuxEeKJ0_vT0JNkww" type="_R5ZkQAJvEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyGfUkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OyHtcEuxEeKJ0_vT0JNkww" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_OyHtc0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyHtc0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyHtcEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyHtdEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyHtcUuxEeKJ0_vT0JNkww" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyHtckuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OyI7kEuxEeKJ0_vT0JNkww" name="getPlanOfCareSection" isQuery="true" bodyCondition="_OyI7k0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyI7k0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyI7kEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyI7lEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyI7kUuxEeKJ0_vT0JNkww" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyI7kkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OyKJsEuxEeKJ0_vT0JNkww" name="getSocialHistorySection" isQuery="true" bodyCondition="_OyKJs0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyKJs0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyKJsEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyKJtEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyKJsUuxEeKJ0_vT0JNkww" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyKJskuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rsKJkPhcEeGPm7sA61ixGw" name="VDTInpatientSummary">
      <ownedComment xmi:id="_qrDxkPhfEeGPm7sA61ixGw">
        <body>MU2 170.314 (e)(1)  Inpatient Summary</body>
      </ownedComment>
      <ownedRule xmi:id="_EFIqIPheEeGPm7sA61ixGw" name="VDTInpatientSummaryEffectiveTime" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_LpyuYPheEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_IaNM8PheEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or &#xD;&#xD;&#xA;effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WH_yoPheEeGPm7sA61ixGw" name="VDTInpatientSummaryLocation" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_bra-8PheEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aLjusPheEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | &#xD;&#xD;&#xA;not location.oclIsUndefined() and location.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_GUuRsPhfEeGPm7sA61ixGw" name="VDTInpatientSummaryChiefComplaintOrReasonForVisit" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JY5NUPhfEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tV2F4ArAEeK-rsV_B2slTA" name="VDTInpatientSummaryHospitalAdmissionDiagnosisEntry" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_5jRFAArAEeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wiyjAArAEeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrieveHospitalAdmissionDiagnosisSection()->excluding(null)->reject(retrieveHospitalAdmissionDiagnosisSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_r-lpQAvXEeK-rsV_B2slTA" name="VDTInpatientSummaryPreoperativeDiagnosisEntry" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="__Y8JIAvXEeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1qwMkAvXEeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrievePreoperativeDiagnosisSection()->excluding(null)->reject(retrievePreoperativeDiagnosisSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PreoperativeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyPpQEuxEeKJ0_vT0JNkww" name="VDTInpatientSummaryHospitalDischargeInstructionsSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyPpQUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyQ3Y0uxEeKJ0_vT0JNkww" name="VDTInpatientSummaryHospitalAdmissionDiagnosisSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyQ3ZEuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OySskEuxEeKJ0_vT0JNkww" name="VDTInpatientSummaryChiefComplaintSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OySskUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyT6sEuxEeKJ0_vT0JNkww" name="VDTInpatientSummaryReasonForVisitSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyT6sUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyVI1UuxEeKJ0_vT0JNkww" name="VDTInpatientSummaryChiefComplaintAndReasonForVisitSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyVv4EuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oy2tQEuxEeKJ0_vT0JNkww" name="VDTInpatientSummaryHospitalDischargeMedicationsSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy2tQUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oy8M1UuxEeKJ0_vT0JNkww" name="VDTInpatientSummaryPreoperativeDiagnosisSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy8M1kuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oy-CAEuxEeKJ0_vT0JNkww" name="VDTInpatientSummaryHospitalAdmissionMedicationsSectionEntriesOptional" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy-CAUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_tK1HAPhcEeGPm7sA61ixGw" general="_i2IoQPhVEeGPm7sA61ixGw"/>
      <ownedOperation xmi:id="_OyQQUEuxEeKJ0_vT0JNkww" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_OyQ3YUuxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyQ3YUuxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyQQUEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyQ3YkuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyQQUUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyQ3YEuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OySFgEuxEeKJ0_vT0JNkww" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_OySFg0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OySFg0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OySFgEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OySFhEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OySFgUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidQhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OySFgkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OyTToEuxEeKJ0_vT0JNkww" name="getChiefComplaintSection" isQuery="true" bodyCondition="_OyTTo0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyTTo0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyTToEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyTTpEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyTToUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyTTokuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OyVI0EuxEeKJ0_vT0JNkww" name="getReasonForVisitSection" isQuery="true" bodyCondition="_OyVI00uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyVI00uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyVI0EuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyVI1EuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyVI0UuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyVI0kuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OyWW8EuxEeKJ0_vT0JNkww" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_OyWW80uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyWW80uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyWW8EuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyWW9EuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyWW8UuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyWW8kuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Oy37YEuxEeKJ0_vT0JNkww" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_Oy37Y0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oy37Y0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Oy37YEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy37ZEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oy37YUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oy37YkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Oy9a8EuxEeKJ0_vT0JNkww" name="getPreoperativeDiagnosisSection" isQuery="true" bodyCondition="_Oy9a80uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oy9a80uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Oy9a8EuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy9a9EuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oy9a8UuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Cu6qMDVzEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oy9a8kuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Oy-pEEuxEeKJ0_vT0JNkww" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_Oy-pE0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oy-pE0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Oy-pEEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy-pFEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oy-pEUuxEeKJ0_vT0JNkww" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oy-pEkuxEeKJ0_vT0JNkww" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2FvMgPhcEeGPm7sA61ixGw" name="VDTAmbulatorySummary">
      <ownedComment xmi:id="_sjR3cPhfEeGPm7sA61ixGw">
        <body>MU2 170.314 (e)(1) Ambulatory Summary</body>
      </ownedComment>
      <ownedRule xmi:id="_-3broPhcEeGPm7sA61ixGw" name="VDTAmbulatorySummaryResponsibleParty" constrainedElement="_2FvMgPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_B5gVgPhdEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_A_BqQPhdEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;&#xA;cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2j8ygPhcEeGPm7sA61ixGw" general="_i2IoQPhVEeGPm7sA61ixGw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xbrkwPwYEeGx4ophOjh2tw" name="SmokingStatusObservation">
      <ownedRule xmi:id="_OyYMIEuxEeKJ0_vT0JNkww" name="TobaccoUseTemplateId" constrainedElement="_xbrkwPwYEeGx4ophOjh2tw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyYMIUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.78')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oyb2gEuxEeKJ0_vT0JNkww" name="SmokingStatusObservationValueP" constrainedElement="_xbrkwPwYEeGx4ophOjh2tw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oyb2gUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyaBUEuxEeKJ0_vT0JNkww" name="SmokingStatusObservationValue" constrainedElement="_xbrkwPwYEeGx4ophOjh2tw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyaBUUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '449868002' or value.code = '428041000124106' or value.code = '8517006' or value.code = '266919005' or value.code = '77176002' or value.code = '266927001' or value.code = '428071000124103' or value.code = '428061000124105')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yhogMPwYEeGx4ophOjh2tw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_gIH_QOWQEeGKmvzED_He2w"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_tAOdEAJuEeKIhvHOhwsFvA" name="ResultObservation">
      <ownedRule xmi:id="_wYmuIAJuEeKIhvHOhwsFvA" name="Mu2consolResultObservationResultObservationCodeValue" constrainedElement="_tAOdEAJuEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zUi60AJuEeKIhvHOhwsFvA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies self.code.codeSystem = '2.16.840.1.113883.6.1'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyeSwUuxEeKJ0_vT0JNkww" name="ResultObservationTemplateId" constrainedElement="_tAOdEAJuEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyeSwkuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OygH8EuxEeKJ0_vT0JNkww" name="Mu2consolResultObservationCode" constrainedElement="_tAOdEAJuEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OygH8UuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_tAPEIAJuEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2J1d4BSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_--CGcAJuEeKIhvHOhwsFvA" name="ResultOrganizer">
      <ownedRule xmi:id="_OyhWEUuxEeKJ0_vT0JNkww" name="ResultOrganizerTemplateId" constrainedElement="_--CGcAJuEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyhWEkuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyikMEuxEeKJ0_vT0JNkww" name="Mu2consolResultOrganizerResultObservation" constrainedElement="_--CGcAJuEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyikMUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(mu2consol::ResultObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_--CGcQJuEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JxzgBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_OyjLQEuxEeKJ0_vT0JNkww" name="getMu2consolResultObservations" isQuery="true" bodyCondition="_OyjLQ0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyjLQ0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyjLQEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyjyUEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(mu2consol::ResultObservation)).oclAsType(mu2consol::ResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyjLQUuxEeKJ0_vT0JNkww" type="_tAOdEAJuEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyjLQkuxEeKJ0_vT0JNkww" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R5ZkQAJvEeKIhvHOhwsFvA" name="ResultsSection">
      <ownedRule xmi:id="_OykZYEuxEeKJ0_vT0JNkww" name="ResultsSectionEntriesOptionalTemplateId" constrainedElement="_R5ZkQAJvEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OykZYUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.3.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OymOkEuxEeKJ0_vT0JNkww" name="Mu2consolResultsSectionResultOrganizer" constrainedElement="_R5ZkQAJvEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OymOkUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(mu2consol::ResultOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_R5ZkQQJvEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_OyoDwEuxEeKJ0_vT0JNkww" name="getMu2consolResultOrganizers" isQuery="true" bodyCondition="_OyoDw0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_OyoDw0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyoDwEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyoDxEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(mu2consol::ResultOrganizer)).oclAsType(mu2consol::ResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyoDwUuxEeKJ0_vT0JNkww" type="_--CGcAJuEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyoDwkuxEeKJ0_vT0JNkww" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zL3xEAKcEeKIhvHOhwsFvA" name="EncounterActivities">
      <ownedRule xmi:id="_QLlMMAKeEeKIhvHOhwsFvA" name="Mu2consolEncounterActivitiesCodeValue" constrainedElement="_zL3xEAKcEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnjxIAKeEeKIhvHOhwsFvA">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.3' xor self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oyoq0UuxEeKJ0_vT0JNkww" name="EncounterActivitiesTemplateId" constrainedElement="_zL3xEAKcEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OypR4EuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.49')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zL4YIAKcEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LayQBSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9AQcQAKcEeKIhvHOhwsFvA" name="EncountersSection">
      <ownedRule xmi:id="_OysVMUuxEeKJ0_vT0JNkww" name="EncountersSectionEntriesOptionalTemplateId" constrainedElement="_9AQcQAKcEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OysVMkuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.22.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OytjUEuxEeKJ0_vT0JNkww" name="Mu2consolEncountersSectionEncounterActivities" constrainedElement="_9AQcQAKcEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OytjUUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(mu2consol::EncounterActivities))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_9AQcQQKcEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LWg0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_OyuxcEuxEeKJ0_vT0JNkww" name="getMu2consolEncounterActivitiess" isQuery="true" bodyCondition="_Oyuxc0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oyuxc0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_OyuxcEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyuxdEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(mu2consol::EncounterActivities)).oclAsType(mu2consol::EncounterActivities)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_OyuxcUuxEeKJ0_vT0JNkww" type="_zL3xEAKcEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OyuxckuxEeKJ0_vT0JNkww" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KmS6gAKlEeKIhvHOhwsFvA" name="ProcedureActivityProcedure">
      <ownedRule xmi:id="_Xm1YoAKlEeKIhvHOhwsFvA" name="Mu2consolProcedureActivityProcedureCodeValue" constrainedElement="_KmS6gAKlEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_blLdgAKlEeKIhvHOhwsFvA">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.96' xor self.code.codeSystem = '2.16.840.1.113883.6.12'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyvYgEuxEeKJ0_vT0JNkww" name="ProcedureActivityProcedureTemplateId" constrainedElement="_KmS6gAKlEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyvYgUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OyxNsEuxEeKJ0_vT0JNkww" name="Mu2consolProcedureActivityProcedureCode" constrainedElement="_KmS6gAKlEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyxNsUuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KmThkAKlEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OG58RSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJZzEAKlEeKIhvHOhwsFvA" name="ProceduresSection">
      <ownedRule xmi:id="_Oyyb0UuxEeKJ0_vT0JNkww" name="ProceduresSectionEntriesOptionalTemplateId" constrainedElement="_oJZzEAKlEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oyyb0kuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.7.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Oyzp8EuxEeKJ0_vT0JNkww" name="Mu2consolProceduresSectionProcedureActivityProcedure" constrainedElement="_oJZzEAKlEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oyzp8UuxEeKJ0_vT0JNkww">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(mu2consol::ProcedureActivityProcedure))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oJZzEQKlEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_Oy04EEuxEeKJ0_vT0JNkww" name="getMu2consolProcedureActivityProcedures" isQuery="true" bodyCondition="_Oy04E0uxEeKJ0_vT0JNkww">
        <ownedRule xmi:id="_Oy04E0uxEeKJ0_vT0JNkww" name="body" constrainedElement="_Oy04EEuxEeKJ0_vT0JNkww">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oy04FEuxEeKJ0_vT0JNkww">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(mu2consol::ProcedureActivityProcedure)).oclAsType(mu2consol::ProcedureActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Oy04EUuxEeKJ0_vT0JNkww" type="_KmS6gAKlEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oy04EkuxEeKJ0_vT0JNkww" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <profileApplication xmi:id="_mZtsIdd5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsItd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_mZtsI9d5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsJNd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_OweHoEuxEeKJ0_vT0JNkww">
      <eAnnotations xmi:id="_OweHoUuxEeKJ0_vT0JNkww" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_mbrbANd5EeGtNLA6W-IQeQ" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" packageName="mu2consol" prefix="Mu2consol" base_Namespace="_mZtsINd5EeGtNLA6W-IQeQ"/>
  <CDA:ConstraintValidation xmi:id="_7vlYQOvXEeGkopdZmUN1Xw" base_Constraint="_gfm_8OvXEeGkopdZmUN1Xw"/>
  <CDA:PropertyValidation xmi:id="_njlW8OyxEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_LX7foO1YEeGT-eFu7Ghgjw" base_Constraint="_F7KU8O1YEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_nFpcgO1bEeGT-eFu7Ghgjw" base_Constraint="_kNHwMO1bEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_EAFLgO1cEeGT-eFu7Ghgjw" base_Constraint="_CFE3YO1cEeGT-eFu7Ghgjw"/>
  <CDA:CDATemplate xmi:id="_TQUy0PM4EeGkZPcEpuFP6w" base_Class="_w2gYkODkEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.9"/>
  <CDA:CDATemplate xmi:id="_hwU4kPM4EeGkZPcEpuFP6w" base_Class="_CaN5MODgEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.8"/>
  <CDA:CDATemplate xmi:id="_JM8z8PM5EeGkZPcEpuFP6w" base_Class="_svnagODKEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.10"/>
  <CDA:CDATemplate xmi:id="_TC_sAPM5EeGkZPcEpuFP6w" base_Class="_9frdwO1UEeGT-eFu7Ghgjw" templateId="2.16.840.1.113883.10.20.22.2.17"/>
  <CDA:ConstraintValidation xmi:id="_0YItAPdxEeG_npP0e3OOEw" base_Constraint="_vSLf0PdxEeG_npP0e3OOEw"/>
  <CDA:ConstraintValidation xmi:id="_HrUYkPhcEeGPm7sA61ixGw" base_Constraint="_CrzxoPhcEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_CUb-APhdEeGPm7sA61ixGw" base_Constraint="_-3broPhcEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_cP8oUPheEeGPm7sA61ixGw" base_Constraint="_WH_yoPheEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_dEY9APheEeGPm7sA61ixGw" base_Constraint="_EFIqIPheEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_Jsk-UPhfEeGPm7sA61ixGw" base_Constraint="_GUuRsPhfEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_fRfpkPhlEeGPm7sA61ixGw" base_Constraint="_fRfCgPhlEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_AgV0EPhmEeGPm7sA61ixGw" base_Constraint="_8kY74PhlEeGPm7sA61ixGw"/>
  <CDA:PropertyValidation xmi:id="_4W8twPwYEeGx4ophOjh2tw">
    <ruleId>CONF:16558</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_4W9U0PwYEeGx4ophOjh2tw">
    <ruleId>CONF:16560</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_4W974PwYEeGx4ophOjh2tw" code="ASSERTION" displayName="Assertion">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_4AnRQCYWEd-iTYfpNb4PkQ"/>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_4XA_MvwYEeGx4ophOjh2tw">
    <ruleId>CONF:16559</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_JW-gQPwZEeGx4ophOjh2tw" base_Class="_xbrkwPwYEeGx4ophOjh2tw" templateId="2.16.840.1.113883.10.20.22.4.78"/>
  <CDA:CDATemplate xmi:id="_Mm36EP3iEeGmWJiRRvMaXA" base_Class="_v-6qsNkMEeGsqcJR8eqiMw" templateId="2.16.840.1.113883.10.20.22.1.1"/>
  <CDA:CDATemplate xmi:id="_65PbUAJuEeKIhvHOhwsFvA" base_Class="_tAOdEAJuEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.4.2"/>
  <CDA:CDATemplate xmi:id="_Kc_dEAJvEeKIhvHOhwsFvA" base_Class="_--CGcAJuEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.4.1"/>
  <CDA:CDATemplate xmi:id="_Yt5W4AJvEeKIhvHOhwsFvA" base_Class="_R5ZkQAJvEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.2.3.1"/>
  <CDA:ConstraintValidation xmi:id="_twd_gAJ0EeKIhvHOhwsFvA" base_Constraint="_wYmuIAJuEeKIhvHOhwsFvA"/>
  <CDA:CDATemplate xmi:id="_2A5dcAKcEeKIhvHOhwsFvA" base_Class="_zL3xEAKcEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.4.49"/>
  <CDA:CDATemplate xmi:id="_BArkwAKdEeKIhvHOhwsFvA" base_Class="_9AQcQAKcEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.2.22.1"/>
  <CDA:ConstraintValidation xmi:id="_kLGOoAKeEeKIhvHOhwsFvA" base_Constraint="_QLlMMAKeEeKIhvHOhwsFvA"/>
  <CDA:CDATemplate xmi:id="_SzQU4AKlEeKIhvHOhwsFvA" base_Class="_KmS6gAKlEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.4.14"/>
  <CDA:ConstraintValidation xmi:id="_elkFUAKlEeKIhvHOhwsFvA" base_Constraint="_Xm1YoAKlEeKIhvHOhwsFvA"/>
  <CDA:CDATemplate xmi:id="_tu9GUAKlEeKIhvHOhwsFvA" base_Class="_oJZzEAKlEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.2.7.1"/>
  <CDA:ConstraintValidation xmi:id="_15qvwAQrEeKNWa1y_3e0dw" base_Constraint="_ujInEAQrEeKNWa1y_3e0dw"/>
  <CDA:ConstraintValidation xmi:id="_3NehAAQrEeKNWa1y_3e0dw" base_Constraint="_jVFaQAQrEeKNWa1y_3e0dw"/>
  <CDA:ConstraintValidation xmi:id="_MLMM8ArCEeK-rsV_B2slTA" base_Constraint="_UuuwwArBEeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="_OZHdEArCEeK-rsV_B2slTA" base_Constraint="_tV2F4ArAEeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="_aDMTIAu1EeK-rsV_B2slTA" base_Constraint="_T92FgAu1EeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="_7MBVMAu1EeK-rsV_B2slTA" base_Constraint="_301W8Au1EeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="_Oh9PIAu2EeK-rsV_B2slTA" base_Constraint="_JujKgAu2EeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="__6vOoAvXEeK-rsV_B2slTA" base_Constraint="_r-lpQAvXEeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="_YXlJQAveEeK-rsV_B2slTA" base_Constraint="_WhtMwAveEeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="_n-Si8AvfEeK-rsV_B2slTA" base_Constraint="_iaMBMAvfEeK-rsV_B2slTA"/>
  <Ecore:EPackage xmi:id="_OwjAIEuxEeKJ0_vT0JNkww" base_Package="_mZtsINd5EeGtNLA6W-IQeQ" packageName="mu2consol" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" basePackage="org.openhealthtools.mdht.uml.cda" prefix="Mu2consol">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.mu2consol'</annotation>
  </Ecore:EPackage>
  <CDA:ConformsTo xmi:id="_OwkOQEuxEeKJ0_vT0JNkww" base_Generalization="_v-6qsdkMEeGsqcJR8eqiMw"/>
  <Ecore:EClass xmi:id="_Owk1UEuxEeKJ0_vT0JNkww" base_Class="_v-6qsNkMEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolGeneralHeaderConstraintsTemplateId Mu2consolGeneralHeaderConstraintsRecordTarget Mu2consolGeneralHeaderConstraintsDocumentationOf GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent GeneralHeaderConstraintsComponent1EncompassingEncounterEncounterParticipant GeneralHeaderConstraintsComponent1EncompassingEncounter' templateId.root='2.16.840.1.113883.10.20.22.1.1' constraints.validation.query='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent GeneralHeaderConstraintsComponent1EncompassingEncounterEncounterParticipant GeneralHeaderConstraintsComponent1EncompassingEncounter' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTarget constraints.validation.error='RecordTargetPatientRole RecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP RecordTargetPatientRolePatientLanguageCommunicationLanguageCode RecordTargetPatientRolePatientEthnicGroupCode RecordTargetPatientRolePatientEthnicGroupCodeP RecordTargetPatientRolePatientRaceCode RecordTargetPatientRolePatientRaceCodeP RecordTargetPatientRolePatientLanguageCommunication RecordTargetPatientRolePatient' constraints.validation.query='RecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP RecordTargetPatientRolePatientLanguageCommunicationLanguageCode RecordTargetPatientRolePatientEthnicGroupCode RecordTargetPatientRolePatientEthnicGroupCodeP RecordTargetPatientRolePatientRaceCode RecordTargetPatientRolePatientRaceCodeP RecordTargetPatientRolePatientLanguageCommunication RecordTargetPatientRolePatient' constraints.validation.dependOn.RecordTargetPatientRolePatientLanguageCommunicationLanguageCode='RecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRole constraints.validation.error='PatientRolePatient PatientRolePatientLanguageCommunicationLanguageCodeP PatientRolePatientLanguageCommunicationLanguageCode PatientRolePatientEthnicGroupCode PatientRolePatientEthnicGroupCodeP PatientRolePatientRaceCode PatientRolePatientRaceCodeP PatientRolePatientLanguageCommunication' constraints.validation.query='PatientRolePatientLanguageCommunicationLanguageCodeP PatientRolePatientLanguageCommunicationLanguageCode PatientRolePatientEthnicGroupCode PatientRolePatientEthnicGroupCodeP PatientRolePatientRaceCode PatientRolePatientRaceCodeP PatientRolePatientLanguageCommunication' constraints.validation.dependOn.PatientRolePatientLanguageCommunicationLanguageCode='PatientRolePatientLanguageCommunicationLanguageCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRolePatient ethnicGroupCode.codeSystem='2.16.840.1.113883.6.238' ethnicGroupCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.error='PatientEthnicGroupCode PatientEthnicGroupCodeP PatientRaceCode PatientRaceCodeP PatientLanguageCommunication PatientLanguageCommunicationLanguageCodeP PatientLanguageCommunicationLanguageCode' raceCode.codeSystem='2.16.840.1.113883.6.238' raceCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.query='PatientLanguageCommunicationLanguageCodeP PatientLanguageCommunicationLanguageCode' constraints.validation.dependOn.PatientLanguageCommunicationLanguageCode='PatientLanguageCommunicationLanguageCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication constraints.validation.error='LanguageCommunicationLanguageCode LanguageCommunicationLanguageCodeP' constraints.validation.dependOn.LanguageCommunicationLanguageCode='LanguageCommunicationLanguageCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOf constraints.validation.error='DocumentationOfServiceEvent DocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson DocumentationOfServiceEventPerformer1AssignedEntity DocumentationOfServiceEventPerformer' constraints.validation.query='DocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson DocumentationOfServiceEventPerformer1AssignedEntity DocumentationOfServiceEventPerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEvent constraints.validation.error='ServiceEventPerformer ServiceEventPerformer1AssignedEntityAssignedPerson ServiceEventPerformer1AssignedEntity' constraints.validation.query='ServiceEventPerformer1AssignedEntityAssignedPerson ServiceEventPerformer1AssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEventPerformer1 constraints.validation.error='Performer1AssignedEntity Performer1AssignedEntityAssignedPerson' constraints.validation.query='Performer1AssignedEntityAssignedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity constraints.validation.error='AssignedEntityAssignedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsComponent1 constraints.validation.error='Component1EncompassingEncounter Component1EncompassingEncounterEncounterParticipant' constraints.validation.query='Component1EncompassingEncounterEncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsComponent1EncompassingEncounter constraints.validation.error='EncompassingEncounterEncounterParticipant'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_OwwbgEuxEeKJ0_vT0JNkww" base_Class="_VG3DUNkxEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SummaryOfCareRecordCarePlanning SummaryOfCareRecordProblemSection SummaryOfCareRecordAllergiesSection SummaryOfCareRecordImmunizationsSection SummaryOfCareRecordMedicationsSection SummaryOfCareRecordSocialHistorySection SummaryOfCareRecordResultsSection SummaryOfCareRecordVitalSignsSection SummaryOfCareRecordProceduresSection SummaryOfCareRecordFunctionalStatusSection' constraints.validation.info='SummaryOfCareRecordEncountersSection SummaryOfCareRecordPlanOfCareSection SummaryOfCareRecordAssessmentAndPlanSection SummaryOfCareRecordAssessmentSection SummaryOfCareRecordPostoperativeDiagnosisSection SummaryOfCareRecordHistoryOfPastIllnessSection SummaryOfCareRecordPreoperativeDiagnosisSection SummaryOfCareRecordPostprocedureDiagnosisSection'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_OxKEJUuxEeKJ0_vT0JNkww" base_Generalization="_vqugwODKEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_OxLSQEuxEeKJ0_vT0JNkww" base_Class="_svnagODKEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolPlanOfCareSectionTemplateId' templateId.root='2.16.840.1.113883.10.20.22.2.10'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_OxL5UEuxEeKJ0_vT0JNkww" base_Generalization="_D0JgkODgEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_OxMgYEuxEeKJ0_vT0JNkww" base_Class="_CaN5MODgEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolAssessmentSectionTemplateId Mu2consolAssessmentSectionProblemObservation' templateId.root='2.16.840.1.113883.10.20.22.2.8'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_OxO8oEuxEeKJ0_vT0JNkww" base_Generalization="_ySywYODkEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_OxPjsEuxEeKJ0_vT0JNkww" base_Class="_w2gYkODkEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolAssessmentAndPlanSectionTemplateId' templateId.root='2.16.840.1.113883.10.20.22.2.9'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_OxSnAEuxEeKJ0_vT0JNkww" base_Class="_7D0CQOzmEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryEffectiveTime ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummaryInstructionsEntry ClinicalOfficeVisitSummaryMedicationsAdministeredEntry' constraints.validation.error='ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryReasonForOfficeVisit ClinicalOfficeVisitSummaryCarePlanning ClinicalOfficeVisitSummaryEffectiveTime ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummaryInstructionsEntry ClinicalOfficeVisitSummaryMedicationsAdministeredEntry ClinicalOfficeVisitSummaryProblemSection ClinicalOfficeVisitSummaryMedicationsSection ClinicalOfficeVisitSummaryAllergiesSection ClinicalOfficeVisitSummaryResultsSection ClinicalOfficeVisitSummaryVitalSignsSection ClinicalOfficeVisitSummaryProceduresSection ClinicalOfficeVisitSummaryImmunizationsSection ClinicalOfficeVisitSummaryMedicationsAdministeredSection ClinicalOfficeVisitSummaryInstructionsSection ClinicalOfficeVisitSummarySocialHistorySection' constraints.validation.info='ClinicalOfficeVisitSummaryPlanOfCareSection ClinicalOfficeVisitSummaryReasonForVisitSection ClinicalOfficeVisitSummaryChiefComplaintSection ClinicalOfficeVisitSummaryChiefComplaintAndReasonForVisitSection ClinicalOfficeVisitSummaryAssessmentAndPlanSection'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_Oxai1EuxEeKJ0_vT0JNkww" base_Generalization="_-2YyAO1UEeGT-eFu7Ghgjw"/>
  <Ecore:EClass xmi:id="_OxbJ4UuxEeKJ0_vT0JNkww" base_Class="_9frdwO1UEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolSocialHistorySectionTemplateId Mu2consolSocialHistorySectionSmokingStatusObservation' templateId.root='2.16.840.1.113883.10.20.22.2.17'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_OxvS8EuxEeKJ0_vT0JNkww" base_Class="_UGcMgPabEeGi99B_x568TQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='TransitionOfCareAmbulatorySummaryResponsibleParty' constraints.validation.error='TransitionOfCareAmbulatorySummaryResponsibleParty TransitionOfCareAmbulatorySummaryAmbulatoryEncounterDiagnoses TransitionOfCareAmbulatorySummaryReasonForReferralSection'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_OxzkYEuxEeKJ0_vT0JNkww" base_Class="_uu2T0PdyEeG_npP0e3OOEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransitionOfCareInpatientSummaryInpatientEncounterDiagnoses TransitionOfCareInpatientSummaryHospitalAdmissionDiagnosisEntry TransitionOfCareInpatientSummaryHospitalDischargeDiagnosesEntry TransitionOfCareInpatientSummaryPostoperativeDiagnosisEntry TransitionOfCareInpatientSummaryPostprocedureDiagnosisEntry TransitionOfCareInpatientSummaryHospitalDischargeInstructionsSection TransitionOfCareInpatientSummaryHospitalDischargeMedicationsSection' constraints.validation.query='TransitionOfCareInpatientSummaryHospitalAdmissionDiagnosisEntry TransitionOfCareInpatientSummaryHospitalDischargeDiagnosesEntry TransitionOfCareInpatientSummaryPostoperativeDiagnosisEntry TransitionOfCareInpatientSummaryPostprocedureDiagnosisEntry' constraints.validation.info='TransitionOfCareInpatientSummaryHospitalAdmissionDiagnosisSection TransitionOfCareInpatientSummaryHospitalDischargeDiagnosisSection TransitionOfCareInpatientSummaryHospitalAdmissionMedicationsSectionEntriesOptional'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_Ox8uUEuxEeKJ0_vT0JNkww" base_Class="_i2IoQPhVEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ViewDownloadTransmitSummaryCarePlanFields ViewDownloadTransmitSummaryAllergiesSection ViewDownloadTransmitSummaryMedicationsSection ViewDownloadTransmitSummaryProblemSection ViewDownloadTransmitSummaryProceduresSection ViewDownloadTransmitSummaryVitalSignsSection ViewDownloadTransmitSummaryResultsSection ViewDownloadTransmitSummarySocialHistorySection' constraints.validation.info='ViewDownloadTransmitSummaryAssessmentAndPlanSection ViewDownloadTransmitSummaryPlanOfCareSection'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_OyKwwEuxEeKJ0_vT0JNkww" base_Class="_rsKJkPhcEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='VDTInpatientSummaryEffectiveTime VDTInpatientSummaryLocation VDTInpatientSummaryHospitalAdmissionDiagnosisEntry VDTInpatientSummaryPreoperativeDiagnosisEntry' constraints.validation.error='VDTInpatientSummaryEffectiveTime VDTInpatientSummaryLocation VDTInpatientSummaryChiefComplaintOrReasonForVisit VDTInpatientSummaryHospitalAdmissionDiagnosisEntry VDTInpatientSummaryPreoperativeDiagnosisEntry VDTInpatientSummaryHospitalDischargeInstructionsSection VDTInpatientSummaryHospitalAdmissionDiagnosisSection VDTInpatientSummaryHospitalDischargeMedicationsSection' constraints.validation.info='VDTInpatientSummaryChiefComplaintSection VDTInpatientSummaryReasonForVisitSection VDTInpatientSummaryChiefComplaintAndReasonForVisitSection VDTInpatientSummaryPreoperativeDiagnosisSection VDTInpatientSummaryHospitalAdmissionMedicationsSectionEntriesOptional'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_OyPCMEuxEeKJ0_vT0JNkww" base_Class="_2FvMgPhcEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='VDTAmbulatorySummaryResponsibleParty' constraints.validation.error='VDTAmbulatorySummaryResponsibleParty'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_OyXlFUuxEeKJ0_vT0JNkww" base_Generalization="_yhogMPwYEeGx4ophOjh2tw"/>
  <Ecore:EClass xmi:id="_OyYzMEuxEeKJ0_vT0JNkww" base_Class="_xbrkwPwYEeGx4ophOjh2tw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SmokingStatusObservationTemplateId SmokingStatusObservationValue SmokingStatusObservationValueP' templateId.root='2.16.840.1.113883.10.20.22.4.78' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.dependOn.SmokingStatusObservationValue='SmokingStatusObservationValueP'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_OyeSwEuxEeKJ0_vT0JNkww" base_Generalization="_tAPEIAJuEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_Oye50EuxEeKJ0_vT0JNkww" base_Class="_tAOdEAJuEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolResultObservationTemplateId Mu2consolResultObservationResultObservationCodeValue Mu2consolResultObservationCode' templateId.root='2.16.840.1.113883.10.20.22.4.2'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_OyhWEEuxEeKJ0_vT0JNkww" base_Generalization="_--CGcQJuEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_Oyh9IEuxEeKJ0_vT0JNkww" base_Class="_--CGcAJuEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolResultOrganizerTemplateId Mu2consolResultOrganizerResultObservation' templateId.root='2.16.840.1.113883.10.20.22.4.1'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_OyjyUUuxEeKJ0_vT0JNkww" base_Generalization="_R5ZkQQJvEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_OylAcEuxEeKJ0_vT0JNkww" base_Class="_R5ZkQAJvEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolResultsSectionTemplateId Mu2consolResultsSectionResultOrganizer' templateId.root='2.16.840.1.113883.10.20.22.2.3.1'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_Oyoq0EuxEeKJ0_vT0JNkww" base_Generalization="_zL4YIAKcEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_Oyp48EuxEeKJ0_vT0JNkww" base_Class="_zL3xEAKcEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolEncounterActivitiesTemplateId Mu2consolEncounterActivitiesCodeValue' templateId.root='2.16.840.1.113883.10.20.22.4.49'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_OyruIEuxEeKJ0_vT0JNkww" base_Generalization="_9AQcQQKcEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_Oys8QEuxEeKJ0_vT0JNkww" base_Class="_9AQcQAKcEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolEncountersSectionTemplateId Mu2consolEncountersSectionEncounterActivities' templateId.root='2.16.840.1.113883.10.20.22.2.22.1'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_OyuxdUuxEeKJ0_vT0JNkww" base_Generalization="_KmThkAKlEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_Oyv_kEuxEeKJ0_vT0JNkww" base_Class="_KmS6gAKlEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolProcedureActivityProcedureTemplateId Mu2consolProcedureActivityProcedureCodeValue Mu2consolProcedureActivityProcedureCode' templateId.root='2.16.840.1.113883.10.20.22.4.14'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_Oyx0wEuxEeKJ0_vT0JNkww" base_Generalization="_oJZzEQKlEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_OyzC4EuxEeKJ0_vT0JNkww" base_Class="_oJZzEAKlEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolProceduresSectionTemplateId' templateId.root='2.16.840.1.113883.10.20.22.2.7.1' constraints.validation.info='Mu2consolProceduresSectionProcedureActivityProcedure'</annotation>
  </Ecore:EClass>
</xmi:XMI>
