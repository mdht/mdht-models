<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_mZtsINd5EeGtNLA6W-IQeQ" name="mu2consol">
    <packageImport xmi:id="_mdYrMtd5EeGtNLA6W-IQeQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.mu2consol.model/model/mu2consol-vocab.uml#_mZ-K0Nd5EeGtNLA6W-IQeQ"/>
    </packageImport>
    <packageImport xmi:id="_HE5v4Ng-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packageImport xmi:id="_qktQYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_sCPlYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_v-6qsNkMEeGsqcJR8eqiMw" name="GeneralHeaderConstraints">
      <ownedComment xmi:id="_BHY70OMDEeGwErp-HM3_kQ">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_akVTgO54EeGT5oaF-4NGAA" name="mu2consolGeneralHeaderConstraintsRecordTarget" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_akVTge54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.recordTarget->exists(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_akfrkO54EeGT5oaF-4NGAA" name="mu2consolGeneralHeaderConstraintsDocumentationOf" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_akfrke54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amPYAO54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amPYAe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((languageCode.oclIsUndefined() or languageCode.isNullFlavorUndefined()) implies (not languageCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amPYAu54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientName" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amPYA-54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amPYBO54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientAdministrativeGenderCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amPYBe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((administrativeGenderCode.oclIsUndefined() or administrativeGenderCode.isNullFlavorUndefined()) implies (not administrativeGenderCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amP_EO54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amP_Ee54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amP_Eu54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amP_E-54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amP_FO54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amP_Fe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((birthTime.oclIsUndefined() or birthTime.isNullFlavorUndefined()) implies (not birthTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amP_Fu54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amP_F-54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(languageCommunication->one(languageCommunication : cda::LanguageCommunication | not languageCommunication.oclIsUndefined() and languageCommunication.oclIsKindOf(cda::LanguageCommunication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amQmIO54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatient" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amQmIe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject(patient->one(patient : cda::Patient | not patient.oclIsUndefined() and patient.oclIsKindOf(cda::Patient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amQmIu54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsRecordTargetPatientRole" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amQmI-54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null)->reject(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amSbUO54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amSbUe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amSbUu54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amSbU-54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amTCYO54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsDocumentationOfServiceEvent" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amTCYe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_v-6qsdkMEeGsqcJR8eqiMw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VG3DUNkxEeGsqcJR8eqiMw" name="SummaryOfCareRecord">
      <ownedComment xmi:id="_OaVzYNpiEeGzu8-aAsCS4g">
        <body>170.314(b)(1) (Incorporate summary of care record)</body>
      </ownedComment>
      <ownedRule xmi:id="_OxIpQN3EEeGdQcioKnmIhA" name="SummaryOfCareRecordCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_UQ6EoN3EEeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2nwZAN3EEeGdQcioKnmIhA" name="SummaryOfCareRecordMu2EncounterDiagnosesRequirements" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_K7mFoN3FEeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalDischargeDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PostoperativeDiagnosisSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PostprocedureDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n-eIsN32EeGdQcioKnmIhA" name="SummaryOfCareRecordCanHaveEitherRequiredOrOptionalVitalSigns" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbQu0N32EeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kx5CgN33EeGdQcioKnmIhA" name="SummaryOfCareRecordMedicationListConstraint" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o21eoN33EeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or  &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional)) or &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gfm_8OvXEeGkopdZmUN1Xw" name="SummaryOfCareRecordCarePlanning" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jopNcOvXEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::InterventionsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n8bhYOvYEeGkopdZmUN1Xw" name="SummaryOfCareRecordMedicationAllergy" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tP9QgOvYEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VUReAOvZEeGkopdZmUN1Xw" name="SummaryOfCareRecordReasonForHospitalization" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZBL0oOvZEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PreoperativeDiagnosisSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_izlGUOvaEeGkopdZmUN1Xw" name="SummaryOfCareRecordMedicationList" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pYRiYOvaEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__TV_cO4zEeGT5oaF-4NGAA" name="SummaryOfCareRecordCanHaveEitherAllergyRequiredOrOptionalEntry" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_D7OJgO40EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_akY94u54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_akY94-54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.11.11.11.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aklLIO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordPlanOfCareSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aklLIe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aknAUu54EeGT5oaF-4NGAA" name="SummaryOfCareRecordInstructionsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aknAU-54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_akoOce54EeGT5oaF-4NGAA" name="SummaryOfCareRecordHospitalDischargeInstructionsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_akoOcu54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_akr40O54EeGT5oaF-4NGAA" name="SummaryOfCareRecordProblemSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_akr40e54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_akxYYO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordImmunizationsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_akxYYe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_akymgO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordMedicationsAdministeredSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_akymge54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ak1Cxe54EeGT5oaF-4NGAA" name="SummaryOfCareRecordSocialHistorySection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak1p0O54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ak2Q5e54EeGT5oaF-4NGAA" name="SummaryOfCareRecordResultsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak238O54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ak4tIO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordProceduresSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak4tIe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amU3kO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amU3ke54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amWFsO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amWFse54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amWswO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordmu2consolAllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amWswe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllergiesSectionEntriesOptional()->excluding(null)->reject(getAllergiesSectionEntriesOptional().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amYh8O54EeGT5oaF-4NGAA" name="SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amYh8e54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amZwEO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amZwEe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amblQO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordInstructionsSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amcMUO54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getInstructionsSection()->excluding(null)->reject(getInstructionsSection().templateId->exists(id : datatypes::II | id.root = 'null'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amcMUe54EeGT5oaF-4NGAA" name="SummaryOfCareRecordmu2consolInstructionsSectionInstructions" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amcMUu54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getInstructionsSection()->excluding(null)->reject(getInstructionsSection().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amdacO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amdace54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAssessmentSection()->excluding(null)->reject(getAssessmentSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ameokO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ameoke54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amfPoO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amfPoe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getHospitalDischargeDiagnosisSection()->excluding(null)->reject(getHospitalDischargeDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amgdwO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amgdwe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getPostoperativeDiagnosisSection()->excluding(null)->reject(getPostoperativeDiagnosisSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amhr4O54EeGT5oaF-4NGAA" name="SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amhr4e54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getPostprocedureDiagnosisSection()->excluding(null)->reject(getPostprocedureDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ami6AO54EeGT5oaF-4NGAA" name="SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ami6Ae54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getPreoperativeDiagnosisSection()->excluding(null)->reject(getPreoperativeDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VG3qYNkxEeGsqcJR8eqiMw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_akkkEO54EeGT5oaF-4NGAA" name="getEncountersSection" isQuery="true" bodyCondition="_akkkE-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akkkE-54EeGT5oaF-4NGAA" name="body" constrainedElement="_akkkEO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akkkFO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection))->asSequence()->any(true).oclAsType(consol::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akkkEe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LWg0BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akkkEu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aklyMO54EeGT5oaF-4NGAA" name="getPlanOfCareSection" isQuery="true" bodyCondition="_aklyM-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_aklyM-54EeGT5oaF-4NGAA" name="body" constrainedElement="_aklyMO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aklyNO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aklyMe54EeGT5oaF-4NGAA" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aklyMu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_akmZQO54EeGT5oaF-4NGAA" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_akmZQ-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akmZQ-54EeGT5oaF-4NGAA" name="body" constrainedElement="_akmZQO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akmZRO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akmZQe54EeGT5oaF-4NGAA" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akmZQu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_akmZRe54EeGT5oaF-4NGAA" name="getInterventionsSection" isQuery="true" bodyCondition="_aknAUO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_aknAUO54EeGT5oaF-4NGAA" name="body" constrainedElement="_akmZRe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aknAUe54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection))->asSequence()->any(true).oclAsType(consol::InterventionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akmZRu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_hqzJADVyEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akmZR-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aknnYO54EeGT5oaF-4NGAA" name="getInstructionsSection" isQuery="true" bodyCondition="_aknnY-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_aknnY-54EeGT5oaF-4NGAA" name="body" constrainedElement="_aknnYO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akoOcO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))->asSequence()->any(true).oclAsType(consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aknnYe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aknnYu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_akpckO54EeGT5oaF-4NGAA" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_akpck-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akpck-54EeGT5oaF-4NGAA" name="body" constrainedElement="_akpckO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akpclO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akpcke54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akpcku54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_akqDoO54EeGT5oaF-4NGAA" name="getAssessmentSection" isQuery="true" bodyCondition="_akqDo-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akqDo-54EeGT5oaF-4NGAA" name="body" constrainedElement="_akqDoO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akqDpO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akqDoe54EeGT5oaF-4NGAA" type="_CaN5MODgEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akqDou54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_akqqsO54EeGT5oaF-4NGAA" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_akqqs-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akqqs-54EeGT5oaF-4NGAA" name="body" constrainedElement="_akqqsO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akqqtO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akqqse54EeGT5oaF-4NGAA" type="_gl8CMODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akqqsu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_akqqte54EeGT5oaF-4NGAA" name="getHospitalDischargeDiagnosisSection" isQuery="true" bodyCondition="_akrRwO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akrRwO54EeGT5oaF-4NGAA" name="body" constrainedElement="_akqqte54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akrRwe54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalDischargeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akqqtu54EeGT5oaF-4NGAA" type="_qgJokODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akqqt-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_akrRwu54EeGT5oaF-4NGAA" name="getPostoperativeDiagnosisSection" isQuery="true" bodyCondition="_akrRxe54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akrRxe54EeGT5oaF-4NGAA" name="body" constrainedElement="_akrRwu54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akrRxu54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PostoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PostoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akrRw-54EeGT5oaF-4NGAA" type="_y1mQkODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akrRxO54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aktG8O54EeGT5oaF-4NGAA" name="getProblemSection" isQuery="true" bodyCondition="_aktuAe54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_aktuAe54EeGT5oaF-4NGAA" name="body" constrainedElement="_aktG8O54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aktuAu54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aktG8e54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aktuAO54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aktuA-54EeGT5oaF-4NGAA" name="getAllergiesSection" isQuery="true" bodyCondition="_aktuBu54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_aktuBu54EeGT5oaF-4NGAA" name="body" constrainedElement="_aktuA-54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aktuB-54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aktuBO54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aktuBe54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_akuVEO54EeGT5oaF-4NGAA" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_akuVE-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akuVE-54EeGT5oaF-4NGAA" name="body" constrainedElement="_akuVEO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akuVFO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akuVEe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PQJcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akuVEu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aku8IO54EeGT5oaF-4NGAA" name="getReasonForVisitSection" isQuery="true" bodyCondition="_aku8I-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_aku8I-54EeGT5oaF-4NGAA" name="body" constrainedElement="_aku8IO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aku8JO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aku8Ie54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aku8Iu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aku8Je54EeGT5oaF-4NGAA" name="getChiefComplaintSection" isQuery="true" bodyCondition="_akvjMe54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akvjMe54EeGT5oaF-4NGAA" name="body" constrainedElement="_aku8Je54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akvjMu54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aku8Ju54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akvjMO54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_akwKQO54EeGT5oaF-4NGAA" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_akwKQ-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akwKQ-54EeGT5oaF-4NGAA" name="body" constrainedElement="_akwKQO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akwKRO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akwKQe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akwKQu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_akwKRe54EeGT5oaF-4NGAA" name="getPreoperativeDiagnosisSection" isQuery="true" bodyCondition="_akwxUe54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akwxUe54EeGT5oaF-4NGAA" name="body" constrainedElement="_akwKRe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akwxUu54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PreoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akwKRu54EeGT5oaF-4NGAA" type="_bRRt0ODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akwxUO54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_akx_cO54EeGT5oaF-4NGAA" name="getImmunizationsSection" isQuery="true" bodyCondition="_akx_c-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akx_c-54EeGT5oaF-4NGAA" name="body" constrainedElement="_akx_cO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akx_dO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akx_ce54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akx_cu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_akzNkO54EeGT5oaF-4NGAA" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_akz0oe54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akz0oe54EeGT5oaF-4NGAA" name="body" constrainedElement="_akzNkO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akz0ou54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(mu2consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akzNke54EeGT5oaF-4NGAA" type="_3poqgODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akz0oO54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_akz0o-54EeGT5oaF-4NGAA" name="getMedicationsSection" isQuery="true" bodyCondition="_akz0pu54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_akz0pu54EeGT5oaF-4NGAA" name="body" constrainedElement="_akz0o-54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_akz0p-54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_akz0pO54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_akz0pe54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak0bsO54EeGT5oaF-4NGAA" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_ak0bs-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak0bs-54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak0bsO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak0btO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak0bse54EeGT5oaF-4NGAA" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak0bsu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak1CwO54EeGT5oaF-4NGAA" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_ak1Cw-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak1Cw-54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak1CwO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak1CxO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak1Cwe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak1Cwu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak2Q4O54EeGT5oaF-4NGAA" name="getSocialHistorySection" isQuery="true" bodyCondition="_ak2Q4-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak2Q4-54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak2Q4O54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak2Q5O54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak2Q4e54EeGT5oaF-4NGAA" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak2Q4u54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak3fAO54EeGT5oaF-4NGAA" name="getResultsSection" isQuery="true" bodyCondition="_ak3fA-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak3fA-54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak3fAO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak3fBO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak3fAe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak3fAu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak4GEO54EeGT5oaF-4NGAA" name="getVitalSignsSection" isQuery="true" bodyCondition="_ak4GE-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak4GE-54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak4GEO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak4GFO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak4GEe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak4GEu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak4GFe54EeGT5oaF-4NGAA" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_ak4GGO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak4GGO54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak4GFe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak4GGe54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak4GFu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak4GF-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak57QO54EeGT5oaF-4NGAA" name="getProceduresSection" isQuery="true" bodyCondition="_ak57Q-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak57Q-54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak57QO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak6iUO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak57Qe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak57Qu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak6iUe54EeGT5oaF-4NGAA" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_ak6iVO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak6iVO54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak6iUe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak6iVe54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak6iUu54EeGT5oaF-4NGAA" type="_szTFwOF8EeGlJOFzBdwM6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak6iU-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak7JYO54EeGT5oaF-4NGAA" name="getPostprocedureDiagnosisSection" isQuery="true" bodyCondition="_ak7JY-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak7JY-54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak7JYO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak7JZO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PostprocedureDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PostprocedureDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak7JYe54EeGT5oaF-4NGAA" type="_uvXlkODnEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak7JYu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak7wcO54EeGT5oaF-4NGAA" name="getReasonForReferralSection" isQuery="true" bodyCondition="_ak7wc-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak7wc-54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak7wcO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak7wdO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))->asSequence()->any(true).oclAsType(consol::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak7wce54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQFxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak7wcu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ec-GAODeEeGdSJSga09Dyg" name="AssessmentAndPlanForCarePlanning">
      <ownedComment xmi:id="_XvBEkOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_VDXc8OJREeGzd4w2xo094w" name="AssessmentAndPlanForCarePlanningOneOfPlanOfCareEntry" constrainedElement="_Ec-GAODeEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uj1mgOJREeGzd4w2xo094w">
          <language>OCL</language>
          <body>self.getProcedures()->exists(p : cda::Procedure | p.oclIsKindOf(consol::PlanOfCareActivityProcedure)) or self.getSubstanceAdministrations()->exists(s : cda::SubstanceAdministration | s.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration)) or self.getSupplies()->exists(sp : cda::Supply | sp.oclIsKindOf(consol::PlanOfCareActivitySupply))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FkUIkODeEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_ak-MsO54EeGT5oaF-4NGAA" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_ak-Ms-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak-Ms-54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak-MsO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak-MtO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak-Mse54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak-Msu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak-Mte54EeGT5oaF-4NGAA" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_ak-MuO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak-MuO54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak-Mte54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak-zwO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak-Mtu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak-Mt-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak-zwe54EeGT5oaF-4NGAA" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_ak-zxO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak-zxO54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak-zwe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak-zxe54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak-zwu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak-zw-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_svnagODKEeGdSJSga09Dyg" name="PlanOfCareSection">
      <ownedComment xmi:id="_wajPYOFzEeGlJOFzBdwM6w">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_j1rcwOF3EeGlJOFzBdwM6w" name="mu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qaLEgOF3EeGlJOFzBdwM6w">
          <language>OCL</language>
          <body>self.getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or self.getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or self.getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vqugwODKEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_ak7wde54EeGT5oaF-4NGAA" name="getmu2consolPlanOfCareActivityAct" isQuery="true" bodyCondition="_ak8Xgu54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak8Xgu54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak7wde54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak8Xg-54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlanOfCareActivityAct))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak8XgO54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWE5xSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak8Xge54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak8XhO54EeGT5oaF-4NGAA" name="getmu2consolPlanOfCareActivityEncounter" isQuery="true" bodyCondition="_ak8-ke54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak8-ke54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak8XhO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak8-ku54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityEncounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak8Xhe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWFBBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak8-kO54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ak8-k-54EeGT5oaF-4NGAA" name="getmu2consolPlanOfCareActivityObservation" isQuery="true" bodyCondition="_ak9loe54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ak9loe54EeGT5oaF-4NGAA" name="body" constrainedElement="_ak8-k-54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ak9lou54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlanOfCareActivityObservation))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ak8-lO54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NcLjhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ak9loO54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CaN5MODgEeGdSJSga09Dyg" name="AssessmentSection">
      <ownedComment xmi:id="_dY-WsOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_alAo8O54EeGT5oaF-4NGAA" name="mu2consolAssessmentSectionProblemObservation" constrainedElement="_CaN5MODgEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alAo8e54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D0JgkODgEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_W8pI4DszEeGvzMYhXuqAEA"/>
      </generalization>
      <ownedOperation xmi:id="_alBQAe54EeGT5oaF-4NGAA" name="getProblemObservation" isQuery="true" bodyCondition="_alB3EO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alB3EO54EeGT5oaF-4NGAA" name="body" constrainedElement="_alBQAe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alB3Ee54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alBQAu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alBQA-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g1AyQODhEeGdSJSga09Dyg" name="AssessmentAndPlanForConditionOrConcern">
      <ownedComment xmi:id="_Zls5YOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_alB3Eu54EeGT5oaF-4NGAA" name="AssessmentAndPlanForConditionOrConcernProblemObservation" constrainedElement="_g1AyQODhEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alB3E-54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iIDHcODhEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_alDFMe54EeGT5oaF-4NGAA" name="getProblemObservation" isQuery="true" bodyCondition="_alDFNO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alDFNO54EeGT5oaF-4NGAA" name="body" constrainedElement="_alDFMe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alDFNe54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alDFMu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alDFM-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_w2gYkODkEeGdSJSga09Dyg" name="AssessmentAndPlanSection">
      <ownedComment xmi:id="_b1SWYOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <generalization xmi:id="_ySywYODkEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_alDsQO54EeGT5oaF-4NGAA" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_alETUe54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alETUe54EeGT5oaF-4NGAA" name="body" constrainedElement="_alDsQO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alETUu54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alDsQe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alETUO54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alETU-54EeGT5oaF-4NGAA" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_alETVu54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alETVu54EeGT5oaF-4NGAA" name="body" constrainedElement="_alETU-54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alETV-54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alETVO54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alETVe54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alE6YO54EeGT5oaF-4NGAA" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_alE6Y-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alE6Y-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alE6YO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alE6ZO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alE6Ye54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alE6Yu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alE6Ze54EeGT5oaF-4NGAA" name="getProblemObservation" isQuery="true" bodyCondition="_alFhcu54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alFhcu54EeGT5oaF-4NGAA" name="body" constrainedElement="_alE6Ze54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alFhc-54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alFhcO54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alFhce54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZK4bUODlEeGdSJSga09Dyg" name="InstructionsSection">
      <ownedComment xmi:id="_nirKkOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_alGIgO54EeGT5oaF-4NGAA" name="InstructionsSectionTemplateId" constrainedElement="_ZK4bUODlEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alGIge54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = 'null')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_alHWoO54EeGT5oaF-4NGAA" name="mu2consolInstructionsSectionInstructions" constrainedElement="_ZK4bUODlEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alHWoe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_avPxEODlEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
      </generalization>
      <ownedOperation xmi:id="_alH9sO54EeGT5oaF-4NGAA" name="getmu2consolInstructionss" isQuery="true" bodyCondition="_alH9s-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alH9s-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alH9sO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alH9tO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions)).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alH9se54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2G8h9RSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alH9su54EeGT5oaF-4NGAA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gl8CMODmEeGdSJSga09Dyg" name="HospitalAdmissionDiagnosisSection">
      <ownedComment xmi:id="_iSMIYOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_alIkwO54EeGT5oaF-4NGAA" name="mu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_gl8CMODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alIkwe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jgg88ODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidQhSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_alJy4e54EeGT5oaF-4NGAA" name="getmu2consolHospitalAdmissionDiagnosis" isQuery="true" bodyCondition="_alJy5O54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alJy5O54EeGT5oaF-4NGAA" name="body" constrainedElement="_alJy4e54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alJy5e54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alJy4u54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5K6mAEFHEeGorO80f-Cppg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alJy4-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qgJokODmEeGdSJSga09Dyg" name="HospitalDischargeDiagnosisSection">
      <ownedComment xmi:id="_k2eqEOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_alKZ8O54EeGT5oaF-4NGAA" name="mu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_qgJokODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alKZ8e54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rXMlUODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidURSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_alLoEO54EeGT5oaF-4NGAA" name="getmu2consolHospitalDischargeDiagnosis" isQuery="true" bodyCondition="_alLoE-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alLoE-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alLoEO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alLoFO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalDischargeDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalDischargeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alLoEe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_KtwVgCULEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alLoEu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y1mQkODmEeGdSJSga09Dyg" name="PostoperativeDiagnosisSection">
      <ownedComment xmi:id="_q87D4OGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_alMPIO54EeGT5oaF-4NGAA" name="mu2consolPostoperativeDiagnosisSectionProblemObservation" constrainedElement="_y1mQkODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alMPIe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zVobgODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_7UA-4DVyEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_alM2Me54EeGT5oaF-4NGAA" name="getProblemObservation" isQuery="true" bodyCondition="_alM2NO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alM2NO54EeGT5oaF-4NGAA" name="body" constrainedElement="_alM2Me54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alNdQO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alM2Mu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alM2M-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uvXlkODnEeGdSJSga09Dyg" name="PostprocedureDiagnosisSection">
      <ownedComment xmi:id="_sNALsOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_alNdQe54EeGT5oaF-4NGAA" name="mu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_uvXlkODnEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alOEUO54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vj29kODnEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_-jlSMDVyEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_alOrYe54EeGT5oaF-4NGAA" name="getmu2consolPostprocedureDiagnosis" isQuery="true" bodyCondition="_alOrZO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alOrZO54EeGT5oaF-4NGAA" name="body" constrainedElement="_alOrYe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alOrZe54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PostprocedureDiagnosis))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alOrYu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_0fjXAEEvEeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alOrY-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bRRt0ODqEeGdSJSga09Dyg" name="PreoperativeDiagnosisSection">
      <ownedComment xmi:id="_thn1QOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_alPScO54EeGT5oaF-4NGAA" name="mu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_bRRt0ODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alPSce54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_b5wDEODqEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Cu6qMDVzEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_alQgke54EeGT5oaF-4NGAA" name="getmu2consolPreoperativeDiagnosis" isQuery="true" bodyCondition="_alQglO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alQglO54EeGT5oaF-4NGAA" name="body" constrainedElement="_alQgke54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alQgle54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PreoperativeDiagnosis))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alQgku54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_0baBYEEwEeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alQgk-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3poqgODqEeGdSJSga09Dyg" name="MedicationsAdministeredSection">
      <ownedComment xmi:id="_o4-PIOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_alRHoO54EeGT5oaF-4NGAA" name="mu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_3poqgODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alRHoe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4XEYQODqEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj_BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_alSVwe54EeGT5oaF-4NGAA" name="getmu2consolMedicationActivities" isQuery="true" bodyCondition="_alSVxO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alSVxO54EeGT5oaF-4NGAA" name="body" constrainedElement="_alSVwe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alSVxe54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alSVwu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2GHbgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alSVw-54EeGT5oaF-4NGAA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HBzuYODrEeGdSJSga09Dyg" name="HospitalAdmissionMedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_jlwCAOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_alS80O54EeGT5oaF-4NGAA" name="mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_HBzuYODrEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alS80e54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Hm_fEODrEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj5BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_alUK8e54EeGT5oaF-4NGAA" name="getmu2consolAdmissionMedications" isQuery="true" bodyCondition="_alUK9O54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alUK9O54EeGT5oaF-4NGAA" name="body" constrainedElement="_alUK8e54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alUK9e54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AdmissionMedication)).oclAsType(consol::AdmissionMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alUK8u54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_LNP08EFGEeGorO80f-Cppg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alUK8-54EeGT5oaF-4NGAA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_szTFwOF8EeGlJOFzBdwM6w" name="AllergiesSectionEntriesOptional">
      <ownedComment xmi:id="_U6AmUOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_alUyAO54EeGT5oaF-4NGAA" name="mu2consolAllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_szTFwOF8EeGlJOFzBdwM6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alUyAe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ugMFYOF8EeGlJOFzBdwM6w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
      </generalization>
      <ownedOperation xmi:id="_alWAIO54EeGT5oaF-4NGAA" name="getmu2consolAllergyProblemAct" isQuery="true" bodyCondition="_alWAI-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alWAI-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alWAIO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alWAJO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AllergyProblemAct))->asSequence()->any(true).oclAsType(consol::AllergyProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alWAIe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2EAisBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alWAIu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7D0CQOzmEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummary">
      <ownedRule xmi:id="_F7KU8O1YEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryResponsibleParty" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_HLw1oO1iEeGT-eFu7Ghgjw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ke17gO1YEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;&#xA;cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Zuc5QO1YEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryLocation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_eM8kMO1gEeGT-eFu7Ghgjw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cyHekO1YEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | not &#xD;&#xD;&#xA;location.oclIsUndefined() and location.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_yi4xUO1aEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryMedicationList" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zMWlEO1aEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_GlWaEO1bEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryMedicationAllergy" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_IcWX8O1bEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VchCoO1bEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryVitalSigns" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_XSEPAO1bEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kNHwMO1bEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryReasonForOfficeVisit" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_miJt4O1bEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_CFE3YO1cEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryCarePlanning" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_DrZ8AO1cEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::InterventionsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_alWnMe54EeGT5oaF-4NGAA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alWnMu54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = 'null')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aldU4O54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummarySocialHistorySection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aldU4e54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_alejAO54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummaryProblemSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alejAe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_alkCkO54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummaryResultsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alkCke54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_all3xe54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummaryPlanOfCareSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alme0O54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_alnF4-54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummaryProceduresSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alnF5O54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_alqwQO54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummaryAssessmentAndPlanSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alqwQe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_alr-YO54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummaryInstructionsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alr-Ye54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amlWQO54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amlWQe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aml9UO54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummarymu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aml9Ue54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amnLcO54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummarymu2consolAllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amnLce54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllergiesSectionEntriesOptional()->excluding(null)->reject(getAllergiesSectionEntriesOptional().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amqOwO54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amqOwe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amrc4O54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amrc4e54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getMedicationsAdministeredSection()->excluding(null)->reject(getMedicationsAdministeredSection().entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amtSEO54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummaryInstructionsSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amt5IO54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getInstructionsSection()->excluding(null)->reject(getInstructionsSection().templateId->exists(id : datatypes::II | id.root = 'null'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amt5Ie54EeGT5oaF-4NGAA" name="ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amt5Iu54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getInstructionsSection()->excluding(null)->reject(getInstructionsSection().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7D0pUOzmEeGT-eFu7Ghgjw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_ald78O54EeGT5oaF-4NGAA" name="getSocialHistorySection" isQuery="true" bodyCondition="_ald78-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ald78-54EeGT5oaF-4NGAA" name="body" constrainedElement="_ald78O54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ald79O54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ald78e54EeGT5oaF-4NGAA" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ald78u54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alfKEO54EeGT5oaF-4NGAA" name="getProblemSection" isQuery="true" bodyCondition="_alfKE-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alfKE-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alfKEO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alfKFO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alfKEe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alfKEu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alhmUO54EeGT5oaF-4NGAA" name="getMedicationsSection" isQuery="true" bodyCondition="_alhmU-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alhmU-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alhmUO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alhmVO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alhmUe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alhmUu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aliNYO54EeGT5oaF-4NGAA" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_aliNY-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_aliNY-54EeGT5oaF-4NGAA" name="body" constrainedElement="_aliNYO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aliNZO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aliNYe54EeGT5oaF-4NGAA" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aliNYu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aliNZe54EeGT5oaF-4NGAA" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_ali0cu54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ali0cu54EeGT5oaF-4NGAA" name="body" constrainedElement="_aliNZe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ali0c-54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ali0cO54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ali0ce54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ali0dO54EeGT5oaF-4NGAA" name="getAllergiesSection" isQuery="true" bodyCondition="_ali0d-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_ali0d-54EeGT5oaF-4NGAA" name="body" constrainedElement="_ali0dO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ali0eO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ali0de54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ali0du54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aljbgO54EeGT5oaF-4NGAA" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_aljbg-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_aljbg-54EeGT5oaF-4NGAA" name="body" constrainedElement="_aljbgO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aljbhO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aljbge54EeGT5oaF-4NGAA" type="_szTFwOF8EeGlJOFzBdwM6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aljbgu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alkpoO54EeGT5oaF-4NGAA" name="getResultsSection" isQuery="true" bodyCondition="_alkpo-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alkpo-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alkpoO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_allQsO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alkpoe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alkpou54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_allQse54EeGT5oaF-4NGAA" name="getVitalSignsSection" isQuery="true" bodyCondition="_allQtO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_allQtO54EeGT5oaF-4NGAA" name="body" constrainedElement="_allQse54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_allQte54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_allQsu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_allQs-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_all3wO54EeGT5oaF-4NGAA" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_all3w-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_all3w-54EeGT5oaF-4NGAA" name="body" constrainedElement="_all3wO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_all3xO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_all3we54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_all3wu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alme0e54EeGT5oaF-4NGAA" name="getPlanOfCareSection" isQuery="true" bodyCondition="_alnF4e54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alnF4e54EeGT5oaF-4NGAA" name="body" constrainedElement="_alme0e54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alnF4u54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alme0u54EeGT5oaF-4NGAA" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alnF4O54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alns8O54EeGT5oaF-4NGAA" name="getProceduresSection" isQuery="true" bodyCondition="_aloUAe54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_aloUAe54EeGT5oaF-4NGAA" name="body" constrainedElement="_alns8O54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aloUAu54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alns8e54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aloUAO54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aloUA-54EeGT5oaF-4NGAA" name="getImmunizationsSection" isQuery="true" bodyCondition="_aloUBu54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_aloUBu54EeGT5oaF-4NGAA" name="body" constrainedElement="_aloUA-54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_aloUB-54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_aloUBO54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aloUBe54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alo7EO54EeGT5oaF-4NGAA" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_alo7E-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alo7E-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alo7EO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alo7FO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(mu2consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alo7Ee54EeGT5oaF-4NGAA" type="_3poqgODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alo7Eu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alpiIO54EeGT5oaF-4NGAA" name="getReasonForVisitSection" isQuery="true" bodyCondition="_alpiI-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alpiI-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alpiIO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alpiJO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alpiIe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alpiIu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alpiJe54EeGT5oaF-4NGAA" name="getChiefComplaintSection" isQuery="true" bodyCondition="_alqJMO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alqJMO54EeGT5oaF-4NGAA" name="body" constrainedElement="_alpiJe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alqJMe54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alpiJu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alpiJ-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alqJMu54EeGT5oaF-4NGAA" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_alqJNe54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alqJNe54EeGT5oaF-4NGAA" name="body" constrainedElement="_alqJMu54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alqJNu54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alqJM-54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alqJNO54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alrXUO54EeGT5oaF-4NGAA" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_alrXU-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alrXU-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alrXUO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alrXVO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alrXUe54EeGT5oaF-4NGAA" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alrXUu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alslcO54EeGT5oaF-4NGAA" name="getInstructionsSection" isQuery="true" bodyCondition="_alslc-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alslc-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alslcO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alsldO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))->asSequence()->any(true).oclAsType(consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alslce54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alslcu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_altMgO54EeGT5oaF-4NGAA" name="getInterventionsSection" isQuery="true" bodyCondition="_altMg-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_altMg-54EeGT5oaF-4NGAA" name="body" constrainedElement="_altMgO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_altMhO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection))->asSequence()->any(true).oclAsType(consol::InterventionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_altMge54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_hqzJADVyEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_altMgu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9frdwO1UEeGT-eFu7Ghgjw" name="SocialHistorySection">
      <ownedComment xmi:id="_GBqF4O1VEeGT-eFu7Ghgjw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_alfxIO54EeGT5oaF-4NGAA" name="mu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_9frdwO1UEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alfxIe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-2YyAO1UEeGT-eFu7Ghgjw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_alg_Qe54EeGT5oaF-4NGAA" name="getmu2consolSmokingStatusObservations" isQuery="true" bodyCondition="_alg_RO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alg_RO54EeGT5oaF-4NGAA" name="body" constrainedElement="_alg_Qe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alg_Re54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SmokingStatusObservation)).oclAsType(consol::SmokingStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alg_Qu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_RYJj0OWQEeGKmvzED_He2w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alg_Q-54EeGT5oaF-4NGAA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_C0_BkO4xEeGT5oaF-4NGAA" name="VDTInpatientPatientInfo">
      <ownedComment xmi:id="_JC7xkO4xEeGT5oaF-4NGAA">
        <body>Objective : 170.314(e)(1) (View, download, and transmit to 3rd party)  for EP</body>
      </ownedComment>
      <ownedRule xmi:id="_bnbyEO4yEeGT5oaF-4NGAA" name="VDTInpatientPatientInfoResponsibleParty" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <ownedComment xmi:id="_gMvwUO4yEeGT5oaF-4NGAA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hhmqcO4yEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;&#xA;cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_xGJ9cO4yEeGT5oaF-4NGAA" name="VDTInpatientPatientInfoMedicationList" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_0HuRAO4yEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or  &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional)) or &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_F8DOQO4zEeGT5oaF-4NGAA" name="VDTInpatientPatientInfoCanHaveEitherVitalSignsRequiedOrOptionalEntry" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LMd_AO4zEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1NTjkO4zEeGT5oaF-4NGAA" name="VDTInpatientPatientInfoCanHaveEitherAllergyRequiredOrOptionalEntry" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_647CkO4zEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_alwP0O54EeGT5oaF-4NGAA" name="VDTInpatientPatientInfoSocialHistorySection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alwP0e54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_alxd9e54EeGT5oaF-4NGAA" name="VDTInpatientPatientInfoProblemSection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_alxd9u54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_al1IVe54EeGT5oaF-4NGAA" name="VDTInpatientPatientInfoResultsSection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_al1IVu54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_al3klO54EeGT5oaF-4NGAA" name="VDTInpatientPatientInfoPlanOfCareSection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_al3kle54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_al5ZwO54EeGT5oaF-4NGAA" name="VDTInpatientPatientInfoProceduresSection" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_al5Zwe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amvuUO54EeGT5oaF-4NGAA" name="VDTInpatientPatientInfomu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amvuUe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amw8cO54EeGT5oaF-4NGAA" name="VDTInpatientPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amw8ce54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amxjgO54EeGT5oaF-4NGAA" name="VDTInpatientPatientInfomu2consolAllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amxjge54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllergiesSectionEntriesOptional()->excluding(null)->reject(getAllergiesSectionEntriesOptional().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amyxoO54EeGT5oaF-4NGAA" name="VDTInpatientPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_C0_BkO4xEeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amyxoe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_C1DTAO4xEeGT5oaF-4NGAA" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_alxd8O54EeGT5oaF-4NGAA" name="getSocialHistorySection" isQuery="true" bodyCondition="_alxd8-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alxd8-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alxd8O54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alxd9O54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alxd8e54EeGT5oaF-4NGAA" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alxd8u54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alysEO54EeGT5oaF-4NGAA" name="getProblemSection" isQuery="true" bodyCondition="_alysE-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alysE-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alysEO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alysFO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alysEe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alysEu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alysFe54EeGT5oaF-4NGAA" name="getMedicationsSection" isQuery="true" bodyCondition="_alzTIu54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alzTIu54EeGT5oaF-4NGAA" name="body" constrainedElement="_alysFe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alzTI-54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alzTIO54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alzTIe54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alzTJO54EeGT5oaF-4NGAA" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_alzTJ-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alzTJ-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alzTJO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alzTKO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alzTJe54EeGT5oaF-4NGAA" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alzTJu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_alz6MO54EeGT5oaF-4NGAA" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_alz6M-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_alz6M-54EeGT5oaF-4NGAA" name="body" constrainedElement="_alz6MO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_alz6NO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_alz6Me54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_alz6Mu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_al0hQO54EeGT5oaF-4NGAA" name="getAllergiesSection" isQuery="true" bodyCondition="_al0hQ-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_al0hQ-54EeGT5oaF-4NGAA" name="body" constrainedElement="_al0hQO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_al0hRO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_al0hQe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_al0hQu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_al1IUO54EeGT5oaF-4NGAA" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_al1IU-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_al1IU-54EeGT5oaF-4NGAA" name="body" constrainedElement="_al1IUO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_al1IVO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_al1IUe54EeGT5oaF-4NGAA" type="_szTFwOF8EeGlJOFzBdwM6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_al1IUu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_al2WcO54EeGT5oaF-4NGAA" name="getResultsSection" isQuery="true" bodyCondition="_al2Wc-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_al2Wc-54EeGT5oaF-4NGAA" name="body" constrainedElement="_al2WcO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_al2WdO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_al2Wce54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_al2Wcu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_al29gO54EeGT5oaF-4NGAA" name="getVitalSignsSection" isQuery="true" bodyCondition="_al29g-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_al29g-54EeGT5oaF-4NGAA" name="body" constrainedElement="_al29gO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_al29hO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_al29ge54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_al29gu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_al29he54EeGT5oaF-4NGAA" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_al3kku54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_al3kku54EeGT5oaF-4NGAA" name="body" constrainedElement="_al29he54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_al3kk-54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_al3kkO54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_al3kke54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_al4ysO54EeGT5oaF-4NGAA" name="getPlanOfCareSection" isQuery="true" bodyCondition="_al4ys-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_al4ys-54EeGT5oaF-4NGAA" name="body" constrainedElement="_al4ysO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_al4ytO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_al4yse54EeGT5oaF-4NGAA" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_al4ysu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_al6n4O54EeGT5oaF-4NGAA" name="getProceduresSection" isQuery="true" bodyCondition="_al6n4-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_al6n4-54EeGT5oaF-4NGAA" name="body" constrainedElement="_al6n4O54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_al6n5O54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_al6n4e54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_al6n4u54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_tzbWgO40EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfo">
      <ownedComment xmi:id="_eqorEO43EeGT5oaF-4NGAA">
        <body>Objective : 170.314(e)(1) (View, download, and transmit to 3rd party)  for EH/CAH</body>
      </ownedComment>
      <ownedRule xmi:id="_PI9EEO5yEeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoMedicationList" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_TcvNcO5yEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or  &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional)) or &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lQwBoO5yEeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoMedicationAllergy" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_poy_8O5yEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nAedYO5zEeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoCanHaveEitherVitalSignsRequiedOrOptionalEntry" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_p0ljwO5zEeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZlI4O50EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoCanHaveEitherAllergyRequiredOrOptionalEntry" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tDcP8O50EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AllergiesSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AllergiesSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_zZdW0O50EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoCanHaveEitherEncountersRequiredOrOptionalEntry" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2vamAO50EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_MDXPUO52EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoReasonForHospitalization" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_P2QSIO52EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionDiagnosisSection))) or&#xD;&#xA;(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_al-5UO54EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoSocialHistorySection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_al-5Ue54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amAHcO54EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoProblemSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amAHce54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amDx0O54EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoResultsSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amDx0e54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amGOEO54EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoPlanOfCareSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amGOEe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amHcMO54EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoProceduresSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amHcMe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_amIqVO54EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfoHospitalDischargeInstructionsSection" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_amJRYO54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_am1N4O54EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfomu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_am1N4e54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_am2cAO54EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_am2cAe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getHospitalAdmissionMedicationsSectionEntriesOptional()->excluding(null)->reject(getHospitalAdmissionMedicationsSectionEntriesOptional().entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_am3qIO54EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfomu2consolAllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_am3qIe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getAllergiesSectionEntriesOptional()->excluding(null)->reject(getAllergiesSectionEntriesOptional().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_am5fUO54EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_am5fUe54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_am6tcO54EeGT5oaF-4NGAA" name="VDTAmbulatoryPatientInfomu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_tzbWgO40EeGT5oaF-4NGAA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_am6tce54EeGT5oaF-4NGAA">
          <language>OCL</language>
          <body>self.getHospitalAdmissionDiagnosisSection()->excluding(null)->reject(getHospitalAdmissionDiagnosisSection().entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_tzb9kO40EeGT5oaF-4NGAA" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_al_gYO54EeGT5oaF-4NGAA" name="getSocialHistorySection" isQuery="true" bodyCondition="_al_gY-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_al_gY-54EeGT5oaF-4NGAA" name="body" constrainedElement="_al_gYO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_al_gZO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_al_gYe54EeGT5oaF-4NGAA" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_al_gYu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amAugO54EeGT5oaF-4NGAA" name="getProblemSection" isQuery="true" bodyCondition="_amBVke54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amBVke54EeGT5oaF-4NGAA" name="body" constrainedElement="_amAugO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amBVku54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amAuge54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amBVkO54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amBVk-54EeGT5oaF-4NGAA" name="getMedicationsSection" isQuery="true" bodyCondition="_amBVlu54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amBVlu54EeGT5oaF-4NGAA" name="body" constrainedElement="_amBVk-54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amBVl-54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amBVlO54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amBVle54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amB8oO54EeGT5oaF-4NGAA" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_amB8o-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amB8o-54EeGT5oaF-4NGAA" name="body" constrainedElement="_amB8oO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amB8pO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amB8oe54EeGT5oaF-4NGAA" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amB8ou54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amCjsO54EeGT5oaF-4NGAA" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_amCjs-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amCjs-54EeGT5oaF-4NGAA" name="body" constrainedElement="_amCjsO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amCjtO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amCjse54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amCjsu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amCjte54EeGT5oaF-4NGAA" name="getAllergiesSection" isQuery="true" bodyCondition="_amDKwe54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amDKwe54EeGT5oaF-4NGAA" name="body" constrainedElement="_amCjte54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amDKwu54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amCjtu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amDKwO54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amDKw-54EeGT5oaF-4NGAA" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_amDKxu54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amDKxu54EeGT5oaF-4NGAA" name="body" constrainedElement="_amDKw-54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amDKx-54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amDKxO54EeGT5oaF-4NGAA" type="_szTFwOF8EeGlJOFzBdwM6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amDKxe54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amE_8O54EeGT5oaF-4NGAA" name="getResultsSection" isQuery="true" bodyCondition="_amE_8-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amE_8-54EeGT5oaF-4NGAA" name="body" constrainedElement="_amE_8O54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amE_9O54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amE_8e54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amE_8u54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amE_9e54EeGT5oaF-4NGAA" name="getVitalSignsSection" isQuery="true" bodyCondition="_amE_-O54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amE_-O54EeGT5oaF-4NGAA" name="body" constrainedElement="_amE_9e54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amFnAO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amE_9u54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amE_9-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amFnAe54EeGT5oaF-4NGAA" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_amFnBO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amFnBO54EeGT5oaF-4NGAA" name="body" constrainedElement="_amFnAe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amFnBe54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amFnAu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amFnA-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amG1IO54EeGT5oaF-4NGAA" name="getPlanOfCareSection" isQuery="true" bodyCondition="_amG1I-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amG1I-54EeGT5oaF-4NGAA" name="body" constrainedElement="_amG1IO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amG1JO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amG1Ie54EeGT5oaF-4NGAA" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amG1Iu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amIDQO54EeGT5oaF-4NGAA" name="getProceduresSection" isQuery="true" bodyCondition="_amIqUu54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amIqUu54EeGT5oaF-4NGAA" name="body" constrainedElement="_amIDQO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amIqU-54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amIqUO54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amIqUe54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amJ4cO54EeGT5oaF-4NGAA" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_amJ4c-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amJ4c-54EeGT5oaF-4NGAA" name="body" constrainedElement="_amJ4cO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amJ4dO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amJ4ce54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amJ4cu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amKfgO54EeGT5oaF-4NGAA" name="getEncountersSection" isQuery="true" bodyCondition="_amKfg-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amKfg-54EeGT5oaF-4NGAA" name="body" constrainedElement="_amKfgO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amKfhO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection))->asSequence()->any(true).oclAsType(consol::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amKfge54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LWg0BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amKfgu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amKfhe54EeGT5oaF-4NGAA" name="getEncountersSectionEntriesOptional" isQuery="true" bodyCondition="_amLGkO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amLGkO54EeGT5oaF-4NGAA" name="body" constrainedElement="_amKfhe54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amLGke54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::EncountersSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amKfhu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4yj2wBVdEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amKfh-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amLGku54EeGT5oaF-4NGAA" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_amLGle54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amLGle54EeGT5oaF-4NGAA" name="body" constrainedElement="_amLGku54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amLGlu54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amLGk-54EeGT5oaF-4NGAA" type="_gl8CMODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amLGlO54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amLtoO54EeGT5oaF-4NGAA" name="getReasonForVisitSection" isQuery="true" bodyCondition="_amLto-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amLto-54EeGT5oaF-4NGAA" name="body" constrainedElement="_amLtoO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amLtpO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amLtoe54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amLtou54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amMUsO54EeGT5oaF-4NGAA" name="getChiefComplaintSection" isQuery="true" bodyCondition="_amMUs-54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amMUs-54EeGT5oaF-4NGAA" name="body" constrainedElement="_amMUsO54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amMUtO54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amMUse54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amMUsu54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_amMUte54EeGT5oaF-4NGAA" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_amM7wO54EeGT5oaF-4NGAA">
        <ownedRule xmi:id="_amM7wO54EeGT5oaF-4NGAA" name="body" constrainedElement="_amMUte54EeGT5oaF-4NGAA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_amM7we54EeGT5oaF-4NGAA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_amMUtu54EeGT5oaF-4NGAA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_amMUt-54EeGT5oaF-4NGAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <profileApplication xmi:id="_mZtsIdd5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsItd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_mZtsI9d5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsJNd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_akHREO54EeGT5oaF-4NGAA">
      <eAnnotations xmi:id="_akHREe54EeGT5oaF-4NGAA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_mbrbANd5EeGtNLA6W-IQeQ" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" packageName="mu2consol" prefix="mu2consol" base_Namespace="_mZtsINd5EeGtNLA6W-IQeQ"/>
  <CDA:CDATemplate xmi:id="_Su_88NpWEeGzu8-aAsCS4g" base_Class="_VG3DUNkxEeGsqcJR8eqiMw" templateId="2.16.840.1.113883.11.11.11.1.1" assigningAuthorityName="TEMP"/>
  <CDA:ConstraintValidation xmi:id="_p6VEIN3EEeGdQcioKnmIhA" base_Constraint="_OxIpQN3EEeGdQcioKnmIhA">
    <ruleId>CONF:10055</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ywEDAN32EeGdQcioKnmIhA" base_Constraint="_n-eIsN32EeGdQcioKnmIhA"/>
  <CDA:ConstraintValidation xmi:id="_pMEu0N33EeGdQcioKnmIhA" base_Constraint="_kx5CgN33EeGdQcioKnmIhA"/>
  <CDA:ConstraintValidation xmi:id="_39anEOF3EeGlJOFzBdwM6w" base_Constraint="_j1rcwOF3EeGlJOFzBdwM6w"/>
  <CDA:CDATemplate xmi:id="_gWeuwOmKEeGNCuDrPdW6ZA" base_Class="_ZK4bUODlEeGdSJSga09Dyg"/>
  <CDA:ConstraintValidation xmi:id="_7vlYQOvXEeGkopdZmUN1Xw" base_Constraint="_gfm_8OvXEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_62L1oOvYEeGkopdZmUN1Xw" base_Constraint="_n8bhYOvYEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_rb7RoOvZEeGkopdZmUN1Xw" base_Constraint="_VUReAOvZEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_eegHAOvbEeGkopdZmUN1Xw" base_Constraint="_izlGUOvaEeGkopdZmUN1Xw"/>
  <CDA:ConstraintValidation xmi:id="_f8jZYOvbEeGkopdZmUN1Xw" base_Constraint="_2nwZAN3EEeGdQcioKnmIhA"/>
  <CDA:CDATemplate xmi:id="_PEUjwO1WEeGT-eFu7Ghgjw" base_Class="_7D0CQOzmEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_LX7foO1YEeGT-eFu7Ghgjw" base_Constraint="_F7KU8O1YEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_dNwRsO1YEeGT-eFu7Ghgjw" base_Constraint="_Zuc5QO1YEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_38GRsO1aEeGT-eFu7Ghgjw" base_Constraint="_yi4xUO1aEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_JCz7AO1bEeGT-eFu7Ghgjw" base_Constraint="_GlWaEO1bEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_XmnisO1bEeGT-eFu7Ghgjw" base_Constraint="_VchCoO1bEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_nFpcgO1bEeGT-eFu7Ghgjw" base_Constraint="_kNHwMO1bEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_EAFLgO1cEeGT-eFu7Ghgjw" base_Constraint="_CFE3YO1cEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_OB8-YO4zEeGT5oaF-4NGAA" base_Constraint="_xGJ9cO4yEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_Zv0TsO4zEeGT5oaF-4NGAA" base_Constraint="_F8DOQO4zEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_apqs0O4zEeGT5oaF-4NGAA" base_Constraint="_bnbyEO4yEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_7w4lUO4zEeGT5oaF-4NGAA" base_Constraint="_1NTjkO4zEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_VvkywO5yEeGT5oaF-4NGAA" base_Constraint="_PI9EEO5yEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_r7whEO5yEeGT5oaF-4NGAA" base_Constraint="_lQwBoO5yEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_ru4GMO5zEeGT5oaF-4NGAA" base_Constraint="_nAedYO5zEeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_vC6NUO50EeGT5oaF-4NGAA" base_Constraint="_oZlI4O50EeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_9cqhIO50EeGT5oaF-4NGAA" base_Constraint="_zZdW0O50EeGT5oaF-4NGAA"/>
  <CDA:ConstraintValidation xmi:id="_RxnyoO52EeGT5oaF-4NGAA" base_Constraint="_MDXPUO52EeGT5oaF-4NGAA"/>
  <Ecore:EPackage xmi:id="_akMJkO54EeGT5oaF-4NGAA" base_Package="_mZtsINd5EeGtNLA6W-IQeQ" packageName="mu2consol" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" basePackage="org.openhealthtools.mdht.uml.cda" prefix="mu2consol">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.mu2consol'</annotation>
  </Ecore:EPackage>
  <Ecore:EClass xmi:id="_akV6kO54EeGT5oaF-4NGAA" base_Class="_v-6qsNkMEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolGeneralHeaderConstraintsRecordTarget mu2consolGeneralHeaderConstraintsDocumentationOf GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode GeneralHeaderConstraintsRecordTargetPatientRolePatientName GeneralHeaderConstraintsRecordTargetPatientRolePatientAdministrativeGenderCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent' constraints.validation.query='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode GeneralHeaderConstraintsRecordTargetPatientRolePatientName GeneralHeaderConstraintsRecordTargetPatientRolePatientAdministrativeGenderCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTarget constraints.validation.error='RecordTargetPatientRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRole constraints.validation.error='PatientRolePatient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRolePatient constraints.validation.error='PatientName PatientAdministrativeGenderCode PatientEthnicGroupCode PatientRaceCode PatientBirthTime PatientLanguageCommunication'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication constraints.validation.error='LanguageCommunicationLanguageCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOf constraints.validation.error='DocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEvent constraints.validation.error='ServiceEventPerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEventPerformer1 constraints.validation.error='Performer1AssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsComponent1EncompassingEncounter constraints.validation.error='EncompassingEncounterEffectiveTime EncompassingEncounterLocation EncompassingEncounterResponsibleParty'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_akY94O54EeGT5oaF-4NGAA" base_Generalization="_VG3qYNkxEeGsqcJR8eqiMw"/>
  <CDA:ConformsTo xmi:id="_akY94e54EeGT5oaF-4NGAA" base_Generalization="_v-6qsdkMEeGsqcJR8eqiMw"/>
  <Ecore:EClass xmi:id="_akZk8O54EeGT5oaF-4NGAA" base_Class="_VG3DUNkxEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SummaryOfCareRecordTemplateId SummaryOfCareRecordCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection SummaryOfCareRecordMu2EncounterDiagnosesRequirements SummaryOfCareRecordCanHaveEitherRequiredOrOptionalVitalSigns SummaryOfCareRecordMedicationListConstraint SummaryOfCareRecordCarePlanning SummaryOfCareRecordMedicationAllergy SummaryOfCareRecordReasonForHospitalization SummaryOfCareRecordMedicationList SummaryOfCareRecordPlanOfCareSection SummaryOfCareRecordInstructionsSection SummaryOfCareRecordHospitalDischargeInstructionsSection SummaryOfCareRecordProblemSection SummaryOfCareRecordImmunizationsSection SummaryOfCareRecordMedicationsAdministeredSection SummaryOfCareRecordSocialHistorySection SummaryOfCareRecordResultsSection SummaryOfCareRecordProceduresSection SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication SummaryOfCareRecordmu2consolAllergiesSectionEntriesOptionalAllergyProblemAct SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity SummaryOfCareRecordInstructionsSectionTemplateId SummaryOfCareRecordmu2consolInstructionsSectionInstructions SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis' templateId.root='2.16.840.1.113883.11.11.11.1.1' constraints.validation.query='SummaryOfCareRecordmu2consolSocialHistorySectionSmokingStatusObservation SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication SummaryOfCareRecordmu2consolAllergiesSectionEntriesOptionalAllergyProblemAct SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCare SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity SummaryOfCareRecordInstructionsSectionTemplateId SummaryOfCareRecordmu2consolInstructionsSectionInstructions SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ak_a0O54EeGT5oaF-4NGAA" base_Class="_svnagODKEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPlanOfCareSectionCarePlanningForPlanOfCare'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_alBQAO54EeGT5oaF-4NGAA" base_Class="_CaN5MODgEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAssessmentSectionProblemObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_alDFMO54EeGT5oaF-4NGAA" base_Class="_g1AyQODhEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AssessmentAndPlanForConditionOrConcernProblemObservation'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_alFhdO54EeGT5oaF-4NGAA" base_Generalization="_avPxEODlEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_alGIgu54EeGT5oaF-4NGAA" base_Class="_ZK4bUODlEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolInstructionsSectionTemplateId mu2consolInstructionsSectionInstructions' templateId.root='null'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_alJy4O54EeGT5oaF-4NGAA" base_Class="_gl8CMODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_alLBAO54EeGT5oaF-4NGAA" base_Class="_qgJokODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_alM2MO54EeGT5oaF-4NGAA" base_Class="_y1mQkODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPostoperativeDiagnosisSectionProblemObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_alOrYO54EeGT5oaF-4NGAA" base_Class="_uvXlkODnEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_alQgkO54EeGT5oaF-4NGAA" base_Class="_bRRt0ODqEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_alSVwO54EeGT5oaF-4NGAA" base_Class="_3poqgODqEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolMedicationsAdministeredSectionMedicationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_alUK8O54EeGT5oaF-4NGAA" base_Class="_HBzuYODrEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_alVZEO54EeGT5oaF-4NGAA" base_Class="_szTFwOF8EeGlJOFzBdwM6w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAllergiesSectionEntriesOptionalAllergyProblemAct'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_alWnMO54EeGT5oaF-4NGAA" base_Generalization="_7D0pUOzmEeGT-eFu7Ghgjw"/>
  <Ecore:EClass xmi:id="_alXOQO54EeGT5oaF-4NGAA" base_Class="_7D0CQOzmEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ClinicalOfficeVisitSummaryTemplateId ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummaryMedicationList ClinicalOfficeVisitSummaryMedicationAllergy ClinicalOfficeVisitSummaryVitalSigns ClinicalOfficeVisitSummaryReasonForOfficeVisit ClinicalOfficeVisitSummaryCarePlanning ClinicalOfficeVisitSummarySocialHistorySection ClinicalOfficeVisitSummaryProblemSection ClinicalOfficeVisitSummaryResultsSection ClinicalOfficeVisitSummaryPlanOfCareSection ClinicalOfficeVisitSummaryProceduresSection ClinicalOfficeVisitSummaryAssessmentAndPlanSection ClinicalOfficeVisitSummaryInstructionsSection ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation ClinicalOfficeVisitSummarymu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication ClinicalOfficeVisitSummarymu2consolAllergiesSectionEntriesOptionalAllergyProblemAct ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity ClinicalOfficeVisitSummaryInstructionsSectionTemplateId ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions' templateId.root='null' constraints.validation.query='ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummarymu2consolSocialHistorySectionSmokingStatusObservation ClinicalOfficeVisitSummarymu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication ClinicalOfficeVisitSummarymu2consolAllergiesSectionEntriesOptionalAllergyProblemAct ClinicalOfficeVisitSummarymu2consolPlanOfCareSectionCarePlanningForPlanOfCare ClinicalOfficeVisitSummarymu2consolMedicationsAdministeredSectionMedicationActivity ClinicalOfficeVisitSummaryInstructionsSectionTemplateId ClinicalOfficeVisitSummarymu2consolInstructionsSectionInstructions'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_alg_QO54EeGT5oaF-4NGAA" base_Class="_9frdwO1UEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolSocialHistorySectionSmokingStatusObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_altzkO54EeGT5oaF-4NGAA" base_Class="_C0_BkO4xEeGT5oaF-4NGAA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='VDTInpatientPatientInfoResponsibleParty VDTInpatientPatientInfomu2consolSocialHistorySectionSmokingStatusObservation VDTInpatientPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication VDTInpatientPatientInfomu2consolAllergiesSectionEntriesOptionalAllergyProblemAct VDTInpatientPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare' constraints.validation.error='VDTInpatientPatientInfoResponsibleParty VDTInpatientPatientInfoMedicationList VDTInpatientPatientInfoCanHaveEitherVitalSignsRequiedOrOptionalEntry VDTInpatientPatientInfoCanHaveEitherAllergyRequiredOrOptionalEntry VDTInpatientPatientInfoSocialHistorySection VDTInpatientPatientInfoProblemSection VDTInpatientPatientInfoResultsSection VDTInpatientPatientInfoPlanOfCareSection VDTInpatientPatientInfoProceduresSection VDTInpatientPatientInfomu2consolSocialHistorySectionSmokingStatusObservation VDTInpatientPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication VDTInpatientPatientInfomu2consolAllergiesSectionEntriesOptionalAllergyProblemAct VDTInpatientPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_al7O8O54EeGT5oaF-4NGAA" base_Class="_tzbWgO40EeGT5oaF-4NGAA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VDTAmbulatoryPatientInfoMedicationList VDTAmbulatoryPatientInfoMedicationAllergy VDTAmbulatoryPatientInfoCanHaveEitherVitalSignsRequiedOrOptionalEntry VDTAmbulatoryPatientInfoCanHaveEitherAllergyRequiredOrOptionalEntry VDTAmbulatoryPatientInfoCanHaveEitherEncountersRequiredOrOptionalEntry VDTAmbulatoryPatientInfoReasonForHospitalization VDTAmbulatoryPatientInfoSocialHistorySection VDTAmbulatoryPatientInfoProblemSection VDTAmbulatoryPatientInfoResultsSection VDTAmbulatoryPatientInfoPlanOfCareSection VDTAmbulatoryPatientInfoProceduresSection VDTAmbulatoryPatientInfoHospitalDischargeInstructionsSection VDTAmbulatoryPatientInfomu2consolSocialHistorySectionSmokingStatusObservation VDTAmbulatoryPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication VDTAmbulatoryPatientInfomu2consolAllergiesSectionEntriesOptionalAllergyProblemAct VDTAmbulatoryPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare VDTAmbulatoryPatientInfomu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis' constraints.validation.query='VDTAmbulatoryPatientInfomu2consolSocialHistorySectionSmokingStatusObservation VDTAmbulatoryPatientInfomu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication VDTAmbulatoryPatientInfomu2consolAllergiesSectionEntriesOptionalAllergyProblemAct VDTAmbulatoryPatientInfomu2consolPlanOfCareSectionCarePlanningForPlanOfCare VDTAmbulatoryPatientInfomu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis'</annotation>
  </Ecore:EClass>
</xmi:XMI>
