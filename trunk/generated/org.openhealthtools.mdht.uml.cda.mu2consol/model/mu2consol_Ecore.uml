<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_mZtsINd5EeGtNLA6W-IQeQ" name="mu2consol">
    <packageImport xmi:id="_mdYrMtd5EeGtNLA6W-IQeQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.mu2consol.model/model/mu2consol-vocab.uml#_mZ-K0Nd5EeGtNLA6W-IQeQ"/>
    </packageImport>
    <packageImport xmi:id="_HE5v4Ng-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packageImport xmi:id="_qktQYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_sCPlYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_v-6qsNkMEeGsqcJR8eqiMw" name="GeneralHeaderConstraints">
      <ownedRule xmi:id="_FOmlIeHMEeG708usbCxwpw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FOmlIuHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FOqPgOHMEeG708usbCxwpw" name="GeneralHeaderConstraintsRecordTarget" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FOqPgeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.recordTarget->exists(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQn-YOHMEeG708usbCxwpw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQn-YeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(languageCommunication->one(languageCommunication : cda::LanguageCommunication | not languageCommunication.oclIsUndefined() and languageCommunication.oclIsKindOf(cda::LanguageCommunication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQolcOHMEeG708usbCxwpw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatient" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQolceHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject(patient->one(patient : cda::Patient | not patient.oclIsUndefined() and patient.oclIsKindOf(cda::Patient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQolcuHMEeG708usbCxwpw" name="GeneralHeaderConstraintsRecordTargetPatientRole" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQolc-HMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null)->reject(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_v-6qsdkMEeGsqcJR8eqiMw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_S9OzADxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VG3DUNkxEeGsqcJR8eqiMw" name="SummaryOfCareRecord">
      <ownedComment xmi:id="_OaVzYNpiEeGzu8-aAsCS4g">
        <body>170.314(b)(1) (Incorporate summary of care record)</body>
      </ownedComment>
      <ownedRule xmi:id="_OxIpQN3EEeGdQcioKnmIhA" name="SummaryOfCareRecordCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_UQ6EoN3EEeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2nwZAN3EEeGdQcioKnmIhA" name="SummaryOfCareRecordMu2EncounterDiagnosesRequirements" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_K7mFoN3FEeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AssessmentSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostoperativeDiagnosisSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostprocedureDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n-eIsN32EeGdQcioKnmIhA" name="SummaryOfCareRecordCanHaveEitherRequiredOrOptionalVitalSignsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbQu0N32EeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kx5CgN33EeGdQcioKnmIhA" name="SummaryOfCareRecordMedicationListConstraint" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o21eoN33EeGdQcioKnmIhA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or  &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional)) or &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FOtS0eHMEeG708usbCxwpw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FOtS0uHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.11.11.11.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FO0nkuHMEeG708usbCxwpw" name="SummaryOfCareRecordPlanOfCareSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO0nk-HMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FO2cxeHMEeG708usbCxwpw" name="SummaryOfCareRecordInstructionsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO2cxuHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::InstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FO3q5eHMEeG708usbCxwpw" name="SummaryOfCareRecordHospitalDischargeInstructionsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO3q5uHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FO6uMOHMEeG708usbCxwpw" name="SummaryOfCareRecordProblemSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO6uMeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FO-YleHMEeG708usbCxwpw" name="SummaryOfCareRecordMedicationsAdministeredSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO-YluHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FPA01eHMEeG708usbCxwpw" name="SummaryOfCareRecordSocialHistorySection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPA01uHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FPCqAOHMEeG708usbCxwpw" name="SummaryOfCareRecordResultsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPCqAeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FPEfM-HMEeG708usbCxwpw" name="SummaryOfCareRecordProceduresSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPEfNOHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQs24OHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolEncountersSectionEncounterActivities" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQs24eHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::EncounterActivities)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQuFAOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCareSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQuFAeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQusEOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityAct" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQusEeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PlanOfCareActivityAct)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQvTIOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityEncounter" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQvTIeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQv6MOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQv6MeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQxvYOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolInstructionsSectionInstructions" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQxvYeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQy9gOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQy9geHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQzkkOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQzkkeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQ0ysOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQ0yseHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQ1ZwOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQ1ZweHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQ2n4OHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQ2n4eHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQ32AOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQ32AeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQ5EIOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQ5EIeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQ5EIuHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalMedicationActivity" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQ5rMOHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQ6SQOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolHospitalDischargeMedicationsSectionDischargeMedication" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQ6SQeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::DischargeMedication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQ65UOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolHospitalDischargeMedicationsSectionMedicationActivity" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQ65UeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQ7gYOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolAllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQ8HcOHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQ8ugOHMEeG708usbCxwpw" name="SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQ8ugeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.->reject(entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VG3qYNkxEeGsqcJR8eqiMw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_FO0AgOHMEeG708usbCxwpw" name="getEncountersSection" isQuery="true" bodyCondition="_FO0nkOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO0nkOHMEeG708usbCxwpw" name="body" constrainedElement="_FO0AgOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO0nkeHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::EncountersSection))->asSequence()->any(true).oclAsType(mu2consol::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO0AgeHMEeG708usbCxwpw" type="_0cENMODoEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO0AguHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO1OoOHMEeG708usbCxwpw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_FO11seHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO11seHMEeG708usbCxwpw" name="body" constrainedElement="_FO1OoOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO11suHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO1OoeHMEeG708usbCxwpw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO11sOHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO11s-HMEeG708usbCxwpw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_FO11tuHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO11tuHMEeG708usbCxwpw" name="body" constrainedElement="_FO11s-HMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO11t-HMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO11tOHMEeG708usbCxwpw" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO11teHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO2cwOHMEeG708usbCxwpw" name="getInterventionsSection" isQuery="true" bodyCondition="_FO2cw-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO2cw-HMEeG708usbCxwpw" name="body" constrainedElement="_FO2cwOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO2cxOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection))->asSequence()->any(true).oclAsType(consol::InterventionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO2cweHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_hqzJADVyEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO2cwuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO3q4OHMEeG708usbCxwpw" name="getInstructionsSection" isQuery="true" bodyCondition="_FO3q4-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO3q4-HMEeG708usbCxwpw" name="body" constrainedElement="_FO3q4OHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO3q5OHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::InstructionsSection))->asSequence()->any(true).oclAsType(mu2consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO3q4eHMEeG708usbCxwpw" type="_ZK4bUODlEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO3q4uHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO45AOHMEeG708usbCxwpw" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_FO45A-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO45A-HMEeG708usbCxwpw" name="body" constrainedElement="_FO45AOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO45BOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO45AeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO45AuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO45BeHMEeG708usbCxwpw" name="getAssessmentSection" isQuery="true" bodyCondition="_FO45COHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO45COHMEeG708usbCxwpw" name="body" constrainedElement="_FO45BeHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO5gEOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO45BuHMEeG708usbCxwpw" type="_CaN5MODgEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO45B-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO5gEeHMEeG708usbCxwpw" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_FO5gFOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO5gFOHMEeG708usbCxwpw" name="body" constrainedElement="_FO5gEeHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO5gFeHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO5gEuHMEeG708usbCxwpw" type="_gl8CMODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO5gE-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO6HIOHMEeG708usbCxwpw" name="getHospitalDischargeDiagnosisSection" isQuery="true" bodyCondition="_FO6HI-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO6HI-HMEeG708usbCxwpw" name="body" constrainedElement="_FO6HIOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO6HJOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalDischargeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO6HIeHMEeG708usbCxwpw" type="_qgJokODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO6HIuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO6HJeHMEeG708usbCxwpw" name="getPostoperativeDiagnosisSection" isQuery="true" bodyCondition="_FO6HKOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO6HKOHMEeG708usbCxwpw" name="body" constrainedElement="_FO6HJeHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO6HKeHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PostoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PostoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO6HJuHMEeG708usbCxwpw" type="_y1mQkODmEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO6HJ-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO7VQOHMEeG708usbCxwpw" name="getProblemSection" isQuery="true" bodyCondition="_FO78UeHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO78UeHMEeG708usbCxwpw" name="body" constrainedElement="_FO7VQOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO78UuHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO7VQeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO78UOHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO78U-HMEeG708usbCxwpw" name="getAllergiesSection" isQuery="true" bodyCondition="_FO78VuHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO78VuHMEeG708usbCxwpw" name="body" constrainedElement="_FO78U-HMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO78V-HMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO78VOHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO78VeHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO8jYOHMEeG708usbCxwpw" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_FO8jY-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO8jY-HMEeG708usbCxwpw" name="body" constrainedElement="_FO8jYOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO8jZOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO8jYeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PQJcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO8jYuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO8jZeHMEeG708usbCxwpw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_FO9KceHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO9KceHMEeG708usbCxwpw" name="body" constrainedElement="_FO8jZeHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO9KcuHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO8jZuHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO9KcOHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO9Kc-HMEeG708usbCxwpw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_FO9KduHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO9KduHMEeG708usbCxwpw" name="body" constrainedElement="_FO9Kc-HMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO9Kd-HMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO9KdOHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO9KdeHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO9xgOHMEeG708usbCxwpw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_FO9xg-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO9xg-HMEeG708usbCxwpw" name="body" constrainedElement="_FO9xgOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO9xhOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO9xgeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO9xguHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO9xheHMEeG708usbCxwpw" name="getPreoperativeDiagnosisSection" isQuery="true" bodyCondition="_FO9xiOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO9xiOHMEeG708usbCxwpw" name="body" constrainedElement="_FO9xheHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO9xieHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PreoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO9xhuHMEeG708usbCxwpw" type="_bRRt0ODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO9xh-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO-YkOHMEeG708usbCxwpw" name="getImmunizationsSection" isQuery="true" bodyCondition="_FO-Yk-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO-Yk-HMEeG708usbCxwpw" name="body" constrainedElement="_FO-YkOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO-YlOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO-YkeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO-YkuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO_msOHMEeG708usbCxwpw" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_FO_ms-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FO_ms-HMEeG708usbCxwpw" name="body" constrainedElement="_FO_msOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FO_mtOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(mu2consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO_mseHMEeG708usbCxwpw" type="_3poqgODqEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO_msuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FO_mteHMEeG708usbCxwpw" name="getMedicationsSection" isQuery="true" bodyCondition="_FPANwOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FPANwOHMEeG708usbCxwpw" name="body" constrainedElement="_FO_mteHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPANweHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FO_mtuHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FO_mt-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FPANwuHMEeG708usbCxwpw" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_FPANxeHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FPANxeHMEeG708usbCxwpw" name="body" constrainedElement="_FPANwuHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPANxuHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FPANw-HMEeG708usbCxwpw" type="_HBzuYODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FPANxOHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FPA00OHMEeG708usbCxwpw" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_FPA00-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FPA00-HMEeG708usbCxwpw" name="body" constrainedElement="_FPA00OHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPA01OHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(mu2consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FPA00eHMEeG708usbCxwpw" type="_dyyy4ODrEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FPA00uHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FPCC8OHMEeG708usbCxwpw" name="getSocialHistorySection" isQuery="true" bodyCondition="_FPCC8-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FPCC8-HMEeG708usbCxwpw" name="body" constrainedElement="_FPCC8OHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPCC9OHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->any(true).oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FPCC8eHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FPCC8uHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FPDREOHMEeG708usbCxwpw" name="getResultsSection" isQuery="true" bodyCondition="_FPDRE-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FPDRE-HMEeG708usbCxwpw" name="body" constrainedElement="_FPDREOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPDRFOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FPDREeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FPDREuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FPD4IOHMEeG708usbCxwpw" name="getVitalSignsSection" isQuery="true" bodyCondition="_FPD4I-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FPD4I-HMEeG708usbCxwpw" name="body" constrainedElement="_FPD4IOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPD4JOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FPD4IeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FPD4IuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FPD4JeHMEeG708usbCxwpw" name="getVitalSignsSectionEntriesOptional" isQuery="true" bodyCondition="_FPEfMeHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FPEfMeHMEeG708usbCxwpw" name="body" constrainedElement="_FPD4JeHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPEfMuHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FPD4JuHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bRH8sBVeEeGQCvUGzi1kDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FPEfMOHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FPFtUOHMEeG708usbCxwpw" name="getProceduresSection" isQuery="true" bodyCondition="_FPFtU-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FPFtU-HMEeG708usbCxwpw" name="body" constrainedElement="_FPFtUOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPFtVOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FPFtUeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FPFtUuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FPFtVeHMEeG708usbCxwpw" name="getAllergiesSectionEntriesOptional" isQuery="true" bodyCondition="_FPGUYeHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FPGUYeHMEeG708usbCxwpw" name="body" constrainedElement="_FPFtVeHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPGUYuHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(mu2consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FPFtVuHMEeG708usbCxwpw" type="_szTFwOF8EeGlJOFzBdwM6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FPGUYOHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FPGUY-HMEeG708usbCxwpw" name="getPostprocedureDiagnosisSection" isQuery="true" bodyCondition="_FPGUZuHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FPGUZuHMEeG708usbCxwpw" name="body" constrainedElement="_FPGUY-HMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPGUZ-HMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PostprocedureDiagnosisSection))->asSequence()->any(true).oclAsType(mu2consol::PostprocedureDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FPGUZOHMEeG708usbCxwpw" type="_uvXlkODnEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FPGUZeHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FPG7cOHMEeG708usbCxwpw" name="getReasonForReferralSection" isQuery="true" bodyCondition="_FPG7c-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FPG7c-HMEeG708usbCxwpw" name="body" constrainedElement="_FPG7cOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPG7dOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))->asSequence()->any(true).oclAsType(consol::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FPG7ceHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQFxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FPG7cuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gl-h4OBLEeGJ4fCWX8h3-g" name="VDTAmbulatoryPatientInfo">
      <ownedComment xmi:id="_gl-h4eBLEeGJ4fCWX8h3-g">
        <body>Objective : 170.314(e)(1) (View, download, and transmit to 3rd party)  for EH/CAH</body>
      </ownedComment>
      <ownedRule xmi:id="_gl-h4uBLEeGJ4fCWX8h3-g" name="VDTAmbulatoryPatientInfoCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_gl-h4OBLEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_gl-h4-BLEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gl-h5OBLEeGJ4fCWX8h3-g" name="VDTAmbulatoryPatientInfoMu2EncounterDiagnosesRequirements" constrainedElement="_gl-h4OBLEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_gl-h5eBLEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AssessmentSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostoperativeDiagnosisSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostprocedureDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gl-h5uBLEeGJ4fCWX8h3-g" name="VDTAmbulatoryPatientInfoCanHaveEitherRequiredOrOptionalVitalSignsSection" constrainedElement="_gl-h4OBLEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_gl-h5-BLEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gl-h6OBLEeGJ4fCWX8h3-g" name="VDTAmbulatoryPatientInfoMedicationListConstraint" constrainedElement="_gl-h4OBLEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_gl-h6eBLEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or  &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional)) or &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FPHigOHMEeG708usbCxwpw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_gl-h4OBLEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPHigeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.11.11.11.1.3')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gl-h7OBLEeGJ4fCWX8h3-g" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3PoPUOBLEeGJ4fCWX8h3-g" name="CreateTransmitSummaryOfCareRecord">
      <ownedComment xmi:id="_3PoPUeBLEeGJ4fCWX8h3-g">
        <body>170.314(b)(2) (Create and transmit summary care record)</body>
      </ownedComment>
      <ownedRule xmi:id="_3PoPUuBLEeGJ4fCWX8h3-g" name="CreateTransmitSummaryOfCareRecordCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_3PoPUOBLEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3PoPU-BLEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_3PoPVOBLEeGJ4fCWX8h3-g" name="CreateTransmitSummaryOfCareRecordMu2EncounterDiagnosesRequirements" constrainedElement="_3PoPUOBLEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3PoPVeBLEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AssessmentSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostoperativeDiagnosisSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostprocedureDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_3PoPVuBLEeGJ4fCWX8h3-g" name="CreateTransmitSummaryOfCareRecordCanHaveEitherRequiredOrOptionalVitalSignsSection" constrainedElement="_3PoPUOBLEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3PoPV-BLEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_3PoPWOBLEeGJ4fCWX8h3-g" name="CreateTransmitSummaryOfCareRecordMedicationListConstraint" constrainedElement="_3PoPUOBLEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3PoPWeBLEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or  &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional)) or &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FPWzEeHMEeG708usbCxwpw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_3PoPUOBLEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPWzEuHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.11.11.11.1.2')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_3PoPXOBLEeGJ4fCWX8h3-g" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Gaq2IOBMEeGJ4fCWX8h3-g" name="VDTInpatientPatientInfo">
      <ownedComment xmi:id="_Gaq2IeBMEeGJ4fCWX8h3-g">
        <body>170.314(e)(2) (Ambulatory setting only – clinical summaries)</body>
      </ownedComment>
      <ownedRule xmi:id="_Gaq2IuBMEeGJ4fCWX8h3-g" name="VDTInpatientPatientInfoCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_Gaq2IOBMEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Gaq2I-BMEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Gaq2JOBMEeGJ4fCWX8h3-g" name="VDTInpatientPatientInfoMu2EncounterDiagnosesRequirements" constrainedElement="_Gaq2IOBMEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Gaq2JeBMEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AssessmentSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostoperativeDiagnosisSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostprocedureDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Gaq2JuBMEeGJ4fCWX8h3-g" name="VDTInpatientPatientInfoCanHaveEitherRequiredOrOptionalVitalSignsSection" constrainedElement="_Gaq2IOBMEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Gaq2J-BMEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Gaq2KOBMEeGJ4fCWX8h3-g" name="VDTInpatientPatientInfoMedicationListConstraint" constrainedElement="_Gaq2IOBMEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Gaq2KeBMEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or  &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional)) or &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FPk1geHMEeG708usbCxwpw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_Gaq2IOBMEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FPk1guHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.11.11.11.1.4')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Gaq2LOBMEeGJ4fCWX8h3-g" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VyD24OBMEeGJ4fCWX8h3-g" name="ClinicalOfficeVisitSummary">
      <ownedComment xmi:id="_VyD24eBMEeGJ4fCWX8h3-g">
        <body>Objective : 170.314(e)(1)  (View, download, and transmit to 3rd party) for EP</body>
      </ownedComment>
      <ownedRule xmi:id="_VyD24uBMEeGJ4fCWX8h3-g" name="ClinicalOfficeVisitSummaryCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_VyD24OBMEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VyD24-BMEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VyD25OBMEeGJ4fCWX8h3-g" name="ClinicalOfficeVisitSummaryMu2EncounterDiagnosesRequirements" constrainedElement="_VyD24OBMEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VyD25eBMEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AssessmentSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostoperativeDiagnosisSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostprocedureDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::EncountersSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VyD25uBMEeGJ4fCWX8h3-g" name="ClinicalOfficeVisitSummaryCanHaveEitherRequiredOrOptionalVitalSignsSection" constrainedElement="_VyD24OBMEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VyD25-BMEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::VitalSignsSectionEntriesOptional)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VyD26OBMEeGJ4fCWX8h3-g" name="ClinicalOfficeVisitSummaryMedicationListConstraint" constrainedElement="_VyD24OBMEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VyD26eBMEeGJ4fCWX8h3-g">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::MedicationsSection)) or  &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional)) or &#xD;&#xA; self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeMedicationsSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FP2iUeHMEeG708usbCxwpw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_VyD24OBMEeGJ4fCWX8h3-g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FP2iUuHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.11.11.11.1.5')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VyD27OBMEeGJ4fCWX8h3-g" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ec-GAODeEeGdSJSga09Dyg" name="AssessmentAndPlanForCarePlanning">
      <ownedComment xmi:id="_XvBEkOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <generalization xmi:id="_FkUIkODeEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_FQKEUOHMEeG708usbCxwpw" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_FQKEU-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQKEU-HMEeG708usbCxwpw" name="body" constrainedElement="_FQKEUOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQKEVOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQKEUeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQKEUuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FQKrYOHMEeG708usbCxwpw" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_FQKrY-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQKrY-HMEeG708usbCxwpw" name="body" constrainedElement="_FQKrYOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQKrZOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQKrYeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQKrYuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FQKrZeHMEeG708usbCxwpw" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_FQKraOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQKraOHMEeG708usbCxwpw" name="body" constrainedElement="_FQKrZeHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQKraeHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQKrZuHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQKrZ-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_svnagODKEeGdSJSga09Dyg" name="PlanOfCareSection">
      <ownedComment xmi:id="_wajPYOFzEeGlJOFzBdwM6w">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_j1rcwOF3EeGlJOFzBdwM6w" name="mu2consolPlanOfCareSectionCarePlanningForPlanOfCareSection" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qaLEgOF3EeGlJOFzBdwM6w">
          <language>OCL</language>
          <body>self.getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or self.getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or self.getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQFL0OHMEeG708usbCxwpw" name="mu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityAct" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQFy4OHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PlanOfCareActivityAct))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQHBAeHMEeG708usbCxwpw" name="mu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityEncounter" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQHBAuHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQIPJeHMEeG708usbCxwpw" name="mu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQI2MOHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vqugwODKEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_FQGZ8eHMEeG708usbCxwpw" name="getmu2consolPlanOfCareActivityAct" isQuery="true" bodyCondition="_FQGZ9OHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQGZ9OHMEeG708usbCxwpw" name="body" constrainedElement="_FQGZ8eHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQHBAOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlanOfCareActivityAct))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQGZ8uHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWE5xSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQGZ8-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FQIPIOHMEeG708usbCxwpw" name="getmu2consolPlanOfCareActivityEncounter" isQuery="true" bodyCondition="_FQIPI-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQIPI-HMEeG708usbCxwpw" name="body" constrainedElement="_FQIPIOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQIPJOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityEncounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQIPIeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWFBBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQIPIuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FQJdQOHMEeG708usbCxwpw" name="getmu2consolPlanOfCareActivityObservation" isQuery="true" bodyCondition="_FQJdQ-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQJdQ-HMEeG708usbCxwpw" name="body" constrainedElement="_FQJdQOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQJdROHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlanOfCareActivityObservation))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQJdQeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NcLjhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQJdQuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CaN5MODgEeGdSJSga09Dyg" name="AssessmentSection">
      <ownedComment xmi:id="_dY-WsOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_FQNHoOHMEeG708usbCxwpw" name="mu2consolAssessmentSectionProblemObservation" constrainedElement="_CaN5MODgEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQNHoeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D0JgkODgEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_W8pI4DszEeGvzMYhXuqAEA"/>
      </generalization>
      <ownedOperation xmi:id="_FQNuseHMEeG708usbCxwpw" name="getProblemObservation" isQuery="true" bodyCondition="_FQNutOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQNutOHMEeG708usbCxwpw" name="body" constrainedElement="_FQNuseHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQNuteHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQNusuHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQNus-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g1AyQODhEeGdSJSga09Dyg" name="AssessmentAndPlanForConditionOrConcern">
      <ownedComment xmi:id="_Zls5YOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <generalization xmi:id="_iIDHcODhEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_FQOVwOHMEeG708usbCxwpw" name="getProblemObservation" isQuery="true" bodyCondition="_FQOVw-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQOVw-HMEeG708usbCxwpw" name="body" constrainedElement="_FQOVwOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQOVxOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQOVweHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQOVwuHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_w2gYkODkEeGdSJSga09Dyg" name="AssessmentAndPlanSection">
      <ownedComment xmi:id="_b1SWYOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <generalization xmi:id="_ySywYODkEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_FQO80OHMEeG708usbCxwpw" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_FQO80-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQO80-HMEeG708usbCxwpw" name="body" constrainedElement="_FQO80OHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQO81OHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQO80eHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQO80uHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FQPj4OHMEeG708usbCxwpw" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_FQPj4-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQPj4-HMEeG708usbCxwpw" name="body" constrainedElement="_FQPj4OHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQPj5OHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQPj4eHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQPj4uHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FQPj5eHMEeG708usbCxwpw" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_FQQK8OHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQQK8OHMEeG708usbCxwpw" name="body" constrainedElement="_FQPj5eHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQQK8eHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQPj5uHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQPj5-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FQQK8uHMEeG708usbCxwpw" name="getProblemObservation" isQuery="true" bodyCondition="_FQQK9eHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQQK9eHMEeG708usbCxwpw" name="body" constrainedElement="_FQQK8uHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQQK9uHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQQK8-HMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQQK9OHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZK4bUODlEeGdSJSga09Dyg" name="InstructionsSection">
      <ownedComment xmi:id="_nirKkOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_FQQyAOHMEeG708usbCxwpw" name="mu2consolInstructionsSectionInstructions" constrainedElement="_ZK4bUODlEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQQyAeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_avPxEODlEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
      </generalization>
      <ownedOperation xmi:id="_FQSAIOHMEeG708usbCxwpw" name="getmu2consolInstructionss" isQuery="true" bodyCondition="_FQSAI-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQSAI-HMEeG708usbCxwpw" name="body" constrainedElement="_FQSAIOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQSAJOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions)).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQSAIeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2G8h9RSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQSAIuHMEeG708usbCxwpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gl8CMODmEeGdSJSga09Dyg" name="HospitalAdmissionDiagnosisSection">
      <ownedComment xmi:id="_iSMIYOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_FQSnMOHMEeG708usbCxwpw" name="mu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_gl8CMODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQSnMeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jgg88ODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidQhSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_FQTOQeHMEeG708usbCxwpw" name="getmu2consolHospitalAdmissionDiagnosis" isQuery="true" bodyCondition="_FQTOROHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQTOROHMEeG708usbCxwpw" name="body" constrainedElement="_FQTOQeHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQTOReHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQTOQuHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5K6mAEFHEeGorO80f-Cppg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQTOQ-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qgJokODmEeGdSJSga09Dyg" name="HospitalDischargeDiagnosisSection">
      <ownedComment xmi:id="_k2eqEOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_FQT1UOHMEeG708usbCxwpw" name="mu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_qgJokODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQT1UeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rXMlUODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidURSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_FQVDceHMEeG708usbCxwpw" name="getmu2consolHospitalDischargeDiagnosis" isQuery="true" bodyCondition="_FQVDdOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQVDdOHMEeG708usbCxwpw" name="body" constrainedElement="_FQVDceHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQVDdeHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalDischargeDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalDischargeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQVDcuHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_KtwVgCULEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQVDc-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y1mQkODmEeGdSJSga09Dyg" name="PostoperativeDiagnosisSection">
      <ownedComment xmi:id="_q87D4OGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_FQVqgOHMEeG708usbCxwpw" name="mu2consolPostoperativeDiagnosisSectionProblemObservation" constrainedElement="_y1mQkODmEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQVqgeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zVobgODmEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_7UA-4DVyEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_FQW4oeHMEeG708usbCxwpw" name="getProblemObservation" isQuery="true" bodyCondition="_FQW4pOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQW4pOHMEeG708usbCxwpw" name="body" constrainedElement="_FQW4oeHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQW4peHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQW4ouHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQW4o-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uvXlkODnEeGdSJSga09Dyg" name="PostprocedureDiagnosisSection">
      <ownedComment xmi:id="_sNALsOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_FQXfsOHMEeG708usbCxwpw" name="mu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_uvXlkODnEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQXfseHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vj29kODnEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_-jlSMDVyEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_FQYt0OHMEeG708usbCxwpw" name="getmu2consolPostprocedureDiagnosis" isQuery="true" bodyCondition="_FQYt0-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQYt0-HMEeG708usbCxwpw" name="body" constrainedElement="_FQYt0OHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQYt1OHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PostprocedureDiagnosis))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQYt0eHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_0fjXAEEvEeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQYt0uHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0cENMODoEeGdSJSga09Dyg" name="EncountersSection">
      <ownedComment xmi:id="_fn3QIOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_FQZU4OHMEeG708usbCxwpw" name="mu2consolEncountersSectionEncounterActivities" constrainedElement="_0cENMODoEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQZU4eHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::EncounterActivities))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1Z2rIODoEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LWg0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_FQZ78eHMEeG708usbCxwpw" name="getmu2consolEncounterActivitiess" isQuery="true" bodyCondition="_FQajAOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQajAOHMEeG708usbCxwpw" name="body" constrainedElement="_FQZ78eHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQajAeHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::EncounterActivities)).oclAsType(consol::EncounterActivities)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQZ78uHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LayQBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQZ78-HMEeG708usbCxwpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bRRt0ODqEeGdSJSga09Dyg" name="PreoperativeDiagnosisSection">
      <ownedComment xmi:id="_thn1QOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_FQajAuHMEeG708usbCxwpw" name="mu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_bRRt0ODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQajA-HMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_b5wDEODqEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Cu6qMDVzEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_FQbxIeHMEeG708usbCxwpw" name="getmu2consolPreoperativeDiagnosis" isQuery="true" bodyCondition="_FQbxJOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQbxJOHMEeG708usbCxwpw" name="body" constrainedElement="_FQbxIeHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQbxJeHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PreoperativeDiagnosis))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQbxIuHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_0baBYEEwEeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQbxI-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3poqgODqEeGdSJSga09Dyg" name="MedicationsAdministeredSection">
      <ownedComment xmi:id="_o4-PIOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_FQcYMOHMEeG708usbCxwpw" name="mu2consolMedicationsAdministeredSectionMedicationActivity" constrainedElement="_3poqgODqEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQcYMeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4XEYQODqEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj_BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_FQdmUeHMEeG708usbCxwpw" name="getmu2consolMedicationActivities" isQuery="true" bodyCondition="_FQdmVOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQdmVOHMEeG708usbCxwpw" name="body" constrainedElement="_FQdmUeHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQdmVeHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQdmUuHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2GHbgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQdmU-HMEeG708usbCxwpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HBzuYODrEeGdSJSga09Dyg" name="HospitalAdmissionMedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_jlwCAOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_FQeNYOHMEeG708usbCxwpw" name="mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_HBzuYODrEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQeNYeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQgCkOHMEeG708usbCxwpw" name="mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalMedicationActivity" constrainedElement="_HBzuYODrEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQgCkeHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Hm_fEODrEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj5BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_FQfbgeHMEeG708usbCxwpw" name="getmu2consolAdmissionMedications" isQuery="true" bodyCondition="_FQfbhOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQfbhOHMEeG708usbCxwpw" name="body" constrainedElement="_FQfbgeHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQfbheHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AdmissionMedication)).oclAsType(consol::AdmissionMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQfbguHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_LNP08EFGEeGorO80f-Cppg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQfbg-HMEeG708usbCxwpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FQgpoOHMEeG708usbCxwpw" name="getMedicationActivity" isQuery="true" bodyCondition="_FQgpo-HMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQgpo-HMEeG708usbCxwpw" name="body" constrainedElement="_FQgpoOHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQgppOHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity))->asSequence()->any(true).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQgpoeHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2GHbgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQgpouHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_dyyy4ODrEeGdSJSga09Dyg" name="HospitalDischargeMedicationsSection">
      <ownedComment xmi:id="_mL9PQOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_FQhQsOHMEeG708usbCxwpw" name="mu2consolHospitalDischargeMedicationsSectionDischargeMedication" constrainedElement="_dyyy4ODrEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQhQseHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::DischargeMedication))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FQjF4OHMEeG708usbCxwpw" name="mu2consolHospitalDischargeMedicationsSectionMedicationActivity" constrainedElement="_dyyy4ODrEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQjF4eHMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_eZ09sODrEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
      </generalization>
      <ownedOperation xmi:id="_FQie0eHMEeG708usbCxwpw" name="getmu2consolDischargeMedications" isQuery="true" bodyCondition="_FQie1OHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQie1OHMEeG708usbCxwpw" name="body" constrainedElement="_FQie0eHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQie1eHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::DischargeMedication)).oclAsType(consol::DischargeMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQie0uHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_hD-z0CUPEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQie0-HMEeG708usbCxwpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FQjs8OHMEeG708usbCxwpw" name="getMedicationActivity" isQuery="true" bodyCondition="_FQkUAOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQkUAOHMEeG708usbCxwpw" name="body" constrainedElement="_FQjs8OHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQkUAeHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity))->asSequence()->any(true).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQjs8eHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2GHbgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQjs8uHMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_szTFwOF8EeGlJOFzBdwM6w" name="AllergiesSectionEntriesOptional">
      <ownedComment xmi:id="_U6AmUOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_FQkUAuHMEeG708usbCxwpw" name="mu2consolAllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_szTFwOF8EeGlJOFzBdwM6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQkUA-HMEeG708usbCxwpw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ugMFYOF8EeGlJOFzBdwM6w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_bGzYgBVdEeGQCvUGzi1kDQ"/>
      </generalization>
      <ownedOperation xmi:id="_FQliIeHMEeG708usbCxwpw" name="getmu2consolAllergyProblemAct" isQuery="true" bodyCondition="_FQliJOHMEeG708usbCxwpw">
        <ownedRule xmi:id="_FQliJOHMEeG708usbCxwpw" name="body" constrainedElement="_FQliIeHMEeG708usbCxwpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_FQliJeHMEeG708usbCxwpw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AllergyProblemAct))->asSequence()->any(true).oclAsType(consol::AllergyProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_FQliIuHMEeG708usbCxwpw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2EAisBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FQliI-HMEeG708usbCxwpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <profileApplication xmi:id="_mZtsIdd5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsItd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_mZtsI9d5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsJNd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_FOhFkOHMEeG708usbCxwpw">
      <eAnnotations xmi:id="_FOhFkeHMEeG708usbCxwpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_mbrbANd5EeGtNLA6W-IQeQ" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" packageName="mu2consol" prefix="mu2consol" base_Namespace="_mZtsINd5EeGtNLA6W-IQeQ"/>
  <CDA:CDATemplate xmi:id="_Su_88NpWEeGzu8-aAsCS4g" base_Class="_VG3DUNkxEeGsqcJR8eqiMw" templateId="2.16.840.1.113883.11.11.11.1.1" assigningAuthorityName="TEMP"/>
  <CDA:CDATemplate xmi:id="_dKwKINpWEeGzu8-aAsCS4g" base_Class="_v-6qsNkMEeGsqcJR8eqiMw" templateId="2.16.840.1.113883.10.20.22.1.1"/>
  <CDA:ConstraintValidation xmi:id="_p6VEIN3EEeGdQcioKnmIhA" base_Constraint="_OxIpQN3EEeGdQcioKnmIhA">
    <ruleId>CONF:10055</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ywEDAN32EeGdQcioKnmIhA" base_Constraint="_n-eIsN32EeGdQcioKnmIhA"/>
  <CDA:ConstraintValidation xmi:id="_pMEu0N33EeGdQcioKnmIhA" base_Constraint="_kx5CgN33EeGdQcioKnmIhA"/>
  <CDA:CDATemplate xmi:id="_gl-iNeBLEeGJ4fCWX8h3-g" base_Class="_gl-h4OBLEeGJ4fCWX8h3-g" templateId="2.16.840.1.113883.11.11.11.1.3" assigningAuthorityName="TEMP"/>
  <CDA:ConstraintValidation xmi:id="_gl-iNuBLEeGJ4fCWX8h3-g" base_Constraint="_gl-h4uBLEeGJ4fCWX8h3-g">
    <ruleId>CONF:10055</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_gl-iN-BLEeGJ4fCWX8h3-g" base_Constraint="_gl-h5uBLEeGJ4fCWX8h3-g"/>
  <CDA:ConstraintValidation xmi:id="_gl-iOOBLEeGJ4fCWX8h3-g" base_Constraint="_gl-h6OBLEeGJ4fCWX8h3-g"/>
  <CDA:CDATemplate xmi:id="_3PoPpeBLEeGJ4fCWX8h3-g" base_Class="_3PoPUOBLEeGJ4fCWX8h3-g" templateId="2.16.840.1.113883.11.11.11.1.2" assigningAuthorityName="TEMP"/>
  <CDA:ConstraintValidation xmi:id="_3PoPpuBLEeGJ4fCWX8h3-g" base_Constraint="_3PoPUuBLEeGJ4fCWX8h3-g">
    <ruleId>CONF:10055</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_3PoPp-BLEeGJ4fCWX8h3-g" base_Constraint="_3PoPVuBLEeGJ4fCWX8h3-g"/>
  <CDA:ConstraintValidation xmi:id="_3PoPqOBLEeGJ4fCWX8h3-g" base_Constraint="_3PoPWOBLEeGJ4fCWX8h3-g"/>
  <CDA:CDATemplate xmi:id="_Gaq2deBMEeGJ4fCWX8h3-g" base_Class="_Gaq2IOBMEeGJ4fCWX8h3-g" templateId="2.16.840.1.113883.11.11.11.1.4" assigningAuthorityName="TEMP"/>
  <CDA:ConstraintValidation xmi:id="_Gaq2duBMEeGJ4fCWX8h3-g" base_Constraint="_Gaq2IuBMEeGJ4fCWX8h3-g">
    <ruleId>CONF:10055</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Gaq2d-BMEeGJ4fCWX8h3-g" base_Constraint="_Gaq2JuBMEeGJ4fCWX8h3-g"/>
  <CDA:ConstraintValidation xmi:id="_Gaq2eOBMEeGJ4fCWX8h3-g" base_Constraint="_Gaq2KOBMEeGJ4fCWX8h3-g"/>
  <CDA:CDATemplate xmi:id="_VyD3NeBMEeGJ4fCWX8h3-g" base_Class="_VyD24OBMEeGJ4fCWX8h3-g" templateId="2.16.840.1.113883.11.11.11.1.5" assigningAuthorityName="TEMP"/>
  <CDA:ConstraintValidation xmi:id="_VyD3NuBMEeGJ4fCWX8h3-g" base_Constraint="_VyD24uBMEeGJ4fCWX8h3-g">
    <ruleId>CONF:10055</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VyD3N-BMEeGJ4fCWX8h3-g" base_Constraint="_VyD25uBMEeGJ4fCWX8h3-g"/>
  <CDA:ConstraintValidation xmi:id="_VyD3OOBMEeGJ4fCWX8h3-g" base_Constraint="_VyD26OBMEeGJ4fCWX8h3-g"/>
  <CDA:ConstraintValidation xmi:id="_39anEOF3EeGlJOFzBdwM6w" base_Constraint="_j1rcwOF3EeGlJOFzBdwM6w"/>
  <Ecore:EPackage xmi:id="_FOmlIOHMEeG708usbCxwpw" base_Package="_mZtsINd5EeGtNLA6W-IQeQ" packageName="mu2consol" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" basePackage="org.openhealthtools.mdht.uml.cda" prefix="mu2consol"/>
  <Ecore:EClass xmi:id="_FOnMMOHMEeG708usbCxwpw" base_Class="_v-6qsNkMEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId GeneralHeaderConstraintsRecordTarget GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole' templateId.root='2.16.840.1.113883.10.20.22.1.1' constraints.validation.query='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTarget constraints.validation.error='RecordTargetPatientRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRole constraints.validation.error='PatientRolePatient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRolePatient constraints.validation.error='PatientLanguageCommunication'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_FOtS0OHMEeG708usbCxwpw" base_Generalization="_VG3qYNkxEeGsqcJR8eqiMw"/>
  <Ecore:EClass xmi:id="_FOt54OHMEeG708usbCxwpw" base_Class="_VG3DUNkxEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SummaryOfCareRecordTemplateId SummaryOfCareRecordCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection SummaryOfCareRecordMu2EncounterDiagnosesRequirements SummaryOfCareRecordCanHaveEitherRequiredOrOptionalVitalSignsSection SummaryOfCareRecordMedicationListConstraint SummaryOfCareRecordPlanOfCareSection SummaryOfCareRecordInstructionsSection SummaryOfCareRecordHospitalDischargeInstructionsSection SummaryOfCareRecordProblemSection SummaryOfCareRecordMedicationsAdministeredSection SummaryOfCareRecordSocialHistorySection SummaryOfCareRecordResultsSection SummaryOfCareRecordProceduresSection SummaryOfCareRecordmu2consolEncountersSectionEncounterActivities SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCareSection SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityAct SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityEncounter SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation SummaryOfCareRecordmu2consolInstructionsSectionInstructions SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalMedicationActivity SummaryOfCareRecordmu2consolHospitalDischargeMedicationsSectionDischargeMedication SummaryOfCareRecordmu2consolHospitalDischargeMedicationsSectionMedicationActivity SummaryOfCareRecordmu2consolAllergiesSectionEntriesOptionalAllergyProblemAct SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis' templateId.root='2.16.840.1.113883.11.11.11.1.1' constraints.validation.query='SummaryOfCareRecordmu2consolEncountersSectionEncounterActivities SummaryOfCareRecordmu2consolPlanOfCareSectionCarePlanningForPlanOfCareSection SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityAct SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityEncounter SummaryOfCareRecordmu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation SummaryOfCareRecordmu2consolInstructionsSectionInstructions SummaryOfCareRecordmu2consolAssessmentSectionProblemObservation SummaryOfCareRecordmu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis SummaryOfCareRecordmu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis SummaryOfCareRecordmu2consolPostoperativeDiagnosisSectionProblemObservation SummaryOfCareRecordmu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis SummaryOfCareRecordmu2consolMedicationsAdministeredSectionMedicationActivity SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication SummaryOfCareRecordmu2consolHospitalAdmissionMedicationsSectionEntriesOptionalMedicationActivity SummaryOfCareRecordmu2consolHospitalDischargeMedicationsSectionDischargeMedication SummaryOfCareRecordmu2consolHospitalDischargeMedicationsSectionMedicationActivity SummaryOfCareRecordmu2consolAllergiesSectionEntriesOptionalAllergyProblemAct SummaryOfCareRecordmu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_FPG7deHMEeG708usbCxwpw" base_Generalization="_gl-h7OBLEeGJ4fCWX8h3-g"/>
  <Ecore:EClass xmi:id="_FPIJkOHMEeG708usbCxwpw" base_Class="_gl-h4OBLEeGJ4fCWX8h3-g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VDTAmbulatoryPatientInfoTemplateId VDTAmbulatoryPatientInfoCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection VDTAmbulatoryPatientInfoMu2EncounterDiagnosesRequirements VDTAmbulatoryPatientInfoCanHaveEitherRequiredOrOptionalVitalSignsSection VDTAmbulatoryPatientInfoMedicationListConstraint' templateId.root='2.16.840.1.113883.11.11.11.1.3'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_FPWzEOHMEeG708usbCxwpw" base_Generalization="_3PoPXOBLEeGJ4fCWX8h3-g"/>
  <Ecore:EClass xmi:id="_FPXaIOHMEeG708usbCxwpw" base_Class="_3PoPUOBLEeGJ4fCWX8h3-g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CreateTransmitSummaryOfCareRecordTemplateId CreateTransmitSummaryOfCareRecordCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection CreateTransmitSummaryOfCareRecordMu2EncounterDiagnosesRequirements CreateTransmitSummaryOfCareRecordCanHaveEitherRequiredOrOptionalVitalSignsSection CreateTransmitSummaryOfCareRecordMedicationListConstraint' templateId.root='2.16.840.1.113883.11.11.11.1.2'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_FPk1gOHMEeG708usbCxwpw" base_Generalization="_Gaq2LOBMEeGJ4fCWX8h3-g"/>
  <Ecore:EClass xmi:id="_FPlckOHMEeG708usbCxwpw" base_Class="_Gaq2IOBMEeGJ4fCWX8h3-g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VDTInpatientPatientInfoTemplateId VDTInpatientPatientInfoCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection VDTInpatientPatientInfoMu2EncounterDiagnosesRequirements VDTInpatientPatientInfoCanHaveEitherRequiredOrOptionalVitalSignsSection VDTInpatientPatientInfoMedicationListConstraint' templateId.root='2.16.840.1.113883.11.11.11.1.4'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_FP2iUOHMEeG708usbCxwpw" base_Generalization="_VyD27OBMEeGJ4fCWX8h3-g"/>
  <Ecore:EClass xmi:id="_FP3JYOHMEeG708usbCxwpw" base_Class="_VyD24OBMEeGJ4fCWX8h3-g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ClinicalOfficeVisitSummaryTemplateId ClinicalOfficeVisitSummaryCannotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection ClinicalOfficeVisitSummaryMu2EncounterDiagnosesRequirements ClinicalOfficeVisitSummaryCanHaveEitherRequiredOrOptionalVitalSignsSection ClinicalOfficeVisitSummaryMedicationListConstraint' templateId.root='2.16.840.1.113883.11.11.11.1.5'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_FQGZ8OHMEeG708usbCxwpw" base_Class="_svnagODKEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPlanOfCareSectionPlanOfCareActivityAct mu2consolPlanOfCareSectionPlanOfCareActivityEncounter mu2consolPlanOfCareSectionPlanOfCareActivityObservation mu2consolPlanOfCareSectionCarePlanningForPlanOfCareSection mu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityAct mu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityEncounter mu2consolPlanOfCareSectionMu2consolPlanOfCareSectionPlanOfCareActivityObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_FQNusOHMEeG708usbCxwpw" base_Class="_CaN5MODgEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAssessmentSectionProblemObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_FQRZEOHMEeG708usbCxwpw" base_Class="_ZK4bUODlEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolInstructionsSectionInstructions'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_FQTOQOHMEeG708usbCxwpw" base_Class="_gl8CMODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_FQVDcOHMEeG708usbCxwpw" base_Class="_qgJokODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_FQW4oOHMEeG708usbCxwpw" base_Class="_y1mQkODmEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPostoperativeDiagnosisSectionProblemObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_FQYGwOHMEeG708usbCxwpw" base_Class="_uvXlkODnEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPostprocedureDiagnosisSectionPostprocedureDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_FQZ78OHMEeG708usbCxwpw" base_Class="_0cENMODoEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolEncountersSectionEncounterActivities'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_FQbxIOHMEeG708usbCxwpw" base_Class="_bRRt0ODqEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolPreoperativeDiagnosisSectionPreoperativeDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_FQdmUOHMEeG708usbCxwpw" base_Class="_3poqgODqEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolMedicationsAdministeredSectionMedicationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_FQfbgOHMEeG708usbCxwpw" base_Class="_HBzuYODrEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication mu2consolHospitalAdmissionMedicationsSectionEntriesOptionalMedicationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_FQie0OHMEeG708usbCxwpw" base_Class="_dyyy4ODrEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolHospitalDischargeMedicationsSectionDischargeMedication mu2consolHospitalDischargeMedicationsSectionMedicationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_FQliIOHMEeG708usbCxwpw" base_Class="_szTFwOF8EeGlJOFzBdwM6w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='mu2consolAllergiesSectionEntriesOptionalAllergyProblemAct'</annotation>
  </Ecore:EClass>
</xmi:XMI>
