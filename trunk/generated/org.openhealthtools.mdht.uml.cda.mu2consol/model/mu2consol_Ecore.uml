<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_mZtsINd5EeGtNLA6W-IQeQ" name="mu2consol">
    <packageImport xmi:id="_mdYrMtd5EeGtNLA6W-IQeQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.mu2consol.model/model/mu2consol-vocab.uml#_mZ-K0Nd5EeGtNLA6W-IQeQ"/>
    </packageImport>
    <packageImport xmi:id="_HE5v4Ng-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packageImport xmi:id="_qktQYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_sCPlYNg-EeGYvcM4JkQjgQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_v-6qsNkMEeGsqcJR8eqiMw" name="GeneralHeaderConstraints">
      <ownedComment xmi:id="_BHY70OMDEeGwErp-HM3_kQ">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_WjyuwRSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WjyuwhSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkD0gBSiEeKjSbwTpEIuCw" name="Mu2consolGeneralHeaderConstraintsRecordTarget" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkD0gRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.recordTarget->exists(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkIF8BSiEeKjSbwTpEIuCw" name="Mu2consolGeneralHeaderConstraintsDocumentationOf" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkIF8RSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmdoQBSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmdoQRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((languageCode.oclIsUndefined() or languageCode.isNullFlavorUndefined()) implies (not languageCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmePUBSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmePURSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((languageCode.oclIsUndefined() or languageCode.isNullFlavorUndefined()) implies (not languageCode.oclIsUndefined() and languageCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = languageCode.oclAsType(datatypes::CS) in &#xD;&#xA;value.code = 'aar' or value.code = 'abk' or value.code = 'afr' or value.code = 'aka' or value.code = 'sqi' or value.code = 'amh' or value.code = 'ara' or value.code = 'arg' or value.code = 'hye' or value.code = 'asm' or value.code = 'ava' or value.code = 'ave' or value.code = 'aym' or value.code = 'aze' or value.code = 'bak' or value.code = 'bam' or value.code = 'eus' or value.code = 'bel' or value.code = 'ben' or value.code = 'bih' or value.code = 'bis' or value.code = 'bod' or value.code = 'bos' or value.code = 'bre' or value.code = 'bul' or value.code = 'mya' or value.code = 'cat' or value.code = 'ces' or value.code = 'cha' or value.code = 'che' or value.code = 'zho' or value.code = 'chu' or value.code = 'chv' or value.code = 'cor' or value.code = 'cos' or value.code = 'cre' or value.code = 'cym' or value.code = 'dan' or value.code = 'deu' or value.code = 'div' or value.code = 'nld' or value.code = 'dzo' or value.code = 'ell' or value.code = 'eng' or value.code = 'epo' or value.code = 'est' or value.code = 'ewe' or value.code = 'fao' or value.code = 'fas' or value.code = 'fij' or value.code = 'fin' or value.code = 'fra' or value.code = 'fry' or value.code = 'ful' or value.code = 'kat' or value.code = 'ger' or value.code = 'gla' or value.code = 'gle' or value.code = 'glg' or value.code = 'glv' or value.code = 'grn' or value.code = 'guj' or value.code = 'hat' or value.code = 'hau' or value.code = 'heb' or value.code = 'her' or value.code = 'hin' or value.code = 'hmo' or value.code = 'hrv' or value.code = 'hun' or value.code = 'ibo' or value.code = 'isl' or value.code = 'ido' or value.code = 'iii' or value.code = 'iku' or value.code = 'ile' or value.code = 'ina' or value.code = 'ind' or value.code = 'ipk' or value.code = 'ita' or value.code = 'jav' or value.code = 'jpn' or value.code = 'kal' or value.code = 'kan' or value.code = 'kas' or value.code = 'kau' or value.code = 'kaz' or value.code = 'khm' or value.code = 'kik' or value.code = 'kin' or value.code = 'kir' or value.code = 'kom' or value.code = 'kon' or value.code = 'kor' or value.code = 'kua' or value.code = 'kur' or value.code = 'lao' or value.code = 'lat' or value.code = 'lav' or value.code = 'lim' or value.code = 'lin' or value.code = 'lit' or value.code = 'ltz' or value.code = 'lub' or value.code = 'lug' or value.code = 'mkd' or value.code = 'mah' or value.code = 'mal' or value.code = 'mri' or value.code = 'mar' or value.code = 'msa' or value.code = 'mlg' or value.code = 'mlt' or value.code = 'mon' or value.code = 'nau' or value.code = 'nav' or value.code = 'nbl' or value.code = 'nde' or value.code = 'ndo' or value.code = 'nep' or value.code = 'nno' or value.code = 'nob' or value.code = 'nor' or value.code = 'nya' or value.code = 'oci' or value.code = 'oji' or value.code = 'ori' or value.code = 'orm' or value.code = 'oss' or value.code = 'pan' or value.code = 'pli' or value.code = 'pol' or value.code = 'por' or value.code = 'pus' or value.code = 'que' or value.code = 'roh' or value.code = 'ron' or value.code = 'run' or value.code = 'rus' or value.code = 'sag' or value.code = 'san' or value.code = 'sin' or value.code = 'slk' or value.code = 'slv' or value.code = 'sme' or value.code = 'smo' or value.code = 'sna' or value.code = 'snd' or value.code = 'som' or value.code = 'sot' or value.code = 'spa' or value.code = 'srd' or value.code = 'srp' or value.code = 'ssw' or value.code = 'sun' or value.code = 'swa' or value.code = 'swe' or value.code = 'tah' or value.code = 'tam' or value.code = 'tat' or value.code = 'tel' or value.code = 'tgk' or value.code = 'tgl' or value.code = 'tha' or value.code = 'tir' or value.code = 'ton' or value.code = 'tsn' or value.code = 'tso' or value.code = 'tuk' or value.code = 'tur' or value.code = 'twi' or value.code = 'uig' or value.code = 'ukr' or value.code = 'urd' or value.code = 'uzb' or value.code = 'ven' or value.code = 'vie' or value.code = 'vol' or value.code = 'wln' or value.code = 'wol' or value.code = 'xho' or value.code = 'yid' or value.code = 'yor' or value.code = 'zha' or value.code = 'zul'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmePUhSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wme2YBSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined() and ethnicGroupCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = ethnicGroupCode.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.238' and (value.code = '2135-2' or value.code = '2186-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wme2YRSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wme2YhSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wme2YxSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmfdcBSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined() and raceCode.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = raceCode.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.238' and (value.code = '1002-5' or value.code = '2028-9' or value.code = '2076-8' or value.code = '2106-3' or value.code = '2054-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmfdcRSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmfdchSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmfdcxSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmgEgBSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(languageCommunication->one(languageCommunication : cda::LanguageCommunication | not languageCommunication.oclIsUndefined() and languageCommunication.oclIsKindOf(cda::LanguageCommunication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmgEgRSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsRecordTargetPatientRolePatient" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmgEghSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject(patient->one(patient : cda::Patient | not patient.oclIsUndefined() and patient.oclIsKindOf(cda::Patient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmgrkBSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsRecordTargetPatientRole" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmgrkRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null)->reject(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmjH0BSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmjH0RSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(rim::Entity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wmju4BSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wmju4RSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wmju4hSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wmju4xSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmkV8BSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsDocumentationOfServiceEvent" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmkV8RSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmlkEBSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsComponent1EncompassingEncounterEncounterParticipant" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmlkERSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->exists(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmmLIBSiEeKjSbwTpEIuCw" name="GeneralHeaderConstraintsComponent1EncompassingEncounter" constrainedElement="_v-6qsNkMEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmmLIRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_v-6qsdkMEeGsqcJR8eqiMw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_CynbYAq_EeK-rsV_B2slTA" name="retrieveHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_HAgYIAq_EeK-rsV_B2slTA">
        <ownedRule xmi:id="_HAgYIAq_EeK-rsV_B2slTA" name="body" constrainedElement="_CynbYAq_EeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_KS0dcAq_EeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_SinwcAq_EeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidQhSVEeGGzu7fmW9pXw"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VG3DUNkxEeGsqcJR8eqiMw" name="SummaryOfCareRecord">
      <ownedComment xmi:id="_OaVzYNpiEeGzu8-aAsCS4g">
        <body>Summary Of Care Record</body>
      </ownedComment>
      <ownedRule xmi:id="_gfm_8OvXEeGkopdZmUN1Xw" name="SummaryOfCareRecordCarePlanning" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jopNcOvXEeGkopdZmUN1Xw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_0v2AIARbEeKNWa1y_3e0dw" name="SummaryOfCareRecordCognitiveStatusEntries" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <ownedComment xmi:id="_8qlCEARbEeKNWa1y_3e0dw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_7Dtx8ARbEeKNWa1y_3e0dw">
          <language>OCL</language>
          <body>self.retrieveFunctionalStatusSection()->excluding(null)->reject( retrieveFunctionalStatusSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::CognitiveStatusProblemObservation)) or retrieveFunctionalStatusSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::CognitiveStatusResultObservation)) or retrieveFunctionalStatusSection().getOrganizers()->exists(org : cda::Organizer | org.oclIsKindOf(consol::CognitiveStatusResultOrganizer)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2PJgoARkEeKNWa1y_3e0dw" name="SummaryOfCareRecordFunctionalStatusEntries" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <ownedComment xmi:id="_7gT4QARkEeKNWa1y_3e0dw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_50jhEARkEeKNWa1y_3e0dw">
          <language>OCL</language>
          <body>self.retrieveFunctionalStatusSection()->excluding(null)->reject( retrieveFunctionalStatusSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::FunctionalStatusProblemObservation)) or retrieveFunctionalStatusSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::FunctionalStatusResultObservation)) or retrieveFunctionalStatusSection().getOrganizers()->exists(org : cda::Organizer | org.oclIsKindOf(consol::FunctionalStatusResultOrganizer)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkJ7IBSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordPlanOfCareSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkJ7IRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkMXYxSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordProblemSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkMXZBSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkOMkBSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordAllergiesSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkOMkRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkQo0hSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordImmunizationsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkQo0xSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkR29BSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordMedicationsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkR29RSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkTsIBSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordSocialHistorySection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkTsIRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkU6QBSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordResultsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkU6QRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkWvcBSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordVitalSignsSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkWvcRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkYkoBSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordProceduresSection" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkYkoRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmyYYBSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordSocialHistorySectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmyYYRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmyYYhSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordMu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmyYYxSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(mu2consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmzmgBSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordMu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmzmgRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmzmghSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmzmgxSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmzmhBSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordPlanOfCareSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmzmhRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm00oBSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordAssessmentAndPlanSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm00oRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAssessmentAndPlanSection()->excluding(null)->reject(getAssessmentAndPlanSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm1bsBSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordAssessmentSectionTemplateId" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm1bsRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAssessmentSection()->excluding(null)->reject(getAssessmentSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.8'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm2CwBSiEeKjSbwTpEIuCw" name="SummaryOfCareRecordMu2consolAssessmentSectionProblemObservation" constrainedElement="_VG3DUNkxEeGsqcJR8eqiMw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm2CwRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAssessmentSection()->excluding(null)->reject(getAssessmentSection().entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VG3qYNkxEeGsqcJR8eqiMw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_P7O_8ARHEeKNWa1y_3e0dw" name="retrieveFunctionalStatusSection" isQuery="true" bodyCondition="_XgorEARHEeKNWa1y_3e0dw">
        <ownedRule xmi:id="_XgorEARHEeKNWa1y_3e0dw" name="body" constrainedElement="_P7O_8ARHEeKNWa1y_3e0dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_bjD-sARHEeKNWa1y_3e0dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->any(true).oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_33h54ARHEeKNWa1y_3e0dw" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KKOBhSVEeGGzu7fmW9pXw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YKGVUArKEeK-rsV_B2slTA" name="retrieveHospitalDischargeDiagnosisSection" isQuery="true" bodyCondition="_jkk0kArKEeK-rsV_B2slTA">
        <ownedRule xmi:id="_jkk0kArKEeK-rsV_B2slTA" name="body" constrainedElement="_YKGVUArKEeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kX5u8ArKEeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nlDncArKEeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidURSVEeGGzu7fmW9pXw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_QRe90ArLEeK-rsV_B2slTA" name="retrievePostoperativeDiagnosisSection" isQuery="true" bodyCondition="_xSW9wArLEeK-rsV_B2slTA">
        <ownedRule xmi:id="_xSW9wArLEeK-rsV_B2slTA" name="body" constrainedElement="_QRe90ArLEeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_xyWFYArLEeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PostoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_22q64ArLEeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_7UA-4DVyEeGaW4kr-GbV8Q"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KfNnwArMEeK-rsV_B2slTA" name="retrievePostprocedureDiagnosisSection" isQuery="true" bodyCondition="_PIKI0ArMEeK-rsV_B2slTA">
        <ownedRule xmi:id="_PIKI0ArMEeK-rsV_B2slTA" name="body" constrainedElement="_KfNnwArMEeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_TIM20ArMEeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostprocedureDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_NFY_0ArMEeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_-jlSMDVyEeGaW4kr-GbV8Q"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkJUEBSiEeKjSbwTpEIuCw" name="getEncountersSection" isQuery="true" bodyCondition="_WkJUExSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkJUExSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkJUEBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkJUFBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::EncountersSection))->asSequence()->any(true).oclAsType(mu2consol::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkJUERSiEeKjSbwTpEIuCw" type="_9AQcQAKcEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkJUEhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkKiMBSiEeKjSbwTpEIuCw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_WkKiMxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkKiMxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkKiMBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkKiNBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkKiMRSiEeKjSbwTpEIuCw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkKiMhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkLJQBSiEeKjSbwTpEIuCw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_WkLJQxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkLJQxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkLJQBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkLJRBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkLJQRSiEeKjSbwTpEIuCw" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkLJQhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkLwUBSiEeKjSbwTpEIuCw" name="getAssessmentSection" isQuery="true" bodyCondition="_WkLwUxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkLwUxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkLwUBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkLwVBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkLwURSiEeKjSbwTpEIuCw" type="_CaN5MODgEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkLwUhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkLwVRSiEeKjSbwTpEIuCw" name="getPostoperativeDiagnosisSection" isQuery="true" bodyCondition="_WkMXYRSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkMXYRSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkLwVRSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkMXYhSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PostoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkLwVhSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_7UA-4DVyEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkMXYBSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkNlgBSiEeKjSbwTpEIuCw" name="getProblemSection" isQuery="true" bodyCondition="_WkNlgxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkNlgxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkNlgBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkNlhBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkNlgRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkNlghSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkPasBSiEeKjSbwTpEIuCw" name="getAllergiesSection" isQuery="true" bodyCondition="_WkPasxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkPasxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkPasBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkPatBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkPasRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkPashSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkQBwBSiEeKjSbwTpEIuCw" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_WkQBwxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkQBwxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkQBwBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkQBxBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkQBwRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PQJcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkQBwhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkQBxRSiEeKjSbwTpEIuCw" name="getPreoperativeDiagnosisSection" isQuery="true" bodyCondition="_WkQo0BSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkQo0BSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkQBxRSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkQo0RSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkQBxhSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Cu6qMDVzEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkQBxxSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkRP4BSiEeKjSbwTpEIuCw" name="getImmunizationsSection" isQuery="true" bodyCondition="_WkR28hSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkR28hSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkRP4BSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkR28xSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkR28BSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkR28RSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkTFEBSiEeKjSbwTpEIuCw" name="getMedicationsSection" isQuery="true" bodyCondition="_WkTFExSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkTFExSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkTFEBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkTFFBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkTFERSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkTFEhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkUTMBSiEeKjSbwTpEIuCw" name="getSocialHistorySection" isQuery="true" bodyCondition="_WkUTMxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkUTMxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkUTMBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkUTNBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkUTMRSiEeKjSbwTpEIuCw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkUTMhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkWIYBSiEeKjSbwTpEIuCw" name="getResultsSection" isQuery="true" bodyCondition="_WkWIYxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkWIYxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkWIYBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkWIZBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ResultsSection))->asSequence()->any(true).oclAsType(mu2consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkWIYRSiEeKjSbwTpEIuCw" type="_R5ZkQAJvEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkWIYhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkX9kBSiEeKjSbwTpEIuCw" name="getVitalSignsSection" isQuery="true" bodyCondition="_WkX9kxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkX9kxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkX9kBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkX9lBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkX9kRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkX9khSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkZywBSiEeKjSbwTpEIuCw" name="getProceduresSection" isQuery="true" bodyCondition="_WkZywxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkZywxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkZywBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkZyxBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ProceduresSection))->asSequence()->any(true).oclAsType(mu2consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkZywRSiEeKjSbwTpEIuCw" type="_oJZzEAKlEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkZywhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkaZ0BSiEeKjSbwTpEIuCw" name="getPostprocedureDiagnosisSection" isQuery="true" bodyCondition="_WkaZ0xSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkaZ0xSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkaZ0BSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkaZ1BSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostprocedureDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkaZ0RSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_-jlSMDVyEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkaZ0hSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WmZ94BSiEeKjSbwTpEIuCw" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_WmZ94xSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WmZ94xSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WmZ94BSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmZ95BSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->any(true).oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WmZ94RSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2KKOBhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WmZ94hSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_svnagODKEeGdSJSga09Dyg" name="PlanOfCareSection">
      <ownedComment xmi:id="_wajPYOFzEeGlJOFzBdwM6w">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_j1rcwOF3EeGlJOFzBdwM6w" name="Mu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qaLEgOF3EeGlJOFzBdwM6w">
          <language>OCL</language>
          <body>self.getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or self.getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or self.getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkcPABSiEeKjSbwTpEIuCw" name="Mu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkcPARSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkfSUBSiEeKjSbwTpEIuCw" name="PlanOfCareSectionTemplateId" constrainedElement="_svnagODKEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkfSURSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vqugwODKEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NP-QxSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_WkbA4BSiEeKjSbwTpEIuCw" name="getMu2consolPlanOfCareActivityActs" isQuery="true" bodyCondition="_WkbA4xSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkbA4xSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkbA4BSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkbA5BSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlanOfCareActivityAct)).oclAsType(consol::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkbA4RSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWE5xSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkbA4hSiEeKjSbwTpEIuCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wkbn8BSiEeKjSbwTpEIuCw" name="getMu2consolPlanOfCareActivityEncounters" isQuery="true" bodyCondition="_Wkbn8xSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wkbn8xSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wkbn8BSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wkbn9BSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter)).oclAsType(consol::PlanOfCareActivityEncounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wkbn8RSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NWFBBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wkbn8hSiEeKjSbwTpEIuCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkeEMRSiEeKjSbwTpEIuCw" name="getMu2consolPlanOfCareActivityObservations" isQuery="true" bodyCondition="_WkeENBSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkeENBSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkeEMRSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkerQBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlanOfCareActivityObservation)).oclAsType(consol::PlanOfCareActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkeEMhSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NcLjhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkeEMxSiEeKjSbwTpEIuCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CaN5MODgEeGdSJSga09Dyg" name="AssessmentSection">
      <ownedComment xmi:id="_dY-WsOGFEeG708usbCxwpw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_WkhukRSiEeKjSbwTpEIuCw" name="AssessmentSectionTemplateId" constrainedElement="_CaN5MODgEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkhukhSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkjjwBSiEeKjSbwTpEIuCw" name="Mu2consolAssessmentSectionProblemObservation" constrainedElement="_CaN5MODgEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkjjwRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D0JgkODgEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_W8pI4DszEeGvzMYhXuqAEA"/>
      </generalization>
      <ownedOperation xmi:id="_WkkK0BSiEeKjSbwTpEIuCw" name="getProblemObservation" isQuery="true" bodyCondition="_WkkK0xSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkkK0xSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkkK0BSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkkK1BSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkkK0RSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkkK0hSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_w2gYkODkEeGdSJSga09Dyg" name="AssessmentAndPlanSection">
      <ownedComment xmi:id="_jFHLgPhtEeGPm7sA61ixGw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_Wkkx4RSiEeKjSbwTpEIuCw" name="AssessmentAndPlanSectionTemplateId" constrainedElement="_w2gYkODkEeGdSJSga09Dyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wkkx4hSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ySywYODkEeGdSJSga09Dyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Rwq0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_WkmAABSiEeKjSbwTpEIuCw" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="_WkmAAxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkmAAxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkmAABSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkmABBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkmAARSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NiSKhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkmAAhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkmnEBSiEeKjSbwTpEIuCw" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="_WkmnExSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkmnExSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkmnEBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkmnFBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkmnERSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoYwxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkmnEhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WknOIBSiEeKjSbwTpEIuCw" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="_WknOIxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WknOIxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WknOIBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WknOJBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WknOIRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NoY5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WknOIhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WknOJRSiEeKjSbwTpEIuCw" name="getProblemObservation" isQuery="true" bodyCondition="_WknOKBSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WknOKBSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WknOJRSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wkn1MBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WknOJhSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_5Ha7ABUyEeGbmN_W114JUw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WknOJxSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7D0CQOzmEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummary">
      <ownedComment xmi:id="_V_Po0PhqEeGPm7sA61ixGw">
        <body>MU2 170.314(e)(2) Clinical Summary</body>
      </ownedComment>
      <ownedRule xmi:id="_F7KU8O1YEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryResponsibleParty" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_HLw1oO1iEeGT-eFu7Ghgjw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ke17gO1YEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;&#xA;cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kNHwMO1bEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryReasonForOfficeVisit" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_miJt4O1bEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_CFE3YO1cEeGT-eFu7Ghgjw" name="ClinicalOfficeVisitSummaryCarePlanning" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_DrZ8AO1cEeGT-eFu7Ghgjw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fRfCgPhlEeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryEffectiveTime" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_fRfCgfhlEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fRfCgvhlEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or &#xD;&#xD;&#xA;effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_8kY74PhlEeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryLocation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_BORREPhmEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-WWowPhlEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | &#xD;&#xD;&#xA;not location.oclIsUndefined() and location.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1Y4aoPhpEeGPm7sA61ixGw" name="ClinicalOfficeVisitSummaryPlanOfCareActOrEncounter" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_6FsIAPhpEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_5W3TIPhpEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.retrievePlanOfCareSection()->excluding(null)->reject(retrievePlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or retrievePlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WhtMwAveEeK-rsV_B2slTA" name="ClinicalOfficeVisitSummaryInstructionsEntry" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_ZP-J0AveEeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cahaQAveEeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrieveInstructionsSection()->excluding(null)->reject(retrieveInstructionsSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::Instructions)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iaMBMAvfEeK-rsV_B2slTA" name="ClinicalOfficeVisitSummaryMedicationsAdministeredEntry" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <ownedComment xmi:id="_nOnZgAvfEeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_moYf8AvfEeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrieveMedicationsAdministeredSection()->excluding(null)->reject(retrieveMedicationsAdministeredSection().getSubstanceAdministrations()->exists(sa : cda::SubstanceAdministration | sa.oclIsKindOf(consol::MedicationActivity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WktUwBSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryProblemSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WktUwRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkxmMBSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryMedicationsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkxmMRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wky0UBSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryAllergiesSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wky0URSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wk0pgBSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryResultsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk0pgRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wk13oBSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryVitalSignsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk13oRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wk3s0BSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryPlanOfCareSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk3s0RSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wk5iABSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryProceduresSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk5iARSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wk6wIBSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryImmunizationsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk6wIRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wk8lUBSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryMedicationsAdministeredSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk8lURSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WlBd0BSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryInstructionsSection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlBd0RSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WlwdoBSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummarySocialHistorySection" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlwdoRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm338BSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryMu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm338RSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm338hSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm338xSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm339BSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryPlanOfCareSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm339RSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm5GEBSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryAssessmentAndPlanSectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm5GERSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAssessmentAndPlanSection()->excluding(null)->reject(getAssessmentAndPlanSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm6UMBSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummarySocialHistorySectionTemplateId" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm6UMRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm6UMhSiEeKjSbwTpEIuCw" name="ClinicalOfficeVisitSummaryMu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_7D0CQOzmEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm6UMxSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(mu2consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7D0pUOzmEeGT-eFu7Ghgjw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_viwLAP0aEeGlaomQ_EyHlg" name="retrievePlanOfCareSection" isQuery="true" bodyCondition="_F6QYgP0bEeGlaomQ_EyHlg">
        <ownedRule xmi:id="_F6QYgP0bEeGlaomQ_EyHlg" name="body" constrainedElement="_viwLAP0aEeGlaomQ_EyHlg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_IoybUP0bEeGlaomQ_EyHlg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_9Ec1cP0aEeGlaomQ_EyHlg" name="" type="_svnagODKEeGdSJSga09Dyg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_NZ56wAveEeK-rsV_B2slTA" name="retrieveInstructionsSection" isQuery="true" bodyCondition="_PG1WoAveEeK-rsV_B2slTA">
        <ownedRule xmi:id="_PG1WoAveEeK-rsV_B2slTA" name="body" constrainedElement="_NZ56wAveEeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Q2CqcAveEeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))->asSequence()->any(true).oclAsType(consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_SmQq4AveEeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ZxyoAAvfEeK-rsV_B2slTA" name="retrieveMedicationsAdministeredSection" isQuery="true" bodyCondition="_cokn4AvfEeK-rsV_B2slTA">
        <ownedRule xmi:id="_cokn4AvfEeK-rsV_B2slTA" name="body" constrainedElement="_ZxyoAAvfEeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_efGrsAvfEeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_fMrjYAvfEeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj_BSVEeGGzu7fmW9pXw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wkui4BSiEeKjSbwTpEIuCw" name="getProblemSection" isQuery="true" bodyCondition="_Wkui4xSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wkui4xSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wkui4BSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wkui5BSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wkui4RSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wkui4hSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WkyNQBSiEeKjSbwTpEIuCw" name="getMedicationsSection" isQuery="true" bodyCondition="_WkyNQxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WkyNQxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WkyNQBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkyNRBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WkyNQRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkyNQhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wk0CcBSiEeKjSbwTpEIuCw" name="getAllergiesSection" isQuery="true" bodyCondition="_Wk0CcxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wk0CcxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wk0CcBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk0CdBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wk0CcRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wk0CchSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wk1QkBSiEeKjSbwTpEIuCw" name="getResultsSection" isQuery="true" bodyCondition="_Wk1QkxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wk1QkxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wk1QkBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk1QlBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ResultsSection))->asSequence()->any(true).oclAsType(mu2consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wk1QkRSiEeKjSbwTpEIuCw" type="_R5ZkQAJvEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wk1QkhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wk3FwBSiEeKjSbwTpEIuCw" name="getVitalSignsSection" isQuery="true" bodyCondition="_Wk3FwxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wk3FwxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wk3FwBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk3FxBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wk3FwRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wk3FwhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wk468BSiEeKjSbwTpEIuCw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_Wk468xSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wk468xSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wk468BSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk469BSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wk468RSiEeKjSbwTpEIuCw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wk468hSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wk6JEBSiEeKjSbwTpEIuCw" name="getProceduresSection" isQuery="true" bodyCondition="_Wk6JExSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wk6JExSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wk6JEBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk6JFBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ProceduresSection))->asSequence()->any(true).oclAsType(mu2consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wk6JERSiEeKjSbwTpEIuCw" type="_oJZzEAKlEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wk6JEhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wk7-QBSiEeKjSbwTpEIuCw" name="getImmunizationsSection" isQuery="true" bodyCondition="_Wk7-QxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wk7-QxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wk7-QBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk7-RBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wk7-QRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2L7voBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wk7-QhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wk9zcBSiEeKjSbwTpEIuCw" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_Wk-agBSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wk-agBSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wk9zcBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk-agRSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wk9zcRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj_BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wk9zchSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wk_BkBSiEeKjSbwTpEIuCw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_Wk_BkxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wk_BkxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wk_BkBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk_BlBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wk_BkRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wk_BkhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wk_ooBSiEeKjSbwTpEIuCw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_Wk_ooxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wk_ooxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wk_ooBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wk_opBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wk_ooRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wk_oohSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WlAPsBSiEeKjSbwTpEIuCw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_WlAPsxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WlAPsxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WlAPsBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlA2wBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WlAPsRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlAPshSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WlA2wRSiEeKjSbwTpEIuCw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_WlA2xBSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WlA2xBSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WlA2wRSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlA2xRSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WlA2whSiEeKjSbwTpEIuCw" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlA2wxSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WlCr8BSiEeKjSbwTpEIuCw" name="getInstructionsSection" isQuery="true" bodyCondition="_WlCr8xSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WlCr8xSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WlCr8BSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlCr9BSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))->asSequence()->any(true).oclAsType(consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WlCr8RSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_4qKukEE1EeGdmoWy_aLP0Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlCr8hSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WlxEsBSiEeKjSbwTpEIuCw" name="getSocialHistorySection" isQuery="true" bodyCondition="_WlxEsxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WlxEsxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WlxEsBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlxEtBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WlxEsRSiEeKjSbwTpEIuCw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlxEshSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9frdwO1UEeGT-eFu7Ghgjw" name="SocialHistorySection">
      <ownedComment xmi:id="_GBqF4O1VEeGT-eFu7Ghgjw">
        <body>INLINE</body>
      </ownedComment>
      <ownedRule xmi:id="_WkvJ8BSiEeKjSbwTpEIuCw" name="SocialHistorySectionTemplateId" constrainedElement="_9frdwO1UEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkvJ8RSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WkwYEBSiEeKjSbwTpEIuCw" name="Mu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_9frdwO1UEeGT-eFu7Ghgjw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WkwYERSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(mu2consol::SmokingStatusObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-2YyAO1UEeGT-eFu7Ghgjw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JKvgBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_Wkw_IBSiEeKjSbwTpEIuCw" name="getMu2consolSmokingStatusObservations" isQuery="true" bodyCondition="_Wkw_IxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wkw_IxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wkw_IBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wkw_JBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(mu2consol::SmokingStatusObservation)).oclAsType(mu2consol::SmokingStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wkw_IRSiEeKjSbwTpEIuCw" type="_xbrkwPwYEeGx4ophOjh2tw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wkw_IhSiEeKjSbwTpEIuCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UGcMgPabEeGi99B_x568TQ" name="TransitionOfCareAmbulatorySummary">
      <ownedComment xmi:id="_ottgoPhKEeGQQ6aVp7opYg">
        <body>MU2 170.314(b)(2) Transition of Care/Referral Summary - For Ambulatory Care&#xD;
MU2 170.314(b)(7) Export Summary  - For Ambulatory Care</body>
      </ownedComment>
      <ownedRule xmi:id="_vSLf0PdxEeG_npP0e3OOEw" name="TransitionOfCareAmbulatorySummaryResponsibleParty" constrainedElement="_UGcMgPabEeGi99B_x568TQ">
        <ownedComment xmi:id="_BaqaQPeVEeG_npP0e3OOEw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_z3eP8PdxEeG_npP0e3OOEw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ujInEAQrEeKNWa1y_3e0dw" name="TransitionOfCareAmbulatorySummaryAmbulatoryEncounterDiagnoses" constrainedElement="_UGcMgPabEeGi99B_x568TQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_yMSfEAQrEeKNWa1y_3e0dw">
          <language>OCL</language>
          <body>( self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostoperativeDiagnosisSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostprocedureDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::EncountersSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WlD6EBSiEeKjSbwTpEIuCw" name="TransitionOfCareAmbulatorySummaryReasonForReferralSection" constrainedElement="_UGcMgPabEeGi99B_x568TQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlD6ERSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WN-gwPabEeGi99B_x568TQ" general="_VG3DUNkxEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_WlFIMBSiEeKjSbwTpEIuCw" name="getReasonForReferralSection" isQuery="true" bodyCondition="_WlFIMxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WlFIMxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WlFIMBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlFINBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))->asSequence()->any(true).oclAsType(consol::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WlFIMRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQFxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlFIMhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uu2T0PdyEeG_npP0e3OOEw" name="TransitionOfCareInpatientSummary">
      <ownedComment xmi:id="_rczkIPhKEeGQQ6aVp7opYg">
        <body>MU2 170.314(b)(2) Transition of Care/Referral Summary - For Inpatient Care&#xD;
MU2 170.314(b)(7) Export Summary  - For Inpatient Care</body>
      </ownedComment>
      <ownedRule xmi:id="_jVFaQAQrEeKNWa1y_3e0dw" name="TransitionOfCareInpatientSummaryInpatientEncounterDiagnoses" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m3iNUAQrEeKNWa1y_3e0dw">
          <language>OCL</language>
          <body>( self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::ProblemSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostoperativeDiagnosisSection)) or  &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::PostprocedureDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::EncountersSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalAdmissionDiagnosisSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(consol::HospitalDischargeDiagnosisSection)) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_UuuwwArBEeK-rsV_B2slTA" name="TransitionOfCareInpatientSummaryHospitalAdmissionDiagnosisEntry" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <ownedComment xmi:id="_YT3EYArBEeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6eUAArBEeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrieveHospitalAdmissionDiagnosisSection()->excluding(null)->reject(retrieveHospitalAdmissionDiagnosisSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_T92FgAu1EeK-rsV_B2slTA" name="TransitionOfCareInpatientSummaryHospitalDischargeDiagnosesEntry" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <ownedComment xmi:id="_ZzaKsAu1EeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-Zw4Au1EeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrieveHospitalDischargeDiagnosisSection()->excluding(null)->reject(retrieveHospitalDischargeDiagnosisSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::HospitalDischargeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_301W8Au1EeK-rsV_B2slTA" name="TransitionOfCareInpatientSummaryPostoperativeDiagnosisEntry" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <ownedComment xmi:id="_8GMecAu1EeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_62S80Au1EeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrievePostoperativeDiagnosisSection()->excluding(null)->reject(retrievePostoperativeDiagnosisSection().getObservations()->exists(a : cda::Observation | a.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_JujKgAu2EeK-rsV_B2slTA" name="TransitionOfCareInpatientSummaryPostprocedureDiagnosisEntry" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <ownedComment xmi:id="_PLUVMAu2EeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_NbXagAu2EeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrievePostprocedureDiagnosisSection()->excluding(null)->reject(retrievePostprocedureDiagnosisSection().getObservations()->exists(a : cda::Observation | a.oclIsKindOf(consol::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WlNEABSiEeKjSbwTpEIuCw" name="TransitionOfCareInpatientSummaryHospitalDischargeInstructionsSection" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlNEARSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmVsdBSiEeKjSbwTpEIuCw" name="TransitionOfCareInpatientSummaryHospitalDischargeMedicationsSection" constrainedElement="_uu2T0PdyEeG_npP0e3OOEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmWTgBSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vutOUPdyEeG_npP0e3OOEw" general="_VG3DUNkxEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_WlO5MBSiEeKjSbwTpEIuCw" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_WlO5MxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WlO5MxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WlO5MBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlO5NBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WlO5MRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlO5MhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WmW6kBSiEeKjSbwTpEIuCw" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_WmW6kxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WmW6kxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WmW6kBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmW6lBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WmW6kRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WmW6khSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WmYvxRSiEeKjSbwTpEIuCw" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_WmZW0hSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WmZW0hSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WmYvxRSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmZW0xSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WmZW0BSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidQhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WmZW0RSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WmZW1BSiEeKjSbwTpEIuCw" name="getHospitalDischargeDiagnosisSection" isQuery="true" bodyCondition="_WmZW1xSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WmZW1xSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WmZW1BSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmZW2BSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WmZW1RSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidURSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WmZW1hSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WmbMARSiEeKjSbwTpEIuCw" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_WmbMBBSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WmbMBBSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WmbMARSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmbMBRSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WmbMAhSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WmbMAxSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i2IoQPhVEeGPm7sA61ixGw" name="ViewDownloadTransmitSummary">
      <ownedRule xmi:id="_CrzxoPhcEeGPm7sA61ixGw" name="ViewDownloadTransmitSummaryCarePlanFields" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FGH38PhcEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::PlanOfCareSection)) or &#xD;&#xA;self.getAllSections()->one(s : cda::Section | not s.oclIsUndefined() and s.oclIsTypeOf(mu2consol::AssessmentAndPlanSection)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WlYDIBSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummaryAllergiesSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlYDIRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WlZRQRSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummaryMedicationsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlZRQhSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WlbGcBSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummaryProblemSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlbGcRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WldisBSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummaryProceduresSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WldisRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WlfX4BSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummaryVitalSignsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlfX4RSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WlgmARSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummaryResultsSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlgmAhSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WljCQBSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummaryPlanOfCareSection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WljCQRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wlk3cBSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummarySocialHistorySection" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wlk3cRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm8JYBSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummaryAssessmentAndPlanSectionTemplateId" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm8JYRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAssessmentAndPlanSection()->excluding(null)->reject(getAssessmentAndPlanSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm9XgBSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummaryMu2consolPlanOfCareSectionCarePlanningForPlanOfCare" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm9XgRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PlanOfCareActivityAct)) or getPlanOfCareSection().getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::PlanOfCareActivityObservation)) or getPlanOfCareSection().getEncounters()->exists(e : cda::Encounter | e.oclIsKindOf(consol::PlanOfCareActivityEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm9XghSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummaryMu2consolPlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm9XgxSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm9XhBSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummaryPlanOfCareSectionTemplateId" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm9XhRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getPlanOfCareSection()->excluding(null)->reject(getPlanOfCareSection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm-loBSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummarySocialHistorySectionTemplateId" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm-loRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wm-lohSiEeKjSbwTpEIuCw" name="ViewDownloadTransmitSummaryMu2consolSocialHistorySectionSmokingStatusObservation" constrainedElement="_i2IoQPhVEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wm-loxSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getSocialHistorySection()->excluding(null)->reject(getSocialHistorySection().entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(mu2consol::SmokingStatusObservation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kFewQPhVEeGPm7sA61ixGw" general="_v-6qsNkMEeGsqcJR8eqiMw"/>
      <ownedOperation xmi:id="_TbWkAAvXEeK-rsV_B2slTA" name="retrievePreoperativeDiagnosisSection" isQuery="true" bodyCondition="_V5Qw4AvXEeK-rsV_B2slTA">
        <ownedRule xmi:id="_V5Qw4AvXEeK-rsV_B2slTA" name="body" constrainedElement="_TbWkAAvXEeK-rsV_B2slTA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Zc4ooAvXEeK-rsV_B2slTA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_avIToAvXEeK-rsV_B2slTA" name="return" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Cu6qMDVzEeGaW4kr-GbV8Q"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WlYqMBSiEeKjSbwTpEIuCw" name="getAllergiesSection" isQuery="true" bodyCondition="_WlYqMxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WlYqMxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WlYqMBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlZRQBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WlYqMRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LMIwBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlYqMhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WlafYBSiEeKjSbwTpEIuCw" name="getMedicationsSection" isQuery="true" bodyCondition="_WlafYxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WlafYxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WlafYBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlafZBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WlafYRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlafYhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WlcUkBSiEeKjSbwTpEIuCw" name="getProblemSection" isQuery="true" bodyCondition="_WlcUkxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WlcUkxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WlcUkBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wlc7oBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WlcUkRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LSPYBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlcUkhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WleJwBSiEeKjSbwTpEIuCw" name="getProceduresSection" isQuery="true" bodyCondition="_WleJwxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WleJwxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WleJwBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WleJxBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ProceduresSection))->asSequence()->any(true).oclAsType(mu2consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WleJwRSiEeKjSbwTpEIuCw" type="_oJZzEAKlEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WleJwhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wlf-8BSiEeKjSbwTpEIuCw" name="getVitalSignsSection" isQuery="true" bodyCondition="_Wlf-8xSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wlf-8xSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wlf-8BSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlgmABSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection))->asSequence()->any(true).oclAsType(consol::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wlf-8RSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wlf-8hSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wlh0IBSiEeKjSbwTpEIuCw" name="getResultsSection" isQuery="true" bodyCondition="_Wlh0IxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wlh0IxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wlh0IBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wlh0JBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::ResultsSection))->asSequence()->any(true).oclAsType(mu2consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wlh0IRSiEeKjSbwTpEIuCw" type="_R5ZkQAJvEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wlh0IhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WlibMBSiEeKjSbwTpEIuCw" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_WlibMxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WlibMxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WlibMBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlibNBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(mu2consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WlibMRSiEeKjSbwTpEIuCw" type="_w2gYkODkEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlibMhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WlkQYBSiEeKjSbwTpEIuCw" name="getPlanOfCareSection" isQuery="true" bodyCondition="_WlkQYxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WlkQYxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WlkQYBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlkQZBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(mu2consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WlkQYRSiEeKjSbwTpEIuCw" type="_svnagODKEeGdSJSga09Dyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlkQYhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WllegBSiEeKjSbwTpEIuCw" name="getSocialHistorySection" isQuery="true" bodyCondition="_WllegxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WllegxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WllegBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WllehBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(mu2consol::SocialHistorySection))->asSequence()->any(true).oclAsType(mu2consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WllegRSiEeKjSbwTpEIuCw" type="_9frdwO1UEeGT-eFu7Ghgjw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlleghSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rsKJkPhcEeGPm7sA61ixGw" name="VDTInpatientSummary">
      <ownedComment xmi:id="_qrDxkPhfEeGPm7sA61ixGw">
        <body>MU2 170.314 (e)(1)  Inpatient Summary</body>
      </ownedComment>
      <ownedRule xmi:id="_EFIqIPheEeGPm7sA61ixGw" name="VDTInpatientSummaryEffectiveTime" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_LpyuYPheEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_IaNM8PheEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or &#xD;&#xD;&#xA;effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WH_yoPheEeGPm7sA61ixGw" name="VDTInpatientSummaryLocation" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_bra-8PheEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aLjusPheEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | &#xD;&#xD;&#xA;not location.oclIsUndefined() and location.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_GUuRsPhfEeGPm7sA61ixGw" name="VDTInpatientSummaryChiefComplaintOrReasonForVisit" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JY5NUPhfEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor &#xD;&#xA; self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tV2F4ArAEeK-rsV_B2slTA" name="VDTInpatientSummaryHospitalAdmissionDiagnosisEntry" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_5jRFAArAEeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wiyjAArAEeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrieveHospitalAdmissionDiagnosisSection()->excluding(null)->reject(retrieveHospitalAdmissionDiagnosisSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::HospitalAdmissionDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_r-lpQAvXEeK-rsV_B2slTA" name="VDTInpatientSummaryPreoperativeDiagnosisEntry" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="__Y8JIAvXEeK-rsV_B2slTA">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1qwMkAvXEeK-rsV_B2slTA">
          <language>OCL</language>
          <body>self.retrievePreoperativeDiagnosisSection()->excluding(null)->reject(retrievePreoperativeDiagnosisSection().getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::PreoperativeDiagnosis)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wlq-EBSiEeKjSbwTpEIuCw" name="VDTInpatientSummaryHospitalDischargeInstructionsSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wlq-ERSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WlszQBSiEeKjSbwTpEIuCw" name="VDTInpatientSummaryHospitalAdmissionDiagnosisSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlszQRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmXhoBSiEeKjSbwTpEIuCw" name="VDTInpatientSummaryHospitalDischargeMedicationsSection" constrainedElement="_rsKJkPhcEeGPm7sA61ixGw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmXhoRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_tK1HAPhcEeGPm7sA61ixGw" general="_i2IoQPhVEeGPm7sA61ixGw"/>
      <ownedOperation xmi:id="_WlsMMBSiEeKjSbwTpEIuCw" name="getHospitalDischargeInstructionsSection" isQuery="true" bodyCondition="_WlsMMxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WlsMMxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WlsMMBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlsMNBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WlsMMRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_lBergCUMEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlsMMhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WluBYBSiEeKjSbwTpEIuCw" name="getHospitalAdmissionDiagnosisSection" isQuery="true" bodyCondition="_WluBYxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WluBYxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WluBYBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WluBZBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WluBYRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PidQhSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WluBYhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WluocBSiEeKjSbwTpEIuCw" name="getChiefComplaintSection" isQuery="true" bodyCondition="_WluocxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WluocxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WluocBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WluodBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WluocRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2PWQCBSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WluochSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WlvPgBSiEeKjSbwTpEIuCw" name="getReasonForVisitSection" isQuery="true" bodyCondition="_WlvPgxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WlvPgxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WlvPgBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlvPhBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WlvPgRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Nm64UCscEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlvPghSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wlv2kBSiEeKjSbwTpEIuCw" name="getChiefComplaintAndReasonForVisitSection" isQuery="true" bodyCondition="_Wlv2kxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wlv2kxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wlv2kBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wlv2lBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wlv2kRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_oI7CQCsaEeGHF88-qhhUMA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wlv2khSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WmYvwBSiEeKjSbwTpEIuCw" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_WmYvwxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WmYvwxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WmYvwBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmYvxBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WmYvwRSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_TytVkCUQEeGiOPpZVnfEJA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WmYvwhSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wmak8BSiEeKjSbwTpEIuCw" name="getPreoperativeDiagnosisSection" isQuery="true" bodyCondition="_Wmak8xSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wmak8xSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wmak8BSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wmak9BSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wmak8RSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_Cu6qMDVzEeGaW4kr-GbV8Q"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wmak8hSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Wmak9RSiEeKjSbwTpEIuCw" name="getHospitalAdmissionMedicationsSectionEntriesOptional" isQuery="true" bodyCondition="_Wmak-BSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_Wmak-BSiEeKjSbwTpEIuCw" name="body" constrainedElement="_Wmak9RSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmbMABSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Wmak9hSiEeKjSbwTpEIuCw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj5BSVEeGGzu7fmW9pXw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wmak9xSiEeKjSbwTpEIuCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2FvMgPhcEeGPm7sA61ixGw" name="VDTAmbulatorySummary">
      <ownedComment xmi:id="_sjR3cPhfEeGPm7sA61ixGw">
        <body>MU2 170.314 (e)(1) Ambulatory Summary</body>
      </ownedComment>
      <ownedRule xmi:id="_-3broPhcEeGPm7sA61ixGw" name="VDTAmbulatorySummaryResponsibleParty" constrainedElement="_2FvMgPhcEeGPm7sA61ixGw">
        <ownedComment xmi:id="_B5gVgPhdEeGPm7sA61ixGw">
          <body>QUERY</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_A_BqQPhdEeGPm7sA61ixGw">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : &#xD;&#xD;&#xA;cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2j8ygPhcEeGPm7sA61ixGw" general="_i2IoQPhVEeGPm7sA61ixGw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xbrkwPwYEeGx4ophOjh2tw" name="SmokingStatusObservation">
      <ownedRule xmi:id="_WlxrwRSiEeKjSbwTpEIuCw" name="TobaccoUseTemplateId" constrainedElement="_xbrkwPwYEeGx4ophOjh2tw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WlxrwhSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.22.4.78')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wl3yYBSiEeKjSbwTpEIuCw" name="SmokingStatusObservationValueP" constrainedElement="_xbrkwPwYEeGx4ophOjh2tw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wl3yYRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wl0vEBSiEeKjSbwTpEIuCw" name="SmokingStatusObservationValue" constrainedElement="_xbrkwPwYEeGx4ophOjh2tw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wl0vERSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '449868002' or value.code = '428041000124106' or value.code = '8517006' or value.code = '266919005' or value.code = '77176002' or value.code = '266927001' or value.code = '428071000124103' or value.code = '428061000124105')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yhogMPwYEeGx4ophOjh2tw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_gIH_QOWQEeGKmvzED_He2w"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_tAOdEAJuEeKIhvHOhwsFvA" name="ResultObservation">
      <ownedRule xmi:id="_wYmuIAJuEeKIhvHOhwsFvA" name="Mu2consolResultObservationResultObservationCodeValue" constrainedElement="_tAOdEAJuEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zUi60AJuEeKIhvHOhwsFvA">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.1'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wl7cwBSiEeKjSbwTpEIuCw" name="ResultObservationTemplateId" constrainedElement="_tAOdEAJuEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wl7cwRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Wl95ABSiEeKjSbwTpEIuCw" name="Mu2consolResultObservationCode" constrainedElement="_tAOdEAJuEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Wl95ARSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.oclIsTypeOf(datatypes::CE))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_tAPEIAJuEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2J1d4BSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_--CGcAJuEeKIhvHOhwsFvA" name="ResultOrganizer">
      <ownedRule xmi:id="_Wl_uMRSiEeKjSbwTpEIuCw" name="ResultOrganizerTemplateId" constrainedElement="_--CGcAJuEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmAVQBSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmCKcBSiEeKjSbwTpEIuCw" name="Mu2consolResultOrganizerResultObservation" constrainedElement="_--CGcAJuEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmCKcRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(mu2consol::ResultObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_--CGcQJuEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2JxzgBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_WmCxgBSiEeKjSbwTpEIuCw" name="getMu2consolResultObservations" isQuery="true" bodyCondition="_WmCxgxSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WmCxgxSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WmCxgBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmCxhBSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(mu2consol::ResultObservation)).oclAsType(mu2consol::ResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WmCxgRSiEeKjSbwTpEIuCw" type="_tAOdEAJuEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WmCxghSiEeKjSbwTpEIuCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R5ZkQAJvEeKIhvHOhwsFvA" name="ResultsSection">
      <ownedRule xmi:id="_WmD_oBSiEeKjSbwTpEIuCw" name="ResultsSectionEntriesOptionalTemplateId" constrainedElement="_R5ZkQAJvEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmD_oRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.3.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmF00BSiEeKjSbwTpEIuCw" name="Mu2consolResultsSectionResultOrganizer" constrainedElement="_R5ZkQAJvEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmF00RSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(mu2consol::ResultOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_R5ZkQQJvEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Js7AxSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_WmHC8BSiEeKjSbwTpEIuCw" name="getMu2consolResultOrganizers" isQuery="true" bodyCondition="_WmHC8xSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WmHC8xSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WmHC8BSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmHC9BSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(mu2consol::ResultOrganizer)).oclAsType(mu2consol::ResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WmHC8RSiEeKjSbwTpEIuCw" type="_--CGcAJuEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WmHC8hSiEeKjSbwTpEIuCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zL3xEAKcEeKIhvHOhwsFvA" name="EncounterActivities">
      <ownedRule xmi:id="_QLlMMAKeEeKIhvHOhwsFvA" name="Mu2consolEncounterActivitiesCodeValue" constrainedElement="_zL3xEAKcEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnjxIAKeEeKIhvHOhwsFvA">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.3' xor self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmHqARSiEeKjSbwTpEIuCw" name="EncounterActivitiesTemplateId" constrainedElement="_zL3xEAKcEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmIREBSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.49')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zL4YIAKcEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LayQBSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9AQcQAKcEeKIhvHOhwsFvA" name="EncountersSection">
      <ownedRule xmi:id="_WmKGQhSiEeKjSbwTpEIuCw" name="EncountersSectionEntriesOptionalTemplateId" constrainedElement="_9AQcQAKcEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmKtUBSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.22.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmMigBSiEeKjSbwTpEIuCw" name="Mu2consolEncountersSectionEncounterActivities" constrainedElement="_9AQcQAKcEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmMigRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(mu2consol::EncounterActivities))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_9AQcQQKcEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2LWg0BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_WmNJkBSiEeKjSbwTpEIuCw" name="getMu2consolEncounterActivitiess" isQuery="true" bodyCondition="_WmNwohSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WmNwohSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WmNJkBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmNwoxSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(mu2consol::EncounterActivities)).oclAsType(mu2consol::EncounterActivities)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WmNwoBSiEeKjSbwTpEIuCw" type="_zL3xEAKcEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WmNwoRSiEeKjSbwTpEIuCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KmS6gAKlEeKIhvHOhwsFvA" name="ProcedureActivityProcedure">
      <ownedRule xmi:id="_Xm1YoAKlEeKIhvHOhwsFvA" name="Mu2consolProcedureActivityProcedureCodeValue" constrainedElement="_KmS6gAKlEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_blLdgAKlEeKIhvHOhwsFvA">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.96' xor self.code.codeSystem = '2.16.840.1.113883.6.12'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmOXsBSiEeKjSbwTpEIuCw" name="ProcedureActivityProcedureTemplateId" constrainedElement="_KmS6gAKlEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmOXsRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmQz8BSiEeKjSbwTpEIuCw" name="Mu2consolProcedureActivityProcedureCode" constrainedElement="_KmS6gAKlEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmQz8RSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.oclIsTypeOf(datatypes::CE))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KmThkAKlEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OG58RSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJZzEAKlEeKIhvHOhwsFvA" name="ProceduresSection">
      <ownedRule xmi:id="_WmTQMBSiEeKjSbwTpEIuCw" name="ProceduresSectionEntriesOptionalTemplateId" constrainedElement="_oJZzEAKlEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmTQMRSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.7.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WmUeUBSiEeKjSbwTpEIuCw" name="Mu2consolProceduresSectionProcedureActivityProcedure" constrainedElement="_oJZzEAKlEeKIhvHOhwsFvA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmUeURSiEeKjSbwTpEIuCw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(mu2consol::ProcedureActivityProcedure))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oJZzEQKlEeKIhvHOhwsFvA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OAzQRSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_WmVFYBSiEeKjSbwTpEIuCw" name="getMu2consolProcedureActivityProcedures" isQuery="true" bodyCondition="_WmVschSiEeKjSbwTpEIuCw">
        <ownedRule xmi:id="_WmVschSiEeKjSbwTpEIuCw" name="body" constrainedElement="_WmVFYBSiEeKjSbwTpEIuCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WmVscxSiEeKjSbwTpEIuCw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(mu2consol::ProcedureActivityProcedure)).oclAsType(mu2consol::ProcedureActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_WmVscBSiEeKjSbwTpEIuCw" type="_KmS6gAKlEeKIhvHOhwsFvA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WmVscRSiEeKjSbwTpEIuCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <profileApplication xmi:id="_mZtsIdd5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsItd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_mZtsI9d5EeGtNLA6W-IQeQ">
      <eAnnotations xmi:id="_mZtsJNd5EeGtNLA6W-IQeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_WjsoIBSiEeKjSbwTpEIuCw">
      <eAnnotations xmi:id="_WjsoIRSiEeKjSbwTpEIuCw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_mbrbANd5EeGtNLA6W-IQeQ" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" packageName="mu2consol" prefix="Mu2consol" base_Namespace="_mZtsINd5EeGtNLA6W-IQeQ"/>
  <CDA:ConstraintValidation xmi:id="_39anEOF3EeGlJOFzBdwM6w" base_Constraint="_j1rcwOF3EeGlJOFzBdwM6w"/>
  <CDA:ConstraintValidation xmi:id="_7vlYQOvXEeGkopdZmUN1Xw" base_Constraint="_gfm_8OvXEeGkopdZmUN1Xw"/>
  <CDA:PropertyValidation xmi:id="_njlW8OyxEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_LX7foO1YEeGT-eFu7Ghgjw" base_Constraint="_F7KU8O1YEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_nFpcgO1bEeGT-eFu7Ghgjw" base_Constraint="_kNHwMO1bEeGT-eFu7Ghgjw"/>
  <CDA:ConstraintValidation xmi:id="_EAFLgO1cEeGT-eFu7Ghgjw" base_Constraint="_CFE3YO1cEeGT-eFu7Ghgjw"/>
  <CDA:CDATemplate xmi:id="_TQUy0PM4EeGkZPcEpuFP6w" base_Class="_w2gYkODkEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.9"/>
  <CDA:CDATemplate xmi:id="_hwU4kPM4EeGkZPcEpuFP6w" base_Class="_CaN5MODgEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.8"/>
  <CDA:CDATemplate xmi:id="_JM8z8PM5EeGkZPcEpuFP6w" base_Class="_svnagODKEeGdSJSga09Dyg" templateId="2.16.840.1.113883.10.20.22.2.10"/>
  <CDA:CDATemplate xmi:id="_TC_sAPM5EeGkZPcEpuFP6w" base_Class="_9frdwO1UEeGT-eFu7Ghgjw" templateId="2.16.840.1.113883.10.20.22.2.17"/>
  <CDA:ConstraintValidation xmi:id="_0YItAPdxEeG_npP0e3OOEw" base_Constraint="_vSLf0PdxEeG_npP0e3OOEw"/>
  <CDA:ConstraintValidation xmi:id="_HrUYkPhcEeGPm7sA61ixGw" base_Constraint="_CrzxoPhcEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_CUb-APhdEeGPm7sA61ixGw" base_Constraint="_-3broPhcEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_cP8oUPheEeGPm7sA61ixGw" base_Constraint="_WH_yoPheEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_dEY9APheEeGPm7sA61ixGw" base_Constraint="_EFIqIPheEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_Jsk-UPhfEeGPm7sA61ixGw" base_Constraint="_GUuRsPhfEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_fRfpkPhlEeGPm7sA61ixGw" base_Constraint="_fRfCgPhlEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_AgV0EPhmEeGPm7sA61ixGw" base_Constraint="_8kY74PhlEeGPm7sA61ixGw"/>
  <CDA:ConstraintValidation xmi:id="_6XGoIPhpEeGPm7sA61ixGw" base_Constraint="_1Y4aoPhpEeGPm7sA61ixGw"/>
  <CDA:PropertyValidation xmi:id="_4W8twPwYEeGx4ophOjh2tw">
    <ruleId>CONF:16558</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_4W9U0PwYEeGx4ophOjh2tw">
    <ruleId>CONF:16560</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_4W974PwYEeGx4ophOjh2tw" code="ASSERTION" displayName="Assertion">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_4AnRQCYWEd-iTYfpNb4PkQ"/>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_4XA_MvwYEeGx4ophOjh2tw">
    <ruleId>CONF:16559</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_JW-gQPwZEeGx4ophOjh2tw" base_Class="_xbrkwPwYEeGx4ophOjh2tw" templateId="2.16.840.1.113883.10.22.4.78"/>
  <CDA:CDATemplate xmi:id="_Mm36EP3iEeGmWJiRRvMaXA" base_Class="_v-6qsNkMEeGsqcJR8eqiMw" templateId="2.16.840.1.113883.10.20.22.1.1"/>
  <CDA:CDATemplate xmi:id="_65PbUAJuEeKIhvHOhwsFvA" base_Class="_tAOdEAJuEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.4.2"/>
  <CDA:CDATemplate xmi:id="_Kc_dEAJvEeKIhvHOhwsFvA" base_Class="_--CGcAJuEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.4.1"/>
  <CDA:CDATemplate xmi:id="_Yt5W4AJvEeKIhvHOhwsFvA" base_Class="_R5ZkQAJvEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.2.3.1"/>
  <CDA:ConstraintValidation xmi:id="_twd_gAJ0EeKIhvHOhwsFvA" base_Constraint="_wYmuIAJuEeKIhvHOhwsFvA"/>
  <CDA:CDATemplate xmi:id="_2A5dcAKcEeKIhvHOhwsFvA" base_Class="_zL3xEAKcEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.4.49"/>
  <CDA:CDATemplate xmi:id="_BArkwAKdEeKIhvHOhwsFvA" base_Class="_9AQcQAKcEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.2.22.1"/>
  <CDA:ConstraintValidation xmi:id="_kLGOoAKeEeKIhvHOhwsFvA" severity="WARNING" base_Constraint="_QLlMMAKeEeKIhvHOhwsFvA"/>
  <CDA:CDATemplate xmi:id="_SzQU4AKlEeKIhvHOhwsFvA" base_Class="_KmS6gAKlEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.4.14"/>
  <CDA:ConstraintValidation xmi:id="_elkFUAKlEeKIhvHOhwsFvA" severity="WARNING" base_Constraint="_Xm1YoAKlEeKIhvHOhwsFvA"/>
  <CDA:CDATemplate xmi:id="_tu9GUAKlEeKIhvHOhwsFvA" base_Class="_oJZzEAKlEeKIhvHOhwsFvA" templateId="2.16.840.1.113883.10.20.22.2.7.1"/>
  <CDA:ConstraintValidation xmi:id="_15qvwAQrEeKNWa1y_3e0dw" base_Constraint="_ujInEAQrEeKNWa1y_3e0dw"/>
  <CDA:ConstraintValidation xmi:id="_3NehAAQrEeKNWa1y_3e0dw" base_Constraint="_jVFaQAQrEeKNWa1y_3e0dw"/>
  <CDA:ConstraintValidation xmi:id="_gIu8wARcEeKNWa1y_3e0dw" base_Constraint="_0v2AIARbEeKNWa1y_3e0dw"/>
  <CDA:ConstraintValidation xmi:id="_CkmaYARlEeKNWa1y_3e0dw" base_Constraint="_2PJgoARkEeKNWa1y_3e0dw"/>
  <CDA:ConstraintValidation xmi:id="_MLMM8ArCEeK-rsV_B2slTA" base_Constraint="_UuuwwArBEeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="_OZHdEArCEeK-rsV_B2slTA" base_Constraint="_tV2F4ArAEeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="_aDMTIAu1EeK-rsV_B2slTA" base_Constraint="_T92FgAu1EeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="_7MBVMAu1EeK-rsV_B2slTA" base_Constraint="_301W8Au1EeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="_Oh9PIAu2EeK-rsV_B2slTA" base_Constraint="_JujKgAu2EeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="__6vOoAvXEeK-rsV_B2slTA" base_Constraint="_r-lpQAvXEeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="_YXlJQAveEeK-rsV_B2slTA" base_Constraint="_WhtMwAveEeK-rsV_B2slTA"/>
  <CDA:ConstraintValidation xmi:id="_n-Si8AvfEeK-rsV_B2slTA" base_Constraint="_iaMBMAvfEeK-rsV_B2slTA"/>
  <Ecore:EPackage xmi:id="_WjyHsBSiEeKjSbwTpEIuCw" base_Package="_mZtsINd5EeGtNLA6W-IQeQ" packageName="mu2consol" nsPrefix="mu2consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/mu2consol" basePackage="org.openhealthtools.mdht.uml.cda" prefix="Mu2consol">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.mu2consol'</annotation>
  </Ecore:EPackage>
  <CDA:ConformsTo xmi:id="_WjyuwBSiEeKjSbwTpEIuCw" base_Generalization="_v-6qsdkMEeGsqcJR8eqiMw"/>
  <Ecore:EClass xmi:id="_WjzV0BSiEeKjSbwTpEIuCw" base_Class="_v-6qsNkMEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolGeneralHeaderConstraintsTemplateId Mu2consolGeneralHeaderConstraintsRecordTarget Mu2consolGeneralHeaderConstraintsDocumentationOf GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent GeneralHeaderConstraintsComponent1EncompassingEncounterEncounterParticipant GeneralHeaderConstraintsComponent1EncompassingEncounter' templateId.root='2.16.840.1.113883.10.20.22.1.1' constraints.validation.query='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent GeneralHeaderConstraintsComponent1EncompassingEncounterEncounterParticipant GeneralHeaderConstraintsComponent1EncompassingEncounter' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTarget constraints.validation.error='RecordTargetPatientRole RecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP RecordTargetPatientRolePatientLanguageCommunicationLanguageCode RecordTargetPatientRolePatientEthnicGroupCode RecordTargetPatientRolePatientEthnicGroupCodeP RecordTargetPatientRolePatientRaceCode RecordTargetPatientRolePatientRaceCodeP RecordTargetPatientRolePatientLanguageCommunication RecordTargetPatientRolePatient' constraints.validation.query='RecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP RecordTargetPatientRolePatientLanguageCommunicationLanguageCode RecordTargetPatientRolePatientEthnicGroupCode RecordTargetPatientRolePatientEthnicGroupCodeP RecordTargetPatientRolePatientRaceCode RecordTargetPatientRolePatientRaceCodeP RecordTargetPatientRolePatientLanguageCommunication RecordTargetPatientRolePatient' constraints.validation.dependOn.RecordTargetPatientRolePatientLanguageCommunicationLanguageCode='RecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRole constraints.validation.error='PatientRolePatient PatientRolePatientLanguageCommunicationLanguageCodeP PatientRolePatientLanguageCommunicationLanguageCode PatientRolePatientEthnicGroupCode PatientRolePatientEthnicGroupCodeP PatientRolePatientRaceCode PatientRolePatientRaceCodeP PatientRolePatientLanguageCommunication' constraints.validation.query='PatientRolePatientLanguageCommunicationLanguageCodeP PatientRolePatientLanguageCommunicationLanguageCode PatientRolePatientEthnicGroupCode PatientRolePatientEthnicGroupCodeP PatientRolePatientRaceCode PatientRolePatientRaceCodeP PatientRolePatientLanguageCommunication' constraints.validation.dependOn.PatientRolePatientLanguageCommunicationLanguageCode='PatientRolePatientLanguageCommunicationLanguageCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRolePatient ethnicGroupCode.codeSystem='2.16.840.1.113883.6.238' ethnicGroupCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.error='PatientEthnicGroupCode PatientEthnicGroupCodeP PatientRaceCode PatientRaceCodeP PatientLanguageCommunication PatientLanguageCommunicationLanguageCodeP PatientLanguageCommunicationLanguageCode' raceCode.codeSystem='2.16.840.1.113883.6.238' raceCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.query='PatientLanguageCommunicationLanguageCodeP PatientLanguageCommunicationLanguageCode' constraints.validation.dependOn.PatientLanguageCommunicationLanguageCode='PatientLanguageCommunicationLanguageCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication constraints.validation.error='LanguageCommunicationLanguageCode LanguageCommunicationLanguageCodeP' constraints.validation.dependOn.LanguageCommunicationLanguageCode='LanguageCommunicationLanguageCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOf constraints.validation.error='DocumentationOfServiceEvent DocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson DocumentationOfServiceEventPerformer1AssignedEntity DocumentationOfServiceEventPerformer' constraints.validation.query='DocumentationOfServiceEventPerformer1AssignedEntityAssignedPerson DocumentationOfServiceEventPerformer1AssignedEntity DocumentationOfServiceEventPerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEvent constraints.validation.error='ServiceEventPerformer ServiceEventPerformer1AssignedEntityAssignedPerson ServiceEventPerformer1AssignedEntity' constraints.validation.query='ServiceEventPerformer1AssignedEntityAssignedPerson ServiceEventPerformer1AssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEventPerformer1 constraints.validation.error='Performer1AssignedEntity Performer1AssignedEntityAssignedPerson' constraints.validation.query='Performer1AssignedEntityAssignedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity constraints.validation.error='AssignedEntityAssignedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsComponent1 constraints.validation.error='Component1EncompassingEncounter Component1EncompassingEncounterEncounterParticipant' constraints.validation.query='Component1EncompassingEncounterEncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/mu2consolGeneralHeaderConstraintsComponent1EncompassingEncounter constraints.validation.error='EncompassingEncounterEncounterParticipant'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_WkFpsBSiEeKjSbwTpEIuCw" base_Class="_VG3DUNkxEeGsqcJR8eqiMw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SummaryOfCareRecordCarePlanning SummaryOfCareRecordCognitiveStatusEntries SummaryOfCareRecordFunctionalStatusEntries SummaryOfCareRecordPlanOfCareSection SummaryOfCareRecordProblemSection SummaryOfCareRecordAllergiesSection SummaryOfCareRecordImmunizationsSection SummaryOfCareRecordMedicationsSection SummaryOfCareRecordSocialHistorySection SummaryOfCareRecordResultsSection SummaryOfCareRecordVitalSignsSection SummaryOfCareRecordProceduresSection SummaryOfCareRecordSocialHistorySectionTemplateId SummaryOfCareRecordMu2consolSocialHistorySectionSmokingStatusObservation SummaryOfCareRecordMu2consolPlanOfCareSectionCarePlanningForPlanOfCare SummaryOfCareRecordMu2consolPlanOfCareSectionPlanOfCareActivityObservation SummaryOfCareRecordPlanOfCareSectionTemplateId SummaryOfCareRecordAssessmentAndPlanSectionTemplateId SummaryOfCareRecordAssessmentSectionTemplateId SummaryOfCareRecordMu2consolAssessmentSectionProblemObservation' constraints.validation.query='SummaryOfCareRecordCognitiveStatusEntries SummaryOfCareRecordFunctionalStatusEntries SummaryOfCareRecordSocialHistorySectionTemplateId SummaryOfCareRecordMu2consolSocialHistorySectionSmokingStatusObservation SummaryOfCareRecordMu2consolPlanOfCareSectionCarePlanningForPlanOfCare SummaryOfCareRecordMu2consolPlanOfCareSectionPlanOfCareActivityObservation SummaryOfCareRecordPlanOfCareSectionTemplateId SummaryOfCareRecordAssessmentAndPlanSectionTemplateId SummaryOfCareRecordAssessmentSectionTemplateId SummaryOfCareRecordMu2consolAssessmentSectionProblemObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_WkeEMBSiEeKjSbwTpEIuCw" base_Class="_svnagODKEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolPlanOfCareSectionPlanOfCareActivityObservation Mu2consolPlanOfCareSectionTemplateId Mu2consolPlanOfCareSectionCarePlanningForPlanOfCare' templateId.root='2.16.840.1.113883.10.20.22.2.10'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_WkerQRSiEeKjSbwTpEIuCw" base_Generalization="_vqugwODKEeGdSJSga09Dyg"/>
  <CDA:ConformsTo xmi:id="_WkhukBSiEeKjSbwTpEIuCw" base_Generalization="_D0JgkODgEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_WkiVoBSiEeKjSbwTpEIuCw" base_Class="_CaN5MODgEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolAssessmentSectionTemplateId Mu2consolAssessmentSectionProblemObservation' templateId.root='2.16.840.1.113883.10.20.22.2.8'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_Wkkx4BSiEeKjSbwTpEIuCw" base_Generalization="_ySywYODkEeGdSJSga09Dyg"/>
  <Ecore:EClass xmi:id="_WklY8BSiEeKjSbwTpEIuCw" base_Class="_w2gYkODkEeGdSJSga09Dyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolAssessmentAndPlanSectionTemplateId' templateId.root='2.16.840.1.113883.10.20.22.2.9'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_Wkn1MRSiEeKjSbwTpEIuCw" base_Class="_7D0CQOzmEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryEffectiveTime ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummaryPlanOfCareActOrEncounter ClinicalOfficeVisitSummaryInstructionsEntry ClinicalOfficeVisitSummaryMedicationsAdministeredEntry ClinicalOfficeVisitSummaryMu2consolPlanOfCareSectionCarePlanningForPlanOfCare ClinicalOfficeVisitSummaryMu2consolPlanOfCareSectionPlanOfCareActivityObservation ClinicalOfficeVisitSummaryPlanOfCareSectionTemplateId ClinicalOfficeVisitSummaryAssessmentAndPlanSectionTemplateId ClinicalOfficeVisitSummarySocialHistorySectionTemplateId ClinicalOfficeVisitSummaryMu2consolSocialHistorySectionSmokingStatusObservation' constraints.validation.error='ClinicalOfficeVisitSummaryResponsibleParty ClinicalOfficeVisitSummaryReasonForOfficeVisit ClinicalOfficeVisitSummaryCarePlanning ClinicalOfficeVisitSummaryEffectiveTime ClinicalOfficeVisitSummaryLocation ClinicalOfficeVisitSummaryPlanOfCareActOrEncounter ClinicalOfficeVisitSummaryInstructionsEntry ClinicalOfficeVisitSummaryMedicationsAdministeredEntry ClinicalOfficeVisitSummaryProblemSection ClinicalOfficeVisitSummaryMedicationsSection ClinicalOfficeVisitSummaryAllergiesSection ClinicalOfficeVisitSummaryResultsSection ClinicalOfficeVisitSummaryVitalSignsSection ClinicalOfficeVisitSummaryPlanOfCareSection ClinicalOfficeVisitSummaryProceduresSection ClinicalOfficeVisitSummaryImmunizationsSection ClinicalOfficeVisitSummaryMedicationsAdministeredSection ClinicalOfficeVisitSummaryInstructionsSection ClinicalOfficeVisitSummarySocialHistorySection ClinicalOfficeVisitSummaryMu2consolPlanOfCareSectionCarePlanningForPlanOfCare ClinicalOfficeVisitSummaryMu2consolPlanOfCareSectionPlanOfCareActivityObservation ClinicalOfficeVisitSummaryPlanOfCareSectionTemplateId ClinicalOfficeVisitSummaryAssessmentAndPlanSectionTemplateId ClinicalOfficeVisitSummarySocialHistorySectionTemplateId ClinicalOfficeVisitSummaryMu2consolSocialHistorySectionSmokingStatusObservation'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_Wkui5RSiEeKjSbwTpEIuCw" base_Generalization="_-2YyAO1UEeGT-eFu7Ghgjw"/>
  <Ecore:EClass xmi:id="_WkvxABSiEeKjSbwTpEIuCw" base_Class="_9frdwO1UEeGT-eFu7Ghgjw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolSocialHistorySectionTemplateId Mu2consolSocialHistorySectionSmokingStatusObservation' templateId.root='2.16.840.1.113883.10.20.22.2.17'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_WlDTABSiEeKjSbwTpEIuCw" base_Class="_UGcMgPabEeGi99B_x568TQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='TransitionOfCareAmbulatorySummaryResponsibleParty' constraints.validation.error='TransitionOfCareAmbulatorySummaryResponsibleParty TransitionOfCareAmbulatorySummaryAmbulatoryEncounterDiagnoses TransitionOfCareAmbulatorySummaryReasonForReferralSection'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_WlILgBSiEeKjSbwTpEIuCw" base_Class="_uu2T0PdyEeG_npP0e3OOEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransitionOfCareInpatientSummaryInpatientEncounterDiagnoses TransitionOfCareInpatientSummaryHospitalAdmissionDiagnosisEntry TransitionOfCareInpatientSummaryHospitalDischargeDiagnosesEntry TransitionOfCareInpatientSummaryPostoperativeDiagnosisEntry TransitionOfCareInpatientSummaryPostprocedureDiagnosisEntry TransitionOfCareInpatientSummaryHospitalDischargeInstructionsSection TransitionOfCareInpatientSummaryHospitalDischargeMedicationsSection' constraints.validation.query='TransitionOfCareInpatientSummaryHospitalAdmissionDiagnosisEntry TransitionOfCareInpatientSummaryHospitalDischargeDiagnosesEntry TransitionOfCareInpatientSummaryPostoperativeDiagnosisEntry TransitionOfCareInpatientSummaryPostprocedureDiagnosisEntry'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_WlW1ABSiEeKjSbwTpEIuCw" base_Class="_i2IoQPhVEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ViewDownloadTransmitSummaryCarePlanFields ViewDownloadTransmitSummaryAllergiesSection ViewDownloadTransmitSummaryMedicationsSection ViewDownloadTransmitSummaryProblemSection ViewDownloadTransmitSummaryProceduresSection ViewDownloadTransmitSummaryVitalSignsSection ViewDownloadTransmitSummaryResultsSection ViewDownloadTransmitSummaryPlanOfCareSection ViewDownloadTransmitSummarySocialHistorySection ViewDownloadTransmitSummaryAssessmentAndPlanSectionTemplateId ViewDownloadTransmitSummaryMu2consolPlanOfCareSectionCarePlanningForPlanOfCare ViewDownloadTransmitSummaryMu2consolPlanOfCareSectionPlanOfCareActivityObservation ViewDownloadTransmitSummaryPlanOfCareSectionTemplateId ViewDownloadTransmitSummarySocialHistorySectionTemplateId ViewDownloadTransmitSummaryMu2consolSocialHistorySectionSmokingStatusObservation' constraints.validation.query='ViewDownloadTransmitSummaryAssessmentAndPlanSectionTemplateId ViewDownloadTransmitSummaryMu2consolPlanOfCareSectionCarePlanningForPlanOfCare ViewDownloadTransmitSummaryMu2consolPlanOfCareSectionPlanOfCareActivityObservation ViewDownloadTransmitSummaryPlanOfCareSectionTemplateId ViewDownloadTransmitSummarySocialHistorySectionTemplateId ViewDownloadTransmitSummaryMu2consolSocialHistorySectionSmokingStatusObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_WlmFkBSiEeKjSbwTpEIuCw" base_Class="_rsKJkPhcEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='VDTInpatientSummaryEffectiveTime VDTInpatientSummaryLocation VDTInpatientSummaryHospitalAdmissionDiagnosisEntry VDTInpatientSummaryPreoperativeDiagnosisEntry' constraints.validation.error='VDTInpatientSummaryEffectiveTime VDTInpatientSummaryLocation VDTInpatientSummaryChiefComplaintOrReasonForVisit VDTInpatientSummaryHospitalAdmissionDiagnosisEntry VDTInpatientSummaryPreoperativeDiagnosisEntry VDTInpatientSummaryHospitalDischargeInstructionsSection VDTInpatientSummaryHospitalAdmissionDiagnosisSection VDTInpatientSummaryHospitalDischargeMedicationsSection'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_WlqXABSiEeKjSbwTpEIuCw" base_Class="_2FvMgPhcEeGPm7sA61ixGw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.query='VDTAmbulatorySummaryResponsibleParty' constraints.validation.error='VDTAmbulatorySummaryResponsibleParty'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_WlxrwBSiEeKjSbwTpEIuCw" base_Generalization="_yhogMPwYEeGx4ophOjh2tw"/>
  <Ecore:EClass xmi:id="_Wly54BSiEeKjSbwTpEIuCw" base_Class="_xbrkwPwYEeGx4ophOjh2tw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SmokingStatusObservationTemplateId SmokingStatusObservationValue SmokingStatusObservationValueP' templateId.root='2.16.840.1.113883.10.22.4.78' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.dependOn.SmokingStatusObservationValue='SmokingStatusObservationValueP'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_Wl61sBSiEeKjSbwTpEIuCw" base_Generalization="_tAPEIAJuEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_Wl8D0BSiEeKjSbwTpEIuCw" base_Class="_tAOdEAJuEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolResultObservationTemplateId Mu2consolResultObservationResultObservationCodeValue Mu2consolResultObservationCode' templateId.root='2.16.840.1.113883.10.20.22.4.2'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_Wl_uMBSiEeKjSbwTpEIuCw" base_Generalization="_--CGcQJuEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_WmA8UBSiEeKjSbwTpEIuCw" base_Class="_--CGcAJuEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolResultOrganizerTemplateId Mu2consolResultOrganizerResultObservation' templateId.root='2.16.840.1.113883.10.20.22.4.1'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_WmDYkBSiEeKjSbwTpEIuCw" base_Generalization="_R5ZkQQJvEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_WmEmsBSiEeKjSbwTpEIuCw" base_Class="_R5ZkQAJvEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolResultsSectionTemplateId Mu2consolResultsSectionResultOrganizer' templateId.root='2.16.840.1.113883.10.20.22.2.3.1'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_WmHqABSiEeKjSbwTpEIuCw" base_Generalization="_zL4YIAKcEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_WmI4IBSiEeKjSbwTpEIuCw" base_Class="_zL3xEAKcEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolEncounterActivitiesTemplateId' templateId.root='2.16.840.1.113883.10.20.22.4.49' constraints.validation.warning='Mu2consolEncounterActivitiesCodeValue'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_WmKGQBSiEeKjSbwTpEIuCw" base_Generalization="_9AQcQQKcEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_WmLUYBSiEeKjSbwTpEIuCw" base_Class="_9AQcQAKcEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolEncountersSectionTemplateId Mu2consolEncountersSectionEncounterActivities' templateId.root='2.16.840.1.113883.10.20.22.2.22.1'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_WmNwpBSiEeKjSbwTpEIuCw" base_Generalization="_KmThkAKlEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_WmO-wBSiEeKjSbwTpEIuCw" base_Class="_KmS6gAKlEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolProcedureActivityProcedureTemplateId Mu2consolProcedureActivityProcedureCode' templateId.root='2.16.840.1.113883.10.20.22.4.14' constraints.validation.warning='Mu2consolProcedureActivityProcedureCodeValue'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_WmSpIBSiEeKjSbwTpEIuCw" base_Generalization="_oJZzEQKlEeKIhvHOhwsFvA"/>
  <Ecore:EClass xmi:id="_WmT3QBSiEeKjSbwTpEIuCw" base_Class="_oJZzEAKlEeKIhvHOhwsFvA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mu2consolProceduresSectionTemplateId' templateId.root='2.16.840.1.113883.10.20.22.2.7.1' constraints.validation.info='Mu2consolProceduresSectionProcedureActivityProcedure'</annotation>
  </Ecore:EClass>
</xmi:XMI>
