<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_qQyD8jxVEd6JwqSGecoePg" name="ccd">
    <packageImport xmi:id="_-xRsgDxVEd6JwqSGecoePg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_pMrdQHu8Ed6jfbAJq2V82w">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_tV7QUIhOEd6UrJD25cKDew">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.vocab/model/vocab.uml#__yVbeUDcEd6xYZuu1VKCVw"/>
    </packageImport>
    <packageImport xmi:id="_OqkpUCfbEd-4R4ealYN1gQ">
      <importedPackage href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_KnCD4CFjEd-3s7f6mWX-3A"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_OvmR4HfUEd6ZeOKq_2_a9g" name="MedicationsSection">
      <ownedComment xmi:id="_CfWEYIjvEd66cKocspyVOg" annotatedElement="_OvmR4HfUEd6ZeOKq_2_a9g">
        <body>&lt;p>&#xD;
    The Medications section defines a patient's current medications and pertinent medication&#xD;
    history. At a minimum, the currently active medications should be listed, with an entire medication history as an&#xD;
    option, particularly when the summary document is used for comprehensive data export. The section may also include a&#xD;
    patient's prescription history, and enables the determination of the source of a medication list (e.g. from a pharmacy&#xD;
    system vs. from the patient).&#xD;
&lt;/p>&#xD;
&lt;p>Reconciliation of conflicting medication information from various sources is enabled both by indicating the source of information and by indicating whether the source is reporting intended or actual medication use. For instance, a physician may intend for a patient to be on a particular dose, but the patient may actually be taking a different dose; a pharmacy may fill a prescription for a particular dose only to then have the patient's physician lower the dose without notifying the pharmacy. Therefore, medication and supply activities can be expressed in CCD in either the &quot;EVN&quot; (event) mood or the &quot;INT&quot; (intent) mood. Medication activities in &quot;INT&quot; mood are not orders (which are represented in the Plan of Care section), but rather are reflections of what a clinician intends a patient to be taking. Medication activities in &quot;EVN&quot; mood reflect actual use. A pharmacy system will typically report what was actually filled (supply event), along with intended use (substance administration intent). A physician will often report intended use (substance administration and supply intent). A patient or family member will typically report actual use (substance administration event).&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_mJxYAOekEd-aaJELhEID-A" name="MedicationsSectionHasMedicationOrSupplyActivity" constrainedElement="_OvmR4HfUEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WEN48OtCEd-aaJELhEID-A">
          <language>OCL</language>
          <body>self.getSubstanceAdministrations()->exists(activity : cda::SubstanceAdministration | activity.oclIsKindOf(ccd::MedicationActivity))&#xD;
   or self.getSupplies()->exists(activity : cda::Supply | activity.oclIsKindOf(ccd::SupplyActivity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__UkLgC8uEeKnd4bldEC3WA" name="MedicationsSectionTemplateId" constrainedElement="_OvmR4HfUEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__UkLgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__UnO0C8uEeKnd4bldEC3WA" name="MedicationsSectionCode" constrainedElement="_OvmR4HfUEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__UnO0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '10160-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__UprEC8uEeKnd4bldEC3WA" name="MedicationsSectionTitle" constrainedElement="_OvmR4HfUEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__UprES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Uq5MC8uEeKnd4bldEC3WA" name="MedicationsSectionText" constrainedElement="_OvmR4HfUEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Uq5MS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fuSoC8uEeKnd4bldEC3WA" name="MedicationsSectionMedicationActivity" constrainedElement="_OvmR4HfUEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fuSoS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(ccd::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fwH0C8uEeKnd4bldEC3WA" name="MedicationsSectionSupplyActivity" constrainedElement="_OvmR4HfUEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fwH0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(ccd::SupplyActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rdDU0HfUEd6ZeOKq_2_a9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__fvgwC8uEeKnd4bldEC3WA" name="getMedicationActivities" isQuery="true" bodyCondition="__fvgwy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__fvgwy8uEeKnd4bldEC3WA" name="body" constrainedElement="__fvgwC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__fvgxC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(ccd::MedicationActivity)).oclAsType(ccd::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fvgwS8uEeKnd4bldEC3WA" type="_W6aMoHfTEd6ZeOKq_2_a9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fvgwi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__fwu4C8uEeKnd4bldEC3WA" name="getSupplyActivities" isQuery="true" bodyCondition="__fwu4y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__fwu4y8uEeKnd4bldEC3WA" name="body" constrainedElement="__fwu4C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__fxV8C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(ccd::SupplyActivity)).oclAsType(ccd::SupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fwu4S8uEeKnd4bldEC3WA" type="_dAAnAHfVEd6ZeOKq_2_a9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fwu4i8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ze7UsGESEd69D7zx7EkLMA" name="ContinuityOfCareDocument">
      <ownedRule xmi:id="_aDaFUBguEd-PS-Y_2ABBMQ" name="ContinuityOfCareDocumentServiceEventRequired" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iFbbABguEd-PS-Y_2ABBMQ">
          <language>OCL</language>
          <body>self.documentationOf->one(doc : cda::DocumentationOf | not doc.serviceEvent.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_J6HmMBgxEd-PS-Y_2ABBMQ" name="ContinuityOfCareDocumentServiceEventClassCode" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SiysMBgxEd-PS-Y_2ABBMQ">
          <language>OCL</language>
          <body>self.documentationOf->one(doc : cda::DocumentationOf | doc.serviceEvent.classCode = vocab::ActClassRoot::PCPR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_qYof8BgxEd-PS-Y_2ABBMQ" name="ContinuityOfCareDocumentServiceEventEffectiveTime" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zk40IBgxEd-PS-Y_2ABBMQ">
          <language>OCL</language>
          <body>self.documentationOf->one(doc : cda::DocumentationOf | &#xD;
   not doc.serviceEvent.effectiveTime.low.oclIsUndefined() and not doc.serviceEvent.effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fGirMBgyEd-PS-Y_2ABBMQ" name="ContinuityOfCareDocumentLanguageCodeFormat">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rBVpQBgyEd-PS-Y_2ABBMQ">
          <language>OCL</language>
          <body>self.languageCode.matches('code','(([a-z]{2})(-[A-Z]{2})?)')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_LwvesBgzEd-PS-Y_2ABBMQ" name="ContinuityOfCareDocumentNoTemplateIdExtension" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_RzXvgBgzEd-PS-Y_2ABBMQ">
          <language>OCL</language>
          <body>self.templateId->forAll(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1' implies id.extension.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fkuKEBg0Ed-PS-Y_2ABBMQ" name="ContinuityOfCareDocumentHasEffectiveTimeSeconds" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzLz4Bg0Ed-PS-Y_2ABBMQ">
          <language>OCL</language>
          <body>self.effectiveTime.value.size() >= 4</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m-HZgBg0Ed-PS-Y_2ABBMQ" name="ContinuityOfCareDocumentHasEffectiveTimeZone" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_y8mkwBg0Ed-PS-Y_2ABBMQ">
          <language>OCL</language>
          <body>self.effectiveTime.value.size() >= 19</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-rpl0Bg0Ed-PS-Y_2ABBMQ" name="ContinuityOfCareDocumentOneOrTwoRecordTarget" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_E8_oEBg1Ed-PS-Y_2ABBMQ">
          <language>OCL</language>
          <body>self.recordTarget->size() = 1 or self.recordTarget->size() =2</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gXpfABg4Ed-PS-Y_2ABBMQ" name="ContinuityOfCareDocumentHasAssignedAuthor" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kia2UBg4Ed-PS-Y_2ABBMQ">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.assignedAuthor.assignedPerson.oclIsUndefined() &#xD;
   or not author.assignedAuthor.representedOrganization.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1ivHQBg5Ed-PS-Y_2ABBMQ" name="ContinuityOfCareDocumentHasAssignedAuthorNullFlavor" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AVNyYBg6Ed-PS-Y_2ABBMQ">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | (not author.assignedAuthor.representedOrganization.oclIsUndefined()&#xD;
      and author.assignedAuthor.assignedPerson.oclIsUndefined() and author.assignedAuthor.assignedAuthoringDevice.oclIsUndefined())&#xD;
   implies author.assignedAuthor.id->one(id : datatypes::II | id.nullFlavor = vocab::NullFlavor::NA))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9sM0Bg7Ed-PS-Y_2ABBMQ" name="ContinuityOfCareDocumentHasInformationRecipient" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pXeZYBg7Ed-PS-Y_2ABBMQ">
          <language>OCL</language>
          <body>self.informationRecipient->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__UsHUC8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentTemplateId" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__UsHUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__U2fYC8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentCode" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__U2fYS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '34133-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__U4UkC8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentLanguageCode" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__U4UkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.languageCode.oclIsUndefined() or self.languageCode.isNullFlavorUndefined()) implies (not self.languageCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aLrVS8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentProblemSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aLrVi8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aM5dC8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentFamilyHistorySection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aM5dS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aOHky8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentSocialHistorySection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aOHlC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aPVsy8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentAlertsSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aPVtC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::AlertsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aQj0S8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentMedicationsSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aQj0i8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aRx8C8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentResultsSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aRx8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aTAEC8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentProceduresSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aTAES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aUOMC8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentEncountersSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aUOMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::EncountersSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__acKAC8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentPlanOfCareSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__acKAS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__adYIS8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentImmunizationsSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__adYIi8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__alT8C8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentVitalSignsSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__alT8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__atPwC8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentMedicalEquipmentSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__atPwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::MedicalEquipmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__a6EEC8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentFunctionalStatusSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__a6EES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::FunctionalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bIGgC8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentAdvanceDirectivesSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bIGgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::AdvanceDirectivesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bJUoS8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentPayersSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bJUoi8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::PayersSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bQpYC8uEeKnd4bldEC3WA" name="ContinuityOfCareDocumentPurposeSection" constrainedElement="_Ze7UsGESEd69D7zx7EkLMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bQpYS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::PurposeSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_tf1eQGESEd69D7zx7EkLMA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_S9OzADxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__aMSYC8uEeKnd4bldEC3WA" name="getProblemSection" isQuery="true" bodyCondition="__aM5ci8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aM5ci8uEeKnd4bldEC3WA" name="body" constrainedElement="__aMSYC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aM5cy8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::ProblemSection))->asSequence()->any(true).oclAsType(ccd::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aM5cC8uEeKnd4bldEC3WA" type="_vjPMEGaGEd6Hk_bPOfEjYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aM5cS8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__aNggC8uEeKnd4bldEC3WA" name="getFamilyHistorySection" isQuery="true" bodyCondition="__aOHkS8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aOHkS8uEeKnd4bldEC3WA" name="body" constrainedElement="__aNggC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aOHki8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::FamilyHistorySection))->asSequence()->any(true).oclAsType(ccd::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aNggS8uEeKnd4bldEC3WA" type="_5ET7oGwWEd6q29qQGU-SBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aOHkC8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__aOuoC8uEeKnd4bldEC3WA" name="getSocialHistorySection" isQuery="true" bodyCondition="__aPVsS8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aPVsS8uEeKnd4bldEC3WA" name="body" constrainedElement="__aOuoC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aPVsi8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::SocialHistorySection))->asSequence()->any(true).oclAsType(ccd::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aOuoS8uEeKnd4bldEC3WA" type="_UOVM0HDAEd6eItyqb1FoWg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aPVsC8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__aP8wC8uEeKnd4bldEC3WA" name="getAlertsSection" isQuery="true" bodyCondition="__aP8wy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aP8wy8uEeKnd4bldEC3WA" name="body" constrainedElement="__aP8wC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aQj0C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::AlertsSection))->asSequence()->any(true).oclAsType(ccd::AlertsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aP8wS8uEeKnd4bldEC3WA" type="_PgsSAHrREd68l9lQ-TLEBQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aP8wi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__aRK4C8uEeKnd4bldEC3WA" name="getMedicationsSection" isQuery="true" bodyCondition="__aRK4y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aRK4y8uEeKnd4bldEC3WA" name="body" constrainedElement="__aRK4C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aRK5C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::MedicationsSection))->asSequence()->any(true).oclAsType(ccd::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aRK4S8uEeKnd4bldEC3WA" type="_OvmR4HfUEd6ZeOKq_2_a9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aRK4i8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__aSZAC8uEeKnd4bldEC3WA" name="getResultsSection" isQuery="true" bodyCondition="__aSZAy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aSZAy8uEeKnd4bldEC3WA" name="body" constrainedElement="__aSZAC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aSZBC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::ResultsSection))->asSequence()->any(true).oclAsType(ccd::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aSZAS8uEeKnd4bldEC3WA" type="_7TVToIiAEd66cKocspyVOg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aSZAi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__aTnIC8uEeKnd4bldEC3WA" name="getProceduresSection" isQuery="true" bodyCondition="__aTnIy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aTnIy8uEeKnd4bldEC3WA" name="body" constrainedElement="__aTnIC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aTnJC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::ProceduresSection))->asSequence()->any(true).oclAsType(ccd::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aTnIS8uEeKnd4bldEC3WA" type="_p_LEwIjvEd66cKocspyVOg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aTnIi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__aU1QC8uEeKnd4bldEC3WA" name="getEncountersSection" isQuery="true" bodyCondition="__aU1Qy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aU1Qy8uEeKnd4bldEC3WA" name="body" constrainedElement="__aU1QC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aU1RC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::EncountersSection))->asSequence()->any(true).oclAsType(ccd::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aU1QS8uEeKnd4bldEC3WA" type="_rJDcIHDAEd6eItyqb1FoWg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aU1Qi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__acxEC8uEeKnd4bldEC3WA" name="getPlanOfCareSection" isQuery="true" bodyCondition="__acxEy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__acxEy8uEeKnd4bldEC3WA" name="body" constrainedElement="__acxEC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__adYIC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::PlanOfCareSection))->asSequence()->any(true).oclAsType(ccd::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__acxES8uEeKnd4bldEC3WA" type="_o9nLAKPTEd6t_4WfM070fA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__acxEi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__ad_MC8uEeKnd4bldEC3WA" name="getImmunizationsSection" isQuery="true" bodyCondition="__aemQC8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aemQC8uEeKnd4bldEC3WA" name="body" constrainedElement="__ad_MC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aemQS8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::ImmunizationsSection))->asSequence()->any(true).oclAsType(ccd::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__ad_MS8uEeKnd4bldEC3WA" type="_CinbMHDPEd6eItyqb1FoWg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__ad_Mi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__al7AC8uEeKnd4bldEC3WA" name="getVitalSignsSection" isQuery="true" bodyCondition="__al7Ay8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__al7Ay8uEeKnd4bldEC3WA" name="body" constrainedElement="__al7AC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__amiEC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::VitalSignsSection))->asSequence()->any(true).oclAsType(ccd::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__al7AS8uEeKnd4bldEC3WA" type="_GKpeMKPaEd6t_4WfM070fA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__al7Ai8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__aud4C8uEeKnd4bldEC3WA" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="__aud4y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aud4y8uEeKnd4bldEC3WA" name="body" constrainedElement="__aud4C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aud5C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::MedicalEquipmentSection))->asSequence()->any(true).oclAsType(ccd::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aud4S8uEeKnd4bldEC3WA" type="_5hfTYKPbEd6t_4WfM070fA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aud4i8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__a6rIC8uEeKnd4bldEC3WA" name="getFunctionalStatusSection" isQuery="true" bodyCondition="__a6rIy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__a6rIy8uEeKnd4bldEC3WA" name="body" constrainedElement="__a6rIC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__a6rJC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::FunctionalStatusSection))->asSequence()->any(true).oclAsType(ccd::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__a6rIS8uEeKnd4bldEC3WA" type="_GoctIKPdEd6t_4WfM070fA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__a6rIi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__bItkC8uEeKnd4bldEC3WA" name="getAdvanceDirectivesSection" isQuery="true" bodyCondition="__bItky8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__bItky8uEeKnd4bldEC3WA" name="body" constrainedElement="__bItkC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__bJUoC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::AdvanceDirectivesSection))->asSequence()->any(true).oclAsType(ccd::AdvanceDirectivesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__bItkS8uEeKnd4bldEC3WA" type="_NvRwcKPeEd6t_4WfM070fA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__bItki8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__bJ7sC8uEeKnd4bldEC3WA" name="getPayersSection" isQuery="true" bodyCondition="__bJ7sy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__bJ7sy8uEeKnd4bldEC3WA" name="body" constrainedElement="__bJ7sC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__bJ7tC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::PayersSection))->asSequence()->any(true).oclAsType(ccd::PayersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__bJ7sS8uEeKnd4bldEC3WA" type="_T79VIKPeEd6t_4WfM070fA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__bJ7si8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__bRQcC8uEeKnd4bldEC3WA" name="getPurposeSection" isQuery="true" bodyCondition="__bR3gC8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__bR3gC8uEeKnd4bldEC3WA" name="body" constrainedElement="__bRQcC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__bR3gS8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ccd::PurposeSection))->asSequence()->any(true).oclAsType(ccd::PurposeSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__bRQcS8uEeKnd4bldEC3WA" type="_f0mKEKRtEd6t_4WfM070fA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__bRQci8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GgvgUDxbEd6JwqSGecoePg" name="ProblemAct">
      <ownedComment xmi:id="_zB-WgBXPEd-6K-YJpbwRmQ">
        <body>A problem is a clinical statement that a clinician is particularly concerned about and wants to track. It has important patient management use cases (e.g. health records often present the problem list as a way of summarizing a patient's medical history).</body>
      </ownedComment>
      <ownedRule xmi:id="_oImlABK1Ed-6K-YJpbwRmQ" name="ProblemActEntryRelationshipRequired" constrainedElement="_GgvgUDxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhFOcBK1Ed-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>not self.entryRelationship->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fIRWIBToEd-6K-YJpbwRmQ" name="ProblemActSubjectOfTarget" constrainedElement="_GgvgUDxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fISkQBToEd-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SUBJ, cda::ClinicalStatement)->forAll(target : cda::ClinicalStatement | not target.oclIsUndefined() and &#xD;
  (target.oclIsKindOf(ccd::ProblemObservation) or target.oclIsKindOf(ccd::AlertObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tL4b0BTdEd-6K-YJpbwRmQ" name="ProblemActContainsProblemObservation" constrainedElement="_GgvgUDxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tL5C4BTdEd-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>self.getSection().oclIsKindOf(ccd::ProblemSection) implies self.getObservations()&#xD;
   ->exists(obs : cda::Observation | obs.oclIsKindOf(ccd::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hVw60Bg9Ed-PS-Y_2ABBMQ" name="ProblemActContainsAlertObservation" constrainedElement="_GgvgUDxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nmaZgBg9Ed-PS-Y_2ABBMQ">
          <language>OCL</language>
          <body>self.getSection().oclIsKindOf(ccd::AlertsSection) implies self.getObservations()&#xD;
   ->exists(obs : cda::Observation | obs.oclIsKindOf(ccd::AlertObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WdDEkBZrEd-kKd2N285_Sw" name="ProblemActContainsPatientAwareness" constrainedElement="_GgvgUDxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WdE5wBZrEd-kKd2N285_Sw">
          <language>OCL</language>
          <body>self.participant->one(partic : cda::Participant2 | partic.oclIsKindOf(ccd::PatientAwareness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__U6JwC8uEeKnd4bldEC3WA" name="ProblemActTemplateId" constrainedElement="_GgvgUDxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__U6JwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.27')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__U-bMC8uEeKnd4bldEC3WA" name="ProblemActClassCode" constrainedElement="_GgvgUDxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__U-bMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__U_pUC8uEeKnd4bldEC3WA" name="ProblemActMoodCode" constrainedElement="_GgvgUDxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__U_pUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VA3cC8uEeKnd4bldEC3WA" name="ProblemActId" constrainedElement="_GgvgUDxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VA3cS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VCsoC8uEeKnd4bldEC3WA" name="ProblemActCodeNullFlavor" constrainedElement="_GgvgUDxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VCsoS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.nullFlavor = vocab::NullFlavor::NA)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VEh0C8uEeKnd4bldEC3WA" name="ProblemActEffectiveTime" constrainedElement="_GgvgUDxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VEh0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eXAsy8uEeKnd4bldEC3WA" name="ProblemActEpisodeObservation" constrainedElement="_GgvgUDxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eXAtC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::EpisodeObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_H4qVgDxbEd6JwqSGecoePg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__eXnwC8uEeKnd4bldEC3WA" name="getEpisodeObservation" isQuery="true" bodyCondition="__eYO0i8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__eYO0i8uEeKnd4bldEC3WA" name="body" constrainedElement="__eXnwC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__eYO0y8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::EpisodeObservation))->asSequence()->any(true).oclAsType(ccd::EpisodeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__eYO0C8uEeKnd4bldEC3WA" type="_AwcXkGaKEd6Hk_bPOfEjYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__eYO0S8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_IjIO0DxbEd6JwqSGecoePg" name="ProblemObservation">
      <ownedRule xmi:id="_LgbBQBTyEd-6K-YJpbwRmQ" name="ProblemObservationInformationSource" constrainedElement="_IjIO0DxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Lgc2cBTyEd-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;
or not self.getSection().informant->isEmpty()&#xD;
or not self.getClinicalDocument().informant->isEmpty()&#xD;
or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;
or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;
   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;
   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vL9Y4BZsEd-kKd2N285_Sw" name="ProblemObservationContainsPatientAwareness" constrainedElement="_IjIO0DxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL9Y4RZsEd-kKd2N285_Sw">
          <language>OCL</language>
          <body>self.participant->one(partic : cda::Participant2 | partic.oclIsKindOf(ccd::PatientAwareness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VFv8C8uEeKnd4bldEC3WA" name="ProblemObservationTemplateId" constrainedElement="_IjIO0DxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VFv8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.28')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VIzQC8uEeKnd4bldEC3WA" name="ProblemObservationMoodCode" constrainedElement="_IjIO0DxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VIzQS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VKocC8uEeKnd4bldEC3WA" name="ProblemObservationStatusCode" constrainedElement="_IjIO0DxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VKocS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VMdoC8uEeKnd4bldEC3WA" name="ProblemObservationEffectiveTime" constrainedElement="_IjIO0DxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VMdoS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eUkdS8uEeKnd4bldEC3WA" name="ProblemObservationProblemStatus" constrainedElement="_IjIO0DxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eVLgC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::ProblemStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eVylS8uEeKnd4bldEC3WA" name="ProblemObservationProblemHealthStatus" constrainedElement="_IjIO0DxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eVyli8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::ProblemHealthStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__emRQC8uEeKnd4bldEC3WA" name="ProblemObservationAgeObservation" constrainedElement="_IjIO0DxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__emRQS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KLIucDxbEd6JwqSGecoePg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__eVykC8uEeKnd4bldEC3WA" name="getProblemStatus" isQuery="true" bodyCondition="__eVyky8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__eVyky8uEeKnd4bldEC3WA" name="body" constrainedElement="__eVykC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__eVylC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::ProblemStatusObservation))->asSequence()->any(true).oclAsType(ccd::ProblemStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__eVykS8uEeKnd4bldEC3WA" type="_TrwngGaJEd6Hk_bPOfEjYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__eVyki8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__eWZoC8uEeKnd4bldEC3WA" name="getProblemHealthStatus" isQuery="true" bodyCondition="__eXAsS8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__eXAsS8uEeKnd4bldEC3WA" name="body" constrainedElement="__eWZoC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__eXAsi8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::ProblemHealthStatusObservation))->asSequence()->any(true).oclAsType(ccd::ProblemHealthStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__eWZoS8uEeKnd4bldEC3WA" type="_T6kfkGaJEd6Hk_bPOfEjYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__eXAsC8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__em4UC8uEeKnd4bldEC3WA" name="getAgeObservation" isQuery="true" bodyCondition="__em4Uy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__em4Uy8uEeKnd4bldEC3WA" name="body" constrainedElement="__em4UC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__em4VC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::AgeObservation))->asSequence()->any(true).oclAsType(ccd::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__em4US8uEeKnd4bldEC3WA" type="_S7rEABZ1Ed-i6Lz80y5G5g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__em4Ui8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vjPMEGaGEd6Hk_bPOfEjYA" name="ProblemSection">
      <ownedComment xmi:id="_t1kjEBXPEd-6K-YJpbwRmQ">
        <body>This section lists and describes all relevant clinical problems at the time the summary is generated. At a minimum, all pertinent current and historical problems should be listed. CDA R2 represents problems as Observations.</body>
      </ownedComment>
      <ownedRule xmi:id="__VPg8C8uEeKnd4bldEC3WA" name="ProblemSectionTemplateId" constrainedElement="_vjPMEGaGEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VPg8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.11')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VR9MC8uEeKnd4bldEC3WA" name="ProblemSectionCode" constrainedElement="_vjPMEGaGEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VR9MS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '11450-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VTyYC8uEeKnd4bldEC3WA" name="ProblemSectionTitle" constrainedElement="_vjPMEGaGEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VUZcC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VVnkC8uEeKnd4bldEC3WA" name="ProblemSectionText" constrainedElement="_vjPMEGaGEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VVnkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aKdMC8uEeKnd4bldEC3WA" name="ProblemSectionProblemAct" constrainedElement="_vjPMEGaGEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aKdMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(ccd::ProblemAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xw8ZwGaGEd6Hk_bPOfEjYA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__aLrUC8uEeKnd4bldEC3WA" name="getProblemActs" isQuery="true" bodyCondition="__aLrUy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aLrUy8uEeKnd4bldEC3WA" name="body" constrainedElement="__aLrUC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aLrVC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::ProblemAct)).oclAsType(ccd::ProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aLrUS8uEeKnd4bldEC3WA" type="_GgvgUDxbEd6JwqSGecoePg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aLrUi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TrwngGaJEd6Hk_bPOfEjYA" name="ProblemStatusObservation">
      <ownedRule xmi:id="__VW1sC8uEeKnd4bldEC3WA" name="StatusObservationTemplateId" constrainedElement="_TrwngGaJEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VW1sS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.50')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Trwng2aJEd6Hk_bPOfEjYA" general="_V3Jy4HrTEd68l9lQ-TLEBQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_T6kfkGaJEd6Hk_bPOfEjYA" name="ProblemHealthStatusObservation">
      <ownedRule xmi:id="__VZ5AC8uEeKnd4bldEC3WA" name="StatusObservationTemplateId" constrainedElement="_T6kfkGaJEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VZ5AS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.51')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VbuMC8uEeKnd4bldEC3WA" name="ProblemHealthStatusObservationCode" constrainedElement="_T6kfkGaJEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VbuMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '11323-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_T6kfk2aJEd6Hk_bPOfEjYA" general="_V3Jy4HrTEd68l9lQ-TLEBQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_AwcXkGaKEd6Hk_bPOfEjYA" name="EpisodeObservation">
      <ownedComment xmi:id="_7kkpsBXPEd-6K-YJpbwRmQ">
        <body>Episode observations are used to distinguish among multiple occurrences of a problem or social history item. An episode observation is used to indicate that a problem act represents a new episode, distinct from other episodes of a similar concern.</body>
      </ownedComment>
      <ownedRule xmi:id="_5Uu8kBWkEd-6K-YJpbwRmQ" name="EpisodeObservationOneEntryRelationshipSUBJ" constrainedElement="_AwcXkGaKEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EBASABWlEd-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SUBJ, ccd::ProblemAct)->size() = 1&#xD;
  or self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SUBJ, ccd::SocialHistoryObservation)->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_3OelQBWlEd-6K-YJpbwRmQ" name="EpisodeObservationExistsEntryRelationshipSAS" constrainedElement="_AwcXkGaKEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3OelQRWlEd-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SAS, ccd::ProblemAct)->size() >0&#xD;
  or self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SAS, ccd::SocialHistoryObservation)->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VfYkC8uEeKnd4bldEC3WA" name="EpisodeObservationTemplateId" constrainedElement="_AwcXkGaKEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VfYkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.41')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VoigC8uEeKnd4bldEC3WA" name="EpisodeObservationClassCode" constrainedElement="_AwcXkGaKEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VoigS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VqXsC8uEeKnd4bldEC3WA" name="EpisodeObservationMoodCode" constrainedElement="_AwcXkGaKEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VqXsS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VsM4C8uEeKnd4bldEC3WA" name="EpisodeObservationStatusCode" constrainedElement="_AwcXkGaKEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VsM4S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VvQMC8uEeKnd4bldEC3WA" name="EpisodeObservationCode" constrainedElement="_AwcXkGaKEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VvQMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VxscC8uEeKnd4bldEC3WA" name="EpisodeObservationValue" constrainedElement="_AwcXkGaKEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VxscS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.code = '404684003' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_AwcXk2aKEd6Hk_bPOfEjYA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3cYVwGaKEd6Hk_bPOfEjYA" name="PatientAwareness">
      <ownedRule xmi:id="_-c6TIBWrEd-6K-YJpbwRmQ" name="PatientAwarenessParticipantRoleId" constrainedElement="_3cYVwGaKEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ch7nwBWsEd-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>self.participantRole.id->one(id : datatypes::II |&#xD;
  not id.root.oclIsUndefined())&#xD;
-- TODO compare with ClinicalDocument/recordTarget/patientRole/id</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__V0IsC8uEeKnd4bldEC3WA" name="PatientAwarenessTemplateId" constrainedElement="_3cYVwGaKEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__V0IsS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.48')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__V194C8uEeKnd4bldEC3WA" name="PatientAwarenessTypeCode" constrainedElement="_3cYVwGaKEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__V194S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.typeCode=vocab::ParticipationType::SBJ</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__V3zEC8uEeKnd4bldEC3WA" name="PatientAwarenessAwarenessCode" constrainedElement="_3cYVwGaKEd6Hk_bPOfEjYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__V3zES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.awarenessCode.oclIsUndefined() or self.awarenessCode.isNullFlavorUndefined()) implies (not self.awarenessCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_3cYVw2aKEd6Hk_bPOfEjYA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_51DLwEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7tlrAGwWEd6q29qQGU-SBA" name="FamilyHistoryObservation">
      <ownedRule xmi:id="_LVZ-kMj5EeChgrgmBsw26A" name="FamilyHistoryObservationHasSubjectPatientRelationship">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_PPHbEMj5EeChgrgmBsw26A">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_SY-H8Mj5EeChgrgmBsw26A" name="FamilyHistoryObservationRelationshipValueCode" constrainedElement="_LVZ-kMj5EeChgrgmBsw26A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_auYTsMj5EeChgrgmBsw26A">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.classCode = vocab::x_DocumentSubject::PRS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_HNYuYMj7EeChgrgmBsw26A" name="FamilyHistoryObservationHasRelatedSubjectCode" constrainedElement="_SY-H8Mj5EeChgrgmBsw26A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_KDoiwMj7EeChgrgmBsw26A">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.code->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_KswYQMj7EeChgrgmBsw26A" name="FamilyHistoryObservationRelatedSubjectCodeValueSet" constrainedElement="_HNYuYMj7EeChgrgmBsw26A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_N9fwQMj7EeChgrgmBsw26A">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.code.codeSystem = '2.16.840.1.113883.5.111'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pfG1sMj8EeChgrgmBsw26A" name="FamilyHistoryObservationHasRelatedSubjectSubject">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rCvysMj8EeChgrgmBsw26A">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.subject->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_smqcgMj8EeChgrgmBsw26A" name="FamilyHistoryObservationHasGenderCode" constrainedElement="_pfG1sMj8EeChgrgmBsw26A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-tNgMj8EeChgrgmBsw26A">
          <language>OCL</language>
          <body>not self.subject.oclIsUndefined()  implies self.subject.relatedSubject.subject.administrativeGenderCode->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_GmHUMMkVEeChgrgmBsw26A" name="FamilyHistoryObservationRelatedSubjectBirthTime" constrainedElement="_S7rEABZ1Ed-i6Lz80y5G5g">
        <ownedComment xmi:id="_9oU9EAVdEeGEVa6Nn2ESZg">
          <body>UNIMPLEMENTABLE</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_GmHUMckVEeChgrgmBsw26A">
          <language>OCL</language>
          <body>self.subject.relatedSubject.subject.birthTime->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__V5BMC8uEeKnd4bldEC3WA" name="FamilyHistoryObservationTemplateId" constrainedElement="_7tlrAGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__V5BMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.22')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WBkEC8uEeKnd4bldEC3WA" name="FamilyHistoryObservationId" constrainedElement="_7tlrAGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WBkES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WDZQC8uEeKnd4bldEC3WA" name="FamilyHistoryObservationStatusCode" constrainedElement="_7tlrAGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WDZQS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WF1gC8uEeKnd4bldEC3WA" name="FamilyHistoryObservationEffectiveTime" constrainedElement="_7tlrAGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WF1gS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WHDoC8uEeKnd4bldEC3WA" name="FamilyHistoryObservationMoodCode" constrainedElement="_7tlrAGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WHDoS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__f6f4C8uEeKnd4bldEC3WA" name="FamilyHistoryObservationAgeObservation" constrainedElement="_7tlrAGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__f6f4S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gLloC8uEeKnd4bldEC3WA" name="FamilyHistoryObservationProblemStatusObservation" constrainedElement="_7tlrAGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gLloS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::ProblemStatusObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_plaIMGwXEd6q29qQGU-SBA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__f7G8C8uEeKnd4bldEC3WA" name="getAgeObservation" isQuery="true" bodyCondition="__f7uAC8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__f7uAC8uEeKnd4bldEC3WA" name="body" constrainedElement="__f7G8C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__f7uAS8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::AgeObservation))->asSequence()->any(true).oclAsType(ccd::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__f7G8S8uEeKnd4bldEC3WA" type="_S7rEABZ1Ed-i6Lz80y5G5g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__f7G8i8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__gMMsC8uEeKnd4bldEC3WA" name="getProblemStatusObservation" isQuery="true" bodyCondition="__gMzwi8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gMzwi8uEeKnd4bldEC3WA" name="body" constrainedElement="__gMMsC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gMzwy8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::ProblemStatusObservation))->asSequence()->any(true).oclAsType(ccd::ProblemStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gMzwC8uEeKnd4bldEC3WA" type="_TrwngGaJEd6Hk_bPOfEjYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gMzwS8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9QFYgGwWEd6q29qQGU-SBA" name="FamilyHistoryOrganizer">
      <ownedRule xmi:id="_HhTCgMjzEeChgrgmBsw26A" name="FamilyHistoryOrganizerHasComponent" constrainedElement="_9QFYgGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_NzD7gMjzEeChgrgmBsw26A">
          <language>OCL</language>
          <body>self.component->size() >= 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OXCyUMjzEeChgrgmBsw26A" name="FamilyHistoryOrganizerHasFamilyHistoryObservation" constrainedElement="_9QFYgGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SO08MMjzEeChgrgmBsw26A">
          <language>OCL</language>
          <body>self.component->exists (comp : cda::Component4 | comp.observation->exists(obs : cda::Observation | obs.oclIsKindOf(ccd::FamilyHistoryObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_A1-SoMj2EeChgrgmBsw26A" name="FamilyHistoryOrganizerHasSubject" constrainedElement="_9QFYgGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EhVKEMj2EeChgrgmBsw26A">
          <language>OCL</language>
          <body>self.subject->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__NXh0MkQEeChgrgmBsw26A" name="FamilyHistoryOrganizerHasSubjectPatientRelationship">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NXh0ckQEeChgrgmBsw26A">
          <language>OCL</language>
          <body>self.subject.relatedSubject->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ae5bIMkREeChgrgmBsw26A" name="FamilyHistoryOrganizerRelationshipValueCode" constrainedElement="_LVZ-kMj5EeChgrgmBsw26A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ae5bIckREeChgrgmBsw26A">
          <language>OCL</language>
          <body>self.subject.relatedSubject.classCode = vocab::x_DocumentSubject::PRS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_B7YnQMkREeChgrgmBsw26A" name="FamilyHistoryOrganizerHasRelatedSubjectCode" constrainedElement="_SY-H8Mj5EeChgrgmBsw26A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_B7YnQckREeChgrgmBsw26A">
          <language>OCL</language>
          <body>self.subject.relatedSubject.code->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_C-wv0MkREeChgrgmBsw26A" name="FamilyHistoryOrganizerRelatedSubjectCodeValueSet" constrainedElement="_HNYuYMj7EeChgrgmBsw26A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_C-wv0ckREeChgrgmBsw26A">
          <language>OCL</language>
          <body>self.subject.relatedSubject.code.codeSystem = '2.16.840.1.113883.1.11.19579' or self.subject.relatedSubject.code.codeSystem = '2.16.840.1.113883.1.11.20.21'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_NFDqYMkREeChgrgmBsw26A" name="FamilyHistoryOrganizerHasRelatedSubjectSubject">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_NFDqYckREeChgrgmBsw26A">
          <language>OCL</language>
          <body>self.subject.relatedSubject.subject->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_GOW4UMkREeChgrgmBsw26A" name="FamilyHistoryOrganizerHasGenderCode" constrainedElement="_pfG1sMj8EeChgrgmBsw26A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_GOW4UckREeChgrgmBsw26A">
          <language>OCL</language>
          <body>self.subject.relatedSubject.subject.administrativeGenderCode->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_heDAcEjjEeCOWNbpDoETQw" name="FamilyHistoryOrganizerRelatedSubjectBirthTime" constrainedElement="_S7rEABZ1Ed-i6Lz80y5G5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oC8Q0EjjEeCOWNbpDoETQw">
          <language>OCL</language>
          <body>not self.subject.relatedSubject.subject.birthTime.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WIRwC8uEeKnd4bldEC3WA" name="FamilyHistoryOrganizerTemplateId" constrainedElement="_9QFYgGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WIRwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.23')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WQNkC8uEeKnd4bldEC3WA" name="FamilyHistoryOrganizerStatusCode" constrainedElement="_9QFYgGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WQ0oC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WSp0C8uEeKnd4bldEC3WA" name="FamilyHistoryOrganizerClassCode" constrainedElement="_9QFYgGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WSp0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryOrganizer::CLUSTER</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WT38C8uEeKnd4bldEC3WA" name="FamilyHistoryOrganizerMoodCode" constrainedElement="_9QFYgGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WT38S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gYZ8C8uEeKnd4bldEC3WA" name="FamilyHistoryOrganizerFamilyHistoryObservation" constrainedElement="_9QFYgGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gYZ8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(ccd::FamilyHistoryObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_lBDMMGwXEd6q29qQGU-SBA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="__gZBAC8uEeKnd4bldEC3WA" name="getFamilyHistoryObservations" isQuery="true" bodyCondition="__gZBAy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gZBAy8uEeKnd4bldEC3WA" name="body" constrainedElement="__gZBAC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gZBBC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::FamilyHistoryObservation)).oclAsType(ccd::FamilyHistoryObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gZBAS8uEeKnd4bldEC3WA" type="_7tlrAGwWEd6q29qQGU-SBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gZBAi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5ET7oGwWEd6q29qQGU-SBA" name="FamilyHistorySection">
      <ownedComment xmi:id="_wVqokKPREd6t_4WfM070fA" annotatedElement="_5ET7oGwWEd6q29qQGU-SBA">
        <body>This section contains data defining the patient's genetic relatives in terms of possible or relevant health risk factors that have a potential impact on the patient's healthcare risk profile.</body>
      </ownedComment>
      <ownedRule xmi:id="_x8Ma8Mj1EeChgrgmBsw26A" name="FamilyHistorySectionFamilyHistoryObsOrgs" constrainedElement="_5ET7oGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3kNzYMj1EeChgrgmBsw26A">
          <language>OCL</language>
          <body>self.entry.observation->exists(obs : cda::Observation | obs.oclIsTypeOf(ccd::FamilyHistoryObservation)) or self.entry.organizer->exists(org : cda::Organizer | org.oclIsTypeOf(ccd::FamilyHistoryOrganizer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ze9kUMjsEeChgrgmBsw26A" name="FamilyHistorySectionNoSubject" constrainedElement="_5ET7oGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1xC7sMjsEeChgrgmBsw26A">
          <language>OCL</language>
          <body>self.subject.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WVGEC8uEeKnd4bldEC3WA" name="FamilyHistorySectionTemplateId" constrainedElement="_5ET7oGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WVGES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WYwcC8uEeKnd4bldEC3WA" name="FamilyHistorySectionCode" constrainedElement="_5ET7oGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WYwcS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '10157-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WaloC8uEeKnd4bldEC3WA" name="FamilyHistorySectionTitle" constrainedElement="_5ET7oGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WaloS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WbzwC8uEeKnd4bldEC3WA" name="FamilyHistorySectionText" constrainedElement="_5ET7oGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WbzwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gXL0C8uEeKnd4bldEC3WA" name="FamilyHistorySectionFamilyHistoryOrganizer" constrainedElement="_5ET7oGwWEd6q29qQGU-SBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gXL0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(ccd::FamilyHistoryOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_h1M7QGwXEd6q29qQGU-SBA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__gXy4C8uEeKnd4bldEC3WA" name="getFamilyHistoryOrganizers" isQuery="true" bodyCondition="__gXy4y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gXy4y8uEeKnd4bldEC3WA" name="body" constrainedElement="__gXy4C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gXy5C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(ccd::FamilyHistoryOrganizer)).oclAsType(ccd::FamilyHistoryOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gXy4S8uEeKnd4bldEC3WA" type="_9QFYgGwWEd6q29qQGU-SBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gXy4i8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ht_RsHDAEd6eItyqb1FoWg" name="ResultOrganizer">
      <ownedComment xmi:id="_HwtKgK31Ed6_ioDelDcPPg" annotatedElement="_Ht_RsHDAEd6eItyqb1FoWg">
        <body>&lt;p>This clinical statement identifies set of result observations. It contains information applicable to all of the contained result observations. Result type codes categorize a result into one of several commonly accepted values (e.g., &quot;Hematology&quot;, &quot;Chemistry&quot;, &quot;Nuclear Medicine&quot;). These values are often implicit in the &lt;tt>Organizer/code&lt;/tt> (e.g., an &lt;tt>Organizer/code&lt;/tt> of &quot;complete blood count&quot; implies a &lt;tt>ResultTypeCode&lt;/tt> of &quot;Hematology&quot;). This template requires &lt;tt>Organizer/code&lt;/tt> to include a &lt;tt>ResultTypeCode&lt;/tt> either directly or as a translation of a code from some other code system.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_x4g8MBtCEd-vGNAsDUJvgw" name="ResultOrganizerCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_4XWn4BtCEd-vGNAsDUJvgw">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.1' xor self.code.codeSystem = '2.16.840.1.113883.6.96' xor self.code.codeSystem = '2.16.840.1.113883.6.12' xor self.code.codeSystem = '2.16.840.1.113883.1.11.20.16'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mSUfsBtDEd-vGNAsDUJvgw" name="ResultOrganizerComponentElement" constrainedElement="_Ht_RsHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_r4xx4BtDEd-vGNAsDUJvgw">
          <language>OCL</language>
          <body>not self.component->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_06WqoBtEEd-vGNAsDUJvgw" name="ResultOrganizerInformationSource" constrainedElement="_Ht_RsHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3HsE4BtEEd-vGNAsDUJvgw">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;
or not self.getSection().informant->isEmpty()&#xD;
or not self.getClinicalDocument().informant->isEmpty()&#xD;
or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WdB4C8uEeKnd4bldEC3WA" name="ResultOrganizerTemplateId" constrainedElement="_Ht_RsHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WdB4S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.32')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Wh6YC8uEeKnd4bldEC3WA" name="ResultOrganizerMoodCode" constrainedElement="_Ht_RsHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Wh6YS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WjIgC8uEeKnd4bldEC3WA" name="ResultOrganizerId" constrainedElement="_Ht_RsHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WjIgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WkWoC8uEeKnd4bldEC3WA" name="ResultOrganizerCode" constrainedElement="_Ht_RsHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WkWoS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WlkwC8uEeKnd4bldEC3WA" name="ResultOrganizerStatusCode" constrainedElement="_Ht_RsHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WlkwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bghAC8uEeKnd4bldEC3WA" name="ResultOrganizerResultObservation" constrainedElement="_Ht_RsHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bghAS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(ccd::ResultObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bjkUC8uEeKnd4bldEC3WA" name="ResultOrganizerSpecimen" constrainedElement="_Ht_RsHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bjkUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.specimen->exists(specimen : cda::Specimen | not specimen.oclIsUndefined() and specimen.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hZltMHDAEd6eItyqb1FoWg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="__bhvIC8uEeKnd4bldEC3WA" name="getResultObservations" isQuery="true" bodyCondition="__bhvIy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__bhvIy8uEeKnd4bldEC3WA" name="body" constrainedElement="__bhvIC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__bhvJC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::ResultObservation)).oclAsType(ccd::ResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__bhvIS8uEeKnd4bldEC3WA" type="_MQHZEHDAEd6eItyqb1FoWg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__bhvIi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MQHZEHDAEd6eItyqb1FoWg" name="ResultObservation">
      <ownedRule xmi:id="_XhWT0BtFEd-vGNAsDUJvgw" name="ResultObservationCodeValue" constrainedElement="_MQHZEHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_evjm8BtFEd-vGNAsDUJvgw">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.1' xor self.code.codeSystem = '2.16.840.1.113883.6.96' xor self.code.codeSystem = '2.16.840.1.113883.6.12'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Jnv00BtHEd-vGNAsDUJvgw" name="ResultObservationReferenceRangeRequired" constrainedElement="_MQHZEHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Oe3UwBtHEd-vGNAsDUJvgw">
          <language>OCL</language>
          <body>not self.referenceRange->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4G88BtHEd-vGNAsDUJvgw" name="ResultObservationNoObservationRangeCode" constrainedElement="_MQHZEHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qY6k0BtHEd-vGNAsDUJvgw">
          <language>OCL</language>
          <body>self.referenceRange->forAll(range : cda::ReferenceRange | range.observationRange.code.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_MZDpYBtIEd-vGNAsDUJvgw" name="ResultObservationInformationSource" constrainedElement="_MQHZEHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_QaVtgBtIEd-vGNAsDUJvgw">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;
or not self.getSection().informant->isEmpty()&#xD;
or not self.getClinicalDocument().informant->isEmpty()&#xD;
or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;
or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;
   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;
   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WmL0C8uEeKnd4bldEC3WA" name="ResultObservationTemplateId" constrainedElement="_MQHZEHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WmL0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.31')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WrEUC8uEeKnd4bldEC3WA" name="ResultObservationMoodCode" constrainedElement="_MQHZEHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WrEUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WsScC8uEeKnd4bldEC3WA" name="ResultObservationId" constrainedElement="_MQHZEHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WsScS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WtgkC8uEeKnd4bldEC3WA" name="ResultObservationEffectiveTime" constrainedElement="_MQHZEHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WtgkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WuusC8uEeKnd4bldEC3WA" name="ResultObservationStatusCode" constrainedElement="_MQHZEHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WuusS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Wv80C8uEeKnd4bldEC3WA" name="ResultObservationCode" constrainedElement="_MQHZEHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Wv80S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Wwj4C8uEeKnd4bldEC3WA" name="ResultObservationMethodCode" constrainedElement="_MQHZEHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WxK8C8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WxyAC8uEeKnd4bldEC3WA" name="ResultObservationInterpretationCode" constrainedElement="_MQHZEHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WxyAS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WzAIC8uEeKnd4bldEC3WA" name="ResultObservationValue" constrainedElement="_MQHZEHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WzAIS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_eOylIHDAEd6eItyqb1FoWg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UOVM0HDAEd6eItyqb1FoWg" name="SocialHistorySection">
      <ownedComment xmi:id="_rk6PUKPREd6t_4WfM070fA" annotatedElement="_UOVM0HDAEd6eItyqb1FoWg">
        <body>&lt;p>&#xD;
    This section contains data defining the patient's occupational, personal (e.g. lifestyle), social, and&#xD;
    environmental history and health risk factors, as well as administrative data such as marital status, race, ethnicity&#xD;
    and religious affiliation. Social history can have significant influence on a patient's physical, psychological and&#xD;
    emotional health and wellbeing so should be considered in the development of a complete record.&#xD;
&lt;/p>&#xD;
&#xD;
&lt;p>&#xD;
The ASTM CCR includes 'administrative data (ADT) such as marital status, ethnicity, nationality, and religious preferences' in the Social History section. CDA R2 differentiates between administrative data and clinical observations, supporting the former in the CDA Header and the latter in the CDA Body. As a result, it is necessary at times to populate attributes in the CDA Header, and to provide richer clinical details in the CDA Body.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2uIswMhBEeCHk-lvWGDTdA" name="SocialHistorySectionMaritalStatus" constrainedElement="_UOVM0HDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_7-OtYMhBEeCHk-lvWGDTdA">
          <language>OCL</language>
          <body>self.getClinicalDocument().recordTarget->select(r | not r.patientRole.patient.maritalStatusCode.hasContent() )->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ag6OYMhCEeCHk-lvWGDTdA" name="SocialHistorySectionReligiousAffiliation" constrainedElement="_2uIswMhBEeCHk-lvWGDTdA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Cj3koMhCEeCHk-lvWGDTdA">
          <language>OCL</language>
          <body>self.getClinicalDocument().recordTarget->select(r | not r.patientRole.patient.religiousAffiliationCode.hasContent() )->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EIjDcMhCEeCHk-lvWGDTdA" name="SocialHistorySectionPatientRace" constrainedElement="_Ag6OYMhCEeCHk-lvWGDTdA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FazVgMhCEeCHk-lvWGDTdA">
          <language>OCL</language>
          <body>self.getClinicalDocument().recordTarget->select(r | not r.patientRole.patient.raceCode.hasContent() )->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_HZOxEMhCEeCHk-lvWGDTdA" name="SocialHistorySectionPatientRaceCodeSystem" constrainedElement="_EIjDcMhCEeCHk-lvWGDTdA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_M9H3cMhCEeCHk-lvWGDTdA">
          <language>OCL</language>
          <body>self.getClinicalDocument().recordTarget->forAll(r | r.patientRole.patient.raceCode.codeSystem = '2.16.840.1.113883.5.104' )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Q7JzQMhCEeCHk-lvWGDTdA" name="SocialHistorySectionPatientEthnicity" constrainedElement="_HZOxEMhCEeCHk-lvWGDTdA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SlnJ8MhCEeCHk-lvWGDTdA">
          <language>OCL</language>
          <body>self.getClinicalDocument().recordTarget->select(r | not r.patientRole.patient.ethnicGroupCode.hasContent() )->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_TaQ6AMhCEeCHk-lvWGDTdA" name="SocialHistorySectionPatientEthnicityCodeSystem" constrainedElement="_Q7JzQMhCEeCHk-lvWGDTdA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VfQQkMhCEeCHk-lvWGDTdA">
          <language>OCL</language>
          <body>self.getClinicalDocument().recordTarget->forAll(r | r.patientRole.patient.ethnicGroupCode.codeSystem = '2.16.840.1.113883.5.50' )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__W0OQC8uEeKnd4bldEC3WA" name="SocialHistorySectionTemplateId" constrainedElement="_UOVM0HDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__W0OQS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.15')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XDe0C8uEeKnd4bldEC3WA" name="SocialHistorySectionCode" constrainedElement="_UOVM0HDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XDe0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '29762-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XF7EC8uEeKnd4bldEC3WA" name="SocialHistorySectionTitle" constrainedElement="_UOVM0HDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XF7ES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XN24C8uEeKnd4bldEC3WA" name="SocialHistorySectionText" constrainedElement="_UOVM0HDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XN24S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gDp0C8uEeKnd4bldEC3WA" name="SocialHistorySectionSocialHistoryObservation" constrainedElement="_UOVM0HDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gDp0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(ccd::SocialHistoryObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pTCVsHDAEd6eItyqb1FoWg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__gEQ4C8uEeKnd4bldEC3WA" name="getSocialHistoryObservations" isQuery="true" bodyCondition="__gEQ4y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gEQ4y8uEeKnd4bldEC3WA" name="body" constrainedElement="__gEQ4C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gEQ5C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::SocialHistoryObservation)).oclAsType(ccd::SocialHistoryObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gEQ4S8uEeKnd4bldEC3WA" type="_Wa2uwHDAEd6eItyqb1FoWg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gEQ4i8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Wa2uwHDAEd6eItyqb1FoWg" name="SocialHistoryObservation">
      <ownedRule xmi:id="_BhSYMMhAEeCHk-lvWGDTdA" name="SocialHistoryObservationCodeValueSet" constrainedElement="_Wa2uwHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_GH9oYMhAEeCHk-lvWGDTdA">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.1' or self.code.codeSystem = '2.16.840.1.113883.6.96' or self.code.codeSystem = '2.16.840.1.113883.1.11.20.18'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XPFAC8uEeKnd4bldEC3WA" name="SocialHistoryObservationTemplateId" constrainedElement="_Wa2uwHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XPFAS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.33')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XSIUC8uEeKnd4bldEC3WA" name="SocialHistoryObservationClassCode" constrainedElement="_Wa2uwHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XSIUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XTWcC8uEeKnd4bldEC3WA" name="SocialHistoryObservationId" constrainedElement="_Wa2uwHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XTWcS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XZdEC8uEeKnd4bldEC3WA" name="SocialHistoryObservationMoodCode" constrainedElement="_Wa2uwHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XZdES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XbSQC8uEeKnd4bldEC3WA" name="SocialHistoryObservationStatusCode" constrainedElement="_Wa2uwHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XbSQS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gJJYC8uEeKnd4bldEC3WA" name="SocialHistoryObservationSocialHistoryStatusObservation" constrainedElement="_Wa2uwHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gJJYS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::SocialHistoryStatusObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gKXgC8uEeKnd4bldEC3WA" name="SocialHistoryObservationEpisodeObservation" constrainedElement="_Wa2uwHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gKXgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::EpisodeObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_krQSQHDAEd6eItyqb1FoWg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__gJwcC8uEeKnd4bldEC3WA" name="getSocialHistoryStatusObservation" isQuery="true" bodyCondition="__gJwcy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gJwcy8uEeKnd4bldEC3WA" name="body" constrainedElement="__gJwcC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gJwdC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::SocialHistoryStatusObservation))->asSequence()->any(true).oclAsType(ccd::SocialHistoryStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gJwcS8uEeKnd4bldEC3WA" type="_mRUKcMhAEeCHk-lvWGDTdA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gJwci8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__gK-kC8uEeKnd4bldEC3WA" name="getEpisodeObservation" isQuery="true" bodyCondition="__gK-ky8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gK-ky8uEeKnd4bldEC3WA" name="body" constrainedElement="__gK-kC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gK-lC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::EpisodeObservation))->asSequence()->any(true).oclAsType(ccd::EpisodeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gK-kS8uEeKnd4bldEC3WA" type="_AwcXkGaKEd6Hk_bPOfEjYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gK-ki8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rJDcIHDAEd6eItyqb1FoWg" name="EncountersSection">
      <ownedComment xmi:id="_1XZEwIjwEd66cKocspyVOg" annotatedElement="_rJDcIHDAEd6eItyqb1FoWg">
        <body>&lt;p>&#xD;
    This section is used to list and describe any healthcare encounters pertinent to the patient's current&#xD;
    health status or historical health history. An Encounter is an interaction, regardless of the setting, between a&#xD;
    patient and a practitioner who is vested with primary responsibility for diagnosing, evaluating, or treating the&#xD;
    patient's condition. It may include visits, appointments, as well as non face-to-face interactions. It is also a&#xD;
    contact between a patient and a practitioner who has primary responsibility for assessing and treating the patient at a&#xD;
    given contact, exercising independent judgment. This section may contain all encounters for the time period being&#xD;
    summarized, but should include notable encounters.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="__XdugC8uEeKnd4bldEC3WA" name="EncountersSectionTemplateId" constrainedElement="_rJDcIHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XdugS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XfjsC8uEeKnd4bldEC3WA" name="EncountersSectionCode" constrainedElement="_rJDcIHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XfjsS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '46240-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Xh_8C8uEeKnd4bldEC3WA" name="EncountersSectionTitle" constrainedElement="_rJDcIHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Xh_8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XjOEC8uEeKnd4bldEC3WA" name="EncountersSectionText" constrainedElement="_rJDcIHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XjOES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__f-xUC8uEeKnd4bldEC3WA" name="EncountersSectionEncountersActivity" constrainedElement="_rJDcIHDAEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__f-xUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(ccd::EncountersActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_wbv8cHDOEd6eItyqb1FoWg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__f_YYC8uEeKnd4bldEC3WA" name="getEncountersActivities" isQuery="true" bodyCondition="__f_YYy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__f_YYy8uEeKnd4bldEC3WA" name="body" constrainedElement="__f_YYC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__f_YZC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(ccd::EncountersActivity)).oclAsType(ccd::EncountersActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__f_YYS8uEeKnd4bldEC3WA" type="_mO8KEHJWEd6cacuAk5qrhg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__f_YYi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CinbMHDPEd6eItyqb1FoWg" name="ImmunizationsSection">
      <ownedComment xmi:id="_jTB1UBtJEd-vGNAsDUJvgw">
        <body>&lt;p>The Immunizations section defines a patient's current immunization status and pertinent immunization history. The primary use case for the Immunization section is to enable communication of a patient's immunization status. The section should include current immunization status, and may contain the entire immunization history that is relevant to the period of time being summarized.&lt;/p>&#xD;
&lt;p>This section is optional, however it is strongly recommended that it be present in cases of pediatric care and in other cases when such information is available.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_ItcjAFaBEeGCdLgBm6VHOQ" name="ImmunizationsSectionHasMedicationOrSupplyActivity" constrainedElement="_CinbMHDPEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_dvKpUFaBEeGCdLgBm6VHOQ">
          <language>OCL</language>
          <body>self.getSubstanceAdministrations()->exists(activity : cda::SubstanceAdministration | activity.oclIsKindOf(ccd::MedicationActivity))&#xD;
   or self.getSupplies()->exists(activity : cda::Supply | activity.oclIsKindOf(ccd::SupplyActivity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XkcMC8uEeKnd4bldEC3WA" name="ImmunizationsSectionTemplateId" constrainedElement="_CinbMHDPEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XkcMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XnfgC8uEeKnd4bldEC3WA" name="ImmunizationsSectionCode" constrainedElement="_CinbMHDPEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XnfgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '11369-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Xp7wC8uEeKnd4bldEC3WA" name="ImmunizationsSectionTitle" constrainedElement="_CinbMHDPEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Xp7wS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XrJ4C8uEeKnd4bldEC3WA" name="ImmunizationsSectionText" constrainedElement="_CinbMHDPEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XrJ4S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__g6lcC8uEeKnd4bldEC3WA" name="ImmunizationsSectionMedicationActivity" constrainedElement="_CinbMHDPEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__g6lcS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(ccd::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__g7zkC8uEeKnd4bldEC3WA" name="ImmunizationsSectionSupplyActivity" constrainedElement="_CinbMHDPEd6eItyqb1FoWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__g7zkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(ccd::SupplyActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4l1mQFaAEeGCdLgBm6VHOQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__g7MgC8uEeKnd4bldEC3WA" name="getMedicationActivities" isQuery="true" bodyCondition="__g7Mgy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__g7Mgy8uEeKnd4bldEC3WA" name="body" constrainedElement="__g7MgC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__g7MhC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(ccd::MedicationActivity)).oclAsType(ccd::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__g7MgS8uEeKnd4bldEC3WA" type="_W6aMoHfTEd6ZeOKq_2_a9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__g7Mgi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__g8aoC8uEeKnd4bldEC3WA" name="getSupplyActivities" isQuery="true" bodyCondition="__g9Bsi8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__g9Bsi8uEeKnd4bldEC3WA" name="body" constrainedElement="__g8aoC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__g9Bsy8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(ccd::SupplyActivity)).oclAsType(ccd::SupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__g9BsC8uEeKnd4bldEC3WA" type="_dAAnAHfVEd6ZeOKq_2_a9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__g9BsS8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mO8KEHJWEd6cacuAk5qrhg" name="EncountersActivity">
      <ownedRule xmi:id="_OCVlkMK8EeCl2eGe9IRxKw" name="EncountersActivityHasIndications" constrainedElement="_mO8KEHJWEd6cacuAk5qrhg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_bI0ToMK8EeCl2eGe9IRxKw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(er : cda::EntryRelationship | er.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_efzdkMK8EeCl2eGe9IRxKw" name="EncountersActivityHasPractitioners" constrainedElement="_OCVlkMK8EeCl2eGe9IRxKw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPmNgMK8EeCl2eGe9IRxKw">
          <language>OCL</language>
          <body>self.performer->size() >= 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lNKGYMK8EeCl2eGe9IRxKw" name="EncountersActivityPractitionerRole" constrainedElement="_efzdkMK8EeCl2eGe9IRxKw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qSF_4MK8EeCl2eGe9IRxKw">
          <language>OCL</language>
          <body>self.performer.assignedEntity.code->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XsYAC8uEeKnd4bldEC3WA" name="EncountersActivityTemplateId" constrainedElement="_mO8KEHJWEd6cacuAk5qrhg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XsYAS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.21')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XwCYC8uEeKnd4bldEC3WA" name="EncountersActivityClassCode" constrainedElement="_mO8KEHJWEd6cacuAk5qrhg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XwCYS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::ENC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XxQgC8uEeKnd4bldEC3WA" name="EncountersActivityMoodCode" constrainedElement="_mO8KEHJWEd6cacuAk5qrhg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XxQgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentEncounterMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XzFsC8uEeKnd4bldEC3WA" name="EncountersActivityId" constrainedElement="_mO8KEHJWEd6cacuAk5qrhg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XzFsS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__X1h8C8uEeKnd4bldEC3WA" name="EncountersActivityEffectiveTime" constrainedElement="_mO8KEHJWEd6cacuAk5qrhg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__X1h8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__f__cC8uEeKnd4bldEC3WA" name="EncountersActivityPatientInstruction" constrainedElement="_mO8KEHJWEd6cacuAk5qrhg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__f__cS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(ccd::PatientInstruction))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gBNkS8uEeKnd4bldEC3WA" name="EncountersActivityAgeObservation" constrainedElement="_mO8KEHJWEd6cacuAk5qrhg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gBNki8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gCbsS8uEeKnd4bldEC3WA" name="EncountersActivityEncounterLocation" constrainedElement="_mO8KEHJWEd6cacuAk5qrhg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gCbsi8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(ccd::EncounterLocation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vuapUHJjEd6cacuAk5qrhg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="__gAmgC8uEeKnd4bldEC3WA" name="getPatientInstructions" isQuery="true" bodyCondition="__gAmgy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gAmgy8uEeKnd4bldEC3WA" name="body" constrainedElement="__gAmgC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gBNkC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::PatientInstruction)).oclAsType(ccd::PatientInstruction)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gAmgS8uEeKnd4bldEC3WA" type="_F9_RAMKAEd6-XpBv2uxYrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gAmgi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__gB0oC8uEeKnd4bldEC3WA" name="getAgeObservation" isQuery="true" bodyCondition="__gB0oy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gB0oy8uEeKnd4bldEC3WA" name="body" constrainedElement="__gB0oC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gCbsC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::AgeObservation))->asSequence()->any(true).oclAsType(ccd::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gB0oS8uEeKnd4bldEC3WA" type="_S7rEABZ1Ed-i6Lz80y5G5g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gB0oi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_W6aMoHfTEd6ZeOKq_2_a9g" name="MedicationActivity">
      <ownedComment xmi:id="_0hxWQIjuEd66cKocspyVOg" annotatedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <body>&lt;p>A medication activity is used to describe what is administered.&lt;/p>&#xD;
&lt;p>An indication describes the rationale for a medication activity. The indication can be an existing problem or can be a criterion that if met would warrant the activity. Criteria are typically associated with PRN (from the Latin &quot;pro re nata&quot;, meaning &quot;as needed&quot;) medications (e.g. &quot;give Medication X as needed for nausea&quot;).&lt;/p>&#xD;
&lt;p>A reaction represents an adverse event due to an administered substance. Significant reactions are to be listed in the Alerts section. Reactions in the Medications section can be used to track reactions associated with individual substance administrations or to track routine follow up to an administration (e.g. &quot;no adverse reaction 30 minutes post administration&quot;).&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_yqHDEI5qEd6x-qh9FleSiA" name="MedicationActivityMoodCode" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_yqHDEY5qEd6x-qh9FleSiA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN or self.moodCode=vocab::x_DocumentSubstanceMood::INT </body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_7aYTEOedEd-aaJELhEID-A" name="MedicationActivityHasDoseQuantityOrRateQuantity" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_BVJBUOeeEd-aaJELhEID-A">
          <language>OCL</language>
          <body>not self.doseQuantity.oclIsUndefined() or not self.rateQuantity.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lUnD4OefEd-aaJELhEID-A" name="MedicationActivityHasConsents" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rGEFIOefEd-aaJELhEID-A">
          <language>OCL</language>
          <body>self.getClinicalDocument().authorization->size() > 0 and self.getClinicalDocument().authorization.consent->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_02VFUOefEd-aaJELhEID-A" name="MedicationActivityInformationSource" constrainedElement="_IjIO0DxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_02VFUeefEd-aaJELhEID-A">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;
or not self.getSection().informant->isEmpty()&#xD;
or not self.getClinicalDocument().informant->isEmpty()&#xD;
or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;
or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;
   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;
   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_a-4ucOuKEd-HcKrkbxroPA" name="MedicationActivityHasPreconditionCriterion" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <ownedComment xmi:id="_DxJxoOuMEd-HcKrkbxroPA">
          <body>Indicates that the medication is administered only when the associated (coded or free text) criteria are met.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iYA4IOuKEd-HcKrkbxroPA">
          <language>OCL</language>
          <body>self.precondition->exists(precondition : cda::Precondition | not precondition.criterion.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_SUUgIOuMEd-HcKrkbxroPA" name="MedicationActivityHasReason" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <ownedComment xmi:id="_d4HTcOuMEd-HcKrkbxroPA">
          <body>The target of the relationship represents the indication for the activity.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WUi0UOuMEd-HcKrkbxroPA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRel : cda::EntryRelationship | entryRel.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__SV8oOuOEd-HcKrkbxroPA" name="MedicationActivityHasReasonProblem" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_O7D98OuPEd-HcKrkbxroPA">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::RSON, cda::ClinicalStatement)->forAll(target : &#xD;&#xD;
cda::ClinicalStatement | not target.oclIsUndefined() and &#xD;
  (target.oclIsKindOf(ccd::ProblemAct) or target.oclIsKindOf(ccd::ProblemObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_KmHj8Cp6EeCuGIaOlnUvyw" name="MedicationActivityHasProduct" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VrWzACp6EeCuGIaOlnUvyw">
          <language>OCL</language>
          <body>self.consumable.manufacturedProduct.oclIsKindOf(ccd::Product)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__X2wEC8uEeKnd4bldEC3WA" name="MedicationActivityTemplateId" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__X2wES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.24')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__X82sC8uEeKnd4bldEC3WA" name="MedicationActivityId" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__X82sS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__X-E0C8uEeKnd4bldEC3WA" name="MedicationActivityStatusCode" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__X-E0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__X_S8C8uEeKnd4bldEC3WA" name="MedicationActivityEffectiveTime" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__X_S8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YAhEC8uEeKnd4bldEC3WA" name="MedicationActivityMaxDoseQuantity" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YAhES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.maxDoseQuantity.oclIsUndefined() or self.maxDoseQuantity.isNullFlavorUndefined()) implies (not self.maxDoseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YBvMC8uEeKnd4bldEC3WA" name="MedicationActivityRouteCode" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YBvMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.5.112')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YELcC8uEeKnd4bldEC3WA" name="MedicationActivityDoseQuantity" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YELcS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YFZkC8uEeKnd4bldEC3WA" name="MedicationActivityRateQuantity" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YFZkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.rateQuantity.oclIsUndefined() or self.rateQuantity.isNullFlavorUndefined()) implies (not self.rateQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aAFIC8uEeKnd4bldEC3WA" name="MedicationActivityMedicationSeriesNumberObservation" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aAFIS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::MedicationSeriesNumberObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aBTQy8uEeKnd4bldEC3WA" name="MedicationActivityMedicationStatusObservation" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aBTRC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::MedicationStatusObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eC3oC8uEeKnd4bldEC3WA" name="MedicationActivityPatientInstruction" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eC3oS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(ccd::PatientInstruction) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fxV8S8uEeKnd4bldEC3WA" name="MedicationActivityPerformer" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fxV8i8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fykEC8uEeKnd4bldEC3WA" name="MedicationActivityReactionObservation" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fykES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::ReactionObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__f7uAi8uEeKnd4bldEC3WA" name="MedicationActivityProductInstance" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__f7uAy8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(ccd::ProductInstance))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sAvQsHfUEd6ZeOKq_2_a9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="__aAsMC8uEeKnd4bldEC3WA" name="getMedicationSeriesNumberObservation" isQuery="true" bodyCondition="__aBTQS8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aBTQS8uEeKnd4bldEC3WA" name="body" constrainedElement="__aAsMC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aBTQi8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::MedicationSeriesNumberObservation))->asSequence()->any(true).oclAsType(ccd::MedicationSeriesNumberObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aAsMS8uEeKnd4bldEC3WA" type="_VL2w0IiBEd66cKocspyVOg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aBTQC8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__aChYC8uEeKnd4bldEC3WA" name="getMedicationStatusObservation" isQuery="true" bodyCondition="__aChYy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aChYy8uEeKnd4bldEC3WA" name="body" constrainedElement="__aChYC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aChZC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::MedicationStatusObservation))->asSequence()->any(true).oclAsType(ccd::MedicationStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aChYS8uEeKnd4bldEC3WA" type="_lgLT4IiBEd66cKocspyVOg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aChYi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__eDesC8uEeKnd4bldEC3WA" name="getPatientInstructions" isQuery="true" bodyCondition="__eDesy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__eDesy8uEeKnd4bldEC3WA" name="body" constrainedElement="__eDesC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__eDetC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::PatientInstruction)).oclAsType(ccd::PatientInstruction)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__eDesS8uEeKnd4bldEC3WA" type="_F9_RAMKAEd6-XpBv2uxYrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__eDesi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__fzLIC8uEeKnd4bldEC3WA" name="getReactionObservations" isQuery="true" bodyCondition="__fzLIy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__fzLIy8uEeKnd4bldEC3WA" name="body" constrainedElement="__fzLIC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__fzLJC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::ReactionObservation)).oclAsType(ccd::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fzLIS8uEeKnd4bldEC3WA" type="__XC4cHrREd68l9lQ-TLEBQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fzLIi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__f88IC8uEeKnd4bldEC3WA" name="getProductInstances" isQuery="true" bodyCondition="__f88Iy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__f88Iy8uEeKnd4bldEC3WA" name="body" constrainedElement="__f88IC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__f88JC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(ccd::ProductInstance)).oclAsType(ccd::ProductInstance)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__f88IS8uEeKnd4bldEC3WA" type="_JpjIEMMVEd6-XpBv2uxYrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__f88Ii8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_dAAnAHfVEd6ZeOKq_2_a9g" name="SupplyActivity">
      <ownedComment xmi:id="_bQ-YkOebEd-aaJELhEID-A">
        <body>a supply activity is used to describe what has been dispensed.</body>
      </ownedComment>
      <ownedRule xmi:id="_bGwLcOtSEd-aaJELhEID-A" name="SupplyActivityMoodCode" constrainedElement="_W6aMoHfTEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_bGwLcetSEd-aaJELhEID-A">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN or self.moodCode=vocab::x_DocumentSubstanceMood::INT </body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_BmvqAOtUEd-aaJELhEID-A" name="SupplyActivityHasAuthor" constrainedElement="_dAAnAHfVEd6ZeOKq_2_a9g">
        <ownedComment xmi:id="_WAUyQOtUEd-aaJELhEID-A">
          <body>Indicates the prescriber.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FV1x8OtUEd-aaJELhEID-A">
          <language>OCL</language>
          <body>not self.author->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OQgm4OtUEd-aaJELhEID-A" name="SupplyActivityHasPerformer" constrainedElement="_dAAnAHfVEd6ZeOKq_2_a9g">
        <ownedComment xmi:id="_dc6foOtUEd-aaJELhEID-A">
          <body>Indicates the person dispensing the product.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ka6zkOtUEd-aaJELhEID-A">
          <language>OCL</language>
          <body>not self.performer->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_QRLeIOtUEd-aaJELhEID-A" name="SupplyActivityHasParticipantLocation" constrainedElement="_dAAnAHfVEd6ZeOKq_2_a9g">
        <ownedComment xmi:id="_6bPasOtVEd-aaJELhEID-A">
          <body>Iindicates the supply location.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_4cVeAOtVEd-aaJELhEID-A">
          <language>OCL</language>
          <body>self.participant->one(part : cda::Participant2 | part.typeCode = vocab::ParticipationType::LOC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gPNWMOtWEd-aaJELhEID-A" name="SupplyActivityInformationSource" constrainedElement="_IjIO0DxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_gPNWMetWEd-aaJELhEID-A">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;
or not self.getSection().informant->isEmpty()&#xD;
or not self.getClinicalDocument().informant->isEmpty()&#xD;
or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;
or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;
   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;
   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_s53hACp6EeCuGIaOlnUvyw" name="SupplyActivityHasProduct" constrainedElement="_dAAnAHfVEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1QRyUCp6EeCuGIaOlnUvyw">
          <language>OCL</language>
          <body>not self.product.oclIsUndefined() and self.product.oclIsKindOf(cda::Product)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YGnsC8uEeKnd4bldEC3WA" name="SupplyActivityTemplateId" constrainedElement="_dAAnAHfVEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YGnsS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.34')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YLgMC8uEeKnd4bldEC3WA" name="SupplyActivityId" constrainedElement="_dAAnAHfVEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YLgMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YMuUC8uEeKnd4bldEC3WA" name="SupplyActivityStatusCode" constrainedElement="_dAAnAHfVEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YMuUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YN8cC8uEeKnd4bldEC3WA" name="SupplyActivityEffectiveTime" constrainedElement="_dAAnAHfVEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YN8cS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (self.effectiveTime->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YPKkC8uEeKnd4bldEC3WA" name="SupplyActivityQuantity" constrainedElement="_dAAnAHfVEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YPKkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.quantity.oclIsUndefined() or self.quantity.isNullFlavorUndefined()) implies (not self.quantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YQYsC8uEeKnd4bldEC3WA" name="SupplyActivityRepeatNumber" constrainedElement="_dAAnAHfVEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YQYsS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aChZS8uEeKnd4bldEC3WA" name="SupplyActivityMedicationStatusObservation" constrainedElement="_dAAnAHfVEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aDIcC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::MedicationStatusObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eEFwC8uEeKnd4bldEC3WA" name="SupplyActivityFulfillmentInstruction" constrainedElement="_dAAnAHfVEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eEFwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(ccd::FulfillmentInstruction) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__f88JS8uEeKnd4bldEC3WA" name="SupplyActivityProductInstance" constrainedElement="_dAAnAHfVEd6ZeOKq_2_a9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__f88Ji8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(ccd::ProductInstance))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pWBhcHfVEd6ZeOKq_2_a9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="__aDvgC8uEeKnd4bldEC3WA" name="getMedicationStatusObservation" isQuery="true" bodyCondition="__aDvgy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__aDvgy8uEeKnd4bldEC3WA" name="body" constrainedElement="__aDvgC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aDvhC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::MedicationStatusObservation))->asSequence()->any(true).oclAsType(ccd::MedicationStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aDvgS8uEeKnd4bldEC3WA" type="_lgLT4IiBEd66cKocspyVOg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aDvgi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__eEs0C8uEeKnd4bldEC3WA" name="getFulfillmentInstructions" isQuery="true" bodyCondition="__eEs0y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__eEs0y8uEeKnd4bldEC3WA" name="body" constrainedElement="__eEs0C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__eEs1C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::FulfillmentInstruction)).oclAsType(ccd::FulfillmentInstruction)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__eEs0S8uEeKnd4bldEC3WA" type="_IuPLEMKAEd6-XpBv2uxYrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__eEs0i8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__f-KQC8uEeKnd4bldEC3WA" name="getProductInstances" isQuery="true" bodyCondition="__f-KQy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__f-KQy8uEeKnd4bldEC3WA" name="body" constrainedElement="__f-KQC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__f-KRC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(ccd::ProductInstance)).oclAsType(ccd::ProductInstance)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__f-KQS8uEeKnd4bldEC3WA" type="_JpjIEMMVEd6-XpBv2uxYrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__f-KQi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_PgsSAHrREd68l9lQ-TLEBQ" name="AlertsSection">
      <ownedComment xmi:id="_8qOKcKPREd6t_4WfM070fA" annotatedElement="_PgsSAHrREd68l9lQ-TLEBQ">
        <body>This section is used to list and describe any allergies, adverse reactions, and alerts that are pertinent to the patient's current or past medical history. At a minimum, currently active and any relevant historical allergies and adverse reactions should be listed.</body>
      </ownedComment>
      <ownedRule xmi:id="__YRm0C8uEeKnd4bldEC3WA" name="AlertsSectionTemplateId" constrainedElement="_PgsSAHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YRm0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YUDEC8uEeKnd4bldEC3WA" name="AlertsSectionCode" constrainedElement="_PgsSAHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YUDES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YWfUC8uEeKnd4bldEC3WA" name="AlertsSectionTitle" constrainedElement="_PgsSAHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YWfUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YXGYC8uEeKnd4bldEC3WA" name="AlertsSectionText" constrainedElement="_PgsSAHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YXtcC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eTWUC8uEeKnd4bldEC3WA" name="AlertsSectionProblemAct" constrainedElement="_PgsSAHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eTWUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(ccd::ProblemAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YiaKIHrREd68l9lQ-TLEBQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__eUkcC8uEeKnd4bldEC3WA" name="getProblemActs" isQuery="true" bodyCondition="__eUkcy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__eUkcy8uEeKnd4bldEC3WA" name="body" constrainedElement="__eUkcC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__eUkdC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::ProblemAct)).oclAsType(ccd::ProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__eUkcS8uEeKnd4bldEC3WA" type="_GgvgUDxbEd6JwqSGecoePg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__eUkci8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qV72IHrREd68l9lQ-TLEBQ" name="AlertObservation">
      <ownedRule xmi:id="_H_fwwBW5Ed-6K-YJpbwRmQ" name="AlertObservationInformationSource" constrainedElement="_IjIO0DxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_H_fwwRW5Ed-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;
or not self.getSection().informant->isEmpty()&#xD;
or not self.getClinicalDocument().informant->isEmpty()&#xD;
or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;
or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;
   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;
   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_byigoBW9Ed-6K-YJpbwRmQ" name="AlertObservationAgentRepresentation" constrainedElement="_qV72IHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_bykV0BW9Ed-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | participant.typeCode = vocab::ParticipationType::CSM )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_IEdXABW-Ed-6K-YJpbwRmQ" name="AlertObservationPlayingEntityRequired" constrainedElement="_qV72IHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_IEd-EBW-Ed-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>self.participant.participantRole.playingEntity->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-TbaQFffEeCQ8PeHNHg5Pw" name="AlertObservationAgentRepresentationVocab" constrainedElement="_byigoBW9Ed-6K-YJpbwRmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_BpqWQFfgEeCQ8PeHNHg5Pw">
          <language>OCL</language>
          <body>self.participant->one(entity : cda::Participant2 |&#xD;
  entity.typeCode = vocab::ParticipationType::CSM)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_HuDFIFfhEeCQ8PeHNHg5Pw" name="AlertObservationParticipantRoleClassCode" constrainedElement="_IEdXABW-Ed-6K-YJpbwRmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_NKeRkFfhEeCQ8PeHNHg5Pw">
          <language>OCL</language>
          <body>self.participant.participantRole->one(entity : cda::ParticipantRole |&#xD;
  entity.classCode = vocab::RoleClassRoot::MANU)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_e5Zm4FfgEeCQ8PeHNHg5Pw" name="AlertObservationPlayingEntityClassCode" constrainedElement="_qV72IHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e5Zm4VfgEeCQ8PeHNHg5Pw">
          <language>OCL</language>
          <body>self.participant.participantRole.playingEntity->one(entity : cda::PlayingEntity |&#xD;
  entity.classCode = vocab::EntityClassRoot::MMAT and not entity.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_udUAsFfgEeCQ8PeHNHg5Pw" name="AlertObservationPlayingEntityCode" constrainedElement="_e5Zm4FfgEeCQ8PeHNHg5Pw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_0WnWYFfgEeCQ8PeHNHg5Pw">
          <language>OCL</language>
          <body>self.participant.participantRole.playingEntity->one(entity : cda::PlayingEntity |  not entity.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ofo-ABXAEd-6K-YJpbwRmQ" name="AlertObservationPlayingEntityCodeVocab" constrainedElement="_qV72IHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ofplEBXAEd-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>self.participant.participantRole.playingEntity->one(entity : cda::PlayingEntity | not entity.code.oclIsUndefined() and (entity.code.codeSystem='2.16.840.1.113883.6.88' xor entity.code.codeSystem='2.16.840.1.113883.6.59'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YY7kC8uEeKnd4bldEC3WA" name="AlertObservationTemplateId" constrainedElement="_qV72IHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YY7kS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YwH8C8uEeKnd4bldEC3WA" name="AlertObservationMoodCode" constrainedElement="_qV72IHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YwvAC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Yx9IC8uEeKnd4bldEC3WA" name="AlertObservationStatusCode" constrainedElement="_qV72IHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Yx9IS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Y0ZYC8uEeKnd4bldEC3WA" name="AlertObservationEffectiveTime" constrainedElement="_qV72IHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Y0ZYS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eYO1C8uEeKnd4bldEC3WA" name="AlertObservationAlertStatusObservation" constrainedElement="_qV72IHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eYO1S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::AlertStatusObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eZc9C8uEeKnd4bldEC3WA" name="AlertObservationReactionObservation" constrainedElement="_qV72IHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eZc9S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::ReactionObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::MFST)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_9yumAHrREd68l9lQ-TLEBQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__eY14C8uEeKnd4bldEC3WA" name="getAlertStatusObservation" isQuery="true" bodyCondition="__eZc8i8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__eZc8i8uEeKnd4bldEC3WA" name="body" constrainedElement="__eY14C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__eZc8y8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::AlertStatusObservation))->asSequence()->any(true).oclAsType(ccd::AlertStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__eZc8C8uEeKnd4bldEC3WA" type="_e8n_EHrSEd68l9lQ-TLEBQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__eZc8S8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__eaEAC8uEeKnd4bldEC3WA" name="getReactionObservations" isQuery="true" bodyCondition="__earES8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__earES8uEeKnd4bldEC3WA" name="body" constrainedElement="__eaEAC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__earEi8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::ReactionObservation)).oclAsType(ccd::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__eaEAS8uEeKnd4bldEC3WA" type="__XC4cHrREd68l9lQ-TLEBQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__earEC8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__XC4cHrREd68l9lQ-TLEBQ" name="ReactionObservation">
      <ownedComment xmi:id="_CozvwDPpEeC5WtVOSkkuzw">
        <body>A reaction represents an adverse event due to an administered or exposed substance. A reaction can be defined with respect to its severity, and can have been treated by one or more interventions. Significant reactions are to be listed in the Alerts section. Reactions in the Medications section can be used to track reactions associated with individual substance administrations or to track routine follow up to an administration (e.g. &quot;no adverse reaction 30 minutes post administration&quot;).</body>
      </ownedComment>
      <ownedRule xmi:id="_VMu98DPpEeC5WtVOSkkuzw" name="ReactionObservationHasReactionIntervention" constrainedElement="__XC4cHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aeLCYDPpEeC5WtVOSkkuzw">
          <language>OCL</language>
          <body>not self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::RSON, cda::ClinicalStatement)->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__CX4MBXNEd-6K-YJpbwRmQ" name="ReactionObservationReactionInterventionTypeCode" constrainedElement="__XC4cHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_IrUIYBXOEd-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(entry | entry.typeCode &lt;> vocab::x_ActRelationshipEntryRelationship::RSON  or ( entry.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON and (entry.act->isEmpty() and entry.procedure->isEmpty()  ) ) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OgP7cBXOEd-6K-YJpbwRmQ" name="ReactionObservationReactionInterventionType" constrainedElement="__XC4cHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLkWoBXOEd-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::RSON, cda::ClinicalStatement)->exists(entry : cda::ClinicalStatement | entry.oclIsKindOf(ccd::ProcedureActivity) or entry.oclIsKindOf(ccd::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Y548C8uEeKnd4bldEC3WA" name="ReactionObservationTemplateId" constrainedElement="__XC4cHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Y548S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.54')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Y9jUC8uEeKnd4bldEC3WA" name="ReactionObservationClassCode" constrainedElement="__XC4cHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Y9jUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Y-xcC8uEeKnd4bldEC3WA" name="ReactionObservationMoodCode" constrainedElement="__XC4cHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Y-xcS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZAmoC8uEeKnd4bldEC3WA" name="ReactionObservationStatusCode" constrainedElement="__XC4cHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZAmoS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__earEy8uEeKnd4bldEC3WA" name="ReactionObservationSeverityObservation" constrainedElement="__XC4cHrREd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__earFC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::SeverityObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PipkYHrSEd68l9lQ-TLEBQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__ebSIC8uEeKnd4bldEC3WA" name="getSeverityObservation" isQuery="true" bodyCondition="__ebSIy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__ebSIy8uEeKnd4bldEC3WA" name="body" constrainedElement="__ebSIC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__ebSJC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::SeverityObservation))->asSequence()->any(true).oclAsType(ccd::SeverityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__ebSIS8uEeKnd4bldEC3WA" type="_ILkpIHrSEd68l9lQ-TLEBQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__ebSIi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ILkpIHrSEd68l9lQ-TLEBQ" name="SeverityObservation">
      <ownedRule xmi:id="__ZDC4C8uEeKnd4bldEC3WA" name="SeverityObservationTemplateId" constrainedElement="_ILkpIHrSEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZDC4S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.55')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZE4EC8uEeKnd4bldEC3WA" name="SeverityObservationClassCode" constrainedElement="_ILkpIHrSEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZE4ES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZGGMC8uEeKnd4bldEC3WA" name="SeverityObservationMoodCode" constrainedElement="_ILkpIHrSEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZGGMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZH7YC8uEeKnd4bldEC3WA" name="SeverityObservationCode" constrainedElement="_ILkpIHrSEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZH7YS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'SEV' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZK-sC8uEeKnd4bldEC3WA" name="SeverityObservationStatusCode" constrainedElement="_ILkpIHrSEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZK-sS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZNa8C8uEeKnd4bldEC3WA" name="SeverityObservationValue" constrainedElement="_ILkpIHrSEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZNa8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QQ4jYHrSEd68l9lQ-TLEBQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_e8n_EHrSEd68l9lQ-TLEBQ" name="AlertStatusObservation">
      <ownedRule xmi:id="__ZOpES8uEeKnd4bldEC3WA" name="StatusObservationTemplateId" constrainedElement="_e8n_EHrSEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZOpEi8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.39')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_b0MZEHrTEd68l9lQ-TLEBQ" general="_V3Jy4HrTEd68l9lQ-TLEBQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_V3Jy4HrTEd68l9lQ-TLEBQ" name="StatusObservation">
      <ownedRule xmi:id="_ds-BoCTrEeCvyarv2dSCoQ" name="StatusObservationTargetOfEntryRelationship" constrainedElement="_V3Jy4HrTEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sqmekCTrEeCvyarv2dSCoQ">
          <language>OCL</language>
          <body>self.validateTargetOfEntryRelationship()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_xgaWkBWiEd-6K-YJpbwRmQ" name="StatusObservationNoAdditionalParticipants" constrainedElement="_V3Jy4HrTEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1O1JEBWiEd-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>self.participant->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_6Q6i4BWiEd-6K-YJpbwRmQ" name="StatusObservationNoAdditionalRelationships" constrainedElement="_V3Jy4HrTEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EcjUBWiEd-6K-YJpbwRmQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er|not er.observation.oclIsUndefined())->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZRFUC8uEeKnd4bldEC3WA" name="StatusObservationTemplateId" constrainedElement="_V3Jy4HrTEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZRsYC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.57')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZUvsC8uEeKnd4bldEC3WA" name="StatusObservationClassCode" constrainedElement="_V3Jy4HrTEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZUvsS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZV90C8uEeKnd4bldEC3WA" name="StatusObservationMoodCode" constrainedElement="_V3Jy4HrTEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZV90S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZXzAC8uEeKnd4bldEC3WA" name="StatusObservationCode" constrainedElement="_V3Jy4HrTEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZXzAS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '33999-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZaPQC8uEeKnd4bldEC3WA" name="StatusObservationStatusCode" constrainedElement="_V3Jy4HrTEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZaPQS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZcrgC8uEeKnd4bldEC3WA" name="StatusObservationValue" constrainedElement="_V3Jy4HrTEd68l9lQ-TLEBQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZcrgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CE)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_s4YvUHrSEd68l9lQ-TLEBQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_kbkwkECAEeGZAN_vR_BCDQ" name="validateTargetOfEntryRelationship" isQuery="true">
        <ownedParameter xmi:id="_oAdMkECAEeGZAN_vR_BCDQ" name="return" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_joG2YIHbEd6Ncrr6L3Ublw" name="CauseOfDeathObservation">
      <ownedRule xmi:id="__Zd5oC8uEeKnd4bldEC3WA" name="FamilyHistoryObservationTemplateId" constrainedElement="_joG2YIHbEd6Ncrr6L3Ublw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Zd5oS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.42')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_my2UEIHbEd6Ncrr6L3Ublw" general="_7tlrAGwWEd6q29qQGU-SBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7TVToIiAEd66cKocspyVOg" name="ResultsSection">
      <ownedComment xmi:id="_yswHoIjpEd66cKocspyVOg" annotatedElement="_7TVToIiAEd66cKocspyVOg">
        <body>&lt;p>&#xD;
    This section contains the results of observations generated by laboratories, imaging procedures, and&#xD;
    other procedures. The scope includes hematology, chemistry, serology, virology, toxicology, microbiology, plain x-ray,&#xD;
    ultrasound, CT, MRI, angiography, cardiac echo, nuclear medicine, pathology, and procedure observations. The section&#xD;
    may contain all results for the period of time being summarized, but should include notable results such as abnormal&#xD;
    values or relevant trends.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Lab results are typically generated by laboratories providing analytic services in areas such as&#xD;
    chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These&#xD;
    observations are based on analysis of specimens obtained from the patient, submitted to the lab.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Imaging results are typically generated by a clinician reviewing the output of an imaging procedure,&#xD;
    such as where a cardiologist reports the left ventricular ejection fraction based on the review of a cardiac&#xD;
    echo.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Procedure results are typically generated by a clinician wanting to provide more granular information&#xD;
    about component observations made during the performance of a procedure, such as where a gastroenterologist reports the&#xD;
    size of a polyp observed during a colonoscopy.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="__ZfHwC8uEeKnd4bldEC3WA" name="ResultsSectionTemplateId" constrainedElement="_7TVToIiAEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZfHwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZhkAC8uEeKnd4bldEC3WA" name="ResultsSectionCode" constrainedElement="_7TVToIiAEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZhkAS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '30954-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZjZMC8uEeKnd4bldEC3WA" name="ResultsSectionTitle" constrainedElement="_7TVToIiAEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZkAQC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZlOYC8uEeKnd4bldEC3WA" name="ResultsSectionText" constrainedElement="_7TVToIiAEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZlOYS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__biWMC8uEeKnd4bldEC3WA" name="ResultsSectionResultOrganizer" constrainedElement="_7TVToIiAEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__biWMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(ccd::ResultOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-vG7sIjoEd66cKocspyVOg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__bi9QC8uEeKnd4bldEC3WA" name="getResultOrganizers" isQuery="true" bodyCondition="__bi9Qy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__bi9Qy8uEeKnd4bldEC3WA" name="body" constrainedElement="__bi9QC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__bi9RC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(ccd::ResultOrganizer)).oclAsType(ccd::ResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__bi9QS8uEeKnd4bldEC3WA" type="_Ht_RsHDAEd6eItyqb1FoWg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__bi9Qi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VL2w0IiBEd66cKocspyVOg" name="MedicationSeriesNumberObservation">
      <ownedComment xmi:id="_NUpzUIjqEd66cKocspyVOg" annotatedElement="_VL2w0IiBEd66cKocspyVOg">
        <body>&lt;p>&#xD;
    The medication series number observation can be used to indicate which in a series of administrations a&#xD;
    particular administration represents (e.g. &quot;hepatitis B vaccine number 2 was administered on Feb 07, 2004).&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="__ZmcgC8uEeKnd4bldEC3WA" name="MedicationSeriesNumberObservationTemplateId" constrainedElement="_VL2w0IiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZmcgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.46')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZnqoC8uEeKnd4bldEC3WA" name="MedicationSeriesNumberObservationClassCode" constrainedElement="_VL2w0IiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZnqoS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Zpf0C8uEeKnd4bldEC3WA" name="MedicationSeriesNumberObservationMoodCode" constrainedElement="_VL2w0IiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Zpf0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Zqt8C8uEeKnd4bldEC3WA" name="MedicationSeriesNumberObservationStatusCode" constrainedElement="_VL2w0IiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Zqt8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZsjIC8uEeKnd4bldEC3WA" name="MedicationSeriesNumberObservationCode" constrainedElement="_VL2w0IiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZsjIS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '30973-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZuYUC8uEeKnd4bldEC3WA" name="MedicationSeriesNumberObservationValue" constrainedElement="_VL2w0IiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZuYUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ciR0EIjqEd66cKocspyVOg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lgLT4IiBEd66cKocspyVOg" name="MedicationStatusObservation">
      <ownedRule xmi:id="__ZwNgC8uEeKnd4bldEC3WA" name="StatusObservationTemplateId" constrainedElement="_lgLT4IiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZwNgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.47')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_dKuUIIjqEd66cKocspyVOg" general="_V3Jy4HrTEd68l9lQ-TLEBQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2QJRIIiBEd66cKocspyVOg" name="EncounterLocation">
      <ownedRule xmi:id="_Nnza8FS5EeCnnNnsbG2N3Q" name="EncounterLocationHasParticipantRole">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Tnu9EFS5EeCnnNnsbG2N3Q">
          <language>OCL</language>
          <body>self.participantRole->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_w0p4UFS7EeCnnNnsbG2N3Q" name="EncounterLocationHasParticipantRoleLocation" constrainedElement="_Nnza8FS5EeCnnNnsbG2N3Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_0VSGcFS7EeCnnNnsbG2N3Q">
          <language>OCL</language>
          <body>self.participantRole.classCode =  vocab::RoleClassRoot::SDLOC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_9iVr4FS7EeCnnNnsbG2N3Q" name="EncounterLocationHasParticipantRoleCode" constrainedElement="_w0p4UFS7EeCnnNnsbG2N3Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ARR-YFS8EeCnnNnsbG2N3Q">
          <language>OCL</language>
          <body>self.participantRole.code->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_4hhn8FS8EeCnnNnsbG2N3Q" name="EncounterLocationHasParticipantRoleCodeVocab" constrainedElement="_9iVr4FS7EeCnnNnsbG2N3Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_7i01wFS8EeCnnNnsbG2N3Q">
          <language>OCL</language>
          <body>self.participantRole.code.codeSystem = '2.16.840.1.113883.5.111'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__JhPoFS8EeCnnNnsbG2N3Q" name="EncounterLocationHasPlayingEntity" constrainedElement="_4hhn8FS8EeCnnNnsbG2N3Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FaqdkFS9EeCnnNnsbG2N3Q">
          <language>OCL</language>
          <body>self.participantRole.playingEntity->size()>0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_FqxWIFS9EeCnnNnsbG2N3Q" name="EncounterLocationHasPlayingEntityPlace" constrainedElement="__JhPoFS8EeCnnNnsbG2N3Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_J6zn8FS9EeCnnNnsbG2N3Q">
          <language>OCL</language>
          <body>self.participantRole.playingEntity.classCode = vocab::EntityClassRoot::PLC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZypwC8uEeKnd4bldEC3WA" name="EncounterLocationTemplateId" constrainedElement="_2QJRIIiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZypwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Z27MC8uEeKnd4bldEC3WA" name="EncounterLocationTypeCode" constrainedElement="_2QJRIIiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Z27MS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.typeCode=vocab::ParticipationType::LOC</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_lD-rMIjxEd66cKocspyVOg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_51DLwEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_8Xj7UIiBEd66cKocspyVOg" name="Product">
      <ownedRule xmi:id="_jDZ8wCp7EeCuGIaOlnUvyw" name="ProductHasMaterial" constrainedElement="_8Xj7UIiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kz1esC2TEeCrtaini_hOYQ">
          <language>OCL</language>
          <body>not self.manufacturedMaterial.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nem8wCp7EeCuGIaOlnUvyw" name="ProductHasMaterialCode" constrainedElement="_8Xj7UIiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_x-aCkC2TEeCrtaini_hOYQ">
          <language>OCL</language>
          <body>not self.manufacturedMaterial.code.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_s4BRcCp7EeCuGIaOlnUvyw" name="ProductHasMaterialCodeVocab" constrainedElement="_8Xj7UIiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_V68X0C2TEeCrtaini_hOYQ">
          <language>OCL</language>
          <body>self.manufacturedMaterial.code.codeSystem = '2.16.840.1.113883.6.88' or self.manufacturedMaterial.code.codeSystem='2.16.840.1.113883.6.59' or self.manufacturedMaterial.code.codeSystem='2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3RyMC2WEeCrtaini_hOYQ" name="ProductHasMaterialCodeOriginalText" constrainedElement="_8Xj7UIiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_5FAxgC2WEeCrtaini_hOYQ">
          <language>OCL</language>
          <body>not self.manufacturedMaterial.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Je8NUC2XEeCrtaini_hOYQ" name="ProductHasMaterialName" constrainedElement="_8Xj7UIiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_PM9gEC2XEeCrtaini_hOYQ">
          <language>OCL</language>
          <body>not self.manufacturedMaterial.name.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_HyK-8D6tEeCAHY6aowfd8Q" name="ProductMayHaveMaterialManufacturer" constrainedElement="_8Xj7UIiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Q-Y24D6tEeCAHY6aowfd8Q">
          <language>OCL</language>
          <body>self.manufacturerOrganization->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_T-9E4D6tEeCAHY6aowfd8Q" name="ProductShouldHaveMaterialManufacturer" constrainedElement="_8Xj7UIiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_xDWoMD6tEeCAHY6aowfd8Q">
          <language>OCL</language>
          <body>self.id->size() > 0 implies self.manufacturerOrganization->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Z4JUC8uEeKnd4bldEC3WA" name="ProductTemplateId" constrainedElement="_8Xj7UIiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Z4wYC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.53')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Z-3AC8uEeKnd4bldEC3WA" name="ProductId" constrainedElement="_8Xj7UIiBEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Z-3AS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zWedQIjtEd66cKocspyVOg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_p6Zs8EcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_p_LEwIjvEd66cKocspyVOg" name="ProceduresSection">
      <ownedComment xmi:id="_p_LEwYjvEd66cKocspyVOg" annotatedElement="_p_LEwIjvEd66cKocspyVOg">
        <body>&lt;p>&#xD;
    This section defines all interventional, surgical, diagnostic, or therapeutic procedures or treatments&#xD;
    pertinent to the patient historically at the time the document is generated. The section may contain all procedures for&#xD;
    the period of time being summarized, but should include notable procedures.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_0FmDsFQCEeCl3PxyJ8BBuQ" name="ProceduresSectionHasProcedureActivity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_8CtrQFQCEeCl3PxyJ8BBuQ">
          <language>OCL</language>
          <body>not self.entry->select(e | e.act.oclIsKindOf(ccd::ProcedureActivity))->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aDvhS8uEeKnd4bldEC3WA" name="ProceduresSectionTemplateId" constrainedElement="_p_LEwIjvEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aDvhi8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aGy0C8uEeKnd4bldEC3WA" name="ProceduresSectionCode" constrainedElement="_p_LEwIjvEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aGy0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '47519-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aIoAC8uEeKnd4bldEC3WA" name="ProceduresSectionTitle" constrainedElement="_p_LEwIjvEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aIoAS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aJ2IC8uEeKnd4bldEC3WA" name="ProceduresSectionText" constrainedElement="_p_LEwIjvEd66cKocspyVOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aJ2IS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_p_LEwojvEd66cKocspyVOg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_o9nLAKPTEd6t_4WfM070fA" name="PlanOfCareSection">
      <ownedComment xmi:id="_Stjz4KPUEd6t_4WfM070fA" annotatedElement="_o9nLAKPTEd6t_4WfM070fA">
        <body>&lt;p>&#xD;
    The plan of care section contains data defining pending orders, interventions, encounters, services, and&#xD;
    procedures for the patient. It is limited to prospective, unfulfilled, or incomplete orders and requests only. All&#xD;
    active, incomplete, or pending orders, appointments, referrals, procedures, services, or any other pending event of&#xD;
    clinical significance to the current and ongoing care of the patient should be listed, unless constrained due to issues&#xD;
    of privacy.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The plan of care section also contains information regarding goals and clinical reminders. Clinical&#xD;
    reminders are placed here for purposes of providing prompts that may be used for disease prevention, disease&#xD;
    management, patient safety, and healthcare quality improvements, including widely accepted performance measures.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="__aVcUC8uEeKnd4bldEC3WA" name="PlanOfCareSectionTemplateId" constrainedElement="_o9nLAKPTEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aVcUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aXRgC8uEeKnd4bldEC3WA" name="PlanOfCareSectionCode" constrainedElement="_o9nLAKPTEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aXRgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '18776-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aZGsC8uEeKnd4bldEC3WA" name="PlanOfCareSectionTitle" constrainedElement="_o9nLAKPTEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aZtwC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aa74C8uEeKnd4bldEC3WA" name="PlanOfCareSectionText" constrainedElement="_o9nLAKPTEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aa74S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e-rwC8uEeKnd4bldEC3WA" name="PlanOfCareSectionPlanOfCareActivityAct" constrainedElement="_o9nLAKPTEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e-rwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(ccd::PlanOfCareActivityAct))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e_54C8uEeKnd4bldEC3WA" name="PlanOfCareSectionPlanOfCareActivityEncounter" constrainedElement="_o9nLAKPTEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e_54S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(ccd::PlanOfCareActivityEncounter))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fBIAy8uEeKnd4bldEC3WA" name="PlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_o9nLAKPTEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fBIBC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(ccd::PlanOfCareActivityObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fC9MC8uEeKnd4bldEC3WA" name="PlanOfCareSectionPlanOfCareActivityProcedure" constrainedElement="_o9nLAKPTEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fC9MS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(ccd::PlanOfCareActivityProcedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fELUC8uEeKnd4bldEC3WA" name="PlanOfCareSectionPlanOfCareActivitySubstanceAdministration" constrainedElement="_o9nLAKPTEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fELUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(ccd::PlanOfCareActivitySubstanceAdministration))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fFZcC8uEeKnd4bldEC3WA" name="PlanOfCareSectionPlanOfCareActivitySupply" constrainedElement="_o9nLAKPTEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fFZcS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(ccd::PlanOfCareActivitySupply))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Hub4KPTEd6t_4WfM070fA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_3EUUgDhTEd-XUbK0vNqSPQ" name="getPlanOfCareActivities">
        <ownedParameter xmi:id="_8B2lgDhTEd-XUbK0vNqSPQ" name="return" type="_gXwH4DhREd-XUbK0vNqSPQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-swskDhTEd-XUbK0vNqSPQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-sxToDhTEd-XUbK0vNqSPQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__e_S0C8uEeKnd4bldEC3WA" name="getPlanOfCareActivityAct" isQuery="true" bodyCondition="__e_S0y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__e_S0y8uEeKnd4bldEC3WA" name="body" constrainedElement="__e_S0C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__e_S1C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::PlanOfCareActivityAct))->asSequence()->any(true).oclAsType(ccd::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__e_S0S8uEeKnd4bldEC3WA" type="_azWbgMJuEd6-XpBv2uxYrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__e_S0i8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__fAg8C8uEeKnd4bldEC3WA" name="getPlanOfCareActivityEncounter" isQuery="true" bodyCondition="__fBIAS8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__fBIAS8uEeKnd4bldEC3WA" name="body" constrainedElement="__fAg8C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__fBIAi8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(ccd::PlanOfCareActivityEncounter))->asSequence()->any(true).oclAsType(ccd::PlanOfCareActivityEncounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fAg8S8uEeKnd4bldEC3WA" type="_EGZnsDHmEd-saqiXO4OYhQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fBIAC8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__fCWIC8uEeKnd4bldEC3WA" name="getPlanOfCareActivityObservation" isQuery="true" bodyCondition="__fCWIy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__fCWIy8uEeKnd4bldEC3WA" name="body" constrainedElement="__fCWIC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__fCWJC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::PlanOfCareActivityObservation))->asSequence()->any(true).oclAsType(ccd::PlanOfCareActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fCWIS8uEeKnd4bldEC3WA" type="_7I79cDHlEd-saqiXO4OYhQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fCWIi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__fDkQC8uEeKnd4bldEC3WA" name="getPlanOfCareActivityProcedure" isQuery="true" bodyCondition="__fDkQy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__fDkQy8uEeKnd4bldEC3WA" name="body" constrainedElement="__fDkQC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__fDkRC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(ccd::PlanOfCareActivityProcedure))->asSequence()->any(true).oclAsType(ccd::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fDkQS8uEeKnd4bldEC3WA" type="_1z0WEDHpEd-saqiXO4OYhQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fDkQi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__fEyYC8uEeKnd4bldEC3WA" name="getPlanOfCareActivitySubstanceAdministration" isQuery="true" bodyCondition="__fEyYy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__fEyYy8uEeKnd4bldEC3WA" name="body" constrainedElement="__fEyYC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__fEyZC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(ccd::PlanOfCareActivitySubstanceAdministration))->asSequence()->any(true).oclAsType(ccd::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fEyYS8uEeKnd4bldEC3WA" type="_9Yav8DHpEd-saqiXO4OYhQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fEyYi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__fGAgC8uEeKnd4bldEC3WA" name="getPlanOfCareActivitySupply" isQuery="true" bodyCondition="__fGAgy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__fGAgy8uEeKnd4bldEC3WA" name="body" constrainedElement="__fGAgC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__fGAhC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(ccd::PlanOfCareActivitySupply))->asSequence()->any(true).oclAsType(ccd::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fGAgS8uEeKnd4bldEC3WA" type="_A9YrgDHqEd-saqiXO4OYhQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fGAgi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GKpeMKPaEd6t_4WfM070fA" name="VitalSignsSection">
      <ownedComment xmi:id="_WyxuEKPaEd6t_4WfM070fA" annotatedElement="_GKpeMKPaEd6t_4WfM070fA">
        <body>&lt;p>&#xD;
    This section contains current and historically relevant vital signs, such as blood pressure, heart rate,&#xD;
    respiratory rate, height, weight, body mass index, head circumference, crown-to-rump length, and pulse oximetry. The&#xD;
    section may contain all vital signs for the period of time being summarized, but at a minimum should include notable&#xD;
    vital signs such as the most recent, maximum and/or minimum, or both, baseline, or relevant trends.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Vital signs are represented like other results (as defined in &lt;b>&lt;i>Results&#xD;
    Section&lt;/i>&lt;/b>) with additional vocabulary constraints, but are aggregated into their own section in order to follow clinical&#xD;
    conventions.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="__aemQi8uEeKnd4bldEC3WA" name="VitalSignsSectionTemplateId" constrainedElement="_GKpeMKPaEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aemQy8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.16')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__agbcC8uEeKnd4bldEC3WA" name="VitalSignsSectionCode" constrainedElement="_GKpeMKPaEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__agbcS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '8716-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ai3sC8uEeKnd4bldEC3WA" name="VitalSignsSectionTitle" constrainedElement="_GKpeMKPaEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ai3sS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__akF0C8uEeKnd4bldEC3WA" name="VitalSignsSectionText" constrainedElement="_GKpeMKPaEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__akF0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bfS4C8uEeKnd4bldEC3WA" name="VitalSignsSectionVitalSignsOrganizer" constrainedElement="_GKpeMKPaEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bfS4S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(ccd::VitalSignsOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_aEDRkKPaEd6t_4WfM070fA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__bf58C8uEeKnd4bldEC3WA" name="getVitalSignsOrganizers" isQuery="true" bodyCondition="__bf58y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__bf58y8uEeKnd4bldEC3WA" name="body" constrainedElement="__bf58C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__bf59C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(ccd::VitalSignsOrganizer)).oclAsType(ccd::VitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__bf58S8uEeKnd4bldEC3WA" type="_wN4O0K3zEd6_ioDelDcPPg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__bf58i8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5hfTYKPbEd6t_4WfM070fA" name="MedicalEquipmentSection">
      <ownedComment xmi:id="_fMDbQKPcEd6t_4WfM070fA" annotatedElement="_5hfTYKPbEd6t_4WfM070fA">
        <body>&lt;p>&#xD;
    The Medical Equipment section defines a patient's implanted and external medical devices and equipment&#xD;
    that their health status depends on, as well as any pertinent equipment or device history. This section is also used to&#xD;
    itemize any pertinent current or historical durable medical equipment (DME) used to help maintain the patient's health&#xD;
    status. All pertinent equipment relevant to the diagnosis, care, and treatment of a patient should be included.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="__anJIC8uEeKnd4bldEC3WA" name="MedicalEquipmentSectionTemplateId" constrainedElement="_5hfTYKPbEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__anJIS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ao-UC8uEeKnd4bldEC3WA" name="MedicalEquipmentSectionCode" constrainedElement="_5hfTYKPbEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ao-US8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '46264-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__arakC8uEeKnd4bldEC3WA" name="MedicalEquipmentSectionTitle" constrainedElement="_5hfTYKPbEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__arakS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__asBoC8uEeKnd4bldEC3WA" name="MedicalEquipmentSectionText" constrainedElement="_5hfTYKPbEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__asBoS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gMzxC8uEeKnd4bldEC3WA" name="MedicalEquipmentSectionSupplyActivity" constrainedElement="_5hfTYKPbEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gMzxS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(ccd::SupplyActivity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gOo8C8uEeKnd4bldEC3WA" name="MedicalEquipmentSectionMedicationActivity" constrainedElement="_5hfTYKPbEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gOo8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(ccd::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-eFwQKPbEd6t_4WfM070fA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__gOB4C8uEeKnd4bldEC3WA" name="getSupplyActivities" isQuery="true" bodyCondition="__gOB4y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gOB4y8uEeKnd4bldEC3WA" name="body" constrainedElement="__gOB4C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gOB5C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(ccd::SupplyActivity)).oclAsType(ccd::SupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gOB4S8uEeKnd4bldEC3WA" type="_dAAnAHfVEd6ZeOKq_2_a9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gOB4i8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__gPQAC8uEeKnd4bldEC3WA" name="getMedicationActivities" isQuery="true" bodyCondition="__gPQAy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gPQAy8uEeKnd4bldEC3WA" name="body" constrainedElement="__gPQAC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gPQBC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(ccd::MedicationActivity)).oclAsType(ccd::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gPQAS8uEeKnd4bldEC3WA" type="_W6aMoHfTEd6ZeOKq_2_a9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gPQAi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GoctIKPdEd6t_4WfM070fA" name="FunctionalStatusSection">
      <ownedComment xmi:id="_nhwsgKPdEd6t_4WfM070fA" annotatedElement="_GoctIKPdEd6t_4WfM070fA">
        <body>&lt;p>&#xD;
    &lt;i>Functional Status&lt;/i> describes the patient's status of normal functioning at the time the Care Record&#xD;
    was created. Functional statuses include information regarding the patient relative to:&#xD;
&lt;/p>&#xD;
&#xD;
    &lt;ul>&lt;li>Ambulatory ability&lt;/li>&#xD;
       &lt;li>Mental status or competency&lt;/li>&#xD;
        &lt;li>Activities of Daily Living (ADLs), including bathing, dressing, feeding, grooming&lt;/li>&#xD;
        &lt;li>Home / living situation having an effect on the health status of the patient&lt;/li>&#xD;
        &lt;li>Ability to care for self&lt;/li>&#xD;
        &lt;li>Social activity, including issues with social cognition, participation with&#xD;
        friends and acquaintances other than family members&lt;/li>&#xD;
       &lt;li>Occupation activity, including activities partly or directly related to working, housework or volunteering, family&#xD;
        and home responsibilities or activities related to home and family&lt;/li>&#xD;
      &lt;li>Communication ability, including issues with speech, writing or cognition required for communication&lt;/li>&#xD;
       &lt;li> Perception, including sight, hearing, taste, skin sensation, kinesthetic sense, proprioception, or&#xD;
        balance&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Any&#xD;
    deviation from normal function that the patient displays and is recorded in the record should be included. Of&#xD;
    particular interest are those limitations that would in any way interfere with self care or the medical therapeutic&#xD;
    process. In addition, an improvement, any change in or noting that the patient has normal functioning status is also&#xD;
    valid for inclusion.&#xD;
&lt;/p>&#xD;
&lt;p>Functional Statuses can be expressed in 3 different forms. They can occur as a Problem, a Result or as text. Text can be employed if and only if the Functional Status is neither a Problem nor a Result. Functional Statuses expressed as Problems include relevant clinical conditions, diagnoses, symptoms and findings. Results are the interpretation or conclusion derived from a clinical assessment or test battery, such as the Instrumental Activities of Daily Living (IADL) scale or the Functional Status Index (FSI).&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2CeMQHfpEd-6wJLq2P_7OA" name="FunctionalStatusSectionClinicalStatements" constrainedElement="_GoctIKPdEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kackHfpEd-6wJLq2P_7OA">
          <language>OCL</language>
          <body>self.getEntryTargets(ccd::ProblemAct)->size() > 0&#xD;
  or self.getEntryTargets(ccd::ResultOrganizer)->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_CX4yYMgnEeCHk-lvWGDTdA" name="FunctionalStatusSectionObservationCode" constrainedElement="_GoctIKPdEd6t_4WfM070fA">
        <ownedComment xmi:id="_koUoMAC7EeGr8LMv5XjMCA">
          <body>UNIMPLEMENTABLE</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FpXKMMgnEeCHk-lvWGDTdA">
          <language>OCL</language>
          <body>self.getObservations()->select(obs : cda::Observation | obs.oclIsKindOf(ccd::ProblemObservation) or obs.oclIsKindOf(ccd::ResultObservation))->forAll(ob : cda::Observation| ob.code->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_dO-JkMgnEeCHk-lvWGDTdA" name="FunctionalStatusSectionObservationCodeValueSet" constrainedElement="_CX4yYMgnEeCHk-lvWGDTdA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_grmBcMgnEeCHk-lvWGDTdA">
          <language>OCL</language>
          <body>self.getObservations()->select(obs : cda::Observation | obs.oclIsKindOf(ccd::ProblemObservation) or obs.oclIsKindOf(ccd::ResultObservation))->forAll(ob : cda::Observation| ob.code.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_NfOkIMgwEeCHk-lvWGDTdA" name="FunctionalStatusSectionValueDatatype">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_RlEYIMgwEeCHk-lvWGDTdA">
          <language>OCL</language>
          <body>self.getObservations()->select(o | o.value->select(v | v.oclIsKindOf(datatypes::CD)  or  v.oclIsKindOf(datatypes::CE) ) ->isEmpty())->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Uhno0MgwEeCHk-lvWGDTdA" name="FunctionalStatusSectionIcfCodeSystem" constrainedElement="_NfOkIMgwEeCHk-lvWGDTdA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_XtiyQMgwEeCHk-lvWGDTdA">
          <language>OCL</language>
          <body>self.getObservations()->select(o|o.code.codeSystem &lt;> '2.16.840.1.113883.6.254')->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kzswMMgwEeCHk-lvWGDTdA" name="FunctionalStatusSectionProblemStatusObservation" constrainedElement="_Uhno0MgwEeCHk-lvWGDTdA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qcbTQMgwEeCHk-lvWGDTdA">
          <language>OCL</language>
          <body>self.getObservations()->select(obs : cda::Observation | (obs.oclIsKindOf(ccd::ResultObservation) or obs.oclIsKindOf(ccd::ProblemObservation)))->forAll(ob : cda::Observation | ob.getObservations()->select(o: cda::Observation | o.oclIsKindOf(ccd::FunctionalStatusObservation))->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oEXPsMgwEeCHk-lvWGDTdA" name="FunctionalStatusSectionResultStatusObservation" constrainedElement="_kzswMMgwEeCHk-lvWGDTdA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sy4NQMgwEeCHk-lvWGDTdA">
          <language>OCL</language>
          <body>self.getObservations()->select(obs : cda::Observation | (obs.oclIsKindOf(ccd::ResultObservation) or obs.oclIsKindOf(ccd::ProblemObservation)))->&#xD;
forAll(ob : cda::Observation | ob.getObservations()->select(o: cda::Observation | o.oclIsKindOf(ccd::FunctionalStatusObservation))->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aud5S8uEeKnd4bldEC3WA" name="FunctionalStatusSectionTemplateId" constrainedElement="_GoctIKPdEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aud5i8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__a1LkC8uEeKnd4bldEC3WA" name="FunctionalStatusSectionCode" constrainedElement="_GoctIKPdEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__a1LkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '47420-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__a3n0C8uEeKnd4bldEC3WA" name="FunctionalStatusSectionTitle" constrainedElement="_GoctIKPdEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__a3n0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__a418C8uEeKnd4bldEC3WA" name="FunctionalStatusSectionText" constrainedElement="_GoctIKPdEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__a418S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Ju45oKPdEd6t_4WfM070fA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NvRwcKPeEd6t_4WfM070fA" name="AdvanceDirectivesSection">
      <ownedRule xmi:id="__a6rJS8uEeKnd4bldEC3WA" name="AdvanceDirectivesSectionTemplateId" constrainedElement="_NvRwcKPeEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__a7SMC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__a9HYC8uEeKnd4bldEC3WA" name="AdvanceDirectivesSectionCode" constrainedElement="_NvRwcKPeEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__a9HYS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '42348-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__a-8kC8uEeKnd4bldEC3WA" name="AdvanceDirectivesSectionTitle" constrainedElement="_NvRwcKPeEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__a-8kS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bAxwC8uEeKnd4bldEC3WA" name="AdvanceDirectivesSectionText" constrainedElement="_NvRwcKPeEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bAxwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bwYoC8uEeKnd4bldEC3WA" name="AdvanceDirectivesSectionAdvanceDirectiveObservation" constrainedElement="_NvRwcKPeEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bwYoS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(ccd::AdvanceDirectiveObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_P8kHYKPeEd6t_4WfM070fA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__bw_sC8uEeKnd4bldEC3WA" name="getAdvanceDirectiveObservations" isQuery="true" bodyCondition="__bw_sy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__bw_sy8uEeKnd4bldEC3WA" name="body" constrainedElement="__bw_sC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__bw_tC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::AdvanceDirectiveObservation)).oclAsType(ccd::AdvanceDirectiveObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__bw_sS8uEeKnd4bldEC3WA" type="_mEuuUMJcEd6-XpBv2uxYrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__bw_si8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_T79VIKPeEd6t_4WfM070fA" name="PayersSection">
      <ownedComment xmi:id="_vOEbcKPeEd6t_4WfM070fA" annotatedElement="_T79VIKPeEd6t_4WfM070fA">
        <body>&lt;p>&#xD;
    &lt;i>Payers&lt;/i> contains data on the patient's payers, whether a 'third party' insurance,&#xD;
    self-pay, other payer or guarantor, or some combination of payers, and is used to define which entity is the&#xD;
    responsible fiduciary for the financial aspects of a patient's care.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Each unique&#xD;
    instance of a payer and all the pertinent data needed to contact, bill to, and collect from that payer should be&#xD;
    included. Authorization information that can be used to define pertinent referral, authorization tracking number,&#xD;
    procedure, therapy, intervention, device, or similar authorizations for the patient or provider, or both should be&#xD;
    included. At a minimum, the patient's pertinent current payment sources should be listed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The CCD&#xD;
    represents the sources of payment as a coverage act, which identifies all of the insurance policies or government or&#xD;
    other programs that cover some or all of the patient's healthcare expenses. The policies or programs are sequenced by&#xD;
    order of preference. Each policy or program identifies the covered party with respect to the payer, so that the&#xD;
    identifiers can be recorded.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="__bBY0C8uEeKnd4bldEC3WA" name="PayersSectionTemplateId" constrainedElement="_T79VIKPeEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bBY0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bD1EC8uEeKnd4bldEC3WA" name="PayersSectionCode" constrainedElement="_T79VIKPeEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bD1ES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '48768-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bFqQC8uEeKnd4bldEC3WA" name="PayersSectionTitle" constrainedElement="_T79VIKPeEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bFqQS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bG4YC8uEeKnd4bldEC3WA" name="PayersSectionText" constrainedElement="_T79VIKPeEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bG4YS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__febAC8uEeKnd4bldEC3WA" name="PayersSectionCoverageActivity" constrainedElement="_T79VIKPeEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__febAS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(ccd::CoverageActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WsOdUKPeEd6t_4WfM070fA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__ffCEC8uEeKnd4bldEC3WA" name="getCoverageActivities" isQuery="true" bodyCondition="__ffpIC8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__ffpIC8uEeKnd4bldEC3WA" name="body" constrainedElement="__ffCEC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__ffpIS8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::CoverageActivity)).oclAsType(ccd::CoverageActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__ffCES8uEeKnd4bldEC3WA" type="_4A1mMMJqEd6-XpBv2uxYrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__ffCEi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_f0mKEKRtEd6t_4WfM070fA" name="PurposeSection">
      <ownedComment xmi:id="_uBK9gKRtEd6t_4WfM070fA" annotatedElement="_f0mKEKRtEd6t_4WfM070fA">
        <body>&lt;p>&#xD;
    Represents the specific reason for which the summarization was generated, such as in response to a&#xD;
    request.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The general use case does not require a purpose. Purpose should be utilized when the CCD has a specific&#xD;
    purpose such as a transfer, referral, or patient request.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="__bKiwC8uEeKnd4bldEC3WA" name="PurposeSectionTemplateId" constrainedElement="_f0mKEKRtEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bKiwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bMX8C8uEeKnd4bldEC3WA" name="PurposeSectionCode" constrainedElement="_f0mKEKRtEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bMX8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '48764-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bO0MC8uEeKnd4bldEC3WA" name="PurposeSectionTitle" constrainedElement="_f0mKEKRtEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bO0MS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bPbQC8uEeKnd4bldEC3WA" name="PurposeSectionText" constrainedElement="_f0mKEKRtEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bPbQS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bbogC8uEeKnd4bldEC3WA" name="PurposeSectionPurposeActivity" constrainedElement="_f0mKEKRtEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bbogS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(ccd::PurposeActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mrDrkKRtEd6t_4WfM070fA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__bc2oC8uEeKnd4bldEC3WA" name="getPurposeActivities" isQuery="true" bodyCondition="__bc2oy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__bc2oy8uEeKnd4bldEC3WA" name="body" constrainedElement="__bc2oC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__bc2pC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::PurposeActivity)).oclAsType(ccd::PurposeActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__bc2oS8uEeKnd4bldEC3WA" type="_rrtFgKRuEd6t_4WfM070fA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__bc2oi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rrtFgKRuEd6t_4WfM070fA" name="PurposeActivity">
      <ownedComment xmi:id="_4IIJ8KRuEd6t_4WfM070fA" annotatedElement="_rrtFgKRuEd6t_4WfM070fA">
        <body>&lt;p>&#xD;
    CCD represents the ASTM CCR &amp;lt;Purpose&amp;gt; object as a relationship between two classes -- the source&#xD;
    represents the act of creating a summary document, the target is the reason for creating the document, and the&#xD;
    relationship type is &quot;RSON&quot; (has reason). The target act may be an Observation, Procedure, or some other kind of act,&#xD;
    and it may represent an order, an event, etc.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_a-lZMKR0Ed6t_4WfM070fA" name="PurposeActivityHasReason" constrainedElement="_rrtFgKRuEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_a-mnUKR0Ed6t_4WfM070fA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | &#xD;
  entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_zYt64KR2Ed6t_4WfM070fA" name="PurposeActivityReasonType" constrainedElement="_rrtFgKRuEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zZIKkKR2Ed6t_4WfM070fA">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(entryRelationship : cda::EntryRelationship |&#xD;
  entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON implies( &#xD;
  not (entryRelationship.act.oclIsUndefined() and entryRelationship.encounter.oclIsUndefined()&#xD;
       and entryRelationship.observation.oclIsUndefined() and entryRelationship.procedure.oclIsUndefined()&#xD;
       and entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.supply.oclIsUndefined())))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bR3gi8uEeKnd4bldEC3WA" name="PurposeActivityTemplateId" constrainedElement="_rrtFgKRuEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bR3gy8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.30')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bUTwC8uEeKnd4bldEC3WA" name="PurposeActivityClassCode" constrainedElement="_rrtFgKRuEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bUTwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bVh4C8uEeKnd4bldEC3WA" name="PurposeActivityMoodCode" constrainedElement="_rrtFgKRuEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bVh4S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bXXEC8uEeKnd4bldEC3WA" name="PurposeActivityCode" constrainedElement="_rrtFgKRuEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bXXES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '23745001' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bZzUC8uEeKnd4bldEC3WA" name="PurposeActivityStatusCode" constrainedElement="_rrtFgKRuEd6t_4WfM070fA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bZzUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vrq7AKRuEd6t_4WfM070fA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_wN4O0K3zEd6_ioDelDcPPg" name="VitalSignsOrganizer">
      <ownedRule xmi:id="_MpjHABtJEd-vGNAsDUJvgw" name="VitalSignsOrganizerInformationSource" constrainedElement="_wN4O0K3zEd6_ioDelDcPPg">
        <ownedComment xmi:id="_Bpzg8DPVEeCrbMDN9vkyXg">
          <body>A vital signs organizer SHALL contain one or more sources of information, as defined in section &lt;b>&lt;i>Source&lt;/i>&lt;/b>.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Pus6EBtJEd-vGNAsDUJvgw">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;
or not self.getSection().informant->isEmpty()&#xD;
or not self.getClinicalDocument().informant->isEmpty()&#xD;
or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bddsC8uEeKnd4bldEC3WA" name="ResultOrganizerTemplateId" constrainedElement="_wN4O0K3zEd6_ioDelDcPPg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bddsS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.35')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1CKdMK3zEd6_ioDelDcPPg" general="_Ht_RsHDAEd6eItyqb1FoWg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mEuuUMJcEd6-XpBv2uxYrQ" name="AdvanceDirectiveObservation">
      <ownedRule xmi:id="_WTcJYMzeEeCvbrjDQpuvkw" name="AdvanceDirectiveObservationAdvDirectiveCodeValueSet" constrainedElement="_mEuuUMJcEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_dHMVIMzeEeCvbrjDQpuvkw">
          <language>OCL</language>
          <body>self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fFDwAMzeEeCvbrjDQpuvkw" name="AdvanceDirectiveObservationAdvDirectiveCodeCodeSystem" constrainedElement="_mEuuUMJcEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j6WrAMzeEeCvbrjDQpuvkw">
          <language>OCL</language>
          <body>self.code.code = '304251008' and self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bkLYC8uEeKnd4bldEC3WA" name="AdvanceDirectiveObservationTemplateId" constrainedElement="_mEuuUMJcEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bkLYS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bnOsC8uEeKnd4bldEC3WA" name="AdvanceDirectiveObservationClassCode" constrainedElement="_mEuuUMJcEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bnOsS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__boc0C8uEeKnd4bldEC3WA" name="AdvanceDirectiveObservationMoodCode" constrainedElement="_mEuuUMJcEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__boc0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bpq8C8uEeKnd4bldEC3WA" name="AdvanceDirectiveObservationId" constrainedElement="_mEuuUMJcEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bpq8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bq5EC8uEeKnd4bldEC3WA" name="AdvanceDirectiveObservationStatusCode" constrainedElement="_mEuuUMJcEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bq5ES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__btVUC8uEeKnd4bldEC3WA" name="AdvanceDirectiveObservationEffectiveTime" constrainedElement="_mEuuUMJcEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__btVUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bujcC8uEeKnd4bldEC3WA" name="AdvanceDirectiveObservationCode" constrainedElement="_mEuuUMJcEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bujcS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dXiMC8uEeKnd4bldEC3WA" name="AdvanceDirectiveObservationAdvanceDirectiveVerification" constrainedElement="_mEuuUMJcEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dXiMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(ccd::AdvanceDirectiveVerification))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gP3EC8uEeKnd4bldEC3WA" name="AdvanceDirectiveObservationAdvanceDirectiveStatusObservation" constrainedElement="_mEuuUMJcEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gP3ES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::AdvanceDirectiveStatusObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gVWoC8uEeKnd4bldEC3WA" name="AdvanceDirectiveObservationAdvanceDirectiveReference" constrainedElement="_mEuuUMJcEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gVWoS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.reference->one(reference : cda::Reference | not reference.oclIsUndefined() and reference.oclIsKindOf(ccd::AdvanceDirectiveReference))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yg57IMJcEd6-XpBv2uxYrQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__gRFMC8uEeKnd4bldEC3WA" name="getAdvanceDirectiveStatusObservation" isQuery="true" bodyCondition="__gRFMy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gRFMy8uEeKnd4bldEC3WA" name="body" constrainedElement="__gRFMC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gRFNC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::AdvanceDirectiveStatusObservation))->asSequence()->any(true).oclAsType(ccd::AdvanceDirectiveStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gRFMS8uEeKnd4bldEC3WA" type="_Wj-KoMJmEd6-XpBv2uxYrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gRFMi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Wj-KoMJmEd6-XpBv2uxYrQ" name="AdvanceDirectiveStatusObservation">
      <ownedRule xmi:id="__bxmwC8uEeKnd4bldEC3WA" name="StatusObservationTemplateId" constrainedElement="_Wj-KoMJmEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bxmwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.37')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_aQb1UMJmEd6-XpBv2uxYrQ" general="_V3Jy4HrTEd68l9lQ-TLEBQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KIDxoMJoEd6-XpBv2uxYrQ" name="AdvanceDirectiveVerification">
      <ownedRule xmi:id="__dTQwC8uEeKnd4bldEC3WA" name="AdvanceDirectiveVerificationTemplateId" constrainedElement="_KIDxoMJoEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dTQwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.58')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dVF8C8uEeKnd4bldEC3WA" name="AdvanceDirectiveVerificationTypeCode" constrainedElement="_KIDxoMJoEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dVF8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.typeCode=vocab::ParticipationType::VRF</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dWUEC8uEeKnd4bldEC3WA" name="AdvanceDirectiveVerificationTime" constrainedElement="_KIDxoMJoEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dWUES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.time.oclIsUndefined() or self.time.isNullFlavorUndefined()) implies (not self.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_M6kVgMJoEd6-XpBv2uxYrQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_51DLwEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4A1mMMJqEd6-XpBv2uxYrQ" name="CoverageActivity">
      <ownedRule xmi:id="_AE4IkHmbEd-pnJdGZX6q4Q" name="CoverageActivityInformationSource" constrainedElement="_IjIO0DxbEd6JwqSGecoePg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AE4voHmbEd-pnJdGZX6q4Q">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;
  or not self.getSection().informant->isEmpty()&#xD;
  or not self.getClinicalDocument().informant->isEmpty()&#xD;
  or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;
  or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;
   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;
   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_d2ohIHmbEd-pnJdGZX6q4Q" name="CoverageActivitySequenceNumber" constrainedElement="_4A1mMMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h-Qd0HmbEd-pnJdGZX6q4Q">
          <language>OCL</language>
          <body>self.entryRelationship->exists(rel : cda::EntryRelationship | not rel.sequenceNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dYwUC8uEeKnd4bldEC3WA" name="CoverageActivityTemplateId" constrainedElement="_4A1mMMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dYwUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.20')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dbMkC8uEeKnd4bldEC3WA" name="CoverageActivityClassCode" constrainedElement="_4A1mMMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dbMkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dcasC8uEeKnd4bldEC3WA" name="CoverageActivityMoodCode" constrainedElement="_4A1mMMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dcasS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::DEF</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ddo0C8uEeKnd4bldEC3WA" name="CoverageActivityId" constrainedElement="_4A1mMMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ddo0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__de28C8uEeKnd4bldEC3WA" name="CoverageActivityStatusCode" constrainedElement="_4A1mMMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__de28S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dhTMC8uEeKnd4bldEC3WA" name="CoverageActivityCode" constrainedElement="_4A1mMMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dhTMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '48768-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ffpIi8uEeKnd4bldEC3WA" name="CoverageActivityPolicyActivity" constrainedElement="_4A1mMMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ffpIy8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(ccd::PolicyActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_924MgMJqEd6-XpBv2uxYrQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__fg3QC8uEeKnd4bldEC3WA" name="getPolicyActivities" isQuery="true" bodyCondition="__fg3Qy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__fg3Qy8uEeKnd4bldEC3WA" name="body" constrainedElement="__fg3QC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__fg3RC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::PolicyActivity)).oclAsType(ccd::PolicyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fg3QS8uEeKnd4bldEC3WA" type="_6M-toMJqEd6-XpBv2uxYrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fg3Qi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6M-toMJqEd6-XpBv2uxYrQ" name="PolicyActivity">
      <ownedComment xmi:id="_DiBBAHmfEd-pnJdGZX6q4Q">
        <body>A policy activity represents the policy or program providing the coverage. The person for whom payment is being provided (i.e. the patient) is the covered party. The subscriber of the policy or program is represented as a participant that is the holder the coverage. The payer is represented as the performer of the policy activity.</body>
      </ownedComment>
      <ownedRule xmi:id="_WzIV0HoiEd-OuuwcsTsBUQ" name="PolicyActivityPayerEntityIsRequired" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WzIV0XoiEd-OuuwcsTsBUQ">
          <language>OCL</language>
          <body>self.performer->one(perf : cda::Performer2 | perf.typeCode = vocab::ParticipationPhysicalPerformer::PRF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_4AN74HoZEd-pnJdGZX6q4Q" name="PolicyActivityCoveredPartyIsRequired" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AVHKQHoaEd-pnJdGZX6q4Q">
          <language>OCL</language>
          <body>self.participant->one(part : cda::Participant2 | part.typeCode = vocab::ParticipationType::COV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Abok0HohEd-OuuwcsTsBUQ" name="PolicyActivityCoveredPartyTime" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_H_sMIHohEd-OuuwcsTsBUQ">
          <language>OCL</language>
          <body>self.participant->one(part : cda::Participant2 | part.typeCode = vocab::ParticipationType::COV&#xD;
  implies not part.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_qbNg8HooEd-OuuwcsTsBUQ" name="PolicyActivitySubscriberIsAllowed" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qbNg8XooEd-OuuwcsTsBUQ">
          <language>OCL</language>
          <body>self.participant->one(part : cda::Participant2 | part.typeCode = vocab::ParticipationType::HLD)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_LGvjAHopEd-OuuwcsTsBUQ" name="PolicyActivitySubscriberTime" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LGvjAXopEd-OuuwcsTsBUQ">
          <language>OCL</language>
          <body>self.participant->one(part : cda::Participant2 | part.typeCode = vocab::ParticipationType::HLD&#xD;
  implies not part.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tMMhYHpVEd-OuuwcsTsBUQ" name="PolicyActivityEntryRelationshipREFR" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2UeUgHpVEd-OuuwcsTsBUQ">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(rel : cda::EntryRelationship | rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_3qtSMHpWEd-OuuwcsTsBUQ" name="PolicyActivityEntryRelationshipTarget" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OS18sHpXEd-OuuwcsTsBUQ">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(rel : cda::EntryRelationship | rel.act.oclIsKindOf(ccd::AuthorizationActivity)&#xD;
  or rel.act.oclIsKindOf(ccd::CoveragePlanDescription))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__djIYC8uEeKnd4bldEC3WA" name="PolicyActivityTemplateId" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__djIYS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.26')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__don8C8uEeKnd4bldEC3WA" name="PolicyActivityClassCode" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__don8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dp2EC8uEeKnd4bldEC3WA" name="PolicyActivityMoodCode" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dp2ES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__drEMC8uEeKnd4bldEC3WA" name="PolicyActivityId" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__drEMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dsSUC8uEeKnd4bldEC3WA" name="PolicyActivityStatusCode" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dsSUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fg3RS8uEeKnd4bldEC3WA" name="PolicyActivityPayerEntity" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fg3Ri8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.assignedEntity.oclIsUndefined() and performer.assignedEntity.oclIsKindOf(cda::AssignedEntity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fm94C8uEeKnd4bldEC3WA" name="PolicyActivityCoveredParty" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fm94S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(cda::ParticipantRole))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fpaIS8uEeKnd4bldEC3WA" name="PolicyActivitySubscriber" constrainedElement="_6M-toMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fpaIi8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(cda::ParticipantRole))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-W-B0MJqEd6-XpBv2uxYrQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__fiFYC8uEeKnd4bldEC3WA" name="getPayerEntity" isQuery="true" bodyCondition="__fiFYy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__fiFYy8uEeKnd4bldEC3WA" name="body" constrainedElement="__fiFYC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__fiscC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getAssignedEntities()->select(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity))->asSequence()->any(true).oclAsType(cda::AssignedEntity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fiFYS8uEeKnd4bldEC3WA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_6qmVsEcDEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fiFYi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__fnk8C8uEeKnd4bldEC3WA" name="getCoveredParty" isQuery="true" bodyCondition="__fnk8y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__fnk8y8uEeKnd4bldEC3WA" name="body" constrainedElement="__fnk8C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__foMAC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole))->asSequence()->any(true).oclAsType(cda::ParticipantRole)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fnk8S8uEeKnd4bldEC3WA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fnk8i8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__fqBMC8uEeKnd4bldEC3WA" name="getSubscriber" isQuery="true" bodyCondition="__fqoQC8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__fqoQC8uEeKnd4bldEC3WA" name="body" constrainedElement="__fqBMC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__fqoQS8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole))->asSequence()->any(true).oclAsType(cda::ParticipantRole)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fqBMS8uEeKnd4bldEC3WA" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fqBMi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_8LwHcMJqEd6-XpBv2uxYrQ" name="AuthorizationActivity">
      <ownedComment xmi:id="_M6IKcHmgEd-pnJdGZX6q4Q">
        <body>An authorization activity represents authorizations or pre-authorizations currently active for the patient for the particular payer.&#xD;
&#xD;
Authorizations are represented using an act subordinate to the policy or program that provided it. The policy or program is referred to by the authorization. Authorized treatments can be grouped into an Organizer class, where common properties, such as the reason for the authorization, can be expressed. Subordinate acts represent what was authorized.</body>
      </ownedComment>
      <ownedRule xmi:id="_X--_0M88EeCn2rsjYxSTZw" name="AuthorizationActivityEntryRelationshipTypeCode">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cbSMAM88EeCn2rsjYxSTZw">
          <language>OCL</language>
          <body>self.entryRelationship.typeCode->exists( tc : vocab::x_ActRelationshipEntryRelationship | tc = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fvu_UM88EeCn2rsjYxSTZw" name="AuthorizationActivityEntryRelationshipTarget" constrainedElement="_X--_0M88EeCn2rsjYxSTZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAwrMM88EeCn2rsjYxSTZw">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(act.moodCode = vocab::x_DocumentActMood::PRMS) or  self.entryRelationship->forAll(encounter.moodCode = vocab::x_DocumentEncounterMood::PRMS) or self.entryRelationship->forAll(observation.moodCode = vocab::x_ActMoodDocumentObservation::PRMS) or  self.entryRelationship->forAll(observationMedia.moodCode = vocab::ActMood::PRMS) or self.entryRelationship->forAll(organizer.moodCode = vocab::ActMood::PRMS) or self.entryRelationship->forAll(procedure.moodCode = vocab::x_DocumentProcedureMood::PRMS) or  self.entryRelationship->forAll(regionOfInterest.moodCode = vocab::ActMood::PRMS) or self.entryRelationship->forAll(substanceAdministration.moodCode = vocab::x_DocumentSubstanceMood::PRMS) or  self.entryRelationship->forAll(supply.moodCode = vocab::x_DocumentSubstanceMood::PRMS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lE34AM88EeCn2rsjYxSTZw" name="AuthorizationActivityHasPerformers" constrainedElement="_fvu_UM88EeCn2rsjYxSTZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mNxZwM88EeCn2rsjYxSTZw">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(not act.performer->isEmpty() ) or  self.entryRelationship->forAll(not encounter.performer->isEmpty()) or self.entryRelationship->forAll(not observation.performer->isEmpty()) or  self.entryRelationship->forAll(not observationMedia.performer->isEmpty()) or self.entryRelationship->forAll(not organizer.performer->isEmpty()) or self.entryRelationship->forAll(not procedure.performer->isEmpty()) or  self.entryRelationship->forAll(not regionOfInterest.performer->isEmpty()) or self.entryRelationship->forAll(not substanceAdministration.performer->isEmpty()) or  self.entryRelationship->forAll(not supply.performer->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dv8sC8uEeKnd4bldEC3WA" name="AuthorizationActivityTemplateId" constrainedElement="_8LwHcMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dv8sS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.19')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dzAAC8uEeKnd4bldEC3WA" name="AuthorizationActivityClassCode" constrainedElement="_8LwHcMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dzAAS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__d0OIC8uEeKnd4bldEC3WA" name="AuthorizationActivityMoodCode" constrainedElement="_8LwHcMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__d01MC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__d2DUC8uEeKnd4bldEC3WA" name="AuthorizationActivityId" constrainedElement="_8LwHcMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__d2DUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gaPIC8uEeKnd4bldEC3WA" name="AuthorizationActivityEntryRelationship" constrainedElement="_8LwHcMJqEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gaPIS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(rim::ActRelationship))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-zlsYMJqEd6-XpBv2uxYrQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_azWbgMJuEd6-XpBv2uxYrQ" name="PlanOfCareActivityAct">
      <ownedRule xmi:id="_QLZmcDHtEd-saqiXO4OYhQ" name="PlanOfCareActivityActMoodCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_QLZmcTHtEd-saqiXO4OYhQ">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentActMood::INT or self.moodCode = vocab::x_DocumentActMood::ARQ&#xD;
  or self.moodCode = vocab::x_DocumentActMood::PRMS or self.moodCode = vocab::x_DocumentActMood::PRP&#xD;
  or self.moodCode = vocab::x_DocumentActMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__d2qYC8uEeKnd4bldEC3WA" name="PlanOfCareActivityActTemplateId" constrainedElement="_azWbgMJuEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__d3RcC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__d6UwC8uEeKnd4bldEC3WA" name="PlanOfCareActivityActId" constrainedElement="_azWbgMJuEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__d6UwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__d7i4C8uEeKnd4bldEC3WA" name="PlanOfCareActivityActMoodCode" constrainedElement="_azWbgMJuEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__d7i4S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_fk4Q0MJuEd6-XpBv2uxYrQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <generalization xmi:id="_1andsDhREd-XUbK0vNqSPQ" general="_gXwH4DhREd-XUbK0vNqSPQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HDKxYMJ1Ed6-XpBv2uxYrQ" name="ProcedureActivity" isAbstract="true">
      <generalization xmi:id="_0yiVwFrzEeC8F7gYc4dnog">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_Rm7eQHfTEd-6wJLq2P_7OA"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_F9_RAMKAEd6-XpBv2uxYrQ" name="PatientInstruction">
      <ownedComment xmi:id="_lM8K4MKBEd6-XpBv2uxYrQ" annotatedElement="_F9_RAMKAEd6-XpBv2uxYrQ">
        <body>&lt;p>&#xD;
    Patient instructions are additional information provided to a patient related to one of their&#xD;
    medications (e.g. &quot;take on an empty stomach&quot;).&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="__d9YEC8uEeKnd4bldEC3WA" name="PatientInstructionTemplateId" constrainedElement="_F9_RAMKAEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__d9YES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.49')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__d-mMC8uEeKnd4bldEC3WA" name="PatientInstructionMoodCode" constrainedElement="_F9_RAMKAEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__d-mMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::INT</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_MqSJ4MKAEd6-XpBv2uxYrQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_IuPLEMKAEd6-XpBv2uxYrQ" name="FulfillmentInstruction">
      <ownedComment xmi:id="_rCdz0MKBEd6-XpBv2uxYrQ" annotatedElement="_IuPLEMKAEd6-XpBv2uxYrQ">
        <body>&lt;p>&#xD;
    Fulfillment instructions are additional information provided to the dispensing party (e.g. &quot;label in&#xD;
    spanish&quot;).&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="__d_0UC8uEeKnd4bldEC3WA" name="FulfillmentInstructionTemplateId" constrainedElement="_IuPLEMKAEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__d_0US8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.43')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eBpgC8uEeKnd4bldEC3WA" name="FulfillmentInstructionMoodCode" constrainedElement="_IuPLEMKAEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eBpgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::INT</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NTNyIMKAEd6-XpBv2uxYrQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_04s2sMMREd6-XpBv2uxYrQ" name="FunctionalStatusObservation">
      <ownedRule xmi:id="__eFT4S8uEeKnd4bldEC3WA" name="StatusObservationTemplateId" constrainedElement="_04s2sMMREd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eF68C8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.44')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4OEQAMMREd6-XpBv2uxYrQ" general="_V3Jy4HrTEd68l9lQ-TLEBQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JpjIEMMVEd6-XpBv2uxYrQ" name="ProductInstance">
      <ownedComment xmi:id="_TP04kD6uEeCAHY6aowfd8Q">
        <body>identifes a particular product instance</body>
      </ownedComment>
      <ownedRule xmi:id="_pekmwEqjEeCJlNjgFmcEiA" name="ProductInstanceHasScopingEntity" constrainedElement="_JpjIEMMVEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_syhDwEqjEeCJlNjgFmcEiA">
          <language>OCL</language>
          <body>self.id->size() > 0 implies self.scopingEntity->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ePr8C8uEeKnd4bldEC3WA" name="ProductInstanceTemplateId" constrainedElement="_JpjIEMMVEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ePr8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.52')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eSIMC8uEeKnd4bldEC3WA" name="ProductInstanceClassCode" constrainedElement="_JpjIEMMVEd6-XpBv2uxYrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eSIMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::RoleClassRoot::MANU</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_L831kMMVEd6-XpBv2uxYrQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_S7rEABZ1Ed-i6Lz80y5G5g" name="AgeObservation">
      <ownedComment xmi:id="_mW2qUBZ1Ed-i6Lz80y5G5g">
        <body>A common scenario is that a patient will know the age of a relative when they had a certain condition or when they died, but will not know the actual year (e.g. &quot;grandpa died of a heart attack at the age of 50&quot;). Often times, neither precise dates nor ages are known (e.g. &quot;cousin died of congenital heart disease as an infant&quot;). In all cases, dates and times and ages can be expressed in narrative.</body>
      </ownedComment>
      <ownedRule xmi:id="__eb5MC8uEeKnd4bldEC3WA" name="AgeObservationTemplateId" constrainedElement="_S7rEABZ1Ed-i6Lz80y5G5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eb5MS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__edHUC8uEeKnd4bldEC3WA" name="AgeObservationClassCode" constrainedElement="_S7rEABZ1Ed-i6Lz80y5G5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__edHUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eeVcC8uEeKnd4bldEC3WA" name="AgeObservationMoodCode" constrainedElement="_S7rEABZ1Ed-i6Lz80y5G5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eeVcS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__egKoC8uEeKnd4bldEC3WA" name="AgeObservationCode" constrainedElement="_S7rEABZ1Ed-i6Lz80y5G5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__egKoS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '397659008' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eim4C8uEeKnd4bldEC3WA" name="AgeObservationStatusCode" constrainedElement="_S7rEABZ1Ed-i6Lz80y5G5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eim4S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__elDIC8uEeKnd4bldEC3WA" name="AgeObservationValue" constrainedElement="_S7rEABZ1Ed-i6Lz80y5G5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__elDIS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_S72qMBZ1Ed-i6Lz80y5G5g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7I79cDHlEd-saqiXO4OYhQ" name="PlanOfCareActivityObservation">
      <ownedRule xmi:id="_PNzgUDHuEd-saqiXO4OYhQ" name="PlanOfCareActivityObservationMoodCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_PNzgUTHuEd-saqiXO4OYhQ">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_ActMoodDocumentObservation::INT or self.moodCode = vocab::x_ActMoodDocumentObservation::GOL&#xD;
  or self.moodCode = vocab::x_ActMoodDocumentObservation::PRMS or self.moodCode = vocab::x_ActMoodDocumentObservation::PRP&#xD;
  or self.moodCode = vocab::x_ActMoodDocumentObservation::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__enfYC8uEeKnd4bldEC3WA" name="PlanOfCareActivityObservationTemplateId" constrainedElement="_7I79cDHlEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__enfYS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__epUkC8uEeKnd4bldEC3WA" name="PlanOfCareActivityObservationId" constrainedElement="_7I79cDHlEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ep7oC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eqisC8uEeKnd4bldEC3WA" name="PlanOfCareActivityObservationMoodCode" constrainedElement="_7I79cDHlEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eqisS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_y_KSkDHoEd-saqiXO4OYhQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <generalization xmi:id="_ETWMgDhSEd-XUbK0vNqSPQ" general="_gXwH4DhREd-XUbK0vNqSPQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EGZnsDHmEd-saqiXO4OYhQ" name="PlanOfCareActivityEncounter">
      <ownedRule xmi:id="_rXlD4DHtEd-saqiXO4OYhQ" name="PlanOfCareActivityEncounterMoodCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rXlq8DHtEd-saqiXO4OYhQ">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentEncounterMood::INT or self.moodCode = vocab::x_DocumentEncounterMood::ARQ&#xD;
  or self.moodCode = vocab::x_DocumentEncounterMood::PRMS or self.moodCode = vocab::x_DocumentEncounterMood::PRP&#xD;
  or self.moodCode = vocab::x_DocumentEncounterMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__erw0C8uEeKnd4bldEC3WA" name="PlanOfCareActivityEncounterTemplateId" constrainedElement="_EGZnsDHmEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__erw0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__euNEC8uEeKnd4bldEC3WA" name="PlanOfCareActivityEncounterId" constrainedElement="_EGZnsDHmEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__euNES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__evbMC8uEeKnd4bldEC3WA" name="PlanOfCareActivityEncounterMoodCode" constrainedElement="_EGZnsDHmEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__evbMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EGaOwDHmEd-saqiXO4OYhQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
      </generalization>
      <generalization xmi:id="_DSYewDhSEd-XUbK0vNqSPQ" general="_gXwH4DhREd-XUbK0vNqSPQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1z0WEDHpEd-saqiXO4OYhQ" name="PlanOfCareActivityProcedure">
      <ownedRule xmi:id="_v3_UADHtEd-saqiXO4OYhQ" name="PlanOfCareActivityProcedureMoodCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3_7EDHtEd-saqiXO4OYhQ">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentProcedureMood::INT or self.moodCode = vocab::x_DocumentProcedureMood::ARQ&#xD;
  or self.moodCode = vocab::x_DocumentProcedureMood::PRMS or self.moodCode = vocab::x_DocumentProcedureMood::PRP&#xD;
  or self.moodCode = vocab::x_DocumentProcedureMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ewpUC8uEeKnd4bldEC3WA" name="PlanOfCareActivityProcedureTemplateId" constrainedElement="_1z0WEDHpEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ewpUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ezFkC8uEeKnd4bldEC3WA" name="PlanOfCareActivityProcedureId" constrainedElement="_1z0WEDHpEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ezFkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e0TsC8uEeKnd4bldEC3WA" name="PlanOfCareActivityProcedureMoodCode" constrainedElement="_1z0WEDHpEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e0TsS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1z09IDHpEd-saqiXO4OYhQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
      </generalization>
      <generalization xmi:id="_E28o0DhSEd-XUbK0vNqSPQ" general="_gXwH4DhREd-XUbK0vNqSPQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9Yav8DHpEd-saqiXO4OYhQ" name="PlanOfCareActivitySubstanceAdministration">
      <ownedRule xmi:id="_4p844DHtEd-saqiXO4OYhQ" name="PlanOfCareActivitySubstanceAdministrationMoodCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_4p844THtEd-saqiXO4OYhQ">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentSubstanceMood::INT or self.moodCode = vocab::x_DocumentSubstanceMood::RQO&#xD;
  or self.moodCode = vocab::x_DocumentSubstanceMood::PRMS or self.moodCode = vocab::x_DocumentSubstanceMood::PRP</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e1h0C8uEeKnd4bldEC3WA" name="PlanOfCareActivitySubstanceAdministrationTemplateId" constrainedElement="_9Yav8DHpEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e1h0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e3XAC8uEeKnd4bldEC3WA" name="PlanOfCareActivitySubstanceAdministrationId" constrainedElement="_9Yav8DHpEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e3XAS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e4lIC8uEeKnd4bldEC3WA" name="PlanOfCareActivitySubstanceAdministrationMoodCode" constrainedElement="_9Yav8DHpEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e4lIS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_9Yb-EDHpEd-saqiXO4OYhQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <generalization xmi:id="_FjmTcDhSEd-XUbK0vNqSPQ" general="_gXwH4DhREd-XUbK0vNqSPQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_A9YrgDHqEd-saqiXO4OYhQ" name="PlanOfCareActivitySupply">
      <ownedRule xmi:id="_CMr98DHvEd-saqiXO4OYhQ" name="PlanOfCareActivitySupplyMoodCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_CMr98THvEd-saqiXO4OYhQ">
          <language>OCL</language>
          <body>self.moodCode = vocab::x_DocumentSubstanceMood::INT or self.moodCode = vocab::x_DocumentSubstanceMood::RQO&#xD;
  or self.moodCode = vocab::x_DocumentSubstanceMood::PRMS or self.moodCode = vocab::x_DocumentSubstanceMood::PRP</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e5zQC8uEeKnd4bldEC3WA" name="PlanOfCareActivitySupplyTemplateId" constrainedElement="_A9YrgDHqEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e5zQS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e8PgC8uEeKnd4bldEC3WA" name="PlanOfCareActivitySupplyId" constrainedElement="_A9YrgDHqEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e8PgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e9doC8uEeKnd4bldEC3WA" name="PlanOfCareActivitySupplyMoodCode" constrainedElement="_A9YrgDHqEd-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e9doS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_A9ZSkDHqEd-saqiXO4OYhQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
      <generalization xmi:id="_GPaQkDhSEd-XUbK0vNqSPQ" general="_gXwH4DhREd-XUbK0vNqSPQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_to5TUDH6Ed-saqiXO4OYhQ" name="ProcedureActivityAct">
      <ownedRule xmi:id="__fGnkC8uEeKnd4bldEC3WA" name="ProcedureActivityActTemplateId" constrainedElement="_to5TUDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fGnkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.29')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fH1sC8uEeKnd4bldEC3WA" name="ProcedureActivityActMoodCode" constrainedElement="_to5TUDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fH1sS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fJD0C8uEeKnd4bldEC3WA" name="ProcedureActivityActCode" constrainedElement="_to5TUDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fJD0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fKR8C8uEeKnd4bldEC3WA" name="ProcedureActivityActEffectiveTime" constrainedElement="_to5TUDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fKR8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fK5AC8uEeKnd4bldEC3WA" name="ProcedureActivityActId" constrainedElement="_to5TUDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fK5AS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gcrYC8uEeKnd4bldEC3WA" name="ProcedureActivityActEncounterLocation" constrainedElement="_to5TUDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gcrYS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(ccd::EncounterLocation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gdScC8uEeKnd4bldEC3WA" name="ProcedureActivityActPerformer2" constrainedElement="_to5TUDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gdScS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gegkC8uEeKnd4bldEC3WA" name="ProcedureActivityActProblemAct" constrainedElement="_to5TUDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gegkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(ccd::ProblemAct) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ggVwC8uEeKnd4bldEC3WA" name="ProcedureActivityActProblemObservation" constrainedElement="_to5TUDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ggVwS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__giK8C8uEeKnd4bldEC3WA" name="ProcedureActivityActAgeObservation" constrainedElement="_to5TUDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__giK8S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gjZEC8uEeKnd4bldEC3WA" name="ProcedureActivityActMedicationActivity" constrainedElement="_to5TUDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gjZES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(ccd::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gknMC8uEeKnd4bldEC3WA" name="ProcedureActivityActPatientInstruction" constrainedElement="_to5TUDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gknMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(ccd::PatientInstruction))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_to7vkDH6Ed-saqiXO4OYhQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <generalization xmi:id="_Sv6pQDH7Ed-saqiXO4OYhQ" general="_HDKxYMJ1Ed6-XpBv2uxYrQ"/>
      <ownedOperation xmi:id="__gfHoC8uEeKnd4bldEC3WA" name="getProblemAct" isQuery="true" bodyCondition="__gfusC8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gfusC8uEeKnd4bldEC3WA" name="body" constrainedElement="__gfHoC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gfusS8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::ProblemAct))->asSequence()->any(true).oclAsType(ccd::ProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gfHoS8uEeKnd4bldEC3WA" type="_GgvgUDxbEd6JwqSGecoePg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gfHoi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__ghj4C8uEeKnd4bldEC3WA" name="getProblemObservation" isQuery="true" bodyCondition="__ghj4y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__ghj4y8uEeKnd4bldEC3WA" name="body" constrainedElement="__ghj4C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__ghj5C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::ProblemObservation))->asSequence()->any(true).oclAsType(ccd::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__ghj4S8uEeKnd4bldEC3WA" type="_IjIO0DxbEd6JwqSGecoePg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__ghj4i8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__giyAC8uEeKnd4bldEC3WA" name="getAgeObservation" isQuery="true" bodyCondition="__giyAy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__giyAy8uEeKnd4bldEC3WA" name="body" constrainedElement="__giyAC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__giyBC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::AgeObservation))->asSequence()->any(true).oclAsType(ccd::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__giyAS8uEeKnd4bldEC3WA" type="_S7rEABZ1Ed-i6Lz80y5G5g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__giyAi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__gkAIC8uEeKnd4bldEC3WA" name="getMedicationActivity" isQuery="true" bodyCondition="__gkAIy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gkAIy8uEeKnd4bldEC3WA" name="body" constrainedElement="__gkAIC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gkAJC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(ccd::MedicationActivity))->asSequence()->any(true).oclAsType(ccd::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gkAIS8uEeKnd4bldEC3WA" type="_W6aMoHfTEd6ZeOKq_2_a9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gkAIi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__glOQC8uEeKnd4bldEC3WA" name="getPatientInstructions" isQuery="true" bodyCondition="__glOQy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__glOQy8uEeKnd4bldEC3WA" name="body" constrainedElement="__glOQC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__glORC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::PatientInstruction)).oclAsType(ccd::PatientInstruction)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__glOQS8uEeKnd4bldEC3WA" type="_F9_RAMKAEd6-XpBv2uxYrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__glOQi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3lHE0DH6Ed-saqiXO4OYhQ" name="ProcedureActivityObservation">
      <ownedRule xmi:id="__fN8UC8uEeKnd4bldEC3WA" name="ProcedureActivityObservationTemplateId" constrainedElement="_3lHE0DH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fN8US8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.29')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fQYkC8uEeKnd4bldEC3WA" name="ProcedureActivityObservationMoodCode" constrainedElement="_3lHE0DH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fQYkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fRmsC8uEeKnd4bldEC3WA" name="ProcedureActivityObservationCode" constrainedElement="_3lHE0DH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fRmsS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fS00C8uEeKnd4bldEC3WA" name="ProcedureActivityObservationEffectiveTime" constrainedElement="_3lHE0DH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fS00S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fTb4C8uEeKnd4bldEC3WA" name="ProcedureActivityObservationId" constrainedElement="_3lHE0DH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fUC8C8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fUqAC8uEeKnd4bldEC3WA" name="ProcedureActivityObservationStatusCode" constrainedElement="_3lHE0DH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fUqAS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gl1UC8uEeKnd4bldEC3WA" name="ProcedureActivityObservationEncounterLocation" constrainedElement="_3lHE0DH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gl1US8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(ccd::EncounterLocation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gnDcC8uEeKnd4bldEC3WA" name="ProcedureActivityObservationPerformer2" constrainedElement="_3lHE0DH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gnDcS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gnqgC8uEeKnd4bldEC3WA" name="ProcedureActivityObservationProblemObservation" constrainedElement="_3lHE0DH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gnqgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__go4oC8uEeKnd4bldEC3WA" name="ProcedureActivityObservationAgeObservation" constrainedElement="_3lHE0DH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__go4oS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gqGwi8uEeKnd4bldEC3WA" name="ProcedureActivityObservationMedicationActivity" constrainedElement="_3lHE0DH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gqGwy8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(ccd::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gr78C8uEeKnd4bldEC3WA" name="ProcedureActivityObservationPatientInstruction" constrainedElement="_3lHE0DH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gr78S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(ccd::PatientInstruction))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gtKEC8uEeKnd4bldEC3WA" name="ProcedureActivityObservationProblemAct" constrainedElement="_3lHE0DH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gtKES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(ccd::ProblemAct) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_3lHr4DH6Ed-saqiXO4OYhQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <generalization xmi:id="_TNWzMDH7Ed-saqiXO4OYhQ" general="_HDKxYMJ1Ed6-XpBv2uxYrQ"/>
      <ownedOperation xmi:id="__goRkC8uEeKnd4bldEC3WA" name="getProblemObservation" isQuery="true" bodyCondition="__goRky8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__goRky8uEeKnd4bldEC3WA" name="body" constrainedElement="__goRkC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__goRlC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::ProblemObservation))->asSequence()->any(true).oclAsType(ccd::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__goRkS8uEeKnd4bldEC3WA" type="_IjIO0DxbEd6JwqSGecoePg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__goRki8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__gpfsC8uEeKnd4bldEC3WA" name="getAgeObservation" isQuery="true" bodyCondition="__gqGwC8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gqGwC8uEeKnd4bldEC3WA" name="body" constrainedElement="__gpfsC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gqGwS8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::AgeObservation))->asSequence()->any(true).oclAsType(ccd::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gpfsS8uEeKnd4bldEC3WA" type="_S7rEABZ1Ed-i6Lz80y5G5g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gpfsi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__grU4C8uEeKnd4bldEC3WA" name="getMedicationActivities" isQuery="true" bodyCondition="__grU4y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__grU4y8uEeKnd4bldEC3WA" name="body" constrainedElement="__grU4C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__grU5C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(ccd::MedicationActivity)).oclAsType(ccd::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__grU4S8uEeKnd4bldEC3WA" type="_W6aMoHfTEd6ZeOKq_2_a9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__grU4i8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__gsjAC8uEeKnd4bldEC3WA" name="getPatientInstructions" isQuery="true" bodyCondition="__gsjAy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gsjAy8uEeKnd4bldEC3WA" name="body" constrainedElement="__gsjAC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gsjBC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::PatientInstruction)).oclAsType(ccd::PatientInstruction)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gsjAS8uEeKnd4bldEC3WA" type="_F9_RAMKAEd6-XpBv2uxYrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gsjAi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__gtxIC8uEeKnd4bldEC3WA" name="getProblemAct" isQuery="true" bodyCondition="__gtxIy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gtxIy8uEeKnd4bldEC3WA" name="body" constrainedElement="__gtxIC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gtxJC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::ProblemAct))->asSequence()->any(true).oclAsType(ccd::ProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gtxIS8uEeKnd4bldEC3WA" type="_GgvgUDxbEd6JwqSGecoePg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gtxIi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6mhnYDH6Ed-saqiXO4OYhQ" name="ProcedureActivityProcedure">
      <ownedRule xmi:id="__fWfMC8uEeKnd4bldEC3WA" name="ProcedureActivityProcedureTemplateId" constrainedElement="_6mhnYDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fWfMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.29')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fY7cC8uEeKnd4bldEC3WA" name="ProcedureActivityProcedureMoodCode" constrainedElement="_6mhnYDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fY7cS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__faJkC8uEeKnd4bldEC3WA" name="ProcedureActivityProcedureCode" constrainedElement="_6mhnYDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__faJkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fbXsC8uEeKnd4bldEC3WA" name="ProcedureActivityProcedureEffectiveTime" constrainedElement="_6mhnYDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fbXsS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fcl0C8uEeKnd4bldEC3WA" name="ProcedureActivityProcedureId" constrainedElement="_6mhnYDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fcl0S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gZoEC8uEeKnd4bldEC3WA" name="ProcedureActivityProcedureSpecimen" constrainedElement="_6mhnYDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gZoES8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.specimen->exists(specimen : cda::Specimen | not specimen.oclIsUndefined() and specimen.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__guYMC8uEeKnd4bldEC3WA" name="ProcedureActivityProcedureEncounterLocation" constrainedElement="_6mhnYDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__guYMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(ccd::EncounterLocation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gvmUC8uEeKnd4bldEC3WA" name="ProcedureActivityProcedurePerformer2" constrainedElement="_6mhnYDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gvmUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gw0cC8uEeKnd4bldEC3WA" name="ProcedureActivityProcedureProblemObservation" constrainedElement="_6mhnYDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gw0cS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gyCkC8uEeKnd4bldEC3WA" name="ProcedureActivityProcedureProblemAct" constrainedElement="_6mhnYDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gyCkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(ccd::ProblemAct) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gzQsy8uEeKnd4bldEC3WA" name="ProcedureActivityProcedureAgeObservation" constrainedElement="_6mhnYDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gzQtC8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__g1F4C8uEeKnd4bldEC3WA" name="ProcedureActivityProcedureMedicationActivity" constrainedElement="_6mhnYDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__g1F4S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(ccd::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__g2UAC8uEeKnd4bldEC3WA" name="ProcedureActivityProcedurePatientInstruction" constrainedElement="_6mhnYDH6Ed-saqiXO4OYhQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__g2UAS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(ccd::PatientInstruction))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6miOcDH6Ed-saqiXO4OYhQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
      </generalization>
      <generalization xmi:id="_Tmd2wDH7Ed-saqiXO4OYhQ" general="_HDKxYMJ1Ed6-XpBv2uxYrQ"/>
      <ownedOperation xmi:id="__gxbgC8uEeKnd4bldEC3WA" name="getProblemObservation" isQuery="true" bodyCondition="__gxbgy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gxbgy8uEeKnd4bldEC3WA" name="body" constrainedElement="__gxbgC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gxbhC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::ProblemObservation))->asSequence()->any(true).oclAsType(ccd::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gxbgS8uEeKnd4bldEC3WA" type="_IjIO0DxbEd6JwqSGecoePg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gxbgi8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__gypoC8uEeKnd4bldEC3WA" name="getProblemAct" isQuery="true" bodyCondition="__gzQsS8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__gzQsS8uEeKnd4bldEC3WA" name="body" constrainedElement="__gypoC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gzQsi8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::ProblemAct))->asSequence()->any(true).oclAsType(ccd::ProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gypoS8uEeKnd4bldEC3WA" type="_GgvgUDxbEd6JwqSGecoePg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gzQsC8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__g0e0C8uEeKnd4bldEC3WA" name="getAgeObservation" isQuery="true" bodyCondition="__g0e0y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__g0e0y8uEeKnd4bldEC3WA" name="body" constrainedElement="__g0e0C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__g0e1C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::AgeObservation))->asSequence()->any(true).oclAsType(ccd::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__g0e0S8uEeKnd4bldEC3WA" type="_S7rEABZ1Ed-i6Lz80y5G5g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__g0e0i8uEeKnd4bldEC3WA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__g1s8C8uEeKnd4bldEC3WA" name="getMedicationActivities" isQuery="true" bodyCondition="__g1s8y8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__g1s8y8uEeKnd4bldEC3WA" name="body" constrainedElement="__g1s8C8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__g1s9C8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(ccd::MedicationActivity)).oclAsType(ccd::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__g1s8S8uEeKnd4bldEC3WA" type="_W6aMoHfTEd6ZeOKq_2_a9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__g1s8i8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__g27EC8uEeKnd4bldEC3WA" name="getPatientInstructions" isQuery="true" bodyCondition="__g3iIi8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__g3iIi8uEeKnd4bldEC3WA" name="body" constrainedElement="__g27EC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__g3iIy8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(ccd::PatientInstruction)).oclAsType(ccd::PatientInstruction)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__g3iIC8uEeKnd4bldEC3WA" type="_F9_RAMKAEd6-XpBv2uxYrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__g3iIS8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gXwH4DhREd-XUbK0vNqSPQ" name="PlanOfCareActivity" isAbstract="true"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_GkCSAHoXEd-pnJdGZX6q4Q" name="PayerEntity">
      <ownedRule xmi:id="__fjTgC8uEeKnd4bldEC3WA" name="PayerEntityId" constrainedElement="_GkCSAHoXEd-pnJdGZX6q4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fjTgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_O6MEoHoXEd-pnJdGZX6q4Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_6qmVsEcDEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JT_4MHoXEd-pnJdGZX6q4Q" name="CoveredParty">
      <ownedRule xmi:id="__fkhoS8uEeKnd4bldEC3WA" name="CoveredPartyId" constrainedElement="_JT_4MHoXEd-pnJdGZX6q4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fkhoi8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__flvwS8uEeKnd4bldEC3WA" name="CoveredPartyCode" constrainedElement="_JT_4MHoXEd-pnJdGZX6q4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__flvwi8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NltlAHoXEd-pnJdGZX6q4Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_E4rTsHooEd-OuuwcsTsBUQ" name="PolicySubscriber">
      <ownedRule xmi:id="__foMAS8uEeKnd4bldEC3WA" name="PolicySubscriberId" constrainedElement="_E4rTsHooEd-OuuwcsTsBUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__foMAi8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_K6xZAHooEd-OuuwcsTsBUQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4ElDYHpZEd-OuuwcsTsBUQ" name="CoveragePlanDescription">
      <ownedRule xmi:id="__frPUC8uEeKnd4bldEC3WA" name="CoveragePlanDescriptionClassCode" constrainedElement="_4ElDYHpZEd-OuuwcsTsBUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__frPUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fsdcC8uEeKnd4bldEC3WA" name="CoveragePlanDescriptionId" constrainedElement="_4ElDYHpZEd-OuuwcsTsBUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fsdcS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ftEgC8uEeKnd4bldEC3WA" name="CoveragePlanDescriptionMoodCode" constrainedElement="_4ElDYHpZEd-OuuwcsTsBUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ftEgS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::DEF</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7r024HpZEd-OuuwcsTsBUQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WE95UO3TEd-dJvThfIiQuA" name="SupportParticipant">
      <generalization xmi:id="_WE-gYO3TEd-dJvThfIiQuA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_4_GbMEcZEd6besF9iFIJkQ"/>
      </generalization>
      <generalization xmi:id="_q5BXEO3TEd-dJvThfIiQuA" general="_eyg4QO3TEd-dJvThfIiQuA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_abHaMO3TEd-dJvThfIiQuA" name="SupportGuardian">
      <generalization xmi:id="_abIBQO3TEd-dJvThfIiQuA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_liVJMEcIEd6besF9iFIJkQ"/>
      </generalization>
      <generalization xmi:id="_snMwIO3TEd-dJvThfIiQuA" general="_eyg4QO3TEd-dJvThfIiQuA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_eyg4QO3TEd-dJvThfIiQuA" name="Support" isAbstract="true">
      <ownedComment xmi:id="_I-0tAO3UEd-dJvThfIiQuA">
        <body>&lt;p>Represents the patient's sources of support such as immediate family, relatives, and guardian at the time the summarization is generated. Support information also includes next of kin, caregivers, and support organizations. At a minimum, key support contacts relative to healthcare decisions, including next of kin, should be included.&lt;/p>&#xD;
&lt;p>CDA R2 represents a patient's guardian with the CDA Header Guardian class. Other Supporters are represented as participant participations in the CDA Header.&lt;/p></body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Hj3aYCQYEeCxCon8a79rfA" name="Comment">
      <ownedComment xmi:id="_sPnCYEjfEeCOWNbpDoETQw">
        <body>Used to contain comments associated with any of the data within the document.</body>
      </ownedComment>
      <ownedRule xmi:id="__fzyMC8uEeKnd4bldEC3WA" name="CommentTemplateId" constrainedElement="_Hj3aYCQYEeCxCon8a79rfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fzyMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.40')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__f1AUC8uEeKnd4bldEC3WA" name="CommentClassCode" constrainedElement="_Hj3aYCQYEeCxCon8a79rfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__f1AUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__f21gC8uEeKnd4bldEC3WA" name="CommentMoodCode" constrainedElement="_Hj3aYCQYEeCxCon8a79rfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__f21gS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__f4DoC8uEeKnd4bldEC3WA" name="CommentCode" constrainedElement="_Hj3aYCQYEeCxCon8a79rfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__f4DoS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '48767-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Hj4BcCQYEeCxCon8a79rfA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mRUKcMhAEeCHk-lvWGDTdA" name="SocialHistoryStatusObservation">
      <ownedRule xmi:id="__gE38C8uEeKnd4bldEC3WA" name="StatusObservationTemplateId" constrainedElement="_mRUKcMhAEeCHk-lvWGDTdA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gE38S8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.56')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gGtIC8uEeKnd4bldEC3WA" name="SocialHistoryStatusObservationValue" constrainedElement="_mRUKcMhAEeCHk-lvWGDTdA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gGtIS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.1.11.20.17'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mRUKcchAEeCHk-lvWGDTdA" general="_V3Jy4HrTEd68l9lQ-TLEBQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RzqOkMziEeCvbrjDQpuvkw" name="AdvanceDirectiveReference">
      <ownedRule xmi:id="_hgF1wMzjEeCvbrjDQpuvkw" name="AdvanceDirectiveReferenceHasURL" constrainedElement="_RzqOkMziEeCvbrjDQpuvkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_li9OQMzjEeCvbrjDQpuvkw">
          <language>OCL</language>
          <body>self.externalDocument.text.reference.hasContent()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oc7FAMzjEeCvbrjDQpuvkw" name="AdvanceDirectiveReferenceHasMIMEType" constrainedElement="_RzqOkMziEeCvbrjDQpuvkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rdbooMzjEeCvbrjDQpuvkw">
          <language>OCL</language>
          <body>self.externalDocument.text.isDefined('mediaType')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ch_2QAmGEeG2cvzDN75y9w" name="AdvanceDirectiveReferenceExternalDocumentHasId" constrainedElement="_RzqOkMziEeCvbrjDQpuvkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_HlEukAmGEeG2cvzDN75y9w">
          <language>OCL</language>
          <body>not self.externalDocument.id->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gRsQC8uEeKnd4bldEC3WA" name="AdvanceDirectiveReferenceTemplateId" constrainedElement="_RzqOkMziEeCvbrjDQpuvkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gRsQS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.36')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gUvkC8uEeKnd4bldEC3WA" name="AdvanceDirectiveReferenceTypeCode" constrainedElement="_RzqOkMziEeCvbrjDQpuvkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gUvkS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>isDefined('typeCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gbdQC8uEeKnd4bldEC3WA" name="AdvanceDirectiveReferenceExternalDocument" constrainedElement="_RzqOkMziEeCvbrjDQpuvkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gbdQS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.externalDocument->one(externalDocument : cda::ExternalDocument | not externalDocument.oclIsUndefined() and externalDocument.oclIsKindOf(rim::Act))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_fL_VIN-7EeCszpyO3DRrcA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_NDnXkEcIEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_56Z3kA_WEeG7sMwiyo3Ifw" name="FamilyHistoryCauseOfDeathObservation">
      <ownedRule xmi:id="__g4JMC8uEeKnd4bldEC3WA" name="FamilyHistoryObservationTemplateId" constrainedElement="_56Z3kA_WEeG7sMwiyo3Ifw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__g4JMS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.42')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__g5XUC8uEeKnd4bldEC3WA" name="FamilyHistoryCauseOfDeathObservationCauseOfDeathObservation" constrainedElement="_56Z3kA_WEeG7sMwiyo3Ifw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__g5XUS8uEeKnd4bldEC3WA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(ccd::CauseOfDeathObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_56aeoA_WEeG7sMwiyo3Ifw" general="_7tlrAGwWEd6q29qQGU-SBA"/>
      <ownedOperation xmi:id="__g5-YC8uEeKnd4bldEC3WA" name="getCauseOfDeathObservations" isQuery="true" bodyCondition="__g5-Yy8uEeKnd4bldEC3WA">
        <ownedRule xmi:id="__g5-Yy8uEeKnd4bldEC3WA" name="body" constrainedElement="__g5-YC8uEeKnd4bldEC3WA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__g5-ZC8uEeKnd4bldEC3WA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(ccd::CauseOfDeathObservation)).oclAsType(ccd::CauseOfDeathObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__g5-YS8uEeKnd4bldEC3WA" type="_joG2YIHbEd6Ncrr6L3Ublw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__g5-Yi8uEeKnd4bldEC3WA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__d34gC8uEeKnd4bldEC3WA" name="CCDRegistryDelegate" clientDependency="__d4fkC8uEeKnd4bldEC3WA">
      <interfaceRealization xmi:id="__d4fkC8uEeKnd4bldEC3WA" client="__d34gC8uEeKnd4bldEC3WA">
        <supplier xmi:type="uml:Interface" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_M9TsYBgbEd-f6JfqlBX7nQ"/>
        <contract href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_M9TsYBgbEd-f6JfqlBX7nQ"/>
      </interfaceRealization>
    </packagedElement>
    <profileApplication xmi:id="_qQyD9zxVEd6JwqSGecoePg">
      <eAnnotations xmi:id="_qQyD-DxVEd6JwqSGecoePg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_Ah-uIIhSEd6UrJD25cKDew">
      <eAnnotations xmi:id="_AiAjUIhSEd6UrJD25cKDew" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="__UJUwC8uEeKnd4bldEC3WA">
      <eAnnotations xmi:id="__UJ70C8uEeKnd4bldEC3WA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CDATemplate xmi:id="_VImT8HfXEd6ZeOKq_2_a9g" base_Class="_Ze7UsGESEd69D7zx7EkLMA" templateId="2.16.840.1.113883.10.20.1" assigningAuthorityName="CCD">
    <ruleId>CONF-7</ruleId>
    <ruleId>CONF-8</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_wOJNoHo3Ed6UPbrR4QTFoQ" base_Class="_AwcXkGaKEd6Hk_bPOfEjYA" templateId="2.16.840.1.113883.10.20.1.41" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_4ua6sHo5Ed6UPbrR4QTFoQ" base_Class="_3cYVwGaKEd6Hk_bPOfEjYA" templateId="2.16.840.1.113883.10.20.1.48" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_BUtfAHrSEd68l9lQ-TLEBQ" base_Class="__XC4cHrREd68l9lQ-TLEBQ" templateId="2.16.840.1.113883.10.20.1.54" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_J6uSkHrSEd68l9lQ-TLEBQ" base_Class="_ILkpIHrSEd68l9lQ-TLEBQ" templateId="2.16.840.1.113883.10.20.1.55" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_g5EdoHrSEd68l9lQ-TLEBQ" base_Class="_e8n_EHrSEd68l9lQ-TLEBQ" templateId="2.16.840.1.113883.10.20.1.39" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_Xv1y0HrTEd68l9lQ-TLEBQ" base_Class="_V3Jy4HrTEd68l9lQ-TLEBQ" templateId="2.16.840.1.113883.10.20.1.57" assigningAuthorityName="CCD"/>
  <CDA:CodegenSupport xmi:id="_HzmFgJm0Ed6BO7rW3XxHIA" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="ccd" nsURI="http://www.openhealthtools.org/mdht/uml/cda/ccd" packageName="ccd" prefix="CCD" base_Namespace="_qQyD8jxVEd6JwqSGecoePg"/>
  <CDA:CDATemplate xmi:id="_wA3kYKRtEd6t_4WfM070fA" base_Class="_f0mKEKRtEd6t_4WfM070fA" templateId="2.16.840.1.113883.10.20.1.13" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_zC1EEKRuEd6t_4WfM070fA" base_Class="_rrtFgKRuEd6t_4WfM070fA" templateId="2.16.840.1.113883.10.20.1.30" assigningAuthorityName="CCD">
    <ruleId>CONF-20</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_RKMcEKR2Ed6t_4WfM070fA" base_Constraint="_a-lZMKR0Ed6t_4WfM070fA">
    <ruleId>CONF-26</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2qHaMKR2Ed6t_4WfM070fA" base_Constraint="_zYt64KR2Ed6t_4WfM070fA">
    <ruleId>CONF-27</ruleId>
  </CDA:ConstraintValidation>
  <CDA:AssociationValidation xmi:id="_bVC2QMMREd6-XpBv2uxYrQ" message="CCD Functional Status Section SHOULD contain [1..*] entry such that it, SHALL contain [1..1] Problem Act (templateId: 2.16.840.1.113883.10.20.1.27)" severity="WARNING"/>
  <CDA:AssociationValidation xmi:id="_iMfPMMMREd6-XpBv2uxYrQ" message="CCD Functional Status Section SHOULD contain [1..*] entry such that it, SHALL contain [1..1] Result Organizer (templateId: 2.16.840.1.113883.10.20.1.32)" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_7L0akMMREd6-XpBv2uxYrQ" base_Class="_04s2sMMREd6-XpBv2uxYrQ" templateId="2.16.840.1.113883.10.20.1.44" assigningAuthorityName="CCD">
    <ruleId>CONF-138</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_1hBFQBWiEd-6K-YJpbwRmQ" base_Constraint="_xgaWkBWiEd-6K-YJpbwRmQ">
    <ruleId>CONF-518</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_7Bo1MBWiEd-6K-YJpbwRmQ" base_Constraint="_6Q6i4BWiEd-6K-YJpbwRmQ">
    <ruleId>CONF-519</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_8TpkwBWkEd-6K-YJpbwRmQ" base_Constraint="_5Uu8kBWkEd-6K-YJpbwRmQ">
    <ruleId>CONF-176</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_3Ot10BWlEd-6K-YJpbwRmQ" severity="INFO" base_Constraint="_3OelQBWlEd-6K-YJpbwRmQ">
    <ruleId>CONF-177</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_PpNAABWsEd-6K-YJpbwRmQ" base_Constraint="_-c6TIBWrEd-6K-YJpbwRmQ">
    <ruleId>CONF-183</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_LZgM8BXOEd-6K-YJpbwRmQ" base_Constraint="__CX4MBXNEd-6K-YJpbwRmQ">
    <ruleId>CONF-296</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_SfTK8BXOEd-6K-YJpbwRmQ" severity="INFO" base_Constraint="_OgP7cBXOEd-6K-YJpbwRmQ">
    <ruleId>CONF-297</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_YVLfUBZ1Ed-i6Lz80y5G5g" base_Class="_S7rEABZ1Ed-i6Lz80y5G5g" templateId="2.16.840.1.113883.10.20.1.38" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_0I4SABgxEd-PS-Y_2ABBMQ" base_Constraint="_aDaFUBguEd-PS-Y_2ABBMQ">
    <ruleId>CONF-2</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_0htBsBgxEd-PS-Y_2ABBMQ" base_Constraint="_J6HmMBgxEd-PS-Y_2ABBMQ">
    <ruleId>CONF-3</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_09CS0BgxEd-PS-Y_2ABBMQ" base_Constraint="_qYof8BgxEd-PS-Y_2ABBMQ">
    <ruleId>CONF-4</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_rTeiIBgyEd-PS-Y_2ABBMQ" base_Constraint="_fGirMBgyEd-PS-Y_2ABBMQ">
    <ruleId>CONF-6</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_CAtSkBg0Ed-PS-Y_2ABBMQ" base_Constraint="_LwvesBgzEd-PS-Y_2ABBMQ">
    <ruleId>CONF-8</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_uIGT8Bg0Ed-PS-Y_2ABBMQ" base_Constraint="_fkuKEBg0Ed-PS-Y_2ABBMQ">
    <ruleId>CONF-9</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_zP7JYBg0Ed-PS-Y_2ABBMQ" base_Constraint="_m-HZgBg0Ed-PS-Y_2ABBMQ">
    <ruleId>CONF-10</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_fdWhUBg1Ed-PS-Y_2ABBMQ" base_Constraint="_-rpl0Bg0Ed-PS-Y_2ABBMQ">
    <ruleId>CONF-11</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_eAHxgBg5Ed-PS-Y_2ABBMQ" severity="WARNING" base_Constraint="_gXpfABg4Ed-PS-Y_2ABBMQ">
    <ruleId>CONF-12</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_AoXX4Bg6Ed-PS-Y_2ABBMQ" base_Constraint="_1ivHQBg5Ed-PS-Y_2ABBMQ">
    <ruleId>CONF-13</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_p8bgkBg7Ed-PS-Y_2ABBMQ" severity="INFO" base_Constraint="_i9sM0Bg7Ed-PS-Y_2ABBMQ">
    <ruleId>CONF-14</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_M5z_UBtDEd-vGNAsDUJvgw" severity="WARNING"/>
  <CDA:AssociationValidation xmi:id="_KP7HwBtKEd-vGNAsDUJvgw" message="CCD Immunizations Section SHOULD contain [1..*] entry such that it, SHALL contain [1..1] Medication Activity (templateId: 2.16.840.1.113883.10.20.1.24)" severity="WARNING"/>
  <CDA:AssociationValidation xmi:id="_MVuWoBtKEd-vGNAsDUJvgw" message="CCD Immunizations Section SHOULD contain [1..*] entry such that it, SHALL contain [1..1] Supply Activity (templateId: 2.16.840.1.113883.10.20.1.34)" severity="WARNING"/>
  <CDA:EntryRelationship xmi:id="_iLcJ4DOtEd-5f4Yngl7nkw" message="CCD Policy Activity SHALL contain [1..1] entryRelationship such that it, SHALL contain [1..1] @typeCode=&quot;REFR&quot; REFR (refers to), SHALL contain [1..1] Authorization Activity (templateId: 2.16.840.1.113883.10.20.1.19)" typeCode="REFR"/>
  <CDA:CDATemplate xmi:id="_N-X_sCQYEeCxCon8a79rfA" base_Class="_Hj3aYCQYEeCxCon8a79rfA" templateId="2.16.840.1.113883.10.20.1.40"/>
  <CDA:ConformsTo xmi:id="_ps2bYCToEeCvyarv2dSCoQ" base_Generalization="_AwcXk2aKEd6Hk_bPOfEjYA">
    <ruleId>CONF-169</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_Z9cRUCTqEeCvyarv2dSCoQ" base_Generalization="_3cYVw2aKEd6Hk_bPOfEjYA">
    <ruleId>CONF-178</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_UEYWwCTrEeCvyarv2dSCoQ" base_Generalization="_s4YvUHrSEd68l9lQ-TLEBQ">
    <ruleId>CONF-508</ruleId>
  </CDA:ConformsTo>
  <CDA:ConstraintValidation xmi:id="_jBjgsCTrEeCvyarv2dSCoQ" base_Constraint="_ds-BoCTrEeCvyarv2dSCoQ">
    <ruleId>CONF-509</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_vJAvMDPoEeC5WtVOSkkuzw" base_Generalization="_QQ4jYHrSEd68l9lQ-TLEBQ">
    <ruleId>CONF-287</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_EuPLMDPpEeC5WtVOSkkuzw" base_Generalization="_PipkYHrSEd68l9lQ-TLEBQ">
    <ruleId>CONF-282</ruleId>
  </CDA:ConformsTo>
  <CDA:ConstraintValidation xmi:id="_bGtpEDPpEeC5WtVOSkkuzw" severity="INFO" base_Constraint="_VMu98DPpEeC5WtVOSkkuzw">
    <ruleId>CONF-280</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_HVylgEjgEeCOWNbpDoETQw" base_Generalization="_Hj4BcCQYEeCxCon8a79rfA">
    <ruleId>CONF-503</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_oZwq0EjiEeCOWNbpDoETQw" base_Generalization="_S72qMBZ1Ed-i6Lz80y5G5g">
    <ruleId>CONF-225</ruleId>
  </CDA:ConformsTo>
  <CDA:ConstraintValidation xmi:id="_oiMYoEjjEeCOWNbpDoETQw" severity="WARNING" base_Constraint="_heDAcEjjEeCOWNbpDoETQw">
    <ruleId>CONF-219</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_URxW8EjkEeCOWNbpDoETQw" severity="INFO">
    <ruleId>CONF-220</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_fBK44EjkEeCOWNbpDoETQw" severity="INFO">
    <ruleId>CONF-221</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_swUwgEjkEeCOWNbpDoETQw" severity="WARNING">
    <ruleId>CONF-222</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_CkDikEjlEeCOWNbpDoETQw" severity="INFO">
    <ruleId>CONF-223</ruleId>
  </CDA:ConstraintValidation>
  <CDA:AssociationValidation xmi:id="_LWnS4FSiEeClXYwIPeDNAQ" severity="INFO">
    <ruleId>CONF-437</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_kaZHIFSnEeClXYwIPeDNAQ" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-445</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_sPKrAFSnEeClXYwIPeDNAQ" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-441</ruleId>
    <ruleId>CONF-333</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_MvMnsFSoEeClXYwIPeDNAQ" severity="INFO" typeCode="COMP">
    <ruleId>CONF-446</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_t4MYIFTEEeCnnNnsbG2N3Q" severity="INFO">
    <ruleId>CONF-437</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_q9uVoFTFEeCnnNnsbG2N3Q" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-441</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_7GmdsFTFEeCnnNnsbG2N3Q" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-445</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_F9S6cFTGEeCnnNnsbG2N3Q" severity="INFO" typeCode="COMP">
    <ruleId>CONF-446</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_tiOrAFTLEeCnnNnsbG2N3Q" severity="INFO">
    <ruleId>CONF-437</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_zA8WcFTLEeCnnNnsbG2N3Q" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-441</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_0vCP8FTLEeCnnNnsbG2N3Q" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-445</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_1tW5YFTLEeCnnNnsbG2N3Q" severity="INFO" typeCode="COMP">
    <ruleId>CONF-446</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_MFErsFZgEeCvPvJeMYeitg" severity="INFO">
    <ruleId>CONF-437</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_gd-egFZgEeCvPvJeMYeitg" message="" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-441</ruleId>
    <ruleId>CONF-333</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_mWhmQFZgEeCvPvJeMYeitg" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-445</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_plKsgFZgEeCvPvJeMYeitg" message="" severity="INFO" typeCode="COMP">
    <ruleId>CONF-446</ruleId>
  </CDA:EntryRelationship>
  <CDA:CDATemplate xmi:id="_bf4ywMhBEeCHk-lvWGDTdA" base_Class="_mRUKcMhAEeCHk-lvWGDTdA" templateId="2.16.840.1.113883.10.20.1.56" assigningAuthorityName="HL7"/>
  <CDA:AssociationValidation xmi:id="_19EQYMjqEeChgrgmBsw26A" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_TKaM8MjuEeChgrgmBsw26A" templateId="2.16.840.1.113883.10.20.1.42" assigningAuthorityName="HL7"/>
  <CDA:EntryRelationship xmi:id="_30pDwMjvEeChgrgmBsw26A"/>
  <CDA:ConstraintValidation xmi:id="_8KxhEMjwEeChgrgmBsw26A"/>
  <CDA:ConstraintValidation xmi:id="_8mP8IMjwEeChgrgmBsw26A"/>
  <CDA:EntryRelationship xmi:id="_-g7BkMnLEeCDOYZyQPaRHg">
    <ruleId>CONF-197</ruleId>
    <ruleId>CONF-198</ruleId>
  </CDA:EntryRelationship>
  <CDA:CDATemplate xmi:id="_qB57QMziEeCvbrjDQpuvkw" base_Class="_RzqOkMziEeCvbrjDQpuvkw" templateId="2.16.840.1.113883.10.20.1.36">
    <ruleId>CONF-101</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_dd-EIMzjEeCvbrjDQpuvkw">
    <ruleId>CONF-104</ruleId>
  </CDA:PropertyValidation>
  <CDA:ConstraintValidation xmi:id="_l8ZB8MzjEeCvbrjDQpuvkw" severity="INFO" base_Constraint="_hgF1wMzjEeCvbrjDQpuvkw">
    <ruleId>CONF-106</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2cRUwMzjEeCvbrjDQpuvkw" severity="INFO" base_Constraint="_oc7FAMzjEeCvbrjDQpuvkw">
    <ruleId>CONF-107</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_37MJ0MzjEeCvbrjDQpuvkw"/>
  <CDA:ConstraintValidation xmi:id="_4jNMEMzjEeCvbrjDQpuvkw"/>
  <CDA:ConformsTo xmi:id="_4OfbYAbuEeGhIchBK31weg" message="An advance directive reference (templateId 2.16.840.1.113883.10.20.1.36) SHALL be represented with Observation / reference / ExternalDocument" base_Generalization="_fL_VIN-7EeCszpyO3DRrcA">
    <ruleId>CONF-101</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_fLEekAcMEeG7RIZ2nvEt0A" base_Generalization="_mRUKcchAEeCHk-lvWGDTdA">
    <ruleId>CONF-247</ruleId>
  </CDA:ConformsTo>
  <CDA:ActRelationship xmi:id="_-d1SgAlfEeG2cvzDN75y9w"/>
  <CDA:ConstraintValidation xmi:id="_If0fkAmGEeG2cvzDN75y9w" base_Constraint="_Ch_2QAmGEeG2cvzDN75y9w">
    <ruleId>CONF-105</ruleId>
  </CDA:ConstraintValidation>
  <CDA:AssociationValidation xmi:id="_aStGYAoKEeGu0LskOlDe_A">
    <ruleId>CONF-437</ruleId>
  </CDA:AssociationValidation>
  <CDA:ActRelationship xmi:id="_a3U2YAoKEeGu0LskOlDe_A"/>
  <CDA:AssociationValidation xmi:id="_fmmdkAo5EeGuLYmxYntHkA" severity="INFO"/>
  <CDA:CDATemplate xmi:id="_DRSHYA_XEeG7sMwiyo3Ifw" base_Class="_56Z3kA_WEeG7sMwiyo3Ifw" templateId="2.16.840.1.113883.10.20.1.42"/>
  <CDA:CDATemplate xmi:id="_jGUI0HfTEd6ZeOKq_2_a9g" base_Class="_W6aMoHfTEd6ZeOKq_2_a9g" templateId="2.16.840.1.113883.10.20.1.24" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_YC5CMHfUEd6ZeOKq_2_a9g" base_Class="_OvmR4HfUEd6ZeOKq_2_a9g" templateId="2.16.840.1.113883.10.20.1.8" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_q_v4UHfVEd6ZeOKq_2_a9g" base_Class="_dAAnAHfVEd6ZeOKq_2_a9g" templateId="2.16.840.1.113883.10.20.1.34" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_azcEYIiBEd66cKocspyVOg" base_Class="_VL2w0IiBEd66cKocspyVOg" templateId="2.16.840.1.113883.10.20.1.46" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_ovERwIiBEd66cKocspyVOg" base_Class="_lgLT4IiBEd66cKocspyVOg" templateId="2.16.840.1.113883.10.20.1.47" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_P0aVkIiCEd66cKocspyVOg" base_Class="_8Xj7UIiBEd66cKocspyVOg" templateId="2.16.840.1.113883.10.20.1.53" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_ALcL0K4BEd6_ioDelDcPPg" base_Constraint="_yqHDEI5qEd6x-qh9FleSiA">
    <ruleId>CONF-305</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_R3XSwMKAEd6-XpBv2uxYrQ" base_Class="_F9_RAMKAEd6-XpBv2uxYrQ" templateId="2.16.840.1.113883.10.20.1.49" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_UkqmgMKAEd6-XpBv2uxYrQ" base_Class="_IuPLEMKAEd6-XpBv2uxYrQ" templateId="2.16.840.1.113883.10.20.1.43" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_O-gakMMVEd6-XpBv2uxYrQ" base_Class="_JpjIEMMVEd6-XpBv2uxYrQ" templateId="2.16.840.1.113883.10.20.1.52" assigningAuthorityName="CCD"/>
  <CDA:ConformsTo xmi:id="_zBlHAOebEd-aaJELhEID-A" base_Generalization="_sAvQsHfUEd6ZeOKq_2_a9g">
    <ruleId>CONF-304</ruleId>
  </CDA:ConformsTo>
  <CDA:ConstraintValidation xmi:id="_gcQqUOeeEd-aaJELhEID-A" severity="WARNING" base_Constraint="_7aYTEOedEd-aaJELhEID-A">
    <ruleId>CONF-311</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_nT9sgOefEd-aaJELhEID-A" severity="INFO" base_Constraint="_lUnD4OefEd-aaJELhEID-A">
    <ruleId>CONF-314</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_3ja9sOefEd-aaJELhEID-A" base_Constraint="_02VFUOefEd-aaJELhEID-A">
    <ruleId>CONF-315</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_qN8_IOekEd-aaJELhEID-A" severity="WARNING" base_Constraint="_mJxYAOekEd-aaJELhEID-A">
    <ruleId>CONF-298</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_UkpJUOtSEd-aaJELhEID-A" base_Generalization="_pWBhcHfVEd6ZeOKq_2_a9g">
    <ruleId>CONF-316</ruleId>
  </CDA:ConformsTo>
  <CDA:ConstraintValidation xmi:id="_bz5lUOtSEd-aaJELhEID-A" base_Constraint="_bGwLcOtSEd-aaJELhEID-A">
    <ruleId>CONF-317</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_XpPQ0OtUEd-aaJELhEID-A" severity="INFO" base_Constraint="_BmvqAOtUEd-aaJELhEID-A">
    <ruleId>CONF-323</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_eBqygOtUEd-aaJELhEID-A" severity="INFO" base_Constraint="_OQgm4OtUEd-aaJELhEID-A">
    <ruleId>CONF-324</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_8B2zMOtVEd-aaJELhEID-A" severity="INFO" base_Constraint="_QRLeIOtUEd-aaJELhEID-A">
    <ruleId>CONF-325</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_h-39AOtWEd-aaJELhEID-A" base_Constraint="_gPNWMOtWEd-aaJELhEID-A">
    <ruleId>CONF-326</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_i4OCMOuKEd-HcKrkbxroPA" severity="INFO" base_Constraint="_a-4ucOuKEd-HcKrkbxroPA">
    <ruleId>CONF-327</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_YhnI0OuMEd-HcKrkbxroPA" severity="INFO" base_Constraint="_SUUgIOuMEd-HcKrkbxroPA">
    <ruleId>CONF-328</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_BXbZ0OuPEd-HcKrkbxroPA" base_Constraint="__SV8oOuOEd-HcKrkbxroPA">
    <ruleId>CONF-329</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_LgP4YOuZEd-HcKrkbxroPA" base_Generalization="_MqSJ4MKAEd6-XpBv2uxYrQ">
    <ruleId>CONF-331</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_1-oKQCpzEeCuGIaOlnUvyw" base_Generalization="_NTNyIMKAEd6-XpBv2uxYrQ">
    <ruleId>CONF-335</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_auzGcCp0EeCuGIaOlnUvyw" base_Generalization="_ciR0EIjqEd66cKocspyVOg">
    <ruleId>CONF-340</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_tv8fUCp4EeCuGIaOlnUvyw" base_Generalization="_dKuUIIjqEd66cKocspyVOg">
    <ruleId>CONF-352</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_S948oCp5EeCuGIaOlnUvyw" base_Generalization="_zWedQIjtEd66cKocspyVOg">
    <ruleId>CONF-356</ruleId>
  </CDA:ConformsTo>
  <CDA:ConstraintValidation xmi:id="_PBhYQCp6EeCuGIaOlnUvyw" base_Constraint="_KmHj8Cp6EeCuGIaOlnUvyw">
    <ruleId>CONF-354</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_uyM7oCp6EeCuGIaOlnUvyw" severity="INFO" base_Constraint="_s53hACp6EeCuGIaOlnUvyw">
    <ruleId>CONF-355</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_l1CW4Cp7EeCuGIaOlnUvyw" base_Constraint="_jDZ8wCp7EeCuGIaOlnUvyw">
    <ruleId>CONF-357</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EDZugC2TEeCrtaini_hOYQ" base_Constraint="_nem8wCp7EeCuGIaOlnUvyw">
    <ruleId>CONF-358</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_FwlCAC2TEeCrtaini_hOYQ" severity="WARNING" base_Constraint="_s4BRcCp7EeCuGIaOlnUvyw">
    <ruleId>CONF-359</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_vjL18C2WEeCrtaini_hOYQ" base_Constraint="_u3RyMC2WEeCrtaini_hOYQ">
    <ruleId>CONF-363</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_LKODYC2XEeCrtaini_hOYQ" severity="INFO" base_Constraint="_Je8NUC2XEeCrtaini_hOYQ">
    <ruleId>CONF-364</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_SD67kD6tEeCAHY6aowfd8Q" severity="INFO" base_Constraint="_HyK-8D6tEeCAHY6aowfd8Q">
    <ruleId>CONF-365</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_xiATED6tEeCAHY6aowfd8Q" severity="WARNING" base_Constraint="_T-9E4D6tEeCAHY6aowfd8Q">
    <ruleId>CONF-367</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_tBNAAEqjEeCJlNjgFmcEiA" severity="WARNING" base_Constraint="_pekmwEqjEeCJlNjgFmcEiA">
    <ruleId>CONF-451</ruleId>
  </CDA:ConstraintValidation>
  <uml:Association xmi:id="_OXcaMiTMEeCvyarv2dSCoQ"/>
  <CDA:CDATemplate xmi:id="_ECBV4Ho6Ed6UPbrR4QTFoQ" base_Class="_GgvgUDxbEd6JwqSGecoePg" templateId="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_JHA5wHo6Ed6UPbrR4QTFoQ" base_Class="_T6kfkGaJEd6Hk_bPOfEjYA" templateId="2.16.840.1.113883.10.20.1.51" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_N2xNcHo6Ed6UPbrR4QTFoQ" base_Class="_IjIO0DxbEd6JwqSGecoePg" templateId="2.16.840.1.113883.10.20.1.28" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_S9yxoHo6Ed6UPbrR4QTFoQ" base_Class="_vjPMEGaGEd6Hk_bPOfEjYA" templateId="2.16.840.1.113883.10.20.1.11" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_dbSEMHo6Ed6UPbrR4QTFoQ" base_Class="_TrwngGaJEd6Hk_bPOfEjYA" templateId="2.16.840.1.113883.10.20.1.50" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_1DZAcBK1Ed-6K-YJpbwRmQ" base_Constraint="_oImlABK1Ed-6K-YJpbwRmQ">
    <ruleId>CONF-151</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_vCq-UBTdEd-6K-YJpbwRmQ" severity="WARNING" base_Constraint="_tL4b0BTdEd-6K-YJpbwRmQ">
    <ruleId>CONF-140</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_hpjAEBToEd-6K-YJpbwRmQ" severity="WARNING" base_Constraint="_fIRWIBToEd-6K-YJpbwRmQ">
    <ruleId>CONF-153</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_5vwDsBTrEd-6K-YJpbwRmQ" message="CCD Problem Observation MAY satisfy: The value for entryRelationship / @typeCode in a problem observation MAY be &quot;SUBJ&quot; &quot;Subject&quot; 2.16.840.1.113883.5.1002 ActRelationshipType STATIC to reference an age observation." severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_OrufoBTyEd-6K-YJpbwRmQ" base_Constraint="_LgbBQBTyEd-6K-YJpbwRmQ">
    <ruleId>CONF-161</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_a8sfsBZrEd-kKd2N285_Sw" severity="INFO" base_Constraint="_WdDEkBZrEd-kKd2N285_Sw">
    <ruleId>CONF-179</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_vMC4cBZsEd-kKd2N285_Sw" severity="INFO" base_Constraint="_vL9Y4BZsEd-kKd2N285_Sw">
    <ruleId>CONF-180</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_rqaacBg9Ed-PS-Y_2ABBMQ" severity="WARNING" base_Constraint="_hVw60Bg9Ed-PS-Y_2ABBMQ">
    <ruleId>CONF-256</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_XQWSkCTiEeCvyarv2dSCoQ" base_Generalization="_H4qVgDxbEd6JwqSGecoePg">
    <ruleId>CONF-145</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_6HW4QCTjEeCvyarv2dSCoQ" base_Generalization="_KLIucDxbEd6JwqSGecoePg">
    <ruleId>CONF-154</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_dzERUCTlEeCvyarv2dSCoQ" base_Generalization="_Trwng2aJEd6Hk_bPOfEjYA">
    <ruleId>CONF-163</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_6-4EMCTlEeCvyarv2dSCoQ" base_Generalization="_T6kfk2aJEd6Hk_bPOfEjYA">
    <ruleId>CONF-166</ruleId>
  </CDA:ConformsTo>
  <CDA:CDATemplate xmi:id="_7FE68Ho3Ed6UPbrR4QTFoQ" base_Class="_7tlrAGwWEd6q29qQGU-SBA" templateId="2.16.840.1.113883.10.20.1.22" assigningAuthorityName="CCD">
    <ruleId>CONF-190</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_LCCG4Ho4Ed6UPbrR4QTFoQ" base_Class="_5ET7oGwWEd6q29qQGU-SBA" templateId="2.16.840.1.113883.10.20.1.4" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_W0JDAHo4Ed6UPbrR4QTFoQ" base_Class="_9QFYgGwWEd6q29qQGU-SBA" templateId="2.16.840.1.113883.10.20.1.23" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_ohNTUIHbEd6Ncrr6L3Ublw" base_Class="_joG2YIHbEd6Ncrr6L3Ublw" templateId="2.16.840.1.113883.10.20.1.42" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_2MTUUMjsEeChgrgmBsw26A" base_Constraint="_ze9kUMjsEeChgrgmBsw26A">
    <ruleId>CONF-189</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_SsPQ8MjzEeChgrgmBsw26A" base_Constraint="_HhTCgMjzEeChgrgmBsw26A">
    <ruleId>CONF-205</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_TKjkoMjzEeChgrgmBsw26A" severity="WARNING" base_Constraint="_OXCyUMjzEeChgrgmBsw26A"/>
  <CDA:ConstraintValidation xmi:id="_33NA0Mj1EeChgrgmBsw26A" severity="WARNING" base_Constraint="_x8Ma8Mj1EeChgrgmBsw26A">
    <ruleId>CONF-184</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Er9swMj2EeChgrgmBsw26A" base_Constraint="_A1-SoMj2EeChgrgmBsw26A">
    <ruleId>CONF-208</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_PsG5EMj5EeChgrgmBsw26A" base_Constraint="_LVZ-kMj5EeChgrgmBsw26A"/>
  <CDA:ConstraintValidation xmi:id="_XODAgMj5EeChgrgmBsw26A" base_Constraint="_SY-H8Mj5EeChgrgmBsw26A"/>
  <CDA:ConstraintValidation xmi:id="_KQM_IMj7EeChgrgmBsw26A" base_Constraint="_HNYuYMj7EeChgrgmBsw26A">
    <ruleId>CONF-214</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_OPPAgMj7EeChgrgmBsw26A" severity="WARNING" base_Constraint="_KswYQMj7EeChgrgmBsw26A"/>
  <CDA:ConstraintValidation xmi:id="_rPGMoMj8EeChgrgmBsw26A" severity="WARNING" base_Constraint="_pfG1sMj8EeChgrgmBsw26A"/>
  <CDA:ConstraintValidation xmi:id="_uNeCQMj8EeChgrgmBsw26A" severity="WARNING" base_Constraint="_smqcgMj8EeChgrgmBsw26A"/>
  <CDA:ConstraintValidation xmi:id="_G19D0MkREeChgrgmBsw26A" base_Constraint="__NXh0MkQEeChgrgmBsw26A">
    <ruleId>CONF-212</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Ik4DwMkREeChgrgmBsw26A" base_Constraint="_Ae5bIMkREeChgrgmBsw26A">
    <ruleId>CONF-213</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_JYhuQMkREeChgrgmBsw26A" base_Constraint="_B7YnQMkREeChgrgmBsw26A"/>
  <CDA:ConstraintValidation xmi:id="_J4r1AMkREeChgrgmBsw26A" severity="WARNING" base_Constraint="_C-wv0MkREeChgrgmBsw26A">
    <ruleId>CONF-215</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_RTlgUMkREeChgrgmBsw26A" severity="WARNING" base_Constraint="_NFDqYMkREeChgrgmBsw26A">
    <ruleId>CONF-217</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Rpv9kMkREeChgrgmBsw26A" severity="WARNING" base_Constraint="_GOW4UMkREeChgrgmBsw26A">
    <ruleId>CONF-218</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ThDgoMkVEeChgrgmBsw26A" severity="WARNING" base_Constraint="_GmHUMMkVEeChgrgmBsw26A">
    <ruleId>CONF-219</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_gcIYcAb5EeGhIchBK31weg" base_Generalization="_my2UEIHbEd6Ncrr6L3Ublw">
    <ruleId>CONF-196</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_DpKt8Ab6EeGhIchBK31weg" base_Generalization="_lBDMMGwXEd6q29qQGU-SBA">
    <ruleId>CONF-200</ruleId>
  </CDA:ConformsTo>
  <CDA:CDATemplate xmi:id="_ioUJwHo6Ed6UPbrR4QTFoQ" base_Class="_MQHZEHDAEd6eItyqb1FoWg" templateId="2.16.840.1.113883.10.20.1.31" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_n00D0Ho6Ed6UPbrR4QTFoQ" base_Class="_Ht_RsHDAEd6eItyqb1FoWg" templateId="2.16.840.1.113883.10.20.1.32" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_940IIIiAEd66cKocspyVOg" base_Class="_7TVToIiAEd66cKocspyVOg" templateId="2.16.840.1.113883.10.20.1.14" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_ykTEIBtCEd-vGNAsDUJvgw" severity="WARNING" base_Constraint="_x4g8MBtCEd-vGNAsDUJvgw">
    <ruleId>CONF-398</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_oHyMgBtDEd-vGNAsDUJvgw" base_Constraint="_mSUfsBtDEd-vGNAsDUJvgw">
    <ruleId>CONF-402</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2VOtMBtEEd-vGNAsDUJvgw" base_Constraint="_06WqoBtEEd-vGNAsDUJvgw">
    <ruleId>CONF-406</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ZTUAsBtFEd-vGNAsDUJvgw" severity="WARNING" base_Constraint="_XhWT0BtFEd-vGNAsDUJvgw">
    <ruleId>CONF-413</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_OzzqABtHEd-vGNAsDUJvgw" severity="WARNING" base_Constraint="_Jnv00BtHEd-vGNAsDUJvgw">
    <ruleId>CONF-419</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_imJzIBtHEd-vGNAsDUJvgw" base_Constraint="_g4G88BtHEd-vGNAsDUJvgw">
    <ruleId>CONF-420</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_N9IrQBtIEd-vGNAsDUJvgw" base_Constraint="_MZDpYBtIEd-vGNAsDUJvgw">
    <ruleId>CONF-421</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_cdbpcBgTEeCf9aMNaCAtDQ" base_Generalization="_eOylIHDAEd6eItyqb1FoWg">
    <ruleId>CONF-407</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_VH0mcBgWEeCf9aMNaCAtDQ" base_Generalization="_hZltMHDAEd6eItyqb1FoWg">
    <ruleId>CONF-393</ruleId>
  </CDA:ConformsTo>
  <CDA:CDATemplate xmi:id="_ueyBcHo6Ed6UPbrR4QTFoQ" base_Class="_Wa2uwHDAEd6eItyqb1FoWg" templateId="2.16.840.1.113883.10.20.1.33" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_zFaOUHo6Ed6UPbrR4QTFoQ" base_Class="_UOVM0HDAEd6eItyqb1FoWg" templateId="2.16.840.1.113883.10.20.1.15" assigningAuthorityName="CCD">
    <ruleId>CONF-232</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_Uz0OQMg_EeCHk-lvWGDTdA"/>
  <CDA:ConstraintValidation xmi:id="_K_FvYMhAEeCHk-lvWGDTdA" severity="WARNING" base_Constraint="_BhSYMMhAEeCHk-lvWGDTdA">
    <ruleId>CONF-243</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_6qDvwMhBEeCHk-lvWGDTdA" severity="WARNING" base_Constraint="_2uIswMhBEeCHk-lvWGDTdA">
    <ruleId>CONF-250</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_FzydQMhCEeCHk-lvWGDTdA" severity="WARNING" base_Constraint="_Ag6OYMhCEeCHk-lvWGDTdA">
    <ruleId>CONF-251</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_GK_cUMhCEeCHk-lvWGDTdA" severity="WARNING" base_Constraint="_EIjDcMhCEeCHk-lvWGDTdA">
    <ruleId>CONF-252</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_O9lTUMhCEeCHk-lvWGDTdA" severity="INFO" base_Constraint="_HZOxEMhCEeCHk-lvWGDTdA">
    <ruleId>CONF-253</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_V_jhQMhCEeCHk-lvWGDTdA" severity="WARNING" base_Constraint="_Q7JzQMhCEeCHk-lvWGDTdA">
    <ruleId>CONF-254</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Wj7ZoMhCEeCHk-lvWGDTdA" severity="INFO" base_Constraint="_TaQ6AMhCEeCHk-lvWGDTdA">
    <ruleId>CONF-255</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_BcTtcAb9EeGhIchBK31weg" base_Generalization="_krQSQHDAEd6eItyqb1FoWg">
    <ruleId>CONF-237</ruleId>
  </CDA:ConformsTo>
  <CDA:CDATemplate xmi:id="_ug3cYHfaEd6ZeOKq_2_a9g" base_Class="_rJDcIHDAEd6eItyqb1FoWg" templateId="2.16.840.1.113883.10.20.1.3" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_dumwMHo3Ed6UPbrR4QTFoQ" base_Class="_mO8KEHJWEd6cacuAk5qrhg" templateId="2.16.840.1.113883.10.20.1.21" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_4sxEkIiBEd66cKocspyVOg" base_Class="_2QJRIIiBEd66cKocspyVOg" templateId="2.16.840.1.113883.10.20.1.45" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_RXNr8FS5EeCnnNnsbG2N3Q" base_Constraint="_Nnza8FS5EeCnnNnsbG2N3Q">
    <ruleId>CONF-474</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_5mNNgFS7EeCnnNnsbG2N3Q" base_Constraint="_w0p4UFS7EeCnnNnsbG2N3Q">
    <ruleId>CONF-475</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_AfJbQFS8EeCnnNnsbG2N3Q" severity="INFO" base_Constraint="_9iVr4FS7EeCnnNnsbG2N3Q">
    <ruleId>CONF-476</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_7xN3EFS8EeCnnNnsbG2N3Q" severity="WARNING" base_Constraint="_4hhn8FS8EeCnnNnsbG2N3Q">
    <ruleId>CONF-477</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_CWndwFS9EeCnnNnsbG2N3Q" severity="INFO" base_Constraint="__JhPoFS8EeCnnNnsbG2N3Q">
    <ruleId>CONF-478</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_MAErUFS9EeCnnNnsbG2N3Q" base_Constraint="_FqxWIFS9EeCnnNnsbG2N3Q">
    <ruleId>CONF-479</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_VlvlEFS9EeCnnNnsbG2N3Q" base_Generalization="_lD-rMIjxEd66cKocspyVOg">
    <ruleId>CONF-472</ruleId>
  </CDA:ConformsTo>
  <CDA:ConstraintValidation xmi:id="_SOIQkMK8EeCl2eGe9IRxKw" severity="INFO" base_Constraint="_OCVlkMK8EeCl2eGe9IRxKw"/>
  <CDA:ConstraintValidation xmi:id="_yINAgMK8EeCl2eGe9IRxKw" severity="INFO" base_Constraint="_efzdkMK8EeCl2eGe9IRxKw"/>
  <CDA:ConstraintValidation xmi:id="_ye96sMK8EeCl2eGe9IRxKw" severity="INFO" base_Constraint="_lNKGYMK8EeCl2eGe9IRxKw"/>
  <CDA:ConformsTo xmi:id="_3HaRAAcOEeG7RIZ2nvEt0A" base_Generalization="_vuapUHJjEd6cacuAk5qrhg">
    <ruleId>CONF-458</ruleId>
  </CDA:ConformsTo>
  <CDA:CDATemplate xmi:id="_dqEZAHo4Ed6UPbrR4QTFoQ" base_Class="_CinbMHDPEd6eItyqb1FoWg" templateId="2.16.840.1.113883.10.20.1.6" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_DW_N4Hi8Ed-6wJLq2P_7OA" severity="WARNING">
    <ruleId>CONF-376</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_bmhh0FaBEeGCdLgBm6VHOQ" severity="WARNING" base_Constraint="_ItcjAFaBEeGCdLgBm6VHOQ"/>
  <CDA:CDATemplate xmi:id="_RJAToHrREd68l9lQ-TLEBQ" base_Class="_PgsSAHrREd68l9lQ-TLEBQ" templateId="2.16.840.1.113883.10.20.1.2" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_sPJagHrREd68l9lQ-TLEBQ" base_Class="_qV72IHrREd68l9lQ-TLEBQ" templateId="2.16.840.1.113883.10.20.1.18" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_TOYEABW5Ed-6K-YJpbwRmQ" base_Constraint="_H_fwwBW5Ed-6K-YJpbwRmQ">
    <ruleId>CONF-269</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_dkY4wBW9Ed-6K-YJpbwRmQ" severity="WARNING" base_Constraint="_byigoBW9Ed-6K-YJpbwRmQ">
    <ruleId>CONF-273</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_KDmkQBW-Ed-6K-YJpbwRmQ" base_Constraint="_IEdXABW-Ed-6K-YJpbwRmQ">
    <ruleId>CONF-274</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_p7iUQBXAEd-6K-YJpbwRmQ" severity="WARNING" base_Constraint="_ofo-ABXAEd-6K-YJpbwRmQ">
    <ruleId>CONF-279</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_ycbzkFfeEeCQ8PeHNHg5Pw" base_Generalization="_9yumAHrREd68l9lQ-TLEBQ">
    <ruleId>CONF-262</ruleId>
  </CDA:ConformsTo>
  <CDA:ConstraintValidation xmi:id="_B8jdEFfgEeCQ8PeHNHg5Pw" base_Constraint="_-TbaQFffEeCQ8PeHNHg5Pw">
    <ruleId>CONF-275</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_sYKSEFfgEeCQ8PeHNHg5Pw" base_Constraint="_e5Zm4FfgEeCQ8PeHNHg5Pw">
    <ruleId>CONF-277</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_0iz_UFfgEeCQ8PeHNHg5Pw" base_Constraint="_udUAsFfgEeCQ8PeHNHg5Pw">
    <ruleId>CONF-278</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_NjnxYFfhEeCQ8PeHNHg5Pw" base_Constraint="_HuDFIFfhEeCQ8PeHNHg5Pw">
    <ruleId>CONF-276</ruleId>
  </CDA:ConstraintValidation>
  <uml:Association xmi:id="_T9G4QMJ1Ed6-XpBv2uxYrQ"/>
  <CDA:CDATemplate xmi:id="_p_Lr0IjvEd66cKocspyVOg" base_Class="_p_LEwIjvEd66cKocspyVOg" templateId="2.16.840.1.113883.10.20.1.12" assigningAuthorityName="CCD"/>
  <CDA:AssociationValidation xmi:id="_W_edEMJ1Ed6-XpBv2uxYrQ" severity="WARNING" base_Association="_T9G4QMJ1Ed6-XpBv2uxYrQ"/>
  <CDA:PropertyValidation xmi:id="_nMalwsJ1Ed6-XpBv2uxYrQ" severity="WARNING">
    <ruleId>CONF-432</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_nMalw8J1Ed6-XpBv2uxYrQ">
    <ruleId>CONF-428</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_nMalxMJ1Ed6-XpBv2uxYrQ">
    <ruleId>CONF-429</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_9Sz_EP_UEd6Y8ICOr4M99Q">
    <ruleId>CONF-433</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_KBTTUDH7Ed-saqiXO4OYhQ" base_Class="_to5TUDH6Ed-saqiXO4OYhQ" templateId="2.16.840.1.113883.10.20.1.29" contextDependent="true">
    <ruleId>CONF-427</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_Kd8MADH7Ed-saqiXO4OYhQ" base_Class="_3lHE0DH6Ed-saqiXO4OYhQ" templateId="2.16.840.1.113883.10.20.1.29" contextDependent="true"/>
  <CDA:CDATemplate xmi:id="_K6Ac8DH7Ed-saqiXO4OYhQ" base_Class="_6mhnYDH6Ed-saqiXO4OYhQ" templateId="2.16.840.1.113883.10.20.1.29" contextDependent="true">
    <ruleId>CONF-427</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_VarrAFQBEeCl3PxyJ8BBuQ">
    <ruleId>CONF-433</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_Y2lKIFQBEeCl3PxyJ8BBuQ" severity="WARNING">
    <ruleId>CONF-432</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_cHm2AFQBEeCl3PxyJ8BBuQ">
    <ruleId>CONF-430</ruleId>
    <ruleId>CONF-431</ruleId>
  </CDA:PropertyValidation>
  <CDA:ValueSetConstraint xmi:id="_-NOQcFQBEeCl3PxyJ8BBuQ" identifier="2.16.840.1.113883.1.11.20.15" name="ProcedureStatusCode" version="20061017"/>
  <CDA:PropertyValidation xmi:id="_GrgrYFQCEeCl3PxyJ8BBuQ">
    <ruleId>CONF-429</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_R_5JsFQCEeCl3PxyJ8BBuQ">
    <ruleId>CONF-428</ruleId>
  </CDA:PropertyValidation>
  <CDA:ConformsTo xmi:id="_sDEXsFQCEeCl3PxyJ8BBuQ" base_Generalization="_3lHr4DH6Ed-saqiXO4OYhQ">
    <ruleId>CONF-427</ruleId>
  </CDA:ConformsTo>
  <CDA:ConstraintValidation xmi:id="_8lrOYFQCEeCl3PxyJ8BBuQ" severity="WARNING" base_Constraint="_0FmDsFQCEeCl3PxyJ8BBuQ">
    <ruleId>CONF-419</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="_LSwRYFQEEeCl3PxyJ8BBuQ">
    <ruleId>CONF-433</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_NCMOsFQEEeCl3PxyJ8BBuQ" severity="WARNING">
    <ruleId>CONF-432</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_NobIQFQEEeCl3PxyJ8BBuQ">
    <ruleId>CONF-429</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_Od1GQFQEEeCl3PxyJ8BBuQ"/>
  <CDA:PropertyValidation xmi:id="_PCboIFQEEeCl3PxyJ8BBuQ">
    <ruleId>CONF-430</ruleId>
    <ruleId>CONF-431</ruleId>
  </CDA:PropertyValidation>
  <CDA:ValueSetConstraint xmi:id="_PwQXcFQEEeCl3PxyJ8BBuQ" identifier="2.16.840.1.113883.1.11.20.15" name="ProcedureStatusCode" version="20061017"/>
  <CDA:PropertyValidation xmi:id="_GUaSoFQFEeCl3PxyJ8BBuQ">
    <ruleId>CONF-433</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_I3esUFQFEeCl3PxyJ8BBuQ" severity="WARNING">
    <ruleId>CONF-432</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_MC2cIFQFEeCl3PxyJ8BBuQ">
    <ruleId>CONF-430</ruleId>
    <ruleId>CONF-431</ruleId>
  </CDA:PropertyValidation>
  <CDA:ValueSetConstraint xmi:id="_MDv0AFQFEeCl3PxyJ8BBuQ" identifier="2.16.840.1.113883.1.11.20.15" name="ProcedureStatusCode" version="20061017"/>
  <CDA:PropertyValidation xmi:id="_TQgVoFQFEeCl3PxyJ8BBuQ">
    <ruleId>CONF-428</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_WP1NgFQFEeCl3PxyJ8BBuQ">
    <ruleId>CONF-429</ruleId>
  </CDA:PropertyValidation>
  <CDA:ConstraintValidation xmi:id="_THgIMFSVEeClXYwIPeDNAQ" severity="WARNING">
    <ruleId>CONF-434</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_UtimAFSiEeClXYwIPeDNAQ" severity="INFO">
    <ruleId>CONF-438</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_I7kscFSlEeClXYwIPeDNAQ" severity="INFO">
    <ruleId>CONF-439</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_W2iLcFSlEeClXYwIPeDNAQ">
    <ruleId>CONF-440</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_n8mNIFSoEeClXYwIPeDNAQ">
    <ruleId>CONF-447</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_5icXkFSqEeClXYwIPeDNAQ" severity="INFO">
    <ruleId>CONF-448</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_7TW7kFSqEeClXYwIPeDNAQ" severity="WARNING">
    <ruleId>CONF-452</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_H_9xEFSrEeClXYwIPeDNAQ" severity="INFO">
    <ruleId>CONF-442</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_dUqw4FTDEeCnnNnsbG2N3Q" severity="WARNING">
    <ruleId>CONF-434</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_FUYVwFTFEeCnnNnsbG2N3Q" severity="INFO">
    <ruleId>CONF-438</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_KGlggFTFEeCnnNnsbG2N3Q" severity="INFO">
    <ruleId>CONF-439</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_UhPhgFTFEeCnnNnsbG2N3Q">
    <ruleId>CONF-440</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_yNVW8FTFEeCnnNnsbG2N3Q" severity="INFO">
    <ruleId>CONF-442</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_bmoaYFTGEeCnnNnsbG2N3Q">
    <ruleId>CONF-447</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_fOQBUFTGEeCnnNnsbG2N3Q" severity="INFO">
    <ruleId>CONF-448</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_hAc-wFTGEeCnnNnsbG2N3Q" severity="WARNING">
    <ruleId>CONF-452</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_iox1MFTLEeCnnNnsbG2N3Q" severity="INFO">
    <ruleId>CONF-443</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_3vGusFTLEeCnnNnsbG2N3Q" severity="WARNING">
    <ruleId>CONF-434</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_DKS_oFTMEeCnnNnsbG2N3Q" severity="INFO">
    <ruleId>CONF-438</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_D6WjkFTMEeCnnNnsbG2N3Q" severity="INFO">
    <ruleId>CONF-439</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_E77VUFTMEeCnnNnsbG2N3Q">
    <ruleId>CONF-440</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Gx5_gFTMEeCnnNnsbG2N3Q" severity="INFO">
    <ruleId>CONF-442</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_KDPNYFTMEeCnnNnsbG2N3Q">
    <ruleId>CONF-447</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_K5AXwFTMEeCnnNnsbG2N3Q" severity="INFO">
    <ruleId>CONF-448</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_LY4KoFTMEeCnnNnsbG2N3Q" severity="WARNING">
    <ruleId>CONF-452</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ValueSetConstraint xmi:id="_MF4ukFZhEeCvPvJeMYeitg" identifier="2.16.840.1.113883.1.11.20.15" name="ProcedureStatusCode" version="20061017"/>
  <CDA:PropertyValidation xmi:id="_Vm0SQFZhEeCvPvJeMYeitg">
    <ruleId>CONF-430</ruleId>
    <ruleId>CONF-431</ruleId>
  </CDA:PropertyValidation>
  <CDA:ConstraintValidation xmi:id="_H0O2sFZiEeCvPvJeMYeitg" severity="WARNING">
    <ruleId>CONF-434</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_JBvLoFZiEeCvPvJeMYeitg" message="" severity="INFO">
    <ruleId>CONF-438</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_KDDesFZiEeCvPvJeMYeitg" severity="INFO">
    <ruleId>CONF-439</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_LIYIAFZiEeCvPvJeMYeitg">
    <ruleId>CONF-440</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_MFOx0FZiEeCvPvJeMYeitg" severity="INFO">
    <ruleId>CONF-442</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_NA5I0FZiEeCvPvJeMYeitg">
    <ruleId>CONF-447</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_OAkdIFZiEeCvPvJeMYeitg" severity="INFO">
    <ruleId>CONF-448</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_O7yIMFZiEeCvPvJeMYeitg" severity="WARNING">
    <ruleId>CONF-452</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_3ZQ8QKPTEd6t_4WfM070fA" base_Class="_o9nLAKPTEd6t_4WfM070fA" templateId="2.16.840.1.113883.10.20.1.10" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_iPutgMJuEd6-XpBv2uxYrQ" base_Class="_azWbgMJuEd6-XpBv2uxYrQ" templateId="2.16.840.1.113883.10.20.1.25" assigningAuthorityName="CCD" contextDependent="true">
    <ruleId>CONF-485</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_vjW6EDHoEd-saqiXO4OYhQ" base_Class="_7I79cDHlEd-saqiXO4OYhQ" templateId="2.16.840.1.113883.10.20.1.25" assigningAuthorityName="" contextDependent="true">
    <ruleId>CONF-485</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_DLmsADHpEd-saqiXO4OYhQ" base_Class="_EGZnsDHmEd-saqiXO4OYhQ" templateId="2.16.840.1.113883.10.20.1.25" contextDependent="true">
    <ruleId>CONF-485</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_SoR_8DHqEd-saqiXO4OYhQ" base_Class="_1z0WEDHpEd-saqiXO4OYhQ" templateId="2.16.840.1.113883.10.20.1.25" assigningAuthorityName="" contextDependent="true">
    <ruleId>CONF-485</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_TShPwDHqEd-saqiXO4OYhQ" base_Class="_9Yav8DHpEd-saqiXO4OYhQ" templateId="2.16.840.1.113883.10.20.1.25" contextDependent="true">
    <ruleId>CONF-485</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_UevyUDHqEd-saqiXO4OYhQ" base_Class="_A9YrgDHqEd-saqiXO4OYhQ" templateId="2.16.840.1.113883.10.20.1.25" contextDependent="true">
    <ruleId>CONF-485</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_FXkugAcQEeG7RIZ2nvEt0A" base_Constraint="_QLZmcDHtEd-saqiXO4OYhQ">
    <ruleId>CONF-488</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_GvT9gAcQEeG7RIZ2nvEt0A" base_Constraint="_PNzgUDHuEd-saqiXO4OYhQ">
    <ruleId>CONF-490</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_IagUAAcQEeG7RIZ2nvEt0A" base_Constraint="_rXlD4DHtEd-saqiXO4OYhQ">
    <ruleId>CONF-488</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Kwi-UAcQEeG7RIZ2nvEt0A" base_Constraint="_v3_UADHtEd-saqiXO4OYhQ">
    <ruleId>CONF-488</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_MdmWAAcQEeG7RIZ2nvEt0A" base_Constraint="_4p844DHtEd-saqiXO4OYhQ">
    <ruleId>CONF-489</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_OOvjgAcQEeG7RIZ2nvEt0A" base_Constraint="_CMr98DHvEd-saqiXO4OYhQ">
    <ruleId>CONF-489</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_fE-NwKPaEd6t_4WfM070fA" base_Class="_GKpeMKPaEd6t_4WfM070fA" templateId="2.16.840.1.113883.10.20.1.16" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_3x-SYK3zEd6_ioDelDcPPg" base_Class="_wN4O0K3zEd6_ioDelDcPPg" templateId="2.16.840.1.113883.10.20.1.35" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_OPvBsBtJEd-vGNAsDUJvgw" base_Constraint="_MpjHABtJEd-vGNAsDUJvgw">
    <ruleId>CONF-387</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_HqLvADPVEeCrbMDN9vkyXg" base_Generalization="_1CKdMK3zEd6_ioDelDcPPg">
    <ruleId>CONF-386</ruleId>
  </CDA:ConformsTo>
  <CDA:CDATemplate xmi:id="_CJFbUKPcEd6t_4WfM070fA" base_Class="_5hfTYKPbEd6t_4WfM070fA" templateId="2.16.840.1.113883.10.20.1.7" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_Mlc3EKPdEd6t_4WfM070fA" base_Class="_GoctIKPdEd6t_4WfM070fA" templateId="2.16.840.1.113883.10.20.1.5" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="__9ENIHfpEd-6wJLq2P_7OA" severity="WARNING" base_Constraint="_2CeMQHfpEd-6wJLq2P_7OA">
    <ruleId>CONF-123</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_F2528MgnEeCHk-lvWGDTdA" base_Constraint="_CX4yYMgnEeCHk-lvWGDTdA">
    <ruleId>CONF-128</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_hpWDIMgnEeCHk-lvWGDTdA" severity="INFO" base_Constraint="_dO-JkMgnEeCHk-lvWGDTdA">
    <ruleId>CONF-129</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_RKYnQMgwEeCHk-lvWGDTdA" severity="INFO" base_Constraint="_NfOkIMgwEeCHk-lvWGDTdA">
    <ruleId>CONF-134</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_X5tmAMgwEeCHk-lvWGDTdA" severity="INFO" base_Constraint="_Uhno0MgwEeCHk-lvWGDTdA">
    <ruleId>CONF-135</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_tRnXsMgwEeCHk-lvWGDTdA" base_Constraint="_oEXPsMgwEeCHk-lvWGDTdA">
    <ruleId>CONF-137</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_toSLQMgwEeCHk-lvWGDTdA" base_Constraint="_kzswMMgwEeCHk-lvWGDTdA">
    <ruleId>CONF-136</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_aeLE8KPeEd6t_4WfM070fA" base_Class="_NvRwcKPeEd6t_4WfM070fA" templateId="2.16.840.1.113883.10.20.1.1" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_0DoSIMJcEd6-XpBv2uxYrQ" base_Class="_mEuuUMJcEd6-XpBv2uxYrQ" templateId="2.16.840.1.113883.10.20.1.17" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_dkV2EMJmEd6-XpBv2uxYrQ" base_Class="_Wj-KoMJmEd6-XpBv2uxYrQ" templateId="2.16.840.1.113883.10.20.1.37" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_Rg0H4MJoEd6-XpBv2uxYrQ" base_Class="_KIDxoMJoEd6-XpBv2uxYrQ" templateId="2.16.840.1.113883.10.20.1.58" assigningAuthorityName="CCD">
    <ruleId>CONF-92</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_eBXeYMzeEeCvbrjDQpuvkw" severity="INFO" base_Constraint="_WTcJYMzeEeCvbrjDQpuvkw">
    <ruleId>CONF-90</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_mqWtcMzeEeCvbrjDQpuvkw" severity="WARNING" base_Constraint="_fFDwAMzeEeCvbrjDQpuvkw">
    <ruleId>CONF-91</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_Q7BjYAbrEeGhIchBK31weg" base_Generalization="_yg57IMJcEd6-XpBv2uxYrQ">
    <ruleId>CONF-82</ruleId>
  </CDA:ConformsTo>
  <CDA:ConformsTo xmi:id="_ikPx8AbtEeGhIchBK31weg" base_Generalization="_aQb1UMJmEd6-XpBv2uxYrQ">
    <ruleId>CONF-99</ruleId>
  </CDA:ConformsTo>
  <CDA:CDATemplate xmi:id="_fhWq8KPeEd6t_4WfM070fA" base_Class="_T79VIKPeEd6t_4WfM070fA" templateId="2.16.840.1.113883.10.20.1.9" assigningAuthorityName="CCD">
    <ruleId>CONF-30</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_B1D5UMJrEd6-XpBv2uxYrQ" base_Class="_4A1mMMJqEd6-XpBv2uxYrQ" templateId="2.16.840.1.113883.10.20.1.20" assigningAuthorityName="CCD">
    <ruleId>CONF-35</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_EdPcgMJrEd6-XpBv2uxYrQ" base_Class="_6M-toMJqEd6-XpBv2uxYrQ" templateId="2.16.840.1.113883.10.20.1.26" assigningAuthorityName="CCD">
    <ruleId>CONF-48</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_G4uAcMJrEd6-XpBv2uxYrQ" base_Class="_8LwHcMJqEd6-XpBv2uxYrQ" templateId="2.16.840.1.113883.10.20.1.19" assigningAuthorityName="CCD">
    <ruleId>CONF-69</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_A3ZxsHmbEd-pnJdGZX6q4Q" base_Constraint="_AE4IkHmbEd-pnJdGZX6q4Q">
    <ruleId>CONF-47</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_nqxUsHmbEd-pnJdGZX6q4Q" severity="INFO" base_Constraint="_d2ohIHmbEd-pnJdGZX6q4Q">
    <ruleId>CONF-44</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_GLS6gHoaEd-pnJdGZX6q4Q" base_Constraint="_4AN74HoZEd-pnJdGZX6q4Q">
    <ruleId>CONF-58</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_DJ0CUHohEd-OuuwcsTsBUQ" severity="INFO" base_Constraint="_Abok0HohEd-OuuwcsTsBUQ">
    <ruleId>CONF-62</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_sqEz8HoiEd-OuuwcsTsBUQ" base_Constraint="_WzIV0HoiEd-OuuwcsTsBUQ">
    <ruleId>CONF-56</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_1IF6YHooEd-OuuwcsTsBUQ" severity="INFO" base_Constraint="_qbNg8HooEd-OuuwcsTsBUQ">
    <ruleId>CONF-63</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_NrAPgHopEd-OuuwcsTsBUQ" severity="INFO" base_Constraint="_LGvjAHopEd-OuuwcsTsBUQ">
    <ruleId>CONF-65</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_vcDEIHpVEd-OuuwcsTsBUQ" base_Constraint="_tMMhYHpVEd-OuuwcsTsBUQ">
    <ruleId>CONF-66</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_AbDtgHpXEd-OuuwcsTsBUQ" base_Constraint="_3qtSMHpWEd-OuuwcsTsBUQ">
    <ruleId>CONF-67</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ms3wkM88EeCn2rsjYxSTZw"/>
  <CDA:ConstraintValidation xmi:id="_nPrisM88EeCn2rsjYxSTZw" base_Constraint="_X--_0M88EeCn2rsjYxSTZw">
    <ruleId>CONF-74</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_nvqqUM88EeCn2rsjYxSTZw" base_Constraint="_fvu_UM88EeCn2rsjYxSTZw">
    <ruleId>CONF-75</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_oIXeMM88EeCn2rsjYxSTZw" severity="INFO" base_Constraint="_lE34AM88EeCn2rsjYxSTZw">
    <ruleId>CONF-76</ruleId>
  </CDA:ConstraintValidation>
  <Ecore:EPackage xmi:id="__Ui9YC8uEeKnd4bldEC3WA" base_Package="_qQyD8jxVEd6JwqSGecoePg" packageName="ccd" nsPrefix="ccd" nsURI="http://www.openhealthtools.org/mdht/uml/cda/ccd" basePackage="org.openhealthtools.mdht.uml.cda" prefix="CCD">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.ccd'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation registryDelegate='CCDRegistryDelegate'</annotation>
  </Ecore:EPackage>
  <Ecore:EClass xmi:id="__UkykC8uEeKnd4bldEC3WA" base_Class="_OvmR4HfUEd6ZeOKq_2_a9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationsSectionTemplateId MedicationsSectionCode MedicationsSectionTitle MedicationsSectionText' templateId.root='2.16.840.1.113883.10.20.1.8' constraints.validation.warning='MedicationsSectionHasMedicationOrSupplyActivity MedicationsSectionMedicationActivity MedicationsSectionSupplyActivity' code.code='10160-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of medication use'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__UsuYC8uEeKnd4bldEC3WA" base_Class="_Ze7UsGESEd69D7zx7EkLMA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ContinuityOfCareDocumentTemplateId ContinuityOfCareDocumentServiceEventRequired ContinuityOfCareDocumentServiceEventClassCode ContinuityOfCareDocumentServiceEventEffectiveTime ContinuityOfCareDocumentLanguageCodeFormat ContinuityOfCareDocumentNoTemplateIdExtension ContinuityOfCareDocumentHasEffectiveTimeSeconds ContinuityOfCareDocumentHasEffectiveTimeZone ContinuityOfCareDocumentOneOrTwoRecordTarget ContinuityOfCareDocumentHasAssignedAuthorNullFlavor ContinuityOfCareDocumentCode ContinuityOfCareDocumentLanguageCode' templateId.root='2.16.840.1.113883.10.20.1' constraints.validation.warning='ContinuityOfCareDocumentHasAssignedAuthor ContinuityOfCareDocumentProblemSection ContinuityOfCareDocumentFamilyHistorySection ContinuityOfCareDocumentSocialHistorySection ContinuityOfCareDocumentAlertsSection ContinuityOfCareDocumentMedicationsSection ContinuityOfCareDocumentResultsSection ContinuityOfCareDocumentProceduresSection ContinuityOfCareDocumentEncountersSection ContinuityOfCareDocumentPlanOfCareSection ContinuityOfCareDocumentImmunizationsSection ContinuityOfCareDocumentVitalSignsSection ContinuityOfCareDocumentMedicalEquipmentSection ContinuityOfCareDocumentFunctionalStatusSection ContinuityOfCareDocumentAdvanceDirectivesSection ContinuityOfCareDocumentPayersSection' constraints.validation.info='ContinuityOfCareDocumentHasInformationRecipient ContinuityOfCareDocumentPurposeSection' code.code='34133-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Summarization of episode note'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__U6w0C8uEeKnd4bldEC3WA" base_Class="_GgvgUDxbEd6JwqSGecoePg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemActTemplateId ProblemActEntryRelationshipRequired ProblemActClassCode ProblemActMoodCode ProblemActId ProblemActCodeNullFlavor' templateId.root='2.16.840.1.113883.10.20.1.27' constraints.validation.warning='ProblemActSubjectOfTarget ProblemActContainsProblemObservation ProblemActContainsAlertObservation' constraints.validation.info='ProblemActContainsPatientAwareness ProblemActEffectiveTime ProblemActEpisodeObservation' classCode='ACT' moodCode='EVN' code.nullFlavor='NA'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__VGXAC8uEeKnd4bldEC3WA" base_Class="_IjIO0DxbEd6JwqSGecoePg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemObservationTemplateId ProblemObservationInformationSource ProblemObservationMoodCode ProblemObservationStatusCode' templateId.root='2.16.840.1.113883.10.20.1.28' constraints.validation.info='ProblemObservationContainsPatientAwareness ProblemObservationProblemStatus ProblemObservationProblemHealthStatus ProblemObservationAgeObservation' classCode='OBS' moodCode='EVN' statusCode.code='completed' constraints.validation.warning='ProblemObservationEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__VQIAC8uEeKnd4bldEC3WA" base_Class="_vjPMEGaGEd6Hk_bPOfEjYA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemSectionTemplateId ProblemSectionCode ProblemSectionTitle ProblemSectionText' templateId.root='2.16.840.1.113883.10.20.1.11' code.code='11450-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Problem list' constraints.validation.warning='ProblemSectionProblemAct'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__VXcwC8uEeKnd4bldEC3WA" base_Class="_TrwngGaJEd6Hk_bPOfEjYA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemStatusObservationTemplateId' templateId.root='2.16.840.1.113883.10.20.1.50'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__VagEC8uEeKnd4bldEC3WA" base_Class="_T6kfkGaJEd6Hk_bPOfEjYA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemHealthStatusObservationTemplateId ProblemHealthStatusObservationCode' templateId.root='2.16.840.1.113883.10.20.1.51' code.code='11323-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Health status'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__Vf_oC8uEeKnd4bldEC3WA" base_Class="_AwcXkGaKEd6Hk_bPOfEjYA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EpisodeObservationTemplateId EpisodeObservationOneEntryRelationshipSUBJ EpisodeObservationClassCode EpisodeObservationMoodCode EpisodeObservationStatusCode' templateId.root='2.16.840.1.113883.10.20.1.41' constraints.validation.info='EpisodeObservationExistsEntryRelationshipSAS' classCode='OBS' moodCode='EVN' statusCode.code='completed' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' constraints.validation.warning='EpisodeObservationCode EpisodeObservationValue' value.code='404684003' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' value.displayName='Clinical finding'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__V0vwC8uEeKnd4bldEC3WA" base_Class="_3cYVwGaKEd6Hk_bPOfEjYA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientAwarenessTemplateId PatientAwarenessParticipantRoleId PatientAwarenessTypeCode PatientAwarenessAwarenessCode' templateId.root='2.16.840.1.113883.10.20.1.48' typeCode='SBJ'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__V5oQC8uEeKnd4bldEC3WA" base_Class="_7tlrAGwWEd6q29qQGU-SBA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FamilyHistoryObservationTemplateId FamilyHistoryObservationHasSubjectPatientRelationship FamilyHistoryObservationRelationshipValueCode FamilyHistoryObservationHasRelatedSubjectCode FamilyHistoryObservationId FamilyHistoryObservationStatusCode FamilyHistoryObservationMoodCode' templateId.root='2.16.840.1.113883.10.20.1.22' constraints.validation.warning='FamilyHistoryObservationRelatedSubjectCodeValueSet FamilyHistoryObservationHasRelatedSubjectSubject FamilyHistoryObservationHasGenderCode FamilyHistoryObservationRelatedSubjectBirthTime FamilyHistoryObservationEffectiveTime' statusCode.code='completed' moodCode='EVN' constraints.validation.info='FamilyHistoryObservationAgeObservation FamilyHistoryObservationProblemStatusObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__WI40C8uEeKnd4bldEC3WA" base_Class="_9QFYgGwWEd6q29qQGU-SBA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FamilyHistoryOrganizerTemplateId FamilyHistoryOrganizerHasComponent FamilyHistoryOrganizerHasSubject FamilyHistoryOrganizerHasSubjectPatientRelationship FamilyHistoryOrganizerRelationshipValueCode FamilyHistoryOrganizerHasRelatedSubjectCode FamilyHistoryOrganizerStatusCode FamilyHistoryOrganizerClassCode FamilyHistoryOrganizerMoodCode' templateId.root='2.16.840.1.113883.10.20.1.23' constraints.validation.warning='FamilyHistoryOrganizerHasFamilyHistoryObservation FamilyHistoryOrganizerRelatedSubjectCodeValueSet FamilyHistoryOrganizerHasRelatedSubjectSubject FamilyHistoryOrganizerHasGenderCode FamilyHistoryOrganizerRelatedSubjectBirthTime FamilyHistoryOrganizerFamilyHistoryObservation' statusCode.code='completed' classCode='CLUSTER' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__WVtIC8uEeKnd4bldEC3WA" base_Class="_5ET7oGwWEd6q29qQGU-SBA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FamilyHistorySectionTemplateId FamilyHistorySectionNoSubject FamilyHistorySectionCode FamilyHistorySectionTitle FamilyHistorySectionText' templateId.root='2.16.840.1.113883.10.20.1.4' constraints.validation.warning='FamilyHistorySectionFamilyHistoryObsOrgs' code.code='10157-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of family member diseases' constraints.validation.info='FamilyHistorySectionFamilyHistoryOrganizer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__Wdo8C8uEeKnd4bldEC3WA" base_Class="_Ht_RsHDAEd6eItyqb1FoWg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultOrganizerTemplateId ResultOrganizerComponentElement ResultOrganizerInformationSource ResultOrganizerMoodCode ResultOrganizerId ResultOrganizerCode ResultOrganizerStatusCode ResultOrganizerResultObservation' templateId.root='2.16.840.1.113883.10.20.1.32' constraints.validation.warning='ResultOrganizerCodeValue ResultOrganizerSpecimen' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__Wmy4C8uEeKnd4bldEC3WA" base_Class="_MQHZEHDAEd6eItyqb1FoWg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultObservationTemplateId ResultObservationNoObservationRangeCode ResultObservationInformationSource ResultObservationMoodCode ResultObservationId ResultObservationStatusCode ResultObservationCode ResultObservationValue' templateId.root='2.16.840.1.113883.10.20.1.31' constraints.validation.warning='ResultObservationCodeValue ResultObservationReferenceRangeRequired ResultObservationEffectiveTime ResultObservationInterpretationCode' classCode='OBS' moodCode='EVN' constraints.validation.info='ResultObservationMethodCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__W01UC8uEeKnd4bldEC3WA" base_Class="_UOVM0HDAEd6eItyqb1FoWg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SocialHistorySectionTemplateId SocialHistorySectionCode SocialHistorySectionTitle SocialHistorySectionText' templateId.root='2.16.840.1.113883.10.20.1.15' constraints.validation.warning='SocialHistorySectionMaritalStatus SocialHistorySectionReligiousAffiliation SocialHistorySectionPatientRace SocialHistorySectionPatientEthnicity SocialHistorySectionSocialHistoryObservation' constraints.validation.info='SocialHistorySectionPatientRaceCodeSystem SocialHistorySectionPatientEthnicityCodeSystem' code.code='29762-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Social history'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__XPsEC8uEeKnd4bldEC3WA" base_Class="_Wa2uwHDAEd6eItyqb1FoWg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SocialHistoryObservationTemplateId SocialHistoryObservationClassCode SocialHistoryObservationId SocialHistoryObservationMoodCode SocialHistoryObservationStatusCode' templateId.root='2.16.840.1.113883.10.20.1.33' constraints.validation.warning='SocialHistoryObservationCodeValueSet' classCode='OBS' moodCode='EVN' statusCode.code='completed' constraints.validation.info='SocialHistoryObservationSocialHistoryStatusObservation SocialHistoryObservationEpisodeObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__XeVkC8uEeKnd4bldEC3WA" base_Class="_rJDcIHDAEd6eItyqb1FoWg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EncountersSectionTemplateId EncountersSectionCode EncountersSectionTitle EncountersSectionText' templateId.root='2.16.840.1.113883.10.20.1.3' code.code='46240-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of encounters' constraints.validation.warning='EncountersSectionEncountersActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__XlDQC8uEeKnd4bldEC3WA" base_Class="_CinbMHDPEd6eItyqb1FoWg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ImmunizationsSectionTemplateId ImmunizationsSectionCode ImmunizationsSectionTitle ImmunizationsSectionText' templateId.root='2.16.840.1.113883.10.20.1.6' constraints.validation.warning='ImmunizationsSectionHasMedicationOrSupplyActivity ImmunizationsSectionMedicationActivity ImmunizationsSectionSupplyActivity' code.code='11369-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of immunizations'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__Xs_EC8uEeKnd4bldEC3WA" base_Class="_mO8KEHJWEd6cacuAk5qrhg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EncountersActivityTemplateId EncountersActivityClassCode EncountersActivityMoodCode EncountersActivityId' templateId.root='2.16.840.1.113883.10.20.1.21' constraints.validation.info='EncountersActivityHasIndications EncountersActivityHasPractitioners EncountersActivityPractitionerRole EncountersActivityEffectiveTime EncountersActivityPatientInstruction EncountersActivityAgeObservation EncountersActivityEncounterLocation' classCode='ENC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__X3XIC8uEeKnd4bldEC3WA" base_Class="_W6aMoHfTEd6ZeOKq_2_a9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationActivityTemplateId MedicationActivityMoodCode MedicationActivityInformationSource MedicationActivityHasReasonProblem MedicationActivityHasProduct MedicationActivityId' templateId.root='2.16.840.1.113883.10.20.1.24' constraints.validation.warning='MedicationActivityHasDoseQuantityOrRateQuantity MedicationActivityStatusCode MedicationActivityEffectiveTime MedicationActivityRouteCode MedicationActivityDoseQuantity MedicationActivityRateQuantity' constraints.validation.info='MedicationActivityHasConsents MedicationActivityHasPreconditionCriterion MedicationActivityHasReason MedicationActivityMaxDoseQuantity MedicationActivityMedicationSeriesNumberObservation MedicationActivityMedicationStatusObservation MedicationActivityPatientInstruction MedicationActivityPerformer MedicationActivityReactionObservation MedicationActivityProductInstance' routeCode.codeSystem='2.16.840.1.113883.5.112' routeCode.codeSystemName='HL7 RouteOfAdministration'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__YHOwC8uEeKnd4bldEC3WA" base_Class="_dAAnAHfVEd6ZeOKq_2_a9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SupplyActivityTemplateId SupplyActivityMoodCode SupplyActivityInformationSource SupplyActivityId' templateId.root='2.16.840.1.113883.10.20.1.34' constraints.validation.info='SupplyActivityHasAuthor SupplyActivityHasPerformer SupplyActivityHasParticipantLocation SupplyActivityHasProduct SupplyActivityQuantity SupplyActivityRepeatNumber SupplyActivityMedicationStatusObservation SupplyActivityFulfillmentInstruction SupplyActivityProductInstance' constraints.validation.warning='SupplyActivityStatusCode SupplyActivityEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__YSN4C8uEeKnd4bldEC3WA" base_Class="_PgsSAHrREd68l9lQ-TLEBQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AlertsSectionTemplateId AlertsSectionCode AlertsSectionTitle AlertsSectionText' templateId.root='2.16.840.1.113883.10.20.1.2' code.code='48765-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Allergies, adverse reactions, alerts' constraints.validation.warning='AlertsSectionProblemAct'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__YZioC8uEeKnd4bldEC3WA" base_Class="_qV72IHrREd68l9lQ-TLEBQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AlertObservationTemplateId AlertObservationInformationSource AlertObservationPlayingEntityRequired AlertObservationAgentRepresentationVocab AlertObservationParticipantRoleClassCode AlertObservationPlayingEntityClassCode AlertObservationPlayingEntityCode AlertObservationMoodCode AlertObservationStatusCode' templateId.root='2.16.840.1.113883.10.20.1.18' constraints.validation.warning='AlertObservationAgentRepresentation AlertObservationPlayingEntityCodeVocab' moodCode='EVN' statusCode.code='completed' constraints.validation.info='AlertObservationEffectiveTime AlertObservationAlertStatusObservation AlertObservationReactionObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__Y6gAC8uEeKnd4bldEC3WA" base_Class="__XC4cHrREd68l9lQ-TLEBQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReactionObservationTemplateId ReactionObservationReactionInterventionTypeCode ReactionObservationClassCode ReactionObservationMoodCode ReactionObservationStatusCode' templateId.root='2.16.840.1.113883.10.20.1.54' constraints.validation.info='ReactionObservationHasReactionIntervention ReactionObservationReactionInterventionType ReactionObservationSeverityObservation' classCode='OBS' moodCode='EVN' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__ZDp8C8uEeKnd4bldEC3WA" base_Class="_ILkpIHrSEd68l9lQ-TLEBQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SeverityObservationTemplateId SeverityObservationClassCode SeverityObservationMoodCode SeverityObservationCode SeverityObservationStatusCode SeverityObservationValue' templateId.root='2.16.840.1.113883.10.20.1.55' classCode='OBS' moodCode='EVN' code.code='SEV' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Severity observation' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="__ZOpEC8uEeKnd4bldEC3WA" base_Generalization="_b0MZEHrTEd68l9lQ-TLEBQ"/>
  <Ecore:EClass xmi:id="__ZPQIC8uEeKnd4bldEC3WA" base_Class="_e8n_EHrSEd68l9lQ-TLEBQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AlertStatusObservationTemplateId' templateId.root='2.16.840.1.113883.10.20.1.39'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__ZRsYS8uEeKnd4bldEC3WA" base_Class="_V3Jy4HrTEd68l9lQ-TLEBQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='StatusObservationTemplateId StatusObservationTargetOfEntryRelationship StatusObservationNoAdditionalParticipants StatusObservationNoAdditionalRelationships StatusObservationClassCode StatusObservationMoodCode StatusObservationCode StatusObservationStatusCode StatusObservationValue' templateId.root='2.16.840.1.113883.10.20.1.57' classCode='OBS' moodCode='EVN' code.code='33999-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Status' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__ZegsC8uEeKnd4bldEC3WA" base_Class="_joG2YIHbEd6Ncrr6L3Ublw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CauseOfDeathObservationTemplateId' templateId.root='2.16.840.1.113883.10.20.1.42'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__Zfu0C8uEeKnd4bldEC3WA" base_Class="_7TVToIiAEd66cKocspyVOg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultsSectionTemplateId ResultsSectionCode ResultsSectionTitle ResultsSectionText' templateId.root='2.16.840.1.113883.10.20.1.14' code.code='30954-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Relevant diagnostic tests and/or laboratory data' constraints.validation.warning='ResultsSectionResultOrganizer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__ZnDkC8uEeKnd4bldEC3WA" base_Class="_VL2w0IiBEd66cKocspyVOg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationSeriesNumberObservationTemplateId MedicationSeriesNumberObservationClassCode MedicationSeriesNumberObservationMoodCode MedicationSeriesNumberObservationStatusCode MedicationSeriesNumberObservationCode MedicationSeriesNumberObservationValue' templateId.root='2.16.840.1.113883.10.20.1.46' classCode='OBS' moodCode='EVN' code.code='30973-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dose number'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__Zw0kC8uEeKnd4bldEC3WA" base_Class="_lgLT4IiBEd66cKocspyVOg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationStatusObservationTemplateId' templateId.root='2.16.840.1.113883.10.20.1.47'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__ZzQ0C8uEeKnd4bldEC3WA" base_Class="_2QJRIIiBEd66cKocspyVOg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EncounterLocationTemplateId EncounterLocationHasParticipantRole EncounterLocationHasParticipantRoleLocation EncounterLocationHasPlayingEntityPlace EncounterLocationTypeCode' templateId.root='2.16.840.1.113883.10.20.1.45' constraints.validation.info='EncounterLocationHasParticipantRoleCode EncounterLocationHasPlayingEntity' constraints.validation.warning='EncounterLocationHasParticipantRoleCodeVocab' typeCode='LOC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__Z4wYS8uEeKnd4bldEC3WA" base_Class="_8Xj7UIiBEd66cKocspyVOg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProductTemplateId ProductHasMaterial ProductHasMaterialCode ProductHasMaterialCodeOriginalText' templateId.root='2.16.840.1.113883.10.20.1.53' constraints.validation.warning='ProductHasMaterialCodeVocab ProductShouldHaveMaterialManufacturer' constraints.validation.info='ProductHasMaterialName ProductMayHaveMaterialManufacturer ProductId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__aEWkC8uEeKnd4bldEC3WA" base_Class="_p_LEwIjvEd66cKocspyVOg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProceduresSectionTemplateId ProceduresSectionCode ProceduresSectionTitle ProceduresSectionText' templateId.root='2.16.840.1.113883.10.20.1.12' constraints.validation.warning='ProceduresSectionHasProcedureActivity' code.code='47519-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of procedures'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__aVcUi8uEeKnd4bldEC3WA" base_Class="_o9nLAKPTEd6t_4WfM070fA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareSectionTemplateId PlanOfCareSectionCode PlanOfCareSectionTitle PlanOfCareSectionText' templateId.root='2.16.840.1.113883.10.20.1.10' code.code='18776-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Treatment plan' constraints.validation.info='PlanOfCareSectionPlanOfCareActivityAct PlanOfCareSectionPlanOfCareActivityEncounter PlanOfCareSectionPlanOfCareActivityObservation PlanOfCareSectionPlanOfCareActivityProcedure PlanOfCareSectionPlanOfCareActivitySubstanceAdministration PlanOfCareSectionPlanOfCareActivitySupply'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__afNUC8uEeKnd4bldEC3WA" base_Class="_GKpeMKPaEd6t_4WfM070fA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignsSectionTemplateId VitalSignsSectionCode VitalSignsSectionTitle VitalSignsSectionText' templateId.root='2.16.840.1.113883.10.20.1.16' code.code='8716-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Vital signs' constraints.validation.warning='VitalSignsSectionVitalSignsOrganizer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__anwMC8uEeKnd4bldEC3WA" base_Class="_5hfTYKPbEd6t_4WfM070fA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicalEquipmentSectionTemplateId MedicalEquipmentSectionCode MedicalEquipmentSectionTitle MedicalEquipmentSectionText' templateId.root='2.16.840.1.113883.10.20.1.7' code.code='46264-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of medical device use' constraints.validation.warning='MedicalEquipmentSectionSupplyActivity' constraints.validation.info='MedicalEquipmentSectionMedicationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__avE8C8uEeKnd4bldEC3WA" base_Class="_GoctIKPdEd6t_4WfM070fA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FunctionalStatusSectionTemplateId FunctionalStatusSectionObservationCode FunctionalStatusSectionProblemStatusObservation FunctionalStatusSectionResultStatusObservation FunctionalStatusSectionCode FunctionalStatusSectionTitle FunctionalStatusSectionText' templateId.root='2.16.840.1.113883.10.20.1.5' constraints.validation.warning='FunctionalStatusSectionClinicalStatements' constraints.validation.info='FunctionalStatusSectionObservationCodeValueSet FunctionalStatusSectionValueDatatype FunctionalStatusSectionIcfCodeSystem' code.code='47420-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Functional status assessment'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__a7SMS8uEeKnd4bldEC3WA" base_Class="_NvRwcKPeEd6t_4WfM070fA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectivesSectionTemplateId AdvanceDirectivesSectionCode AdvanceDirectivesSectionTitle AdvanceDirectivesSectionText AdvanceDirectivesSectionAdvanceDirectiveObservation' templateId.root='2.16.840.1.113883.10.20.1.1' code.code='42348-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Advance directives'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__bB_4C8uEeKnd4bldEC3WA" base_Class="_T79VIKPeEd6t_4WfM070fA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PayersSectionTemplateId PayersSectionCode PayersSectionTitle PayersSectionText' templateId.root='2.16.840.1.113883.10.20.1.9' code.code='48768-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Payment sources' constraints.validation.warning='PayersSectionCoverageActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__bLJ0C8uEeKnd4bldEC3WA" base_Class="_f0mKEKRtEd6t_4WfM070fA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PurposeSectionTemplateId PurposeSectionCode PurposeSectionTitle PurposeSectionText' templateId.root='2.16.840.1.113883.10.20.1.13' code.code='48764-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Summary purpose' constraints.validation.warning='PurposeSectionPurposeActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__bSekC8uEeKnd4bldEC3WA" base_Class="_rrtFgKRuEd6t_4WfM070fA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PurposeActivityTemplateId PurposeActivityHasReason PurposeActivityReasonType PurposeActivityClassCode PurposeActivityMoodCode PurposeActivityCode PurposeActivityStatusCode' templateId.root='2.16.840.1.113883.10.20.1.30' classCode='ACT' moodCode='EVN' code.code='23745001' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Documentation procedure' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__beEwC8uEeKnd4bldEC3WA" base_Class="_wN4O0K3zEd6_ioDelDcPPg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignsOrganizerTemplateId VitalSignsOrganizerInformationSource' templateId.root='2.16.840.1.113883.10.20.1.35'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__bkycC8uEeKnd4bldEC3WA" base_Class="_mEuuUMJcEd6-XpBv2uxYrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectiveObservationTemplateId AdvanceDirectiveObservationClassCode AdvanceDirectiveObservationMoodCode AdvanceDirectiveObservationId AdvanceDirectiveObservationStatusCode AdvanceDirectiveObservationCode AdvanceDirectiveObservationAdvanceDirectiveStatusObservation' templateId.root='2.16.840.1.113883.10.20.1.17' constraints.validation.info='AdvanceDirectiveObservationAdvDirectiveCodeValueSet AdvanceDirectiveObservationAdvanceDirectiveVerification AdvanceDirectiveObservationAdvanceDirectiveReference' constraints.validation.warning='AdvanceDirectiveObservationAdvDirectiveCodeCodeSystem AdvanceDirectiveObservationEffectiveTime' classCode='OBS' moodCode='EVN' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__dRbkC8uEeKnd4bldEC3WA" base_Class="_Wj-KoMJmEd6-XpBv2uxYrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectiveStatusObservationTemplateId' templateId.root='2.16.840.1.113883.10.20.1.37'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__dT30C8uEeKnd4bldEC3WA" base_Class="_KIDxoMJoEd6-XpBv2uxYrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectiveVerificationTemplateId AdvanceDirectiveVerificationTypeCode' templateId.root='2.16.840.1.113883.10.20.1.58' typeCode='VRF' constraints.validation.warning='AdvanceDirectiveVerificationTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__dYwUi8uEeKnd4bldEC3WA" base_Class="_4A1mMMJqEd6-XpBv2uxYrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CoverageActivityTemplateId CoverageActivityInformationSource CoverageActivityClassCode CoverageActivityMoodCode CoverageActivityId CoverageActivityStatusCode CoverageActivityCode CoverageActivityPolicyActivity' templateId.root='2.16.840.1.113883.10.20.1.20' constraints.validation.info='CoverageActivitySequenceNumber' classCode='ACT' moodCode='DEF' statusCode.code='completed' code.code='48768-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Payment sources'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__djvcC8uEeKnd4bldEC3WA" base_Class="_6M-toMJqEd6-XpBv2uxYrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PolicyActivityTemplateId PolicyActivityPayerEntityIsRequired PolicyActivityCoveredPartyIsRequired PolicyActivityEntryRelationshipREFR PolicyActivityEntryRelationshipTarget PolicyActivityClassCode PolicyActivityMoodCode PolicyActivityId PolicyActivityStatusCode PolicyActivityPayerEntity PolicyActivityCoveredParty' templateId.root='2.16.840.1.113883.10.20.1.26' constraints.validation.info='PolicyActivityCoveredPartyTime PolicyActivitySubscriberIsAllowed PolicyActivitySubscriberTime PolicyActivitySubscriber' classCode='ACT' moodCode='EVN' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__dwjwC8uEeKnd4bldEC3WA" base_Class="_8LwHcMJqEd6-XpBv2uxYrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AuthorizationActivityTemplateId AuthorizationActivityEntryRelationshipTypeCode AuthorizationActivityEntryRelationshipTarget AuthorizationActivityClassCode AuthorizationActivityMoodCode AuthorizationActivityId AuthorizationActivityEntryRelationship' templateId.root='2.16.840.1.113883.10.20.1.19' constraints.validation.info='AuthorizationActivityHasPerformers' classCode='ACT' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__d3RcS8uEeKnd4bldEC3WA" base_Class="_azWbgMJuEd6-XpBv2uxYrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivityActTemplateId PlanOfCareActivityActMoodCodeValue PlanOfCareActivityActId PlanOfCareActivityActMoodCode' templateId.root='2.16.840.1.113883.10.20.1.25' contextDependent='true'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__d9_IC8uEeKnd4bldEC3WA" base_Class="_F9_RAMKAEd6-XpBv2uxYrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientInstructionTemplateId PatientInstructionMoodCode' templateId.root='2.16.840.1.113883.10.20.1.49' moodCode='INT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__eAbYC8uEeKnd4bldEC3WA" base_Class="_IuPLEMKAEd6-XpBv2uxYrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FulfillmentInstructionTemplateId FulfillmentInstructionMoodCode' templateId.root='2.16.840.1.113883.10.20.1.43' moodCode='INT'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="__eFT4C8uEeKnd4bldEC3WA" base_Generalization="_4OEQAMMREd6-XpBv2uxYrQ"/>
  <Ecore:EClass xmi:id="__eF68S8uEeKnd4bldEC3WA" base_Class="_04s2sMMREd6-XpBv2uxYrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FunctionalStatusObservationTemplateId' templateId.root='2.16.840.1.113883.10.20.1.44'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__eQ6EC8uEeKnd4bldEC3WA" base_Class="_JpjIEMMVEd6-XpBv2uxYrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProductInstanceTemplateId ProductInstanceClassCode' templateId.root='2.16.840.1.113883.10.20.1.52' constraints.validation.warning='ProductInstanceHasScopingEntity' classCode='MANU'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__ecgQC8uEeKnd4bldEC3WA" base_Class="_S7rEABZ1Ed-i6Lz80y5G5g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AgeObservationTemplateId AgeObservationClassCode AgeObservationMoodCode AgeObservationCode AgeObservationStatusCode AgeObservationValue' templateId.root='2.16.840.1.113883.10.20.1.38' classCode='OBS' moodCode='EVN' code.code='397659008' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Age' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__eoGcC8uEeKnd4bldEC3WA" base_Class="_7I79cDHlEd-saqiXO4OYhQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivityObservationTemplateId PlanOfCareActivityObservationMoodCodeValue PlanOfCareActivityObservationId PlanOfCareActivityObservationMoodCode' templateId.root='2.16.840.1.113883.10.20.1.25' contextDependent='true'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__esX4C8uEeKnd4bldEC3WA" base_Class="_EGZnsDHmEd-saqiXO4OYhQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivityEncounterTemplateId PlanOfCareActivityEncounterMoodCodeValue PlanOfCareActivityEncounterId PlanOfCareActivityEncounterMoodCode' templateId.root='2.16.840.1.113883.10.20.1.25' contextDependent='true'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__exQYC8uEeKnd4bldEC3WA" base_Class="_1z0WEDHpEd-saqiXO4OYhQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivityProcedureTemplateId PlanOfCareActivityProcedureMoodCodeValue PlanOfCareActivityProcedureId PlanOfCareActivityProcedureMoodCode' templateId.root='2.16.840.1.113883.10.20.1.25' contextDependent='true'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__e2I4C8uEeKnd4bldEC3WA" base_Class="_9Yav8DHpEd-saqiXO4OYhQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivitySubstanceAdministrationTemplateId PlanOfCareActivitySubstanceAdministrationMoodCodeValue PlanOfCareActivitySubstanceAdministrationId PlanOfCareActivitySubstanceAdministrationMoodCode' templateId.root='2.16.840.1.113883.10.20.1.25' contextDependent='true'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__e6aUC8uEeKnd4bldEC3WA" base_Class="_A9YrgDHqEd-saqiXO4OYhQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivitySupplyTemplateId PlanOfCareActivitySupplyMoodCodeValue PlanOfCareActivitySupplyId PlanOfCareActivitySupplyMoodCode' templateId.root='2.16.840.1.113883.10.20.1.25' contextDependent='true'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__fGnki8uEeKnd4bldEC3WA" base_Class="_to5TUDH6Ed-saqiXO4OYhQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureActivityActTemplateId ProcedureActivityActMoodCode ProcedureActivityActCode ProcedureActivityActId' templateId.root='2.16.840.1.113883.10.20.1.29' contextDependent='true' moodCode='EVN' constraints.validation.warning='ProcedureActivityActEffectiveTime' constraints.validation.info='ProcedureActivityActEncounterLocation ProcedureActivityActPerformer2 ProcedureActivityActProblemAct ProcedureActivityActProblemObservation ProcedureActivityActAgeObservation ProcedureActivityActMedicationActivity ProcedureActivityActPatientInstruction'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__fOjYC8uEeKnd4bldEC3WA" base_Class="_3lHE0DH6Ed-saqiXO4OYhQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureActivityObservationTemplateId ProcedureActivityObservationMoodCode ProcedureActivityObservationCode ProcedureActivityObservationId ProcedureActivityObservationStatusCode' templateId.root='2.16.840.1.113883.10.20.1.29' contextDependent='true' moodCode='EVN' constraints.validation.warning='ProcedureActivityObservationEffectiveTime' constraints.validation.info='ProcedureActivityObservationEncounterLocation ProcedureActivityObservationPerformer2 ProcedureActivityObservationProblemObservation ProcedureActivityObservationAgeObservation ProcedureActivityObservationMedicationActivity ProcedureActivityObservationPatientInstruction ProcedureActivityObservationProblemAct'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__fXGQC8uEeKnd4bldEC3WA" base_Class="_6mhnYDH6Ed-saqiXO4OYhQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureActivityProcedureTemplateId ProcedureActivityProcedureMoodCode ProcedureActivityProcedureCode ProcedureActivityProcedureId' templateId.root='2.16.840.1.113883.10.20.1.29' contextDependent='true' moodCode='EVN' constraints.validation.warning='ProcedureActivityProcedureEffectiveTime' constraints.validation.info='ProcedureActivityProcedureSpecimen ProcedureActivityProcedureEncounterLocation ProcedureActivityProcedurePerformer2 ProcedureActivityProcedureProblemObservation ProcedureActivityProcedureProblemAct ProcedureActivityProcedureAgeObservation ProcedureActivityProcedureMedicationActivity ProcedureActivityProcedurePatientInstruction'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__fkhoC8uEeKnd4bldEC3WA" base_Class="_GkCSAHoXEd-pnJdGZX6q4Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PayerEntityId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__flvwC8uEeKnd4bldEC3WA" base_Class="_JT_4MHoXEd-pnJdGZX6q4Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.warning='CoveredPartyId CoveredPartyCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__fpaIC8uEeKnd4bldEC3WA" base_Class="_E4rTsHooEd-OuuwcsTsBUQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.warning='PolicySubscriberId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__fqoQi8uEeKnd4bldEC3WA" base_Class="_4ElDYHpZEd-OuuwcsTsBUQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation classCode='ACT' constraints.validation.error='CoveragePlanDescriptionClassCode CoveragePlanDescriptionId CoveragePlanDescriptionMoodCode' moodCode='DEF'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__f0ZQC8uEeKnd4bldEC3WA" base_Class="_Hj3aYCQYEeCxCon8a79rfA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CommentTemplateId CommentClassCode CommentMoodCode CommentCode' templateId.root='2.16.840.1.113883.10.20.1.40' classCode='ACT' moodCode='EVN' code.code='48767-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Annotation comment'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__gFfAC8uEeKnd4bldEC3WA" base_Class="_mRUKcMhAEeCHk-lvWGDTdA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SocialHistoryStatusObservationTemplateId SocialHistoryStatusObservationValue' templateId.root='2.16.840.1.113883.10.20.1.56' value.codeSystem='2.16.840.1.113883.1.11.20.17' value.codeSystemName='SocialHistoryStatusCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__gSTUC8uEeKnd4bldEC3WA" base_Class="_RzqOkMziEeCvbrjDQpuvkw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectiveReferenceTemplateId AdvanceDirectiveReferenceExternalDocumentHasId AdvanceDirectiveReferenceTypeCode AdvanceDirectiveReferenceExternalDocument' templateId.root='2.16.840.1.113883.10.20.1.36' constraints.validation.info='AdvanceDirectiveReferenceHasURL AdvanceDirectiveReferenceHasMIMEType' typeCode='REFR'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="__g3iJC8uEeKnd4bldEC3WA" base_Generalization="_56aeoA_WEeG7sMwiyo3Ifw"/>
  <Ecore:EClass xmi:id="__g4JMi8uEeKnd4bldEC3WA" base_Class="_56Z3kA_WEeG7sMwiyo3Ifw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FamilyHistoryCauseOfDeathObservationTemplateId FamilyHistoryCauseOfDeathObservationCauseOfDeathObservation' templateId.root='2.16.840.1.113883.10.20.1.42'</annotation>
  </Ecore:EClass>
</xmi:XMI>
